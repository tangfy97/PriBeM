public final class org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder extends java.lang.Object
{
    private java.lang.String waveletId;
    private final java.util.List participant;
    private final java.util.List addedParticipant;
    private final java.util.List removedParticipant;
    private final java.util.List document;
    private org.waveprotocol.wave.federation.ProtocolHashedVersion version;
    private java.lang.Double lastModifiedTime;
    private java.lang.String creator;
    private java.lang.Double creationTime;

    public void <init>()
    {
        org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder r0;
        java.util.ArrayList $r1, $r2, $r3, $r4;

        r0 := @this: org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder: java.util.List participant> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder: java.util.List addedParticipant> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder: java.util.List removedParticipant> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder: java.util.List document> = $r4;

        return;
    }

    public org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder setWaveletId(java.lang.String)
    {
        org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder;

        r1 := @parameter0: java.lang.String;

        r0.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder: java.lang.String waveletId> = r1;

        return r0;
    }

    public org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder addAllParticipant(java.util.List)
    {
        org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder r0;
        java.util.List r1, $r2;

        r0 := @this: org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder: java.util.List participant>;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        return r0;
    }

    public org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder setParticipant(int, java.lang.String)
    {
        java.util.List $r2;
        int i0;
        org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder: java.util.List participant>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        return r0;
    }

    public org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder addParticipant(java.lang.String)
    {
        org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder r0;
        java.util.List $r2;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder: java.util.List participant>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder clearParticipant()
    {
        org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder r0;
        java.util.List $r1;

        r0 := @this: org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder;

        $r1 = r0.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder: java.util.List participant>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return r0;
    }

    public org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder addAllAddedParticipant(java.util.List)
    {
        org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder r0;
        java.util.List r1, $r2;

        r0 := @this: org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder: java.util.List addedParticipant>;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        return r0;
    }

    public org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder setAddedParticipant(int, java.lang.String)
    {
        java.util.List $r2;
        int i0;
        org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder: java.util.List addedParticipant>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        return r0;
    }

    public org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder addAddedParticipant(java.lang.String)
    {
        org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder r0;
        java.util.List $r2;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder: java.util.List addedParticipant>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder clearAddedParticipant()
    {
        org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder r0;
        java.util.List $r1;

        r0 := @this: org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder;

        $r1 = r0.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder: java.util.List addedParticipant>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return r0;
    }

    public org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder addAllRemovedParticipant(java.util.List)
    {
        org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder r0;
        java.util.List r1, $r2;

        r0 := @this: org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder: java.util.List removedParticipant>;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        return r0;
    }

    public org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder setRemovedParticipant(int, java.lang.String)
    {
        java.util.List $r2;
        int i0;
        org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder: java.util.List removedParticipant>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        return r0;
    }

    public org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder addRemovedParticipant(java.lang.String)
    {
        org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder r0;
        java.util.List $r2;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder: java.util.List removedParticipant>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder clearRemovedParticipant()
    {
        org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder r0;
        java.util.List $r1;

        r0 := @this: org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder;

        $r1 = r0.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder: java.util.List removedParticipant>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return r0;
    }

    public org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder addAllDocument(java.util.List)
    {
        java.util.List r0;
        java.util.Iterator $r1;
        org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder r2;
        org.waveprotocol.wave.diff.DocumentDiffSnapshot r4;
        java.lang.Object $r3;
        boolean $z0;

        r2 := @this: org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.waveprotocol.wave.diff.DocumentDiffSnapshot) $r3;

        virtualinvoke r2.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder: org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder addDocument(org.waveprotocol.wave.diff.DocumentDiffSnapshot)>(r4);

        goto label1;

     label2:
        return r2;
    }

    public org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder setDocument(int, org.waveprotocol.wave.diff.DocumentDiffSnapshot)
    {
        java.util.List $r2;
        int i0;
        org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder r0;
        org.waveprotocol.wave.diff.DocumentDiffSnapshot r1;

        r0 := @this: org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: org.waveprotocol.wave.diff.DocumentDiffSnapshot;

        $r2 = r0.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder: java.util.List document>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        return r0;
    }

    public org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder addDocument(org.waveprotocol.wave.diff.DocumentDiffSnapshot)
    {
        org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder r0;
        org.waveprotocol.wave.diff.DocumentDiffSnapshot r1;
        java.util.List $r2;

        r0 := @this: org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder;

        r1 := @parameter0: org.waveprotocol.wave.diff.DocumentDiffSnapshot;

        $r2 = r0.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder: java.util.List document>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder clearDocument()
    {
        org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder r0;
        java.util.List $r1;

        r0 := @this: org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder;

        $r1 = r0.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder: java.util.List document>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return r0;
    }

    public org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder setVersion(org.waveprotocol.wave.federation.ProtocolHashedVersion)
    {
        org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder r0;
        org.waveprotocol.wave.federation.ProtocolHashedVersion r1;

        r0 := @this: org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolHashedVersion;

        r0.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder: org.waveprotocol.wave.federation.ProtocolHashedVersion version> = r1;

        return r0;
    }

    public org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder setLastModifiedTime(double)
    {
        org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder r0;
        java.lang.Double $r1;
        double d0;

        r0 := @this: org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder;

        d0 := @parameter0: double;

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        r0.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder: java.lang.Double lastModifiedTime> = $r1;

        return r0;
    }

    public org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder setCreator(java.lang.String)
    {
        org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder;

        r1 := @parameter0: java.lang.String;

        r0.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder: java.lang.String creator> = r1;

        return r0;
    }

    public org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder setCreationTime(double)
    {
        org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder r0;
        java.lang.Double $r1;
        double d0;

        r0 := @this: org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder;

        d0 := @parameter0: double;

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        r0.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder: java.lang.Double creationTime> = $r1;

        return r0;
    }

    public org.waveprotocol.wave.diff.WaveletDiffSnapshot build(org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder$Factory)
    {
        org.waveprotocol.wave.diff.WaveletDiffSnapshot $r1;
        java.lang.Double $r9, $r11;
        org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder r2;
        java.util.List $r4, $r5, $r6, $r7;
        org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder$Factory r0;
        java.lang.String $r3, $r10;
        org.waveprotocol.wave.federation.ProtocolHashedVersion $r8;
        double $d0, $d1;

        r2 := @this: org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder;

        r0 := @parameter0: org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder$Factory;

        $r1 = interfaceinvoke r0.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder$Factory: org.waveprotocol.wave.diff.WaveletDiffSnapshot create()>();

        $r3 = r2.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder: java.lang.String waveletId>;

        interfaceinvoke $r1.<org.waveprotocol.wave.diff.WaveletDiffSnapshot: void setWaveletId(java.lang.String)>($r3);

        interfaceinvoke $r1.<org.waveprotocol.wave.diff.WaveletDiffSnapshot: void clearParticipant()>();

        $r4 = r2.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder: java.util.List participant>;

        interfaceinvoke $r1.<org.waveprotocol.wave.diff.WaveletDiffSnapshot: void addAllParticipant(java.util.List)>($r4);

        interfaceinvoke $r1.<org.waveprotocol.wave.diff.WaveletDiffSnapshot: void clearAddedParticipant()>();

        $r5 = r2.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder: java.util.List addedParticipant>;

        interfaceinvoke $r1.<org.waveprotocol.wave.diff.WaveletDiffSnapshot: void addAllAddedParticipant(java.util.List)>($r5);

        interfaceinvoke $r1.<org.waveprotocol.wave.diff.WaveletDiffSnapshot: void clearRemovedParticipant()>();

        $r6 = r2.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder: java.util.List removedParticipant>;

        interfaceinvoke $r1.<org.waveprotocol.wave.diff.WaveletDiffSnapshot: void addAllRemovedParticipant(java.util.List)>($r6);

        interfaceinvoke $r1.<org.waveprotocol.wave.diff.WaveletDiffSnapshot: void clearDocument()>();

        $r7 = r2.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder: java.util.List document>;

        interfaceinvoke $r1.<org.waveprotocol.wave.diff.WaveletDiffSnapshot: void addAllDocument(java.util.List)>($r7);

        $r8 = r2.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder: org.waveprotocol.wave.federation.ProtocolHashedVersion version>;

        interfaceinvoke $r1.<org.waveprotocol.wave.diff.WaveletDiffSnapshot: void setVersion(org.waveprotocol.wave.federation.ProtocolHashedVersion)>($r8);

        $r9 = r2.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder: java.lang.Double lastModifiedTime>;

        $d0 = virtualinvoke $r9.<java.lang.Double: double doubleValue()>();

        interfaceinvoke $r1.<org.waveprotocol.wave.diff.WaveletDiffSnapshot: void setLastModifiedTime(double)>($d0);

        $r10 = r2.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder: java.lang.String creator>;

        interfaceinvoke $r1.<org.waveprotocol.wave.diff.WaveletDiffSnapshot: void setCreator(java.lang.String)>($r10);

        $r11 = r2.<org.waveprotocol.wave.diff.WaveletDiffSnapshotBuilder: java.lang.Double creationTime>;

        $d1 = virtualinvoke $r11.<java.lang.Double: double doubleValue()>();

        interfaceinvoke $r1.<org.waveprotocol.wave.diff.WaveletDiffSnapshot: void setCreationTime(double)>($d1);

        return $r1;
    }
}
