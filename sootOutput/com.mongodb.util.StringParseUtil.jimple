public final class com.mongodb.util.StringParseUtil extends java.lang.Object
{

    public void <init>()
    {
        com.mongodb.util.StringParseUtil r0;

        r0 := @this: com.mongodb.util.StringParseUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean parseBoolean(java.lang.String, boolean)
    {
        char $c1;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String $r0, r1;
        boolean z0;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if r1 != null goto label1;

        return z0;

     label1:
        $r0 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        return z0;

     label2:
        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        $i2 = (int) $c1;

        if $i2 == 116 goto label3;

        $i3 = (int) $c1;

        if $i3 == 84 goto label3;

        $i4 = (int) $c1;

        if $i4 == 121 goto label3;

        $i5 = (int) $c1;

        if $i5 != 89 goto label4;

     label3:
        return 1;

     label4:
        $i6 = (int) $c1;

        if $i6 == 102 goto label5;

        $i7 = (int) $c1;

        if $i7 == 70 goto label5;

        $i8 = (int) $c1;

        if $i8 == 110 goto label5;

        $i9 = (int) $c1;

        if $i9 != 78 goto label6;

     label5:
        return 0;

     label6:
        return z0;
    }

    public static int parseInt(java.lang.String, int)
    {
        int i0, $i1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = staticinvoke <com.mongodb.util.StringParseUtil: int parseInt(java.lang.String,int,int[],boolean)>(r0, i0, null, 1);

        return $i1;
    }

    public static java.lang.Number parseIntRadix(java.lang.String, int)
    {
        java.lang.Double $r3, $r4, $r6;
        java.lang.Long $r2;
        int $i0, i2, $i4, i5, $i6, $i7, $i9;
        java.lang.String $r0, $r1, r7;
        char $c1, $c3;
        java.lang.Exception $r5;

        r7 := @parameter0: java.lang.String;

        i2 := @parameter1: int;

        if r7 != null goto label1;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(#NaN);

        return $r4;

     label1:
        $r0 = virtualinvoke r7.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(#NaN);

        return $r3;

     label2:
        i5 = 0;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        $i7 = (int) $c1;

        if $i7 != 45 goto label3;

        i5 = 1;

     label3:
        $i6 = virtualinvoke $r0.<java.lang.String: int length()>();

        if i5 >= $i6 goto label5;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i5);

        $i4 = staticinvoke <java.lang.Character: int digit(char,int)>($c3, i2);

        $i9 = (int) -1;

        if $i4 != $i9 goto label4;

        goto label5;

     label4:
        i5 = i5 + 1;

        goto label3;

     label5:
        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, i5);

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String,int)>($r1, i2);

     label6:
        return $r2;

     label7:
        $r5 := @caughtexception;

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(#NaN);

        return $r6;

        catch java.lang.Exception from label5 to label6 with label7;
    }

    public static int parseInt(java.lang.String, int, int[], boolean)
    {
        int[] r0;
        int $i0, $i1, $i2, $i3, $i4, i7, $i9, i10, i11, i12, $i14, $i16, $i17, $i19;
        java.lang.String $r1, $r2, r3;
        boolean z0, z1, $z2, $z3, $z5, $z6;
        char $c5, $c6, $c8;

        r3 := @parameter0: java.lang.String;

        i7 := @parameter1: int;

        r0 := @parameter2: int[];

        z1 := @parameter3: boolean;

        if r0 == null goto label01;

        $i9 = lengthof r0;

        if $i9 <= 0 goto label01;

        $z6 = 1;

        $z5 = 1;

        goto label02;

     label01:
        $z6 = 0;

        $z5 = 0;

     label02:
        z0 = $z6;

        if $z5 == 0 goto label03;

        $i14 = (int) -1;

        r0[0] = $i14;

     label03:
        if r3 != null goto label04;

        return i7;

     label04:
        $r1 = virtualinvoke r3.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label05;

        return i7;

     label05:
        $i16 = (int) -1;

        i10 = $i16;

        i11 = 0;

     label06:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i11 >= $i1 goto label08;

        $c8 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i11);

        $z3 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c8);

        if $z3 == 0 goto label07;

        i10 = i11;

        goto label08;

     label07:
        i11 = i11 + 1;

        goto label06;

     label08:
        if i10 >= 0 goto label09;

        return i7;

     label09:
        i12 = i10 + 1;

     label10:
        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i12 >= $i2 goto label11;

        $c6 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i12);

        $z2 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c6);

        if $z2 == 0 goto label11;

        i12 = i12 + 1;

        goto label10;

     label11:
        if z1 == 0 goto label12;

        if i10 <= 0 goto label12;

        $i4 = i10 - 1;

        $c5 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i4);

        $i17 = (int) $c5;

        if $i17 != 45 goto label12;

        $i19 = (int) -1;

        i10 = i10 + $i19;

     label12:
        if z0 == 0 goto label13;

        r0[0] = i12;

     label13:
        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(i10, i12);

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        return $i3;
    }

    public static java.lang.Number parseNumber(java.lang.String, java.lang.Number)
    {
        java.lang.Integer $r2;
        java.lang.Long $r3;
        boolean $z0, $z1, $z2, $z3, z4;
        java.lang.Double $r1;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i9, $i11, $i13, i17, i18, i19, $i20, $i21, $i23, $i24, $i26, $i27, $i29, $i30, $i31;
        java.lang.String $r0, r5, $r6;
        java.lang.Number r4;
        char $c5, $c7, $c8, $c10, $c12, $c14, $c15, $c16;

        r5 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Number;

        if r5 != null goto label01;

        return r4;

     label01:
        $r0 = virtualinvoke r5.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label02;

        return r4;

     label02:
        $i23 = (int) -1;

        i17 = $i23;

        i18 = 0;

     label03:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if i18 >= $i1 goto label05;

        $c16 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i18);

        $z3 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c16);

        if $z3 == 0 goto label04;

        i17 = i18;

        goto label05;

     label04:
        i18 = i18 + 1;

        goto label03;

     label05:
        if i17 >= 0 goto label06;

        return r4;

     label06:
        i19 = i17 + 1;

     label07:
        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if i19 >= $i2 goto label08;

        $c15 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i19);

        $z2 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c15);

        if $z2 == 0 goto label08;

        i19 = i19 + 1;

        goto label07;

     label08:
        z4 = 0;

        if i17 <= 0 goto label09;

        $i13 = i17 - 1;

        $c14 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i13);

        $i24 = (int) $c14;

        if $i24 != 46 goto label09;

        $i26 = (int) -1;

        i17 = i17 + $i26;

        z4 = 1;

     label09:
        if i17 <= 0 goto label10;

        $i11 = i17 - 1;

        $c12 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i11);

        $i27 = (int) $c12;

        if $i27 != 45 goto label10;

        $i29 = (int) -1;

        i17 = i17 + $i29;

     label10:
        $i20 = virtualinvoke $r0.<java.lang.String: int length()>();

        if i19 >= $i20 goto label13;

        $c8 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i19);

        $i30 = (int) $c8;

        if $i30 != 46 goto label13;

        i19 = i19 + 1;

     label11:
        $i9 = virtualinvoke $r0.<java.lang.String: int length()>();

        if i19 >= $i9 goto label12;

        $c10 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i19);

        $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c10);

        if $z1 == 0 goto label12;

        i19 = i19 + 1;

        goto label11;

     label12:
        z4 = 1;

     label13:
        $i21 = virtualinvoke $r0.<java.lang.String: int length()>();

        if i19 >= $i21 goto label16;

        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i19);

        $i31 = (int) $c5;

        if $i31 != 69 goto label16;

        i19 = i19 + 1;

     label14:
        $i6 = virtualinvoke $r0.<java.lang.String: int length()>();

        if i19 >= $i6 goto label15;

        $c7 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i19);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c7);

        if $z0 == 0 goto label15;

        i19 = i19 + 1;

        goto label14;

     label15:
        z4 = 1;

     label16:
        $r6 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(i17, i19);

        if z4 != 0 goto label17;

        $i3 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i3 <= 17 goto label18;

     label17:
        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>($r6);

        return $r1;

     label18:
        $i4 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i4 <= 10 goto label19;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r6);

        return $r3;

     label19:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r6);

        return $r2;
    }

    public static java.lang.Number parseStrict(java.lang.String)
    {
        java.lang.Integer $r3, $r10, $r11, $r22;
        byte $b20, $b21, $b22, $b23;
        java.lang.Long $r4, $r13, $r14;
        java.lang.StringBuilder $r17, $r18, $r24;
        java.lang.Double $r0, $r5, $r8, $r20, $r21;
        long $l16, $l17, $l18;
        java.lang.String $r1, $r2, $r6, $r7, $r9, $r12, $r19, r23;
        java.lang.RuntimeException $r25;
        boolean $z0, $z1, $z2;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15, $i24, $i26, $i28, $i29;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        char $c1, $c9;

        r23 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r23.<java.lang.String: int length()>();

        if $i0 != 0 goto label01;

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        return $r22;

     label01:
        $c1 = virtualinvoke r23.<java.lang.String: char charAt(int)>(0);

        $i24 = (int) $c1;

        if $i24 != 43 goto label02;

        r23 = virtualinvoke r23.<java.lang.String: java.lang.String substring(int)>(1);

     label02:
        $z0 = virtualinvoke r23.<java.lang.String: boolean matches(java.lang.String)>("(\\+|-)?Infinity");

        if $z0 == 0 goto label04;

        $z2 = virtualinvoke r23.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z2 == 0 goto label03;

        $r21 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(#-Infinity);

        return $r21;

     label03:
        $r20 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(#Infinity);

        return $r20;

     label04:
        $i2 = virtualinvoke r23.<java.lang.String: int indexOf(int)>(46);

        $i26 = (int) -1;

        if $i2 != $i26 goto label05;

        $z1 = virtualinvoke r23.<java.lang.String: boolean equals(java.lang.Object)>("-0");

        if $z1 == 0 goto label06;

     label05:
        $r0 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(r23);

        return $r0;

     label06:
        $r1 = virtualinvoke r23.<java.lang.String: java.lang.String toLowerCase()>();

        $i3 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("0x");

        $i28 = (int) -1;

        if $i3 <= $i28 goto label11;

        $c9 = virtualinvoke r23.<java.lang.String: char charAt(int)>(0);

        $i29 = (int) $c9;

        if $i29 != 45 goto label07;

        $b23 = -1;

        $b22 = -1;

        $b21 = -1;

        $b20 = -1;

        goto label08;

     label07:
        $b23 = 1;

        $b22 = 1;

        $b21 = 1;

        $b20 = 1;

     label08:
        $i10 = virtualinvoke r23.<java.lang.String: int length()>();

        if $i10 <= 17 goto label09;

        $r25 = new java.lang.RuntimeException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t handle a number this big: ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<java.lang.RuntimeException: void <init>(java.lang.String)>($r19);

        throw $r25;

     label09:
        $i11 = virtualinvoke r23.<java.lang.String: int length()>();

        if $i11 <= 9 goto label10;

        $l16 = (long) $b20;

        $d7 = (double) $b21;

        $d8 = $d7 * -0.5;

        $d9 = $d8 + 2.5;

        $i15 = (int) $d9;

        $r12 = virtualinvoke r23.<java.lang.String: java.lang.String substring(int)>($i15);

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String,int)>($r12, 16);

        $l17 = virtualinvoke $r13.<java.lang.Long: long longValue()>();

        $l18 = $l16 * $l17;

        $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l18);

        return $r14;

     label10:
        $d4 = (double) $b22;

        $d5 = $d4 * -0.5;

        $d6 = $d5 + 2.5;

        $i12 = (int) $d6;

        $r9 = virtualinvoke r23.<java.lang.String: java.lang.String substring(int)>($i12);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($r9, 16);

        $i13 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        $i14 = $b23 * $i13;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14);

        return $r11;

     label11:
        $r2 = virtualinvoke r23.<java.lang.String: java.lang.String toLowerCase()>();

        $i4 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(101);

        if $i4 <= 0 goto label12;

        $r6 = virtualinvoke r23.<java.lang.String: java.lang.String substring(int,int)>(0, $i4);

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r6);

        $i7 = $i4 + 1;

        $r7 = virtualinvoke r23.<java.lang.String: java.lang.String substring(int)>($i7);

        $i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        $d1 = (double) $i8;

        $d2 = staticinvoke <java.lang.Math: double pow(double,double)>(10.0, $d1);

        $d3 = $d0 * $d2;

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        return $r8;

     label12:
        $i5 = virtualinvoke r23.<java.lang.String: int length()>();

        if $i5 <= 17 goto label13;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(r23);

        return $r5;

     label13:
        $i6 = virtualinvoke r23.<java.lang.String: int length()>();

        if $i6 <= 9 goto label14;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(r23);

        return $r4;

     label14:
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(r23);

        return $r3;
    }

    public static int parseIfInt(java.lang.String, int)
    {
        char $c4;
        int i0, $i1, $i2, $i3, i5;
        java.lang.String $r0, r1;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r1 == null goto label1;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 != 0 goto label2;

     label1:
        return i0;

     label2:
        $r0 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        i5 = 0;

     label3:
        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if i5 >= $i2 goto label5;

        $c4 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i5);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4);

        if $z0 != 0 goto label4;

        return i0;

     label4:
        i5 = i5 + 1;

        goto label3;

     label5:
        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        return $i3;
    }
}
