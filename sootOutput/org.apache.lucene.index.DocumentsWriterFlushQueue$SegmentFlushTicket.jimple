final class org.apache.lucene.index.DocumentsWriterFlushQueue$SegmentFlushTicket extends org.apache.lucene.index.DocumentsWriterFlushQueue$FlushTicket
{
    private org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment segment;
    private boolean failed;
    static final boolean $assertionsDisabled;

    protected void <init>(org.apache.lucene.index.FrozenBufferedDeletes)
    {
        org.apache.lucene.index.DocumentsWriterFlushQueue$SegmentFlushTicket r0;
        org.apache.lucene.index.FrozenBufferedDeletes r1;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushQueue$SegmentFlushTicket;

        r1 := @parameter0: org.apache.lucene.index.FrozenBufferedDeletes;

        specialinvoke r0.<org.apache.lucene.index.DocumentsWriterFlushQueue$FlushTicket: void <init>(org.apache.lucene.index.FrozenBufferedDeletes)>(r1);

        r0.<org.apache.lucene.index.DocumentsWriterFlushQueue$SegmentFlushTicket: boolean failed> = 0;

        return;
    }

    protected void publish(org.apache.lucene.index.DocumentsWriter) throws java.io.IOException
    {
        org.apache.lucene.index.FrozenBufferedDeletes $r2;
        org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment $r3;
        java.lang.AssertionError $r4;
        org.apache.lucene.index.DocumentsWriterFlushQueue$SegmentFlushTicket r0;
        boolean $z0, $z1;
        org.apache.lucene.index.DocumentsWriter r1;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushQueue$SegmentFlushTicket;

        r1 := @parameter0: org.apache.lucene.index.DocumentsWriter;

        $z0 = <org.apache.lucene.index.DocumentsWriterFlushQueue$SegmentFlushTicket: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = r0.<org.apache.lucene.index.DocumentsWriterFlushQueue$SegmentFlushTicket: boolean published>;

        if $z1 == 0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>("ticket was already publised - can not publish twice");

        throw $r4;

     label1:
        r0.<org.apache.lucene.index.DocumentsWriterFlushQueue$SegmentFlushTicket: boolean published> = 1;

        $r3 = r0.<org.apache.lucene.index.DocumentsWriterFlushQueue$SegmentFlushTicket: org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment segment>;

        $r2 = r0.<org.apache.lucene.index.DocumentsWriterFlushQueue$SegmentFlushTicket: org.apache.lucene.index.FrozenBufferedDeletes frozenDeletes>;

        virtualinvoke r1.<org.apache.lucene.index.DocumentsWriter: void finishFlush(org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment,org.apache.lucene.index.FrozenBufferedDeletes)>($r3, $r2);

        return;
    }

    protected void setSegment(org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment)
    {
        org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment r1;
        java.lang.AssertionError $r2;
        org.apache.lucene.index.DocumentsWriterFlushQueue$SegmentFlushTicket r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushQueue$SegmentFlushTicket;

        r1 := @parameter0: org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment;

        $z0 = <org.apache.lucene.index.DocumentsWriterFlushQueue$SegmentFlushTicket: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = r0.<org.apache.lucene.index.DocumentsWriterFlushQueue$SegmentFlushTicket: boolean failed>;

        if $z1 == 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        r0.<org.apache.lucene.index.DocumentsWriterFlushQueue$SegmentFlushTicket: org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment segment> = r1;

        return;
    }

    protected void setFailed()
    {
        org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment $r1;
        java.lang.AssertionError $r2;
        org.apache.lucene.index.DocumentsWriterFlushQueue$SegmentFlushTicket r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushQueue$SegmentFlushTicket;

        $z0 = <org.apache.lucene.index.DocumentsWriterFlushQueue$SegmentFlushTicket: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterFlushQueue$SegmentFlushTicket: org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment segment>;

        if $r1 == null goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        r0.<org.apache.lucene.index.DocumentsWriterFlushQueue$SegmentFlushTicket: boolean failed> = 1;

        return;
    }

    protected boolean canPublish()
    {
        org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment $r1;
        org.apache.lucene.index.DocumentsWriterFlushQueue$SegmentFlushTicket r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.index.DocumentsWriterFlushQueue$SegmentFlushTicket;

        $r1 = r0.<org.apache.lucene.index.DocumentsWriterFlushQueue$SegmentFlushTicket: org.apache.lucene.index.DocumentsWriterPerThread$FlushedSegment segment>;

        if $r1 != null goto label1;

        $z0 = r0.<org.apache.lucene.index.DocumentsWriterFlushQueue$SegmentFlushTicket: boolean failed>;

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/DocumentsWriterFlushQueue;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.DocumentsWriterFlushQueue$SegmentFlushTicket: boolean $assertionsDisabled> = $z1;

        return;
    }
}
