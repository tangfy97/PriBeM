public class org.codehaus.groovy.ast.stmt.IfStatement extends org.codehaus.groovy.ast.stmt.Statement
{
    private org.codehaus.groovy.ast.expr.BooleanExpression booleanExpression;
    private org.codehaus.groovy.ast.stmt.Statement ifBlock;
    private org.codehaus.groovy.ast.stmt.Statement elseBlock;

    public void <init>(org.codehaus.groovy.ast.expr.BooleanExpression, org.codehaus.groovy.ast.stmt.Statement, org.codehaus.groovy.ast.stmt.Statement)
    {
        org.codehaus.groovy.ast.stmt.Statement r2, r3;
        org.codehaus.groovy.ast.expr.BooleanExpression r1;
        org.codehaus.groovy.ast.stmt.IfStatement r0;

        r0 := @this: org.codehaus.groovy.ast.stmt.IfStatement;

        r1 := @parameter0: org.codehaus.groovy.ast.expr.BooleanExpression;

        r2 := @parameter1: org.codehaus.groovy.ast.stmt.Statement;

        r3 := @parameter2: org.codehaus.groovy.ast.stmt.Statement;

        specialinvoke r0.<org.codehaus.groovy.ast.stmt.Statement: void <init>()>();

        r0.<org.codehaus.groovy.ast.stmt.IfStatement: org.codehaus.groovy.ast.expr.BooleanExpression booleanExpression> = r1;

        r0.<org.codehaus.groovy.ast.stmt.IfStatement: org.codehaus.groovy.ast.stmt.Statement ifBlock> = r2;

        r0.<org.codehaus.groovy.ast.stmt.IfStatement: org.codehaus.groovy.ast.stmt.Statement elseBlock> = r3;

        return;
    }

    public void visit(org.codehaus.groovy.ast.GroovyCodeVisitor)
    {
        org.codehaus.groovy.ast.stmt.IfStatement r1;
        org.codehaus.groovy.ast.GroovyCodeVisitor r0;

        r1 := @this: org.codehaus.groovy.ast.stmt.IfStatement;

        r0 := @parameter0: org.codehaus.groovy.ast.GroovyCodeVisitor;

        interfaceinvoke r0.<org.codehaus.groovy.ast.GroovyCodeVisitor: void visitIfElse(org.codehaus.groovy.ast.stmt.IfStatement)>(r1);

        return;
    }

    public org.codehaus.groovy.ast.expr.BooleanExpression getBooleanExpression()
    {
        org.codehaus.groovy.ast.expr.BooleanExpression $r1;
        org.codehaus.groovy.ast.stmt.IfStatement r0;

        r0 := @this: org.codehaus.groovy.ast.stmt.IfStatement;

        $r1 = r0.<org.codehaus.groovy.ast.stmt.IfStatement: org.codehaus.groovy.ast.expr.BooleanExpression booleanExpression>;

        return $r1;
    }

    public org.codehaus.groovy.ast.stmt.Statement getIfBlock()
    {
        org.codehaus.groovy.ast.stmt.Statement $r1;
        org.codehaus.groovy.ast.stmt.IfStatement r0;

        r0 := @this: org.codehaus.groovy.ast.stmt.IfStatement;

        $r1 = r0.<org.codehaus.groovy.ast.stmt.IfStatement: org.codehaus.groovy.ast.stmt.Statement ifBlock>;

        return $r1;
    }

    public org.codehaus.groovy.ast.stmt.Statement getElseBlock()
    {
        org.codehaus.groovy.ast.stmt.Statement $r1;
        org.codehaus.groovy.ast.stmt.IfStatement r0;

        r0 := @this: org.codehaus.groovy.ast.stmt.IfStatement;

        $r1 = r0.<org.codehaus.groovy.ast.stmt.IfStatement: org.codehaus.groovy.ast.stmt.Statement elseBlock>;

        return $r1;
    }

    public void setBooleanExpression(org.codehaus.groovy.ast.expr.BooleanExpression)
    {
        org.codehaus.groovy.ast.expr.BooleanExpression r1;
        org.codehaus.groovy.ast.stmt.IfStatement r0;

        r0 := @this: org.codehaus.groovy.ast.stmt.IfStatement;

        r1 := @parameter0: org.codehaus.groovy.ast.expr.BooleanExpression;

        r0.<org.codehaus.groovy.ast.stmt.IfStatement: org.codehaus.groovy.ast.expr.BooleanExpression booleanExpression> = r1;

        return;
    }
}
