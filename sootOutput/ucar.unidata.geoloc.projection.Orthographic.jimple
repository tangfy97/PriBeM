public class ucar.unidata.geoloc.projection.Orthographic extends ucar.unidata.geoloc.ProjectionImpl
{
    private double R;
    private double lon0Degrees;
    private double lat0;
    private double lon0;
    private double cosLat0;
    private double sinLat0;
    private ucar.unidata.geoloc.LatLonPointImpl origin;
    private boolean spherical;

    public ucar.unidata.geoloc.ProjectionImpl constructCopy()
    {
        ucar.unidata.geoloc.projection.Orthographic $r0, r1;
        double $d0, $d1, $d2;

        r1 := @this: ucar.unidata.geoloc.projection.Orthographic;

        $r0 = new ucar.unidata.geoloc.projection.Orthographic;

        $d0 = virtualinvoke r1.<ucar.unidata.geoloc.projection.Orthographic: double getOriginLat()>();

        $d1 = virtualinvoke r1.<ucar.unidata.geoloc.projection.Orthographic: double getOriginLon()>();

        $d2 = r1.<ucar.unidata.geoloc.projection.Orthographic: double R>;

        specialinvoke $r0.<ucar.unidata.geoloc.projection.Orthographic: void <init>(double,double,double)>($d0, $d1, $d2);

        return $r0;
    }

    public void <init>()
    {
        ucar.unidata.geoloc.projection.Orthographic r0;

        r0 := @this: ucar.unidata.geoloc.projection.Orthographic;

        specialinvoke r0.<ucar.unidata.geoloc.projection.Orthographic: void <init>(double,double)>(0.0, 0.0);

        return;
    }

    public void <init>(double, double)
    {
        ucar.unidata.geoloc.projection.Orthographic r0;
        double d0, d1, $d2;

        r0 := @this: ucar.unidata.geoloc.projection.Orthographic;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $d2 = <ucar.unidata.geoloc.projection.Orthographic: double EARTH_RADIUS>;

        specialinvoke r0.<ucar.unidata.geoloc.projection.Orthographic: void <init>(double,double,double)>(d0, d1, $d2);

        return;
    }

    public void <init>(double, double, double)
    {
        ucar.unidata.geoloc.projection.Orthographic r0;
        ucar.unidata.geoloc.LatLonPointImpl $r1;
        double d0, $d1, d2, $d3, d4;

        r0 := @this: ucar.unidata.geoloc.projection.Orthographic;

        d0 := @parameter0: double;

        d2 := @parameter1: double;

        d4 := @parameter2: double;

        specialinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: void <init>()>();

        r0.<ucar.unidata.geoloc.projection.Orthographic: boolean spherical> = 1;

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>(d0);

        r0.<ucar.unidata.geoloc.projection.Orthographic: double lat0> = $d1;

        $d3 = staticinvoke <java.lang.Math: double toRadians(double)>(d2);

        r0.<ucar.unidata.geoloc.projection.Orthographic: double lon0> = $d3;

        r0.<ucar.unidata.geoloc.projection.Orthographic: double R> = d4;

        $r1 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r1.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>(d0, d2);

        r0.<ucar.unidata.geoloc.projection.Orthographic: ucar.unidata.geoloc.LatLonPointImpl origin> = $r1;

        specialinvoke r0.<ucar.unidata.geoloc.projection.Orthographic: void precalculate()>();

        virtualinvoke r0.<ucar.unidata.geoloc.projection.Orthographic: void addParameter(java.lang.String,java.lang.String)>("grid_mapping_name", "orthographic");

        virtualinvoke r0.<ucar.unidata.geoloc.projection.Orthographic: void addParameter(java.lang.String,double)>("latitude_of_projection_origin", d0);

        virtualinvoke r0.<ucar.unidata.geoloc.projection.Orthographic: void addParameter(java.lang.String,double)>("longitude_of_projection_origin", d2);

        return;
    }

    private void precalculate()
    {
        ucar.unidata.geoloc.projection.Orthographic r0;
        double $d0, $d1, $d2, $d3, $d4, $d5;

        r0 := @this: ucar.unidata.geoloc.projection.Orthographic;

        $d0 = r0.<ucar.unidata.geoloc.projection.Orthographic: double lat0>;

        $d1 = staticinvoke <java.lang.Math: double sin(double)>($d0);

        r0.<ucar.unidata.geoloc.projection.Orthographic: double sinLat0> = $d1;

        $d2 = r0.<ucar.unidata.geoloc.projection.Orthographic: double lat0>;

        $d3 = staticinvoke <java.lang.Math: double cos(double)>($d2);

        r0.<ucar.unidata.geoloc.projection.Orthographic: double cosLat0> = $d3;

        $d4 = r0.<ucar.unidata.geoloc.projection.Orthographic: double lon0>;

        $d5 = staticinvoke <java.lang.Math: double toDegrees(double)>($d4);

        r0.<ucar.unidata.geoloc.projection.Orthographic: double lon0Degrees> = $d5;

        return;
    }

    public java.lang.Object clone()
    {
        ucar.unidata.geoloc.projection.Orthographic r0, r2;
        java.lang.Object $r1;
        ucar.unidata.geoloc.LatLonPointImpl $r3;
        double $d0, $d1;

        r0 := @this: ucar.unidata.geoloc.projection.Orthographic;

        $r1 = specialinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: java.lang.Object clone()>();

        r2 = (ucar.unidata.geoloc.projection.Orthographic) $r1;

        $r3 = new ucar.unidata.geoloc.LatLonPointImpl;

        $d0 = virtualinvoke r0.<ucar.unidata.geoloc.projection.Orthographic: double getOriginLat()>();

        $d1 = virtualinvoke r0.<ucar.unidata.geoloc.projection.Orthographic: double getOriginLon()>();

        specialinvoke $r3.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>($d0, $d1);

        r2.<ucar.unidata.geoloc.projection.Orthographic: ucar.unidata.geoloc.LatLonPointImpl origin> = $r3;

        return r2;
    }

    public boolean equals(java.lang.Object)
    {
        ucar.unidata.geoloc.ProjectionRect $r3, $r4;
        ucar.unidata.geoloc.projection.Orthographic r1, r2;
        byte $b0, $b1;
        java.lang.Object r0;
        boolean $z0, $z1, $z2;
        double $d0, $d1, $d2, $d3;

        r2 := @this: ucar.unidata.geoloc.projection.Orthographic;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof ucar.unidata.geoloc.projection.Orthographic;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (ucar.unidata.geoloc.projection.Orthographic) r0;

        $d0 = virtualinvoke r2.<ucar.unidata.geoloc.projection.Orthographic: double getOriginLat()>();

        $d1 = virtualinvoke r1.<ucar.unidata.geoloc.projection.Orthographic: double getOriginLat()>();

        $b0 = $d0 cmpl $d1;

        if $b0 != 0 goto label2;

        $d2 = virtualinvoke r2.<ucar.unidata.geoloc.projection.Orthographic: double getOriginLon()>();

        $d3 = virtualinvoke r1.<ucar.unidata.geoloc.projection.Orthographic: double getOriginLon()>();

        $b1 = $d2 cmpl $d3;

        if $b1 != 0 goto label2;

        $r4 = r2.<ucar.unidata.geoloc.projection.Orthographic: ucar.unidata.geoloc.ProjectionRect defaultMapArea>;

        $r3 = r1.<ucar.unidata.geoloc.projection.Orthographic: ucar.unidata.geoloc.ProjectionRect defaultMapArea>;

        $z1 = virtualinvoke $r4.<ucar.unidata.geoloc.ProjectionRect: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public double getOriginLon()
    {
        ucar.unidata.geoloc.LatLonPointImpl $r1;
        ucar.unidata.geoloc.projection.Orthographic r0;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.projection.Orthographic;

        $r1 = r0.<ucar.unidata.geoloc.projection.Orthographic: ucar.unidata.geoloc.LatLonPointImpl origin>;

        $d0 = virtualinvoke $r1.<ucar.unidata.geoloc.LatLonPointImpl: double getLongitude()>();

        return $d0;
    }

    public void setOriginLon(double)
    {
        ucar.unidata.geoloc.projection.Orthographic r0;
        ucar.unidata.geoloc.LatLonPointImpl $r1;
        double d0, $d1;

        r0 := @this: ucar.unidata.geoloc.projection.Orthographic;

        d0 := @parameter0: double;

        $r1 = r0.<ucar.unidata.geoloc.projection.Orthographic: ucar.unidata.geoloc.LatLonPointImpl origin>;

        virtualinvoke $r1.<ucar.unidata.geoloc.LatLonPointImpl: void setLongitude(double)>(d0);

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>(d0);

        r0.<ucar.unidata.geoloc.projection.Orthographic: double lon0> = $d1;

        specialinvoke r0.<ucar.unidata.geoloc.projection.Orthographic: void precalculate()>();

        return;
    }

    public double getOriginLat()
    {
        ucar.unidata.geoloc.LatLonPointImpl $r1;
        ucar.unidata.geoloc.projection.Orthographic r0;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.projection.Orthographic;

        $r1 = r0.<ucar.unidata.geoloc.projection.Orthographic: ucar.unidata.geoloc.LatLonPointImpl origin>;

        $d0 = virtualinvoke $r1.<ucar.unidata.geoloc.LatLonPointImpl: double getLatitude()>();

        return $d0;
    }

    public void setOriginLat(double)
    {
        ucar.unidata.geoloc.projection.Orthographic r0;
        ucar.unidata.geoloc.LatLonPointImpl $r1;
        double d0, $d1;

        r0 := @this: ucar.unidata.geoloc.projection.Orthographic;

        d0 := @parameter0: double;

        $r1 = r0.<ucar.unidata.geoloc.projection.Orthographic: ucar.unidata.geoloc.LatLonPointImpl origin>;

        virtualinvoke $r1.<ucar.unidata.geoloc.LatLonPointImpl: void setLatitude(double)>(d0);

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>(d0);

        r0.<ucar.unidata.geoloc.projection.Orthographic: double lat0> = $d1;

        specialinvoke r0.<ucar.unidata.geoloc.projection.Orthographic: void precalculate()>();

        return;
    }

    public java.lang.String getProjectionTypeLabel()
    {
        ucar.unidata.geoloc.projection.Orthographic r0;

        r0 := @this: ucar.unidata.geoloc.projection.Orthographic;

        return "Orthographic";
    }

    public java.lang.String paramsToString()
    {
        ucar.unidata.geoloc.projection.Orthographic r2;
        java.lang.StringBuilder $r0, $r1, $r5;
        ucar.unidata.geoloc.LatLonPointImpl $r3;
        java.lang.String $r4, $r6;

        r2 := @this: ucar.unidata.geoloc.projection.Orthographic;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" origin ");

        $r3 = r2.<ucar.unidata.geoloc.projection.Orthographic: ucar.unidata.geoloc.LatLonPointImpl origin>;

        $r4 = virtualinvoke $r3.<ucar.unidata.geoloc.LatLonPointImpl: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public boolean crossSeam(ucar.unidata.geoloc.ProjectionPoint, ucar.unidata.geoloc.ProjectionPoint)
    {
        byte $b0, $b1;
        int $i2, $i3;
        ucar.unidata.geoloc.ProjectionPoint r0, r1;
        boolean $z0, $z1, $z2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;
        ucar.unidata.geoloc.projection.Orthographic r2;

        r2 := @this: ucar.unidata.geoloc.projection.Orthographic;

        r0 := @parameter0: ucar.unidata.geoloc.ProjectionPoint;

        r1 := @parameter1: ucar.unidata.geoloc.ProjectionPoint;

        $z0 = staticinvoke <ucar.unidata.geoloc.ProjectionPointImpl: boolean isInfinite(ucar.unidata.geoloc.ProjectionPoint)>(r0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <ucar.unidata.geoloc.ProjectionPointImpl: boolean isInfinite(ucar.unidata.geoloc.ProjectionPoint)>(r1);

        if $z1 == 0 goto label2;

     label1:
        return 1;

     label2:
        $d0 = interfaceinvoke r0.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $d1 = interfaceinvoke r1.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $d2 = $d0 * $d1;

        $b0 = $d2 cmpg 0.0;

        $i2 = (int) $b0;

        if $i2 >= 0 goto label3;

        $d3 = interfaceinvoke r0.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $d4 = interfaceinvoke r1.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $d5 = $d3 - $d4;

        $d6 = staticinvoke <java.lang.Math: double abs(double)>($d5);

        $b1 = $d6 cmpl 5000.0;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    public ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint, ucar.unidata.geoloc.ProjectionPointImpl)
    {
        byte $b0;
        ucar.unidata.geoloc.ProjectionPointImpl r2;
        int $i1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, d30, d31;
        ucar.unidata.geoloc.projection.Orthographic r1;
        ucar.unidata.geoloc.LatLonPoint r0;

        r1 := @this: ucar.unidata.geoloc.projection.Orthographic;

        r0 := @parameter0: ucar.unidata.geoloc.LatLonPoint;

        r2 := @parameter1: ucar.unidata.geoloc.ProjectionPointImpl;

        $d0 = interfaceinvoke r0.<ucar.unidata.geoloc.LatLonPoint: double getLatitude()>();

        $d1 = interfaceinvoke r0.<ucar.unidata.geoloc.LatLonPoint: double getLongitude()>();

        $d2 = staticinvoke <java.lang.Math: double toRadians(double)>($d0);

        $d3 = r1.<ucar.unidata.geoloc.projection.Orthographic: double lon0Degrees>;

        $d4 = $d1 - $d3;

        $d5 = staticinvoke <ucar.unidata.geoloc.LatLonPointImpl: double lonNormal(double)>($d4);

        $d6 = staticinvoke <java.lang.Math: double toRadians(double)>($d5);

        $d7 = r1.<ucar.unidata.geoloc.projection.Orthographic: double sinLat0>;

        $d8 = staticinvoke <java.lang.Math: double sin(double)>($d2);

        $d9 = $d7 * $d8;

        $d10 = r1.<ucar.unidata.geoloc.projection.Orthographic: double cosLat0>;

        $d11 = staticinvoke <java.lang.Math: double cos(double)>($d2);

        $d12 = $d10 * $d11;

        $d13 = staticinvoke <java.lang.Math: double cos(double)>($d6);

        $d14 = $d12 * $d13;

        d15 = $d9 + $d14;

        $b0 = d15 cmpl 0.0;

        $i1 = (int) $b0;

        if $i1 < 0 goto label1;

        $d16 = r1.<ucar.unidata.geoloc.projection.Orthographic: double R>;

        $d17 = staticinvoke <java.lang.Math: double cos(double)>($d2);

        $d18 = $d16 * $d17;

        $d19 = staticinvoke <java.lang.Math: double sin(double)>($d6);

        d30 = $d18 * $d19;

        $d20 = r1.<ucar.unidata.geoloc.projection.Orthographic: double R>;

        $d21 = r1.<ucar.unidata.geoloc.projection.Orthographic: double cosLat0>;

        $d22 = staticinvoke <java.lang.Math: double sin(double)>($d2);

        $d23 = $d21 * $d22;

        $d24 = r1.<ucar.unidata.geoloc.projection.Orthographic: double sinLat0>;

        $d25 = staticinvoke <java.lang.Math: double cos(double)>($d2);

        $d26 = $d24 * $d25;

        $d27 = staticinvoke <java.lang.Math: double cos(double)>($d6);

        $d28 = $d26 * $d27;

        $d29 = $d23 - $d28;

        d31 = $d20 * $d29;

        goto label2;

     label1:
        d30 = #Infinity;

        d31 = #Infinity;

     label2:
        virtualinvoke r2.<ucar.unidata.geoloc.ProjectionPointImpl: void setLocation(double,double)>(d30, d31);

        return r2;
    }

    public ucar.unidata.geoloc.LatLonPoint projToLatLon(ucar.unidata.geoloc.ProjectionPoint, ucar.unidata.geoloc.LatLonPointImpl)
    {
        byte $b0, $b1, $b2, $b3;
        int $i4, $i5, $i6;
        ucar.unidata.geoloc.ProjectionPoint r0;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, d44, d45, d46, $d47, $d48, d49;
        ucar.unidata.geoloc.projection.Orthographic r1;
        ucar.unidata.geoloc.LatLonPointImpl r2;

        r1 := @this: ucar.unidata.geoloc.projection.Orthographic;

        r0 := @parameter0: ucar.unidata.geoloc.ProjectionPoint;

        r2 := @parameter1: ucar.unidata.geoloc.LatLonPointImpl;

        $d0 = interfaceinvoke r0.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $d1 = interfaceinvoke r0.<ucar.unidata.geoloc.ProjectionPoint: double getY()>();

        $d3 = $d0 * $d0;

        $d2 = $d1 * $d1;

        $d4 = $d3 + $d2;

        $d5 = staticinvoke <java.lang.Math: double sqrt(double)>($d4);

        $d6 = r1.<ucar.unidata.geoloc.projection.Orthographic: double R>;

        $d7 = $d5 / $d6;

        $d8 = staticinvoke <java.lang.Math: double asin(double)>($d7);

        d44 = r1.<ucar.unidata.geoloc.projection.Orthographic: double lon0>;

        d45 = 0.0;

        $d9 = staticinvoke <java.lang.Math: double abs(double)>($d5);

        $b0 = $d9 cmpl 1.0E-6;

        $i4 = (int) $b0;

        if $i4 <= 0 goto label3;

        $d11 = staticinvoke <java.lang.Math: double cos(double)>($d8);

        $d12 = r1.<ucar.unidata.geoloc.projection.Orthographic: double sinLat0>;

        $d13 = $d11 * $d12;

        $d14 = staticinvoke <java.lang.Math: double sin(double)>($d8);

        $d16 = $d1 * $d14;

        $d15 = r1.<ucar.unidata.geoloc.projection.Orthographic: double cosLat0>;

        $d17 = $d16 * $d15;

        $d18 = $d17 / $d5;

        $d19 = $d13 + $d18;

        d46 = staticinvoke <java.lang.Math: double asin(double)>($d19);

        $d20 = r1.<ucar.unidata.geoloc.projection.Orthographic: double lat0>;

        $d21 = $d20 - 0.7853981633974483;

        $d22 = staticinvoke <java.lang.Math: double abs(double)>($d21);

        $b1 = $d22 cmpl 1.0E-6;

        $i5 = (int) $b1;

        if $i5 <= 0 goto label1;

        $d31 = r1.<ucar.unidata.geoloc.projection.Orthographic: double cosLat0>;

        $d32 = $d5 * $d31;

        $d33 = staticinvoke <java.lang.Math: double cos(double)>($d8);

        $d35 = $d32 * $d33;

        $d34 = r1.<ucar.unidata.geoloc.projection.Orthographic: double sinLat0>;

        $d36 = $d1 * $d34;

        $d37 = staticinvoke <java.lang.Math: double sin(double)>($d8);

        $d38 = $d36 * $d37;

        d45 = $d35 - $d38;

        $d39 = r1.<ucar.unidata.geoloc.projection.Orthographic: double lon0>;

        $d40 = staticinvoke <java.lang.Math: double sin(double)>($d8);

        $d41 = $d0 * $d40;

        $d42 = $d41 / d45;

        $d43 = staticinvoke <java.lang.Math: double atan(double)>($d42);

        d44 = $d39 + $d43;

        goto label4;

     label1:
        $d23 = r1.<ucar.unidata.geoloc.projection.Orthographic: double lat0>;

        $b2 = $d23 cmpl 0.7853981633974483;

        if $b2 != 0 goto label2;

        $d29 = r1.<ucar.unidata.geoloc.projection.Orthographic: double lon0>;

        $d27 = neg $d1;

        $d28 = $d0 / $d27;

        $d30 = staticinvoke <java.lang.Math: double atan(double)>($d28);

        d44 = $d29 + $d30;

        d45 = neg $d1;

        goto label4;

     label2:
        $d25 = r1.<ucar.unidata.geoloc.projection.Orthographic: double lon0>;

        $d24 = $d0 / $d1;

        $d26 = staticinvoke <java.lang.Math: double atan(double)>($d24);

        d44 = $d25 + $d26;

        d45 = $d1;

        goto label4;

     label3:
        d46 = r1.<ucar.unidata.geoloc.projection.Orthographic: double lat0>;

     label4:
        $d47 = staticinvoke <java.lang.Math: double toDegrees(double)>(d46);

        $d48 = staticinvoke <java.lang.Math: double toDegrees(double)>(d44);

        d49 = $d48;

        $b3 = d45 cmpg 0.0;

        $i6 = (int) $b3;

        if $i6 >= 0 goto label5;

        d49 = $d48 + 180.0;

     label5:
        $d10 = staticinvoke <ucar.unidata.geoloc.LatLonPointImpl: double lonNormal(double)>(d49);

        virtualinvoke r2.<ucar.unidata.geoloc.LatLonPointImpl: void setLatitude(double)>($d47);

        virtualinvoke r2.<ucar.unidata.geoloc.LatLonPointImpl: void setLongitude(double)>($d10);

        return r2;
    }

    public float[][] latLonToProj(float[][], float[][], int, int)
    {
        byte $b3;
        float $f0, $f1, $f2, $f3;
        float[] $r1, r2, r3, r5, r6;
        int i0, i1, i2, i4, $i5;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, d29, d30, d31;
        float[][] r0, r4;
        ucar.unidata.geoloc.projection.Orthographic r7;

        r7 := @this: ucar.unidata.geoloc.projection.Orthographic;

        r0 := @parameter0: float[][];

        r4 := @parameter1: float[][];

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r1 = r0[0];

        i0 = lengthof $r1;

        r2 = r0[i1];

        r3 = r0[i2];

        r5 = r4[0];

        r6 = r4[1];

        i4 = 0;

     label1:
        if i4 >= i0 goto label4;

        $f0 = r2[i4];

        d29 = (double) $f0;

        $f1 = r3[i4];

        d0 = (double) $f1;

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>(d29);

        $d2 = r7.<ucar.unidata.geoloc.projection.Orthographic: double lon0Degrees>;

        $d3 = d0 - $d2;

        $d4 = staticinvoke <ucar.unidata.geoloc.LatLonPointImpl: double lonNormal(double)>($d3);

        $d5 = staticinvoke <java.lang.Math: double toRadians(double)>($d4);

        $d6 = r7.<ucar.unidata.geoloc.projection.Orthographic: double sinLat0>;

        $d7 = staticinvoke <java.lang.Math: double sin(double)>($d1);

        $d8 = $d6 * $d7;

        $d9 = r7.<ucar.unidata.geoloc.projection.Orthographic: double cosLat0>;

        $d10 = staticinvoke <java.lang.Math: double cos(double)>($d1);

        $d11 = $d9 * $d10;

        $d12 = staticinvoke <java.lang.Math: double cos(double)>($d5);

        $d13 = $d11 * $d12;

        d14 = $d8 + $d13;

        $b3 = d14 cmpl 0.0;

        $i5 = (int) $b3;

        if $i5 < 0 goto label2;

        $d15 = r7.<ucar.unidata.geoloc.projection.Orthographic: double R>;

        $d16 = staticinvoke <java.lang.Math: double cos(double)>($d1);

        $d17 = $d15 * $d16;

        $d18 = staticinvoke <java.lang.Math: double sin(double)>($d5);

        d30 = $d17 * $d18;

        $d19 = r7.<ucar.unidata.geoloc.projection.Orthographic: double R>;

        $d20 = r7.<ucar.unidata.geoloc.projection.Orthographic: double cosLat0>;

        $d21 = staticinvoke <java.lang.Math: double sin(double)>($d1);

        $d22 = $d20 * $d21;

        $d23 = r7.<ucar.unidata.geoloc.projection.Orthographic: double sinLat0>;

        $d24 = staticinvoke <java.lang.Math: double cos(double)>($d1);

        $d25 = $d23 * $d24;

        $d26 = staticinvoke <java.lang.Math: double cos(double)>($d5);

        $d27 = $d25 * $d26;

        $d28 = $d22 - $d27;

        d31 = $d19 * $d28;

        goto label3;

     label2:
        d30 = #Infinity;

        d31 = #Infinity;

     label3:
        $f2 = (float) d30;

        r5[i4] = $f2;

        $f3 = (float) d31;

        r6[i4] = $f3;

        i4 = i4 + 1;

        goto label1;

     label4:
        return r4;
    }

    public float[][] projToLatLon(float[][], float[][])
    {
        byte $b1, $b2, $b3, $b5;
        float[] $r1, r2, r3, r5, r6;
        float $f0, $f1, $f2, $f3;
        int i0, i4, $i6, $i7, $i8;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, d44, d45, d46, $d47, $d48, d49;
        float[][] r0, r4;
        ucar.unidata.geoloc.projection.Orthographic r7;

        r7 := @this: ucar.unidata.geoloc.projection.Orthographic;

        r0 := @parameter0: float[][];

        r4 := @parameter1: float[][];

        $r1 = r0[0];

        i0 = lengthof $r1;

        r2 = r0[0];

        r3 = r0[1];

        r5 = r4[0];

        r6 = r4[1];

        i4 = 0;

     label1:
        if i4 >= i0 goto label7;

        $f0 = r2[i4];

        d0 = (double) $f0;

        $f1 = r3[i4];

        d1 = (double) $f1;

        $d3 = d0 * d0;

        $d2 = d1 * d1;

        $d4 = $d3 + $d2;

        $d5 = staticinvoke <java.lang.Math: double sqrt(double)>($d4);

        $d6 = r7.<ucar.unidata.geoloc.projection.Orthographic: double R>;

        $d7 = $d5 / $d6;

        $d8 = staticinvoke <java.lang.Math: double asin(double)>($d7);

        d44 = r7.<ucar.unidata.geoloc.projection.Orthographic: double lon0>;

        d45 = 0.0;

        $d9 = staticinvoke <java.lang.Math: double abs(double)>($d5);

        $b1 = $d9 cmpl 1.0E-6;

        $i6 = (int) $b1;

        if $i6 <= 0 goto label4;

        $d11 = staticinvoke <java.lang.Math: double cos(double)>($d8);

        $d12 = r7.<ucar.unidata.geoloc.projection.Orthographic: double sinLat0>;

        $d13 = $d11 * $d12;

        $d14 = staticinvoke <java.lang.Math: double sin(double)>($d8);

        $d16 = d1 * $d14;

        $d15 = r7.<ucar.unidata.geoloc.projection.Orthographic: double cosLat0>;

        $d17 = $d16 * $d15;

        $d18 = $d17 / $d5;

        $d19 = $d13 + $d18;

        d46 = staticinvoke <java.lang.Math: double asin(double)>($d19);

        $d20 = r7.<ucar.unidata.geoloc.projection.Orthographic: double lat0>;

        $d21 = $d20 - 0.7853981633974483;

        $d22 = staticinvoke <java.lang.Math: double abs(double)>($d21);

        $b2 = $d22 cmpl 1.0E-6;

        $i7 = (int) $b2;

        if $i7 <= 0 goto label2;

        $d31 = r7.<ucar.unidata.geoloc.projection.Orthographic: double cosLat0>;

        $d32 = $d5 * $d31;

        $d33 = staticinvoke <java.lang.Math: double cos(double)>($d8);

        $d35 = $d32 * $d33;

        $d34 = r7.<ucar.unidata.geoloc.projection.Orthographic: double sinLat0>;

        $d36 = d1 * $d34;

        $d37 = staticinvoke <java.lang.Math: double sin(double)>($d8);

        $d38 = $d36 * $d37;

        d45 = $d35 - $d38;

        $d39 = r7.<ucar.unidata.geoloc.projection.Orthographic: double lon0>;

        $d40 = staticinvoke <java.lang.Math: double sin(double)>($d8);

        $d41 = d0 * $d40;

        $d42 = $d41 / d45;

        $d43 = staticinvoke <java.lang.Math: double atan(double)>($d42);

        d44 = $d39 + $d43;

        goto label5;

     label2:
        $d23 = r7.<ucar.unidata.geoloc.projection.Orthographic: double lat0>;

        $b3 = $d23 cmpl 0.7853981633974483;

        if $b3 != 0 goto label3;

        $d29 = r7.<ucar.unidata.geoloc.projection.Orthographic: double lon0>;

        $d27 = neg d1;

        $d28 = d0 / $d27;

        $d30 = staticinvoke <java.lang.Math: double atan(double)>($d28);

        d44 = $d29 + $d30;

        d45 = neg d1;

        goto label5;

     label3:
        $d25 = r7.<ucar.unidata.geoloc.projection.Orthographic: double lon0>;

        $d24 = d0 / d1;

        $d26 = staticinvoke <java.lang.Math: double atan(double)>($d24);

        d44 = $d25 + $d26;

        d45 = d1;

        goto label5;

     label4:
        d46 = r7.<ucar.unidata.geoloc.projection.Orthographic: double lat0>;

     label5:
        $d47 = staticinvoke <java.lang.Math: double toDegrees(double)>(d46);

        $d48 = staticinvoke <java.lang.Math: double toDegrees(double)>(d44);

        d49 = $d48;

        $b5 = d45 cmpg 0.0;

        $i8 = (int) $b5;

        if $i8 >= 0 goto label6;

        d49 = $d48 + 180.0;

     label6:
        $d10 = staticinvoke <ucar.unidata.geoloc.LatLonPointImpl: double lonNormal(double)>(d49);

        $f2 = (float) $d47;

        r5[i4] = $f2;

        $f3 = (float) $d10;

        r6[i4] = $f3;

        i4 = i4 + 1;

        goto label1;

     label7:
        return r4;
    }

    public double[][] latLonToProj(double[][], double[][], int, int)
    {
        byte $b3;
        double[][] r0, r4;
        double[] $r1, r2, r3, r5, r6;
        int i0, i1, i2, i4, $i5;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, d29, d30, d31;
        ucar.unidata.geoloc.projection.Orthographic r7;

        r7 := @this: ucar.unidata.geoloc.projection.Orthographic;

        r0 := @parameter0: double[][];

        r4 := @parameter1: double[][];

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r1 = r0[0];

        i0 = lengthof $r1;

        r2 = r0[i1];

        r3 = r0[i2];

        r5 = r4[0];

        r6 = r4[1];

        i4 = 0;

     label1:
        if i4 >= i0 goto label4;

        d29 = r2[i4];

        d0 = r3[i4];

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>(d29);

        $d2 = r7.<ucar.unidata.geoloc.projection.Orthographic: double lon0Degrees>;

        $d3 = d0 - $d2;

        $d4 = staticinvoke <ucar.unidata.geoloc.LatLonPointImpl: double lonNormal(double)>($d3);

        $d5 = staticinvoke <java.lang.Math: double toRadians(double)>($d4);

        $d6 = r7.<ucar.unidata.geoloc.projection.Orthographic: double sinLat0>;

        $d7 = staticinvoke <java.lang.Math: double sin(double)>($d1);

        $d8 = $d6 * $d7;

        $d9 = r7.<ucar.unidata.geoloc.projection.Orthographic: double cosLat0>;

        $d10 = staticinvoke <java.lang.Math: double cos(double)>($d1);

        $d11 = $d9 * $d10;

        $d12 = staticinvoke <java.lang.Math: double cos(double)>($d5);

        $d13 = $d11 * $d12;

        d14 = $d8 + $d13;

        $b3 = d14 cmpl 0.0;

        $i5 = (int) $b3;

        if $i5 < 0 goto label2;

        $d15 = r7.<ucar.unidata.geoloc.projection.Orthographic: double R>;

        $d16 = staticinvoke <java.lang.Math: double cos(double)>($d1);

        $d17 = $d15 * $d16;

        $d18 = staticinvoke <java.lang.Math: double sin(double)>($d5);

        d30 = $d17 * $d18;

        $d19 = r7.<ucar.unidata.geoloc.projection.Orthographic: double R>;

        $d20 = r7.<ucar.unidata.geoloc.projection.Orthographic: double cosLat0>;

        $d21 = staticinvoke <java.lang.Math: double sin(double)>($d1);

        $d22 = $d20 * $d21;

        $d23 = r7.<ucar.unidata.geoloc.projection.Orthographic: double sinLat0>;

        $d24 = staticinvoke <java.lang.Math: double cos(double)>($d1);

        $d25 = $d23 * $d24;

        $d26 = staticinvoke <java.lang.Math: double cos(double)>($d5);

        $d27 = $d25 * $d26;

        $d28 = $d22 - $d27;

        d31 = $d19 * $d28;

        goto label3;

     label2:
        d30 = #Infinity;

        d31 = #Infinity;

     label3:
        r5[i4] = d30;

        r6[i4] = d31;

        i4 = i4 + 1;

        goto label1;

     label4:
        return r4;
    }

    public double[][] projToLatLon(double[][], double[][])
    {
        byte $b1, $b2, $b3, $b5;
        double[][] r0, r4;
        double[] $r1, r2, r3, r5, r6;
        int i0, i4, $i6, $i7, $i8;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, d44, d45, d46, $d47, $d48, d49;
        ucar.unidata.geoloc.projection.Orthographic r7;

        r7 := @this: ucar.unidata.geoloc.projection.Orthographic;

        r0 := @parameter0: double[][];

        r4 := @parameter1: double[][];

        $r1 = r0[0];

        i0 = lengthof $r1;

        r2 = r0[0];

        r3 = r0[1];

        r5 = r4[0];

        r6 = r4[1];

        i4 = 0;

     label1:
        if i4 >= i0 goto label7;

        d0 = r2[i4];

        d1 = r3[i4];

        $d3 = d0 * d0;

        $d2 = d1 * d1;

        $d4 = $d3 + $d2;

        $d5 = staticinvoke <java.lang.Math: double sqrt(double)>($d4);

        $d6 = r7.<ucar.unidata.geoloc.projection.Orthographic: double R>;

        $d7 = $d5 / $d6;

        $d8 = staticinvoke <java.lang.Math: double asin(double)>($d7);

        d44 = r7.<ucar.unidata.geoloc.projection.Orthographic: double lon0>;

        d45 = 0.0;

        $d9 = staticinvoke <java.lang.Math: double abs(double)>($d5);

        $b1 = $d9 cmpl 1.0E-6;

        $i6 = (int) $b1;

        if $i6 <= 0 goto label4;

        $d11 = staticinvoke <java.lang.Math: double cos(double)>($d8);

        $d12 = r7.<ucar.unidata.geoloc.projection.Orthographic: double sinLat0>;

        $d13 = $d11 * $d12;

        $d14 = staticinvoke <java.lang.Math: double sin(double)>($d8);

        $d16 = d1 * $d14;

        $d15 = r7.<ucar.unidata.geoloc.projection.Orthographic: double cosLat0>;

        $d17 = $d16 * $d15;

        $d18 = $d17 / $d5;

        $d19 = $d13 + $d18;

        d46 = staticinvoke <java.lang.Math: double asin(double)>($d19);

        $d20 = r7.<ucar.unidata.geoloc.projection.Orthographic: double lat0>;

        $d21 = $d20 - 0.7853981633974483;

        $d22 = staticinvoke <java.lang.Math: double abs(double)>($d21);

        $b2 = $d22 cmpl 1.0E-6;

        $i7 = (int) $b2;

        if $i7 <= 0 goto label2;

        $d31 = r7.<ucar.unidata.geoloc.projection.Orthographic: double cosLat0>;

        $d32 = $d5 * $d31;

        $d33 = staticinvoke <java.lang.Math: double cos(double)>($d8);

        $d35 = $d32 * $d33;

        $d34 = r7.<ucar.unidata.geoloc.projection.Orthographic: double sinLat0>;

        $d36 = d1 * $d34;

        $d37 = staticinvoke <java.lang.Math: double sin(double)>($d8);

        $d38 = $d36 * $d37;

        d45 = $d35 - $d38;

        $d39 = r7.<ucar.unidata.geoloc.projection.Orthographic: double lon0>;

        $d40 = staticinvoke <java.lang.Math: double sin(double)>($d8);

        $d41 = d0 * $d40;

        $d42 = $d41 / d45;

        $d43 = staticinvoke <java.lang.Math: double atan(double)>($d42);

        d44 = $d39 + $d43;

        goto label5;

     label2:
        $d23 = r7.<ucar.unidata.geoloc.projection.Orthographic: double lat0>;

        $b3 = $d23 cmpl 0.7853981633974483;

        if $b3 != 0 goto label3;

        $d29 = r7.<ucar.unidata.geoloc.projection.Orthographic: double lon0>;

        $d27 = neg d1;

        $d28 = d0 / $d27;

        $d30 = staticinvoke <java.lang.Math: double atan(double)>($d28);

        d44 = $d29 + $d30;

        d45 = neg d1;

        goto label5;

     label3:
        $d25 = r7.<ucar.unidata.geoloc.projection.Orthographic: double lon0>;

        $d24 = d0 / d1;

        $d26 = staticinvoke <java.lang.Math: double atan(double)>($d24);

        d44 = $d25 + $d26;

        d45 = d1;

        goto label5;

     label4:
        d46 = r7.<ucar.unidata.geoloc.projection.Orthographic: double lat0>;

     label5:
        $d47 = staticinvoke <java.lang.Math: double toDegrees(double)>(d46);

        $d48 = staticinvoke <java.lang.Math: double toDegrees(double)>(d44);

        d49 = $d48;

        $b5 = d45 cmpg 0.0;

        $i8 = (int) $b5;

        if $i8 >= 0 goto label6;

        d49 = $d48 + 180.0;

     label6:
        $d10 = staticinvoke <ucar.unidata.geoloc.LatLonPointImpl: double lonNormal(double)>(d49);

        r5[i4] = $d47;

        r6[i4] = $d10;

        i4 = i4 + 1;

        goto label1;

     label7:
        return r4;
    }

    public static void main(java.lang.String[])
    {
        java.io.PrintStream $r3, $r9;
        ucar.unidata.geoloc.projection.Orthographic $r0;
        java.lang.String[] r13;
        ucar.unidata.geoloc.LatLonPoint $r7;
        ucar.unidata.geoloc.ProjectionPointImpl $r1;
        java.lang.StringBuilder $r2, $r4, $r5, $r8, $r10, $r11;
        java.lang.String $r6, $r12;

        r13 := @parameter0: java.lang.String[];

        $r0 = new ucar.unidata.geoloc.projection.Orthographic;

        specialinvoke $r0.<ucar.unidata.geoloc.projection.Orthographic: void <init>(double,double)>(40.0, -100.0);

        $r1 = virtualinvoke $r0.<ucar.unidata.geoloc.projection.Orthographic: ucar.unidata.geoloc.ProjectionPointImpl latLonToProj(double,double)>(30.0, -110.0);

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("proj point = ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6);

        $r7 = virtualinvoke $r0.<ucar.unidata.geoloc.projection.Orthographic: ucar.unidata.geoloc.LatLonPoint projToLatLon(ucar.unidata.geoloc.ProjectionPoint)>($r1);

        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ll = ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r12);

        return;
    }
}
