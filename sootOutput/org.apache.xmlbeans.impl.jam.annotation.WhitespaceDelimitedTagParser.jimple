public class org.apache.xmlbeans.impl.jam.'annotation'.WhitespaceDelimitedTagParser extends org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser
{

    public void <init>()
    {
        org.apache.xmlbeans.impl.jam.'annotation'.WhitespaceDelimitedTagParser r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.'annotation'.WhitespaceDelimitedTagParser;

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser: void <init>()>();

        return;
    }

    public void parse(org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement, com.sun.javadoc.Tag)
    {
        java.util.Properties $r6;
        java.util.Enumeration $r7;
        com.sun.javadoc.Tag r2;
        org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement r1;
        org.apache.xmlbeans.impl.jam.'annotation'.WhitespaceDelimitedTagParser r0;
        org.apache.xmlbeans.impl.jam.mutable.MAnnotation[] $r3;
        int $i0, $i1;
        java.lang.Object $r8;
        java.lang.String $r4, $r5, r9, $r10;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.jam.'annotation'.WhitespaceDelimitedTagParser;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement;

        r2 := @parameter1: com.sun.javadoc.Tag;

        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.'annotation'.WhitespaceDelimitedTagParser: org.apache.xmlbeans.impl.jam.mutable.MAnnotation[] createAnnotations(org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement,com.sun.javadoc.Tag)>(r1, r2);

        $r4 = interfaceinvoke r2.<com.sun.javadoc.Tag: java.lang.String text()>();

        if $r4 != null goto label1;

        return;

     label1:
        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        return;

     label2:
        $r6 = new java.util.Properties;

        specialinvoke $r6.<java.util.Properties: void <init>()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.'annotation'.WhitespaceDelimitedTagParser: void parseAssignments(java.util.Properties,java.lang.String)>($r6, $r5);

        $i1 = virtualinvoke $r6.<java.util.Properties: int size()>();

        if $i1 <= 0 goto label5;

        $r7 = virtualinvoke $r6.<java.util.Properties: java.util.Enumeration propertyNames()>();

     label3:
        $z0 = interfaceinvoke $r7.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke $r7.<java.util.Enumeration: java.lang.Object nextElement()>();

        r9 = (java.lang.String) $r8;

        $r10 = virtualinvoke $r6.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r9);

        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.'annotation'.WhitespaceDelimitedTagParser: void setValue(org.apache.xmlbeans.impl.jam.mutable.MAnnotation[],java.lang.String,java.lang.String)>($r3, r9, $r10);

        goto label3;

     label4:
        goto label6;

     label5:
        virtualinvoke r0.<org.apache.xmlbeans.impl.jam.'annotation'.WhitespaceDelimitedTagParser: void setSingleValueText(org.apache.xmlbeans.impl.jam.mutable.MAnnotation[],com.sun.javadoc.Tag)>($r3, r2);

     label6:
        return;
    }

    private void parseAssignments(java.util.Properties, java.lang.String)
    {
        org.apache.xmlbeans.impl.jam.'annotation'.WhitespaceDelimitedTagParser r0;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringIndexOutOfBoundsException $r20;
        org.apache.xmlbeans.impl.jam.provider.JamLogger $r1, $r7, $r15;
        java.lang.StringBuffer $r3, $r4, $r9, $r10, $r11, $r12, $r17, $r18, $r24, $r25, $r26;
        int $i0, $i2, $i3, $i4, $i6, i7, i9, i10, i11, i12, i14, $i15, $i17, $i19, $i20, $i21;
        java.lang.String $r5, $r6, $r13, $r19, r21, r22, $r23;
        java.util.Properties r14;
        char $c1, $c5, c8, $c13;

        r0 := @this: org.apache.xmlbeans.impl.jam.'annotation'.WhitespaceDelimitedTagParser;

        r14 := @parameter0: java.util.Properties;

        r21 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.'annotation'.WhitespaceDelimitedTagParser: org.apache.xmlbeans.impl.jam.provider.JamLogger getLogger()>();

        $r24 = new java.lang.StringBuffer;

        specialinvoke $r24.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("PARSING LINE ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r21);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r1.<org.apache.xmlbeans.impl.jam.provider.JamLogger: void verbose(java.lang.String,java.lang.Object)>($r5, r0);

        r22 = specialinvoke r0.<org.apache.xmlbeans.impl.jam.'annotation'.WhitespaceDelimitedTagParser: java.lang.String removeComments(java.lang.String)>(r21);

     label01:
        if null == r22 goto label20;

        $i0 = virtualinvoke r22.<java.lang.String: int indexOf(java.lang.String)>("=");

        $i17 = (int) -1;

        if $i17 == $i0 goto label20;

        i7 = 0;

        c8 = virtualinvoke r22.<java.lang.String: char charAt(int)>(0);

     label02:
        $z0 = specialinvoke r0.<org.apache.xmlbeans.impl.jam.'annotation'.WhitespaceDelimitedTagParser: boolean isBlank(char)>(c8);

        if $z0 == 0 goto label03;

        i7 = i7 + 1;

        c8 = virtualinvoke r22.<java.lang.String: char charAt(int)>(i7);

        goto label02;

     label03:
        i9 = i7;

     label04:
        $c1 = virtualinvoke r22.<java.lang.String: char charAt(int)>(i7);

        $z1 = specialinvoke r0.<org.apache.xmlbeans.impl.jam.'annotation'.WhitespaceDelimitedTagParser: boolean isLegal(char)>($c1);

        if $z1 == 0 goto label05;

        i7 = i7 + 1;

        goto label04;

     label05:
        $r6 = virtualinvoke r22.<java.lang.String: java.lang.String substring(int,int)>(i9, i7);

        $i2 = virtualinvoke r22.<java.lang.String: int indexOf(java.lang.String)>("=");

        $i19 = (int) -1;

        if $i2 != $i19 goto label06;

        return;

     label06:
        i10 = $i2 + 1;

     label07:
        c8 = virtualinvoke r22.<java.lang.String: char charAt(int)>(i10);

     label08:
        goto label10;

     label09:
        $r20 := @caughtexception;

        virtualinvoke $r20.<java.lang.StringIndexOutOfBoundsException: void printStackTrace()>();

     label10:
        $z3 = specialinvoke r0.<org.apache.xmlbeans.impl.jam.'annotation'.WhitespaceDelimitedTagParser: boolean isBlank(char)>(c8);

        if $z3 == 0 goto label11;

        i10 = i10 + 1;

        c8 = virtualinvoke r22.<java.lang.String: char charAt(int)>(i10);

        goto label10;

     label11:
        $i20 = (int) c8;

        if $i20 != 34 goto label14;

        i11 = i10 + 1;

        i12 = i11;

     label12:
        $c13 = virtualinvoke r22.<java.lang.String: char charAt(int)>(i11);

        $i21 = (int) $c13;

        if 34 == $i21 goto label13;

        i11 = i11 + 1;

        $i6 = virtualinvoke r22.<java.lang.String: int length()>();

        if i11 < $i6 goto label12;

        $r15 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.'annotation'.WhitespaceDelimitedTagParser: org.apache.xmlbeans.impl.jam.provider.JamLogger getLogger()>();

        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("missing double quotes on line ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r22);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r15.<org.apache.xmlbeans.impl.jam.provider.JamLogger: void verbose(java.lang.String,java.lang.Object)>($r19, r0);

        goto label12;

     label13:
        i14 = i11;

        goto label17;

     label14:
        i11 = i10 + 1;

        i12 = i10;

     label15:
        $i3 = virtualinvoke r22.<java.lang.String: int length()>();

        if i11 >= $i3 goto label16;

        $c5 = virtualinvoke r22.<java.lang.String: char charAt(int)>(i11);

        $z2 = specialinvoke r0.<org.apache.xmlbeans.impl.jam.'annotation'.WhitespaceDelimitedTagParser: boolean isLegal(char)>($c5);

        if $z2 == 0 goto label16;

        i11 = i11 + 1;

        goto label15;

     label16:
        i14 = i11;

     label17:
        $r23 = virtualinvoke r22.<java.lang.String: java.lang.String substring(int,int)>(i12, i14);

        $i15 = virtualinvoke r22.<java.lang.String: int length()>();

        if i11 >= $i15 goto label18;

        $i4 = i11 + 1;

        r22 = virtualinvoke r22.<java.lang.String: java.lang.String substring(int)>($i4);

        goto label19;

     label18:
        r22 = null;

     label19:
        $r7 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.'annotation'.WhitespaceDelimitedTagParser: org.apache.xmlbeans.impl.jam.provider.JamLogger getLogger()>();

        $r26 = new java.lang.StringBuffer;

        specialinvoke $r26.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("SETTING KEY:");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" VALUE:");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r7.<org.apache.xmlbeans.impl.jam.provider.JamLogger: void verbose(java.lang.String,java.lang.Object)>($r13, r0);

        virtualinvoke r14.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r6, $r23);

        goto label01;

     label20:
        return;

        catch java.lang.StringIndexOutOfBoundsException from label07 to label08 with label09;
    }

    private java.lang.String removeComments(java.lang.String)
    {
        org.apache.xmlbeans.impl.jam.'annotation'.WhitespaceDelimitedTagParser r10;
        java.lang.StringBuffer $r2, $r3, $r5, $r8, $r9, $r15, $r16;
        int $i0, $i1, $i2, $i3, $i4, $i5, i7, i8, i9, $i11, $i13, $i15, $i16, $i18;
        java.lang.String r0, $r6, $r7, r11, r12, r13, $r14;
        char $c6;

        r10 := @this: org.apache.xmlbeans.impl.jam.'annotation'.WhitespaceDelimitedTagParser;

        r0 := @parameter0: java.lang.String;

        r11 = "";

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        r12 = r0;

        i7 = 0;

        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("//");

        i8 = $i1;

        $i2 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("\"");

        $i11 = (int) -1;

        if $i11 == $i2 goto label1;

        if $i2 >= $i1 goto label1;

        r13 = r0;

        goto label5;

     label1:
        if i7 >= $i0 goto label4;

        $i13 = (int) -1;

        if i8 == $i13 goto label4;

        $i3 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>("//", i7);

        i8 = $i3;

        $i15 = (int) -1;

        if $i15 == $i3 goto label1;

        if $i3 <= 0 goto label2;

        $i5 = $i3 - 1;

        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i5);

        $i16 = (int) $c6;

        if $i16 != 58 goto label2;

        i7 = $i3 + 2;

        goto label1;

     label2:
        $i4 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(10, $i3);

        i9 = $i4;

        $i18 = (int) -1;

        if $i18 != $i4 goto label3;

        i9 = $i0;

     label3:
        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r11);

        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i7, $i3);

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        r12 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i9);

        i7 = i9;

        goto label1;

     label4:
        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r11);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r12);

        r13 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

     label5:
        $r14 = virtualinvoke r13.<java.lang.String: java.lang.String trim()>();

        return $r14;
    }

    private boolean isBlank(char)
    {
        int $i1, $i2, $i3;
        char c0;
        org.apache.xmlbeans.impl.jam.'annotation'.WhitespaceDelimitedTagParser r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.jam.'annotation'.WhitespaceDelimitedTagParser;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        if $i1 == 32 goto label1;

        $i2 = (int) c0;

        if $i2 == 9 goto label1;

        $i3 = (int) c0;

        if $i3 != 10 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private boolean isLegal(char)
    {
        int $i1;
        char c0;
        org.apache.xmlbeans.impl.jam.'annotation'.WhitespaceDelimitedTagParser r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.jam.'annotation'.WhitespaceDelimitedTagParser;

        c0 := @parameter0: char;

        $z0 = specialinvoke r0.<org.apache.xmlbeans.impl.jam.'annotation'.WhitespaceDelimitedTagParser: boolean isBlank(char)>(c0);

        if $z0 != 0 goto label1;

        $i1 = (int) c0;

        if $i1 == 61 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }
}
