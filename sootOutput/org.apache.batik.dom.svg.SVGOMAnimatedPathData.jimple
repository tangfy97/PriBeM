public class org.apache.batik.dom.svg.SVGOMAnimatedPathData extends org.apache.batik.dom.svg.AbstractSVGAnimatedValue implements org.w3c.dom.svg.SVGAnimatedPathData
{
    protected boolean changing;
    protected org.apache.batik.dom.svg.SVGOMAnimatedPathData$BaseSVGPathSegList pathSegs;
    protected org.apache.batik.dom.svg.SVGOMAnimatedPathData$NormalizedBaseSVGPathSegList normalizedPathSegs;
    protected org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList animPathSegs;
    protected java.lang.String defaultValue;

    public void <init>(org.apache.batik.dom.svg.AbstractElement, java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.batik.dom.svg.SVGOMAnimatedPathData r0;
        java.lang.String r2, r3, r4;
        org.apache.batik.dom.svg.AbstractElement r1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedPathData;

        r1 := @parameter0: org.apache.batik.dom.svg.AbstractElement;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        specialinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void <init>(org.apache.batik.dom.svg.AbstractElement,java.lang.String,java.lang.String)>(r1, r2, r3);

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: java.lang.String defaultValue> = r4;

        return;
    }

    public org.w3c.dom.svg.SVGPathSegList getAnimatedNormalizedPathSegList()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.batik.dom.svg.SVGOMAnimatedPathData r1;

        r1 := @this: org.apache.batik.dom.svg.SVGOMAnimatedPathData;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("SVGAnimatedPathData.getAnimatedNormalizedPathSegList is not implemented");

        throw $r0;
    }

    public org.w3c.dom.svg.SVGPathSegList getAnimatedPathSegList()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedPathData r0;
        org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList $r1, $r2, $r3;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedPathData;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList animPathSegs>;

        if $r1 != null goto label1;

        $r3 = new org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList;

        specialinvoke $r3.<org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList: void <init>(org.apache.batik.dom.svg.SVGOMAnimatedPathData)>(r0);

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList animPathSegs> = $r3;

     label1:
        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList animPathSegs>;

        return $r2;
    }

    public org.w3c.dom.svg.SVGPathSegList getNormalizedPathSegList()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedPathData r0;
        org.apache.batik.dom.svg.SVGOMAnimatedPathData$NormalizedBaseSVGPathSegList $r1, $r2, $r3;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedPathData;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: org.apache.batik.dom.svg.SVGOMAnimatedPathData$NormalizedBaseSVGPathSegList normalizedPathSegs>;

        if $r1 != null goto label1;

        $r3 = new org.apache.batik.dom.svg.SVGOMAnimatedPathData$NormalizedBaseSVGPathSegList;

        specialinvoke $r3.<org.apache.batik.dom.svg.SVGOMAnimatedPathData$NormalizedBaseSVGPathSegList: void <init>(org.apache.batik.dom.svg.SVGOMAnimatedPathData)>(r0);

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: org.apache.batik.dom.svg.SVGOMAnimatedPathData$NormalizedBaseSVGPathSegList normalizedPathSegs> = $r3;

     label1:
        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: org.apache.batik.dom.svg.SVGOMAnimatedPathData$NormalizedBaseSVGPathSegList normalizedPathSegs>;

        return $r2;
    }

    public org.w3c.dom.svg.SVGPathSegList getPathSegList()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedPathData r0;
        org.apache.batik.dom.svg.SVGOMAnimatedPathData$BaseSVGPathSegList $r1, $r2, $r3;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedPathData;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: org.apache.batik.dom.svg.SVGOMAnimatedPathData$BaseSVGPathSegList pathSegs>;

        if $r1 != null goto label1;

        $r3 = new org.apache.batik.dom.svg.SVGOMAnimatedPathData$BaseSVGPathSegList;

        specialinvoke $r3.<org.apache.batik.dom.svg.SVGOMAnimatedPathData$BaseSVGPathSegList: void <init>(org.apache.batik.dom.svg.SVGOMAnimatedPathData)>(r0);

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: org.apache.batik.dom.svg.SVGOMAnimatedPathData$BaseSVGPathSegList pathSegs> = $r3;

     label1:
        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: org.apache.batik.dom.svg.SVGOMAnimatedPathData$BaseSVGPathSegList pathSegs>;

        return $r2;
    }

    public void check()
    {
        org.apache.batik.dom.svg.LiveAttributeException $r5, $r10;
        org.apache.batik.dom.svg.SVGOMAnimatedPathData r0;
        java.lang.String $r8, $r9, $r11;
        org.apache.batik.dom.svg.AbstractElement $r7, $r12;
        boolean $z0, $z1, $z2;
        org.apache.batik.dom.svg.SVGOMAnimatedPathData$BaseSVGPathSegList $r1, $r2, $r3, $r4, $r6, $r13;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedPathData;

        $z0 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal>;

        if $z0 != 0 goto label3;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: org.apache.batik.dom.svg.SVGOMAnimatedPathData$BaseSVGPathSegList pathSegs>;

        if $r1 != null goto label1;

        $r13 = new org.apache.batik.dom.svg.SVGOMAnimatedPathData$BaseSVGPathSegList;

        specialinvoke $r13.<org.apache.batik.dom.svg.SVGOMAnimatedPathData$BaseSVGPathSegList: void <init>(org.apache.batik.dom.svg.SVGOMAnimatedPathData)>(r0);

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: org.apache.batik.dom.svg.SVGOMAnimatedPathData$BaseSVGPathSegList pathSegs> = $r13;

     label1:
        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: org.apache.batik.dom.svg.SVGOMAnimatedPathData$BaseSVGPathSegList pathSegs>;

        virtualinvoke $r2.<org.apache.batik.dom.svg.SVGOMAnimatedPathData$BaseSVGPathSegList: void revalidate()>();

        $r3 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: org.apache.batik.dom.svg.SVGOMAnimatedPathData$BaseSVGPathSegList pathSegs>;

        $z1 = $r3.<org.apache.batik.dom.svg.SVGOMAnimatedPathData$BaseSVGPathSegList: boolean missing>;

        if $z1 == 0 goto label2;

        $r10 = new org.apache.batik.dom.svg.LiveAttributeException;

        $r12 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r11 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: java.lang.String localName>;

        specialinvoke $r10.<org.apache.batik.dom.svg.LiveAttributeException: void <init>(org.w3c.dom.Element,java.lang.String,short,java.lang.String)>($r12, $r11, 0, null);

        throw $r10;

     label2:
        $r4 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: org.apache.batik.dom.svg.SVGOMAnimatedPathData$BaseSVGPathSegList pathSegs>;

        $z2 = $r4.<org.apache.batik.dom.svg.SVGOMAnimatedPathData$BaseSVGPathSegList: boolean malformed>;

        if $z2 == 0 goto label3;

        $r5 = new org.apache.batik.dom.svg.LiveAttributeException;

        $r7 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r8 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: java.lang.String localName>;

        $r6 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: org.apache.batik.dom.svg.SVGOMAnimatedPathData$BaseSVGPathSegList pathSegs>;

        $r9 = virtualinvoke $r6.<org.apache.batik.dom.svg.SVGOMAnimatedPathData$BaseSVGPathSegList: java.lang.String getValueAsString()>();

        specialinvoke $r5.<org.apache.batik.dom.svg.LiveAttributeException: void <init>(org.w3c.dom.Element,java.lang.String,short,java.lang.String)>($r7, $r8, 1, $r9);

        throw $r5;

     label3:
        return;
    }

    public org.apache.batik.anim.values.AnimatableValue getUnderlyingValue(org.apache.batik.dom.anim.AnimationTarget)
    {
        org.apache.batik.dom.anim.AnimationTarget r4;
        org.apache.batik.dom.svg.SVGOMAnimatedPathData r0;
        org.w3c.dom.svg.SVGPathSegList $r1;
        org.apache.batik.parser.PathArrayProducer $r2;
        org.apache.batik.anim.values.AnimatablePathDataValue $r3;
        float[] $r6;
        short[] $r5;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedPathData;

        r4 := @parameter0: org.apache.batik.dom.anim.AnimationTarget;

        $r1 = virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: org.w3c.dom.svg.SVGPathSegList getPathSegList()>();

        $r2 = new org.apache.batik.parser.PathArrayProducer;

        specialinvoke $r2.<org.apache.batik.parser.PathArrayProducer: void <init>()>();

        staticinvoke <org.apache.batik.dom.svg.SVGAnimatedPathDataSupport: void handlePathSegList(org.w3c.dom.svg.SVGPathSegList,org.apache.batik.parser.PathHandler)>($r1, $r2);

        $r3 = new org.apache.batik.anim.values.AnimatablePathDataValue;

        $r5 = virtualinvoke $r2.<org.apache.batik.parser.PathArrayProducer: short[] getPathCommands()>();

        $r6 = virtualinvoke $r2.<org.apache.batik.parser.PathArrayProducer: float[] getPathParameters()>();

        specialinvoke $r3.<org.apache.batik.anim.values.AnimatablePathDataValue: void <init>(org.apache.batik.dom.anim.AnimationTarget,short[],float[])>(r4, $r5, $r6);

        return $r3;
    }

    protected void updateAnimatedValue(org.apache.batik.anim.values.AnimatableValue)
    {
        org.apache.batik.dom.svg.SVGOMAnimatedPathData r1;
        org.apache.batik.anim.values.AnimatablePathDataValue r2;
        float[] $r6;
        org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList $r3, $r4, $r7;
        short[] $r5;
        org.apache.batik.anim.values.AnimatableValue r0;

        r1 := @this: org.apache.batik.dom.svg.SVGOMAnimatedPathData;

        r0 := @parameter0: org.apache.batik.anim.values.AnimatableValue;

        if r0 != null goto label1;

        r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal> = 0;

        goto label3;

     label1:
        r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal> = 1;

        r2 = (org.apache.batik.anim.values.AnimatablePathDataValue) r0;

        $r3 = r1.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList animPathSegs>;

        if $r3 != null goto label2;

        $r7 = new org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList;

        specialinvoke $r7.<org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList: void <init>(org.apache.batik.dom.svg.SVGOMAnimatedPathData)>(r1);

        r1.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList animPathSegs> = $r7;

     label2:
        $r4 = r1.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList animPathSegs>;

        $r5 = virtualinvoke r2.<org.apache.batik.anim.values.AnimatablePathDataValue: short[] getCommands()>();

        $r6 = virtualinvoke r2.<org.apache.batik.anim.values.AnimatablePathDataValue: float[] getParameters()>();

        virtualinvoke $r4.<org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList: void setAnimatedValue(short[],float[])>($r5, $r6);

     label3:
        virtualinvoke r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireAnimatedAttributeListeners()>();

        return;
    }

    public void attrAdded(org.w3c.dom.Attr, java.lang.String)
    {
        org.apache.batik.dom.svg.SVGOMAnimatedPathData r0;
        org.apache.batik.dom.svg.SVGOMAnimatedPathData$BaseSVGPathSegList $r1, $r4;
        org.apache.batik.dom.svg.SVGOMAnimatedPathData$NormalizedBaseSVGPathSegList $r2, $r3;
        org.w3c.dom.Attr r5;
        java.lang.String r6;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedPathData;

        r5 := @parameter0: org.w3c.dom.Attr;

        r6 := @parameter1: java.lang.String;

        $z0 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: boolean changing>;

        if $z0 != 0 goto label2;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: org.apache.batik.dom.svg.SVGOMAnimatedPathData$BaseSVGPathSegList pathSegs>;

        if $r1 == null goto label1;

        $r4 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: org.apache.batik.dom.svg.SVGOMAnimatedPathData$BaseSVGPathSegList pathSegs>;

        virtualinvoke $r4.<org.apache.batik.dom.svg.AbstractSVGList: void invalidate()>();

     label1:
        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: org.apache.batik.dom.svg.SVGOMAnimatedPathData$NormalizedBaseSVGPathSegList normalizedPathSegs>;

        if $r2 == null goto label2;

        $r3 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: org.apache.batik.dom.svg.SVGOMAnimatedPathData$NormalizedBaseSVGPathSegList normalizedPathSegs>;

        virtualinvoke $r3.<org.apache.batik.dom.svg.AbstractSVGList: void invalidate()>();

     label2:
        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireBaseAttributeListeners()>();

        $z1 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal>;

        if $z1 != 0 goto label3;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireAnimatedAttributeListeners()>();

     label3:
        return;
    }

    public void attrModified(org.w3c.dom.Attr, java.lang.String, java.lang.String)
    {
        org.apache.batik.dom.svg.SVGOMAnimatedPathData r0;
        org.apache.batik.dom.svg.SVGOMAnimatedPathData$BaseSVGPathSegList $r1, $r4;
        org.apache.batik.dom.svg.SVGOMAnimatedPathData$NormalizedBaseSVGPathSegList $r2, $r3;
        org.w3c.dom.Attr r5;
        java.lang.String r6, r7;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedPathData;

        r5 := @parameter0: org.w3c.dom.Attr;

        r6 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        $z0 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: boolean changing>;

        if $z0 != 0 goto label2;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: org.apache.batik.dom.svg.SVGOMAnimatedPathData$BaseSVGPathSegList pathSegs>;

        if $r1 == null goto label1;

        $r4 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: org.apache.batik.dom.svg.SVGOMAnimatedPathData$BaseSVGPathSegList pathSegs>;

        virtualinvoke $r4.<org.apache.batik.dom.svg.AbstractSVGList: void invalidate()>();

     label1:
        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: org.apache.batik.dom.svg.SVGOMAnimatedPathData$NormalizedBaseSVGPathSegList normalizedPathSegs>;

        if $r2 == null goto label2;

        $r3 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: org.apache.batik.dom.svg.SVGOMAnimatedPathData$NormalizedBaseSVGPathSegList normalizedPathSegs>;

        virtualinvoke $r3.<org.apache.batik.dom.svg.AbstractSVGList: void invalidate()>();

     label2:
        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireBaseAttributeListeners()>();

        $z1 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal>;

        if $z1 != 0 goto label3;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireAnimatedAttributeListeners()>();

     label3:
        return;
    }

    public void attrRemoved(org.w3c.dom.Attr, java.lang.String)
    {
        org.apache.batik.dom.svg.SVGOMAnimatedPathData r0;
        org.apache.batik.dom.svg.SVGOMAnimatedPathData$BaseSVGPathSegList $r1, $r4;
        org.apache.batik.dom.svg.SVGOMAnimatedPathData$NormalizedBaseSVGPathSegList $r2, $r3;
        org.w3c.dom.Attr r5;
        java.lang.String r6;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedPathData;

        r5 := @parameter0: org.w3c.dom.Attr;

        r6 := @parameter1: java.lang.String;

        $z0 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: boolean changing>;

        if $z0 != 0 goto label2;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: org.apache.batik.dom.svg.SVGOMAnimatedPathData$BaseSVGPathSegList pathSegs>;

        if $r1 == null goto label1;

        $r4 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: org.apache.batik.dom.svg.SVGOMAnimatedPathData$BaseSVGPathSegList pathSegs>;

        virtualinvoke $r4.<org.apache.batik.dom.svg.AbstractSVGList: void invalidate()>();

     label1:
        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: org.apache.batik.dom.svg.SVGOMAnimatedPathData$NormalizedBaseSVGPathSegList normalizedPathSegs>;

        if $r2 == null goto label2;

        $r3 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: org.apache.batik.dom.svg.SVGOMAnimatedPathData$NormalizedBaseSVGPathSegList normalizedPathSegs>;

        virtualinvoke $r3.<org.apache.batik.dom.svg.AbstractSVGList: void invalidate()>();

     label2:
        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireBaseAttributeListeners()>();

        $z1 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal>;

        if $z1 != 0 goto label3;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireAnimatedAttributeListeners()>();

     label3:
        return;
    }
}
