abstract class com.mycila.inject.scope.RefScope extends com.mycila.inject.scope.MycilaScope
{
    static final java.lang.Object NULL;

    void <init>()
    {
        com.mycila.inject.scope.RefScope r0;

        r0 := @this: com.mycila.inject.scope.RefScope;

        specialinvoke r0.<com.mycila.inject.scope.MycilaScope: void <init>()>();

        return;
    }

    public final com.google.inject.Provider scope(com.google.inject.Key, com.google.inject.Provider)
    {
        com.google.inject.Provider r2;
        com.google.inject.Key r3;
        com.mycila.inject.scope.RefScope r1;
        com.mycila.inject.scope.RefScope$1 $r0;

        r1 := @this: com.mycila.inject.scope.RefScope;

        r3 := @parameter0: com.google.inject.Key;

        r2 := @parameter1: com.google.inject.Provider;

        $r0 = new com.mycila.inject.scope.RefScope$1;

        specialinvoke $r0.<com.mycila.inject.scope.RefScope$1: void <init>(com.mycila.inject.scope.RefScope,com.google.inject.Provider)>(r1, r2);

        return $r0;
    }

    protected abstract java.lang.ref.Reference build(java.lang.Object);

    static void <clinit>()
    {
        java.lang.Object $r0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <com.mycila.inject.scope.RefScope: java.lang.Object NULL> = $r0;

        return;
    }
}
