public class org.springframework.web.util.NestedServletException extends javax.servlet.ServletException
{
    private static final long serialVersionUID;

    static void <clinit>()
    {
        java.lang.Class $r0;

        <org.springframework.web.util.NestedServletException: long serialVersionUID> = -5292377985529381145L;

        $r0 = class "Lorg/springframework/core/NestedExceptionUtils;";

        virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.springframework.web.util.NestedServletException r0;

        r0 := @this: org.springframework.web.util.NestedServletException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<javax.servlet.ServletException: void <init>(java.lang.String)>(r1);

        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r2, $r3;
        org.springframework.web.util.NestedServletException r0;
        java.lang.String r1;

        r0 := @this: org.springframework.web.util.NestedServletException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<javax.servlet.ServletException: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2);

        $r3 = virtualinvoke r0.<org.springframework.web.util.NestedServletException: java.lang.Throwable getCause()>();

        if $r3 != null goto label1;

        if r2 == null goto label1;

        virtualinvoke r0.<org.springframework.web.util.NestedServletException: java.lang.Throwable initCause(java.lang.Throwable)>(r2);

     label1:
        return;
    }

    public java.lang.String getMessage()
    {
        java.lang.Throwable $r2;
        org.springframework.web.util.NestedServletException r0;
        java.lang.String $r1, $r3;

        r0 := @this: org.springframework.web.util.NestedServletException;

        $r1 = specialinvoke r0.<javax.servlet.ServletException: java.lang.String getMessage()>();

        $r2 = virtualinvoke r0.<org.springframework.web.util.NestedServletException: java.lang.Throwable getCause()>();

        $r3 = staticinvoke <org.springframework.core.NestedExceptionUtils: java.lang.String buildMessage(java.lang.String,java.lang.Throwable)>($r1, $r2);

        return $r3;
    }
}
