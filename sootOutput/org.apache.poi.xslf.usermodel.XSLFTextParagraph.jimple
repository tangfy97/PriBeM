public class org.apache.poi.xslf.usermodel.XSLFTextParagraph extends java.lang.Object implements java.lang.Iterable
{
    private final org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p;
    private final java.util.List _runs;
    private final org.apache.poi.xslf.usermodel.XSLFTextShape _shape;
    private java.util.List _lines;
    private org.apache.poi.xslf.usermodel.TextFragment _bullet;
    private double _maxLineHeight;

    void <init>(org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph, org.apache.poi.xslf.usermodel.XSLFTextShape)
    {
        org.apache.poi.xslf.usermodel.XSLFTextRun $r10, $r14, $r16;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties $r8, $r13;
        org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun $r7, $r12, r18;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r0;
        java.util.ArrayList $r2;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextLineBreak r19;
        int i0, i1;
        org.apache.xmlbeans.XmlObject r6;
        java.lang.String $r9;
        org.apache.poi.xslf.usermodel.XSLFTextShape r3;
        boolean $z0, $z1, $z2;
        java.util.List $r11, $r15, $r17;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextField r20;
        org.apache.xmlbeans.XmlObject[] $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph r1, $r4;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        r1 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph;

        r3 := @parameter1: org.apache.poi.xslf.usermodel.XSLFTextShape;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p> = r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.util.List _runs> = $r2;

        r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.apache.poi.xslf.usermodel.XSLFTextShape _shape> = r3;

        $r4 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.apache.xmlbeans.XmlObject[] selectPath(java.lang.String)>("*");

        i0 = lengthof $r5;

        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        r6 = $r5[i1];

        $z0 = r6 instanceof org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun;

        if $z0 == 0 goto label2;

        r18 = (org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun) r6;

        $r17 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.util.List _runs>;

        $r16 = new org.apache.poi.xslf.usermodel.XSLFTextRun;

        specialinvoke $r16.<org.apache.poi.xslf.usermodel.XSLFTextRun: void <init>(org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun,org.apache.poi.xslf.usermodel.XSLFTextParagraph)>(r18, r0);

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r16);

        goto label4;

     label2:
        $z1 = r6 instanceof org.openxmlformats.schemas.drawingml.x2006.main.CTTextLineBreak;

        if $z1 == 0 goto label3;

        r19 = (org.openxmlformats.schemas.drawingml.x2006.main.CTTextLineBreak) r6;

        $r12 = staticinvoke <org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun$Factory: org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun newInstance()>();

        $r13 = interfaceinvoke r19.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextLineBreak: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties getRPr()>();

        interfaceinvoke $r12.<org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun: void setRPr(org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties)>($r13);

        interfaceinvoke $r12.<org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun: void setT(java.lang.String)>("\n");

        $r15 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.util.List _runs>;

        $r14 = new org.apache.poi.xslf.usermodel.XSLFTextRun;

        specialinvoke $r14.<org.apache.poi.xslf.usermodel.XSLFTextRun: void <init>(org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun,org.apache.poi.xslf.usermodel.XSLFTextParagraph)>($r12, r0);

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r14);

        goto label4;

     label3:
        $z2 = r6 instanceof org.openxmlformats.schemas.drawingml.x2006.main.CTTextField;

        if $z2 == 0 goto label4;

        r20 = (org.openxmlformats.schemas.drawingml.x2006.main.CTTextField) r6;

        $r7 = staticinvoke <org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun$Factory: org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun newInstance()>();

        $r8 = interfaceinvoke r20.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextField: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties getRPr()>();

        interfaceinvoke $r7.<org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun: void setRPr(org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties)>($r8);

        $r9 = interfaceinvoke r20.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextField: java.lang.String getT()>();

        interfaceinvoke $r7.<org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun: void setT(java.lang.String)>($r9);

        $r11 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.util.List _runs>;

        $r10 = new org.apache.poi.xslf.usermodel.XSLFTextRun;

        specialinvoke $r10.<org.apache.poi.xslf.usermodel.XSLFTextRun: void <init>(org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun,org.apache.poi.xslf.usermodel.XSLFTextParagraph)>($r7, r0);

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r10);

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        return;
    }

    public java.lang.String getText()
    {
        org.apache.poi.xslf.usermodel.XSLFTextRun r6;
        java.util.Iterator $r3;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r1;
        java.util.List $r2;
        java.lang.StringBuilder $r0;
        java.lang.Object $r5;
        java.lang.String $r4, $r7;
        boolean $z0;

        r1 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.util.List _runs>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.poi.xslf.usermodel.XSLFTextRun) $r5;

        $r7 = virtualinvoke r6.<org.apache.poi.xslf.usermodel.XSLFTextRun: java.lang.String getText()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        goto label1;

     label2:
        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    java.lang.String getRenderableText()
    {
        org.apache.poi.xslf.usermodel.XSLFTextRun r6;
        java.util.Iterator $r3;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r1;
        java.util.List $r2;
        java.lang.StringBuilder $r0;
        java.lang.Object $r5;
        java.lang.String $r4, $r7;
        boolean $z0;

        r1 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.util.List _runs>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.poi.xslf.usermodel.XSLFTextRun) $r5;

        $r7 = virtualinvoke r6.<org.apache.poi.xslf.usermodel.XSLFTextRun: java.lang.String getRenderableText()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        goto label1;

     label2:
        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph getXmlObject()
    {
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph $r1;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        return $r1;
    }

    org.apache.poi.xslf.usermodel.XSLFTextShape getParentShape()
    {
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r0;
        org.apache.poi.xslf.usermodel.XSLFTextShape $r1;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.apache.poi.xslf.usermodel.XSLFTextShape _shape>;

        return $r1;
    }

    public java.util.List getTextRuns()
    {
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r0;
        java.util.List $r1;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.util.List _runs>;

        return $r1;
    }

    public java.util.Iterator iterator()
    {
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r0;
        java.util.List $r1;
        java.util.Iterator $r2;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.util.List _runs>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        return $r2;
    }

    public org.apache.poi.xslf.usermodel.XSLFTextRun addNewTextRun()
    {
        org.apache.poi.xslf.usermodel.XSLFTextRun $r4;
        java.util.List $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties $r3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun $r2;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph $r1;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun addNewR()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties addNewRPr()>();

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: void setLang(java.lang.String)>("en-US");

        $r4 = new org.apache.poi.xslf.usermodel.XSLFTextRun;

        specialinvoke $r4.<org.apache.poi.xslf.usermodel.XSLFTextRun: void <init>(org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun,org.apache.poi.xslf.usermodel.XSLFTextParagraph)>($r2, r0);

        $r5 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.util.List _runs>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r4);

        return $r4;
    }

    public org.apache.poi.xslf.usermodel.XSLFTextRun addLineBreak()
    {
        org.apache.poi.xslf.usermodel.XSLFTextRun $r11;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties $r3, $r12;
        org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun $r5;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextLineBreak $r2;
        int $i0, $i1, $i2;
        org.apache.poi.xslf.usermodel.XSLFLineBreak $r6;
        java.util.List $r4, $r7, $r8, $r9;
        java.lang.Object $r10;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph $r1;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextLineBreak addNewBr()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextLineBreak: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties addNewRPr()>();

        $r4 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.util.List _runs>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        $r9 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.util.List _runs>;

        $r8 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.util.List _runs>;

        $i1 = interfaceinvoke $r8.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i2);

        $r11 = (org.apache.poi.xslf.usermodel.XSLFTextRun) $r10;

        $r12 = virtualinvoke $r11.<org.apache.poi.xslf.usermodel.XSLFTextRun: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties getRPr()>();

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>($r12);

     label1:
        $r5 = staticinvoke <org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun$Factory: org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun newInstance()>();

        interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun: void setRPr(org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties)>($r3);

        interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun: void setT(java.lang.String)>("\n");

        $r6 = new org.apache.poi.xslf.usermodel.XSLFLineBreak;

        specialinvoke $r6.<org.apache.poi.xslf.usermodel.XSLFLineBreak: void <init>(org.openxmlformats.schemas.drawingml.x2006.main.CTRegularTextRun,org.apache.poi.xslf.usermodel.XSLFTextParagraph,org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties)>($r5, r0, $r3);

        $r7 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.util.List _runs>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r6);

        return $r6;
    }

    public org.apache.poi.xslf.usermodel.TextAlign getTextAlign()
    {
        org.apache.poi.xslf.usermodel.TextAlign $r4;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r1;
        int $i0;
        java.lang.Object $r2, $r3;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph$1 $r0;

        r1 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        $r0 = new org.apache.poi.xslf.usermodel.XSLFTextParagraph$1;

        $i0 = virtualinvoke r1.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: int getLevel()>();

        specialinvoke $r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph$1: void <init>(org.apache.poi.xslf.usermodel.XSLFTextParagraph,int)>(r1, $i0);

        specialinvoke r1.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: boolean fetchParagraphProperty(org.apache.poi.xslf.model.ParagraphPropertyFetcher)>($r0);

        $r2 = virtualinvoke $r0.<org.apache.poi.xslf.model.ParagraphPropertyFetcher: java.lang.Object getValue()>();

        if $r2 != null goto label1;

        $r4 = <org.apache.poi.xslf.usermodel.TextAlign: org.apache.poi.xslf.usermodel.TextAlign LEFT>;

        goto label2;

     label1:
        $r3 = virtualinvoke $r0.<org.apache.poi.xslf.model.ParagraphPropertyFetcher: java.lang.Object getValue()>();

        $r4 = (org.apache.poi.xslf.usermodel.TextAlign) $r3;

     label2:
        return $r4;
    }

    public void setTextAlign(org.apache.poi.xslf.usermodel.TextAlign)
    {
        org.apache.poi.xslf.usermodel.TextAlign r3;
        org.openxmlformats.schemas.drawingml.x2006.main.STTextAlignType$Enum $r4;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r0;
        int $i0, $i1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph $r1, $r2, $r5;
        boolean $z0, $z1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties $r6;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        r3 := @parameter0: org.apache.poi.xslf.usermodel.TextAlign;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: boolean isSetPPr()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties getPPr()>();

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $r6 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties addNewPPr()>();

     label2:
        if r3 != null goto label3;

        $z1 = interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: boolean isSetAlgn()>();

        if $z1 == 0 goto label4;

        interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: void unsetAlgn()>();

        goto label4;

     label3:
        $i0 = virtualinvoke r3.<org.apache.poi.xslf.usermodel.TextAlign: int ordinal()>();

        $i1 = $i0 + 1;

        $r4 = staticinvoke <org.openxmlformats.schemas.drawingml.x2006.main.STTextAlignType$Enum: org.openxmlformats.schemas.drawingml.x2006.main.STTextAlignType$Enum forInt(int)>($i1);

        interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: void setAlgn(org.openxmlformats.schemas.drawingml.x2006.main.STTextAlignType$Enum)>($r4);

     label4:
        return;
    }

    public java.lang.String getBulletFont()
    {
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r1;
        int $i0;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph$2 $r0;
        java.lang.Object $r2;
        java.lang.String $r3;

        r1 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        $r0 = new org.apache.poi.xslf.usermodel.XSLFTextParagraph$2;

        $i0 = virtualinvoke r1.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: int getLevel()>();

        specialinvoke $r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph$2: void <init>(org.apache.poi.xslf.usermodel.XSLFTextParagraph,int)>(r1, $i0);

        specialinvoke r1.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: boolean fetchParagraphProperty(org.apache.poi.xslf.model.ParagraphPropertyFetcher)>($r0);

        $r2 = virtualinvoke $r0.<org.apache.poi.xslf.model.ParagraphPropertyFetcher: java.lang.Object getValue()>();

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    public void setBulletFont(java.lang.String)
    {
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextFont $r6;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph $r1, $r2, $r4;
        java.lang.String r3;
        boolean $z0, $z1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties $r5;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: boolean isSetPPr()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties getPPr()>();

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $r5 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties addNewPPr()>();

     label2:
        $z1 = interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: boolean isSetBuFont()>();

        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTTextFont getBuFont()>();

        goto label4;

     label3:
        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTTextFont addNewBuFont()>();

     label4:
        interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextFont: void setTypeface(java.lang.String)>(r3);

        return;
    }

    public java.lang.String getBulletCharacter()
    {
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r1;
        int $i0;
        java.lang.Object $r2;
        java.lang.String $r3;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph$3 $r0;

        r1 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        $r0 = new org.apache.poi.xslf.usermodel.XSLFTextParagraph$3;

        $i0 = virtualinvoke r1.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: int getLevel()>();

        specialinvoke $r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph$3: void <init>(org.apache.poi.xslf.usermodel.XSLFTextParagraph,int)>(r1, $i0);

        specialinvoke r1.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: boolean fetchParagraphProperty(org.apache.poi.xslf.model.ParagraphPropertyFetcher)>($r0);

        $r2 = virtualinvoke $r0.<org.apache.poi.xslf.model.ParagraphPropertyFetcher: java.lang.Object getValue()>();

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    public void setBulletCharacter(java.lang.String)
    {
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharBullet $r6;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph $r1, $r2, $r4;
        java.lang.String r3;
        boolean $z0, $z1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties $r5;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: boolean isSetPPr()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties getPPr()>();

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $r5 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties addNewPPr()>();

     label2:
        $z1 = interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: boolean isSetBuChar()>();

        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharBullet getBuChar()>();

        goto label4;

     label3:
        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharBullet addNewBuChar()>();

     label4:
        interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharBullet: void setChar(java.lang.String)>(r3);

        return;
    }

    public java.awt.Color getBulletFontColor()
    {
        java.awt.Color $r6;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r0;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph$4 $r4;
        org.apache.poi.xslf.usermodel.XSLFSheet $r2;
        org.apache.poi.xslf.usermodel.XSLFTheme $r3;
        int $i0;
        java.lang.Object $r5;
        org.apache.poi.xslf.usermodel.XSLFTextShape $r1;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.apache.poi.xslf.usermodel.XSLFTextShape getParentShape()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.xslf.usermodel.XSLFTextShape: org.apache.poi.xslf.usermodel.XSLFSheet getSheet()>();

        $r3 = virtualinvoke $r2.<org.apache.poi.xslf.usermodel.XSLFSheet: org.apache.poi.xslf.usermodel.XSLFTheme getTheme()>();

        $r4 = new org.apache.poi.xslf.usermodel.XSLFTextParagraph$4;

        $i0 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: int getLevel()>();

        specialinvoke $r4.<org.apache.poi.xslf.usermodel.XSLFTextParagraph$4: void <init>(org.apache.poi.xslf.usermodel.XSLFTextParagraph,int,org.apache.poi.xslf.usermodel.XSLFTheme)>(r0, $i0, $r3);

        specialinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: boolean fetchParagraphProperty(org.apache.poi.xslf.model.ParagraphPropertyFetcher)>($r4);

        $r5 = virtualinvoke $r4.<org.apache.poi.xslf.model.ParagraphPropertyFetcher: java.lang.Object getValue()>();

        $r6 = (java.awt.Color) $r5;

        return $r6;
    }

    public void setBulletFontColor(java.awt.Color)
    {
        java.awt.Color r4;
        byte[] $r3;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r0;
        byte $b1, $b3, $b5;
        int $i0, $i2, $i4;
        boolean $z0, $z1, $z2;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties $r6;
        org.openxmlformats.schemas.drawingml.x2006.main.CTColor $r7;
        org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor $r8;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph $r1, $r2, $r5;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        r4 := @parameter0: java.awt.Color;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: boolean isSetPPr()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties getPPr()>();

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $r6 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties addNewPPr()>();

     label2:
        $z1 = interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: boolean isSetBuClr()>();

        if $z1 == 0 goto label3;

        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTColor getBuClr()>();

        goto label4;

     label3:
        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTColor addNewBuClr()>();

     label4:
        $z2 = interfaceinvoke $r7.<org.openxmlformats.schemas.drawingml.x2006.main.CTColor: boolean isSetSrgbClr()>();

        if $z2 == 0 goto label5;

        $r8 = interfaceinvoke $r7.<org.openxmlformats.schemas.drawingml.x2006.main.CTColor: org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor getSrgbClr()>();

        goto label6;

     label5:
        $r8 = interfaceinvoke $r7.<org.openxmlformats.schemas.drawingml.x2006.main.CTColor: org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor addNewSrgbClr()>();

     label6:
        $r3 = newarray (byte)[3];

        $i0 = virtualinvoke r4.<java.awt.Color: int getRed()>();

        $b1 = (byte) $i0;

        $r3[0] = $b1;

        $i2 = virtualinvoke r4.<java.awt.Color: int getGreen()>();

        $b3 = (byte) $i2;

        $r3[1] = $b3;

        $i4 = virtualinvoke r4.<java.awt.Color: int getBlue()>();

        $b5 = (byte) $i4;

        $r3[2] = $b5;

        interfaceinvoke $r8.<org.openxmlformats.schemas.drawingml.x2006.main.CTSRgbColor: void setVal(byte[])>($r3);

        return;
    }

    public double getBulletFontSize()
    {
        java.lang.Double $r4;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r1;
        int $i0;
        java.lang.Object $r2, $r3;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph$5 $r0;
        double $d0;

        r1 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        $r0 = new org.apache.poi.xslf.usermodel.XSLFTextParagraph$5;

        $i0 = virtualinvoke r1.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: int getLevel()>();

        specialinvoke $r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph$5: void <init>(org.apache.poi.xslf.usermodel.XSLFTextParagraph,int)>(r1, $i0);

        specialinvoke r1.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: boolean fetchParagraphProperty(org.apache.poi.xslf.model.ParagraphPropertyFetcher)>($r0);

        $r2 = virtualinvoke $r0.<org.apache.poi.xslf.model.ParagraphPropertyFetcher: java.lang.Object getValue()>();

        if $r2 != null goto label1;

        $d0 = 100.0;

        goto label2;

     label1:
        $r3 = virtualinvoke $r0.<org.apache.poi.xslf.model.ParagraphPropertyFetcher: java.lang.Object getValue()>();

        $r4 = (java.lang.Double) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

     label2:
        return $d0;
    }

    public void setBulletFontSize(double)
    {
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r0;
        byte $b0;
        int $i1, $i2, $i3;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties r3, $r5;
        double d0, $d1, $d2, $d3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBulletSizePercent $r6;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBulletSizePoint $r7;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph $r1, $r2, $r4;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        d0 := @parameter0: double;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: boolean isSetPPr()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties getPPr()>();

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $r5 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties addNewPPr()>();

     label2:
        r3 = $r5;

        $b0 = d0 cmpl 0.0;

        $i3 = (int) $b0;

        if $i3 < 0 goto label6;

        $z3 = interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: boolean isSetBuSzPct()>();

        if $z3 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBulletSizePercent getBuSzPct()>();

        goto label4;

     label3:
        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBulletSizePercent addNewBuSzPct()>();

     label4:
        $d3 = d0 * 1000.0;

        $i2 = (int) $d3;

        interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBulletSizePercent: void setVal(int)>($i2);

        $z4 = interfaceinvoke r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: boolean isSetBuSzPts()>();

        if $z4 == 0 goto label5;

        interfaceinvoke r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: void unsetBuSzPts()>();

     label5:
        goto label9;

     label6:
        $z1 = interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: boolean isSetBuSzPts()>();

        if $z1 == 0 goto label7;

        $r7 = interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBulletSizePoint getBuSzPts()>();

        goto label8;

     label7:
        $r7 = interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBulletSizePoint addNewBuSzPts()>();

     label8:
        $d1 = neg d0;

        $d2 = $d1 * 100.0;

        $i1 = (int) $d2;

        interfaceinvoke $r7.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBulletSizePoint: void setVal(int)>($i1);

        $z2 = interfaceinvoke r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: boolean isSetBuSzPct()>();

        if $z2 == 0 goto label9;

        interfaceinvoke r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: void unsetBuSzPct()>();

     label9:
        return;
    }

    public void setIndent(double)
    {
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r0;
        byte $b0;
        int $i1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph $r1, $r2, $r3;
        boolean $z0, $z1;
        double d0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties $r4;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        d0 := @parameter0: double;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: boolean isSetPPr()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties getPPr()>();

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $r4 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties addNewPPr()>();

     label2:
        $b0 = d0 cmpl -1.0;

        if $b0 != 0 goto label3;

        $z1 = interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: boolean isSetIndent()>();

        if $z1 == 0 goto label4;

        interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: void unsetIndent()>();

        goto label4;

     label3:
        $i1 = staticinvoke <org.apache.poi.util.Units: int toEMU(double)>(d0);

        interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: void setIndent(int)>($i1);

     label4:
        return;
    }

    public double getIndent()
    {
        java.lang.Double $r4;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r1;
        int $i0;
        java.lang.Object $r2, $r3;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph$6 $r0;
        double $d0;

        r1 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        $r0 = new org.apache.poi.xslf.usermodel.XSLFTextParagraph$6;

        $i0 = virtualinvoke r1.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: int getLevel()>();

        specialinvoke $r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph$6: void <init>(org.apache.poi.xslf.usermodel.XSLFTextParagraph,int)>(r1, $i0);

        specialinvoke r1.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: boolean fetchParagraphProperty(org.apache.poi.xslf.model.ParagraphPropertyFetcher)>($r0);

        $r2 = virtualinvoke $r0.<org.apache.poi.xslf.model.ParagraphPropertyFetcher: java.lang.Object getValue()>();

        if $r2 != null goto label1;

        $d0 = 0.0;

        goto label2;

     label1:
        $r3 = virtualinvoke $r0.<org.apache.poi.xslf.model.ParagraphPropertyFetcher: java.lang.Object getValue()>();

        $r4 = (java.lang.Double) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

     label2:
        return $d0;
    }

    public void setLeftMargin(double)
    {
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r0;
        byte $b0;
        int $i1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph $r1, $r2, $r3;
        boolean $z0, $z1;
        double d0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties $r4;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        d0 := @parameter0: double;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: boolean isSetPPr()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties getPPr()>();

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $r4 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties addNewPPr()>();

     label2:
        $b0 = d0 cmpl -1.0;

        if $b0 != 0 goto label3;

        $z1 = interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: boolean isSetMarL()>();

        if $z1 == 0 goto label4;

        interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: void unsetMarL()>();

        goto label4;

     label3:
        $i1 = staticinvoke <org.apache.poi.util.Units: int toEMU(double)>(d0);

        interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: void setMarL(int)>($i1);

     label4:
        return;
    }

    public double getLeftMargin()
    {
        org.apache.poi.xslf.usermodel.XSLFTextParagraph$7 $r0;
        java.lang.Double $r4;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r1;
        int $i0;
        java.lang.Object $r2, $r3;
        double $d0;

        r1 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        $r0 = new org.apache.poi.xslf.usermodel.XSLFTextParagraph$7;

        $i0 = virtualinvoke r1.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: int getLevel()>();

        specialinvoke $r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph$7: void <init>(org.apache.poi.xslf.usermodel.XSLFTextParagraph,int)>(r1, $i0);

        specialinvoke r1.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: boolean fetchParagraphProperty(org.apache.poi.xslf.model.ParagraphPropertyFetcher)>($r0);

        $r2 = virtualinvoke $r0.<org.apache.poi.xslf.model.ParagraphPropertyFetcher: java.lang.Object getValue()>();

        if $r2 != null goto label1;

        $d0 = 0.0;

        goto label2;

     label1:
        $r3 = virtualinvoke $r0.<org.apache.poi.xslf.model.ParagraphPropertyFetcher: java.lang.Object getValue()>();

        $r4 = (java.lang.Double) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

     label2:
        return $d0;
    }

    public double getDefaultTabSize()
    {
        org.apache.poi.xslf.usermodel.XSLFTextParagraph$8 $r0;
        java.lang.Double $r4;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r1;
        int $i0;
        java.lang.Object $r2, $r3;
        double $d0;

        r1 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        $r0 = new org.apache.poi.xslf.usermodel.XSLFTextParagraph$8;

        $i0 = virtualinvoke r1.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: int getLevel()>();

        specialinvoke $r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph$8: void <init>(org.apache.poi.xslf.usermodel.XSLFTextParagraph,int)>(r1, $i0);

        specialinvoke r1.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: boolean fetchParagraphProperty(org.apache.poi.xslf.model.ParagraphPropertyFetcher)>($r0);

        $r2 = virtualinvoke $r0.<org.apache.poi.xslf.model.ParagraphPropertyFetcher: java.lang.Object getValue()>();

        if $r2 != null goto label1;

        $d0 = 0.0;

        goto label2;

     label1:
        $r3 = virtualinvoke $r0.<org.apache.poi.xslf.model.ParagraphPropertyFetcher: java.lang.Object getValue()>();

        $r4 = (java.lang.Double) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

     label2:
        return $d0;
    }

    public double getTabStop(int)
    {
        java.lang.Double $r4;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r1;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph$9 $r0;
        int $i0, i1;
        java.lang.Object $r2, $r3;
        double $d0;

        r1 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        i1 := @parameter0: int;

        $r0 = new org.apache.poi.xslf.usermodel.XSLFTextParagraph$9;

        $i0 = virtualinvoke r1.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: int getLevel()>();

        specialinvoke $r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph$9: void <init>(org.apache.poi.xslf.usermodel.XSLFTextParagraph,int,int)>(r1, $i0, i1);

        specialinvoke r1.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: boolean fetchParagraphProperty(org.apache.poi.xslf.model.ParagraphPropertyFetcher)>($r0);

        $r2 = virtualinvoke $r0.<org.apache.poi.xslf.model.ParagraphPropertyFetcher: java.lang.Object getValue()>();

        if $r2 != null goto label1;

        $d0 = 0.0;

        goto label2;

     label1:
        $r3 = virtualinvoke $r0.<org.apache.poi.xslf.model.ParagraphPropertyFetcher: java.lang.Object getValue()>();

        $r4 = (java.lang.Double) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

     label2:
        return $d0;
    }

    public void addTabStop(double)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextTabStopList $r6;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextTabStop $r3;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r0;
        int $i0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph $r1, $r2, $r4;
        boolean $z0, $z1;
        double d0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties $r5;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        d0 := @parameter0: double;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: boolean isSetPPr()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties getPPr()>();

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $r5 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties addNewPPr()>();

     label2:
        $z1 = interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: boolean isSetTabLst()>();

        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTTextTabStopList getTabLst()>();

        goto label4;

     label3:
        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTTextTabStopList addNewTabLst()>();

     label4:
        $r3 = interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextTabStopList: org.openxmlformats.schemas.drawingml.x2006.main.CTTextTabStop addNewTab()>();

        $i0 = staticinvoke <org.apache.poi.util.Units: int toEMU(double)>(d0);

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextTabStop: void setPos(int)>($i0);

        return;
    }

    public void setLineSpacing(double)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacing $r4;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r0;
        byte $b0;
        int $i1, $i2, $i3;
        boolean $z0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties r3, $r8;
        double d0, $d1, $d2, $d3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacingPoint $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph $r1, $r2, $r7;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacingPercent $r6;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        d0 := @parameter0: double;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: boolean isSetPPr()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $r8 = interfaceinvoke $r7.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties getPPr()>();

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $r8 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties addNewPPr()>();

     label2:
        r3 = $r8;

        $r4 = staticinvoke <org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacing$Factory: org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacing newInstance()>();

        $b0 = d0 cmpl 0.0;

        $i3 = (int) $b0;

        if $i3 < 0 goto label3;

        $r6 = interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacing: org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacingPercent addNewSpcPct()>();

        $d3 = d0 * 1000.0;

        $i2 = (int) $d3;

        interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacingPercent: void setVal(int)>($i2);

        goto label4;

     label3:
        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacing: org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacingPoint addNewSpcPts()>();

        $d1 = neg d0;

        $d2 = $d1 * 100.0;

        $i1 = (int) $d2;

        interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacingPoint: void setVal(int)>($i1);

     label4:
        interfaceinvoke r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: void setLnSpc(org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacing)>($r4);

        return;
    }

    public double getLineSpacing()
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties $r6;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextNormalAutofit $r7;
        java.lang.Double $r4;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph$10 $r8;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r1;
        byte $b1;
        int $i0, $i2, $i3;
        org.apache.poi.xslf.usermodel.XSLFTextShape $r5;
        double $d0, $d1, d2, $d3, d4;
        java.lang.Object $r2, $r3;

        r1 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        $r8 = new org.apache.poi.xslf.usermodel.XSLFTextParagraph$10;

        $i0 = virtualinvoke r1.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: int getLevel()>();

        specialinvoke $r8.<org.apache.poi.xslf.usermodel.XSLFTextParagraph$10: void <init>(org.apache.poi.xslf.usermodel.XSLFTextParagraph,int)>(r1, $i0);

        specialinvoke r1.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: boolean fetchParagraphProperty(org.apache.poi.xslf.model.ParagraphPropertyFetcher)>($r8);

        $r2 = virtualinvoke $r8.<org.apache.poi.xslf.model.ParagraphPropertyFetcher: java.lang.Object getValue()>();

        if $r2 != null goto label1;

        $d3 = 100.0;

        goto label2;

     label1:
        $r3 = virtualinvoke $r8.<org.apache.poi.xslf.model.ParagraphPropertyFetcher: java.lang.Object getValue()>();

        $r4 = (java.lang.Double) $r3;

        $d3 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

     label2:
        d4 = $d3;

        $b1 = $d3 cmpl 0.0;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label3;

        $r5 = virtualinvoke r1.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.apache.poi.xslf.usermodel.XSLFTextShape getParentShape()>();

        $r6 = virtualinvoke $r5.<org.apache.poi.xslf.usermodel.XSLFTextShape: org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties getTextBodyPr()>();

        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextBodyProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTTextNormalAutofit getNormAutofit()>();

        if $r7 == null goto label3;

        $i2 = interfaceinvoke $r7.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextNormalAutofit: int getLnSpcReduction()>();

        $d0 = (double) $i2;

        $d1 = $d0 / 100000.0;

        d2 = 1.0 - $d1;

        d4 = $d3 * d2;

     label3:
        return d4;
    }

    public void setSpaceBefore(double)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacing $r4;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r0;
        byte $b0;
        int $i1, $i2, $i3;
        boolean $z0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties r3, $r8;
        double d0, $d1, $d2, $d3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacingPoint $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph $r1, $r2, $r7;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacingPercent $r6;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        d0 := @parameter0: double;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: boolean isSetPPr()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $r8 = interfaceinvoke $r7.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties getPPr()>();

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $r8 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties addNewPPr()>();

     label2:
        r3 = $r8;

        $r4 = staticinvoke <org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacing$Factory: org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacing newInstance()>();

        $b0 = d0 cmpl 0.0;

        $i3 = (int) $b0;

        if $i3 < 0 goto label3;

        $r6 = interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacing: org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacingPercent addNewSpcPct()>();

        $d3 = d0 * 1000.0;

        $i2 = (int) $d3;

        interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacingPercent: void setVal(int)>($i2);

        goto label4;

     label3:
        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacing: org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacingPoint addNewSpcPts()>();

        $d1 = neg d0;

        $d2 = $d1 * 100.0;

        $i1 = (int) $d2;

        interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacingPoint: void setVal(int)>($i1);

     label4:
        interfaceinvoke r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: void setSpcBef(org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacing)>($r4);

        return;
    }

    public double getSpaceBefore()
    {
        java.lang.Double $r4;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph$11 $r0;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r1;
        int $i0;
        java.lang.Object $r2, $r3;
        double $d0;

        r1 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        $r0 = new org.apache.poi.xslf.usermodel.XSLFTextParagraph$11;

        $i0 = virtualinvoke r1.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: int getLevel()>();

        specialinvoke $r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph$11: void <init>(org.apache.poi.xslf.usermodel.XSLFTextParagraph,int)>(r1, $i0);

        specialinvoke r1.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: boolean fetchParagraphProperty(org.apache.poi.xslf.model.ParagraphPropertyFetcher)>($r0);

        $r2 = virtualinvoke $r0.<org.apache.poi.xslf.model.ParagraphPropertyFetcher: java.lang.Object getValue()>();

        if $r2 != null goto label1;

        $d0 = 0.0;

        goto label2;

     label1:
        $r3 = virtualinvoke $r0.<org.apache.poi.xslf.model.ParagraphPropertyFetcher: java.lang.Object getValue()>();

        $r4 = (java.lang.Double) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

     label2:
        return $d0;
    }

    public void setSpaceAfter(double)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacing $r4;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r0;
        byte $b0;
        int $i1, $i2, $i3;
        boolean $z0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties r3, $r8;
        double d0, $d1, $d2, $d3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacingPoint $r5;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph $r1, $r2, $r7;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacingPercent $r6;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        d0 := @parameter0: double;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: boolean isSetPPr()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $r8 = interfaceinvoke $r7.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties getPPr()>();

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $r8 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties addNewPPr()>();

     label2:
        r3 = $r8;

        $r4 = staticinvoke <org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacing$Factory: org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacing newInstance()>();

        $b0 = d0 cmpl 0.0;

        $i3 = (int) $b0;

        if $i3 < 0 goto label3;

        $r6 = interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacing: org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacingPercent addNewSpcPct()>();

        $d3 = d0 * 1000.0;

        $i2 = (int) $d3;

        interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacingPercent: void setVal(int)>($i2);

        goto label4;

     label3:
        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacing: org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacingPoint addNewSpcPts()>();

        $d1 = neg d0;

        $d2 = $d1 * 100.0;

        $i1 = (int) $d2;

        interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacingPoint: void setVal(int)>($i1);

     label4:
        interfaceinvoke r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: void setSpcAft(org.openxmlformats.schemas.drawingml.x2006.main.CTTextSpacing)>($r4);

        return;
    }

    public double getSpaceAfter()
    {
        java.lang.Double $r4;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r1;
        int $i0;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph$12 $r0;
        java.lang.Object $r2, $r3;
        double $d0;

        r1 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        $r0 = new org.apache.poi.xslf.usermodel.XSLFTextParagraph$12;

        $i0 = virtualinvoke r1.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: int getLevel()>();

        specialinvoke $r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph$12: void <init>(org.apache.poi.xslf.usermodel.XSLFTextParagraph,int)>(r1, $i0);

        specialinvoke r1.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: boolean fetchParagraphProperty(org.apache.poi.xslf.model.ParagraphPropertyFetcher)>($r0);

        $r2 = virtualinvoke $r0.<org.apache.poi.xslf.model.ParagraphPropertyFetcher: java.lang.Object getValue()>();

        if $r2 != null goto label1;

        $d0 = 0.0;

        goto label2;

     label1:
        $r3 = virtualinvoke $r0.<org.apache.poi.xslf.model.ParagraphPropertyFetcher: java.lang.Object getValue()>();

        $r4 = (java.lang.Double) $r3;

        $d0 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

     label2:
        return $d0;
    }

    public void setLevel(int)
    {
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r0;
        int i0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph $r1, $r2, $r3;
        boolean $z0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties $r4;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: boolean isSetPPr()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties getPPr()>();

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $r4 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties addNewPPr()>();

     label2:
        interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: void setLvl(int)>(i0);

        return;
    }

    public int getLevel()
    {
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r0;
        int $i0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties $r2;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties getPPr()>();

        if $r2 != null goto label1;

        return 0;

     label1:
        $i0 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: int getLvl()>();

        return $i0;
    }

    public boolean isBullet()
    {
        org.apache.poi.xslf.usermodel.XSLFTextParagraph$13 $r0;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r1;
        int $i0;
        java.lang.Boolean $r4;
        java.lang.Object $r2, $r3;
        boolean $z0;

        r1 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        $r0 = new org.apache.poi.xslf.usermodel.XSLFTextParagraph$13;

        $i0 = virtualinvoke r1.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: int getLevel()>();

        specialinvoke $r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph$13: void <init>(org.apache.poi.xslf.usermodel.XSLFTextParagraph,int)>(r1, $i0);

        specialinvoke r1.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: boolean fetchParagraphProperty(org.apache.poi.xslf.model.ParagraphPropertyFetcher)>($r0);

        $r2 = virtualinvoke $r0.<org.apache.poi.xslf.model.ParagraphPropertyFetcher: java.lang.Object getValue()>();

        if $r2 != null goto label1;

        $z0 = 0;

        goto label2;

     label1:
        $r3 = virtualinvoke $r0.<org.apache.poi.xslf.model.ParagraphPropertyFetcher: java.lang.Object getValue()>();

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

     label2:
        return $z0;
    }

    public void setBullet(boolean)
    {
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextFont $r3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharBullet $r4;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph $r1, $r2, $r5;
        boolean $z0, z1, $z2;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties $r6;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        z1 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: boolean isBullet()>();

        if $z0 != z1 goto label1;

        return;

     label1:
        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $z2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: boolean isSetPPr()>();

        if $z2 == 0 goto label2;

        $r5 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties getPPr()>();

        goto label3;

     label2:
        $r2 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $r6 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties addNewPPr()>();

     label3:
        if z1 != 0 goto label4;

        interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTTextNoBullet addNewBuNone()>();

        goto label5;

     label4:
        $r3 = interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTTextFont addNewBuFont()>();

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextFont: void setTypeface(java.lang.String)>("Arial");

        $r4 = interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharBullet addNewBuChar()>();

        interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharBullet: void setChar(java.lang.String)>("\u2022");

     label5:
        return;
    }

    public void setBulletAutoNumber(org.apache.poi.xslf.usermodel.ListAutoNumber, int)
    {
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextAutonumberBullet $r8;
        org.openxmlformats.schemas.drawingml.x2006.main.STTextAutonumberScheme$Enum $r4;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r0;
        org.apache.poi.xslf.usermodel.ListAutoNumber r3;
        java.lang.IllegalArgumentException $r6;
        int i0, $i1, $i2;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph $r1, $r2, $r5;
        boolean $z0, $z1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties $r7;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        r3 := @parameter0: org.apache.poi.xslf.usermodel.ListAutoNumber;

        i0 := @parameter1: int;

        if i0 >= 1 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Start Number must be greater or equal that 1");

        throw $r6;

     label1:
        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: boolean isSetPPr()>();

        if $z0 == 0 goto label2;

        $r5 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $r7 = interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties getPPr()>();

        goto label3;

     label2:
        $r2 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $r7 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties addNewPPr()>();

     label3:
        $z1 = interfaceinvoke $r7.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: boolean isSetBuAutoNum()>();

        if $z1 == 0 goto label4;

        $r8 = interfaceinvoke $r7.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTTextAutonumberBullet getBuAutoNum()>();

        goto label5;

     label4:
        $r8 = interfaceinvoke $r7.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties: org.openxmlformats.schemas.drawingml.x2006.main.CTTextAutonumberBullet addNewBuAutoNum()>();

     label5:
        $i1 = virtualinvoke r3.<org.apache.poi.xslf.usermodel.ListAutoNumber: int ordinal()>();

        $i2 = $i1 + 1;

        $r4 = staticinvoke <org.openxmlformats.schemas.drawingml.x2006.main.STTextAutonumberScheme$Enum: org.openxmlformats.schemas.drawingml.x2006.main.STTextAutonumberScheme$Enum forInt(int)>($i2);

        interfaceinvoke $r8.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextAutonumberBullet: void setType(org.openxmlformats.schemas.drawingml.x2006.main.STTextAutonumberScheme$Enum)>($r4);

        interfaceinvoke $r8.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextAutonumberBullet: void setStartAt(int)>(i0);

        return;
    }

    public java.lang.String toString()
    {
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7;
        java.lang.Class $r3;
        java.lang.String $r6, $r8;

        r2 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r6 = virtualinvoke r2.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.lang.String getText()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    java.util.List getTextLines()
    {
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r0;
        java.util.List $r1;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.util.List _lines>;

        return $r1;
    }

    double getWrappingWidth(boolean, java.awt.Graphics2D)
    {
        java.awt.geom.Rectangle2D $r6;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r0;
        org.apache.poi.xslf.usermodel.RenderableShape $r12;
        byte $b0, $b1, $b2;
        org.apache.poi.xslf.usermodel.XSLFSheet $r9;
        java.awt.Graphics2D r5;
        int $i3, $i4, $i5;
        org.apache.poi.xslf.usermodel.XSLFTextShape $r1, $r2, $r4, $r7, $r8;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, d9;
        boolean $z0, z1, $z2;
        org.apache.poi.xslf.usermodel.XMLSlideShow $r10;
        java.awt.Dimension $r11;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        z1 := @parameter0: boolean;

        r5 := @parameter1: java.awt.Graphics2D;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.apache.poi.xslf.usermodel.XSLFTextShape _shape>;

        $d0 = virtualinvoke $r1.<org.apache.poi.xslf.usermodel.XSLFTextShape: double getLeftInset()>();

        $r2 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.apache.poi.xslf.usermodel.XSLFTextShape _shape>;

        $d1 = virtualinvoke $r2.<org.apache.poi.xslf.usermodel.XSLFTextShape: double getRightInset()>();

        $r12 = new org.apache.poi.xslf.usermodel.RenderableShape;

        $r4 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.apache.poi.xslf.usermodel.XSLFTextShape _shape>;

        specialinvoke $r12.<org.apache.poi.xslf.usermodel.RenderableShape: void <init>(org.apache.poi.xslf.usermodel.XSLFSimpleShape)>($r4);

        $r6 = virtualinvoke $r12.<org.apache.poi.xslf.usermodel.RenderableShape: java.awt.geom.Rectangle2D getAnchor(java.awt.Graphics2D)>(r5);

        $d2 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: double getLeftMargin()>();

        $d3 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: double getIndent()>();

        $r7 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.apache.poi.xslf.usermodel.XSLFTextShape _shape>;

        $z0 = virtualinvoke $r7.<org.apache.poi.xslf.usermodel.XSLFTextShape: boolean getWordWrap()>();

        if $z0 != 0 goto label1;

        $r8 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.apache.poi.xslf.usermodel.XSLFTextShape _shape>;

        $r9 = virtualinvoke $r8.<org.apache.poi.xslf.usermodel.XSLFTextShape: org.apache.poi.xslf.usermodel.XSLFSheet getSheet()>();

        $r10 = virtualinvoke $r9.<org.apache.poi.xslf.usermodel.XSLFSheet: org.apache.poi.xslf.usermodel.XMLSlideShow getSlideShow()>();

        $r11 = virtualinvoke $r10.<org.apache.poi.xslf.usermodel.XMLSlideShow: java.awt.Dimension getPageSize()>();

        $d7 = virtualinvoke $r11.<java.awt.Dimension: double getWidth()>();

        $d8 = virtualinvoke $r6.<java.awt.geom.Rectangle2D: double getX()>();

        d9 = $d7 - $d8;

        goto label4;

     label1:
        $d4 = virtualinvoke $r6.<java.awt.geom.Rectangle2D: double getWidth()>();

        $d5 = $d4 - $d0;

        $d6 = $d5 - $d1;

        d9 = $d6 - $d2;

        if z1 == 0 goto label4;

        $z2 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: boolean isBullet()>();

        if $z2 == 0 goto label2;

        $b2 = $d3 cmpl 0.0;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label4;

        d9 = d9 - $d3;

        goto label4;

     label2:
        $b0 = $d3 cmpl 0.0;

        $i4 = (int) $b0;

        if $i4 <= 0 goto label3;

        d9 = d9 - $d3;

        goto label4;

     label3:
        $b1 = $d3 cmpg 0.0;

        $i5 = (int) $b1;

        if $i5 >= 0 goto label4;

        d9 = d9 + $d2;

     label4:
        return d9;
    }

    public double draw(java.awt.Graphics2D, double, double)
    {
        java.awt.geom.Rectangle2D $r6;
        org.apache.poi.xslf.usermodel.RenderableShape $r19;
        byte $b0, $b1, $b4;
        int[] $r17;
        boolean $z0, z1;
        java.util.List $r7;
        float $f0, $f1, $f2, $f3, $f4;
        org.apache.poi.xslf.usermodel.TextAlign $r18;
        java.awt.font.TextLayout $r14;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r0;
        org.apache.poi.xslf.usermodel.TextFragment r10, $r11, $r12, $r13, $r15, $r16;
        java.awt.Graphics2D r5;
        int $i2, $i3, $i5, $i6, $i7;
        org.apache.poi.xslf.usermodel.XSLFTextShape $r1, $r2, $r4;
        double $d0, $d1, d2, $d3, $d4, $d5, $d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, d26, d27;
        java.util.Iterator $r8;
        java.lang.Object $r9;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        r5 := @parameter0: java.awt.Graphics2D;

        d7 := @parameter1: double;

        d2 := @parameter2: double;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.apache.poi.xslf.usermodel.XSLFTextShape _shape>;

        $d0 = virtualinvoke $r1.<org.apache.poi.xslf.usermodel.XSLFTextShape: double getLeftInset()>();

        $r2 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.apache.poi.xslf.usermodel.XSLFTextShape _shape>;

        $d1 = virtualinvoke $r2.<org.apache.poi.xslf.usermodel.XSLFTextShape: double getRightInset()>();

        $r19 = new org.apache.poi.xslf.usermodel.RenderableShape;

        $r4 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.apache.poi.xslf.usermodel.XSLFTextShape _shape>;

        specialinvoke $r19.<org.apache.poi.xslf.usermodel.RenderableShape: void <init>(org.apache.poi.xslf.usermodel.XSLFSimpleShape)>($r4);

        $r6 = virtualinvoke $r19.<org.apache.poi.xslf.usermodel.RenderableShape: java.awt.geom.Rectangle2D getAnchor(java.awt.Graphics2D)>(r5);

        d26 = d2;

        $d3 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: double getLeftMargin()>();

        z1 = 1;

        $d4 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: double getIndent()>();

        $d5 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: double getLineSpacing()>();

        $r7 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.util.List _lines>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.apache.poi.xslf.usermodel.TextFragment) $r9;

        d27 = d7 + $d3;

        if z1 == 0 goto label05;

        $r11 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.apache.poi.xslf.usermodel.TextFragment _bullet>;

        if $r11 == null goto label04;

        $b0 = $d4 cmpg 0.0;

        $i5 = (int) $b0;

        if $i5 >= 0 goto label02;

        $r16 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.apache.poi.xslf.usermodel.TextFragment _bullet>;

        $d25 = d27 + $d4;

        virtualinvoke $r16.<org.apache.poi.xslf.usermodel.TextFragment: void draw(java.awt.Graphics2D,double,double)>(r5, $d25, d26);

        goto label05;

     label02:
        $b1 = $d4 cmpl 0.0;

        $i6 = (int) $b1;

        if $i6 <= 0 goto label03;

        $r15 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.apache.poi.xslf.usermodel.TextFragment _bullet>;

        virtualinvoke $r15.<org.apache.poi.xslf.usermodel.TextFragment: void draw(java.awt.Graphics2D,double,double)>(r5, d27, d26);

        d27 = d27 + $d4;

        goto label05;

     label03:
        $r12 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.apache.poi.xslf.usermodel.TextFragment _bullet>;

        virtualinvoke $r12.<org.apache.poi.xslf.usermodel.TextFragment: void draw(java.awt.Graphics2D,double,double)>(r5, d27, d26);

        $r13 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.apache.poi.xslf.usermodel.TextFragment _bullet>;

        $r14 = $r13.<org.apache.poi.xslf.usermodel.TextFragment: java.awt.font.TextLayout _layout>;

        $f3 = virtualinvoke $r14.<java.awt.font.TextLayout: float getAdvance()>();

        $f4 = $f3 + 1.0F;

        $d24 = (double) $f4;

        d27 = d27 + $d24;

        goto label05;

     label04:
        d27 = d27 + $d4;

     label05:
        $r17 = <org.apache.poi.xslf.usermodel.XSLFTextParagraph$14: int[] $SwitchMap$org$apache$poi$xslf$usermodel$TextAlign>;

        $r18 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.apache.poi.xslf.usermodel.TextAlign getTextAlign()>();

        $i2 = virtualinvoke $r18.<org.apache.poi.xslf.usermodel.TextAlign: int ordinal()>();

        $i3 = $r17[$i2];

        lookupswitch($i3)
        {
            case 1: goto label06;
            case 2: goto label07;
            default: goto label08;
        };

     label06:
        $d17 = virtualinvoke $r6.<java.awt.geom.Rectangle2D: double getWidth()>();

        $d18 = $d17 - $d3;

        $f2 = virtualinvoke r10.<org.apache.poi.xslf.usermodel.TextFragment: float getWidth()>();

        $d19 = (double) $f2;

        $d20 = $d18 - $d19;

        $d21 = $d20 - $d0;

        $d22 = $d21 - $d1;

        $d23 = $d22 / 2.0;

        d27 = d27 + $d23;

        goto label08;

     label07:
        $d8 = virtualinvoke $r6.<java.awt.geom.Rectangle2D: double getWidth()>();

        $f0 = virtualinvoke r10.<org.apache.poi.xslf.usermodel.TextFragment: float getWidth()>();

        $d9 = (double) $f0;

        $d10 = $d8 - $d9;

        $d11 = $d10 - $d0;

        $d12 = $d11 - $d1;

        d27 = d27 + $d12;

        goto label08;

     label08:
        virtualinvoke r10.<org.apache.poi.xslf.usermodel.TextFragment: void draw(java.awt.Graphics2D,double,double)>(r5, d27, d26);

        $b4 = $d5 cmpl 0.0;

        $i7 = (int) $b4;

        if $i7 <= 0 goto label09;

        $d14 = $d5 * 0.01;

        $f1 = virtualinvoke r10.<org.apache.poi.xslf.usermodel.TextFragment: float getHeight()>();

        $d15 = (double) $f1;

        $d16 = $d14 * $d15;

        d26 = d26 + $d16;

        goto label10;

     label09:
        $d13 = neg $d5;

        d26 = d26 + $d13;

     label10:
        z1 = 0;

        goto label01;

     label11:
        $d6 = d26 - d2;

        return $d6;
    }

    java.text.AttributedString getAttributedString(java.awt.Graphics2D)
    {
        java.awt.Color $r13;
        java.lang.Float $r17, $r28, $r30;
        java.lang.Integer $r18, $r20, $r24, $r26;
        byte $b2;
        org.apache.poi.xslf.usermodel.XSLFFontManager r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.text.AttributedString $r33;
        java.util.List $r7;
        float $f0;
        org.apache.poi.xslf.usermodel.XSLFTextRun r10;
        java.awt.font.TextAttribute $r12, $r15, $r16, $r19, $r21, $r23, $r25, $r27, $r29, $r31;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r0;
        org.apache.poi.xslf.usermodel.XSLFRenderingHint $r4;
        java.awt.Graphics2D r3;
        int $i0, i1, i3, $i4;
        java.lang.Boolean $r22;
        java.lang.String $r1, $r11, $r14, r32;
        double $d0;
        java.util.Iterator $r8;
        java.lang.Object $r5, $r9;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        r3 := @parameter0: java.awt.Graphics2D;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.lang.String getRenderableText()>();

        $r33 = new java.text.AttributedString;

        specialinvoke $r33.<java.text.AttributedString: void <init>(java.lang.String)>($r1);

        $r4 = <org.apache.poi.xslf.usermodel.XSLFRenderingHint: org.apache.poi.xslf.usermodel.XSLFRenderingHint FONT_HANDLER>;

        $r5 = virtualinvoke r3.<java.awt.Graphics2D: java.lang.Object getRenderingHint(java.awt.RenderingHints$Key)>($r4);

        r6 = (org.apache.poi.xslf.usermodel.XSLFFontManager) $r5;

        i3 = 0;

        $r7 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.util.List _runs>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z6 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label10;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.apache.poi.xslf.usermodel.XSLFTextRun) $r9;

        $r11 = virtualinvoke r10.<org.apache.poi.xslf.usermodel.XSLFTextRun: java.lang.String getRenderableText()>();

        $i0 = virtualinvoke $r11.<java.lang.String: int length()>();

        if $i0 != 0 goto label02;

        goto label01;

     label02:
        i1 = i3 + $i0;

        $r12 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute FOREGROUND>;

        $r13 = virtualinvoke r10.<org.apache.poi.xslf.usermodel.XSLFTextRun: java.awt.Color getFontColor()>();

        virtualinvoke $r33.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r12, $r13, i3, i1);

        $r14 = virtualinvoke r10.<org.apache.poi.xslf.usermodel.XSLFTextRun: java.lang.String getFontFamily()>();

        r32 = $r14;

        if r6 == null goto label03;

        $b2 = virtualinvoke r10.<org.apache.poi.xslf.usermodel.XSLFTextRun: byte getPitchAndFamily()>();

        $i4 = (int) $b2;

        r32 = interfaceinvoke r6.<org.apache.poi.xslf.usermodel.XSLFFontManager: java.lang.String getRendererableFont(java.lang.String,int)>($r14, $i4);

     label03:
        $r15 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute FAMILY>;

        virtualinvoke $r33.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r15, r32, i3, i1);

        $d0 = virtualinvoke r10.<org.apache.poi.xslf.usermodel.XSLFTextRun: double getFontSize()>();

        $f0 = (float) $d0;

        $r16 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute SIZE>;

        $r17 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        virtualinvoke $r33.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r16, $r17, i3, i1);

        $z0 = virtualinvoke r10.<org.apache.poi.xslf.usermodel.XSLFTextRun: boolean isBold()>();

        if $z0 == 0 goto label04;

        $r31 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute WEIGHT>;

        $r30 = <java.awt.font.TextAttribute: java.lang.Float WEIGHT_BOLD>;

        virtualinvoke $r33.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r31, $r30, i3, i1);

     label04:
        $z1 = virtualinvoke r10.<org.apache.poi.xslf.usermodel.XSLFTextRun: boolean isItalic()>();

        if $z1 == 0 goto label05;

        $r29 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute POSTURE>;

        $r28 = <java.awt.font.TextAttribute: java.lang.Float POSTURE_OBLIQUE>;

        virtualinvoke $r33.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r29, $r28, i3, i1);

     label05:
        $z2 = virtualinvoke r10.<org.apache.poi.xslf.usermodel.XSLFTextRun: boolean isUnderline()>();

        if $z2 == 0 goto label06;

        $r25 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute UNDERLINE>;

        $r24 = <java.awt.font.TextAttribute: java.lang.Integer UNDERLINE_ON>;

        virtualinvoke $r33.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r25, $r24, i3, i1);

        $r27 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute INPUT_METHOD_UNDERLINE>;

        $r26 = <java.awt.font.TextAttribute: java.lang.Integer UNDERLINE_LOW_TWO_PIXEL>;

        virtualinvoke $r33.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r27, $r26, i3, i1);

     label06:
        $z3 = virtualinvoke r10.<org.apache.poi.xslf.usermodel.XSLFTextRun: boolean isStrikethrough()>();

        if $z3 == 0 goto label07;

        $r23 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute STRIKETHROUGH>;

        $r22 = <java.awt.font.TextAttribute: java.lang.Boolean STRIKETHROUGH_ON>;

        virtualinvoke $r33.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r23, $r22, i3, i1);

     label07:
        $z4 = virtualinvoke r10.<org.apache.poi.xslf.usermodel.XSLFTextRun: boolean isSubscript()>();

        if $z4 == 0 goto label08;

        $r21 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute SUPERSCRIPT>;

        $r20 = <java.awt.font.TextAttribute: java.lang.Integer SUPERSCRIPT_SUB>;

        virtualinvoke $r33.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r21, $r20, i3, i1);

     label08:
        $z5 = virtualinvoke r10.<org.apache.poi.xslf.usermodel.XSLFTextRun: boolean isSuperscript()>();

        if $z5 == 0 goto label09;

        $r19 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute SUPERSCRIPT>;

        $r18 = <java.awt.font.TextAttribute: java.lang.Integer SUPERSCRIPT_SUPER>;

        virtualinvoke $r33.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>($r19, $r18, i3, i1);

     label09:
        i3 = i1;

        goto label01;

     label10:
        return $r33;
    }

    private void ensureNotEmpty()
    {
        org.apache.poi.xslf.usermodel.XSLFTextRun $r1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties $r3;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r0;
        int $i0, $i1;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph $r2;
        boolean $z0;
        double $d0;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.apache.poi.xslf.usermodel.XSLFTextRun addNewTextRun()>();

        virtualinvoke $r1.<org.apache.poi.xslf.usermodel.XSLFTextRun: void setText(java.lang.String)>(" ");

        $r2 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties getEndParaRPr()>();

        if $r3 == null goto label1;

        $z0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: boolean isSetSz()>();

        if $z0 == 0 goto label1;

        $i0 = interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextCharacterProperties: int getSz()>();

        $i1 = $i0 / 100;

        $d0 = (double) $i1;

        virtualinvoke $r1.<org.apache.poi.xslf.usermodel.XSLFTextRun: void setFontSize(double)>($d0);

     label1:
        return;
    }

    java.util.List breakText(java.awt.Graphics2D)
    {
        java.awt.Color $r22;
        java.lang.Float $r27, $r29;
        java.awt.font.LineBreakMeasurer $r51;
        byte $b5, $b12;
        org.apache.poi.xslf.usermodel.TextAlign $r39, $r42, $r43;
        java.awt.font.TextLayout $r11, $r38, r41, $r55;
        java.awt.font.TextAttribute $r23, $r24, $r25, $r28, $r34;
        java.util.ArrayList $r50;
        org.apache.poi.xslf.usermodel.TextFragment r47, $r53, $r56;
        java.lang.String $r4, $r14, $r15, r46;
        java.awt.font.FontRenderContext $r9, $r32;
        boolean z0, $z1, $z2, $z3;
        java.text.AttributedString $r6, $r20, $r45, $r52, $r54;
        java.util.List $r2, $r3, $r10, $r13, $r16, $r18, $r35, $r40, $r49;
        java.text.AttributedCharacterIterator $r7, $r21, $r31;
        float $f0, $f1, $f2, $f3, $f4, $f5, f6;
        org.apache.poi.xslf.usermodel.XSLFTextRun $r37;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r0;
        java.awt.Graphics2D r5;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i14, i15, $i16, $i18, $i19, $i20;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, d10;
        char $c13;
        java.lang.Object $r19, $r26, $r36, $r48;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        r5 := @parameter0: java.awt.Graphics2D;

        $r50 = new java.util.ArrayList;

        specialinvoke $r50.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.util.List _lines> = $r50;

        $r2 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.util.List _runs>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 != 0 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        z0 = $z2;

        $r3 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.util.List _runs>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i1 != 0 goto label03;

        specialinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: void ensureNotEmpty()>();

     label03:
        $r4 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.lang.String getRenderableText()>();

        $i2 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i2 != 0 goto label04;

        $r40 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.util.List _lines>;

        return $r40;

     label04:
        $r6 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.text.AttributedString getAttributedString(java.awt.Graphics2D)>(r5);

        $r7 = virtualinvoke $r6.<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator()>();

        $r51 = new java.awt.font.LineBreakMeasurer;

        $r9 = virtualinvoke r5.<java.awt.Graphics2D: java.awt.font.FontRenderContext getFontRenderContext()>();

        specialinvoke $r51.<java.awt.font.LineBreakMeasurer: void <init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext)>($r7, $r9);

     label05:
        $i3 = virtualinvoke $r51.<java.awt.font.LineBreakMeasurer: int getPosition()>();

        $r10 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.util.List _lines>;

        $i4 = interfaceinvoke $r10.<java.util.List: int size()>();

        if $i4 != 0 goto label06;

        $z3 = 1;

        goto label07;

     label06:
        $z3 = 0;

     label07:
        $d0 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: double getWrappingWidth(boolean,java.awt.Graphics2D)>($z3, r5);

        $d9 = $d0 + 1.0;

        d10 = $d9;

        $b5 = $d9 cmpg 0.0;

        $i16 = (int) $b5;

        if $i16 >= 0 goto label08;

        d10 = 1.0;

     label08:
        $i6 = $i3 + 1;

        $i7 = virtualinvoke $r4.<java.lang.String: int indexOf(int,int)>(10, $i6);

        i15 = $i7;

        $i18 = (int) -1;

        if $i7 != $i18 goto label09;

        i15 = interfaceinvoke $r7.<java.text.AttributedCharacterIterator: int getEndIndex()>();

     label09:
        $f0 = (float) d10;

        $r11 = virtualinvoke $r51.<java.awt.font.LineBreakMeasurer: java.awt.font.TextLayout nextLayout(float,int,boolean)>($f0, i15, 1);

        r41 = $r11;

        if $r11 != null goto label10;

        $f5 = (float) d10;

        r41 = virtualinvoke $r51.<java.awt.font.LineBreakMeasurer: java.awt.font.TextLayout nextLayout(float,int,boolean)>($f5, i15, 0);

     label10:
        if r41 != null goto label11;

        goto label18;

     label11:
        $i8 = virtualinvoke $r51.<java.awt.font.LineBreakMeasurer: int getPosition()>();

        $i9 = interfaceinvoke $r7.<java.text.AttributedCharacterIterator: int getEndIndex()>();

        if $i8 >= $i9 goto label12;

        $c13 = virtualinvoke $r4.<java.lang.String: char charAt(int)>($i8);

        $i19 = (int) $c13;

        if $i19 != 10 goto label12;

        $i14 = $i8 + 1;

        virtualinvoke $r51.<java.awt.font.LineBreakMeasurer: void setPosition(int)>($i14);

     label12:
        $r42 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.apache.poi.xslf.usermodel.TextAlign getTextAlign()>();

        $r43 = <org.apache.poi.xslf.usermodel.TextAlign: org.apache.poi.xslf.usermodel.TextAlign JUSTIFY>;

        if $r42 == $r43 goto label13;

        $r39 = <org.apache.poi.xslf.usermodel.TextAlign: org.apache.poi.xslf.usermodel.TextAlign JUSTIFY_LOW>;

        if $r42 != $r39 goto label14;

     label13:
        $f1 = (float) d10;

        r41 = virtualinvoke r41.<java.awt.font.TextLayout: java.awt.font.TextLayout getJustifiedLayout(float)>($f1);

     label14:
        $r52 = new java.text.AttributedString;

        specialinvoke $r52.<java.text.AttributedString: void <init>(java.text.AttributedCharacterIterator,int,int)>($r7, $i3, $i8);

        $r53 = new org.apache.poi.xslf.usermodel.TextFragment;

        $r38 = r41;

        if z0 == 0 goto label15;

        $r45 = null;

        goto label16;

     label15:
        $r45 = $r52;

     label16:
        specialinvoke $r53.<org.apache.poi.xslf.usermodel.TextFragment: void <init>(java.awt.font.TextLayout,java.text.AttributedString)>($r38, $r45);

        $r13 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.util.List _lines>;

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r53);

        $d1 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: double _maxLineHeight>;

        $f2 = virtualinvoke $r53.<org.apache.poi.xslf.usermodel.TextFragment: float getHeight()>();

        $d2 = (double) $f2;

        $d3 = staticinvoke <java.lang.Math: double max(double,double)>($d1, $d2);

        r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: double _maxLineHeight> = $d3;

        $i10 = interfaceinvoke $r7.<java.text.AttributedCharacterIterator: int getEndIndex()>();

        if $i8 != $i10 goto label17;

        goto label18;

     label17:
        goto label05;

     label18:
        $z1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: boolean isBullet()>();

        if $z1 == 0 goto label24;

        if z0 != 0 goto label24;

        $r14 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.lang.String getBulletCharacter()>();

        $r15 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.lang.String getBulletFont()>();

        r46 = $r15;

        if $r15 != null goto label19;

        $r35 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.util.List getTextRuns()>();

        $r36 = interfaceinvoke $r35.<java.util.List: java.lang.Object get(int)>(0);

        $r37 = (org.apache.poi.xslf.usermodel.XSLFTextRun) $r36;

        r46 = virtualinvoke $r37.<org.apache.poi.xslf.usermodel.XSLFTextRun: java.lang.String getFontFamily()>();

     label19:
        if $r14 == null goto label24;

        if r46 == null goto label24;

        $r16 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.util.List _lines>;

        $i11 = interfaceinvoke $r16.<java.util.List: int size()>();

        if $i11 <= 0 goto label24;

        $r54 = new java.text.AttributedString;

        specialinvoke $r54.<java.text.AttributedString: void <init>(java.lang.String)>($r14);

        $r18 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.util.List _lines>;

        $r19 = interfaceinvoke $r18.<java.util.List: java.lang.Object get(int)>(0);

        r47 = (org.apache.poi.xslf.usermodel.TextFragment) $r19;

        $r20 = r47.<org.apache.poi.xslf.usermodel.TextFragment: java.text.AttributedString _str>;

        $r21 = virtualinvoke $r20.<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator()>();

        $r22 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.awt.Color getBulletFontColor()>();

        $r23 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute FOREGROUND>;

        if $r22 != null goto label20;

        $r34 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute FOREGROUND>;

        $r48 = interfaceinvoke $r21.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r34);

        goto label21;

     label20:
        $r48 = $r22;

     label21:
        virtualinvoke $r54.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object)>($r23, $r48);

        $r24 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute FAMILY>;

        virtualinvoke $r54.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object)>($r24, r46);

        $r25 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute SIZE>;

        $r26 = interfaceinvoke $r21.<java.text.AttributedCharacterIterator: java.lang.Object getAttribute(java.text.AttributedCharacterIterator$Attribute)>($r25);

        $r27 = (java.lang.Float) $r26;

        $f3 = virtualinvoke $r27.<java.lang.Float: float floatValue()>();

        $d4 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: double getBulletFontSize()>();

        $f4 = (float) $d4;

        $b12 = $f4 cmpl 0.0F;

        $i20 = (int) $b12;

        if $i20 <= 0 goto label22;

        $d7 = (double) $f3;

        $d5 = (double) $f4;

        $d6 = $d5 * 0.01;

        $d8 = $d7 * $d6;

        f6 = (float) $d8;

        goto label23;

     label22:
        f6 = neg $f4;

     label23:
        $r28 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute SIZE>;

        $r29 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f6);

        virtualinvoke $r54.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object)>($r28, $r29);

        $r55 = new java.awt.font.TextLayout;

        $r31 = virtualinvoke $r54.<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator()>();

        $r32 = virtualinvoke r5.<java.awt.Graphics2D: java.awt.font.FontRenderContext getFontRenderContext()>();

        specialinvoke $r55.<java.awt.font.TextLayout: void <init>(java.text.AttributedCharacterIterator,java.awt.font.FontRenderContext)>($r31, $r32);

        $r56 = new org.apache.poi.xslf.usermodel.TextFragment;

        specialinvoke $r56.<org.apache.poi.xslf.usermodel.TextFragment: void <init>(java.awt.font.TextLayout,java.text.AttributedString)>($r55, $r54);

        r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.apache.poi.xslf.usermodel.TextFragment _bullet> = $r56;

     label24:
        $r49 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.util.List _lines>;

        return $r49;
    }

    org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties getDefaultMasterStyle()
    {
        org.apache.poi.xslf.usermodel.XSLFSheet r24, $r25;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties $r21;
        org.apache.xmlbeans.XmlObject[] $r12;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r10, $r14, $r15, $r16, $r17, $r18;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r0;
        int $i0, $i1, $i2, $i3;
        org.openxmlformats.schemas.presentationml.x2006.main.STPlaceholderType$Enum $r3;
        org.apache.xmlbeans.XmlObject $r4, $r20;
        java.lang.String $r11, $r19, r22, r26, r27;
        org.apache.poi.xslf.usermodel.XSLFTextShape $r1, $r23;
        org.openxmlformats.schemas.presentationml.x2006.main.CTPlaceholder $r2;
        java.lang.IllegalArgumentException $r13;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.apache.poi.xslf.usermodel.XSLFTextShape _shape>;

        $r2 = virtualinvoke $r1.<org.apache.poi.xslf.usermodel.XSLFTextShape: org.openxmlformats.schemas.presentationml.x2006.main.CTPlaceholder getCTPlaceholder()>();

        if $r2 != null goto label1;

        r22 = "otherStyle";

        r27 = "otherStyle";

        r26 = "otherStyle";

        goto label5;

     label1:
        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.presentationml.x2006.main.CTPlaceholder: org.openxmlformats.schemas.presentationml.x2006.main.STPlaceholderType$Enum getType()>();

        $i0 = virtualinvoke $r3.<org.openxmlformats.schemas.presentationml.x2006.main.STPlaceholderType$Enum: int intValue()>();

        tableswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label4;
            case 3: goto label2;
            case 4: goto label4;
            case 5: goto label3;
            case 6: goto label3;
            case 7: goto label3;
            default: goto label4;
        };

     label2:
        r22 = "titleStyle";

        r27 = "titleStyle";

        r26 = "titleStyle";

        goto label5;

     label3:
        r22 = "otherStyle";

        r27 = "otherStyle";

        r26 = "otherStyle";

        goto label5;

     label4:
        r22 = "bodyStyle";

        r27 = "bodyStyle";

        r26 = "bodyStyle";

     label5:
        $i3 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: int getLevel()>();

        $r23 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.apache.poi.xslf.usermodel.XSLFTextShape _shape>;

        r24 = virtualinvoke $r23.<org.apache.poi.xslf.usermodel.XSLFTextShape: org.apache.poi.xslf.usermodel.XSLFSheet getSheet()>();

     label6:
        $r25 = virtualinvoke r24.<org.apache.poi.xslf.usermodel.XSLFSheet: org.apache.poi.xslf.usermodel.XSLFSheet getMasterSheet()>();

        if $r25 == null goto label7;

        r24 = virtualinvoke r24.<org.apache.poi.xslf.usermodel.XSLFSheet: org.apache.poi.xslf.usermodel.XSLFSheet getMasterSheet()>();

        goto label6;

     label7:
        $r4 = virtualinvoke r24.<org.apache.poi.xslf.usermodel.XSLFSheet: org.apache.xmlbeans.XmlObject getXmlObject()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("declare namespace p=\'http://schemas.openxmlformats.org/presentationml/2006/main\' declare namespace a=\'http://schemas.openxmlformats.org/drawingml/2006/main\' .//p:txStyles/p:");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/a:lvl");

        $i1 = $i3 + 1;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pPr");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = interfaceinvoke $r4.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlObject[] selectPath(java.lang.String)>($r11);

        $i2 = lengthof $r12;

        if $i2 != 1 goto label8;

        $r20 = $r12[0];

        $r21 = (org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties) $r20;

        return $r21;

     label8:
        $r13 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to fetch default style for ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and level=");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r13;
    }

    private boolean fetchParagraphProperty(org.apache.poi.xslf.model.ParagraphPropertyFetcher)
    {
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r0;
        org.apache.poi.xslf.usermodel.XSLFSheet $r7;
        int $i0;
        org.apache.poi.xslf.usermodel.XSLFTextShape $r2, $r6;
        boolean $z0, $z1, z2;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties $r5, $r9, $r11;
        org.openxmlformats.schemas.presentationml.x2006.main.CTPlaceholder $r4;
        org.apache.poi.xslf.usermodel.XMLSlideShow $r8;
        org.apache.poi.xslf.model.ParagraphPropertyFetcher r3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph $r1, $r10;

        r0 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        r3 := @parameter0: org.apache.poi.xslf.model.ParagraphPropertyFetcher;

        z2 = 0;

        $r1 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: boolean isSetPPr()>();

        if $z0 == 0 goto label1;

        $r10 = r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph _p>;

        $r11 = interfaceinvoke $r10.<org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties getPPr()>();

        z2 = virtualinvoke r3.<org.apache.poi.xslf.model.ParagraphPropertyFetcher: boolean fetch(org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties)>($r11);

     label1:
        if z2 != 0 goto label3;

        $r2 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.apache.poi.xslf.usermodel.XSLFTextShape getParentShape()>();

        $z1 = virtualinvoke $r2.<org.apache.poi.xslf.usermodel.XSLFTextShape: boolean fetchShapeProperty(org.apache.poi.xslf.model.PropertyFetcher)>(r3);

        z2 = $z1;

        if $z1 != 0 goto label3;

        $r4 = virtualinvoke $r2.<org.apache.poi.xslf.usermodel.XSLFTextShape: org.openxmlformats.schemas.presentationml.x2006.main.CTPlaceholder getCTPlaceholder()>();

        if $r4 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.apache.poi.xslf.usermodel.XSLFTextShape getParentShape()>();

        $r7 = virtualinvoke $r6.<org.apache.poi.xslf.usermodel.XSLFTextShape: org.apache.poi.xslf.usermodel.XSLFSheet getSheet()>();

        $r8 = virtualinvoke $r7.<org.apache.poi.xslf.usermodel.XSLFSheet: org.apache.poi.xslf.usermodel.XMLSlideShow getSlideShow()>();

        $i0 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: int getLevel()>();

        $r9 = virtualinvoke $r8.<org.apache.poi.xslf.usermodel.XMLSlideShow: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties getDefaultParagraphStyle(int)>($i0);

        if $r9 == null goto label2;

        z2 = virtualinvoke r3.<org.apache.poi.xslf.model.ParagraphPropertyFetcher: boolean fetch(org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties)>($r9);

     label2:
        if z2 != 0 goto label3;

        $r5 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties getDefaultMasterStyle()>();

        if $r5 == null goto label3;

        z2 = virtualinvoke r3.<org.apache.poi.xslf.model.ParagraphPropertyFetcher: boolean fetch(org.openxmlformats.schemas.drawingml.x2006.main.CTTextParagraphProperties)>($r5);

     label3:
        return z2;
    }

    void copy(org.apache.poi.xslf.usermodel.XSLFTextParagraph)
    {
        java.awt.Color $r11, $r15;
        byte $b0, $b1, $b2, $b3, $b4, $b5;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.List $r4, $r5;
        org.apache.poi.xslf.usermodel.TextAlign $r1, $r3;
        org.apache.poi.xslf.usermodel.XSLFTextRun r7, r9;
        org.apache.poi.xslf.usermodel.XSLFTextParagraph r0, r2;
        int i6, $i7;
        java.lang.String $r10, $r12, $r13, $r14;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        java.lang.Object $r6, $r8;

        r2 := @this: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        r0 := @parameter0: org.apache.poi.xslf.usermodel.XSLFTextParagraph;

        $r1 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.apache.poi.xslf.usermodel.TextAlign getTextAlign()>();

        $r3 = virtualinvoke r2.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: org.apache.poi.xslf.usermodel.TextAlign getTextAlign()>();

        if $r1 == $r3 goto label01;

        virtualinvoke r2.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: void setTextAlign(org.apache.poi.xslf.usermodel.TextAlign)>($r1);

     label01:
        $z0 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: boolean isBullet()>();

        $z1 = virtualinvoke r2.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: boolean isBullet()>();

        if $z0 == $z1 goto label05;

        virtualinvoke r2.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: void setBullet(boolean)>($z0);

        if $z0 == 0 goto label05;

        $r10 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.lang.String getBulletFont()>();

        if $r10 == null goto label02;

        $r13 = virtualinvoke r2.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.lang.String getBulletFont()>();

        $z4 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z4 != 0 goto label02;

        virtualinvoke r2.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: void setBulletFont(java.lang.String)>($r10);

     label02:
        $r14 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.lang.String getBulletCharacter()>();

        if $r14 == null goto label03;

        $r12 = virtualinvoke r2.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.lang.String getBulletCharacter()>();

        $z3 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z3 != 0 goto label03;

        virtualinvoke r2.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: void setBulletCharacter(java.lang.String)>($r14);

     label03:
        $r15 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.awt.Color getBulletFontColor()>();

        if $r15 == null goto label04;

        $r11 = virtualinvoke r2.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.awt.Color getBulletFontColor()>();

        $z2 = virtualinvoke $r15.<java.awt.Color: boolean equals(java.lang.Object)>($r11);

        if $z2 != 0 goto label04;

        virtualinvoke r2.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: void setBulletFontColor(java.awt.Color)>($r15);

     label04:
        $d8 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: double getBulletFontSize()>();

        $d9 = virtualinvoke r2.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: double getBulletFontSize()>();

        $b4 = $d8 cmpl $d9;

        if $b4 == 0 goto label05;

        virtualinvoke r2.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: void setBulletFontSize(double)>($d8);

     label05:
        $d10 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: double getLeftMargin()>();

        $d11 = virtualinvoke r2.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: double getLeftMargin()>();

        $b5 = $d10 cmpl $d11;

        if $b5 == 0 goto label06;

        virtualinvoke r2.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: void setLeftMargin(double)>($d10);

     label06:
        $d0 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: double getIndent()>();

        $d1 = virtualinvoke r2.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: double getIndent()>();

        $b0 = $d0 cmpl $d1;

        if $b0 == 0 goto label07;

        virtualinvoke r2.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: void setIndent(double)>($d0);

     label07:
        $d2 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: double getSpaceAfter()>();

        $d3 = virtualinvoke r2.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: double getSpaceAfter()>();

        $b1 = $d2 cmpl $d3;

        if $b1 == 0 goto label08;

        virtualinvoke r2.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: void setSpaceAfter(double)>($d2);

     label08:
        $d4 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: double getSpaceBefore()>();

        $d5 = virtualinvoke r2.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: double getSpaceBefore()>();

        $b2 = $d4 cmpl $d5;

        if $b2 == 0 goto label09;

        virtualinvoke r2.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: void setSpaceBefore(double)>($d4);

     label09:
        $d6 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: double getLineSpacing()>();

        $d7 = virtualinvoke r2.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: double getLineSpacing()>();

        $b3 = $d6 cmpl $d7;

        if $b3 == 0 goto label10;

        virtualinvoke r2.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: void setLineSpacing(double)>($d6);

     label10:
        $r4 = virtualinvoke r0.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.util.List getTextRuns()>();

        $r5 = virtualinvoke r2.<org.apache.poi.xslf.usermodel.XSLFTextParagraph: java.util.List getTextRuns()>();

        i6 = 0;

     label11:
        $i7 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i6 >= $i7 goto label12;

        $r6 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i6);

        r7 = (org.apache.poi.xslf.usermodel.XSLFTextRun) $r6;

        $r8 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i6);

        r9 = (org.apache.poi.xslf.usermodel.XSLFTextRun) $r8;

        virtualinvoke r9.<org.apache.poi.xslf.usermodel.XSLFTextRun: void copy(org.apache.poi.xslf.usermodel.XSLFTextRun)>(r7);

        i6 = i6 + 1;

        goto label11;

     label12:
        return;
    }
}
