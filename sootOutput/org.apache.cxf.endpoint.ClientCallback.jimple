public class org.apache.cxf.endpoint.ClientCallback extends java.lang.Object implements java.util.concurrent.Future
{
    protected java.util.Map context;
    protected java.lang.Object[] result;
    protected java.lang.Throwable exception;
    protected volatile boolean done;
    protected boolean cancelled;
    protected boolean started;

    public void <init>()
    {
        org.apache.cxf.endpoint.ClientCallback r0;

        r0 := @this: org.apache.cxf.endpoint.ClientCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void start(org.apache.cxf.message.Message)
    {
        org.apache.cxf.endpoint.ClientCallback r0;
        org.apache.cxf.message.Message r1;

        r0 := @this: org.apache.cxf.endpoint.ClientCallback;

        r1 := @parameter0: org.apache.cxf.message.Message;

        r0.<org.apache.cxf.endpoint.ClientCallback: boolean started> = 1;

        return;
    }

    public void handleResponse(java.util.Map, java.lang.Object[])
    {
        java.lang.Throwable $r3;
        java.lang.Object[] r2;
        org.apache.cxf.endpoint.ClientCallback r0;
        java.util.Map r1;

        r0 := @this: org.apache.cxf.endpoint.ClientCallback;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.lang.Object[];

        r0.<org.apache.cxf.endpoint.ClientCallback: java.util.Map context> = r1;

        r0.<org.apache.cxf.endpoint.ClientCallback: java.lang.Object[] result> = r2;

        r0.<org.apache.cxf.endpoint.ClientCallback: boolean done> = 1;

        entermonitor r0;

     label1:
        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void handleException(java.util.Map, java.lang.Throwable)
    {
        java.lang.Throwable r2, $r3;
        org.apache.cxf.endpoint.ClientCallback r0;
        java.util.Map r1;

        r0 := @this: org.apache.cxf.endpoint.ClientCallback;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.lang.Throwable;

        r0.<org.apache.cxf.endpoint.ClientCallback: java.util.Map context> = r1;

        r0.<org.apache.cxf.endpoint.ClientCallback: java.lang.Throwable exception> = r2;

        r0.<org.apache.cxf.endpoint.ClientCallback: boolean done> = 1;

        entermonitor r0;

     label1:
        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean cancel(boolean)
    {
        java.lang.Throwable $r1;
        org.apache.cxf.endpoint.ClientCallback r0;
        boolean $z0, z1;

        r0 := @this: org.apache.cxf.endpoint.ClientCallback;

        z1 := @parameter0: boolean;

        $z0 = r0.<org.apache.cxf.endpoint.ClientCallback: boolean started>;

        if $z0 != 0 goto label6;

        r0.<org.apache.cxf.endpoint.ClientCallback: boolean cancelled> = 1;

        entermonitor r0;

     label1:
        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label2:
        goto label5;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r1;

     label5:
        return 1;

     label6:
        return 0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.Map getResponseContext() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException
    {
        java.lang.Throwable $r1, $r4, $r6;
        java.util.concurrent.ExecutionException $r3;
        org.apache.cxf.endpoint.ClientCallback r0;
        java.lang.InterruptedException $r5;
        java.util.Map $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.endpoint.ClientCallback;

        entermonitor r0;

     label1:
        $z0 = r0.<org.apache.cxf.endpoint.ClientCallback: boolean done>;

        if $z0 != 0 goto label2;

        virtualinvoke r0.<java.lang.Object: void wait()>();

     label2:
        exitmonitor r0;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        exitmonitor r0;

     label5:
        throw $r6;

     label6:
        $z1 = r0.<org.apache.cxf.endpoint.ClientCallback: boolean cancelled>;

        if $z1 == 0 goto label7;

        $r5 = new java.lang.InterruptedException;

        specialinvoke $r5.<java.lang.InterruptedException: void <init>(java.lang.String)>("Operation Cancelled");

        throw $r5;

     label7:
        $r1 = r0.<org.apache.cxf.endpoint.ClientCallback: java.lang.Throwable exception>;

        if $r1 == null goto label8;

        $r3 = new java.util.concurrent.ExecutionException;

        $r4 = r0.<org.apache.cxf.endpoint.ClientCallback: java.lang.Throwable exception>;

        specialinvoke $r3.<java.util.concurrent.ExecutionException: void <init>(java.lang.Throwable)>($r4);

        throw $r3;

     label8:
        $r2 = r0.<org.apache.cxf.endpoint.ClientCallback: java.util.Map context>;

        return $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public java.lang.Object[] get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException
    {
        java.lang.Throwable $r1, $r4, $r6;
        java.lang.Object[] $r2;
        java.util.concurrent.ExecutionException $r3;
        org.apache.cxf.endpoint.ClientCallback r0;
        java.lang.InterruptedException $r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.endpoint.ClientCallback;

        entermonitor r0;

     label1:
        $z0 = r0.<org.apache.cxf.endpoint.ClientCallback: boolean done>;

        if $z0 != 0 goto label2;

        virtualinvoke r0.<java.lang.Object: void wait()>();

     label2:
        exitmonitor r0;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        exitmonitor r0;

     label5:
        throw $r6;

     label6:
        $z1 = r0.<org.apache.cxf.endpoint.ClientCallback: boolean cancelled>;

        if $z1 == 0 goto label7;

        $r5 = new java.lang.InterruptedException;

        specialinvoke $r5.<java.lang.InterruptedException: void <init>(java.lang.String)>("Operation Cancelled");

        throw $r5;

     label7:
        $r1 = r0.<org.apache.cxf.endpoint.ClientCallback: java.lang.Throwable exception>;

        if $r1 == null goto label8;

        $r3 = new java.util.concurrent.ExecutionException;

        $r4 = r0.<org.apache.cxf.endpoint.ClientCallback: java.lang.Throwable exception>;

        specialinvoke $r3.<java.util.concurrent.ExecutionException: void <init>(java.lang.Throwable)>($r4);

        throw $r3;

     label8:
        $r2 = r0.<org.apache.cxf.endpoint.ClientCallback: java.lang.Object[] result>;

        return $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public java.lang.Object[] get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException
    {
        java.lang.Throwable $r1, $r4, $r8;
        java.lang.Object[] $r2;
        java.util.concurrent.TimeoutException $r5;
        long l0;
        java.util.concurrent.ExecutionException $r3;
        java.util.concurrent.TimeUnit r7;
        org.apache.cxf.endpoint.ClientCallback r0;
        java.lang.InterruptedException $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.cxf.endpoint.ClientCallback;

        l0 := @parameter0: long;

        r7 := @parameter1: java.util.concurrent.TimeUnit;

        entermonitor r0;

     label1:
        $z0 = r0.<org.apache.cxf.endpoint.ClientCallback: boolean done>;

        if $z0 != 0 goto label2;

        virtualinvoke r7.<java.util.concurrent.TimeUnit: void timedWait(java.lang.Object,long)>(r0, l0);

     label2:
        exitmonitor r0;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        exitmonitor r0;

     label5:
        throw $r8;

     label6:
        $z1 = r0.<org.apache.cxf.endpoint.ClientCallback: boolean cancelled>;

        if $z1 == 0 goto label7;

        $r6 = new java.lang.InterruptedException;

        specialinvoke $r6.<java.lang.InterruptedException: void <init>(java.lang.String)>("Operation Cancelled");

        throw $r6;

     label7:
        $z2 = r0.<org.apache.cxf.endpoint.ClientCallback: boolean done>;

        if $z2 != 0 goto label8;

        $r5 = new java.util.concurrent.TimeoutException;

        specialinvoke $r5.<java.util.concurrent.TimeoutException: void <init>(java.lang.String)>("Timeout Exceeded");

        throw $r5;

     label8:
        $r1 = r0.<org.apache.cxf.endpoint.ClientCallback: java.lang.Throwable exception>;

        if $r1 == null goto label9;

        $r3 = new java.util.concurrent.ExecutionException;

        $r4 = r0.<org.apache.cxf.endpoint.ClientCallback: java.lang.Throwable exception>;

        specialinvoke $r3.<java.util.concurrent.ExecutionException: void <init>(java.lang.Throwable)>($r4);

        throw $r3;

     label9:
        $r2 = r0.<org.apache.cxf.endpoint.ClientCallback: java.lang.Object[] result>;

        return $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean isCancelled()
    {
        org.apache.cxf.endpoint.ClientCallback r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.endpoint.ClientCallback;

        $z0 = r0.<org.apache.cxf.endpoint.ClientCallback: boolean cancelled>;

        return $z0;
    }

    public boolean isDone()
    {
        org.apache.cxf.endpoint.ClientCallback r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.endpoint.ClientCallback;

        $z0 = r0.<org.apache.cxf.endpoint.ClientCallback: boolean done>;

        return $z0;
    }

    public java.lang.Throwable getException()
    {
        java.lang.Throwable $r1;
        org.apache.cxf.endpoint.ClientCallback r0;

        r0 := @this: org.apache.cxf.endpoint.ClientCallback;

        $r1 = r0.<org.apache.cxf.endpoint.ClientCallback: java.lang.Throwable exception>;

        return $r1;
    }

    public volatile java.lang.Object get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException
    {
        java.util.concurrent.TimeUnit r1;
        java.lang.Object[] $r2;
        org.apache.cxf.endpoint.ClientCallback r0;
        long l0;

        r0 := @this: org.apache.cxf.endpoint.ClientCallback;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = virtualinvoke r0.<org.apache.cxf.endpoint.ClientCallback: java.lang.Object[] get(long,java.util.concurrent.TimeUnit)>(l0, r1);

        return $r2;
    }

    public volatile java.lang.Object get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException
    {
        java.lang.Object[] $r1;
        org.apache.cxf.endpoint.ClientCallback r0;

        r0 := @this: org.apache.cxf.endpoint.ClientCallback;

        $r1 = virtualinvoke r0.<org.apache.cxf.endpoint.ClientCallback: java.lang.Object[] get()>();

        return $r1;
    }
}
