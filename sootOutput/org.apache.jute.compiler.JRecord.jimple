public class org.apache.jute.compiler.JRecord extends org.apache.jute.compiler.JCompType
{
    private java.lang.String mFQName;
    private java.lang.String mName;
    private java.lang.String mModule;
    private java.util.ArrayList mFields;
    static java.util.HashMap vectorStructs;

    public void <init>(java.lang.String, java.util.ArrayList)
    {
        java.util.ArrayList r12;
        int $i0, $i1, $i2, $i3;
        java.lang.String r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11;
        org.apache.jute.compiler.JRecord r0;
        java.lang.StringBuilder $r1, $r2, $r5;

        r0 := @this: org.apache.jute.compiler.JRecord;

        r3 := @parameter0: java.lang.String;

        r12 := @parameter1: java.util.ArrayList;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("struct ");

        $i0 = virtualinvoke r3.<java.lang.String: int lastIndexOf(int)>(46);

        $i1 = $i0 + 1;

        $r4 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>($i1);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke r3.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\.", "::");

        $r8 = staticinvoke <org.apache.jute.compiler.JRecord: java.lang.String getCsharpFQName(java.lang.String)>(r3);

        $r9 = staticinvoke <org.apache.jute.compiler.JRecord: java.lang.String getCsharpFQName(java.lang.String)>("IRecord");

        specialinvoke r0.<org.apache.jute.compiler.JCompType: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r6, $r7, $r8, r3, "Record", r3, $r9);

        r0.<org.apache.jute.compiler.JRecord: java.lang.String mFQName> = r3;

        $i2 = virtualinvoke r3.<java.lang.String: int lastIndexOf(int)>(46);

        $i3 = $i2 + 1;

        $r10 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>($i3);

        r0.<org.apache.jute.compiler.JRecord: java.lang.String mName> = $r10;

        $r11 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        r0.<org.apache.jute.compiler.JRecord: java.lang.String mModule> = $r11;

        r0.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields> = r12;

        return;
    }

    public java.lang.String getName()
    {
        org.apache.jute.compiler.JRecord r0;
        java.lang.String $r1;

        r0 := @this: org.apache.jute.compiler.JRecord;

        $r1 = r0.<org.apache.jute.compiler.JRecord: java.lang.String mName>;

        return $r1;
    }

    public java.lang.String getCsharpName()
    {
        org.apache.jute.compiler.JRecord r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.jute.compiler.JRecord;

        $r2 = "Id";

        $r1 = r0.<org.apache.jute.compiler.JRecord: java.lang.String mName>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r3 = "ZKId";

        goto label2;

     label1:
        $r3 = r0.<org.apache.jute.compiler.JRecord: java.lang.String mName>;

     label2:
        return $r3;
    }

    public java.lang.String getJavaFQName()
    {
        org.apache.jute.compiler.JRecord r0;
        java.lang.String $r1;

        r0 := @this: org.apache.jute.compiler.JRecord;

        $r1 = r0.<org.apache.jute.compiler.JRecord: java.lang.String mFQName>;

        return $r1;
    }

    public java.lang.String getCppFQName()
    {
        org.apache.jute.compiler.JRecord r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.apache.jute.compiler.JRecord;

        $r1 = r0.<org.apache.jute.compiler.JRecord: java.lang.String mFQName>;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\.", "::");

        return $r2;
    }

    public java.lang.String getJavaPackage()
    {
        org.apache.jute.compiler.JRecord r0;
        java.lang.String $r1;

        r0 := @this: org.apache.jute.compiler.JRecord;

        $r1 = r0.<org.apache.jute.compiler.JRecord: java.lang.String mModule>;

        return $r1;
    }

    public java.lang.String getCppNameSpace()
    {
        org.apache.jute.compiler.JRecord r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.apache.jute.compiler.JRecord;

        $r1 = r0.<org.apache.jute.compiler.JRecord: java.lang.String mModule>;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\.", "::");

        return $r2;
    }

    public java.lang.String getCsharpNameSpace()
    {
        java.lang.String[] $r2;
        java.lang.StringBuffer $r3;
        int $i0, $i1, $i2, i3;
        java.lang.String $r1, $r4, $r6, $r7, $r8, $r10, $r11, $r12, $r14;
        org.apache.jute.compiler.JRecord r0;
        java.lang.StringBuilder $r5, $r9, $r13;

        r0 := @this: org.apache.jute.compiler.JRecord;

        $r1 = r0.<org.apache.jute.compiler.JRecord: java.lang.String mModule>;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        i3 = 0;

     label1:
        $i0 = lengthof $r2;

        if i3 >= $i0 goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = $r2[i3];

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String toUpperCase()>();

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = $r2[i3];

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int)>(1);

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String toLowerCase()>();

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $i1 = lengthof $r2;

        $i2 = $i1 - 1;

        if i3 == $i2 goto label2;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    public java.util.ArrayList getFields()
    {
        org.apache.jute.compiler.JRecord r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.jute.compiler.JRecord;

        $r1 = r0.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        return $r1;
    }

    public java.lang.String getSignature()
    {
        java.util.Iterator $r6;
        java.util.ArrayList $r5;
        org.apache.jute.compiler.JRecord r2;
        java.lang.StringBuilder $r0, $r1, $r4;
        java.lang.Object $r8;
        java.lang.String $r3, $r7, $r10;
        boolean $z0;
        org.apache.jute.compiler.JField $r9;

        r2 := @this: org.apache.jute.compiler.JRecord;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("L");

        $r3 = r2.<org.apache.jute.compiler.JRecord: java.lang.String mName>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r5 = r2.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (org.apache.jute.compiler.JField) $r8;

        $r10 = virtualinvoke $r9.<org.apache.jute.compiler.JField: java.lang.String getSignature()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        goto label1;

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public java.lang.String genCppDecl(java.lang.String)
    {
        org.apache.jute.compiler.JRecord r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8, $r10, $r11;
        java.lang.String $r3, $r6, r9, $r12;

        r2 := @this: org.apache.jute.compiler.JRecord;

        r9 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r3 = virtualinvoke r2.<org.apache.jute.compiler.JRecord: java.lang.String getCppNameSpace()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("::");

        $r6 = r2.<org.apache.jute.compiler.JRecord: java.lang.String mName>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" m");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";\n");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public java.lang.String genJavaReadMethod(java.lang.String, java.lang.String)
    {
        org.apache.jute.compiler.JRecord r0;
        java.lang.String r1, r2, $r3;

        r0 := @this: org.apache.jute.compiler.JRecord;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.jute.compiler.JRecord: java.lang.String genJavaReadWrapper(java.lang.String,java.lang.String,boolean)>(r1, r2, 0);

        return $r3;
    }

    public java.lang.String genJavaReadWrapper(java.lang.String, java.lang.String, boolean)
    {
        java.lang.String r3, $r7, $r10, r15, $r18, $r19, $r22, $r27;
        boolean z0;
        org.apache.jute.compiler.JRecord r6;
        java.lang.StringBuilder $r0, $r1, $r2, $r4, $r5, $r8, $r9, $r11, $r12, $r13, $r14, $r16, $r17, $r20, $r21, $r23, $r24, $r25, $r26;

        r6 := @this: org.apache.jute.compiler.JRecord;

        r3 := @parameter0: java.lang.String;

        r15 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("");

        if z0 == 0 goto label1;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r22 = virtualinvoke r6.<org.apache.jute.compiler.JRecord: java.lang.String getJavaFQName()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";\n");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("= new ");

        $r7 = virtualinvoke r6.<org.apache.jute.compiler.JRecord: java.lang.String getJavaFQName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("();\n");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    a_.readRecord(");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\"");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");\n");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r19 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r19;
    }

    public java.lang.String genJavaWriteWrapper(java.lang.String, java.lang.String)
    {
        org.apache.jute.compiler.JRecord r9;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r6, $r7;
        java.lang.String r2, r5, $r8;

        r9 := @this: org.apache.jute.compiler.JRecord;

        r2 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    a_.writeRecord(");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\"");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");\n");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    java.lang.String genCsharpReadMethod(java.lang.String, java.lang.String)
    {
        org.apache.jute.compiler.JRecord r0;
        java.lang.String r1, $r2, r3, $r4;

        r0 := @this: org.apache.jute.compiler.JRecord;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.apache.jute.compiler.JRecord: java.lang.String capitalize(java.lang.String)>(r1);

        $r4 = virtualinvoke r0.<org.apache.jute.compiler.JRecord: java.lang.String genCsharpReadWrapper(java.lang.String,java.lang.String,boolean)>($r2, r3, 0);

        return $r4;
    }

    public java.lang.String genCsharpReadWrapper(java.lang.String, java.lang.String, boolean)
    {
        java.lang.String r3, $r7, $r8, $r11, r16, $r19, $r20, $r23, $r24, $r29;
        boolean z0;
        org.apache.jute.compiler.JRecord r6;
        java.lang.StringBuilder $r0, $r1, $r2, $r4, $r5, $r9, $r10, $r12, $r13, $r14, $r15, $r17, $r18, $r21, $r22, $r25, $r26, $r27, $r28;

        r6 := @this: org.apache.jute.compiler.JRecord;

        r3 := @parameter0: java.lang.String;

        r16 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("");

        if z0 == 0 goto label1;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r23 = r6.<org.apache.jute.compiler.JRecord: java.lang.String mFQName>;

        $r24 = staticinvoke <org.apache.jute.compiler.JRecord: java.lang.String getCsharpFQName(java.lang.String)>($r23);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";\n");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("= new ");

        $r7 = r6.<org.apache.jute.compiler.JRecord: java.lang.String mFQName>;

        $r8 = staticinvoke <org.apache.jute.compiler.JRecord: java.lang.String getCsharpFQName(java.lang.String)>($r7);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("();\n");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    a_.ReadRecord(");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\"");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");\n");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r20 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r20;
    }

    public java.lang.String genCsharpWriteWrapper(java.lang.String, java.lang.String)
    {
        org.apache.jute.compiler.JRecord r9;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r6, $r7;
        java.lang.String r2, r5, $r8;

        r9 := @this: org.apache.jute.compiler.JRecord;

        r2 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    a_.WriteRecord(");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\"");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");\n");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public void genCCode(java.io.FileWriter, java.io.FileWriter) throws java.io.IOException
    {
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r12, $r13, $r14, $r15, $r16, $r17, $r19, $r20, $r21, $r22, $r23, $r24, $r26, $r27, $r28, $r29, $r30, $r31, $r34, $r35, $r36, $r37, $r38, $r39, $r43, $r44, $r45, $r46, $r47, $r48, $r52, $r53, $r54, $r55, $r56, $r57, $r65, $r66, $r69, $r70, $r72, $r73, $r76, $r77, $r80, $r81, $r83, $r84, $r86, $r87, $r90, $r91, $r93, $r94, $r114, $r115, $r116, $r117, $r120, $r121, $r123, $r124, $r125, $r126, $r127, $r128, $r130, $r131, $r132, $r133, $r134, $r135, $r137, $r138, $r139, $r140, $r141, $r142, $r144, $r145, $r146, $r147, $r148, $r149, $r151, $r152, $r153, $r154, $r155, $r156, $r158, $r159, $r160, $r161, $r162, $r163, $r165, $r166, $r168, $r169, $r171, $r172, $r173, $r174, $r175, $r176, $r178, $r179, $r180, $r181, $r182, $r183;
        org.apache.jute.compiler.JVector r186, r191;
        org.apache.jute.compiler.JRecord r0;
        org.apache.jute.compiler.JField r185, r187, r188, r189, r190;
        java.lang.Object $r61, $r96, $r100, $r104, $r106, $r112;
        java.util.ArrayList $r1, $r10, $r41, $r50, $r59;
        java.lang.String $r3, $r9, $r18, $r25, $r32, $r40, $r49, $r58, $r68, $r71, $r74, $r79, $r82, $r85, $r89, $r92, $r95, $r98, $r99, $r102, $r103, $r105, $r110, $r119, $r122, $r129, $r136, $r143, $r150, $r157, $r164, $r167, $r170, $r177, $r184;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.util.HashMap $r111, $r113;
        org.apache.jute.compiler.JType $r62, $r63, $r64, $r67, $r75, $r78, $r88, $r97, $r101, $r107, $r108, $r109, $r118;
        java.util.Iterator $r2, $r11, $r42, $r51, $r60;
        java.io.FileWriter r4, r33;

        r0 := @this: org.apache.jute.compiler.JRecord;

        r4 := @parameter0: java.io.FileWriter;

        r33 := @parameter1: java.io.FileWriter;

        $r1 = r0.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r106 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r185 = (org.apache.jute.compiler.JField) $r106;

        $r107 = virtualinvoke r185.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType getType()>();

        $z8 = $r107 instanceof org.apache.jute.compiler.JVector;

        if $z8 == 0 goto label02;

        $r108 = virtualinvoke r185.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType getType()>();

        r186 = (org.apache.jute.compiler.JVector) $r108;

        $r109 = virtualinvoke r186.<org.apache.jute.compiler.JVector: org.apache.jute.compiler.JType getElementType()>();

        $r110 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String extractVectorName(org.apache.jute.compiler.JType)>($r109);

        $r111 = <org.apache.jute.compiler.JRecord: java.util.HashMap vectorStructs>;

        $r112 = virtualinvoke $r111.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r110);

        if $r112 != null goto label02;

        $r113 = <org.apache.jute.compiler.JRecord: java.util.HashMap vectorStructs>;

        virtualinvoke $r113.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r110, $r110);

        $r114 = new java.lang.StringBuilder;

        specialinvoke $r114.<java.lang.StringBuilder: void <init>()>();

        $r115 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("struct ");

        $r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r110);

        $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" {\n    int32_t count;\n");

        $r118 = virtualinvoke r186.<org.apache.jute.compiler.JVector: org.apache.jute.compiler.JType getElementType()>();

        $r119 = virtualinvoke $r118.<org.apache.jute.compiler.JType: java.lang.String genCDecl(java.lang.String)>("*data");

        $r120 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r119);

        $r121 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n};\n");

        $r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.io.FileWriter: void write(java.lang.String)>($r122);

        $r123 = new java.lang.StringBuilder;

        specialinvoke $r123.<java.lang.StringBuilder: void <init>()>();

        $r124 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("int serialize_");

        $r125 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r110);

        $r126 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(struct oarchive *out, const char *tag, struct ");

        $r127 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r110);

        $r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" *v);\n");

        $r129 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.io.FileWriter: void write(java.lang.String)>($r129);

        $r130 = new java.lang.StringBuilder;

        specialinvoke $r130.<java.lang.StringBuilder: void <init>()>();

        $r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("int deserialize_");

        $r132 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r110);

        $r133 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(struct iarchive *in, const char *tag, struct ");

        $r134 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r110);

        $r135 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" *v);\n");

        $r136 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.io.FileWriter: void write(java.lang.String)>($r136);

        $r137 = new java.lang.StringBuilder;

        specialinvoke $r137.<java.lang.StringBuilder: void <init>()>();

        $r138 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("int allocate_");

        $r139 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r110);

        $r140 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(struct ");

        $r141 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r110);

        $r142 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" *v, int32_t len);\n");

        $r143 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.io.FileWriter: void write(java.lang.String)>($r143);

        $r144 = new java.lang.StringBuilder;

        specialinvoke $r144.<java.lang.StringBuilder: void <init>()>();

        $r145 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("int deallocate_");

        $r146 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r110);

        $r147 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(struct ");

        $r148 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r110);

        $r149 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" *v);\n");

        $r150 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.io.FileWriter: void write(java.lang.String)>($r150);

        $r151 = new java.lang.StringBuilder;

        specialinvoke $r151.<java.lang.StringBuilder: void <init>()>();

        $r152 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("int allocate_");

        $r153 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r110);

        $r154 = virtualinvoke $r153.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(struct ");

        $r155 = virtualinvoke $r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r110);

        $r156 = virtualinvoke $r155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" *v, int32_t len) {\n");

        $r157 = virtualinvoke $r156.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>($r157);

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("    if (!len) {\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("        v->count = 0;\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("        v->data = 0;\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("    } else {\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("        v->count = len;\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("        v->data = calloc(sizeof(*v->data), len);\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("    }\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("    return 0;\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("}\n");

        $r158 = new java.lang.StringBuilder;

        specialinvoke $r158.<java.lang.StringBuilder: void <init>()>();

        $r159 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("int deallocate_");

        $r160 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r110);

        $r161 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(struct ");

        $r162 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r110);

        $r163 = virtualinvoke $r162.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" *v) {\n");

        $r164 = virtualinvoke $r163.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>($r164);

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("    if (v->data) {\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("        int32_t i;\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("        for(i=0;i<v->count; i++) {\n");

        $r165 = new java.lang.StringBuilder;

        specialinvoke $r165.<java.lang.StringBuilder: void <init>()>();

        $r166 = virtualinvoke $r165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("            deallocate_");

        $r167 = staticinvoke <org.apache.jute.compiler.JRecord: java.lang.String extractMethodSuffix(org.apache.jute.compiler.JType)>($r109);

        $r168 = virtualinvoke $r166.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r167);

        $r169 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(&v->data[i]);\n");

        $r170 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>($r170);

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("        }\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("        free(v->data);\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("        v->data = 0;\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("    }\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("    return 0;\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("}\n");

        $r171 = new java.lang.StringBuilder;

        specialinvoke $r171.<java.lang.StringBuilder: void <init>()>();

        $r172 = virtualinvoke $r171.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("int serialize_");

        $r173 = virtualinvoke $r172.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r110);

        $r174 = virtualinvoke $r173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(struct oarchive *out, const char *tag, struct ");

        $r175 = virtualinvoke $r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r110);

        $r176 = virtualinvoke $r175.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" *v)\n");

        $r177 = virtualinvoke $r176.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>($r177);

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("{\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("    int32_t count = v->count;\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("    int rc = 0;\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("    int32_t i;\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("    rc = out->start_vector(out, tag, &count);\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("    for(i=0;i<v->count;i++) {\n");

        specialinvoke r0.<org.apache.jute.compiler.JRecord: void genSerialize(java.io.FileWriter,org.apache.jute.compiler.JType,java.lang.String,java.lang.String)>(r33, $r109, "data", "data[i]");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("    }\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("    rc = rc ? rc : out->end_vector(out, tag);\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("    return rc;\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("}\n");

        $r178 = new java.lang.StringBuilder;

        specialinvoke $r178.<java.lang.StringBuilder: void <init>()>();

        $r179 = virtualinvoke $r178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("int deserialize_");

        $r180 = virtualinvoke $r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r110);

        $r181 = virtualinvoke $r180.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(struct iarchive *in, const char *tag, struct ");

        $r182 = virtualinvoke $r181.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r110);

        $r183 = virtualinvoke $r182.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" *v)\n");

        $r184 = virtualinvoke $r183.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>($r184);

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("{\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("    int rc = 0;\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("    int32_t i;\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("    rc = in->start_vector(in, tag, &v->count);\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("    v->data = calloc(v->count, sizeof(*v->data));\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("    for(i=0;i<v->count;i++) {\n");

        specialinvoke r0.<org.apache.jute.compiler.JRecord: void genDeserialize(java.io.FileWriter,org.apache.jute.compiler.JType,java.lang.String,java.lang.String)>(r33, $r109, "value", "data[i]");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("    }\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("    rc = in->end_vector(in, tag);\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("    return rc;\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("}\n");

     label02:
        goto label01;

     label03:
        $r3 = virtualinvoke r0.<org.apache.jute.compiler.JRecord: java.lang.String getName()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("struct ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" {\n");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.io.FileWriter: void write(java.lang.String)>($r9);

        $r10 = r0.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label05;

        $r104 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r187 = (org.apache.jute.compiler.JField) $r104;

        $r105 = virtualinvoke r187.<org.apache.jute.compiler.JField: java.lang.String genCDecl()>();

        virtualinvoke r4.<java.io.FileWriter: void write(java.lang.String)>($r105);

        goto label04;

     label05:
        virtualinvoke r4.<java.io.FileWriter: void write(java.lang.String)>("};\n");

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("int serialize_");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(struct oarchive *out, const char *tag, struct ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" *v);\n");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.io.FileWriter: void write(java.lang.String)>($r18);

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("int deserialize_");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(struct iarchive *in, const char *tag, struct ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*v);\n");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.io.FileWriter: void write(java.lang.String)>($r25);

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("void deallocate_");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(struct ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*);\n");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.io.FileWriter: void write(java.lang.String)>($r32);

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("int serialize_");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(struct oarchive *out, const char *tag, struct ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" *v)");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>($r40);

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("{\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("    int rc;\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("    rc = out->start_record(out, tag);\n");

        $r41 = r0.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $r42 = virtualinvoke $r41.<java.util.ArrayList: java.util.Iterator iterator()>();

     label06:
        $z2 = interfaceinvoke $r42.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label07;

        $r100 = interfaceinvoke $r42.<java.util.Iterator: java.lang.Object next()>();

        r188 = (org.apache.jute.compiler.JField) $r100;

        $r101 = virtualinvoke r188.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType getType()>();

        $r102 = virtualinvoke r188.<org.apache.jute.compiler.JField: java.lang.String getTag()>();

        $r103 = virtualinvoke r188.<org.apache.jute.compiler.JField: java.lang.String getName()>();

        specialinvoke r0.<org.apache.jute.compiler.JRecord: void genSerialize(java.io.FileWriter,org.apache.jute.compiler.JType,java.lang.String,java.lang.String)>(r33, $r101, $r102, $r103);

        goto label06;

     label07:
        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("    rc = rc ? rc : out->end_record(out, tag);\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("    return rc;\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("}\n");

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("int deserialize_");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(struct iarchive *in, const char *tag, struct ");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*v)");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>($r49);

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("{\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("    int rc;\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("    rc = in->start_record(in, tag);\n");

        $r50 = r0.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $r51 = virtualinvoke $r50.<java.util.ArrayList: java.util.Iterator iterator()>();

     label08:
        $z3 = interfaceinvoke $r51.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label09;

        $r96 = interfaceinvoke $r51.<java.util.Iterator: java.lang.Object next()>();

        r189 = (org.apache.jute.compiler.JField) $r96;

        $r97 = virtualinvoke r189.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType getType()>();

        $r98 = virtualinvoke r189.<org.apache.jute.compiler.JField: java.lang.String getTag()>();

        $r99 = virtualinvoke r189.<org.apache.jute.compiler.JField: java.lang.String getName()>();

        specialinvoke r0.<org.apache.jute.compiler.JRecord: void genDeserialize(java.io.FileWriter,org.apache.jute.compiler.JType,java.lang.String,java.lang.String)>(r33, $r97, $r98, $r99);

        goto label08;

     label09:
        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("    rc = rc ? rc : in->end_record(in, tag);\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("    return rc;\n");

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("}\n");

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("void deallocate_");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(struct ");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*v)");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>($r58);

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("{\n");

        $r59 = r0.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $r60 = virtualinvoke $r59.<java.util.ArrayList: java.util.Iterator iterator()>();

     label10:
        $z4 = interfaceinvoke $r60.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label14;

        $r61 = interfaceinvoke $r60.<java.util.Iterator: java.lang.Object next()>();

        r190 = (org.apache.jute.compiler.JField) $r61;

        $r62 = virtualinvoke r190.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType getType()>();

        $z5 = $r62 instanceof org.apache.jute.compiler.JRecord;

        if $z5 == 0 goto label11;

        $r86 = new java.lang.StringBuilder;

        specialinvoke $r86.<java.lang.StringBuilder: void <init>()>();

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    deallocate_");

        $r88 = virtualinvoke r190.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType getType()>();

        $r89 = staticinvoke <org.apache.jute.compiler.JRecord: java.lang.String extractStructName(org.apache.jute.compiler.JType)>($r88);

        $r90 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r89);

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(&v->");

        $r92 = virtualinvoke r190.<org.apache.jute.compiler.JField: java.lang.String getName()>();

        $r93 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r92);

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(");\n");

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>($r95);

        goto label13;

     label11:
        $r63 = virtualinvoke r190.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType getType()>();

        $z6 = $r63 instanceof org.apache.jute.compiler.JVector;

        if $z6 == 0 goto label12;

        $r75 = virtualinvoke r190.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType getType()>();

        r191 = (org.apache.jute.compiler.JVector) $r75;

        $r76 = new java.lang.StringBuilder;

        specialinvoke $r76.<java.lang.StringBuilder: void <init>()>();

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    deallocate_");

        $r78 = virtualinvoke r191.<org.apache.jute.compiler.JVector: org.apache.jute.compiler.JType getElementType()>();

        $r79 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String extractVectorName(org.apache.jute.compiler.JType)>($r78);

        $r80 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r79);

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(&v->");

        $r82 = virtualinvoke r190.<org.apache.jute.compiler.JField: java.lang.String getName()>();

        $r83 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r82);

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(");\n");

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>($r85);

        goto label13;

     label12:
        $r64 = virtualinvoke r190.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType getType()>();

        $z7 = $r64 instanceof org.apache.jute.compiler.JCompType;

        if $z7 == 0 goto label13;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    deallocate_");

        $r67 = virtualinvoke r190.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType getType()>();

        $r68 = staticinvoke <org.apache.jute.compiler.JRecord: java.lang.String extractMethodSuffix(org.apache.jute.compiler.JType)>($r67);

        $r69 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68);

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(&v->");

        $r71 = virtualinvoke r190.<org.apache.jute.compiler.JField: java.lang.String getName()>();

        $r72 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(");\n");

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>($r74);

     label13:
        goto label10;

     label14:
        virtualinvoke r33.<java.io.FileWriter: void write(java.lang.String)>("}\n");

        return;
    }

    private void genSerialize(java.io.FileWriter, org.apache.jute.compiler.JType, java.lang.String, java.lang.String) throws java.io.IOException
    {
        boolean $z0, $z1;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r8, $r9, $r11, $r12, $r14, $r15, $r19, $r20, $r21, $r22, $r23, $r24, $r26, $r27, $r29, $r30, $r31, $r32, $r33, $r34;
        org.apache.jute.compiler.JVector $r16;
        org.apache.jute.compiler.JType r0, $r17;
        java.lang.String $r4, r7, r10, $r13, $r18, $r25, $r28, $r35;
        java.io.FileWriter r1;
        org.apache.jute.compiler.JRecord r36;

        r36 := @this: org.apache.jute.compiler.JRecord;

        r1 := @parameter0: java.io.FileWriter;

        r0 := @parameter1: org.apache.jute.compiler.JType;

        r7 := @parameter2: java.lang.String;

        r10 := @parameter3: java.lang.String;

        $z0 = r0 instanceof org.apache.jute.compiler.JRecord;

        if $z0 == 0 goto label1;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    rc = rc ? rc : serialize_");

        $r28 = staticinvoke <org.apache.jute.compiler.JRecord: java.lang.String extractStructName(org.apache.jute.compiler.JType)>(r0);

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(out, \"");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\", &v->");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(");\n");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.FileWriter: void write(java.lang.String)>($r35);

        goto label3;

     label1:
        $z1 = r0 instanceof org.apache.jute.compiler.JVector;

        if $z1 == 0 goto label2;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    rc = rc ? rc : serialize_");

        $r16 = (org.apache.jute.compiler.JVector) r0;

        $r17 = virtualinvoke $r16.<org.apache.jute.compiler.JVector: org.apache.jute.compiler.JType getElementType()>();

        $r18 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String extractVectorName(org.apache.jute.compiler.JType)>($r17);

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(out, \"");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\", &v->");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(");\n");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.FileWriter: void write(java.lang.String)>($r25);

        goto label3;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    rc = rc ? rc : out->serialize_");

        $r4 = staticinvoke <org.apache.jute.compiler.JRecord: java.lang.String extractMethodSuffix(org.apache.jute.compiler.JType)>(r0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(out, \"");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\", &v->");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(");\n");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.FileWriter: void write(java.lang.String)>($r13);

     label3:
        return;
    }

    private void genDeserialize(java.io.FileWriter, org.apache.jute.compiler.JType, java.lang.String, java.lang.String) throws java.io.IOException
    {
        boolean $z0, $z1;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r8, $r9, $r11, $r12, $r14, $r15, $r19, $r20, $r21, $r22, $r23, $r24, $r26, $r27, $r29, $r30, $r31, $r32, $r33, $r34;
        org.apache.jute.compiler.JVector $r16;
        org.apache.jute.compiler.JType r0, $r17;
        java.lang.String $r4, r7, r10, $r13, $r18, $r25, $r28, $r35;
        java.io.FileWriter r1;
        org.apache.jute.compiler.JRecord r36;

        r36 := @this: org.apache.jute.compiler.JRecord;

        r1 := @parameter0: java.io.FileWriter;

        r0 := @parameter1: org.apache.jute.compiler.JType;

        r7 := @parameter2: java.lang.String;

        r10 := @parameter3: java.lang.String;

        $z0 = r0 instanceof org.apache.jute.compiler.JRecord;

        if $z0 == 0 goto label1;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    rc = rc ? rc : deserialize_");

        $r28 = staticinvoke <org.apache.jute.compiler.JRecord: java.lang.String extractStructName(org.apache.jute.compiler.JType)>(r0);

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(in, \"");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\", &v->");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(");\n");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.FileWriter: void write(java.lang.String)>($r35);

        goto label3;

     label1:
        $z1 = r0 instanceof org.apache.jute.compiler.JVector;

        if $z1 == 0 goto label2;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    rc = rc ? rc : deserialize_");

        $r16 = (org.apache.jute.compiler.JVector) r0;

        $r17 = virtualinvoke $r16.<org.apache.jute.compiler.JVector: org.apache.jute.compiler.JType getElementType()>();

        $r18 = staticinvoke <org.apache.jute.compiler.JVector: java.lang.String extractVectorName(org.apache.jute.compiler.JType)>($r17);

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(in, \"");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\", &v->");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(");\n");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.FileWriter: void write(java.lang.String)>($r25);

        goto label3;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    rc = rc ? rc : in->deserialize_");

        $r4 = staticinvoke <org.apache.jute.compiler.JRecord: java.lang.String extractMethodSuffix(org.apache.jute.compiler.JType)>(r0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(in, \"");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\", &v->");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(");\n");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.FileWriter: void write(java.lang.String)>($r13);

     label3:
        return;
    }

    static java.lang.String extractMethodSuffix(org.apache.jute.compiler.JType)
    {
        org.apache.jute.compiler.JType r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @parameter0: org.apache.jute.compiler.JType;

        $z0 = r0 instanceof org.apache.jute.compiler.JRecord;

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <org.apache.jute.compiler.JRecord: java.lang.String extractStructName(org.apache.jute.compiler.JType)>(r0);

        return $r2;

     label1:
        $r1 = virtualinvoke r0.<org.apache.jute.compiler.JType: java.lang.String getMethodSuffix()>();

        return $r1;
    }

    private static java.lang.String extractStructName(org.apache.jute.compiler.JType)
    {
        org.apache.jute.compiler.JType r0;
        int $i0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;

        r0 := @parameter0: org.apache.jute.compiler.JType;

        $r1 = virtualinvoke r0.<org.apache.jute.compiler.JType: java.lang.String getCType()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("struct ");

        if $z0 != 0 goto label1;

        return $r1;

     label1:
        $r2 = "struct ";

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        return $r3;
    }

    public void genCppCode(java.io.FileWriter, java.io.FileWriter) throws java.io.IOException
    {
        java.lang.StringBuilder $r5, $r7, $r8, $r13, $r15, $r16, $r19, $r21, $r22, $r25, $r27, $r28, $r31, $r33, $r34, $r39, $r41, $r42, $r46, $r48, $r49, $r54, $r56, $r57, $r62, $r64, $r65, $r70, $r72, $r73, $r75, $r76, $r81, $r83, $r84, $r86, $r87, $r92, $r94, $r95, $r98, $r100, $r101, $r104, $r106, $r107, $r110, $r112, $r113, $r118, $r119, $r120, $r121, $r122, $r127, $r128, $r129, $r130, $r131, $r136, $r138, $r139, $r145, $r146, $r147, $r149, $r150, $r153, $r154, $r155, $r158, $r159, $r160, $r162, $r163, $r169, $r170, $r171, $r173, $r174, $r177, $r178, $r179, $r182, $r183, $r184, $r185, $r186, $r188, $r189, $r192, $r194, $r195, $r202, $r204, $r205, $r214, $r215, $r216, $r217, $r218, $r219, $r220, $r221, $r222, $r223, $r224, $r225, $r226, $r227, $r228, $r229, $r230, $r231, $r232, $r233, $r234, $r235, $r236, $r237, $r238, $r239;
        org.apache.jute.compiler.JRecord r0;
        org.apache.jute.compiler.JField r207, r208, r209, r210, r211, r212, r213;
        int $i0, $i1, $i2, i3, i4, i5, i6, i7, $i9;
        java.lang.Object $r115, $r124, $r133, $r141, $r165, $r197, $r199;
        java.util.ArrayList $r10, $r14, $r36, $r51, $r59, $r67, $r78, $r89;
        java.lang.String $r1, $r6, $r9, $r17, $r20, $r23, $r26, $r29, $r32, $r35, $r40, $r43, $r47, $r50, $r55, $r58, $r63, $r66, $r71, $r74, $r77, $r82, $r85, $r88, $r93, $r96, $r99, $r102, $r105, $r108, $r111, $r114, $r116, $r123, $r125, $r132, $r137, $r140, $r142, $r148, $r151, $r156, $r161, $r164, $r166, $r172, $r175, $r180, $r187, $r190, $r193, $r196, $r198, $r200, $r203, $r206;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.lang.String[] $r2;
        org.apache.jute.compiler.JType $r134, $r143, $r167;
        java.util.Iterator $r11, $r37, $r52, $r60, $r68, $r79, $r90;
        java.io.FileWriter r3, r44;

        r0 := @this: org.apache.jute.compiler.JRecord;

        r3 := @parameter0: java.io.FileWriter;

        r44 := @parameter1: java.io.FileWriter;

        $r1 = virtualinvoke r0.<org.apache.jute.compiler.JRecord: java.lang.String getCppNameSpace()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("::");

        i3 = 0;

     label01:
        $i0 = lengthof $r2;

        if i3 >= $i0 goto label02;

        $r214 = new java.lang.StringBuilder;

        specialinvoke $r214.<java.lang.StringBuilder: void <init>()>();

        $r202 = virtualinvoke $r214.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("namespace ");

        $r203 = $r2[i3];

        $r204 = virtualinvoke $r202.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r203);

        $r205 = virtualinvoke $r204.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" {\n");

        $r206 = virtualinvoke $r205.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.FileWriter: void write(java.lang.String)>($r206);

        i3 = i3 + 1;

        goto label01;

     label02:
        $r215 = new java.lang.StringBuilder;

        specialinvoke $r215.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r215.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("class ");

        $r6 = virtualinvoke r0.<org.apache.jute.compiler.JRecord: java.lang.String getName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : public ::hadoop::Record {\n");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.FileWriter: void write(java.lang.String)>($r9);

        virtualinvoke r3.<java.io.FileWriter: void write(java.lang.String)>("private:\n");

        $r10 = r0.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r199 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r207 = (org.apache.jute.compiler.JField) $r199;

        $r200 = virtualinvoke r207.<org.apache.jute.compiler.JField: java.lang.String genCppDecl()>();

        virtualinvoke r3.<java.io.FileWriter: void write(java.lang.String)>($r200);

        goto label03;

     label04:
        $r216 = new java.lang.StringBuilder;

        specialinvoke $r216.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r216.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mutable std::bitset<");

        $r14 = r0.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $i1 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> bs_;\n");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.FileWriter: void write(java.lang.String)>($r17);

        virtualinvoke r3.<java.io.FileWriter: void write(java.lang.String)>("public:\n");

        virtualinvoke r3.<java.io.FileWriter: void write(java.lang.String)>("  virtual void serialize(::hadoop::OArchive& a_, const char* tag) const;\n");

        virtualinvoke r3.<java.io.FileWriter: void write(java.lang.String)>("  virtual void deserialize(::hadoop::IArchive& a_, const char* tag);\n");

        virtualinvoke r3.<java.io.FileWriter: void write(java.lang.String)>("  virtual const ::std::string& type() const;\n");

        virtualinvoke r3.<java.io.FileWriter: void write(java.lang.String)>("  virtual const ::std::string& signature() const;\n");

        virtualinvoke r3.<java.io.FileWriter: void write(java.lang.String)>("  virtual bool validate() const;\n");

        $r217 = new java.lang.StringBuilder;

        specialinvoke $r217.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r217.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  virtual bool operator<(const ");

        $r20 = virtualinvoke r0.<org.apache.jute.compiler.JRecord: java.lang.String getName()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("& peer_) const;\n");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.FileWriter: void write(java.lang.String)>($r23);

        $r218 = new java.lang.StringBuilder;

        specialinvoke $r218.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r218.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  virtual bool operator==(const ");

        $r26 = virtualinvoke r0.<org.apache.jute.compiler.JRecord: java.lang.String getName()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("& peer_) const;\n");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.FileWriter: void write(java.lang.String)>($r29);

        $r219 = new java.lang.StringBuilder;

        specialinvoke $r219.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r219.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  virtual ~");

        $r32 = virtualinvoke r0.<org.apache.jute.compiler.JRecord: java.lang.String getName()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("() {};\n");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.FileWriter: void write(java.lang.String)>($r35);

        i4 = 0;

        $r36 = r0.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $r37 = virtualinvoke $r36.<java.util.ArrayList: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke $r37.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $r197 = interfaceinvoke $r37.<java.util.Iterator: java.lang.Object next()>();

        r208 = (org.apache.jute.compiler.JField) $r197;

        $r198 = virtualinvoke r208.<org.apache.jute.compiler.JField: java.lang.String genCppGetSet(int)>(i4);

        virtualinvoke r3.<java.io.FileWriter: void write(java.lang.String)>($r198);

        i4 = i4 + 1;

        goto label05;

     label06:
        $r220 = new java.lang.StringBuilder;

        specialinvoke $r220.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r220.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}; // end record ");

        $r40 = virtualinvoke r0.<org.apache.jute.compiler.JRecord: java.lang.String getName()>();

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.FileWriter: void write(java.lang.String)>($r43);

        $i2 = lengthof $r2;

        i5 = $i2 - 1;

     label07:
        if i5 < 0 goto label08;

        $r221 = new java.lang.StringBuilder;

        specialinvoke $r221.<java.lang.StringBuilder: void <init>()>();

        $r192 = virtualinvoke $r221.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("} // end namespace ");

        $r193 = $r2[i5];

        $r194 = virtualinvoke $r192.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r193);

        $r195 = virtualinvoke $r194.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r196 = virtualinvoke $r195.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.FileWriter: void write(java.lang.String)>($r196);

        $i9 = (int) -1;

        i5 = i5 + $i9;

        goto label07;

     label08:
        $r222 = new java.lang.StringBuilder;

        specialinvoke $r222.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r222.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("void ");

        $r47 = virtualinvoke r0.<org.apache.jute.compiler.JRecord: java.lang.String getCppFQName()>();

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("::serialize(::hadoop::OArchive& a_, const char* tag) const {\n");

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>($r50);

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>("  if (!validate()) throw new ::hadoop::IOException(\"All fields not set.\");\n");

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>("  a_.startRecord(*this,tag);\n");

        i6 = 0;

        $r51 = r0.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $r52 = virtualinvoke $r51.<java.util.ArrayList: java.util.Iterator iterator()>();

     label09:
        $z2 = interfaceinvoke $r52.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label12;

        $r165 = interfaceinvoke $r52.<java.util.Iterator: java.lang.Object next()>();

        r209 = (org.apache.jute.compiler.JField) $r165;

        $r166 = virtualinvoke r209.<org.apache.jute.compiler.JField: java.lang.String getName()>();

        $r167 = virtualinvoke r209.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType getType()>();

        $z9 = $r167 instanceof org.apache.jute.compiler.JBuffer;

        if $z9 == 0 goto label10;

        $r223 = new java.lang.StringBuilder;

        specialinvoke $r223.<java.lang.StringBuilder: void <init>()>();

        $r182 = virtualinvoke $r223.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  a_.serialize(m");

        $r183 = virtualinvoke $r182.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r166);

        $r184 = virtualinvoke $r183.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",m");

        $r185 = virtualinvoke $r184.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r166);

        $r186 = virtualinvoke $r185.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".length(),\"");

        $r187 = virtualinvoke r209.<org.apache.jute.compiler.JField: java.lang.String getTag()>();

        $r188 = virtualinvoke $r186.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r187);

        $r189 = virtualinvoke $r188.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");\n");

        $r190 = virtualinvoke $r189.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>($r190);

        goto label11;

     label10:
        $r224 = new java.lang.StringBuilder;

        specialinvoke $r224.<java.lang.StringBuilder: void <init>()>();

        $r169 = virtualinvoke $r224.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  a_.serialize(m");

        $r170 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r166);

        $r171 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\"");

        $r172 = virtualinvoke r209.<org.apache.jute.compiler.JField: java.lang.String getTag()>();

        $r173 = virtualinvoke $r171.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r172);

        $r174 = virtualinvoke $r173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");\n");

        $r175 = virtualinvoke $r174.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>($r175);

     label11:
        $r225 = new java.lang.StringBuilder;

        specialinvoke $r225.<java.lang.StringBuilder: void <init>()>();

        $r177 = virtualinvoke $r225.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  bs_.reset(");

        $r178 = virtualinvoke $r177.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r179 = virtualinvoke $r178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(");\n");

        $r180 = virtualinvoke $r179.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>($r180);

        i6 = i6 + 1;

        goto label09;

     label12:
        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>("  a_.endRecord(*this,tag);\n");

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>("  return;\n");

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>("}\n");

        $r226 = new java.lang.StringBuilder;

        specialinvoke $r226.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r226.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("void ");

        $r55 = virtualinvoke r0.<org.apache.jute.compiler.JRecord: java.lang.String getCppFQName()>();

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("::deserialize(::hadoop::IArchive& a_, const char* tag) {\n");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>($r58);

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>("  a_.startRecord(*this,tag);\n");

        i7 = 0;

        $r59 = r0.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $r60 = virtualinvoke $r59.<java.util.ArrayList: java.util.Iterator iterator()>();

     label13:
        $z3 = interfaceinvoke $r60.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label16;

        $r141 = interfaceinvoke $r60.<java.util.Iterator: java.lang.Object next()>();

        r210 = (org.apache.jute.compiler.JField) $r141;

        $r142 = virtualinvoke r210.<org.apache.jute.compiler.JField: java.lang.String getName()>();

        $r143 = virtualinvoke r210.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType getType()>();

        $z8 = $r143 instanceof org.apache.jute.compiler.JBuffer;

        if $z8 == 0 goto label14;

        $r227 = new java.lang.StringBuilder;

        specialinvoke $r227.<java.lang.StringBuilder: void <init>()>();

        $r158 = virtualinvoke $r227.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  { size_t len=0; a_.deserialize(m");

        $r159 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r142);

        $r160 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",len,\"");

        $r161 = virtualinvoke r210.<org.apache.jute.compiler.JField: java.lang.String getTag()>();

        $r162 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r161);

        $r163 = virtualinvoke $r162.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");}\n");

        $r164 = virtualinvoke $r163.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>($r164);

        goto label15;

     label14:
        $r228 = new java.lang.StringBuilder;

        specialinvoke $r228.<java.lang.StringBuilder: void <init>()>();

        $r145 = virtualinvoke $r228.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  a_.deserialize(m");

        $r146 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r142);

        $r147 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\"");

        $r148 = virtualinvoke r210.<org.apache.jute.compiler.JField: java.lang.String getTag()>();

        $r149 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r148);

        $r150 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");\n");

        $r151 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>($r151);

     label15:
        $r229 = new java.lang.StringBuilder;

        specialinvoke $r229.<java.lang.StringBuilder: void <init>()>();

        $r153 = virtualinvoke $r229.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  bs_.set(");

        $r154 = virtualinvoke $r153.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r155 = virtualinvoke $r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(");\n");

        $r156 = virtualinvoke $r155.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>($r156);

        i7 = i7 + 1;

        goto label13;

     label16:
        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>("  a_.endRecord(*this,tag);\n");

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>("  return;\n");

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>("}\n");

        $r230 = new java.lang.StringBuilder;

        specialinvoke $r230.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r230.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bool ");

        $r63 = virtualinvoke r0.<org.apache.jute.compiler.JRecord: java.lang.String getCppFQName()>();

        $r64 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("::validate() const {\n");

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>($r66);

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>("  if (bs_.size() != bs_.count()) return false;\n");

        $r67 = r0.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $r68 = virtualinvoke $r67.<java.util.ArrayList: java.util.Iterator iterator()>();

     label17:
        $z4 = interfaceinvoke $r68.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label19;

        $r133 = interfaceinvoke $r68.<java.util.Iterator: java.lang.Object next()>();

        r211 = (org.apache.jute.compiler.JField) $r133;

        $r134 = virtualinvoke r211.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType getType()>();

        $z7 = $r134 instanceof org.apache.jute.compiler.JRecord;

        if $z7 == 0 goto label18;

        $r231 = new java.lang.StringBuilder;

        specialinvoke $r231.<java.lang.StringBuilder: void <init>()>();

        $r136 = virtualinvoke $r231.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  if (!m");

        $r137 = virtualinvoke r211.<org.apache.jute.compiler.JField: java.lang.String getName()>();

        $r138 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r137);

        $r139 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".validate()) return false;\n");

        $r140 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>($r140);

     label18:
        goto label17;

     label19:
        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>("  return true;\n");

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>("}\n");

        $r232 = new java.lang.StringBuilder;

        specialinvoke $r232.<java.lang.StringBuilder: void <init>()>();

        $r70 = virtualinvoke $r232.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bool ");

        $r71 = virtualinvoke r0.<org.apache.jute.compiler.JRecord: java.lang.String getCppFQName()>();

        $r72 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("::operator< (const ");

        $r74 = virtualinvoke r0.<org.apache.jute.compiler.JRecord: java.lang.String getCppFQName()>();

        $r75 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("& peer_) const {\n");

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>($r77);

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>("  return (1\n");

        $r78 = r0.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $r79 = virtualinvoke $r78.<java.util.ArrayList: java.util.Iterator iterator()>();

     label20:
        $z5 = interfaceinvoke $r79.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label21;

        $r124 = interfaceinvoke $r79.<java.util.Iterator: java.lang.Object next()>();

        r212 = (org.apache.jute.compiler.JField) $r124;

        $r125 = virtualinvoke r212.<org.apache.jute.compiler.JField: java.lang.String getName()>();

        $r233 = new java.lang.StringBuilder;

        specialinvoke $r233.<java.lang.StringBuilder: void <init>()>();

        $r127 = virtualinvoke $r233.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    && (m");

        $r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r125);

        $r129 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" < peer_.m");

        $r130 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r125);

        $r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")\n");

        $r132 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>($r132);

        goto label20;

     label21:
        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>("  );\n");

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>("}\n");

        $r234 = new java.lang.StringBuilder;

        specialinvoke $r234.<java.lang.StringBuilder: void <init>()>();

        $r81 = virtualinvoke $r234.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bool ");

        $r82 = virtualinvoke r0.<org.apache.jute.compiler.JRecord: java.lang.String getCppFQName()>();

        $r83 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r82);

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("::operator== (const ");

        $r85 = virtualinvoke r0.<org.apache.jute.compiler.JRecord: java.lang.String getCppFQName()>();

        $r86 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r85);

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("& peer_) const {\n");

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>($r88);

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>("  return (1\n");

        $r89 = r0.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $r90 = virtualinvoke $r89.<java.util.ArrayList: java.util.Iterator iterator()>();

     label22:
        $z6 = interfaceinvoke $r90.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label23;

        $r115 = interfaceinvoke $r90.<java.util.Iterator: java.lang.Object next()>();

        r213 = (org.apache.jute.compiler.JField) $r115;

        $r116 = virtualinvoke r213.<org.apache.jute.compiler.JField: java.lang.String getName()>();

        $r235 = new java.lang.StringBuilder;

        specialinvoke $r235.<java.lang.StringBuilder: void <init>()>();

        $r118 = virtualinvoke $r235.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    && (m");

        $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r116);

        $r120 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" == peer_.m");

        $r121 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r116);

        $r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")\n");

        $r123 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>($r123);

        goto label22;

     label23:
        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>("  );\n");

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>("}\n");

        $r236 = new java.lang.StringBuilder;

        specialinvoke $r236.<java.lang.StringBuilder: void <init>()>();

        $r92 = virtualinvoke $r236.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("const ::std::string&");

        $r93 = virtualinvoke r0.<org.apache.jute.compiler.JRecord: java.lang.String getCppFQName()>();

        $r94 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r93);

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("::type() const {\n");

        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>($r96);

        $r237 = new java.lang.StringBuilder;

        specialinvoke $r237.<java.lang.StringBuilder: void <init>()>();

        $r98 = virtualinvoke $r237.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  static const ::std::string type_(\"");

        $r99 = r0.<org.apache.jute.compiler.JRecord: java.lang.String mName>;

        $r100 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r99);

        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");\n");

        $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>($r102);

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>("  return type_;\n");

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>("}\n");

        $r238 = new java.lang.StringBuilder;

        specialinvoke $r238.<java.lang.StringBuilder: void <init>()>();

        $r104 = virtualinvoke $r238.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("const ::std::string&");

        $r105 = virtualinvoke r0.<org.apache.jute.compiler.JRecord: java.lang.String getCppFQName()>();

        $r106 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r105);

        $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("::signature() const {\n");

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>($r108);

        $r239 = new java.lang.StringBuilder;

        specialinvoke $r239.<java.lang.StringBuilder: void <init>()>();

        $r110 = virtualinvoke $r239.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  static const ::std::string sig_(\"");

        $r111 = virtualinvoke r0.<org.apache.jute.compiler.JRecord: java.lang.String getSignature()>();

        $r112 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r111);

        $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\");\n");

        $r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>($r114);

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>("  return sig_;\n");

        virtualinvoke r44.<java.io.FileWriter: void write(java.lang.String)>("}\n");

        return;
    }

    public void genJavaCode(java.io.File) throws java.io.IOException
    {
        java.lang.StringBuilder $r6, $r8, $r9, $r12, $r13, $r15, $r16, $r18, $r19, $r21, $r22, $r26, $r27, $r29, $r30, $r32, $r33, $r35, $r36, $r53, $r54, $r56, $r57, $r59, $r60, $r62, $r63, $r65, $r66, $r70, $r71, $r73, $r74, $r76, $r77, $r79, $r80, $r82, $r83, $r89, $r90, $r92, $r93, $r101, $r102, $r104, $r105, $r127, $r128, $r129, $r132, $r133, $r134;
        java.io.IOException $r126, $r131;
        org.apache.jute.compiler.JRecord r0;
        org.apache.jute.compiler.JField r136, r137, r139, r140, r141, r142, r143, r144, r145, r146, r147;
        int $i0, $i1, i2, i3;
        java.lang.Object $r95, $r97, $r99, $r107, $r110, $r112, $r114, $r116, $r118, $r121, $r124;
        java.util.ArrayList $r24, $r38, $r39, $r41, $r43, $r45, $r47, $r49, $r51, $r68, $r85, $r87;
        java.lang.String $r1, $r2, $r7, $r10, $r14, $r17, $r20, $r23, $r28, $r31, $r34, $r37, $r55, $r58, $r61, $r64, $r67, $r72, $r75, $r78, $r81, $r84, $r91, $r94, $r96, $r98, $r100, $r103, $r106, $r111, $r113, $r115, $r117, $r119, $r120, $r122, $r123, $r125, $r130, $r135, $r138;
        java.io.File $r3, r4, $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, z15, $z16;
        org.apache.jute.compiler.JType $r108, $r109;
        java.util.Iterator $r25, $r40, $r42, $r44, $r46, $r48, $r50, $r52, $r69, $r86, $r88;
        java.io.FileWriter $r11;

        r0 := @this: org.apache.jute.compiler.JRecord;

        r4 := @parameter0: java.io.File;

        $r1 = virtualinvoke r0.<org.apache.jute.compiler.JRecord: java.lang.String getJavaPackage()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\.", "/");

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>(r4, $r2);

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label01;

        $z13 = virtualinvoke $r3.<java.io.File: boolean mkdirs()>();

        if $z13 != 0 goto label02;

        $r131 = new java.io.IOException;

        $r132 = new java.lang.StringBuilder;

        specialinvoke $r132.<java.lang.StringBuilder: void <init>()>();

        $r133 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannnot create directory: ");

        $r134 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r135 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r131.<java.io.IOException: void <init>(java.lang.String)>($r135);

        throw $r131;

     label01:
        $z1 = virtualinvoke $r3.<java.io.File: boolean isDirectory()>();

        if $z1 != 0 goto label02;

        $r126 = new java.io.IOException;

        $r127 = new java.lang.StringBuilder;

        specialinvoke $r127.<java.lang.StringBuilder: void <init>()>();

        $r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r129 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a directory.");

        $r130 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r126.<java.io.IOException: void <init>(java.lang.String)>($r130);

        throw $r126;

     label02:
        $r5 = new java.io.File;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r0.<org.apache.jute.compiler.JRecord: java.lang.String getName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".java");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r10);

        $r11 = new java.io.FileWriter;

        specialinvoke $r11.<java.io.FileWriter: void <init>(java.io.File)>($r5);

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("// File generated by hadoop record compiler. Do not edit.\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("/**\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("* Licensed to the Apache Software Foundation (ASF) under one\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("* or more contributor license agreements.  See the NOTICE file\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("* distributed with this work for additional information\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("* regarding copyright ownership.  The ASF licenses this file\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("* to you under the Apache License, Version 2.0 (the\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("* \"License\"); you may not use this file except in compliance\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("* with the License.  You may obtain a copy of the License at\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("*\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("*     http://www.apache.org/licenses/LICENSE-2.0\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("*\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("* Unless required by applicable law or agreed to in writing, software\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("* distributed under the License is distributed on an \"AS IS\" BASIS,\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("* See the License for the specific language governing permissions and\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("* limitations under the License.\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("*/\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("\n");

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("package ");

        $r14 = virtualinvoke r0.<org.apache.jute.compiler.JRecord: java.lang.String getJavaPackage()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";\n\n");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>($r17);

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("import org.apache.jute.*;\n");

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("public class ");

        $r20 = virtualinvoke r0.<org.apache.jute.compiler.JRecord: java.lang.String getName()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" implements Record {\n");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>($r23);

        $r24 = r0.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $r25 = virtualinvoke $r24.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z14 = interfaceinvoke $r25.<java.util.Iterator: boolean hasNext()>();

        if $z14 == 0 goto label04;

        $r124 = interfaceinvoke $r25.<java.util.Iterator: java.lang.Object next()>();

        r136 = (org.apache.jute.compiler.JField) $r124;

        $r125 = virtualinvoke r136.<org.apache.jute.compiler.JField: java.lang.String genJavaDecl()>();

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>($r125);

        goto label03;

     label04:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  public ");

        $r28 = virtualinvoke r0.<org.apache.jute.compiler.JRecord: java.lang.String getName()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("() {\n");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>($r31);

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("  }\n");

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  public ");

        $r34 = virtualinvoke r0.<org.apache.jute.compiler.JRecord: java.lang.String getName()>();

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(\n");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>($r37);

        i2 = 0;

        $r38 = r0.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $i0 = virtualinvoke $r38.<java.util.ArrayList: int size()>();

        $r39 = r0.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $r40 = virtualinvoke $r39.<java.util.ArrayList: java.util.Iterator iterator()>();

     label05:
        $z2 = interfaceinvoke $r40.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label08;

        $r121 = interfaceinvoke $r40.<java.util.Iterator: java.lang.Object next()>();

        r137 = (org.apache.jute.compiler.JField) $r121;

        $r122 = virtualinvoke r137.<org.apache.jute.compiler.JField: java.lang.String getName()>();

        $r123 = virtualinvoke r137.<org.apache.jute.compiler.JField: java.lang.String genJavaConstructorParam(java.lang.String)>($r122);

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>($r123);

        $i1 = $i0 - 1;

        if $i1 != i2 goto label06;

        $r138 = "";

        goto label07;

     label06:
        $r138 = ",\n";

     label07:
        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>($r138);

        i2 = i2 + 1;

        goto label05;

     label08:
        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>(") {\n");

        $r41 = r0.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $r42 = virtualinvoke $r41.<java.util.ArrayList: java.util.Iterator iterator()>();

     label09:
        $z3 = interfaceinvoke $r42.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        $r118 = interfaceinvoke $r42.<java.util.Iterator: java.lang.Object next()>();

        r139 = (org.apache.jute.compiler.JField) $r118;

        $r119 = virtualinvoke r139.<org.apache.jute.compiler.JField: java.lang.String getName()>();

        $r120 = virtualinvoke r139.<org.apache.jute.compiler.JField: java.lang.String genJavaConstructorSet(java.lang.String)>($r119);

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>($r120);

        goto label09;

     label10:
        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("  }\n");

        i3 = 0;

        $r43 = r0.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $r44 = virtualinvoke $r43.<java.util.ArrayList: java.util.Iterator iterator()>();

     label11:
        $z4 = interfaceinvoke $r44.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label12;

        $r116 = interfaceinvoke $r44.<java.util.Iterator: java.lang.Object next()>();

        r140 = (org.apache.jute.compiler.JField) $r116;

        $r117 = virtualinvoke r140.<org.apache.jute.compiler.JField: java.lang.String genJavaGetSet(int)>(i3);

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>($r117);

        i3 = i3 + 1;

        goto label11;

     label12:
        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("  public void serialize(OutputArchive a_, String tag) throws java.io.IOException {\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("    a_.startRecord(this,tag);\n");

        $r45 = r0.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $r46 = virtualinvoke $r45.<java.util.ArrayList: java.util.Iterator iterator()>();

     label13:
        $z5 = interfaceinvoke $r46.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label14;

        $r114 = interfaceinvoke $r46.<java.util.Iterator: java.lang.Object next()>();

        r141 = (org.apache.jute.compiler.JField) $r114;

        $r115 = virtualinvoke r141.<org.apache.jute.compiler.JField: java.lang.String genJavaWriteMethodName()>();

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>($r115);

        goto label13;

     label14:
        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("    a_.endRecord(this,tag);\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("  }\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("  public void deserialize(InputArchive a_, String tag) throws java.io.IOException {\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("    a_.startRecord(tag);\n");

        $r47 = r0.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $r48 = virtualinvoke $r47.<java.util.ArrayList: java.util.Iterator iterator()>();

     label15:
        $z6 = interfaceinvoke $r48.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label16;

        $r112 = interfaceinvoke $r48.<java.util.Iterator: java.lang.Object next()>();

        r142 = (org.apache.jute.compiler.JField) $r112;

        $r113 = virtualinvoke r142.<org.apache.jute.compiler.JField: java.lang.String genJavaReadMethodName()>();

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>($r113);

        goto label15;

     label16:
        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("    a_.endRecord(tag);\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("}\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("  public String toString() {\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("    try {\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("      java.io.ByteArrayOutputStream s =\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("        new java.io.ByteArrayOutputStream();\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("      CsvOutputArchive a_ = \n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("        new CsvOutputArchive(s);\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("      a_.startRecord(this,\"\");\n");

        $r49 = r0.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $r50 = virtualinvoke $r49.<java.util.ArrayList: java.util.Iterator iterator()>();

     label17:
        $z7 = interfaceinvoke $r50.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label18;

        $r110 = interfaceinvoke $r50.<java.util.Iterator: java.lang.Object next()>();

        r143 = (org.apache.jute.compiler.JField) $r110;

        $r111 = virtualinvoke r143.<org.apache.jute.compiler.JField: java.lang.String genJavaWriteMethodName()>();

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>($r111);

        goto label17;

     label18:
        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("      a_.endRecord(this,\"\");\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("      return new String(s.toByteArray(), \"UTF-8\");\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("    } catch (Throwable ex) {\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("      ex.printStackTrace();\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("    }\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("    return \"ERROR\";\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("  }\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("  public void write(java.io.DataOutput out) throws java.io.IOException {\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("    BinaryOutputArchive archive = new BinaryOutputArchive(out);\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("    serialize(archive, \"\");\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("  }\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("  public void readFields(java.io.DataInput in) throws java.io.IOException {\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("    BinaryInputArchive archive = new BinaryInputArchive(in);\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("    deserialize(archive, \"\");\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("  }\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("  public int compareTo (Object peer_) throws ClassCastException {\n");

        z15 = 0;

        $r51 = r0.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $r52 = virtualinvoke $r51.<java.util.ArrayList: java.util.Iterator iterator()>();

     label19:
        $z8 = interfaceinvoke $r52.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label22;

        $r107 = interfaceinvoke $r52.<java.util.Iterator: java.lang.Object next()>();

        r144 = (org.apache.jute.compiler.JField) $r107;

        $r108 = virtualinvoke r144.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType getType()>();

        $z11 = $r108 instanceof org.apache.jute.compiler.JMap;

        if $z11 != 0 goto label20;

        $r109 = virtualinvoke r144.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType getType()>();

        $z12 = $r109 instanceof org.apache.jute.compiler.JVector;

        if $z12 == 0 goto label21;

     label20:
        z15 = 1;

     label21:
        goto label19;

     label22:
        if z15 == 0 goto label23;

        $r101 = new java.lang.StringBuilder;

        specialinvoke $r101.<java.lang.StringBuilder: void <init>()>();

        $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    throw new UnsupportedOperationException(\"comparing ");

        $r103 = virtualinvoke r0.<org.apache.jute.compiler.JRecord: java.lang.String getName()>();

        $r104 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r103);

        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is unimplemented\");\n");

        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>($r106);

        goto label26;

     label23:
        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    if (!(peer_ instanceof ");

        $r55 = virtualinvoke r0.<org.apache.jute.compiler.JRecord: java.lang.String getName()>();

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")) {\n");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>($r58);

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("      throw new ClassCastException(\"Comparing different types of records.\");\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("    }\n");

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r61 = virtualinvoke r0.<org.apache.jute.compiler.JRecord: java.lang.String getName()>();

        $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" peer = (");

        $r64 = virtualinvoke r0.<org.apache.jute.compiler.JRecord: java.lang.String getName()>();

        $r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") peer_;\n");

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>($r67);

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("    int ret = 0;\n");

        $r68 = r0.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $r69 = virtualinvoke $r68.<java.util.ArrayList: java.util.Iterator iterator()>();

     label24:
        $z9 = interfaceinvoke $r69.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label25;

        $r99 = interfaceinvoke $r69.<java.util.Iterator: java.lang.Object next()>();

        r145 = (org.apache.jute.compiler.JField) $r99;

        $r100 = virtualinvoke r145.<org.apache.jute.compiler.JField: java.lang.String genJavaCompareTo()>();

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>($r100);

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("    if (ret != 0) return ret;\n");

        goto label24;

     label25:
        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("     return ret;\n");

     label26:
        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("  }\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("  public boolean equals(Object peer_) {\n");

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    if (!(peer_ instanceof ");

        $r72 = virtualinvoke r0.<org.apache.jute.compiler.JRecord: java.lang.String getName()>();

        $r73 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72);

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")) {\n");

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>($r75);

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("      return false;\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("    }\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("    if (peer_ == this) {\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("      return true;\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("    }\n");

        $r76 = new java.lang.StringBuilder;

        specialinvoke $r76.<java.lang.StringBuilder: void <init>()>();

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r78 = virtualinvoke r0.<org.apache.jute.compiler.JRecord: java.lang.String getName()>();

        $r79 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r78);

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" peer = (");

        $r81 = virtualinvoke r0.<org.apache.jute.compiler.JRecord: java.lang.String getName()>();

        $r82 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81);

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") peer_;\n");

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>($r84);

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("    boolean ret = false;\n");

        $r85 = r0.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $r86 = virtualinvoke $r85.<java.util.ArrayList: java.util.Iterator iterator()>();

     label27:
        $z16 = interfaceinvoke $r86.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label28;

        $r97 = interfaceinvoke $r86.<java.util.Iterator: java.lang.Object next()>();

        r146 = (org.apache.jute.compiler.JField) $r97;

        $r98 = virtualinvoke r146.<org.apache.jute.compiler.JField: java.lang.String genJavaEquals()>();

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>($r98);

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("    if (!ret) return ret;\n");

        goto label27;

     label28:
        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("     return ret;\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("  }\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("  public int hashCode() {\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("    int result = 17;\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("    int ret;\n");

        $r87 = r0.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $r88 = virtualinvoke $r87.<java.util.ArrayList: java.util.Iterator iterator()>();

     label29:
        $z10 = interfaceinvoke $r88.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label30;

        $r95 = interfaceinvoke $r88.<java.util.Iterator: java.lang.Object next()>();

        r147 = (org.apache.jute.compiler.JField) $r95;

        $r96 = virtualinvoke r147.<org.apache.jute.compiler.JField: java.lang.String genJavaHashCode()>();

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>($r96);

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("    result = 37*result + ret;\n");

        goto label29;

     label30:
        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("    return result;\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("  }\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("  public static String signature() {\n");

        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    return \"");

        $r91 = virtualinvoke r0.<org.apache.jute.compiler.JRecord: java.lang.String getSignature()>();

        $r92 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r91);

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\";\n");

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>($r94);

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("  }\n");

        virtualinvoke $r11.<java.io.FileWriter: void write(java.lang.String)>("}\n");

        virtualinvoke $r11.<java.io.FileWriter: void close()>();

        return;
    }

    public void genCsharpCode(java.io.File) throws java.io.IOException
    {
        java.lang.StringBuilder $r2, $r5, $r6, $r9, $r10, $r12, $r13, $r16, $r17, $r18, $r19, $r21, $r22, $r23, $r24, $r26, $r27, $r28, $r29, $r46, $r47, $r49, $r50, $r52, $r53, $r55, $r56, $r58, $r59, $r63, $r64, $r66, $r67, $r69, $r70, $r72, $r73, $r75, $r76, $r82, $r83, $r85, $r86, $r94, $r95, $r97, $r98, $r118, $r119, $r120, $r123, $r124, $r125;
        java.io.IOException $r117, $r122;
        org.apache.jute.compiler.JRecord r3;
        org.apache.jute.compiler.JField r127, r129, r130, r131, r132, r133, r134, r135, r136, r137;
        int $i0, $i1, i2, i3;
        java.lang.Object $r88, $r90, $r92, $r100, $r103, $r105, $r107, $r109, $r111, $r114;
        java.util.ArrayList $r31, $r32, $r34, $r36, $r38, $r40, $r42, $r44, $r61, $r78, $r80;
        java.lang.String $r4, $r7, $r11, $r14, $r15, $r20, $r25, $r30, $r48, $r51, $r54, $r57, $r60, $r65, $r68, $r71, $r74, $r77, $r84, $r87, $r89, $r91, $r93, $r96, $r99, $r104, $r106, $r108, $r110, $r112, $r113, $r115, $r116, $r121, $r126, $r128;
        java.io.File r0, $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, z14, $z15;
        org.apache.jute.compiler.JType $r101, $r102;
        java.util.Iterator $r33, $r35, $r37, $r39, $r41, $r43, $r45, $r62, $r79, $r81;
        java.io.FileWriter $r8;

        r3 := @this: org.apache.jute.compiler.JRecord;

        r0 := @parameter0: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label01;

        $z12 = virtualinvoke r0.<java.io.File: boolean mkdirs()>();

        if $z12 != 0 goto label02;

        $r122 = new java.io.IOException;

        $r123 = new java.lang.StringBuilder;

        specialinvoke $r123.<java.lang.StringBuilder: void <init>()>();

        $r124 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannnot create directory: ");

        $r125 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r126 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r122.<java.io.IOException: void <init>(java.lang.String)>($r126);

        throw $r122;

     label01:
        $z1 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();

        if $z1 != 0 goto label02;

        $r117 = new java.io.IOException;

        $r118 = new java.lang.StringBuilder;

        specialinvoke $r118.<java.lang.StringBuilder: void <init>()>();

        $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r120 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a directory.");

        $r121 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r117.<java.io.IOException: void <init>(java.lang.String)>($r121);

        throw $r117;

     label02:
        $r1 = new java.io.File;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r3.<org.apache.jute.compiler.JRecord: java.lang.String getName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".cs");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, $r7);

        $r8 = new java.io.FileWriter;

        specialinvoke $r8.<java.io.FileWriter: void <init>(java.io.File)>($r1);

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("// File generated by hadoop record compiler. Do not edit.\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("/**\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("* Licensed to the Apache Software Foundation (ASF) under one\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("* or more contributor license agreements.  See the NOTICE file\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("* distributed with this work for additional information\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("* regarding copyright ownership.  The ASF licenses this file\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("* to you under the Apache License, Version 2.0 (the\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("* \"License\"); you may not use this file except in compliance\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("* with the License.  You may obtain a copy of the License at\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("*\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("*     http://www.apache.org/licenses/LICENSE-2.0\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("*\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("* Unless required by applicable law or agreed to in writing, software\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("* distributed under the License is distributed on an \"AS IS\" BASIS,\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("* See the License for the specific language governing permissions and\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("* limitations under the License.\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("*/\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("using System;\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("using Org.Apache.Jute;\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("\n");

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("namespace ");

        $r11 = virtualinvoke r3.<org.apache.jute.compiler.JRecord: java.lang.String getCsharpNameSpace()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>($r14);

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("{\n");

        $r15 = virtualinvoke r3.<org.apache.jute.compiler.JRecord: java.lang.String getCsharpName()>();

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("public class ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : IRecord, IComparable \n");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>($r20);

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("{\n");

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  public ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("() {\n");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>($r25);

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("  }\n");

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  public ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(\n");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>($r30);

        i2 = 0;

        $r31 = r3.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $i0 = virtualinvoke $r31.<java.util.ArrayList: int size()>();

        $r32 = r3.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $r33 = virtualinvoke $r32.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z13 = interfaceinvoke $r33.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label06;

        $r114 = interfaceinvoke $r33.<java.util.Iterator: java.lang.Object next()>();

        r127 = (org.apache.jute.compiler.JField) $r114;

        $r115 = virtualinvoke r127.<org.apache.jute.compiler.JField: java.lang.String getCsharpName()>();

        $r116 = virtualinvoke r127.<org.apache.jute.compiler.JField: java.lang.String genCsharpConstructorParam(java.lang.String)>($r115);

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>($r116);

        $i1 = $i0 - 1;

        if $i1 != i2 goto label04;

        $r128 = "";

        goto label05;

     label04:
        $r128 = ",\n";

     label05:
        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>($r128);

        i2 = i2 + 1;

        goto label03;

     label06:
        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>(") {\n");

        $r34 = r3.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $r35 = virtualinvoke $r34.<java.util.ArrayList: java.util.Iterator iterator()>();

     label07:
        $z2 = interfaceinvoke $r35.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label08;

        $r111 = interfaceinvoke $r35.<java.util.Iterator: java.lang.Object next()>();

        r129 = (org.apache.jute.compiler.JField) $r111;

        $r112 = virtualinvoke r129.<org.apache.jute.compiler.JField: java.lang.String getCsharpName()>();

        $r113 = virtualinvoke r129.<org.apache.jute.compiler.JField: java.lang.String genCsharpConstructorSet(java.lang.String)>($r112);

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>($r113);

        goto label07;

     label08:
        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("  }\n");

        i3 = 0;

        $r36 = r3.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $r37 = virtualinvoke $r36.<java.util.ArrayList: java.util.Iterator iterator()>();

     label09:
        $z3 = interfaceinvoke $r37.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        $r109 = interfaceinvoke $r37.<java.util.Iterator: java.lang.Object next()>();

        r130 = (org.apache.jute.compiler.JField) $r109;

        $r110 = virtualinvoke r130.<org.apache.jute.compiler.JField: java.lang.String genCsharpGetSet(int)>(i3);

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>($r110);

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("\n");

        i3 = i3 + 1;

        goto label09;

     label10:
        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("  public void Serialize(IOutputArchive a_, String tag) {\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("    a_.StartRecord(this,tag);\n");

        $r38 = r3.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $r39 = virtualinvoke $r38.<java.util.ArrayList: java.util.Iterator iterator()>();

     label11:
        $z4 = interfaceinvoke $r39.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label12;

        $r107 = interfaceinvoke $r39.<java.util.Iterator: java.lang.Object next()>();

        r131 = (org.apache.jute.compiler.JField) $r107;

        $r108 = virtualinvoke r131.<org.apache.jute.compiler.JField: java.lang.String genCsharpWriteMethodName()>();

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>($r108);

        goto label11;

     label12:
        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("    a_.EndRecord(this,tag);\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("  }\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("  public void Deserialize(IInputArchive a_, String tag) {\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("    a_.StartRecord(tag);\n");

        $r40 = r3.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $r41 = virtualinvoke $r40.<java.util.ArrayList: java.util.Iterator iterator()>();

     label13:
        $z5 = interfaceinvoke $r41.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label14;

        $r105 = interfaceinvoke $r41.<java.util.Iterator: java.lang.Object next()>();

        r132 = (org.apache.jute.compiler.JField) $r105;

        $r106 = virtualinvoke r132.<org.apache.jute.compiler.JField: java.lang.String genCsharpReadMethodName()>();

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>($r106);

        goto label13;

     label14:
        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("    a_.EndRecord(tag);\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("}\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("  public override String ToString() {\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("    try {\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("      System.IO.MemoryStream ms = new System.IO.MemoryStream();\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("      MiscUtil.IO.EndianBinaryWriter writer =\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("        new MiscUtil.IO.EndianBinaryWriter(MiscUtil.Conversion.EndianBitConverter.Big, ms, System.Text.Encoding.UTF8);\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("      BinaryOutputArchive a_ = \n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("        new BinaryOutputArchive(writer);\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("      a_.StartRecord(this,\"\");\n");

        $r42 = r3.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $r43 = virtualinvoke $r42.<java.util.ArrayList: java.util.Iterator iterator()>();

     label15:
        $z6 = interfaceinvoke $r43.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label16;

        $r103 = interfaceinvoke $r43.<java.util.Iterator: java.lang.Object next()>();

        r133 = (org.apache.jute.compiler.JField) $r103;

        $r104 = virtualinvoke r133.<org.apache.jute.compiler.JField: java.lang.String genCsharpWriteMethodName()>();

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>($r104);

        goto label15;

     label16:
        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("      a_.EndRecord(this,\"\");\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("      ms.Position = 0;\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("      return System.Text.Encoding.UTF8.GetString(ms.ToArray());\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("    } catch (Exception ex) {\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("      Console.WriteLine(ex.StackTrace);\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("    }\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("    return \"ERROR\";\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("  }\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("  public void Write(MiscUtil.IO.EndianBinaryWriter writer) {\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("    BinaryOutputArchive archive = new BinaryOutputArchive(writer);\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("    Serialize(archive, \"\");\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("  }\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("  public void ReadFields(MiscUtil.IO.EndianBinaryReader reader) {\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("    BinaryInputArchive archive = new BinaryInputArchive(reader);\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("    Deserialize(archive, \"\");\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("  }\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("  public int CompareTo (object peer_) {\n");

        z14 = 0;

        $r44 = r3.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $r45 = virtualinvoke $r44.<java.util.ArrayList: java.util.Iterator iterator()>();

     label17:
        $z7 = interfaceinvoke $r45.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label20;

        $r100 = interfaceinvoke $r45.<java.util.Iterator: java.lang.Object next()>();

        r134 = (org.apache.jute.compiler.JField) $r100;

        $r101 = virtualinvoke r134.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType getType()>();

        $z10 = $r101 instanceof org.apache.jute.compiler.JMap;

        if $z10 != 0 goto label18;

        $r102 = virtualinvoke r134.<org.apache.jute.compiler.JField: org.apache.jute.compiler.JType getType()>();

        $z11 = $r102 instanceof org.apache.jute.compiler.JVector;

        if $z11 == 0 goto label19;

     label18:
        z14 = 1;

     label19:
        goto label17;

     label20:
        if z14 == 0 goto label21;

        $r94 = new java.lang.StringBuilder;

        specialinvoke $r94.<java.lang.StringBuilder: void <init>()>();

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    throw new InvalidOperationException(\"comparing ");

        $r96 = virtualinvoke r3.<org.apache.jute.compiler.JRecord: java.lang.String getCsharpName()>();

        $r97 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r96);

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is unimplemented\");\n");

        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>($r99);

        goto label24;

     label21:
        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    if (!(peer_ is ");

        $r48 = virtualinvoke r3.<org.apache.jute.compiler.JRecord: java.lang.String getCsharpName()>();

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")) {\n");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>($r51);

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("      throw new InvalidOperationException(\"Comparing different types of records.\");\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("    }\n");

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r54 = virtualinvoke r3.<org.apache.jute.compiler.JRecord: java.lang.String getCsharpName()>();

        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" peer = (");

        $r57 = virtualinvoke r3.<org.apache.jute.compiler.JRecord: java.lang.String getCsharpName()>();

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") peer_;\n");

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>($r60);

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("    int ret = 0;\n");

        $r61 = r3.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $r62 = virtualinvoke $r61.<java.util.ArrayList: java.util.Iterator iterator()>();

     label22:
        $z8 = interfaceinvoke $r62.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label23;

        $r92 = interfaceinvoke $r62.<java.util.Iterator: java.lang.Object next()>();

        r135 = (org.apache.jute.compiler.JField) $r92;

        $r93 = virtualinvoke r135.<org.apache.jute.compiler.JField: java.lang.String genCsharpCompareTo()>();

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>($r93);

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("    if (ret != 0) return ret;\n");

        goto label22;

     label23:
        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("     return ret;\n");

     label24:
        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("  }\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("  public override bool Equals(object peer_) {\n");

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    if (!(peer_ is ");

        $r65 = virtualinvoke r3.<org.apache.jute.compiler.JRecord: java.lang.String getCsharpName()>();

        $r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")) {\n");

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>($r68);

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("      return false;\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("    }\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("    if (peer_ == this) {\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("      return true;\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("    }\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("    bool ret = false;\n");

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r71 = virtualinvoke r3.<org.apache.jute.compiler.JRecord: java.lang.String getCsharpName()>();

        $r72 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" peer = (");

        $r74 = virtualinvoke r3.<org.apache.jute.compiler.JRecord: java.lang.String getCsharpName()>();

        $r75 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")peer_;\n");

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>($r77);

        $r78 = r3.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $r79 = virtualinvoke $r78.<java.util.ArrayList: java.util.Iterator iterator()>();

     label25:
        $z15 = interfaceinvoke $r79.<java.util.Iterator: boolean hasNext()>();

        if $z15 == 0 goto label26;

        $r90 = interfaceinvoke $r79.<java.util.Iterator: java.lang.Object next()>();

        r136 = (org.apache.jute.compiler.JField) $r90;

        $r91 = virtualinvoke r136.<org.apache.jute.compiler.JField: java.lang.String genCsharpEquals()>();

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>($r91);

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("    if (!ret) return ret;\n");

        goto label25;

     label26:
        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("     return ret;\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("  }\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("  public override int GetHashCode() {\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("    int result = 17;\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("    int ret;\n");

        $r80 = r3.<org.apache.jute.compiler.JRecord: java.util.ArrayList mFields>;

        $r81 = virtualinvoke $r80.<java.util.ArrayList: java.util.Iterator iterator()>();

     label27:
        $z9 = interfaceinvoke $r81.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label28;

        $r88 = interfaceinvoke $r81.<java.util.Iterator: java.lang.Object next()>();

        r137 = (org.apache.jute.compiler.JField) $r88;

        $r89 = virtualinvoke r137.<org.apache.jute.compiler.JField: java.lang.String genCsharpHashCode()>();

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>($r89);

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("    result = 37*result + ret;\n");

        goto label27;

     label28:
        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("    return result;\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("  }\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("  public static string Signature() {\n");

        $r82 = new java.lang.StringBuilder;

        specialinvoke $r82.<java.lang.StringBuilder: void <init>()>();

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    return \"");

        $r84 = virtualinvoke r3.<org.apache.jute.compiler.JRecord: java.lang.String getSignature()>();

        $r85 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84);

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\";\n");

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>($r87);

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("  }\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("}\n");

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>("}\n");

        virtualinvoke $r8.<java.io.FileWriter: void close()>();

        return;
    }

    public static java.lang.String getCsharpFQName(java.lang.String)
    {
        java.lang.String[] $r1;
        java.lang.StringBuffer $r2;
        int $i0, $i1, $i2, i3;
        java.lang.String r0, $r3, $r4, $r5, $r6, r7, $r8;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        i3 = 0;

     label1:
        $i0 = lengthof $r1;

        if i3 >= $i0 goto label5;

        r7 = $r1[i3];

        $r4 = staticinvoke <org.apache.jute.compiler.JRecord: java.lang.String capitalize(java.lang.String)>(r7);

        $r5 = "Id";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r8 = "ZKId";

        goto label3;

     label2:
        $r8 = $r4;

     label3:
        $r6 = staticinvoke <org.apache.jute.compiler.JRecord: java.lang.String capitalize(java.lang.String)>($r8);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $i1 = lengthof $r1;

        $i2 = $i1 - 1;

        if i3 == $i2 goto label4;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

     label4:
        i3 = i3 + 1;

        goto label1;

     label5:
        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <org.apache.jute.compiler.JRecord: java.util.HashMap vectorStructs> = $r0;

        return;
    }
}
