public abstract class ucar.nc2.ft.point.PointCollectionImpl extends java.lang.Object implements ucar.nc2.ft.PointFeatureCollection
{
    protected java.lang.String name;
    protected ucar.unidata.geoloc.LatLonRect boundingBox;
    protected ucar.nc2.units.DateRange dateRange;
    protected int npts;
    protected ucar.nc2.ft.PointFeatureIterator localIterator;

    protected void <init>(java.lang.String)
    {
        int $i1;
        java.lang.String r1;
        ucar.nc2.ft.point.PointCollectionImpl r0;

        r0 := @this: ucar.nc2.ft.point.PointCollectionImpl;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.ft.point.PointCollectionImpl: java.lang.String name> = r1;

        $i1 = (int) -1;

        r0.<ucar.nc2.ft.point.PointCollectionImpl: int npts> = $i1;

        return;
    }

    protected void <init>(java.lang.String, ucar.unidata.geoloc.LatLonRect, ucar.nc2.units.DateRange, int)
    {
        ucar.unidata.geoloc.LatLonRect r2;
        ucar.nc2.units.DateRange r3;
        ucar.nc2.ft.point.PointCollectionImpl r0;
        int i0;
        java.lang.String r1;

        r0 := @this: ucar.nc2.ft.point.PointCollectionImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: ucar.unidata.geoloc.LatLonRect;

        r3 := @parameter2: ucar.nc2.units.DateRange;

        i0 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.ft.point.PointCollectionImpl: java.lang.String name> = r1;

        r0.<ucar.nc2.ft.point.PointCollectionImpl: ucar.unidata.geoloc.LatLonRect boundingBox> = r2;

        r0.<ucar.nc2.ft.point.PointCollectionImpl: ucar.nc2.units.DateRange dateRange> = r3;

        r0.<ucar.nc2.ft.point.PointCollectionImpl: int npts> = i0;

        return;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        ucar.nc2.ft.point.PointCollectionImpl r0;

        r0 := @this: ucar.nc2.ft.point.PointCollectionImpl;

        $r1 = r0.<ucar.nc2.ft.point.PointCollectionImpl: java.lang.String name>;

        return $r1;
    }

    public boolean hasNext() throws java.io.IOException
    {
        ucar.nc2.ft.PointFeatureIterator $r1, $r2;
        ucar.nc2.ft.point.PointCollectionImpl r0;
        boolean $z0;

        r0 := @this: ucar.nc2.ft.point.PointCollectionImpl;

        $r1 = r0.<ucar.nc2.ft.point.PointCollectionImpl: ucar.nc2.ft.PointFeatureIterator localIterator>;

        if $r1 != null goto label1;

        virtualinvoke r0.<ucar.nc2.ft.point.PointCollectionImpl: void resetIteration()>();

     label1:
        $r2 = r0.<ucar.nc2.ft.point.PointCollectionImpl: ucar.nc2.ft.PointFeatureIterator localIterator>;

        $z0 = interfaceinvoke $r2.<ucar.nc2.ft.PointFeatureIterator: boolean hasNext()>();

        return $z0;
    }

    public void finish()
    {
        ucar.nc2.ft.PointFeatureIterator $r1, $r2;
        ucar.nc2.ft.point.PointCollectionImpl r0;

        r0 := @this: ucar.nc2.ft.point.PointCollectionImpl;

        $r1 = r0.<ucar.nc2.ft.point.PointCollectionImpl: ucar.nc2.ft.PointFeatureIterator localIterator>;

        if $r1 == null goto label1;

        $r2 = r0.<ucar.nc2.ft.point.PointCollectionImpl: ucar.nc2.ft.PointFeatureIterator localIterator>;

        interfaceinvoke $r2.<ucar.nc2.ft.PointFeatureIterator: void finish()>();

     label1:
        return;
    }

    public ucar.nc2.ft.PointFeature next() throws java.io.IOException
    {
        ucar.nc2.ft.PointFeatureIterator $r1;
        ucar.nc2.ft.PointFeature $r2;
        ucar.nc2.ft.point.PointCollectionImpl r0;

        r0 := @this: ucar.nc2.ft.point.PointCollectionImpl;

        $r1 = r0.<ucar.nc2.ft.point.PointCollectionImpl: ucar.nc2.ft.PointFeatureIterator localIterator>;

        $r2 = interfaceinvoke $r1.<ucar.nc2.ft.PointFeatureIterator: ucar.nc2.ft.PointFeature next()>();

        return $r2;
    }

    public void resetIteration() throws java.io.IOException
    {
        ucar.nc2.ft.PointFeatureIterator $r1;
        int $i1;
        ucar.nc2.ft.point.PointCollectionImpl r0;

        r0 := @this: ucar.nc2.ft.point.PointCollectionImpl;

        $i1 = (int) -1;

        $r1 = virtualinvoke r0.<ucar.nc2.ft.point.PointCollectionImpl: ucar.nc2.ft.PointFeatureIterator getPointFeatureIterator(int)>($i1);

        r0.<ucar.nc2.ft.point.PointCollectionImpl: ucar.nc2.ft.PointFeatureIterator localIterator> = $r1;

        return;
    }

    public int size()
    {
        int $i0;
        ucar.nc2.ft.point.PointCollectionImpl r0;

        r0 := @this: ucar.nc2.ft.point.PointCollectionImpl;

        $i0 = r0.<ucar.nc2.ft.point.PointCollectionImpl: int npts>;

        return $i0;
    }

    public ucar.nc2.units.DateRange getDateRange()
    {
        ucar.nc2.units.DateRange $r1;
        ucar.nc2.ft.point.PointCollectionImpl r0;

        r0 := @this: ucar.nc2.ft.point.PointCollectionImpl;

        $r1 = r0.<ucar.nc2.ft.point.PointCollectionImpl: ucar.nc2.units.DateRange dateRange>;

        return $r1;
    }

    public ucar.unidata.geoloc.LatLonRect getBoundingBox()
    {
        ucar.unidata.geoloc.LatLonRect $r1;
        ucar.nc2.ft.point.PointCollectionImpl r0;

        r0 := @this: ucar.nc2.ft.point.PointCollectionImpl;

        $r1 = r0.<ucar.nc2.ft.point.PointCollectionImpl: ucar.unidata.geoloc.LatLonRect boundingBox>;

        return $r1;
    }

    public void setDateRange(ucar.nc2.units.DateRange)
    {
        ucar.nc2.units.DateRange r1;
        ucar.nc2.ft.point.PointCollectionImpl r0;

        r0 := @this: ucar.nc2.ft.point.PointCollectionImpl;

        r1 := @parameter0: ucar.nc2.units.DateRange;

        r0.<ucar.nc2.ft.point.PointCollectionImpl: ucar.nc2.units.DateRange dateRange> = r1;

        return;
    }

    public void setBoundingBox(ucar.unidata.geoloc.LatLonRect)
    {
        ucar.unidata.geoloc.LatLonRect r1;
        ucar.nc2.ft.point.PointCollectionImpl r0;

        r0 := @this: ucar.nc2.ft.point.PointCollectionImpl;

        r1 := @parameter0: ucar.unidata.geoloc.LatLonRect;

        r0.<ucar.nc2.ft.point.PointCollectionImpl: ucar.unidata.geoloc.LatLonRect boundingBox> = r1;

        return;
    }

    public void calcBounds() throws java.io.IOException
    {
        java.lang.Throwable $r3;
        ucar.nc2.ft.PointFeatureIterator $r4;
        ucar.unidata.geoloc.LatLonRect $r2;
        ucar.nc2.units.DateRange $r1;
        ucar.nc2.ft.point.PointCollectionImpl r0;
        int $i0, $i2;
        boolean $z0;

        r0 := @this: ucar.nc2.ft.point.PointCollectionImpl;

        $r1 = r0.<ucar.nc2.ft.point.PointCollectionImpl: ucar.nc2.units.DateRange dateRange>;

        if $r1 == null goto label1;

        $r2 = r0.<ucar.nc2.ft.point.PointCollectionImpl: ucar.unidata.geoloc.LatLonRect boundingBox>;

        if $r2 == null goto label1;

        $i0 = virtualinvoke r0.<ucar.nc2.ft.point.PointCollectionImpl: int size()>();

        if $i0 <= 0 goto label1;

        return;

     label1:
        $i2 = (int) -1;

        $r4 = virtualinvoke r0.<ucar.nc2.ft.point.PointCollectionImpl: ucar.nc2.ft.PointFeatureIterator getPointFeatureIterator(int)>($i2);

        interfaceinvoke $r4.<ucar.nc2.ft.PointFeatureIterator: void setCalculateBounds(ucar.nc2.ft.PointFeatureCollection)>(r0);

     label2:
        $z0 = interfaceinvoke $r4.<ucar.nc2.ft.PointFeatureIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        interfaceinvoke $r4.<ucar.nc2.ft.PointFeatureIterator: ucar.nc2.ft.PointFeature next()>();

        goto label2;

     label3:
        interfaceinvoke $r4.<ucar.nc2.ft.PointFeatureIterator: void finish()>();

        goto label6;

     label4:
        $r3 := @caughtexception;

     label5:
        interfaceinvoke $r4.<ucar.nc2.ft.PointFeatureIterator: void finish()>();

        throw $r3;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void setSize(int)
    {
        int i0;
        ucar.nc2.ft.point.PointCollectionImpl r0;

        r0 := @this: ucar.nc2.ft.point.PointCollectionImpl;

        i0 := @parameter0: int;

        r0.<ucar.nc2.ft.point.PointCollectionImpl: int npts> = i0;

        return;
    }

    public ucar.nc2.constants.FeatureType getCollectionFeatureType()
    {
        ucar.nc2.constants.FeatureType $r0;
        ucar.nc2.ft.point.PointCollectionImpl r1;

        r1 := @this: ucar.nc2.ft.point.PointCollectionImpl;

        $r0 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType POINT>;

        return $r0;
    }

    public ucar.nc2.ft.PointFeatureCollection subset(ucar.unidata.geoloc.LatLonRect, ucar.nc2.units.DateRange) throws java.io.IOException
    {
        ucar.unidata.geoloc.LatLonRect r2;
        ucar.nc2.units.DateRange r3;
        ucar.nc2.ft.point.PointCollectionImpl r1;
        ucar.nc2.ft.point.PointCollectionImpl$PointCollectionSubset $r0;

        r1 := @this: ucar.nc2.ft.point.PointCollectionImpl;

        r2 := @parameter0: ucar.unidata.geoloc.LatLonRect;

        r3 := @parameter1: ucar.nc2.units.DateRange;

        $r0 = new ucar.nc2.ft.point.PointCollectionImpl$PointCollectionSubset;

        specialinvoke $r0.<ucar.nc2.ft.point.PointCollectionImpl$PointCollectionSubset: void <init>(ucar.nc2.ft.point.PointCollectionImpl,ucar.nc2.ft.point.PointCollectionImpl,ucar.unidata.geoloc.LatLonRect,ucar.nc2.units.DateRange)>(r1, r1, r2, r3);

        return $r0;
    }
}
