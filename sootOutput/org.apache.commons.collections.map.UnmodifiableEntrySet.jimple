public final class org.apache.commons.collections.map.UnmodifiableEntrySet extends org.apache.commons.collections.set.AbstractSetDecorator implements org.apache.commons.collections.Unmodifiable
{

    public static java.util.Set decorate(java.util.Set)
    {
        java.util.Set r0;
        org.apache.commons.collections.map.UnmodifiableEntrySet $r1;
        boolean $z0;

        r0 := @parameter0: java.util.Set;

        $z0 = r0 instanceof org.apache.commons.collections.Unmodifiable;

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r1 = new org.apache.commons.collections.map.UnmodifiableEntrySet;

        specialinvoke $r1.<org.apache.commons.collections.map.UnmodifiableEntrySet: void <init>(java.util.Set)>(r0);

        return $r1;
    }

    private void <init>(java.util.Set)
    {
        java.util.Set r1;
        org.apache.commons.collections.map.UnmodifiableEntrySet r0;

        r0 := @this: org.apache.commons.collections.map.UnmodifiableEntrySet;

        r1 := @parameter0: java.util.Set;

        specialinvoke r0.<org.apache.commons.collections.set.AbstractSetDecorator: void <init>(java.util.Set)>(r1);

        return;
    }

    public boolean add(java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.Object r2;
        org.apache.commons.collections.map.UnmodifiableEntrySet r1;

        r1 := @this: org.apache.commons.collections.map.UnmodifiableEntrySet;

        r2 := @parameter0: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean addAll(java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.commons.collections.map.UnmodifiableEntrySet r1;
        java.util.Collection r2;

        r1 := @this: org.apache.commons.collections.map.UnmodifiableEntrySet;

        r2 := @parameter0: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void clear()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.commons.collections.map.UnmodifiableEntrySet r1;

        r1 := @this: org.apache.commons.collections.map.UnmodifiableEntrySet;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean remove(java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.Object r2;
        org.apache.commons.collections.map.UnmodifiableEntrySet r1;

        r1 := @this: org.apache.commons.collections.map.UnmodifiableEntrySet;

        r2 := @parameter0: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean removeAll(java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.commons.collections.map.UnmodifiableEntrySet r1;
        java.util.Collection r2;

        r1 := @this: org.apache.commons.collections.map.UnmodifiableEntrySet;

        r2 := @parameter0: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean retainAll(java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.commons.collections.map.UnmodifiableEntrySet r1;
        java.util.Collection r2;

        r1 := @this: org.apache.commons.collections.map.UnmodifiableEntrySet;

        r2 := @parameter0: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.util.Iterator iterator()
    {
        java.util.Iterator $r3;
        java.util.Collection $r2;
        org.apache.commons.collections.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator $r0;
        org.apache.commons.collections.map.UnmodifiableEntrySet r1;

        r1 := @this: org.apache.commons.collections.map.UnmodifiableEntrySet;

        $r0 = new org.apache.commons.collections.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator;

        $r2 = r1.<org.apache.commons.collections.map.UnmodifiableEntrySet: java.util.Collection collection>;

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

        specialinvoke $r0.<org.apache.commons.collections.map.UnmodifiableEntrySet$UnmodifiableEntrySetIterator: void <init>(java.util.Iterator)>($r3);

        return $r0;
    }

    public java.lang.Object[] toArray()
    {
        java.util.Map$Entry $r5;
        java.lang.Object[] $r2;
        java.util.Collection $r1;
        org.apache.commons.collections.map.UnmodifiableEntrySet$UnmodifiableEntry $r3;
        int $i0, i1;
        java.lang.Object $r4;
        org.apache.commons.collections.map.UnmodifiableEntrySet r0;

        r0 := @this: org.apache.commons.collections.map.UnmodifiableEntrySet;

        $r1 = r0.<org.apache.commons.collections.map.UnmodifiableEntrySet: java.util.Collection collection>;

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.lang.Object[] toArray()>();

        i1 = 0;

     label1:
        $i0 = lengthof $r2;

        if i1 >= $i0 goto label2;

        $r3 = new org.apache.commons.collections.map.UnmodifiableEntrySet$UnmodifiableEntry;

        $r4 = $r2[i1];

        $r5 = (java.util.Map$Entry) $r4;

        specialinvoke $r3.<org.apache.commons.collections.map.UnmodifiableEntrySet$UnmodifiableEntry: void <init>(java.util.Map$Entry)>($r5);

        $r2[i1] = $r3;

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r2;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        java.lang.Object[] r0, $r3, $r10, r11;
        org.apache.commons.collections.map.UnmodifiableEntrySet$UnmodifiableEntry $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8;
        org.apache.commons.collections.map.UnmodifiableEntrySet r1;
        java.util.Map$Entry $r6;
        java.util.Collection $r2;
        java.lang.Object $r5, $r9;
        java.lang.Class $r7, $r8;

        r1 := @this: org.apache.commons.collections.map.UnmodifiableEntrySet;

        r0 := @parameter0: java.lang.Object[];

        r11 = r0;

        $i0 = lengthof r0;

        if $i0 <= 0 goto label1;

        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.Class getComponentType()>();

        $r9 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r8, 0);

        $r10 = (java.lang.Object[]) $r9;

        r11 = (java.lang.Object[]) $r10;

     label1:
        $r2 = r1.<org.apache.commons.collections.map.UnmodifiableEntrySet: java.util.Collection collection>;

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>(r11);

        i7 = 0;

     label2:
        $i8 = lengthof $r3;

        if i7 >= $i8 goto label3;

        $r4 = new org.apache.commons.collections.map.UnmodifiableEntrySet$UnmodifiableEntry;

        $r5 = $r3[i7];

        $r6 = (java.util.Map$Entry) $r5;

        specialinvoke $r4.<org.apache.commons.collections.map.UnmodifiableEntrySet$UnmodifiableEntry: void <init>(java.util.Map$Entry)>($r6);

        $r3[i7] = $r4;

        i7 = i7 + 1;

        goto label2;

     label3:
        $i2 = lengthof $r3;

        $i1 = lengthof r0;

        if $i2 <= $i1 goto label4;

        return $r3;

     label4:
        $i3 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r0, 0, $i3);

        $i5 = lengthof r0;

        $i4 = lengthof $r3;

        if $i5 <= $i4 goto label5;

        $i6 = lengthof $r3;

        r0[$i6] = null;

     label5:
        return r0;
    }
}
