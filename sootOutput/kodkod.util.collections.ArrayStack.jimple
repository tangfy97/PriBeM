public class kodkod.util.collections.ArrayStack extends kodkod.util.collections.Stack
{
    private java.lang.Object[] elems;
    private int size;

    public void <init>()
    {
        kodkod.util.collections.ArrayStack r0;

        r0 := @this: kodkod.util.collections.ArrayStack;

        specialinvoke r0.<kodkod.util.collections.ArrayStack: void <init>(int)>(10);

        return;
    }

    public void <init>(int)
    {
        java.lang.Object[] $r1;
        java.lang.IllegalArgumentException $r2;
        kodkod.util.collections.ArrayStack r0;
        int i0;
        java.lang.StringBuilder $r3, $r5;
        java.lang.String $r4, $r6;

        r0 := @this: kodkod.util.collections.ArrayStack;

        i0 := @parameter0: int;

        specialinvoke r0.<kodkod.util.collections.Stack: void <init>()>();

        if i0 >= 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<0");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label1:
        $r1 = newarray (java.lang.Object)[i0];

        r0.<kodkod.util.collections.ArrayStack: java.lang.Object[] elems> = $r1;

        r0.<kodkod.util.collections.ArrayStack: int size> = 0;

        return;
    }

    public void ensureCapacity(int)
    {
        java.lang.Object[] $r1, r2, $r3, $r4;
        kodkod.util.collections.ArrayStack r0;
        int i0, i1, $i2, $i3, $i4, $i5;

        r0 := @this: kodkod.util.collections.ArrayStack;

        i1 := @parameter0: int;

        $r1 = r0.<kodkod.util.collections.ArrayStack: java.lang.Object[] elems>;

        i0 = lengthof $r1;

        if i1 <= i0 goto label1;

        r2 = r0.<kodkod.util.collections.ArrayStack: java.lang.Object[] elems>;

        $i2 = i0 * 3;

        $i3 = $i2 / 2;

        $i4 = staticinvoke <java.lang.StrictMath: int max(int,int)>(i1, $i3);

        $r3 = newarray (java.lang.Object)[$i4];

        r0.<kodkod.util.collections.ArrayStack: java.lang.Object[] elems> = $r3;

        $r4 = r0.<kodkod.util.collections.ArrayStack: java.lang.Object[] elems>;

        $i5 = r0.<kodkod.util.collections.ArrayStack: int size>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, $r4, 0, $i5);

     label1:
        return;
    }

    public void trimToSize()
    {
        java.lang.Object[] $r1, r2, $r3, $r4;
        kodkod.util.collections.ArrayStack r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: kodkod.util.collections.ArrayStack;

        $r1 = r0.<kodkod.util.collections.ArrayStack: java.lang.Object[] elems>;

        i0 = lengthof $r1;

        $i1 = r0.<kodkod.util.collections.ArrayStack: int size>;

        if $i1 >= i0 goto label1;

        r2 = r0.<kodkod.util.collections.ArrayStack: java.lang.Object[] elems>;

        $i2 = r0.<kodkod.util.collections.ArrayStack: int size>;

        $r3 = newarray (java.lang.Object)[$i2];

        r0.<kodkod.util.collections.ArrayStack: java.lang.Object[] elems> = $r3;

        $r4 = r0.<kodkod.util.collections.ArrayStack: java.lang.Object[] elems>;

        $i3 = r0.<kodkod.util.collections.ArrayStack: int size>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, $r4, 0, $i3);

     label1:
        return;
    }

    public int size()
    {
        int $i0;
        kodkod.util.collections.ArrayStack r0;

        r0 := @this: kodkod.util.collections.ArrayStack;

        $i0 = r0.<kodkod.util.collections.ArrayStack: int size>;

        return $i0;
    }

    public java.lang.Object push(java.lang.Object)
    {
        java.lang.Object[] $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object r2;
        kodkod.util.collections.ArrayStack r0;

        r0 := @this: kodkod.util.collections.ArrayStack;

        r2 := @parameter0: java.lang.Object;

        $i0 = r0.<kodkod.util.collections.ArrayStack: int size>;

        $i1 = $i0 + 1;

        virtualinvoke r0.<kodkod.util.collections.ArrayStack: void ensureCapacity(int)>($i1);

        $r1 = r0.<kodkod.util.collections.ArrayStack: java.lang.Object[] elems>;

        $i2 = r0.<kodkod.util.collections.ArrayStack: int size>;

        $i3 = $i2 + 1;

        r0.<kodkod.util.collections.ArrayStack: int size> = $i3;

        $r1[$i2] = r2;

        return r2;
    }

    public java.lang.Object pop()
    {
        java.util.EmptyStackException $r4;
        java.lang.Object[] $r1, $r3;
        kodkod.util.collections.ArrayStack r0;
        int $i0, $i1, $i2;
        java.lang.Object r2;
        boolean $z0;

        r0 := @this: kodkod.util.collections.ArrayStack;

        $z0 = virtualinvoke r0.<kodkod.util.collections.ArrayStack: boolean empty()>();

        if $z0 == 0 goto label1;

        $r4 = new java.util.EmptyStackException;

        specialinvoke $r4.<java.util.EmptyStackException: void <init>()>();

        throw $r4;

     label1:
        $r1 = r0.<kodkod.util.collections.ArrayStack: java.lang.Object[] elems>;

        $i0 = r0.<kodkod.util.collections.ArrayStack: int size>;

        $i1 = $i0 - 1;

        r0.<kodkod.util.collections.ArrayStack: int size> = $i1;

        r2 = $r1[$i1];

        $r3 = r0.<kodkod.util.collections.ArrayStack: java.lang.Object[] elems>;

        $i2 = r0.<kodkod.util.collections.ArrayStack: int size>;

        $r3[$i2] = null;

        return r2;
    }

    public java.lang.Object peek()
    {
        java.util.EmptyStackException $r3;
        java.lang.Object[] $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        kodkod.util.collections.ArrayStack r0;
        boolean $z0;

        r0 := @this: kodkod.util.collections.ArrayStack;

        $z0 = virtualinvoke r0.<kodkod.util.collections.ArrayStack: boolean empty()>();

        if $z0 == 0 goto label1;

        $r3 = new java.util.EmptyStackException;

        specialinvoke $r3.<java.util.EmptyStackException: void <init>()>();

        throw $r3;

     label1:
        $r1 = r0.<kodkod.util.collections.ArrayStack: java.lang.Object[] elems>;

        $i0 = r0.<kodkod.util.collections.ArrayStack: int size>;

        $i1 = $i0 - 1;

        $r2 = $r1[$i1];

        return $r2;
    }

    public int search(java.lang.Object)
    {
        java.lang.Object[] $r2;
        kodkod.util.collections.ArrayStack r0;
        int $i0, i1, $i3, $i5;
        java.lang.Object r1, $r3;
        boolean $z0;

        r0 := @this: kodkod.util.collections.ArrayStack;

        r1 := @parameter0: java.lang.Object;

        $i0 = r0.<kodkod.util.collections.ArrayStack: int size>;

        i1 = $i0 - 1;

        goto label3;

     label1:
        $r2 = r0.<kodkod.util.collections.ArrayStack: java.lang.Object[] elems>;

        $r3 = $r2[i1];

        $z0 = staticinvoke <kodkod.util.collections.ArrayStack: boolean equal(java.lang.Object,java.lang.Object)>(r1, $r3);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        $i3 = (int) -1;

        i1 = i1 + $i3;

     label3:
        if i1 >= 0 goto label1;

        $i5 = (int) -1;

        return $i5;
    }

    public boolean empty()
    {
        int $i0;
        kodkod.util.collections.ArrayStack r0;

        r0 := @this: kodkod.util.collections.ArrayStack;

        $i0 = r0.<kodkod.util.collections.ArrayStack: int size>;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.util.Iterator iterator()
    {
        kodkod.util.collections.ArrayStack$1 $r0;
        kodkod.util.collections.ArrayStack r1;

        r1 := @this: kodkod.util.collections.ArrayStack;

        $r0 = new kodkod.util.collections.ArrayStack$1;

        specialinvoke $r0.<kodkod.util.collections.ArrayStack$1: void <init>(kodkod.util.collections.ArrayStack)>(r1);

        return $r0;
    }

    static int access$0(kodkod.util.collections.ArrayStack)
    {
        int $i0;
        kodkod.util.collections.ArrayStack r0;

        r0 := @parameter0: kodkod.util.collections.ArrayStack;

        $i0 = r0.<kodkod.util.collections.ArrayStack: int size>;

        return $i0;
    }

    static java.lang.Object[] access$1(kodkod.util.collections.ArrayStack)
    {
        java.lang.Object[] $r1;
        kodkod.util.collections.ArrayStack r0;

        r0 := @parameter0: kodkod.util.collections.ArrayStack;

        $r1 = r0.<kodkod.util.collections.ArrayStack: java.lang.Object[] elems>;

        return $r1;
    }

    static void access$2(kodkod.util.collections.ArrayStack, int)
    {
        int i0;
        kodkod.util.collections.ArrayStack r0;

        r0 := @parameter0: kodkod.util.collections.ArrayStack;

        i0 := @parameter1: int;

        r0.<kodkod.util.collections.ArrayStack: int size> = i0;

        return;
    }
}
