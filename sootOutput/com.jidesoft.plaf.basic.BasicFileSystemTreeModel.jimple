class com.jidesoft.plaf.basic.BasicFileSystemTreeModel extends javax.swing.tree.DefaultTreeModel
{
    private javax.swing.filechooser.FileSystemView _fileSystemView;

    public void <init>(com.jidesoft.swing.FolderChooser)
    {
        com.jidesoft.plaf.basic.BasicFileSystemTreeModel r0;
        com.jidesoft.swing.FolderChooser r2;
        com.jidesoft.plaf.basic.MyComputerTreeNode $r1;

        r0 := @this: com.jidesoft.plaf.basic.BasicFileSystemTreeModel;

        r2 := @parameter0: com.jidesoft.swing.FolderChooser;

        $r1 = new com.jidesoft.plaf.basic.MyComputerTreeNode;

        specialinvoke $r1.<com.jidesoft.plaf.basic.MyComputerTreeNode: void <init>(com.jidesoft.swing.FolderChooser)>(r2);

        specialinvoke r0.<javax.swing.tree.DefaultTreeModel: void <init>(javax.swing.tree.TreeNode)>($r1);

        return;
    }

    public javax.swing.filechooser.FileSystemView getFileSystemView()
    {
        javax.swing.filechooser.FileSystemView $r1, $r2, $r3;
        com.jidesoft.plaf.basic.BasicFileSystemTreeModel r0;

        r0 := @this: com.jidesoft.plaf.basic.BasicFileSystemTreeModel;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicFileSystemTreeModel: javax.swing.filechooser.FileSystemView _fileSystemView>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <javax.swing.filechooser.FileSystemView: javax.swing.filechooser.FileSystemView getFileSystemView()>();

        r0.<com.jidesoft.plaf.basic.BasicFileSystemTreeModel: javax.swing.filechooser.FileSystemView _fileSystemView> = $r3;

     label1:
        $r2 = r0.<com.jidesoft.plaf.basic.BasicFileSystemTreeModel: javax.swing.filechooser.FileSystemView _fileSystemView>;

        return $r2;
    }

    public java.lang.Object getChild(java.lang.Object, int)
    {
        com.jidesoft.plaf.basic.BasicFileSystemTreeModel r3;
        javax.swing.tree.TreeNode $r2;
        int i0;
        java.lang.Object r0;
        boolean $z0;
        javax.swing.tree.DefaultMutableTreeNode $r1;

        r3 := @this: com.jidesoft.plaf.basic.BasicFileSystemTreeModel;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $z0 = r0 instanceof javax.swing.tree.DefaultMutableTreeNode;

        if $z0 == 0 goto label1;

        $r1 = (javax.swing.tree.DefaultMutableTreeNode) r0;

        $r2 = virtualinvoke $r1.<javax.swing.tree.DefaultMutableTreeNode: javax.swing.tree.TreeNode getChildAt(int)>(i0);

        return $r2;

     label1:
        return null;
    }

    public void removePath(javax.swing.tree.TreePath, int, java.lang.Object)
    {
        java.lang.Object[] $r3, $r7;
        com.jidesoft.plaf.basic.LazyMutableTreeNode $r4;
        javax.swing.tree.TreePath r0, $r1;
        com.jidesoft.plaf.basic.BasicFileSystemTreeModel r5;
        javax.swing.tree.MutableTreeNode $r9;
        javax.swing.tree.DefaultMutableTreeNode $r10;
        int[] $r6;
        int i0;
        java.lang.Object $r2, r8;
        boolean $z0;

        r5 := @this: com.jidesoft.plaf.basic.BasicFileSystemTreeModel;

        r0 := @parameter0: javax.swing.tree.TreePath;

        i0 := @parameter1: int;

        r8 := @parameter2: java.lang.Object;

        $r1 = virtualinvoke r0.<javax.swing.tree.TreePath: javax.swing.tree.TreePath getParentPath()>();

        $r2 = virtualinvoke $r1.<javax.swing.tree.TreePath: java.lang.Object getLastPathComponent()>();

        $r3 = virtualinvoke $r1.<javax.swing.tree.TreePath: java.lang.Object[] getPath()>();

        $r4 = (com.jidesoft.plaf.basic.LazyMutableTreeNode) $r2;

        $z0 = virtualinvoke $r4.<com.jidesoft.plaf.basic.LazyMutableTreeNode: boolean isLoaded()>();

        if $z0 == 0 goto label1;

        $r10 = (javax.swing.tree.DefaultMutableTreeNode) $r2;

        $r9 = (javax.swing.tree.MutableTreeNode) r8;

        virtualinvoke $r10.<javax.swing.tree.DefaultMutableTreeNode: void remove(javax.swing.tree.MutableTreeNode)>($r9);

     label1:
        $r6 = newarray (int)[1];

        $r6[0] = i0;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r8;

        virtualinvoke r5.<com.jidesoft.plaf.basic.BasicFileSystemTreeModel: void fireTreeNodesRemoved(java.lang.Object,java.lang.Object[],int[],java.lang.Object[])>($r2, $r3, $r6, $r7);

        return;
    }

    public void addPath(javax.swing.tree.TreePath, int, java.lang.Object)
    {
        java.lang.Object[] $r3, $r5;
        com.jidesoft.plaf.basic.BasicFileSystemTreeModel r0;
        javax.swing.tree.TreePath r1;
        int[] $r4;
        int i0;
        java.lang.Object $r2, r6;

        r0 := @this: com.jidesoft.plaf.basic.BasicFileSystemTreeModel;

        r1 := @parameter0: javax.swing.tree.TreePath;

        i0 := @parameter1: int;

        r6 := @parameter2: java.lang.Object;

        $r2 = virtualinvoke r1.<javax.swing.tree.TreePath: java.lang.Object getLastPathComponent()>();

        $r3 = virtualinvoke r1.<javax.swing.tree.TreePath: java.lang.Object[] getPath()>();

        $r4 = newarray (int)[1];

        $r4[0] = i0;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r6;

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicFileSystemTreeModel: void fireTreeNodesInserted(java.lang.Object,java.lang.Object[],int[],java.lang.Object[])>($r2, $r3, $r4, $r5);

        return;
    }
}
