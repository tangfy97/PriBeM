public abstract class org.springframework.web.util.ExpressionEvaluationUtils extends java.lang.Object
{
    public static final java.lang.String EXPRESSION_SUPPORT_CONTEXT_PARAM;
    public static final java.lang.String EXPRESSION_PREFIX;
    public static final java.lang.String EXPRESSION_SUFFIX;

    public void <init>()
    {
        org.springframework.web.util.ExpressionEvaluationUtils r0;

        r0 := @this: org.springframework.web.util.ExpressionEvaluationUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isSpringJspExpressionSupportActive(javax.servlet.jsp.PageContext)
    {
        javax.servlet.jsp.PageContext r0;
        java.lang.Boolean $r3;
        javax.servlet.ServletContext $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @parameter0: javax.servlet.jsp.PageContext;

        $r1 = virtualinvoke r0.<javax.servlet.jsp.PageContext: javax.servlet.ServletContext getServletContext()>();

        $r2 = interfaceinvoke $r1.<javax.servlet.ServletContext: java.lang.String getInitParameter(java.lang.String)>("springJspExpressionSupport");

        if $r2 == null goto label1;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r2);

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label1:
        return 1;
    }

    public static boolean isExpressionLanguage(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("${");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static java.lang.Object evaluate(java.lang.String, java.lang.String, java.lang.Class, javax.servlet.jsp.PageContext) throws javax.servlet.jsp.JspException
    {
        java.lang.Throwable $r16;
        javax.servlet.jsp.PageContext r0;
        javax.servlet.jsp.JspException $r15;
        java.lang.String r1, $r8, $r11, r12;
        boolean $z0, $z1, $z2;
        java.lang.Class r2;
        java.lang.StringBuilder $r5, $r6, $r7, $r9, $r10, $r14;
        java.lang.Object $r13;

        r12 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Class;

        r0 := @parameter3: javax.servlet.jsp.PageContext;

        $z0 = staticinvoke <org.springframework.web.util.ExpressionEvaluationUtils: boolean isSpringJspExpressionSupportActive(javax.servlet.jsp.PageContext)>(r0);

        if $z0 == 0 goto label1;

        $z2 = staticinvoke <org.springframework.web.util.ExpressionEvaluationUtils: boolean isExpressionLanguage(java.lang.String)>(r1);

        if $z2 == 0 goto label1;

        $r13 = staticinvoke <org.springframework.web.util.ExpressionEvaluationUtils: java.lang.Object doEvaluate(java.lang.String,java.lang.String,java.lang.Class,javax.servlet.jsp.PageContext)>(r12, r1, r2, r0);

        return $r13;

     label1:
        if r1 == null goto label2;

        if r2 == null goto label2;

        $z1 = virtualinvoke r2.<java.lang.Class: boolean isInstance(java.lang.Object)>(r1);

        if $z1 != 0 goto label2;

        $r15 = new javax.servlet.jsp.JspException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("Attribute value \"");

        $r5 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" is neither a JSP EL expression nor ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("assignable to result class [");

        $r8 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<javax.servlet.jsp.JspException: void <init>(java.lang.String)>($r11);

        $r16 = (java.lang.Throwable) $r15;

        throw $r16;

     label2:
        return r1;
    }

    public static java.lang.Object evaluate(java.lang.String, java.lang.String, javax.servlet.jsp.PageContext) throws javax.servlet.jsp.JspException
    {
        javax.servlet.jsp.PageContext r0;
        java.lang.Object $r3;
        java.lang.String r1, r2;
        boolean $z0, $z1;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r0 := @parameter2: javax.servlet.jsp.PageContext;

        $z0 = staticinvoke <org.springframework.web.util.ExpressionEvaluationUtils: boolean isSpringJspExpressionSupportActive(javax.servlet.jsp.PageContext)>(r0);

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <org.springframework.web.util.ExpressionEvaluationUtils: boolean isExpressionLanguage(java.lang.String)>(r1);

        if $z1 == 0 goto label1;

        $r3 = staticinvoke <org.springframework.web.util.ExpressionEvaluationUtils: java.lang.Object doEvaluate(java.lang.String,java.lang.String,java.lang.Class,javax.servlet.jsp.PageContext)>(r2, r1, class "Ljava/lang/Object;", r0);

        return $r3;

     label1:
        return r1;
    }

    public static java.lang.String evaluateString(java.lang.String, java.lang.String, javax.servlet.jsp.PageContext) throws javax.servlet.jsp.JspException
    {
        javax.servlet.jsp.PageContext r0;
        java.lang.Object $r3;
        java.lang.String r1, r2, $r4;
        boolean $z0, $z1;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r0 := @parameter2: javax.servlet.jsp.PageContext;

        $z0 = staticinvoke <org.springframework.web.util.ExpressionEvaluationUtils: boolean isSpringJspExpressionSupportActive(javax.servlet.jsp.PageContext)>(r0);

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <org.springframework.web.util.ExpressionEvaluationUtils: boolean isExpressionLanguage(java.lang.String)>(r1);

        if $z1 == 0 goto label1;

        $r3 = staticinvoke <org.springframework.web.util.ExpressionEvaluationUtils: java.lang.Object doEvaluate(java.lang.String,java.lang.String,java.lang.Class,javax.servlet.jsp.PageContext)>(r2, r1, class "Ljava/lang/String;", r0);

        $r4 = (java.lang.String) $r3;

        return $r4;

     label1:
        return r1;
    }

    public static int evaluateInteger(java.lang.String, java.lang.String, javax.servlet.jsp.PageContext) throws javax.servlet.jsp.JspException
    {
        javax.servlet.jsp.PageContext r0;
        java.lang.Integer $r4;
        int $i0, $i1;
        java.lang.Object $r3;
        java.lang.String r1, r2;
        boolean $z0, $z1;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r0 := @parameter2: javax.servlet.jsp.PageContext;

        $z0 = staticinvoke <org.springframework.web.util.ExpressionEvaluationUtils: boolean isSpringJspExpressionSupportActive(javax.servlet.jsp.PageContext)>(r0);

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <org.springframework.web.util.ExpressionEvaluationUtils: boolean isExpressionLanguage(java.lang.String)>(r1);

        if $z1 == 0 goto label1;

        $r3 = staticinvoke <org.springframework.web.util.ExpressionEvaluationUtils: java.lang.Object doEvaluate(java.lang.String,java.lang.String,java.lang.Class,javax.servlet.jsp.PageContext)>(r2, r1, class "Ljava/lang/Integer;", r0);

        $r4 = (java.lang.Integer) $r3;

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        return $i1;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

        return $i0;
    }

    public static boolean evaluateBoolean(java.lang.String, java.lang.String, javax.servlet.jsp.PageContext) throws javax.servlet.jsp.JspException
    {
        javax.servlet.jsp.PageContext r0;
        java.lang.Boolean $r2, $r5;
        java.lang.Object $r4;
        java.lang.String r1, r3;
        boolean $z0, $z1, $z2, $z3;

        r3 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r0 := @parameter2: javax.servlet.jsp.PageContext;

        $z0 = staticinvoke <org.springframework.web.util.ExpressionEvaluationUtils: boolean isSpringJspExpressionSupportActive(javax.servlet.jsp.PageContext)>(r0);

        if $z0 == 0 goto label1;

        $z2 = staticinvoke <org.springframework.web.util.ExpressionEvaluationUtils: boolean isExpressionLanguage(java.lang.String)>(r1);

        if $z2 == 0 goto label1;

        $r4 = staticinvoke <org.springframework.web.util.ExpressionEvaluationUtils: java.lang.Object doEvaluate(java.lang.String,java.lang.String,java.lang.Class,javax.servlet.jsp.PageContext)>(r3, r1, class "Ljava/lang/Boolean;", r0);

        $r5 = (java.lang.Boolean) $r4;

        $z3 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        return $z3;

     label1:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>(r1);

        $z1 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;
    }

    private static java.lang.Object doEvaluate(java.lang.String, java.lang.String, java.lang.Class, javax.servlet.jsp.PageContext) throws javax.servlet.jsp.JspException
    {
        boolean $z0;
        java.lang.StringBuilder $r17, $r18, r20, $r22, $r23, $r24;
        java.lang.Throwable $r13, $r26;
        javax.servlet.jsp.PageContext r2;
        javax.servlet.jsp.JspException $r25;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i10, $i12, $i14, $i16;
        java.lang.String r0, $r4, $r5, $r7, $r8, $r12, r16, $r19, r21;
        java.lang.Class r1;
        java.lang.Object $r3, $r9, $r11;

        r16 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.Class;

        r2 := @parameter3: javax.servlet.jsp.PageContext;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "Attribute value must not be null");

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "Result class must not be null");

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r2, "PageContext must not be null");

     label01:
        $z0 = virtualinvoke r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Ljava/lang/String;");

        if $z0 == 0 goto label13;

        r20 = null;

        i8 = 0;

     label02:
        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>("${", i8);

        $i10 = (int) -1;

        if $i0 == $i10 goto label08;

        i1 = i8;

        $r7 = "${";

        $i2 = virtualinvoke $r7.<java.lang.String: int length()>();

        $i3 = $i0 + $i2;

        $i4 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>("}", $i3);

        i8 = $i4;

        $i12 = (int) -1;

        if $i4 == $i12 goto label03;

        $r12 = "}";

        $i7 = virtualinvoke $r12.<java.lang.String: int length()>();

        i8 = $i4 + $i7;

        r21 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i0, i8);

        goto label04;

     label03:
        r21 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i0);

     label04:
        $i5 = virtualinvoke r21.<java.lang.String: int length()>();

        $i6 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i5 != $i6 goto label06;

        $r11 = staticinvoke <org.springframework.web.util.ExpressionEvaluationUtils: java.lang.Object evaluateExpression(java.lang.String,java.lang.Class,javax.servlet.jsp.PageContext)>(r0, r1, r2);

     label05:
        return $r11;

     label06:
        if r20 != null goto label07;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        r20 = $r22;

     label07:
        $r8 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i1, $i0);

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = staticinvoke <org.springframework.web.util.ExpressionEvaluationUtils: java.lang.Object evaluateExpression(java.lang.String,java.lang.Class,javax.servlet.jsp.PageContext)>(r21, class "Ljava/lang/String;", r2);

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        goto label10;

     label08:
        if r20 != null goto label09;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        r20 = $r23;

     label09:
        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i8);

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

     label10:
        $i14 = (int) -1;

        if $i0 == $i14 goto label11;

        $i16 = (int) -1;

        if i8 != $i16 goto label02;

     label11:
        $r5 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

     label12:
        return $r5;

     label13:
        $r3 = staticinvoke <org.springframework.web.util.ExpressionEvaluationUtils: java.lang.Object evaluateExpression(java.lang.String,java.lang.Class,javax.servlet.jsp.PageContext)>(r0, r1, r2);

     label14:
        return $r3;

     label15:
        $r13 := @caughtexception;

        $r25 = new javax.servlet.jsp.JspException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>(java.lang.String)>("Parsing of JSP EL expression failed for attribute \'");

        $r17 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<javax.servlet.jsp.JspException: void <init>(java.lang.String,java.lang.Throwable)>($r19, $r13);

        $r26 = (java.lang.Throwable) $r25;

        throw $r26;

        catch javax.servlet.jsp.el.ELException from label01 to label05 with label15;
        catch javax.servlet.jsp.el.ELException from label06 to label12 with label15;
        catch javax.servlet.jsp.el.ELException from label13 to label14 with label15;
    }

    private static java.lang.Object evaluateExpression(java.lang.String, java.lang.Class, javax.servlet.jsp.PageContext) throws javax.servlet.jsp.el.ELException
    {
        javax.servlet.jsp.PageContext r0;
        java.lang.Class r3;
        java.lang.Object $r5;
        java.lang.String r2;
        javax.servlet.jsp.el.ExpressionEvaluator $r1;
        javax.servlet.jsp.el.VariableResolver $r4;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Class;

        r0 := @parameter2: javax.servlet.jsp.PageContext;

        $r1 = virtualinvoke r0.<javax.servlet.jsp.PageContext: javax.servlet.jsp.el.ExpressionEvaluator getExpressionEvaluator()>();

        $r4 = virtualinvoke r0.<javax.servlet.jsp.PageContext: javax.servlet.jsp.el.VariableResolver getVariableResolver()>();

        $r5 = virtualinvoke $r1.<javax.servlet.jsp.el.ExpressionEvaluator: java.lang.Object evaluate(java.lang.String,java.lang.Class,javax.servlet.jsp.el.VariableResolver,javax.servlet.jsp.el.FunctionMapper)>(r2, r3, $r4, null);

        return $r5;
    }

    public static void <clinit>()
    {
        <org.springframework.web.util.ExpressionEvaluationUtils: java.lang.String EXPRESSION_SUFFIX> = "}";

        <org.springframework.web.util.ExpressionEvaluationUtils: java.lang.String EXPRESSION_PREFIX> = "${";

        <org.springframework.web.util.ExpressionEvaluationUtils: java.lang.String EXPRESSION_SUPPORT_CONTEXT_PARAM> = "springJspExpressionSupport";

        return;
    }
}
