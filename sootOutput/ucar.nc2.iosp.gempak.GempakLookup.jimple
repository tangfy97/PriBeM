public final class ucar.nc2.iosp.gempak.GempakLookup extends java.lang.Object implements ucar.grid.GridTableLookup
{
    private ucar.nc2.iosp.gempak.GempakGridRecord sample;

    public void <init>(ucar.nc2.iosp.gempak.GempakGridRecord)
    {
        ucar.nc2.iosp.gempak.GempakGridRecord r1;
        ucar.nc2.iosp.gempak.GempakLookup r0;

        r0 := @this: ucar.nc2.iosp.gempak.GempakLookup;

        r1 := @parameter0: ucar.nc2.iosp.gempak.GempakGridRecord;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.gempak.GempakLookup: ucar.nc2.iosp.gempak.GempakGridRecord sample> = r1;

        return;
    }

    public java.lang.String getShapeName(ucar.grid.GridDefRecord)
    {
        ucar.grid.GridDefRecord r1;
        ucar.nc2.iosp.gempak.GempakLookup r0;

        r0 := @this: ucar.nc2.iosp.gempak.GempakLookup;

        r1 := @parameter0: ucar.grid.GridDefRecord;

        return "Spherical";
    }

    public final java.lang.String getGridName(ucar.grid.GridDefRecord)
    {
        java.lang.String $r2;
        ucar.grid.GridDefRecord r1;
        ucar.nc2.iosp.gempak.GempakLookup r0;

        r0 := @this: ucar.nc2.iosp.gempak.GempakLookup;

        r1 := @parameter0: ucar.grid.GridDefRecord;

        $r2 = specialinvoke r0.<ucar.nc2.iosp.gempak.GempakLookup: java.lang.String getProjectionName(ucar.grid.GridDefRecord)>(r1);

        return $r2;
    }

    public final ucar.grid.GridParameter getParameter(ucar.grid.GridRecord)
    {
        ucar.nc2.iosp.gempak.GempakParameter $r2;
        ucar.nc2.iosp.gempak.GempakLookup r4;
        java.lang.String $r1;
        ucar.grid.GridParameter $r3;
        ucar.grid.GridRecord r0;

        r4 := @this: ucar.nc2.iosp.gempak.GempakLookup;

        r0 := @parameter0: ucar.grid.GridRecord;

        $r1 = interfaceinvoke r0.<ucar.grid.GridRecord: java.lang.String getParameterName()>();

        $r2 = staticinvoke <ucar.nc2.iosp.gempak.GempakGridParameterTable: ucar.nc2.iosp.gempak.GempakParameter getParameter(java.lang.String)>($r1);

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r3 = new ucar.grid.GridParameter;

        specialinvoke $r3.<ucar.grid.GridParameter: void <init>(int,java.lang.String,java.lang.String,java.lang.String)>(0, $r1, $r1, "");

        return $r3;
    }

    public final java.lang.String getDisciplineName(ucar.grid.GridRecord)
    {
        ucar.nc2.iosp.gempak.GempakLookup r0;
        ucar.grid.GridRecord r1;

        r0 := @this: ucar.nc2.iosp.gempak.GempakLookup;

        r1 := @parameter0: ucar.grid.GridRecord;

        return "Meteorological Products";
    }

    public final java.lang.String getCategoryName(ucar.grid.GridRecord)
    {
        ucar.nc2.iosp.gempak.GempakLookup r0;
        ucar.grid.GridRecord r1;

        r0 := @this: ucar.nc2.iosp.gempak.GempakLookup;

        r1 := @parameter0: ucar.grid.GridRecord;

        return "Meteorological Parameters";
    }

    public final java.lang.String getLevelName(ucar.grid.GridRecord)
    {
        ucar.nc2.iosp.gempak.GempakLookup r2;
        int $i0;
        java.lang.String $r1;
        ucar.grid.GridRecord r0;

        r2 := @this: ucar.nc2.iosp.gempak.GempakLookup;

        r0 := @parameter0: ucar.grid.GridRecord;

        $i0 = interfaceinvoke r0.<ucar.grid.GridRecord: int getLevelType1()>();

        $r1 = staticinvoke <ucar.nc2.iosp.gempak.GempakUtil: java.lang.String LV_CCRD(int)>($i0);

        return $r1;
    }

    public final java.lang.String getLevelDescription(ucar.grid.GridRecord)
    {
        ucar.nc2.iosp.gempak.GempakLookup r0;
        java.lang.String $r2;
        ucar.grid.GridRecord r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;

        r0 := @this: ucar.nc2.iosp.gempak.GempakLookup;

        r1 := @parameter0: ucar.grid.GridRecord;

        $r2 = virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakLookup: java.lang.String getLevelName(ucar.grid.GridRecord)>(r1);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("PRES");

        if $z0 == 0 goto label01;

        return "pressure";

     label01:
        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("NONE");

        if $z1 == 0 goto label02;

        return "surface";

     label02:
        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("HGHT");

        if $z2 == 0 goto label03;

        return "height_above_ground";

     label03:
        $z3 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("THTA");

        if $z3 == 0 goto label04;

        return "isentropic";

     label04:
        $z4 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("SGMA");

        if $z4 == 0 goto label05;

        return "sigma";

     label05:
        $z5 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("DPTH");

        if $z5 == 0 goto label06;

        return "depth";

     label06:
        $z6 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("PDLY");

        if $z6 == 0 goto label07;

        return "layer_between_two_pressure_difference_from_ground";

     label07:
        $z7 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("FRZL");

        if $z7 == 0 goto label08;

        return "zeroDegC_isotherm";

     label08:
        $z8 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("TROP");

        if $z8 == 0 goto label09;

        return "tropopause";

     label09:
        $z9 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("CLDL");

        if $z9 == 0 goto label10;

        return "cloud_base";

     label10:
        $z10 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("CLDT");

        if $z10 == 0 goto label11;

        return "cloud_tops";

     label11:
        $z11 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("MWSL");

        if $z11 == 0 goto label12;

        return "maximum_wind_level";

     label12:
        return $r2;
    }

    public final java.lang.String getLevelUnit(ucar.grid.GridRecord)
    {
        ucar.nc2.iosp.gempak.GempakLookup r0;
        java.lang.String $r2;
        ucar.grid.GridRecord r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: ucar.nc2.iosp.gempak.GempakLookup;

        r1 := @parameter0: ucar.grid.GridRecord;

        $r2 = virtualinvoke r0.<ucar.nc2.iosp.gempak.GempakLookup: java.lang.String getLevelName(ucar.grid.GridRecord)>(r1);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("PRES");

        if $z0 == 0 goto label1;

        return "hPa";

     label1:
        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("HGHT");

        if $z1 == 0 goto label2;

        return "m";

     label2:
        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("THTA");

        if $z2 == 0 goto label3;

        return "K";

     label3:
        $z3 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("SGMA");

        if $z3 == 0 goto label4;

        return "";

     label4:
        $z4 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("DPTH");

        if $z4 == 0 goto label5;

        return "m";

     label5:
        $z5 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("PDLY");

        if $z5 == 0 goto label6;

        return "hPa";

     label6:
        return "";
    }

    public final java.lang.String getTimeRangeUnitName(int)
    {
        int i0;
        ucar.nc2.iosp.gempak.GempakLookup r0;

        r0 := @this: ucar.nc2.iosp.gempak.GempakLookup;

        i0 := @parameter0: int;

        return "minute";
    }

    public final java.util.Date getFirstBaseTime()
    {
        ucar.nc2.iosp.gempak.GempakGridRecord $r1;
        ucar.nc2.iosp.gempak.GempakLookup r0;
        java.util.Date $r2;

        r0 := @this: ucar.nc2.iosp.gempak.GempakLookup;

        $r1 = r0.<ucar.nc2.iosp.gempak.GempakLookup: ucar.nc2.iosp.gempak.GempakGridRecord sample>;

        $r2 = virtualinvoke $r1.<ucar.nc2.iosp.gempak.GempakGridRecord: java.util.Date getReferenceTime()>();

        return $r2;
    }

    public final boolean isLatLon(ucar.grid.GridDefRecord)
    {
        ucar.nc2.iosp.gempak.GempakLookup r0;
        java.lang.String $r2;
        ucar.grid.GridDefRecord r1;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.gempak.GempakLookup;

        r1 := @parameter0: ucar.grid.GridDefRecord;

        $r2 = specialinvoke r0.<ucar.nc2.iosp.gempak.GempakLookup: java.lang.String getProjectionName(ucar.grid.GridDefRecord)>(r1);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("CED");

        return $z0;
    }

    public final int getProjectionType(ucar.grid.GridDefRecord)
    {
        ucar.nc2.iosp.gempak.GempakLookup r0;
        ucar.grid.GridDefRecord r1;
        int $i1, $i3;
        java.lang.String $r2, $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this: ucar.nc2.iosp.gempak.GempakLookup;

        r1 := @parameter0: ucar.grid.GridDefRecord;

        $r2 = specialinvoke r0.<ucar.nc2.iosp.gempak.GempakLookup: java.lang.String getProjectionName(ucar.grid.GridDefRecord)>(r1);

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("CED");

        if $z0 == 0 goto label1;

        $i1 = (int) -1;

        return $i1;

     label1:
        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("MER");

        if $z1 == 0 goto label2;

        return 3;

     label2:
        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("MCD");

        if $z2 == 0 goto label3;

        return 3;

     label3:
        $z3 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("LCC");

        if $z3 == 0 goto label4;

        return 2;

     label4:
        $z4 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("SCC");

        if $z4 == 0 goto label5;

        return 2;

     label5:
        $z5 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("PS");

        if $z5 == 0 goto label6;

        return 1;

     label6:
        $z6 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("STR");

        if $z6 == 0 goto label7;

        return 1;

     label7:
        $i3 = (int) -1;

        return $i3;
    }

    public final boolean isVerticalCoordinate(ucar.grid.GridRecord)
    {
        ucar.nc2.iosp.gempak.GempakLookup r4;
        java.lang.String[] $r1, $r2;
        int $i0, $i1;
        java.lang.String $r3;
        ucar.grid.GridRecord r0;
        boolean $z0;

        r4 := @this: ucar.nc2.iosp.gempak.GempakLookup;

        r0 := @parameter0: ucar.grid.GridRecord;

        $i0 = interfaceinvoke r0.<ucar.grid.GridRecord: int getLevelType1()>();

        $r1 = <ucar.nc2.iosp.gempak.GempakUtil: java.lang.String[] vertCoords>;

        $i1 = lengthof $r1;

        if $i0 > $i1 goto label1;

        $r2 = <ucar.nc2.iosp.gempak.GempakUtil: java.lang.String[] vertCoords>;

        $r3 = $r2[$i0];

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("NONE");

        if $z0 != 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public final boolean isPositiveUp(ucar.grid.GridRecord)
    {
        int $i0;
        ucar.nc2.iosp.gempak.GempakLookup r1;
        ucar.grid.GridRecord r0;

        r1 := @this: ucar.nc2.iosp.gempak.GempakLookup;

        r0 := @parameter0: ucar.grid.GridRecord;

        $i0 = interfaceinvoke r0.<ucar.grid.GridRecord: int getLevelType1()>();

        if $i0 == 1 goto label1;

        if $i0 != 5 goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public final float getFirstMissingValue()
    {
        ucar.nc2.iosp.gempak.GempakLookup r0;

        r0 := @this: ucar.nc2.iosp.gempak.GempakLookup;

        return -9999.0F;
    }

    public boolean isLayer(ucar.grid.GridRecord)
    {
        byte $b0;
        ucar.nc2.iosp.gempak.GempakLookup r1;
        ucar.grid.GridRecord r0;
        double $d0;

        r1 := @this: ucar.nc2.iosp.gempak.GempakLookup;

        r0 := @parameter0: ucar.grid.GridRecord;

        $d0 = interfaceinvoke r0.<ucar.grid.GridRecord: double getLevel2()>();

        $b0 = $d0 cmpl -1.0;

        if $b0 != 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    private java.lang.String getProjectionName(ucar.grid.GridDefRecord)
    {
        java.lang.String $r1;
        ucar.grid.GridDefRecord r0;
        ucar.nc2.iosp.gempak.GempakLookup r2;

        r2 := @this: ucar.nc2.iosp.gempak.GempakLookup;

        r0 := @parameter0: ucar.grid.GridDefRecord;

        $r1 = virtualinvoke r0.<ucar.grid.GridDefRecord: java.lang.String getParam(java.lang.String)>("ProjFlag");

        return $r1;
    }

    public final java.lang.String getTitle()
    {
        ucar.nc2.iosp.gempak.GempakLookup r0;

        r0 := @this: ucar.nc2.iosp.gempak.GempakLookup;

        return "GRID data";
    }

    public java.lang.String getInstitution()
    {
        ucar.nc2.iosp.gempak.GempakLookup r0;

        r0 := @this: ucar.nc2.iosp.gempak.GempakLookup;

        return null;
    }

    public final java.lang.String getSource()
    {
        ucar.nc2.iosp.gempak.GempakLookup r0;

        r0 := @this: ucar.nc2.iosp.gempak.GempakLookup;

        return null;
    }

    public final java.lang.String getComment()
    {
        ucar.nc2.iosp.gempak.GempakLookup r0;

        r0 := @this: ucar.nc2.iosp.gempak.GempakLookup;

        return null;
    }

    public java.lang.String getGridType()
    {
        ucar.nc2.iosp.gempak.GempakLookup r0;

        r0 := @this: ucar.nc2.iosp.gempak.GempakLookup;

        return "GEMPAK";
    }
}
