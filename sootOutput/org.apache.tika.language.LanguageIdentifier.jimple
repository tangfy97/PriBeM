public class org.apache.tika.language.LanguageIdentifier extends java.lang.Object
{
    private static final java.util.Map PROFILES;
    private static final java.lang.String PROFILE_SUFFIX;
    private static final java.lang.String PROFILE_ENCODING;
    private static java.util.Properties props;
    private static java.lang.String errors;
    private static final java.lang.String PROPERTIES_OVERRIDE_FILE;
    private static final java.lang.String PROPERTIES_FILE;
    private static final java.lang.String LANGUAGES_KEY;
    private static final double CERTAINTY_LIMIT;
    private final java.lang.String language;
    private final double distance;

    private static void addProfile(java.lang.String) throws java.lang.Exception
    {
        java.lang.Throwable $r12, $r21;
        long $l3;
        int $i0, $i1, $i2;
        java.lang.String r3, $r6, $r10, $r11, $r18, $r20, r22;
        org.apache.tika.language.LanguageProfile $r0;
        boolean $z0;
        java.io.InputStreamReader $r9;
        java.lang.Exception $r13;
        java.lang.StringBuilder $r1, $r4, $r5, $r14, $r15, $r16, $r17, $r19;
        java.lang.Class $r2;
        java.io.BufferedReader $r8;
        java.io.InputStream $r7;

        r3 := @parameter0: java.lang.String;

     label01:
        $r0 = new org.apache.tika.language.LanguageProfile;

        specialinvoke $r0.<org.apache.tika.language.LanguageProfile: void <init>()>();

        $r2 = class "Lorg/apache/tika/language/LanguageIdentifier;";

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".ngp");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r2.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($r6);

     label02:
        $r8 = new java.io.BufferedReader;

        $r9 = new java.io.InputStreamReader;

        specialinvoke $r9.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r7, "UTF-8");

        specialinvoke $r8.<java.io.BufferedReader: void <init>(java.io.Reader)>($r9);

        r22 = virtualinvoke $r8.<java.io.BufferedReader: java.lang.String readLine()>();

     label03:
        if r22 == null goto label05;

        $i0 = virtualinvoke r22.<java.lang.String: int length()>();

        if $i0 <= 0 goto label04;

        $z0 = virtualinvoke r22.<java.lang.String: boolean startsWith(java.lang.String)>("#");

        if $z0 != 0 goto label04;

        $i1 = virtualinvoke r22.<java.lang.String: int indexOf(int)>(32);

        $r10 = virtualinvoke r22.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $i2 = $i1 + 1;

        $r11 = virtualinvoke r22.<java.lang.String: java.lang.String substring(int)>($i2);

        $l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r11);

        virtualinvoke $r0.<org.apache.tika.language.LanguageProfile: void add(java.lang.String,long)>($r10, $l3);

     label04:
        r22 = virtualinvoke $r8.<java.io.BufferedReader: java.lang.String readLine()>();

        goto label03;

     label05:
        virtualinvoke $r7.<java.io.InputStream: void close()>();

        goto label08;

     label06:
        $r21 := @caughtexception;

     label07:
        virtualinvoke $r7.<java.io.InputStream: void close()>();

        throw $r21;

     label08:
        staticinvoke <org.apache.tika.language.LanguageIdentifier: void addProfile(java.lang.String,org.apache.tika.language.LanguageProfile)>(r3, $r0);

     label09:
        goto label11;

     label10:
        $r12 := @caughtexception;

        $r13 = new java.lang.Exception;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed trying to load language profile for language \"");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\". Error: ");

        $r18 = virtualinvoke $r12.<java.lang.Throwable: java.lang.String getMessage()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.Exception: void <init>(java.lang.String)>($r20);

        throw $r13;

     label11:
        return;

        catch java.lang.Throwable from label02 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label01 to label09 with label10;
    }

    public static void addProfile(java.lang.String, org.apache.tika.language.LanguageProfile)
    {
        java.lang.String r0;
        org.apache.tika.language.LanguageProfile r1;
        java.util.Map $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.apache.tika.language.LanguageProfile;

        $r2 = <org.apache.tika.language.LanguageIdentifier: java.util.Map PROFILES>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1);

        return;
    }

    public void <init>(org.apache.tika.language.LanguageProfile)
    {
        byte $b0;
        java.util.Map $r1;
        int $i1;
        java.lang.String r10;
        boolean $z0;
        org.apache.tika.language.LanguageProfile r6, $r8;
        double $d0, d1;
        java.util.Map$Entry r5;
        java.util.Iterator $r3;
        java.util.Set $r2;
        org.apache.tika.language.LanguageIdentifier r0;
        java.lang.Object $r4, $r7, $r9;

        r0 := @this: org.apache.tika.language.LanguageIdentifier;

        r6 := @parameter0: org.apache.tika.language.LanguageProfile;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r10 = "unknown";

        d1 = 1.0;

        $r1 = <org.apache.tika.language.LanguageIdentifier: java.util.Map PROFILES>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r7 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r8 = (org.apache.tika.language.LanguageProfile) $r7;

        $d0 = virtualinvoke r6.<org.apache.tika.language.LanguageProfile: double distance(org.apache.tika.language.LanguageProfile)>($r8);

        $b0 = $d0 cmpg d1;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label2;

        d1 = $d0;

        $r9 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        r10 = (java.lang.String) $r9;

     label2:
        goto label1;

     label3:
        r0.<org.apache.tika.language.LanguageIdentifier: java.lang.String language> = r10;

        r0.<org.apache.tika.language.LanguageIdentifier: double distance> = d1;

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.tika.language.LanguageIdentifier r0;
        java.lang.String r2;
        org.apache.tika.language.LanguageProfile $r1;

        r0 := @this: org.apache.tika.language.LanguageIdentifier;

        r2 := @parameter0: java.lang.String;

        $r1 = new org.apache.tika.language.LanguageProfile;

        specialinvoke $r1.<org.apache.tika.language.LanguageProfile: void <init>(java.lang.String)>(r2);

        specialinvoke r0.<org.apache.tika.language.LanguageIdentifier: void <init>(org.apache.tika.language.LanguageProfile)>($r1);

        return;
    }

    public java.lang.String getLanguage()
    {
        org.apache.tika.language.LanguageIdentifier r0;
        java.lang.String $r1;

        r0 := @this: org.apache.tika.language.LanguageIdentifier;

        $r1 = r0.<org.apache.tika.language.LanguageIdentifier: java.lang.String language>;

        return $r1;
    }

    public boolean isReasonablyCertain()
    {
        org.apache.tika.language.LanguageIdentifier r0;
        byte $b0;
        int $i1;
        double $d0;
        boolean $z0;

        r0 := @this: org.apache.tika.language.LanguageIdentifier;

        $d0 = r0.<org.apache.tika.language.LanguageIdentifier: double distance>;

        $b0 = $d0 cmpg 0.022;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static void initProfiles()
    {
        java.lang.Exception $r12;
        java.lang.StringBuilder $r3, $r5, $r6, $r13, $r15, $r16, $r17, $r18, $r19, $r20, $r22, $r23, $r26, $r28, $r29, $r31, $r32;
        java.lang.String[] $r37;
        int $i0, i1;
        java.lang.String $r2, $r7, $r8, $r14, $r21, $r24, $r27, $r30, $r33, $r36, r38;
        java.util.Properties $r4, $r9, $r10, $r35;
        java.io.IOException $r25;
        java.lang.Class $r0, $r11;
        java.io.InputStream $r1, r34;

        staticinvoke <org.apache.tika.language.LanguageIdentifier: void clearProfiles()>();

        <org.apache.tika.language.LanguageIdentifier: java.lang.String errors> = "";

        $r0 = class "Lorg/apache/tika/language/LanguageIdentifier;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("tika.language.override.properties");

        r34 = $r1;

        if $r1 != null goto label01;

        $r11 = class "Lorg/apache/tika/language/LanguageIdentifier;";

        r34 = virtualinvoke $r11.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("tika.language.properties");

     label01:
        if r34 == null goto label05;

     label02:
        $r9 = new java.util.Properties;

        specialinvoke $r9.<java.util.Properties: void <init>()>();

        <org.apache.tika.language.LanguageIdentifier: java.util.Properties props> = $r9;

        $r10 = <org.apache.tika.language.LanguageIdentifier: java.util.Properties props>;

        virtualinvoke $r10.<java.util.Properties: void load(java.io.InputStream)>(r34);

     label03:
        goto label05;

     label04:
        $r25 := @caughtexception;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = <org.apache.tika.language.LanguageIdentifier: java.lang.String errors>;

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IOException while trying to load property file. Message: ");

        $r30 = virtualinvoke $r25.<java.io.IOException: java.lang.String getMessage()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.apache.tika.language.LanguageIdentifier: java.lang.String errors> = $r33;

     label05:
        $r35 = <org.apache.tika.language.LanguageIdentifier: java.util.Properties props>;

        $r36 = virtualinvoke $r35.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("languages");

        $r37 = virtualinvoke $r36.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i0 = lengthof $r37;

        i1 = 0;

     label06:
        if i1 >= $i0 goto label11;

        r38 = $r37[i1];

        $r2 = virtualinvoke r38.<java.lang.String: java.lang.String trim()>();

        $r4 = <org.apache.tika.language.LanguageIdentifier: java.util.Properties props>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("name.");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke $r4.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r7, "Unknown");

     label07:
        staticinvoke <org.apache.tika.language.LanguageIdentifier: void addProfile(java.lang.String)>($r2);

     label08:
        goto label10;

     label09:
        $r12 := @caughtexception;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = <org.apache.tika.language.LanguageIdentifier: java.lang.String errors>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Language ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") not initialized. Message: ");

        $r21 = virtualinvoke $r12.<java.lang.Exception: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.apache.tika.language.LanguageIdentifier: java.lang.String errors> = $r24;

     label10:
        i1 = i1 + 1;

        goto label06;

     label11:
        return;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    public static void initProfiles(java.util.Map)
    {
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        java.util.Set $r1;
        java.util.Map r0;
        java.lang.Object $r3, $r5, $r7;
        java.lang.String $r6;
        boolean $z0;
        org.apache.tika.language.LanguageProfile $r8;

        r0 := @parameter0: java.util.Map;

        staticinvoke <org.apache.tika.language.LanguageIdentifier: void clearProfiles()>();

        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r5 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = (java.lang.String) $r5;

        $r7 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r8 = (org.apache.tika.language.LanguageProfile) $r7;

        staticinvoke <org.apache.tika.language.LanguageIdentifier: void addProfile(java.lang.String,org.apache.tika.language.LanguageProfile)>($r6, $r8);

        goto label1;

     label2:
        return;
    }

    public static void clearProfiles()
    {
        java.util.Map $r0;

        $r0 = <org.apache.tika.language.LanguageIdentifier: java.util.Map PROFILES>;

        interfaceinvoke $r0.<java.util.Map: void clear()>();

        return;
    }

    public static boolean hasErrors()
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 = <org.apache.tika.language.LanguageIdentifier: java.lang.String errors>;

        if $r0 == "" goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static java.lang.String getErrors()
    {
        java.lang.String $r0;

        $r0 = <org.apache.tika.language.LanguageIdentifier: java.lang.String errors>;

        return $r0;
    }

    public static java.util.Set getSupportedLanguages()
    {
        java.util.Set $r1;
        java.util.Map $r0;

        $r0 = <org.apache.tika.language.LanguageIdentifier: java.util.Map PROFILES>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.util.Set keySet()>();

        return $r1;
    }

    public java.lang.String toString()
    {
        org.apache.tika.language.LanguageIdentifier r1;
        java.lang.StringBuilder $r0, $r3, $r4, $r5, $r6;
        java.lang.String $r2, $r7;
        double $d0;

        r1 := @this: org.apache.tika.language.LanguageIdentifier;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.apache.tika.language.LanguageIdentifier: java.lang.String language>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $d0 = r1.<org.apache.tika.language.LanguageIdentifier: double distance>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;
        java.util.Properties $r1;

        <org.apache.tika.language.LanguageIdentifier: double CERTAINTY_LIMIT> = 0.022;

        <org.apache.tika.language.LanguageIdentifier: java.lang.String LANGUAGES_KEY> = "languages";

        <org.apache.tika.language.LanguageIdentifier: java.lang.String PROPERTIES_FILE> = "tika.language.properties";

        <org.apache.tika.language.LanguageIdentifier: java.lang.String PROPERTIES_OVERRIDE_FILE> = "tika.language.override.properties";

        <org.apache.tika.language.LanguageIdentifier: java.lang.String PROFILE_ENCODING> = "UTF-8";

        <org.apache.tika.language.LanguageIdentifier: java.lang.String PROFILE_SUFFIX> = ".ngp";

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <org.apache.tika.language.LanguageIdentifier: java.util.Map PROFILES> = $r0;

        $r1 = new java.util.Properties;

        specialinvoke $r1.<java.util.Properties: void <init>()>();

        <org.apache.tika.language.LanguageIdentifier: java.util.Properties props> = $r1;

        <org.apache.tika.language.LanguageIdentifier: java.lang.String errors> = "";

        staticinvoke <org.apache.tika.language.LanguageIdentifier: void initProfiles()>();

        return;
    }
}
