public abstract class org.springframework.beans.factory.support.MethodOverride extends java.lang.Object implements org.springframework.beans.BeanMetadataElement
{
    private final java.lang.String methodName;
    private boolean overloaded;
    private java.lang.Object source;

    protected void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.springframework.beans.factory.support.MethodOverride r0;

        r0 := @this: org.springframework.beans.factory.support.MethodOverride;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.beans.factory.support.MethodOverride: boolean overloaded> = 1;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "Method name must not be null");

        r0.<org.springframework.beans.factory.support.MethodOverride: java.lang.String methodName> = r1;

        return;
    }

    public java.lang.String getMethodName()
    {
        java.lang.String $r1;
        org.springframework.beans.factory.support.MethodOverride r0;

        r0 := @this: org.springframework.beans.factory.support.MethodOverride;

        $r1 = r0.<org.springframework.beans.factory.support.MethodOverride: java.lang.String methodName>;

        return $r1;
    }

    protected void setOverloaded(boolean)
    {
        org.springframework.beans.factory.support.MethodOverride r0;
        boolean z0;

        r0 := @this: org.springframework.beans.factory.support.MethodOverride;

        z0 := @parameter0: boolean;

        r0.<org.springframework.beans.factory.support.MethodOverride: boolean overloaded> = z0;

        return;
    }

    protected boolean isOverloaded()
    {
        org.springframework.beans.factory.support.MethodOverride r0;
        boolean $z0;

        r0 := @this: org.springframework.beans.factory.support.MethodOverride;

        $z0 = r0.<org.springframework.beans.factory.support.MethodOverride: boolean overloaded>;

        return $z0;
    }

    public void setSource(java.lang.Object)
    {
        java.lang.Object r1;
        org.springframework.beans.factory.support.MethodOverride r0;

        r0 := @this: org.springframework.beans.factory.support.MethodOverride;

        r1 := @parameter0: java.lang.Object;

        r0.<org.springframework.beans.factory.support.MethodOverride: java.lang.Object source> = r1;

        return;
    }

    public java.lang.Object getSource()
    {
        java.lang.Object $r1;
        org.springframework.beans.factory.support.MethodOverride r0;

        r0 := @this: org.springframework.beans.factory.support.MethodOverride;

        $r1 = r0.<org.springframework.beans.factory.support.MethodOverride: java.lang.Object source>;

        return $r1;
    }

    public abstract boolean matches(java.lang.reflect.Method);

    public boolean equals(java.lang.Object)
    {
        org.springframework.beans.factory.support.MethodOverride r0, r2;
        java.lang.Object r1, $r5, $r6;
        java.lang.String $r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.springframework.beans.factory.support.MethodOverride;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.springframework.beans.factory.support.MethodOverride;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.springframework.beans.factory.support.MethodOverride) r1;

        $r4 = r0.<org.springframework.beans.factory.support.MethodOverride: java.lang.String methodName>;

        $r3 = r2.<org.springframework.beans.factory.support.MethodOverride: java.lang.String methodName>;

        $z1 = staticinvoke <org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 == 0 goto label3;

        $z3 = r0.<org.springframework.beans.factory.support.MethodOverride: boolean overloaded>;

        $z2 = r2.<org.springframework.beans.factory.support.MethodOverride: boolean overloaded>;

        if $z3 != $z2 goto label3;

        $r6 = r0.<org.springframework.beans.factory.support.MethodOverride: java.lang.Object source>;

        $r5 = r2.<org.springframework.beans.factory.support.MethodOverride: java.lang.Object source>;

        $z4 = staticinvoke <org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z4 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public int hashCode()
    {
        org.springframework.beans.factory.support.MethodOverride r0;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.Object $r2;
        java.lang.String $r1;
        boolean $z0, $z1;

        r0 := @this: org.springframework.beans.factory.support.MethodOverride;

        $r1 = r0.<org.springframework.beans.factory.support.MethodOverride: java.lang.String methodName>;

        $i0 = staticinvoke <org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>($r1);

        $i1 = 29 * $i0;

        $r2 = r0.<org.springframework.beans.factory.support.MethodOverride: java.lang.Object source>;

        $i2 = staticinvoke <org.springframework.util.ObjectUtils: int nullSafeHashCode(java.lang.Object)>($r2);

        i5 = $i1 + $i2;

        $i3 = 29 * i5;

        $z0 = r0.<org.springframework.beans.factory.support.MethodOverride: boolean overloaded>;

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $i4 = $i3 + $z1;

        return $i4;
    }
}
