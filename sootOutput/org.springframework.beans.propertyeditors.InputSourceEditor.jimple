public class org.springframework.beans.propertyeditors.InputSourceEditor extends java.beans.PropertyEditorSupport
{
    private final org.springframework.core.io.ResourceEditor resourceEditor;

    public void <init>()
    {
        org.springframework.core.io.ResourceEditor $r1;
        org.springframework.beans.propertyeditors.InputSourceEditor r0;

        r0 := @this: org.springframework.beans.propertyeditors.InputSourceEditor;

        specialinvoke r0.<java.beans.PropertyEditorSupport: void <init>()>();

        $r1 = new org.springframework.core.io.ResourceEditor;

        specialinvoke $r1.<org.springframework.core.io.ResourceEditor: void <init>()>();

        r0.<org.springframework.beans.propertyeditors.InputSourceEditor: org.springframework.core.io.ResourceEditor resourceEditor> = $r1;

        return;
    }

    public void <init>(org.springframework.core.io.ResourceEditor)
    {
        org.springframework.core.io.ResourceEditor r1;
        org.springframework.beans.propertyeditors.InputSourceEditor r0;

        r0 := @this: org.springframework.beans.propertyeditors.InputSourceEditor;

        r1 := @parameter0: org.springframework.core.io.ResourceEditor;

        specialinvoke r0.<java.beans.PropertyEditorSupport: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "ResourceEditor must not be null");

        r0.<org.springframework.beans.propertyeditors.InputSourceEditor: org.springframework.core.io.ResourceEditor resourceEditor> = r1;

        return;
    }

    public void setAsText(java.lang.String) throws java.lang.IllegalArgumentException
    {
        org.springframework.core.io.ResourceEditor $r2, $r3;
        java.net.URL $r6;
        org.springframework.beans.propertyeditors.InputSourceEditor r0;
        java.lang.String r1, $r7, $r13, $r15;
        org.springframework.core.io.Resource r5;
        org.xml.sax.InputSource $r16;
        java.io.IOException $r8;
        java.lang.IllegalArgumentException $r9;
        java.lang.Object $r4;
        java.lang.StringBuilder $r10, $r11, $r12, $r14;

        r0 := @this: org.springframework.beans.propertyeditors.InputSourceEditor;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.beans.propertyeditors.InputSourceEditor: org.springframework.core.io.ResourceEditor resourceEditor>;

        virtualinvoke $r2.<org.springframework.core.io.ResourceEditor: void setAsText(java.lang.String)>(r1);

        $r3 = r0.<org.springframework.beans.propertyeditors.InputSourceEditor: org.springframework.core.io.ResourceEditor resourceEditor>;

        $r4 = virtualinvoke $r3.<org.springframework.core.io.ResourceEditor: java.lang.Object getValue()>();

        r5 = (org.springframework.core.io.Resource) $r4;

     label1:
        if r5 == null goto label2;

        $r16 = new org.xml.sax.InputSource;

        $r6 = interfaceinvoke r5.<org.springframework.core.io.Resource: java.net.URL getURL()>();

        $r7 = virtualinvoke $r6.<java.net.URL: java.lang.String toString()>();

        specialinvoke $r16.<org.xml.sax.InputSource: void <init>(java.lang.String)>($r7);

        goto label3;

     label2:
        $r16 = null;

     label3:
        virtualinvoke r0.<org.springframework.beans.propertyeditors.InputSourceEditor: void setValue(java.lang.Object)>($r16);

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not retrieve URL for ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r13 = virtualinvoke $r8.<java.io.IOException: java.lang.String getMessage()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r9;

     label6:
        return;

        catch java.io.IOException from label1 to label4 with label5;
    }

    public java.lang.String getAsText()
    {
        org.xml.sax.InputSource r2;
        java.lang.Object $r1;
        java.lang.String $r3;
        org.springframework.beans.propertyeditors.InputSourceEditor r0;

        r0 := @this: org.springframework.beans.propertyeditors.InputSourceEditor;

        $r1 = virtualinvoke r0.<org.springframework.beans.propertyeditors.InputSourceEditor: java.lang.Object getValue()>();

        r2 = (org.xml.sax.InputSource) $r1;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        goto label2;

     label1:
        $r3 = "";

     label2:
        return $r3;
    }
}
