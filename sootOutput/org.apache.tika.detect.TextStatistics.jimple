public class org.apache.tika.detect.TextStatistics extends java.lang.Object
{
    private final int[] counts;
    private int total;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        org.apache.tika.detect.TextStatistics r0;
        int[] $r1;

        r0 := @this: org.apache.tika.detect.TextStatistics;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (int)[256];

        r0.<org.apache.tika.detect.TextStatistics: int[] counts> = $r1;

        r0.<org.apache.tika.detect.TextStatistics: int total> = 0;

        return;
    }

    public void addData(byte[], int, int)
    {
        byte[] r1;
        short $s4, $s10;
        byte $b3;
        int[] $r2;
        int i0, i1, $i2, $i5, $i6, $i7, $i8, i9, $i11, $i12;
        org.apache.tika.detect.TextStatistics r0;

        r0 := @this: org.apache.tika.detect.TextStatistics;

        r1 := @parameter0: byte[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        i9 = 0;

     label1:
        if i9 >= i0 goto label2;

        $r2 = r0.<org.apache.tika.detect.TextStatistics: int[] counts>;

        $i2 = i1 + i9;

        $b3 = r1[$i2];

        $s10 = (short) $b3;

        $s4 = $s10 & 255;

        $i11 = (int) $s4;

        $i5 = $r2[$i11];

        $i6 = $i5 + 1;

        $i12 = (int) $s4;

        $r2[$i12] = $i6;

        $i7 = r0.<org.apache.tika.detect.TextStatistics: int total>;

        $i8 = $i7 + 1;

        r0.<org.apache.tika.detect.TextStatistics: int total> = $i8;

        i9 = i9 + 1;

        goto label1;

     label2:
        return;
    }

    public boolean isMostlyAscii()
    {
        org.apache.tika.detect.TextStatistics r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        boolean $z0;

        r0 := @this: org.apache.tika.detect.TextStatistics;

        $i0 = specialinvoke r0.<org.apache.tika.detect.TextStatistics: int count(int,int)>(0, 32);

        $i1 = specialinvoke r0.<org.apache.tika.detect.TextStatistics: int count(int,int)>(32, 128);

        $i2 = specialinvoke r0.<org.apache.tika.detect.TextStatistics: int countSafeControl()>();

        $i3 = r0.<org.apache.tika.detect.TextStatistics: int total>;

        if $i3 <= 0 goto label1;

        $i4 = $i0 - $i2;

        $i7 = $i4 * 100;

        $i5 = r0.<org.apache.tika.detect.TextStatistics: int total>;

        $i6 = $i5 * 2;

        if $i7 >= $i6 goto label1;

        $i8 = $i1 + $i2;

        $i11 = $i8 * 100;

        $i9 = r0.<org.apache.tika.detect.TextStatistics: int total>;

        $i10 = $i9 * 90;

        if $i11 <= $i10 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean looksLikeUTF8()
    {
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18;
        boolean $z0;
        org.apache.tika.detect.TextStatistics r0;

        r0 := @this: org.apache.tika.detect.TextStatistics;

        $i0 = specialinvoke r0.<org.apache.tika.detect.TextStatistics: int count(int,int)>(0, 32);

        i16 = specialinvoke r0.<org.apache.tika.detect.TextStatistics: int count(int,int)>(32, 128);

        $i1 = specialinvoke r0.<org.apache.tika.detect.TextStatistics: int countSafeControl()>();

        i17 = 0;

        $r1 = newarray (int)[3];

        $i2 = specialinvoke r0.<org.apache.tika.detect.TextStatistics: int count(int,int)>(192, 224);

        $r1[0] = $i2;

        $i3 = specialinvoke r0.<org.apache.tika.detect.TextStatistics: int count(int,int)>(224, 240);

        $r1[1] = $i3;

        $i4 = specialinvoke r0.<org.apache.tika.detect.TextStatistics: int count(int,int)>(240, 248);

        $r1[2] = $i4;

        i18 = 0;

     label1:
        $i5 = lengthof $r1;

        if i18 >= $i5 goto label2;

        $i12 = $r1[i18];

        i16 = i16 + $i12;

        $i14 = i18 + 1;

        $i13 = $r1[i18];

        $i15 = $i14 * $i13;

        i17 = i17 + $i15;

        i18 = i18 + 1;

        goto label1;

     label2:
        $i6 = specialinvoke r0.<org.apache.tika.detect.TextStatistics: int count(int,int)>(128, 192);

        if i16 <= 0 goto label3;

        if $i6 > i17 goto label3;

        $i7 = i17 - 3;

        if $i6 < $i7 goto label3;

        $i8 = specialinvoke r0.<org.apache.tika.detect.TextStatistics: int count(int,int)>(3968, 256);

        if $i8 != 0 goto label3;

        $i9 = $i0 - $i1;

        $i11 = $i9 * 100;

        $i10 = i16 * 2;

        if $i11 >= $i10 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public int count()
    {
        int $i0;
        org.apache.tika.detect.TextStatistics r0;

        r0 := @this: org.apache.tika.detect.TextStatistics;

        $i0 = r0.<org.apache.tika.detect.TextStatistics: int total>;

        return $i0;
    }

    public int count(int)
    {
        org.apache.tika.detect.TextStatistics r0;
        int[] $r1;
        int i0, $i1, $i2;

        r0 := @this: org.apache.tika.detect.TextStatistics;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.tika.detect.TextStatistics: int[] counts>;

        $i1 = i0 & 255;

        $i2 = $r1[$i1];

        return $i2;
    }

    public int countControl()
    {
        org.apache.tika.detect.TextStatistics r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.tika.detect.TextStatistics;

        $i0 = specialinvoke r0.<org.apache.tika.detect.TextStatistics: int count(int,int)>(0, 32);

        $i1 = specialinvoke r0.<org.apache.tika.detect.TextStatistics: int countSafeControl()>();

        $i2 = $i0 - $i1;

        return $i2;
    }

    public int countSafeAscii()
    {
        org.apache.tika.detect.TextStatistics r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.tika.detect.TextStatistics;

        $i0 = specialinvoke r0.<org.apache.tika.detect.TextStatistics: int count(int,int)>(32, 128);

        $i1 = specialinvoke r0.<org.apache.tika.detect.TextStatistics: int countSafeControl()>();

        $i2 = $i0 + $i1;

        return $i2;
    }

    public int countEightBit()
    {
        int $i0;
        org.apache.tika.detect.TextStatistics r0;

        r0 := @this: org.apache.tika.detect.TextStatistics;

        $i0 = specialinvoke r0.<org.apache.tika.detect.TextStatistics: int count(int,int)>(128, 256);

        return $i0;
    }

    private int count(int, int)
    {
        org.apache.tika.detect.TextStatistics r0;
        java.lang.AssertionError $r2;
        int[] $r1, $r3;
        int i0, i1, $i2, $i3, i4, i5;
        boolean $z0;

        r0 := @this: org.apache.tika.detect.TextStatistics;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = <org.apache.tika.detect.TextStatistics: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if 0 > i0 goto label1;

        $r3 = r0.<org.apache.tika.detect.TextStatistics: int[] counts>;

        $i3 = lengthof $r3;

        if i1 <= $i3 goto label2;

     label1:
        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label2:
        i4 = 0;

        i5 = i0;

     label3:
        if i5 >= i1 goto label4;

        $r1 = r0.<org.apache.tika.detect.TextStatistics: int[] counts>;

        $i2 = $r1[i5];

        i4 = i4 + $i2;

        i5 = i5 + 1;

        goto label3;

     label4:
        return i4;
    }

    private int countSafeControl()
    {
        org.apache.tika.detect.TextStatistics r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.apache.tika.detect.TextStatistics;

        $i0 = virtualinvoke r0.<org.apache.tika.detect.TextStatistics: int count(int)>(9);

        $i1 = virtualinvoke r0.<org.apache.tika.detect.TextStatistics: int count(int)>(10);

        $i2 = $i0 + $i1;

        $i3 = virtualinvoke r0.<org.apache.tika.detect.TextStatistics: int count(int)>(13);

        $i4 = $i2 + $i3;

        $i5 = virtualinvoke r0.<org.apache.tika.detect.TextStatistics: int count(int)>(12);

        $i6 = $i4 + $i5;

        $i7 = virtualinvoke r0.<org.apache.tika.detect.TextStatistics: int count(int)>(27);

        $i8 = $i6 + $i7;

        return $i8;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/tika/detect/TextStatistics;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.tika.detect.TextStatistics: boolean $assertionsDisabled> = $z1;

        return;
    }
}
