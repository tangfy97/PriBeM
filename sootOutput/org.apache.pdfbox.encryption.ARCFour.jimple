public class org.apache.pdfbox.encryption.ARCFour extends java.lang.Object
{
    private int[] salt;
    private int b;
    private int c;

    public void <init>()
    {
        org.apache.pdfbox.encryption.ARCFour r0;
        int[] $r1;

        r0 := @this: org.apache.pdfbox.encryption.ARCFour;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (int)[256];

        r0.<org.apache.pdfbox.encryption.ARCFour: int[] salt> = $r1;

        return;
    }

    public void setKey(byte[])
    {
        byte[] r1;
        org.apache.pdfbox.encryption.ARCFour r0;
        byte $b4;
        int[] $r3, $r4, $r5, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.pdfbox.encryption.ARCFour;

        r1 := @parameter0: byte[];

        r0.<org.apache.pdfbox.encryption.ARCFour: int b> = 0;

        r0.<org.apache.pdfbox.encryption.ARCFour: int c> = 0;

        $i0 = lengthof r1;

        if $i0 < 1 goto label1;

        $i1 = lengthof r1;

        if $i1 <= 32 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("number of bytes must be between 1 and 32");

        throw $r2;

     label2:
        i11 = 0;

     label3:
        $r3 = r0.<org.apache.pdfbox.encryption.ARCFour: int[] salt>;

        $i2 = lengthof $r3;

        if i11 >= $i2 goto label4;

        $r7 = r0.<org.apache.pdfbox.encryption.ARCFour: int[] salt>;

        $r7[i11] = i11;

        i11 = i11 + 1;

        goto label3;

     label4:
        i12 = 0;

        i13 = 0;

        i14 = 0;

     label5:
        $r4 = r0.<org.apache.pdfbox.encryption.ARCFour: int[] salt>;

        $i3 = lengthof $r4;

        if i14 >= $i3 goto label6;

        $b4 = r1[i12];

        $i5 = staticinvoke <org.apache.pdfbox.encryption.ARCFour: int fixByte(byte)>($b4);

        $r5 = r0.<org.apache.pdfbox.encryption.ARCFour: int[] salt>;

        $i6 = $r5[i14];

        $i7 = $i5 + $i6;

        $i8 = $i7 + i13;

        i13 = $i8 % 256;

        $r6 = r0.<org.apache.pdfbox.encryption.ARCFour: int[] salt>;

        staticinvoke <org.apache.pdfbox.encryption.ARCFour: void swap(int[],int,int)>($r6, i14, i13);

        $i10 = i12 + 1;

        $i9 = lengthof r1;

        i12 = $i10 % $i9;

        i14 = i14 + 1;

        goto label5;

     label6:
        return;
    }

    private static final int fixByte(byte)
    {
        byte b0;
        int $i1, $i2, $i3, $i4;

        b0 := @parameter0: byte;

        $i2 = (int) b0;

        if $i2 >= 0 goto label1;

        $i3 = (int) b0;

        $i1 = 256 + $i3;

        goto label2;

     label1:
        $i4 = (int) b0;

        $i1 = $i4;

     label2:
        return $i1;
    }

    private static final void swap(int[], int, int)
    {
        int[] r0;
        int i0, i1, i2, $i3;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        i1 = r0[i0];

        $i3 = r0[i2];

        r0[i0] = $i3;

        r0[i2] = i1;

        return;
    }

    public void write(byte, java.io.OutputStream) throws java.io.IOException
    {
        org.apache.pdfbox.encryption.ARCFour r0;
        byte b16, $b18, $b19;
        int[] $r1, $r2, $r3, $r4, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, $i17, $i20;
        java.io.OutputStream r5;

        r0 := @this: org.apache.pdfbox.encryption.ARCFour;

        b16 := @parameter0: byte;

        r5 := @parameter1: java.io.OutputStream;

        $i0 = r0.<org.apache.pdfbox.encryption.ARCFour: int b>;

        $i1 = $i0 + 1;

        $i2 = $i1 % 256;

        r0.<org.apache.pdfbox.encryption.ARCFour: int b> = $i2;

        $r1 = r0.<org.apache.pdfbox.encryption.ARCFour: int[] salt>;

        $i3 = r0.<org.apache.pdfbox.encryption.ARCFour: int b>;

        $i5 = $r1[$i3];

        $i4 = r0.<org.apache.pdfbox.encryption.ARCFour: int c>;

        $i6 = $i5 + $i4;

        $i7 = $i6 % 256;

        r0.<org.apache.pdfbox.encryption.ARCFour: int c> = $i7;

        $r2 = r0.<org.apache.pdfbox.encryption.ARCFour: int[] salt>;

        $i9 = r0.<org.apache.pdfbox.encryption.ARCFour: int b>;

        $i8 = r0.<org.apache.pdfbox.encryption.ARCFour: int c>;

        staticinvoke <org.apache.pdfbox.encryption.ARCFour: void swap(int[],int,int)>($r2, $i9, $i8);

        $r3 = r0.<org.apache.pdfbox.encryption.ARCFour: int[] salt>;

        $i10 = r0.<org.apache.pdfbox.encryption.ARCFour: int b>;

        $i13 = $r3[$i10];

        $r4 = r0.<org.apache.pdfbox.encryption.ARCFour: int[] salt>;

        $i11 = r0.<org.apache.pdfbox.encryption.ARCFour: int c>;

        $i12 = $r4[$i11];

        $i14 = $i13 + $i12;

        i15 = $i14 % 256;

        $r6 = r0.<org.apache.pdfbox.encryption.ARCFour: int[] salt>;

        $i17 = $r6[i15];

        $b18 = (byte) $i17;

        $b19 = b16 ^ $b18;

        $i20 = (int) $b19;

        virtualinvoke r5.<java.io.OutputStream: void write(int)>($i20);

        return;
    }

    public void write(byte[], java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r2;
        byte[] r0;
        byte $b1;
        int $i0, i2;
        org.apache.pdfbox.encryption.ARCFour r1;

        r1 := @this: org.apache.pdfbox.encryption.ARCFour;

        r0 := @parameter0: byte[];

        r2 := @parameter1: java.io.OutputStream;

        i2 = 0;

     label1:
        $i0 = lengthof r0;

        if i2 >= $i0 goto label2;

        $b1 = r0[i2];

        virtualinvoke r1.<org.apache.pdfbox.encryption.ARCFour: void write(byte,java.io.OutputStream)>($b1, r2);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void write(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r3;
        byte[] r0;
        int $i0, $i2;
        org.apache.pdfbox.encryption.ARCFour r2;
        java.io.InputStream r1;

        r2 := @this: org.apache.pdfbox.encryption.ARCFour;

        r1 := @parameter0: java.io.InputStream;

        r3 := @parameter1: java.io.OutputStream;

        r0 = newarray (byte)[1024];

     label1:
        $i0 = virtualinvoke r1.<java.io.InputStream: int read(byte[])>(r0);

        $i2 = (int) -1;

        if $i0 == $i2 goto label2;

        virtualinvoke r2.<org.apache.pdfbox.encryption.ARCFour: void write(byte[],int,int,java.io.OutputStream)>(r0, 0, $i0, r3);

        goto label1;

     label2:
        return;
    }

    public void write(byte[], int, int, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r2;
        byte[] r1;
        org.apache.pdfbox.encryption.ARCFour r0;
        byte $b3;
        int i0, i1, $i2, i4;

        r0 := @this: org.apache.pdfbox.encryption.ARCFour;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.io.OutputStream;

        i4 = i0;

     label1:
        $i2 = i0 + i1;

        if i4 >= $i2 goto label2;

        $b3 = r1[i4];

        virtualinvoke r0.<org.apache.pdfbox.encryption.ARCFour: void write(byte,java.io.OutputStream)>($b3, r2);

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }
}
