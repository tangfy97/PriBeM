public class org.apache.lucene.search.function.FieldScoreQuery$Type extends java.lang.Object
{
    public static final org.apache.lucene.search.function.FieldScoreQuery$Type BYTE;
    public static final org.apache.lucene.search.function.FieldScoreQuery$Type SHORT;
    public static final org.apache.lucene.search.function.FieldScoreQuery$Type INT;
    public static final org.apache.lucene.search.function.FieldScoreQuery$Type FLOAT;
    private java.lang.String typeName;

    private void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.apache.lucene.search.function.FieldScoreQuery$Type r0;

        r0 := @this: org.apache.lucene.search.function.FieldScoreQuery$Type;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.search.function.FieldScoreQuery$Type: java.lang.String typeName> = r1;

        return;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.search.function.FieldScoreQuery$Type r1;
        java.lang.StringBuilder $r0, $r4, $r5, $r7;
        java.lang.Class $r2;
        java.lang.String $r3, $r6, $r8;

        r1 := @this: org.apache.lucene.search.function.FieldScoreQuery$Type;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("::");

        $r6 = r1.<org.apache.lucene.search.function.FieldScoreQuery$Type: java.lang.String typeName>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    static void <clinit>()
    {
        org.apache.lucene.search.function.FieldScoreQuery$Type $r0, $r1, $r2, $r3;

        $r0 = new org.apache.lucene.search.function.FieldScoreQuery$Type;

        specialinvoke $r0.<org.apache.lucene.search.function.FieldScoreQuery$Type: void <init>(java.lang.String)>("byte");

        <org.apache.lucene.search.function.FieldScoreQuery$Type: org.apache.lucene.search.function.FieldScoreQuery$Type BYTE> = $r0;

        $r1 = new org.apache.lucene.search.function.FieldScoreQuery$Type;

        specialinvoke $r1.<org.apache.lucene.search.function.FieldScoreQuery$Type: void <init>(java.lang.String)>("short");

        <org.apache.lucene.search.function.FieldScoreQuery$Type: org.apache.lucene.search.function.FieldScoreQuery$Type SHORT> = $r1;

        $r2 = new org.apache.lucene.search.function.FieldScoreQuery$Type;

        specialinvoke $r2.<org.apache.lucene.search.function.FieldScoreQuery$Type: void <init>(java.lang.String)>("int");

        <org.apache.lucene.search.function.FieldScoreQuery$Type: org.apache.lucene.search.function.FieldScoreQuery$Type INT> = $r2;

        $r3 = new org.apache.lucene.search.function.FieldScoreQuery$Type;

        specialinvoke $r3.<org.apache.lucene.search.function.FieldScoreQuery$Type: void <init>(java.lang.String)>("float");

        <org.apache.lucene.search.function.FieldScoreQuery$Type: org.apache.lucene.search.function.FieldScoreQuery$Type FLOAT> = $r3;

        return;
    }
}
