public class org.apache.batik.transcoder.wmf.tosvg.WMFPainter extends org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter
{
    private static final int INPUT_BUFFER_SIZE;
    private static final java.lang.Integer INTEGER_0;
    private float scale;
    private float scaleX;
    private float scaleY;
    private float conv;
    private float xOffset;
    private float yOffset;
    private float vpX;
    private float vpY;
    private float vpW;
    private float vpH;
    private java.awt.Color frgdColor;
    private java.awt.Color bkgdColor;
    private boolean opaque;
    private transient boolean firstEffectivePaint;
    private static java.awt.BasicStroke solid;
    private static java.awt.BasicStroke textSolid;
    private transient java.awt.image.ImageObserver observer;
    private transient java.io.BufferedInputStream bufStream;

    public void <init>(org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore, float)
    {
        float f0;
        org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore r1;
        org.apache.batik.transcoder.wmf.tosvg.WMFPainter r0;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFPainter;

        r1 := @parameter0: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore;

        f0 := @parameter1: float;

        specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: void <init>(org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore,int,int,float)>(r1, 0, 0, f0);

        return;
    }

    public void <init>(org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore, int, int, float)
    {
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, f18, $f19, $f20, $f21, $f22, $f23, $f24, f25, $f26, $f27, $f28, $f29, $f30, $f31;
        org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore r2;
        org.apache.batik.transcoder.wmf.tosvg.TextureFactory $r3;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        org.apache.batik.transcoder.wmf.tosvg.WMFPainter$1 $r1;
        org.apache.batik.transcoder.wmf.tosvg.WMFPainter r0;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFPainter;

        r2 := @parameter0: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore;

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        f0 := @parameter3: float;

        specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: void <init>()>();

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: boolean opaque> = 0;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: boolean firstEffectivePaint> = 1;

        $r1 = new org.apache.batik.transcoder.wmf.tosvg.WMFPainter$1;

        specialinvoke $r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter$1: void <init>(org.apache.batik.transcoder.wmf.tosvg.WMFPainter)>(r0);

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.image.ImageObserver observer> = $r1;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.io.BufferedInputStream bufStream> = null;

        virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: void setRecordStore(org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore)>(r2);

        $r3 = staticinvoke <org.apache.batik.transcoder.wmf.tosvg.TextureFactory: org.apache.batik.transcoder.wmf.tosvg.TextureFactory getInstance()>();

        virtualinvoke $r3.<org.apache.batik.transcoder.wmf.tosvg.TextureFactory: void reset()>();

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float conv> = f0;

        $i1 = neg i0;

        $f1 = (float) $i1;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float xOffset> = $f1;

        $i3 = neg i2;

        $f2 = (float) $i3;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float yOffset> = $f2;

        $i4 = virtualinvoke r2.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int getWidthPixels()>();

        $f3 = (float) $i4;

        $i5 = virtualinvoke r2.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int getWidthUnits()>();

        $f4 = (float) $i5;

        $f5 = $f3 / $f4;

        $f6 = $f5 * f0;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scale> = $f6;

        $f7 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scale>;

        $i6 = virtualinvoke r2.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int getWidthPixels()>();

        $f8 = (float) $i6;

        $f9 = $f7 * $f8;

        $i7 = virtualinvoke r2.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int getVpW()>();

        $f10 = (float) $i7;

        $f11 = $f9 / $f10;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scale> = $f11;

        $i8 = virtualinvoke r2.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int getVpW()>();

        $f12 = (float) $i8;

        $i9 = virtualinvoke r2.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int getWidthPixels()>();

        $f13 = (float) $i9;

        $f14 = $f12 / $f13;

        $i10 = virtualinvoke r2.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int getWidthUnits()>();

        $f15 = (float) $i10;

        $f16 = $f14 * $f15;

        $i11 = virtualinvoke r2.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int getWidthPixels()>();

        $f17 = (float) $i11;

        f18 = $f16 / $f17;

        $i12 = virtualinvoke r2.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int getVpH()>();

        $f19 = (float) $i12;

        $i13 = virtualinvoke r2.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int getHeightPixels()>();

        $f20 = (float) $i13;

        $f21 = $f19 / $f20;

        $i14 = virtualinvoke r2.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int getHeightUnits()>();

        $f22 = (float) $i14;

        $f23 = $f21 * $f22;

        $i15 = virtualinvoke r2.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int getHeightPixels()>();

        $f24 = (float) $i15;

        f25 = $f23 / $f24;

        $f26 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float xOffset>;

        $f27 = $f26 * f18;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float xOffset> = $f27;

        $f28 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float yOffset>;

        $f29 = $f28 * f25;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float yOffset> = $f29;

        $f30 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scale>;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleX> = $f30;

        $f31 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scale>;

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleY> = $f31;

        return;
    }

    public void paint(java.awt.Graphics)
    {
        java.lang.Integer $r52, $r53, $r55, $r57, $r58, $r60, $r62, $r151, $r153, $r155, $r162, $r165, $r167, $r230, $r231, $r232;
        org.apache.batik.transcoder.wmf.tosvg.WMFPainter r1;
        java.awt.Paint $r139, $r141, r182, r197, r198;
        java.lang.Float $r157, $r159, $r161, $r227, $r228, $r229;
        java.awt.geom.Rectangle2D$Float $r214, $r234, $r235;
        java.awt.BasicStroke $r11, $r20, $r204;
        java.lang.String $r40, $r86, $r115, r185;
        java.awt.Graphics r9;
        byte[] $r138, r194, r196, r199, r200, r201, r202;
        byte $b94, $b95, $b104, $b105, $b112, $b113, $b114, $b168, $b176, $b177, $b204, $b205, $b206, $b215;
        java.awt.geom.Point2D$Double $r219, $r222;
        org.apache.batik.transcoder.wmf.tosvg.TextureFactory $r104, $r108;
        org.apache.batik.ext.awt.geom.Polygon2D $r210, $r211;
        java.awt.font.FontRenderContext $r43, $r89;
        org.apache.batik.transcoder.wmf.tosvg.MetaRecord$StringRecord $r110;
        java.awt.Graphics2D r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i106, $i107, $i108, $i109, $i110, $i111, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167, $i169, $i170, $i171, $i172, $i173, $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i185, $i186, $i187, $i188, $i189, $i190, $i191, $i192, $i193, $i194, $i195, $i196, $i197, $i198, $i199, $i200, $i201, $i202, $i203, $i207, $i208, $i209, i210, i211, i212, i213, i214, i216, $i217, i218, i219, i220, i221, i222, i223, i224, i225, i226, i227, i228, $i230, $i232, $i234, $i235, $i237, $i239, $i241, $i243, $i245, $i247, $i249, $i251, $i252, $i253, $i254, $i255;
        java.awt.Font $r47, $r93, $r112, r186, $r207;
        org.apache.batik.transcoder.wmf.tosvg.MetaRecord$ByteRecord $r25, $r34, $r38, $r66, $r84, $r128;
        java.lang.Object $r132, $r135, $r136, $r137, $r140, $r142, $r144, $r146, $r148, $r150, $r152, $r154, $r156, $r158, $r160;
        char $c174, $c175;
        java.awt.geom.Arc2D$Double $r225, $r226;
        java.awt.Color $r12, $r15, $r29, $r37, $r41, $r42, $r51, $r63, $r64, $r70, $r75, $r87, $r88, $r97, $r105, $r123, $r125, $r143, $r145, $r147, $r149, $r175, $r176, r181, r183, r184, $r205, $r206, $r217, $r218;
        java.awt.font.TextLayout $r221, $r224;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, z12, $z13, z14, z15;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, d28, d29, d30, d31, d32, d33, d34, d35, d36, d37, d38, d39, d40, d41, d42, d43, d44, d45, d46, d47, d48, d49, d50, d51, d52, d53;
        java.awt.geom.Line2D$Float $r212;
        java.text.AttributedCharacterIterator $r49, $r95;
        java.util.Stack $r203;
        java.awt.image.BufferedImage $r26, $r35, $r67;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, $f54, $f55, $f56, $f57, $f58, $f59, $f60, $f61, $f62, $f63, $f64, $f65, $f66, $f67, $f68, $f69, $f70, $f71, $f72, $f73, $f74, $f75, $f76, $f77, $f78, $f79, $f80, $f81, $f82, $f83, $f84, $f85, $f86, $f87, $f88, $f89, $f90, $f91, $f92, $f93, $f94, $f95, $f96, $f97, $f98, $f99, $f100, $f101, $f102, $f103, $f104, $f105, $f106, $f107, $f108, $f109, $f110, $f111, $f112, $f113, $f114, $f115, $f116, $f117, $f118, $f119, $f120, $f121, $f122, $f123, $f124, $f125, $f126, $f127, $f128, $f129, $f130, $f131, $f132, $f133, $f134, $f135, $f136, $f137, $f138, $f139, $f140, $f141, $f142, $f143, $f144, $f145, $f146, $f147, $f148, $f149, $f150, $f151, $f152, $f153, $f154, $f155, $f156, $f157, $f158, $f159, $f160, $f161, $f162, $f163, $f164, $f165, $f166, $f167, $f168, $f169, $f170, $f171, $f172, $f173, $f174, $f175, $f176, $f177, $f178, $f179, $f180, $f181, $f182, $f183, $f184, $f185, $f186, $f187, $f188, $f189, $f190, $f191, $f192, $f193, $f194, $f195, $f196, $f197, $f198, $f199, $f200, $f201, $f202, $f203, $f204, $f205, $f206, $f207, $f208, $f209, $f210, $f211, $f212, $f213, $f214, $f215, $f216, $f217, $f218, $f219, $f220, $f221, $f222, $f223, $f224, $f225, $f226, $f227, $f228, $f229, $f230, $f231, $f232, $f233, $f234, $f235, $f236, $f237, $f238, $f239, $f240, $f241, $f242, $f243, $f244, $f245, $f246, $f247, $f248, $f249, $f250, $f251, $f252, $f253, $f254, $f255, $f256, $f257, $f258, $f259, $f260, $f261, $f262, $f263, $f264, $f265, $f266, $f267, $f268, $f269, $f270, $f271, $f272, $f273, $f274, $f275, $f276, $f277, $f278, $f279, $f280, $f281, $f282, $f283, $f284, $f285, $f286, $f287, $f288, $f289, $f290, $f291, $f292, $f293, $f294, $f295, $f296, $f297, $f298, $f299, $f300, $f301, $f302, $f303, $f304, $f305, $f306, $f307, $f308, $f309, $f310, $f311, $f312, $f313, $f314, $f315, $f316, $f317, $f318, $f319, $f320, $f321, $f322, $f323, $f324, $f325, $f326, $f327, $f328, $f329, $f330, $f331, $f332, $f333, $f334, $f335, $f336, $f337, $f338, $f339, $f340, $f341, $f342, $f343, $f344, $f345, $f346, $f347, $f348, $f349, $f350, $f351, $f352, $f353, $f354, $f355, $f356, $f357, $f358, $f359, $f360, $f361, $f362, $f363, $f364, $f365, $f366, $f367, $f368, $f369, $f370, $f371, $f372, $f373, $f374, $f375, $f376, $f377, $f378, $f379, $f380, $f381, $f382, $f383, $f384, $f385, $f386, $f387, $f388, $f389, $f390, $f391, $f392, $f393, $f394, $f395, $f396, $f397, $f398, $f399, $f400, $f401, $f402, $f403, $f404, $f405, $f406, $f407, $f408, $f409, $f410, $f411, $f412, $f413, $f414, $f415, $f416, $f417, $f418, $f419, $f420, $f421, $f422, $f423, $f424, $f425, $f426, $f427, $f428, $f429, $f430, $f431, $f432, $f433, $f434, $f435, $f436, $f437, $f438, $f439, $f440, $f441, $f442, $f443, $f444, $f445, $f446, $f447, $f448, $f449, $f450, $f451, $f452, $f453, $f454, $f455, $f456, $f457, $f458, $f459, $f460, $f461, f462, f463, f464, f465, f466, f467, f468, f469, f470, f471, f472, f473, f474, f475, f476, f477, f478, f479, f480, f481, f482, f483, f484, f485, f486, f487, f488, f489, f490, f491, f492, f493, f494, f495, f496, f497, f498, f499, f500, f501, f502, f503, f504, f505, f506, f507, f508, f509, f510, f511, f512, f513, f514, f515;
        org.apache.batik.ext.awt.geom.Polyline2D $r213;
        java.awt.geom.GeneralPath $r220, $r223, $r233;
        org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r13, $r16, $r18, $r21, $r22, $r23, $r24, $r30, $r31, $r32, $r33, $r54, $r56, $r59, $r61, $r71, $r73, $r76, $r78, $r82, $r83, $r103, $r106, $r107, $r109, $r114, $r117, $r118, $r120, $r121, $r126, $r129, $r130, $r163, $r164, $r166, $r168;
        float[] r188, r189, r190, r191, r192, r193;
        org.apache.batik.transcoder.wmf.tosvg.MetaRecord $r17;
        int[] r187;
        java.awt.geom.Ellipse2D$Float $r216;
        org.apache.batik.transcoder.wmf.tosvg.GdiObject $r14, $r127, $r131;
        java.lang.Exception $r178, $r179, $r180;
        java.util.ArrayList $r209;
        java.awt.image.ImageObserver $r27, $r28, $r36, $r68, $r69;
        java.awt.geom.RoundRectangle2D$Float $r215;
        java.awt.Shape r195;
        org.apache.batik.transcoder.wmf.tosvg.WMFFont $r39, $r48, $r50, $r85, $r94, $r96, $r133, $r134, $r208;

        r1 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFPainter;

        r9 := @parameter0: java.awt.Graphics;

        f462 = 0.0F;

        f463 = 0.0F;

        f464 = 0.0F;

        $r203 = new java.util.Stack;

        specialinvoke $r203.<java.util.Stack: void <init>()>();

        $r2 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        $i0 = virtualinvoke $r2.<org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore: int getNumRecords()>();

        $r3 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        $i1 = virtualinvoke $r3.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int getNumObjects()>();

        $r4 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        $f0 = virtualinvoke $r4.<org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore: float getVpX()>();

        $f1 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scale>;

        $f2 = $f0 * $f1;

        r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpX> = $f2;

        $r5 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        $f3 = virtualinvoke $r5.<org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore: float getVpY()>();

        $f4 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scale>;

        $f5 = $f3 * $f4;

        r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpY> = $f5;

        $r6 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        $i2 = virtualinvoke $r6.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int getVpW()>();

        $f7 = (float) $i2;

        $f6 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scale>;

        $f8 = $f7 * $f6;

        r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpW> = $f8;

        $r7 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        $i3 = virtualinvoke $r7.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int getVpH()>();

        $f10 = (float) $i3;

        $f9 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scale>;

        $f11 = $f10 * $f9;

        r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpH> = $f11;

        $r8 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        $z0 = virtualinvoke $r8.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: boolean isReading()>();

        if $z0 != 0 goto label134;

        virtualinvoke r9.<java.awt.Graphics: void setPaintMode()>();

        r10 = (java.awt.Graphics2D) r9;

        $r11 = <org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.BasicStroke solid>;

        virtualinvoke r10.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r11);

        $i230 = (int) -1;

        i210 = $i230;

        $i232 = (int) -1;

        i211 = $i232;

        $i234 = (int) -1;

        i212 = $i234;

        r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.Color frgdColor> = null;

        $r12 = <java.awt.Color: java.awt.Color white>;

        r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.Color bkgdColor> = $r12;

        i213 = 0;

        goto label002;

     label001:
        $r13 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        $r14 = virtualinvoke $r13.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: org.apache.batik.transcoder.wmf.tosvg.GdiObject getObject(int)>(i213);

        virtualinvoke $r14.<org.apache.batik.transcoder.wmf.tosvg.GdiObject: void clear()>();

        i213 = i213 + 1;

     label002:
        if i213 < $i1 goto label001;

        $r15 = <java.awt.Color: java.awt.Color black>;

        virtualinvoke r10.<java.awt.Graphics: void setColor(java.awt.Color)>($r15);

        i214 = 0;

        goto label133;

     label003:
        $r16 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        $r17 = virtualinvoke $r16.<org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore: org.apache.batik.transcoder.wmf.tosvg.MetaRecord getRecord(int)>(i214);

        $i4 = $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int functionId>;

        lookupswitch($i4)
        {
            case 0: goto label005;
            case 30: goto label096;
            case 53: goto label032;
            case 55: goto label032;
            case 247: goto label031;
            case 248: goto label030;
            case 258: goto label105;
            case 259: goto label104;
            case 260: goto label108;
            case 261: goto label104;
            case 262: goto label007;
            case 263: goto label104;
            case 264: goto label104;
            case 295: goto label097;
            case 298: goto label132;
            case 299: goto label132;
            case 300: goto label104;
            case 301: goto label033;
            case 302: goto label072;
            case 313: goto label032;
            case 322: goto label131;
            case 496: goto label049;
            case 505: goto label030;
            case 513: goto label074;
            case 521: goto label073;
            case 522: goto label104;
            case 523: goto label004;
            case 524: goto label005;
            case 525: goto label006;
            case 526: goto label006;
            case 527: goto label006;
            case 529: goto label006;
            case 531: goto label065;
            case 532: goto label064;
            case 544: goto label104;
            case 552: goto label132;
            case 561: goto label132;
            case 564: goto label032;
            case 762: goto label008;
            case 763: goto label019;
            case 764: goto label011;
            case 765: goto label030;
            case 804: goto label061;
            case 805: goto label066;
            case 1040: goto label006;
            case 1042: goto label006;
            case 1045: goto label104;
            case 1046: goto label104;
            case 1048: goto label071;
            case 1049: goto label104;
            case 1051: goto label069;
            case 1055: goto label132;
            case 1065: goto label132;
            case 1078: goto label032;
            case 1313: goto label082;
            case 1336: goto label053;
            case 1564: goto label070;
            case 1565: goto label114;
            case 1574: goto label132;
            case 1583: goto label082;
            case 1790: goto label030;
            case 1791: goto label030;
            case 2071: goto label088;
            case 2074: goto label088;
            case 2096: goto label093;
            case 2338: goto label132;
            case 2368: goto label126;
            case 2610: goto label075;
            case 2851: goto label132;
            case 2881: goto label121;
            case 3379: goto label132;
            case 3907: goto label123;
            case 4096: goto label098;
            default: goto label132;
        };

     label004:
        $r120 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        $i187 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(0);

        $f446 = (float) $i187;

        $f447 = neg $f446;

        r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpX> = $f447;

        virtualinvoke $r120.<org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore: void setVpX(float)>($f447);

        $r121 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        $i188 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(1);

        $f448 = (float) $i188;

        $f449 = neg $f448;

        r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpY> = $f449;

        virtualinvoke $r121.<org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore: void setVpY(float)>($f449);

        $f451 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpX>;

        $f450 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scale>;

        $f452 = $f451 * $f450;

        r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpX> = $f452;

        $f454 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpY>;

        $f453 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scale>;

        $f455 = $f454 * $f453;

        r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpY> = $f455;

        goto label132;

     label005:
        $i208 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(0);

        $f456 = (float) $i208;

        r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpW> = $f456;

        $i209 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(1);

        $f457 = (float) $i209;

        r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpH> = $f457;

        $f458 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scale>;

        r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleX> = $f458;

        $f459 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scale>;

        r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleY> = $f459;

        $r204 = new java.awt.BasicStroke;

        $f460 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleX>;

        $f461 = $f460 * 2.0F;

        specialinvoke $r204.<java.awt.BasicStroke: void <init>(float,int,int)>($f461, 0, 1);

        <org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.BasicStroke solid> = $r204;

        goto label132;

     label006:
        goto label132;

     label007:
        goto label132;

     label008:
        $i178 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(0);

        if $i178 != 5 goto label009;

        r181 = <java.awt.Color: java.awt.Color white>;

        $r118 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        virtualinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: int addObjectAt(org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore,int,java.lang.Object,int)>($r118, 4, r181, 0);

        goto label010;

     label009:
        $i179 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(4);

        f462 = (float) $i179;

        $f421 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleX>;

        specialinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: void setStroke(java.awt.Graphics2D,int,float,float)>(r10, $i178, f462, $f421);

        $r205 = new java.awt.Color;

        $i180 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(1);

        $i181 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(2);

        $i182 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(3);

        specialinvoke $r205.<java.awt.Color: void <init>(int,int,int)>($i180, $i181, $i182);

        $r117 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        virtualinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: int addObjectAt(org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore,int,java.lang.Object,int)>($r117, 1, $r205, 0);

     label010:
        goto label132;

     label011:
        $i158 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(0);

        $r206 = new java.awt.Color;

        $i159 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(1);

        $i160 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(2);

        $i161 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(3);

        specialinvoke $r206.<java.awt.Color: void <init>(int,int,int)>($i159, $i160, $i161);

        if $i158 != 0 goto label012;

        $r109 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        virtualinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: int addObjectAt(org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore,int,java.lang.Object,int)>($r109, 2, $r206, 0);

        goto label018;

     label012:
        if $i158 != 2 goto label017;

        $i162 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(4);

        $z5 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: boolean opaque>;

        if $z5 != 0 goto label013;

        $r108 = staticinvoke <org.apache.batik.transcoder.wmf.tosvg.TextureFactory: org.apache.batik.transcoder.wmf.tosvg.TextureFactory getInstance()>();

        r182 = virtualinvoke $r108.<org.apache.batik.transcoder.wmf.tosvg.TextureFactory: java.awt.Paint getTexture(int,java.awt.Color)>($i162, $r206);

        goto label014;

     label013:
        $r104 = staticinvoke <org.apache.batik.transcoder.wmf.tosvg.TextureFactory: org.apache.batik.transcoder.wmf.tosvg.TextureFactory getInstance()>();

        $r105 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.Color bkgdColor>;

        r182 = virtualinvoke $r104.<org.apache.batik.transcoder.wmf.tosvg.TextureFactory: java.awt.Paint getTexture(int,java.awt.Color,java.awt.Color)>($i162, $r206, $r105);

     label014:
        if r182 == null goto label015;

        $r107 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        virtualinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: int addObjectAt(org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore,int,java.lang.Object,int)>($r107, 2, r182, 0);

        goto label016;

     label015:
        r183 = <java.awt.Color: java.awt.Color black>;

        $r106 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        virtualinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: int addObjectAt(org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore,int,java.lang.Object,int)>($r106, 5, r183, 0);

     label016:
        goto label018;

     label017:
        r184 = <java.awt.Color: java.awt.Color black>;

        $r103 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        virtualinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: int addObjectAt(org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore,int,java.lang.Object,int)>($r103, 5, r184, 0);

     label018:
        goto label132;

     label019:
        $f418 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleY>;

        $i163 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(0);

        $f419 = (float) $i163;

        $f420 = $f418 * $f419;

        $i164 = (int) $f420;

        f465 = (float) $i164;

        $i165 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(3);

        $i166 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(1);

        $i167 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(2);

        if $i166 <= 0 goto label020;

        $b215 = 2;

        goto label021;

     label020:
        $b215 = 0;

     label021:
        $b176 = $b215;

        if $i167 <= 400 goto label022;

        $z11 = 1;

        goto label023;

     label022:
        $z11 = 0;

     label023:
        $b177 = $b176 | $z11;

        $r110 = (org.apache.batik.transcoder.wmf.tosvg.MetaRecord$StringRecord) $r17;

        $r115 = $r110.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord$StringRecord: java.lang.String text>;

        i216 = 0;

        goto label025;

     label024:
        i216 = i216 + 1;

     label025:
        $i217 = virtualinvoke $r115.<java.lang.String: int length()>();

        if i216 >= $i217 goto label026;

        $c174 = virtualinvoke $r115.<java.lang.String: char charAt(int)>(i216);

        $z6 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>($c174);

        if $z6 != 0 goto label024;

        $c175 = virtualinvoke $r115.<java.lang.String: char charAt(int)>(i216);

        $z7 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c175);

        if $z7 != 0 goto label024;

     label026:
        if i216 <= 0 goto label027;

        r185 = virtualinvoke $r115.<java.lang.String: java.lang.String substring(int,int)>(0, i216);

        goto label028;

     label027:
        r185 = "System";

     label028:
        $b168 = f465 cmpg 0.0F;

        $i235 = (int) $b168;

        if $i235 >= 0 goto label029;

        f465 = neg f465;

     label029:
        $r207 = new java.awt.Font;

        $i169 = (int) f465;

        specialinvoke $r207.<java.awt.Font: void <init>(java.lang.String,int,int)>(r185, $b177, $i169);

        $r112 = virtualinvoke $r207.<java.awt.Font: java.awt.Font deriveFont(float)>(f465);

        $i170 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(4);

        $i171 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(5);

        $i172 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(6);

        $i173 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(7);

        $r208 = new org.apache.batik.transcoder.wmf.tosvg.WMFFont;

        specialinvoke $r208.<org.apache.batik.transcoder.wmf.tosvg.WMFFont: void <init>(java.awt.Font,int,int,int,int,int,int,int)>($r112, $i165, $i170, $i171, $i166, $i167, $i172, $i173);

        $r114 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        virtualinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: int addObjectAt(org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore,int,java.lang.Object,int)>($r114, 3, $r208, 0);

        goto label132;

     label030:
        $r166 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        $r165 = <org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.lang.Integer INTEGER_0>;

        virtualinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: int addObjectAt(org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore,int,java.lang.Object,int)>($r166, 6, $r165, 0);

        goto label132;

     label031:
        $r168 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        $r167 = <org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.lang.Integer INTEGER_0>;

        virtualinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: int addObjectAt(org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore,int,java.lang.Object,int)>($r168, 8, $r167, 0);

        goto label132;

     label032:
        goto label132;

     label033:
        $i200 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(0);

        $i201 = $i200 & -2147483648;

        if $i201 == 0 goto label034;

        goto label132;

     label034:
        if $i200 < $i1 goto label038;

        i218 = $i200 - $i1;

        tableswitch(i218)
        {
            case 0: goto label037;
            case 1: goto label037;
            case 2: goto label037;
            case 3: goto label037;
            case 4: goto label037;
            case 5: goto label035;
            case 6: goto label037;
            case 7: goto label037;
            case 8: goto label036;
            case 9: goto label037;
            case 10: goto label037;
            case 11: goto label037;
            case 12: goto label037;
            case 13: goto label037;
            case 14: goto label037;
            case 15: goto label037;
            case 16: goto label037;
            default: goto label037;
        };

     label035:
        $i237 = (int) -1;

        i210 = $i237;

        goto label037;

     label036:
        $i239 = (int) -1;

        i211 = $i239;

        goto label037;

     label037:
        goto label132;

     label038:
        $r130 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        $r131 = virtualinvoke $r130.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: org.apache.batik.transcoder.wmf.tosvg.GdiObject getObject(int)>($i200);

        $z8 = $r131.<org.apache.batik.transcoder.wmf.tosvg.GdiObject: boolean used>;

        if $z8 != 0 goto label039;

        goto label132;

     label039:
        $i202 = $r131.<org.apache.batik.transcoder.wmf.tosvg.GdiObject: int type>;

        tableswitch($i202)
        {
            case 1: goto label040;
            case 2: goto label041;
            case 3: goto label045;
            case 4: goto label046;
            case 5: goto label047;
            default: goto label048;
        };

     label040:
        $r144 = $r131.<org.apache.batik.transcoder.wmf.tosvg.GdiObject: java.lang.Object obj>;

        $r145 = (java.awt.Color) $r144;

        virtualinvoke r10.<java.awt.Graphics: void setColor(java.awt.Color)>($r145);

        i211 = $i200;

        goto label048;

     label041:
        $r135 = $r131.<org.apache.batik.transcoder.wmf.tosvg.GdiObject: java.lang.Object obj>;

        $z9 = $r135 instanceof java.awt.Color;

        if $z9 == 0 goto label042;

        $r142 = $r131.<org.apache.batik.transcoder.wmf.tosvg.GdiObject: java.lang.Object obj>;

        $r143 = (java.awt.Color) $r142;

        virtualinvoke r10.<java.awt.Graphics: void setColor(java.awt.Color)>($r143);

        goto label044;

     label042:
        $r136 = $r131.<org.apache.batik.transcoder.wmf.tosvg.GdiObject: java.lang.Object obj>;

        $z10 = $r136 instanceof java.awt.Paint;

        if $z10 == 0 goto label043;

        $r140 = $r131.<org.apache.batik.transcoder.wmf.tosvg.GdiObject: java.lang.Object obj>;

        $r141 = (java.awt.Paint) $r140;

        virtualinvoke r10.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r141);

        goto label044;

     label043:
        $r137 = $r131.<org.apache.batik.transcoder.wmf.tosvg.GdiObject: java.lang.Object obj>;

        $r138 = (byte[]) $r137;

        $r139 = specialinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.Paint getPaint(byte[])>($r138);

        virtualinvoke r10.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r139);

     label044:
        i210 = $i200;

        goto label048;

     label045:
        $r132 = $r131.<org.apache.batik.transcoder.wmf.tosvg.GdiObject: java.lang.Object obj>;

        $r133 = (org.apache.batik.transcoder.wmf.tosvg.WMFFont) $r132;

        r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFFont wmfFont> = $r133;

        $r134 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFFont wmfFont>;

        r186 = $r134.<org.apache.batik.transcoder.wmf.tosvg.WMFFont: java.awt.Font font>;

        virtualinvoke r10.<java.awt.Graphics: void setFont(java.awt.Font)>(r186);

        i212 = $i200;

        goto label048;

     label046:
        $i241 = (int) -1;

        i211 = $i241;

        goto label048;

     label047:
        $i243 = (int) -1;

        i210 = $i243;

     label048:
        goto label132;

     label049:
        $i195 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(0);

        $r126 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        $r127 = virtualinvoke $r126.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: org.apache.batik.transcoder.wmf.tosvg.GdiObject getObject(int)>($i195);

        if $i195 != i210 goto label050;

        $i245 = (int) -1;

        i210 = $i245;

        goto label052;

     label050:
        if $i195 != i211 goto label051;

        $i247 = (int) -1;

        i211 = $i247;

        goto label052;

     label051:
        if $i195 != i212 goto label052;

        $i249 = (int) -1;

        i212 = $i249;

     label052:
        virtualinvoke $r127.<org.apache.batik.transcoder.wmf.tosvg.GdiObject: void clear()>();

        goto label132;

     label053:
        $i121 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(0);

        r187 = newarray (int)[$i121];

        i219 = 0;

        goto label055;

     label054:
        $i122 = i219 + 1;

        $i123 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>($i122);

        r187[i219] = $i123;

        i219 = i219 + 1;

     label055:
        if i219 < $i121 goto label054;

        i220 = $i121 + 1;

        $r209 = new java.util.ArrayList;

        specialinvoke $r209.<java.util.ArrayList: void <init>(int)>($i121);

        i221 = 0;

        goto label059;

     label056:
        i222 = r187[i221];

        r188 = newarray (float)[i222];

        r189 = newarray (float)[i222];

        i223 = 0;

        goto label058;

     label057:
        $f312 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleX>;

        $f311 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpX>;

        $f310 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float xOffset>;

        $f313 = $f311 + $f310;

        $i124 = i223 * 2;

        $i125 = i220 + $i124;

        $i126 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>($i125);

        $f314 = (float) $i126;

        $f315 = $f313 + $f314;

        $f316 = $f312 * $f315;

        r188[i223] = $f316;

        $f319 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleY>;

        $f318 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpY>;

        $f317 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float yOffset>;

        $f320 = $f318 + $f317;

        $i127 = i223 * 2;

        $i128 = i220 + $i127;

        $i129 = $i128 + 1;

        $i130 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>($i129);

        $f321 = (float) $i130;

        $f322 = $f320 + $f321;

        $f323 = $f319 * $f322;

        r189[i223] = $f323;

        i223 = i223 + 1;

     label058:
        if i223 < i222 goto label057;

        $i131 = i222 * 2;

        i220 = i220 + $i131;

        $r210 = new org.apache.batik.ext.awt.geom.Polygon2D;

        specialinvoke $r210.<org.apache.batik.ext.awt.geom.Polygon2D: void <init>(float[],float[],int)>(r188, r189, i222);

        interfaceinvoke $r209.<java.util.List: boolean add(java.lang.Object)>($r210);

        i221 = i221 + 1;

     label059:
        if i221 < $i121 goto label056;

        if i210 < 0 goto label060;

        $r83 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        specialinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: void setBrushPaint(org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore,java.awt.Graphics2D,int)>($r83, r10, i210);

        specialinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: void fillPolyPolygon(java.awt.Graphics2D,java.util.List)>(r10, $r209);

        r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: boolean firstEffectivePaint> = 0;

     label060:
        if i211 < 0 goto label132;

        $r82 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        specialinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: void setPenColor(org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore,java.awt.Graphics2D,int)>($r82, r10, i211);

        specialinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: void drawPolyPolygon(java.awt.Graphics2D,java.util.List)>(r10, $r209);

        r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: boolean firstEffectivePaint> = 0;

        goto label132;

     label061:
        $i151 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(0);

        r190 = newarray (float)[$i151];

        r191 = newarray (float)[$i151];

        i224 = 0;

        goto label063;

     label062:
        $f406 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleX>;

        $f405 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpX>;

        $f404 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float xOffset>;

        $f407 = $f405 + $f404;

        $i152 = i224 * 2;

        $i153 = $i152 + 1;

        $i154 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>($i153);

        $f408 = (float) $i154;

        $f409 = $f407 + $f408;

        $f410 = $f406 * $f409;

        r190[i224] = $f410;

        $f413 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleY>;

        $f412 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpY>;

        $f411 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float yOffset>;

        $f414 = $f412 + $f411;

        $i155 = i224 * 2;

        $i156 = $i155 + 2;

        $i157 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>($i156);

        $f415 = (float) $i157;

        $f416 = $f414 + $f415;

        $f417 = $f413 * $f416;

        r191[i224] = $f417;

        i224 = i224 + 1;

     label063:
        if i224 < $i151 goto label062;

        $r211 = new org.apache.batik.ext.awt.geom.Polygon2D;

        specialinvoke $r211.<org.apache.batik.ext.awt.geom.Polygon2D: void <init>(float[],float[],int)>(r190, r191, $i151);

        specialinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: void paint(int,int,java.awt.Shape,java.awt.Graphics2D)>(i210, i211, $r211, r10);

        goto label132;

     label064:
        $f424 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleX>;

        $f423 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpX>;

        $f422 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float xOffset>;

        $f425 = $f423 + $f422;

        $i183 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(0);

        $f426 = (float) $i183;

        $f427 = $f425 + $f426;

        f463 = $f424 * $f427;

        $f430 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleY>;

        $f429 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpY>;

        $f428 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float yOffset>;

        $f431 = $f429 + $f428;

        $i184 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(1);

        $f432 = (float) $i184;

        $f433 = $f431 + $f432;

        f464 = $f430 * $f433;

        goto label132;

     label065:
        $f436 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleX>;

        $f435 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpX>;

        $f434 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float xOffset>;

        $f437 = $f435 + $f434;

        $i185 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(0);

        $f438 = (float) $i185;

        $f439 = $f437 + $f438;

        f466 = $f436 * $f439;

        $f442 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleY>;

        $f441 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpY>;

        $f440 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float yOffset>;

        $f443 = $f441 + $f440;

        $i186 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(1);

        $f444 = (float) $i186;

        $f445 = $f443 + $f444;

        f467 = $f442 * $f445;

        $r212 = new java.awt.geom.Line2D$Float;

        specialinvoke $r212.<java.awt.geom.Line2D$Float: void <init>(float,float,float,float)>(f463, f464, f466, f467);

        specialinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: void paintWithPen(int,java.awt.Shape,java.awt.Graphics2D)>(i211, $r212, r10);

        f463 = f466;

        f464 = f467;

        goto label132;

     label066:
        $i144 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(0);

        r192 = newarray (float)[$i144];

        r193 = newarray (float)[$i144];

        i225 = 0;

        goto label068;

     label067:
        $f392 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleX>;

        $f391 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpX>;

        $f390 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float xOffset>;

        $f393 = $f391 + $f390;

        $i145 = i225 * 2;

        $i146 = $i145 + 1;

        $i147 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>($i146);

        $f394 = (float) $i147;

        $f395 = $f393 + $f394;

        $f396 = $f392 * $f395;

        r192[i225] = $f396;

        $f399 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleY>;

        $f398 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpY>;

        $f397 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float yOffset>;

        $f400 = $f398 + $f397;

        $i148 = i225 * 2;

        $i149 = $i148 + 2;

        $i150 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>($i149);

        $f401 = (float) $i150;

        $f402 = $f400 + $f401;

        $f403 = $f399 * $f402;

        r193[i225] = $f403;

        i225 = i225 + 1;

     label068:
        if i225 < $i144 goto label067;

        $r213 = new org.apache.batik.ext.awt.geom.Polyline2D;

        specialinvoke $r213.<org.apache.batik.ext.awt.geom.Polyline2D: void <init>(float[],float[],int)>(r192, r193, $i144);

        specialinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: void paintWithPen(int,java.awt.Shape,java.awt.Graphics2D)>(i211, $r213, r10);

        goto label132;

     label069:
        $f340 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleX>;

        $f339 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpX>;

        $f338 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float xOffset>;

        $f341 = $f339 + $f338;

        $i136 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(0);

        $f342 = (float) $i136;

        $f343 = $f341 + $f342;

        f468 = $f340 * $f343;

        $f346 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleX>;

        $f345 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpX>;

        $f344 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float xOffset>;

        $f347 = $f345 + $f344;

        $i137 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(2);

        $f348 = (float) $i137;

        $f349 = $f347 + $f348;

        f469 = $f346 * $f349;

        $f352 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleY>;

        $f351 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpY>;

        $f350 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float yOffset>;

        $f353 = $f351 + $f350;

        $i138 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(1);

        $f354 = (float) $i138;

        $f355 = $f353 + $f354;

        f470 = $f352 * $f355;

        $f358 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleY>;

        $f357 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpY>;

        $f356 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float yOffset>;

        $f359 = $f357 + $f356;

        $i139 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(3);

        $f360 = (float) $i139;

        $f361 = $f359 + $f360;

        f471 = $f358 * $f361;

        $r214 = new java.awt.geom.Rectangle2D$Float;

        $f363 = f469 - f468;

        $f362 = f471 - f470;

        specialinvoke $r214.<java.awt.geom.Rectangle2D$Float: void <init>(float,float,float,float)>(f468, f470, $f363, $f362);

        specialinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: void paint(int,int,java.awt.Shape,java.awt.Graphics2D)>(i210, i211, $r214, r10);

        goto label132;

     label070:
        $f282 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleX>;

        $f281 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpX>;

        $f280 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float xOffset>;

        $f283 = $f281 + $f280;

        $i115 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(0);

        $f284 = (float) $i115;

        $f285 = $f283 + $f284;

        f472 = $f282 * $f285;

        $f288 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleX>;

        $f287 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpX>;

        $f286 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float xOffset>;

        $f289 = $f287 + $f286;

        $i116 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(2);

        $f290 = (float) $i116;

        $f291 = $f289 + $f290;

        f473 = $f288 * $f291;

        $f292 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleX>;

        $i117 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(4);

        $f293 = (float) $i117;

        f474 = $f292 * $f293;

        $f296 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleY>;

        $f295 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpY>;

        $f294 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float yOffset>;

        $f297 = $f295 + $f294;

        $i118 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(1);

        $f298 = (float) $i118;

        $f299 = $f297 + $f298;

        f475 = $f296 * $f299;

        $f302 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleY>;

        $f301 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpY>;

        $f300 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float yOffset>;

        $f303 = $f301 + $f300;

        $i119 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(3);

        $f304 = (float) $i119;

        $f305 = $f303 + $f304;

        f476 = $f302 * $f305;

        $f306 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleY>;

        $i120 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(5);

        $f307 = (float) $i120;

        f477 = $f306 * $f307;

        $r215 = new java.awt.geom.RoundRectangle2D$Float;

        $f309 = f473 - f472;

        $f308 = f476 - f475;

        specialinvoke $r215.<java.awt.geom.RoundRectangle2D$Float: void <init>(float,float,float,float,float,float)>(f472, f475, $f309, $f308, f474, f477);

        specialinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: void paint(int,int,java.awt.Shape,java.awt.Graphics2D)>(i210, i211, $r215, r10);

        goto label132;

     label071:
        $f366 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleX>;

        $f365 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpX>;

        $f364 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float xOffset>;

        $f367 = $f365 + $f364;

        $i140 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(0);

        $f368 = (float) $i140;

        $f369 = $f367 + $f368;

        f478 = $f366 * $f369;

        $f372 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleX>;

        $f371 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpX>;

        $f370 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float xOffset>;

        $f373 = $f371 + $f370;

        $i141 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(2);

        $f374 = (float) $i141;

        $f375 = $f373 + $f374;

        f479 = $f372 * $f375;

        $f378 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleY>;

        $f377 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpY>;

        $f376 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float yOffset>;

        $f379 = $f377 + $f376;

        $i142 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(1);

        $f380 = (float) $i142;

        $f381 = $f379 + $f380;

        f480 = $f378 * $f381;

        $f384 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleY>;

        $f383 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpY>;

        $f382 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float yOffset>;

        $f385 = $f383 + $f382;

        $i143 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(3);

        $f386 = (float) $i143;

        $f387 = $f385 + $f386;

        f481 = $f384 * $f387;

        $r216 = new java.awt.geom.Ellipse2D$Float;

        $f389 = f479 - f478;

        $f388 = f481 - f480;

        specialinvoke $r216.<java.awt.geom.Ellipse2D$Float: void <init>(float,float,float,float)>(f478, f480, $f389, $f388);

        specialinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: void paint(int,int,java.awt.Shape,java.awt.Graphics2D)>(i210, i211, $r216, r10);

        goto label132;

     label072:
        $i196 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(0);

        $i197 = staticinvoke <org.apache.batik.transcoder.wmf.tosvg.WMFUtilities: int getHorizontalAlignment(int)>($i196);

        r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: int currentHorizAlign> = $i197;

        $i198 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(0);

        $i199 = staticinvoke <org.apache.batik.transcoder.wmf.tosvg.WMFUtilities: int getVerticalAlignment(int)>($i198);

        r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: int currentVertAlign> = $i199;

        goto label132;

     label073:
        $r217 = new java.awt.Color;

        $i189 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(0);

        $i190 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(1);

        $i191 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(2);

        specialinvoke $r217.<java.awt.Color: void <init>(int,int,int)>($i189, $i190, $i191);

        r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.Color frgdColor> = $r217;

        $r123 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.Color frgdColor>;

        virtualinvoke r10.<java.awt.Graphics: void setColor(java.awt.Color)>($r123);

        goto label132;

     label074:
        $r218 = new java.awt.Color;

        $i192 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(0);

        $i193 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(1);

        $i194 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(2);

        specialinvoke $r218.<java.awt.Color: void <init>(int,int,int)>($i192, $i193, $i194);

        r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.Color bkgdColor> = $r218;

        $r125 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.Color bkgdColor>;

        virtualinvoke r10.<java.awt.Graphics: void setColor(java.awt.Color)>($r125);

        goto label132;

     label075:
        $r38 = (org.apache.batik.transcoder.wmf.tosvg.MetaRecord$ByteRecord) $r17;

        r194 = $r38.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord$ByteRecord: byte[] bstr>;

        $r39 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFFont wmfFont>;

        $r40 = staticinvoke <org.apache.batik.transcoder.wmf.tosvg.WMFUtilities: java.lang.String decodeString(org.apache.batik.transcoder.wmf.tosvg.WMFFont,byte[])>($r39, r194);

        $f112 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleX>;

        $f111 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpX>;

        $f110 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float xOffset>;

        $f113 = $f111 + $f110;

        $i55 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(0);

        $f114 = (float) $i55;

        $f115 = $f113 + $f114;

        f482 = $f112 * $f115;

        $f118 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleY>;

        $f117 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpY>;

        $f116 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float yOffset>;

        $f119 = $f117 + $f116;

        $i56 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(1);

        $f120 = (float) $i56;

        $f121 = $f119 + $f120;

        f483 = $f118 * $f121;

        $r41 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.Color frgdColor>;

        if $r41 == null goto label076;

        $r51 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.Color frgdColor>;

        virtualinvoke r10.<java.awt.Graphics: void setColor(java.awt.Color)>($r51);

        goto label077;

     label076:
        $r42 = <java.awt.Color: java.awt.Color black>;

        virtualinvoke r10.<java.awt.Graphics: void setColor(java.awt.Color)>($r42);

     label077:
        $r43 = virtualinvoke r10.<java.awt.Graphics2D: java.awt.font.FontRenderContext getFontRenderContext()>();

        $r219 = new java.awt.geom.Point2D$Double;

        specialinvoke $r219.<java.awt.geom.Point2D$Double: void <init>(double,double)>(0.0, 0.0);

        $r220 = new java.awt.geom.GeneralPath;

        specialinvoke $r220.<java.awt.geom.GeneralPath: void <init>(int)>(1);

        $r221 = new java.awt.font.TextLayout;

        $r47 = virtualinvoke r10.<java.awt.Graphics: java.awt.Font getFont()>();

        specialinvoke $r221.<java.awt.font.TextLayout: void <init>(java.lang.String,java.awt.Font,java.awt.font.FontRenderContext)>($r40, $r47, $r43);

        $i57 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(2);

        z12 = 0;

        r195 = null;

        $i58 = $i57 & 4;

        if $i58 == 0 goto label078;

        z12 = 1;

        $i62 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(3);

        $i63 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(4);

        $i64 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(5);

        $i65 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(6);

        r195 = virtualinvoke r10.<java.awt.Graphics: java.awt.Shape getClip()>();

        virtualinvoke r10.<java.awt.Graphics: void setClip(int,int,int,int)>($i62, $i63, $i64, $i65);

     label078:
        r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: boolean firstEffectivePaint> = 0;

        $i59 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: int currentVertAlign>;

        $f122 = specialinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float getVerticalAlignmentValue(java.awt.font.TextLayout,int)>($r221, $i59);

        $f123 = f483 + $f122;

        $r48 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFFont wmfFont>;

        $i60 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: int currentHorizAlign>;

        $r49 = virtualinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: java.text.AttributedCharacterIterator getCharacterIterator(java.awt.Graphics2D,java.lang.String,org.apache.batik.transcoder.wmf.tosvg.WMFFont,int)>(r10, $r40, $r48, $i60);

        $r50 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFFont wmfFont>;

        $i61 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: int currentHorizAlign>;

        specialinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: void drawString(int,java.awt.Graphics2D,java.text.AttributedCharacterIterator,float,float,java.awt.font.TextLayout,org.apache.batik.transcoder.wmf.tosvg.WMFFont,int)>($i57, r10, $r49, f482, $f123, $r221, $r50, $i61);

        if z12 == 0 goto label079;

        virtualinvoke r10.<java.awt.Graphics: void setClip(java.awt.Shape)>(r195);

     label079:
        goto label081;

     label080:
        $r180 := @caughtexception;

     label081:
        goto label132;

     label082:
        $r84 = (org.apache.batik.transcoder.wmf.tosvg.MetaRecord$ByteRecord) $r17;

        r196 = $r84.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord$ByteRecord: byte[] bstr>;

        $r85 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFFont wmfFont>;

        $r86 = staticinvoke <org.apache.batik.transcoder.wmf.tosvg.WMFUtilities: java.lang.String decodeString(org.apache.batik.transcoder.wmf.tosvg.WMFFont,byte[])>($r85, r196);

        $f326 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleX>;

        $f325 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpX>;

        $f324 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float xOffset>;

        $f327 = $f325 + $f324;

        $i132 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(0);

        $f328 = (float) $i132;

        $f329 = $f327 + $f328;

        f484 = $f326 * $f329;

        $f332 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleY>;

        $f331 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpY>;

        $f330 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float yOffset>;

        $f333 = $f331 + $f330;

        $i133 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(1);

        $f334 = (float) $i133;

        $f335 = $f333 + $f334;

        f485 = $f332 * $f335;

        $r87 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.Color frgdColor>;

        if $r87 == null goto label083;

        $r97 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.Color frgdColor>;

        virtualinvoke r10.<java.awt.Graphics: void setColor(java.awt.Color)>($r97);

        goto label084;

     label083:
        $r88 = <java.awt.Color: java.awt.Color black>;

        virtualinvoke r10.<java.awt.Graphics: void setColor(java.awt.Color)>($r88);

     label084:
        $r89 = virtualinvoke r10.<java.awt.Graphics2D: java.awt.font.FontRenderContext getFontRenderContext()>();

        $r222 = new java.awt.geom.Point2D$Double;

        specialinvoke $r222.<java.awt.geom.Point2D$Double: void <init>(double,double)>(0.0, 0.0);

        $r223 = new java.awt.geom.GeneralPath;

        specialinvoke $r223.<java.awt.geom.GeneralPath: void <init>(int)>(1);

        $r224 = new java.awt.font.TextLayout;

        $r93 = virtualinvoke r10.<java.awt.Graphics: java.awt.Font getFont()>();

        specialinvoke $r224.<java.awt.font.TextLayout: void <init>(java.lang.String,java.awt.Font,java.awt.font.FontRenderContext)>($r86, $r93, $r89);

        r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: boolean firstEffectivePaint> = 0;

        $i134 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: int currentVertAlign>;

        $f336 = specialinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float getVerticalAlignmentValue(java.awt.font.TextLayout,int)>($r224, $i134);

        $f337 = f485 + $f336;

        $r94 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFFont wmfFont>;

        $r95 = virtualinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: java.text.AttributedCharacterIterator getCharacterIterator(java.awt.Graphics2D,java.lang.String,org.apache.batik.transcoder.wmf.tosvg.WMFFont)>(r10, $r86, $r94);

        $r96 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFFont wmfFont>;

        $i135 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: int currentHorizAlign>;

        $i251 = (int) -1;

        specialinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: void drawString(int,java.awt.Graphics2D,java.text.AttributedCharacterIterator,float,float,java.awt.font.TextLayout,org.apache.batik.transcoder.wmf.tosvg.WMFFont,int)>($i251, r10, $r95, f484, $f337, $r224, $r96, $i135);

     label085:
        goto label087;

     label086:
        $r179 := @caughtexception;

     label087:
        goto label132;

     label088:
        $f210 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleX>;

        $f209 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpX>;

        $f208 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float xOffset>;

        $f211 = $f209 + $f208;

        $i96 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(0);

        $f212 = (float) $i96;

        $f213 = $f211 + $f212;

        $f214 = $f210 * $f213;

        d28 = (double) $f214;

        $f217 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleY>;

        $f216 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpY>;

        $f215 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float yOffset>;

        $f218 = $f216 + $f215;

        $i97 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(1);

        $f219 = (float) $i97;

        $f220 = $f218 + $f219;

        $f221 = $f217 * $f220;

        d29 = (double) $f221;

        $f224 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleX>;

        $f223 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpX>;

        $f222 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float xOffset>;

        $f225 = $f223 + $f222;

        $i98 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(2);

        $f226 = (float) $i98;

        $f227 = $f225 + $f226;

        $f228 = $f224 * $f227;

        d30 = (double) $f228;

        $f231 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleY>;

        $f230 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpY>;

        $f229 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float yOffset>;

        $f232 = $f230 + $f229;

        $i99 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(3);

        $f233 = (float) $i99;

        $f234 = $f232 + $f233;

        $f235 = $f231 * $f234;

        d31 = (double) $f235;

        $f238 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleX>;

        $f237 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpX>;

        $f236 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float xOffset>;

        $f239 = $f237 + $f236;

        $i100 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(4);

        $f240 = (float) $i100;

        $f241 = $f239 + $f240;

        $f242 = $f238 * $f241;

        d32 = (double) $f242;

        $f245 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleY>;

        $f244 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpY>;

        $f243 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float yOffset>;

        $f246 = $f244 + $f243;

        $i101 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(5);

        $f247 = (float) $i101;

        $f248 = $f246 + $f247;

        $f249 = $f245 * $f248;

        d33 = (double) $f249;

        $f252 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleX>;

        $f251 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpX>;

        $f250 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float xOffset>;

        $f253 = $f251 + $f250;

        $i102 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(6);

        $f254 = (float) $i102;

        $f255 = $f253 + $f254;

        $f256 = $f252 * $f255;

        d34 = (double) $f256;

        $f259 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleY>;

        $f258 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpY>;

        $f257 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float yOffset>;

        $f260 = $f258 + $f257;

        $i103 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(7);

        $f261 = (float) $i103;

        $f262 = $f260 + $f261;

        $f263 = $f259 * $f262;

        d35 = (double) $f263;

        $r73 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        specialinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: void setBrushPaint(org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore,java.awt.Graphics2D,int)>($r73, r10, i210);

        $d14 = d30 - d28;

        $d15 = $d14 / 2.0;

        d36 = d28 + $d15;

        $d16 = d31 - d29;

        $d17 = $d16 / 2.0;

        d37 = d29 + $d17;

        $d19 = d33 - d37;

        $d18 = d32 - d36;

        $d20 = staticinvoke <java.lang.Math: double atan2(double,double)>($d19, $d18);

        $d21 = staticinvoke <java.lang.Math: double toDegrees(double)>($d20);

        d38 = neg $d21;

        $d23 = d35 - d37;

        $d22 = d34 - d36;

        $d24 = staticinvoke <java.lang.Math: double atan2(double,double)>($d23, $d22);

        $d25 = staticinvoke <java.lang.Math: double toDegrees(double)>($d24);

        d39 = neg $d25;

        d40 = d39 - d38;

        $b104 = d40 cmpg 0.0;

        $i252 = (int) $b104;

        if $i252 >= 0 goto label089;

        d40 = d40 + 360.0;

     label089:
        $b105 = d38 cmpg 0.0;

        $i253 = (int) $b105;

        if $i253 >= 0 goto label090;

        d38 = d38 + 360.0;

     label090:
        $r225 = new java.awt.geom.Arc2D$Double;

        $d27 = d30 - d28;

        $d26 = d31 - d29;

        specialinvoke $r225.<java.awt.geom.Arc2D$Double: void <init>(double,double,double,double,double,double,int)>(d28, d29, $d27, $d26, d38, d40, 0);

        $i106 = $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int functionId>;

        if $i106 != 2071 goto label091;

        virtualinvoke r10.<java.awt.Graphics2D: void draw(java.awt.Shape)>($r225);

        goto label092;

     label091:
        virtualinvoke r10.<java.awt.Graphics2D: void fill(java.awt.Shape)>($r225);

     label092:
        r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: boolean firstEffectivePaint> = 0;

        goto label132;

     label093:
        $f154 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleX>;

        $f153 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpX>;

        $f152 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float xOffset>;

        $f155 = $f153 + $f152;

        $i86 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(0);

        $f156 = (float) $i86;

        $f157 = $f155 + $f156;

        $f158 = $f154 * $f157;

        d41 = (double) $f158;

        $f161 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleY>;

        $f160 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpY>;

        $f159 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float yOffset>;

        $f162 = $f160 + $f159;

        $i87 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(1);

        $f163 = (float) $i87;

        $f164 = $f162 + $f163;

        $f165 = $f161 * $f164;

        d42 = (double) $f165;

        $f168 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleX>;

        $f167 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpX>;

        $f166 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float xOffset>;

        $f169 = $f167 + $f166;

        $i88 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(2);

        $f170 = (float) $i88;

        $f171 = $f169 + $f170;

        $f172 = $f168 * $f171;

        d43 = (double) $f172;

        $f175 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleY>;

        $f174 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpY>;

        $f173 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float yOffset>;

        $f176 = $f174 + $f173;

        $i89 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(3);

        $f177 = (float) $i89;

        $f178 = $f176 + $f177;

        $f179 = $f175 * $f178;

        d44 = (double) $f179;

        $f182 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleX>;

        $f181 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpX>;

        $f180 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float xOffset>;

        $f183 = $f181 + $f180;

        $i90 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(4);

        $f184 = (float) $i90;

        $f185 = $f183 + $f184;

        $f186 = $f182 * $f185;

        d45 = (double) $f186;

        $f189 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleY>;

        $f188 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpY>;

        $f187 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float yOffset>;

        $f190 = $f188 + $f187;

        $i91 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(5);

        $f191 = (float) $i91;

        $f192 = $f190 + $f191;

        $f193 = $f189 * $f192;

        d46 = (double) $f193;

        $f196 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleX>;

        $f195 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpX>;

        $f194 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float xOffset>;

        $f197 = $f195 + $f194;

        $i92 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(6);

        $f198 = (float) $i92;

        $f199 = $f197 + $f198;

        $f200 = $f196 * $f199;

        d47 = (double) $f200;

        $f203 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleY>;

        $f202 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpY>;

        $f201 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float yOffset>;

        $f204 = $f202 + $f201;

        $i93 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(7);

        $f205 = (float) $i93;

        $f206 = $f204 + $f205;

        $f207 = $f203 * $f206;

        d48 = (double) $f207;

        $r71 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        specialinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: void setBrushPaint(org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore,java.awt.Graphics2D,int)>($r71, r10, i210);

        $d0 = d43 - d41;

        $d1 = $d0 / 2.0;

        d49 = d41 + $d1;

        $d2 = d44 - d42;

        $d3 = $d2 / 2.0;

        d50 = d42 + $d3;

        $d5 = d46 - d50;

        $d4 = d45 - d49;

        $d6 = staticinvoke <java.lang.Math: double atan2(double,double)>($d5, $d4);

        $d7 = staticinvoke <java.lang.Math: double toDegrees(double)>($d6);

        d51 = neg $d7;

        $d9 = d48 - d50;

        $d8 = d47 - d49;

        $d10 = staticinvoke <java.lang.Math: double atan2(double,double)>($d9, $d8);

        $d11 = staticinvoke <java.lang.Math: double toDegrees(double)>($d10);

        d52 = neg $d11;

        d53 = d52 - d51;

        $b94 = d53 cmpg 0.0;

        $i254 = (int) $b94;

        if $i254 >= 0 goto label094;

        d53 = d53 + 360.0;

     label094:
        $b95 = d51 cmpg 0.0;

        $i255 = (int) $b95;

        if $i255 >= 0 goto label095;

        d51 = d51 + 360.0;

     label095:
        $r226 = new java.awt.geom.Arc2D$Double;

        $d13 = d43 - d41;

        $d12 = d44 - d42;

        specialinvoke $r226.<java.awt.geom.Arc2D$Double: void <init>(double,double,double,double,double,double,int)>(d41, d42, $d13, $d12, d51, d53, 1);

        specialinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: void paint(int,int,java.awt.Shape,java.awt.Graphics2D)>(i210, i211, $r226, r10);

        r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: boolean firstEffectivePaint> = 0;

        goto label132;

     label096:
        $r227 = new java.lang.Float;

        specialinvoke $r227.<java.lang.Float: void <init>(float)>(f462);

        virtualinvoke $r203.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r227);

        $r228 = new java.lang.Float;

        specialinvoke $r228.<java.lang.Float: void <init>(float)>(f463);

        virtualinvoke $r203.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r228);

        $r229 = new java.lang.Float;

        specialinvoke $r229.<java.lang.Float: void <init>(float)>(f464);

        virtualinvoke $r203.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r229);

        $r230 = new java.lang.Integer;

        specialinvoke $r230.<java.lang.Integer: void <init>(int)>(i210);

        virtualinvoke $r203.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r230);

        $r231 = new java.lang.Integer;

        specialinvoke $r231.<java.lang.Integer: void <init>(int)>(i211);

        virtualinvoke $r203.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r231);

        $r232 = new java.lang.Integer;

        specialinvoke $r232.<java.lang.Integer: void <init>(int)>(i212);

        virtualinvoke $r203.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r232);

        $r175 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.Color frgdColor>;

        virtualinvoke $r203.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r175);

        $r176 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.Color bkgdColor>;

        virtualinvoke $r203.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r176);

        goto label132;

     label097:
        $r146 = virtualinvoke $r203.<java.util.Stack: java.lang.Object pop()>();

        $r147 = (java.awt.Color) $r146;

        r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.Color bkgdColor> = $r147;

        $r148 = virtualinvoke $r203.<java.util.Stack: java.lang.Object pop()>();

        $r149 = (java.awt.Color) $r148;

        r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.Color frgdColor> = $r149;

        $r150 = virtualinvoke $r203.<java.util.Stack: java.lang.Object pop()>();

        $r151 = (java.lang.Integer) $r150;

        i212 = virtualinvoke $r151.<java.lang.Integer: int intValue()>();

        $r152 = virtualinvoke $r203.<java.util.Stack: java.lang.Object pop()>();

        $r153 = (java.lang.Integer) $r152;

        i211 = virtualinvoke $r153.<java.lang.Integer: int intValue()>();

        $r154 = virtualinvoke $r203.<java.util.Stack: java.lang.Object pop()>();

        $r155 = (java.lang.Integer) $r154;

        i210 = virtualinvoke $r155.<java.lang.Integer: int intValue()>();

        $r156 = virtualinvoke $r203.<java.util.Stack: java.lang.Object pop()>();

        $r157 = (java.lang.Float) $r156;

        f464 = virtualinvoke $r157.<java.lang.Float: float floatValue()>();

        $r158 = virtualinvoke $r203.<java.util.Stack: java.lang.Object pop()>();

        $r159 = (java.lang.Float) $r158;

        f463 = virtualinvoke $r159.<java.lang.Float: float floatValue()>();

        $r160 = virtualinvoke $r203.<java.util.Stack: java.lang.Object pop()>();

        $r161 = (java.lang.Float) $r160;

        f462 = virtualinvoke $r161.<java.lang.Float: float floatValue()>();

        goto label132;

     label098:
        $r18 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        specialinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: void setPenColor(org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore,java.awt.Graphics2D,int)>($r18, r10, i211);

        $i5 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(0);

        $i6 = $i5 - 1;

        i226 = $i6 / 3;

        $f14 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleX>;

        $f13 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpX>;

        $f12 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float xOffset>;

        $f15 = $f13 + $f12;

        $i7 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(1);

        $f16 = (float) $i7;

        $f17 = $f15 + $f16;

        f486 = $f14 * $f17;

        $f20 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleY>;

        $f19 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpY>;

        $f18 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float yOffset>;

        $f21 = $f19 + $f18;

        $i8 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(2);

        $f22 = (float) $i8;

        $f23 = $f21 + $f22;

        f487 = $f20 * $f23;

        $r233 = new java.awt.geom.GeneralPath;

        specialinvoke $r233.<java.awt.geom.GeneralPath: void <init>(int)>(1);

        virtualinvoke $r233.<java.awt.geom.GeneralPath: void moveTo(float,float)>(f486, f487);

        i227 = 0;

        goto label100;

     label099:
        i228 = i227 * 6;

        $f26 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleX>;

        $f25 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpX>;

        $f24 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float xOffset>;

        $f27 = $f25 + $f24;

        $i9 = i228 + 3;

        $i10 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>($i9);

        $f28 = (float) $i10;

        $f29 = $f27 + $f28;

        f488 = $f26 * $f29;

        $f32 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleY>;

        $f31 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpY>;

        $f30 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float yOffset>;

        $f33 = $f31 + $f30;

        $i11 = i228 + 4;

        $i12 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>($i11);

        $f34 = (float) $i12;

        $f35 = $f33 + $f34;

        f489 = $f32 * $f35;

        $f38 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleX>;

        $f37 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpX>;

        $f36 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float xOffset>;

        $f39 = $f37 + $f36;

        $i13 = i228 + 5;

        $i14 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>($i13);

        $f40 = (float) $i14;

        $f41 = $f39 + $f40;

        f490 = $f38 * $f41;

        $f44 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleY>;

        $f43 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpY>;

        $f42 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float yOffset>;

        $f45 = $f43 + $f42;

        $i15 = i228 + 6;

        $i16 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>($i15);

        $f46 = (float) $i16;

        $f47 = $f45 + $f46;

        f491 = $f44 * $f47;

        $f50 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleX>;

        $f49 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpX>;

        $f48 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float xOffset>;

        $f51 = $f49 + $f48;

        $i17 = i228 + 7;

        $i18 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>($i17);

        $f52 = (float) $i18;

        $f53 = $f51 + $f52;

        f492 = $f50 * $f53;

        $f56 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleY>;

        $f55 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpY>;

        $f54 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float yOffset>;

        $f57 = $f55 + $f54;

        $i19 = i228 + 8;

        $i20 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>($i19);

        $f58 = (float) $i20;

        $f59 = $f57 + $f58;

        f493 = $f56 * $f59;

        virtualinvoke $r233.<java.awt.geom.GeneralPath: void curveTo(float,float,float,float,float,float)>(f488, f489, f490, f491, f492, f493);

        i227 = i227 + 1;

     label100:
        if i227 < i226 goto label099;

        $r20 = <org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.BasicStroke solid>;

        virtualinvoke r10.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r20);

        virtualinvoke r10.<java.awt.Graphics2D: void draw(java.awt.Shape)>($r233);

        r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: boolean firstEffectivePaint> = 0;

     label101:
        goto label103;

     label102:
        $r178 := @caughtexception;

     label103:
        goto label132;

     label104:
        goto label132;

     label105:
        $i207 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(0);

        if $i207 != 2 goto label106;

        $z13 = 1;

        goto label107;

     label106:
        $z13 = 0;

     label107:
        r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: boolean opaque> = $z13;

        goto label132;

     label108:
        $r162 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: java.lang.Integer ElementAt(int)>(0);

        $i203 = virtualinvoke $r162.<java.lang.Integer: int intValue()>();

        f494 = (float) $i203;

        r197 = null;

        z14 = 0;

        $b204 = f494 cmpl 66.0F;

        if $b204 != 0 goto label109;

        r197 = <java.awt.Color: java.awt.Color black>;

        z14 = 1;

        goto label111;

     label109:
        $b205 = f494 cmpl 1.6711778E7F;

        if $b205 != 0 goto label110;

        r197 = <java.awt.Color: java.awt.Color white>;

        z14 = 1;

        goto label111;

     label110:
        $b206 = f494 cmpl 1.5728673E7F;

        if $b206 != 0 goto label111;

        if i210 < 0 goto label111;

        $r164 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        r197 = specialinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.Paint getStoredPaint(org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore,int)>($r164, i210);

        z14 = 1;

     label111:
        if z14 == 0 goto label113;

        if r197 == null goto label112;

        virtualinvoke r10.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r197);

        goto label113;

     label112:
        $r163 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        specialinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: void setBrushPaint(org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore,java.awt.Graphics2D,int)>($r163, r10, i210);

     label113:
        goto label132;

     label114:
        $i107 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(0);

        f495 = (float) $i107;

        $f264 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleY>;

        $i108 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(1);

        $f265 = (float) $i108;

        f496 = $f264 * $f265;

        $f266 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleX>;

        $i109 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(2);

        $f267 = (float) $i109;

        f497 = $f266 * $f267;

        $f270 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleX>;

        $f269 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpX>;

        $f268 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float xOffset>;

        $f271 = $f269 + $f268;

        $i110 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(3);

        $f272 = (float) $i110;

        $f273 = $f271 + $f272;

        f498 = $f270 * $f273;

        $f276 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float scaleY>;

        $f275 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpY>;

        $f274 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float yOffset>;

        $f277 = $f275 + $f274;

        $i111 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(4);

        $f278 = (float) $i111;

        $f279 = $f277 + $f278;

        f499 = $f276 * $f279;

        r198 = null;

        z15 = 0;

        $b112 = f495 cmpl 66.0F;

        if $b112 != 0 goto label115;

        r198 = <java.awt.Color: java.awt.Color black>;

        z15 = 1;

        goto label117;

     label115:
        $b113 = f495 cmpl 1.6711778E7F;

        if $b113 != 0 goto label116;

        r198 = <java.awt.Color: java.awt.Color white>;

        z15 = 1;

        goto label117;

     label116:
        $b114 = f495 cmpl 1.5728673E7F;

        if $b114 != 0 goto label117;

        if i210 < 0 goto label117;

        $r78 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        r198 = specialinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.Paint getStoredPaint(org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore,int)>($r78, i210);

        z15 = 1;

     label117:
        if z15 == 0 goto label120;

        $r75 = virtualinvoke r10.<java.awt.Graphics: java.awt.Color getColor()>();

        if r198 == null goto label118;

        virtualinvoke r10.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r198);

        goto label119;

     label118:
        $r76 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        specialinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: void setBrushPaint(org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore,java.awt.Graphics2D,int)>($r76, r10, i210);

     label119:
        $r234 = new java.awt.geom.Rectangle2D$Float;

        specialinvoke $r234.<java.awt.geom.Rectangle2D$Float: void <init>(float,float,float,float)>(f498, f499, f497, f496);

        virtualinvoke r10.<java.awt.Graphics2D: void fill(java.awt.Shape)>($r234);

        virtualinvoke r10.<java.awt.Graphics: void setColor(java.awt.Color)>($r75);

     label120:
        goto label132;

     label121:
        $i41 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(1);

        $i42 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(2);

        $i43 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(3);

        $i44 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(4);

        $f86 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float conv>;

        $r30 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        $f87 = virtualinvoke $r30.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float getVpWFactor()>();

        $f90 = $f86 * $f87;

        $f89 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpY>;

        $f88 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float yOffset>;

        $f91 = $f89 + $f88;

        $i45 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(7);

        $f92 = (float) $i45;

        $f93 = $f91 + $f92;

        f500 = $f90 * $f93;

        $f94 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float conv>;

        $r31 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        $f95 = virtualinvoke $r31.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float getVpHFactor()>();

        $f98 = $f94 * $f95;

        $f97 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpX>;

        $f96 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float xOffset>;

        $f99 = $f97 + $f96;

        $i46 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(8);

        $f100 = (float) $i46;

        $f101 = $f99 + $f100;

        f501 = $f98 * $f101;

        $i47 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(5);

        f502 = (float) $i47;

        $i48 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(6);

        f503 = (float) $i48;

        $f102 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float conv>;

        $f103 = f503 * $f102;

        $r32 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        $f104 = virtualinvoke $r32.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float getVpWFactor()>();

        f504 = $f103 * $f104;

        $f105 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float conv>;

        $f106 = f502 * $f105;

        $r33 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        $f107 = virtualinvoke $r33.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float getVpHFactor()>();

        f505 = $f106 * $f107;

        $r34 = (org.apache.batik.transcoder.wmf.tosvg.MetaRecord$ByteRecord) $r17;

        r199 = $r34.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord$ByteRecord: byte[] bstr>;

        $r35 = virtualinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: java.awt.image.BufferedImage getImage(byte[],int,int)>(r199, $i42, $i41);

        if $r35 == null goto label122;

        $i54 = (int) f501;

        $i53 = (int) f500;

        $f108 = f501 + f504;

        $i52 = (int) $f108;

        $f109 = f500 + f505;

        $i51 = (int) $f109;

        $i50 = $i44 + $i42;

        $i49 = $i43 + $i41;

        $r37 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.Color bkgdColor>;

        $r36 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.image.ImageObserver observer>;

        virtualinvoke r10.<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>($r35, $i54, $i53, $i52, $i51, $i44, $i43, $i50, $i49, $r37, $r36);

     label122:
        goto label132;

     label123:
        $i21 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(1);

        $i22 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(2);

        $i23 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(3);

        $i24 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(4);

        $f60 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float conv>;

        $r21 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        $f61 = virtualinvoke $r21.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float getVpWFactor()>();

        $f64 = $f60 * $f61;

        $f63 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpY>;

        $f62 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float yOffset>;

        $f65 = $f63 + $f62;

        $i25 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(7);

        $f66 = (float) $i25;

        $f67 = $f65 + $f66;

        f506 = $f64 * $f67;

        $f68 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float conv>;

        $r22 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        $f69 = virtualinvoke $r22.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float getVpHFactor()>();

        $f72 = $f68 * $f69;

        $f71 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpX>;

        $f70 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float xOffset>;

        $f73 = $f71 + $f70;

        $i26 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(8);

        $f74 = (float) $i26;

        $f75 = $f73 + $f74;

        f507 = $f72 * $f75;

        $i27 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(5);

        f508 = (float) $i27;

        $i28 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: int elementAt(int)>(6);

        f509 = (float) $i28;

        $f76 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float conv>;

        $f77 = f509 * $f76;

        $r23 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        $f78 = virtualinvoke $r23.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float getVpWFactor()>();

        f510 = $f77 * $f78;

        $f79 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float conv>;

        $f80 = f508 * $f79;

        $r24 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        $f81 = virtualinvoke $r24.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float getVpHFactor()>();

        f511 = $f80 * $f81;

        $r25 = (org.apache.batik.transcoder.wmf.tosvg.MetaRecord$ByteRecord) $r17;

        r200 = $r25.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord$ByteRecord: byte[] bstr>;

        $r26 = virtualinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: java.awt.image.BufferedImage getImage(byte[],int,int)>(r200, $i22, $i21);

        if $r26 == null goto label125;

        $z1 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: boolean opaque>;

        if $z1 == 0 goto label124;

        $i40 = (int) f507;

        $i39 = (int) f506;

        $f84 = f507 + f510;

        $i38 = (int) $f84;

        $f85 = f506 + f511;

        $i37 = (int) $f85;

        $i36 = $i24 + $i22;

        $i35 = $i23 + $i21;

        $r29 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.Color bkgdColor>;

        $r28 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.image.ImageObserver observer>;

        virtualinvoke r10.<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>($r26, $i40, $i39, $i38, $i37, $i24, $i23, $i36, $i35, $r29, $r28);

        goto label125;

     label124:
        $i34 = (int) f507;

        $i33 = (int) f506;

        $f82 = f507 + f510;

        $i32 = (int) $f82;

        $f83 = f506 + f511;

        $i31 = (int) $f83;

        $i30 = $i24 + $i22;

        $i29 = $i23 + $i21;

        $r27 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.image.ImageObserver observer>;

        virtualinvoke r10.<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>($r26, $i34, $i33, $i32, $i31, $i24, $i23, $i30, $i29, $r27);

     label125:
        goto label132;

     label126:
        $r52 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: java.lang.Integer ElementAt(int)>(0);

        virtualinvoke $r52.<java.lang.Integer: int intValue()>();

        $r53 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: java.lang.Integer ElementAt(int)>(1);

        $i66 = virtualinvoke $r53.<java.lang.Integer: int intValue()>();

        $f125 = (float) $i66;

        $f124 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float conv>;

        $f126 = $f125 * $f124;

        $r54 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        $f127 = virtualinvoke $r54.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float getVpWFactor()>();

        f512 = $f126 * $f127;

        $r55 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: java.lang.Integer ElementAt(int)>(2);

        $i67 = virtualinvoke $r55.<java.lang.Integer: int intValue()>();

        $f129 = (float) $i67;

        $f128 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float conv>;

        $f130 = $f129 * $f128;

        $r56 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        $f131 = virtualinvoke $r56.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float getVpHFactor()>();

        f513 = $f130 * $f131;

        $r57 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: java.lang.Integer ElementAt(int)>(3);

        $i68 = virtualinvoke $r57.<java.lang.Integer: int intValue()>();

        $r58 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: java.lang.Integer ElementAt(int)>(4);

        $i69 = virtualinvoke $r58.<java.lang.Integer: int intValue()>();

        $f132 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float conv>;

        $r59 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        $f133 = virtualinvoke $r59.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float getVpWFactor()>();

        $f136 = $f132 * $f133;

        $f135 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpY>;

        $f134 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float yOffset>;

        $f137 = $f135 + $f134;

        $r60 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: java.lang.Integer ElementAt(int)>(5);

        $i70 = virtualinvoke $r60.<java.lang.Integer: int intValue()>();

        $f138 = (float) $i70;

        $f139 = $f137 + $f138;

        f514 = $f136 * $f139;

        $f140 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float conv>;

        $r61 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        $f141 = virtualinvoke $r61.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: float getVpHFactor()>();

        $f144 = $f140 * $f141;

        $f143 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float vpX>;

        $f142 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: float xOffset>;

        $f145 = $f143 + $f142;

        $r62 = virtualinvoke $r17.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord: java.lang.Integer ElementAt(int)>(6);

        $i71 = virtualinvoke $r62.<java.lang.Integer: int intValue()>();

        $f146 = (float) $i71;

        $f147 = $f145 + $f146;

        f515 = $f144 * $f147;

        $z2 = $r17 instanceof org.apache.batik.transcoder.wmf.tosvg.MetaRecord$ByteRecord;

        if $z2 == 0 goto label129;

        $r66 = (org.apache.batik.transcoder.wmf.tosvg.MetaRecord$ByteRecord) $r17;

        r201 = $r66.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord$ByteRecord: byte[] bstr>;

        $r67 = virtualinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: java.awt.image.BufferedImage getImage(byte[])>(r201);

        if $r67 == null goto label128;

        $i72 = virtualinvoke $r67.<java.awt.image.BufferedImage: int getWidth()>();

        $i73 = virtualinvoke $r67.<java.awt.image.BufferedImage: int getHeight()>();

        $z4 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: boolean opaque>;

        if $z4 == 0 goto label127;

        $i85 = (int) f515;

        $i84 = (int) f514;

        $f150 = f515 + f513;

        $i83 = (int) $f150;

        $f151 = f514 + f512;

        $i82 = (int) $f151;

        $i81 = $i69 + $i72;

        $i80 = $i68 + $i73;

        $r70 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.Color bkgdColor>;

        $r69 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.image.ImageObserver observer>;

        virtualinvoke r10.<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>($r67, $i85, $i84, $i83, $i82, $i69, $i68, $i81, $i80, $r70, $r69);

        goto label128;

     label127:
        $i79 = (int) f515;

        $i78 = (int) f514;

        $f148 = f515 + f513;

        $i77 = (int) $f148;

        $f149 = f514 + f512;

        $i76 = (int) $f149;

        $i75 = $i69 + $i72;

        $i74 = $i68 + $i73;

        $r68 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.image.ImageObserver observer>;

        virtualinvoke r10.<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>($r67, $i79, $i78, $i77, $i76, $i69, $i68, $i75, $i74, $r68);

     label128:
        goto label130;

     label129:
        $z3 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: boolean opaque>;

        if $z3 == 0 goto label130;

        $r63 = virtualinvoke r10.<java.awt.Graphics: java.awt.Color getColor()>();

        $r64 = r1.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.Color bkgdColor>;

        virtualinvoke r10.<java.awt.Graphics: void setColor(java.awt.Color)>($r64);

        $r235 = new java.awt.geom.Rectangle2D$Float;

        specialinvoke $r235.<java.awt.geom.Rectangle2D$Float: void <init>(float,float,float,float)>(f515, f514, f513, f512);

        virtualinvoke r10.<java.awt.Graphics2D: void fill(java.awt.Shape)>($r235);

        virtualinvoke r10.<java.awt.Graphics: void setColor(java.awt.Color)>($r63);

     label130:
        goto label132;

     label131:
        $r128 = (org.apache.batik.transcoder.wmf.tosvg.MetaRecord$ByteRecord) $r17;

        r202 = $r128.<org.apache.batik.transcoder.wmf.tosvg.MetaRecord$ByteRecord: byte[] bstr>;

        $r129 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        virtualinvoke r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: int addObjectAt(org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore,int,java.lang.Object,int)>($r129, 2, r202, 0);

        goto label132;

     label132:
        i214 = i214 + 1;

     label133:
        if i214 < $i0 goto label003;

     label134:
        return;

        catch java.lang.Exception from label075 to label079 with label080;
        catch java.lang.Exception from label082 to label085 with label086;
        catch java.lang.Exception from label098 to label101 with label102;
    }

    private java.awt.Paint getPaint(byte[])
    {
        byte[] r1;
        java.awt.TexturePaint $r5;
        java.awt.image.BufferedImage $r3;
        java.awt.geom.Rectangle2D$Float $r4;
        org.apache.batik.transcoder.wmf.tosvg.WMFPainter r0;
        java.awt.Dimension $r2;
        int $i0, $i1;
        float $f0, $f1;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFPainter;

        r1 := @parameter0: byte[];

        $r2 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: java.awt.Dimension getImageDimension(byte[])>(r1);

        $r3 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: java.awt.image.BufferedImage getImage(byte[])>(r1);

        $r4 = new java.awt.geom.Rectangle2D$Float;

        $i0 = $r2.<java.awt.Dimension: int width>;

        $f1 = (float) $i0;

        $i1 = $r2.<java.awt.Dimension: int height>;

        $f0 = (float) $i1;

        specialinvoke $r4.<java.awt.geom.Rectangle2D$Float: void <init>(float,float,float,float)>(0.0F, 0.0F, $f1, $f0);

        $r5 = new java.awt.TexturePaint;

        specialinvoke $r5.<java.awt.TexturePaint: void <init>(java.awt.image.BufferedImage,java.awt.geom.Rectangle2D)>($r3, $r4);

        return $r5;
    }

    private void drawString(int, java.awt.Graphics2D, java.text.AttributedCharacterIterator, float, float, java.awt.font.TextLayout, org.apache.batik.transcoder.wmf.tosvg.WMFFont, int)
    {
        java.awt.geom.Rectangle2D $r4, $r5, $r10;
        java.awt.geom.AffineTransform $r2;
        java.text.AttributedCharacterIterator r8;
        float $f0, f1, f2, f3, $f4, f5, f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19;
        java.awt.BasicStroke $r7;
        org.apache.batik.transcoder.wmf.tosvg.WMFFont r0;
        java.awt.font.TextLayout r3;
        java.awt.Graphics2D r1;
        int $i0, $i1, i2, i3, $i5, $i7, $i9;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19;
        java.awt.Stroke $r6;
        org.apache.batik.transcoder.wmf.tosvg.WMFPainter r9;

        r9 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFPainter;

        i3 := @parameter0: int;

        r1 := @parameter1: java.awt.Graphics2D;

        r8 := @parameter2: java.text.AttributedCharacterIterator;

        f5 := @parameter3: float;

        f6 := @parameter4: float;

        r3 := @parameter5: java.awt.font.TextLayout;

        r0 := @parameter6: org.apache.batik.transcoder.wmf.tosvg.WMFFont;

        i2 := @parameter7: int;

        $i0 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFFont: int escape>;

        if $i0 != 0 goto label05;

        $i5 = (int) -1;

        if i3 == $i5 goto label01;

        $i7 = (int) -1;

        specialinvoke r9.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: void fillTextBackground(int,int,java.awt.Graphics2D,float,float,float,java.awt.font.TextLayout)>($i7, i3, r1, f5, f6, 0.0F, r3);

     label01:
        $r10 = virtualinvoke r3.<java.awt.font.TextLayout: java.awt.geom.Rectangle2D getBounds()>();

        $d19 = virtualinvoke $r10.<java.awt.geom.RectangularShape: double getWidth()>();

        $f19 = (float) $d19;

        if i2 != 6 goto label02;

        $f17 = $f19 / 2.0F;

        $f18 = f5 - $f17;

        virtualinvoke r1.<java.awt.Graphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>(r8, $f18, f6);

        goto label04;

     label02:
        if i2 != 2 goto label03;

        $f16 = f5 - $f19;

        virtualinvoke r1.<java.awt.Graphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>(r8, $f16, f6);

        goto label04;

     label03:
        virtualinvoke r1.<java.awt.Graphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>(r8, f5, f6);

     label04:
        goto label10;

     label05:
        $r2 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.geom.AffineTransform getTransform()>();

        $i1 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFFont: int escape>;

        $d0 = (double) $i1;

        $d1 = $d0 * 3.141592653589793;

        $d2 = $d1 / 1800.0;

        $f0 = (float) $d2;

        f1 = neg $f0;

        $r4 = virtualinvoke r3.<java.awt.font.TextLayout: java.awt.geom.Rectangle2D getBounds()>();

        $d3 = virtualinvoke $r4.<java.awt.geom.RectangularShape: double getWidth()>();

        f2 = (float) $d3;

        $r5 = virtualinvoke r3.<java.awt.font.TextLayout: java.awt.geom.Rectangle2D getBounds()>();

        $d4 = virtualinvoke $r5.<java.awt.geom.RectangularShape: double getHeight()>();

        f3 = (float) $d4;

        if i2 != 6 goto label06;

        $f11 = neg f2;

        $f12 = $f11 / 2.0F;

        $d15 = (double) $f12;

        $f13 = f3 / 2.0F;

        $d14 = (double) $f13;

        virtualinvoke r1.<java.awt.Graphics2D: void translate(double,double)>($d15, $d14);

        $d18 = (double) f1;

        $f14 = f2 / 2.0F;

        $f15 = f5 - $f14;

        $d17 = (double) $f15;

        $d16 = (double) f6;

        virtualinvoke r1.<java.awt.Graphics2D: void rotate(double,double,double)>($d18, $d17, $d16);

        goto label08;

     label06:
        if i2 != 2 goto label07;

        $f7 = neg f2;

        $f8 = $f7 / 2.0F;

        $d10 = (double) $f8;

        $f9 = f3 / 2.0F;

        $d9 = (double) $f9;

        virtualinvoke r1.<java.awt.Graphics2D: void translate(double,double)>($d10, $d9);

        $d13 = (double) f1;

        $f10 = f5 - f2;

        $d12 = (double) $f10;

        $d11 = (double) f6;

        virtualinvoke r1.<java.awt.Graphics2D: void rotate(double,double,double)>($d13, $d12, $d11);

        goto label08;

     label07:
        $f4 = f3 / 2.0F;

        $d5 = (double) $f4;

        virtualinvoke r1.<java.awt.Graphics2D: void translate(double,double)>(0.0, $d5);

        $d8 = (double) f1;

        $d7 = (double) f5;

        $d6 = (double) f6;

        virtualinvoke r1.<java.awt.Graphics2D: void rotate(double,double,double)>($d8, $d7, $d6);

     label08:
        $i9 = (int) -1;

        if i3 == $i9 goto label09;

        specialinvoke r9.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: void fillTextBackground(int,int,java.awt.Graphics2D,float,float,float,java.awt.font.TextLayout)>(i2, i3, r1, f5, f6, f2, r3);

     label09:
        $r6 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Stroke getStroke()>();

        $r7 = <org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.BasicStroke textSolid>;

        virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r7);

        virtualinvoke r1.<java.awt.Graphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>(r8, f5, f6);

        virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r6);

        virtualinvoke r1.<java.awt.Graphics2D: void setTransform(java.awt.geom.AffineTransform)>($r2);

     label10:
        return;
    }

    private void fillTextBackground(int, int, java.awt.Graphics2D, float, float, float, java.awt.font.TextLayout)
    {
        java.awt.Color $r2, $r4, $r7, $r9;
        java.awt.font.TextLayout r5;
        java.awt.geom.Rectangle2D $r6, $r10;
        java.awt.Graphics2D r1;
        int i0, i1, $i2;
        boolean $z0;
        double $d0, $d1, $d2, $d3;
        java.awt.geom.AffineTransform $r3, $r8;
        org.apache.batik.transcoder.wmf.tosvg.WMFPainter r0;
        float f0, f1, f2, $f3, f4;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFPainter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.awt.Graphics2D;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        f2 := @parameter5: float;

        r5 := @parameter6: java.awt.font.TextLayout;

        f4 = f0;

        if i0 != 6 goto label1;

        $f3 = f2 / 2.0F;

        f4 = f0 - $f3;

        goto label2;

     label1:
        if i0 != 2 goto label2;

        f4 = f0 - f2;

     label2:
        $i2 = i1 & 2;

        if $i2 == 0 goto label3;

        $r7 = virtualinvoke r1.<java.awt.Graphics: java.awt.Color getColor()>();

        $r8 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.geom.AffineTransform getTransform()>();

        $r9 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.Color bkgdColor>;

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r9);

        $d3 = (double) f4;

        $d2 = (double) f1;

        virtualinvoke r1.<java.awt.Graphics2D: void translate(double,double)>($d3, $d2);

        $r10 = virtualinvoke r5.<java.awt.font.TextLayout: java.awt.geom.Rectangle2D getBounds()>();

        virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>($r10);

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r7);

        virtualinvoke r1.<java.awt.Graphics2D: void setTransform(java.awt.geom.AffineTransform)>($r8);

        goto label4;

     label3:
        $z0 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: boolean opaque>;

        if $z0 == 0 goto label4;

        $r2 = virtualinvoke r1.<java.awt.Graphics: java.awt.Color getColor()>();

        $r3 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.geom.AffineTransform getTransform()>();

        $r4 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.Color bkgdColor>;

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r4);

        $d1 = (double) f4;

        $d0 = (double) f1;

        virtualinvoke r1.<java.awt.Graphics2D: void translate(double,double)>($d1, $d0);

        $r6 = virtualinvoke r5.<java.awt.font.TextLayout: java.awt.geom.Rectangle2D getBounds()>();

        virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>($r6);

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r2);

        virtualinvoke r1.<java.awt.Graphics2D: void setTransform(java.awt.geom.AffineTransform)>($r3);

     label4:
        return;
    }

    private void drawPolyPolygon(java.awt.Graphics2D, java.util.List)
    {
        java.util.List r0;
        java.util.Iterator $r1;
        java.awt.Graphics2D r4;
        java.lang.Object $r2;
        org.apache.batik.ext.awt.geom.Polygon2D r3;
        boolean $z0;
        org.apache.batik.transcoder.wmf.tosvg.WMFPainter r5;

        r5 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFPainter;

        r4 := @parameter0: java.awt.Graphics2D;

        r0 := @parameter1: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.batik.ext.awt.geom.Polygon2D) $r2;

        virtualinvoke r4.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r3);

     label2:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return;
    }

    private void fillPolyPolygon(java.awt.Graphics2D, java.util.List)
    {
        org.apache.batik.transcoder.wmf.tosvg.WMFPainter r7;
        java.util.List r0;
        java.awt.Graphics2D r4;
        int $i0, $i1, i2;
        java.lang.Object $r2, $r5;
        java.awt.geom.GeneralPath $r1;
        org.apache.batik.ext.awt.geom.Polygon2D r3, $r6;

        r7 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFPainter;

        r4 := @parameter0: java.awt.Graphics2D;

        r0 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 != 1 goto label1;

        $r5 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (org.apache.batik.ext.awt.geom.Polygon2D) $r5;

        virtualinvoke r4.<java.awt.Graphics2D: void fill(java.awt.Shape)>($r6);

        goto label4;

     label1:
        $r1 = new java.awt.geom.GeneralPath;

        specialinvoke $r1.<java.awt.geom.GeneralPath: void <init>(int)>(0);

        i2 = 0;

        goto label3;

     label2:
        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);

        r3 = (org.apache.batik.ext.awt.geom.Polygon2D) $r2;

        virtualinvoke $r1.<java.awt.geom.GeneralPath: void append(java.awt.Shape,boolean)>(r3, 0);

        i2 = i2 + 1;

     label3:
        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        if i2 < $i1 goto label2;

        virtualinvoke r4.<java.awt.Graphics2D: void fill(java.awt.Shape)>($r1);

     label4:
        return;
    }

    private void setStroke(java.awt.Graphics2D, int, float, float)
    {
        byte $b0;
        float f0, $f1, $f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, f29;
        java.awt.BasicStroke $r4, $r7, $r9, $r11, $r13, $r14;
        java.awt.Toolkit $r0;
        org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore $r2, $r3;
        float[] $r6, $r8, $r10, $r12;
        java.awt.Graphics2D r5;
        int $i1, $i2, $i3, i4;
        org.apache.batik.transcoder.wmf.tosvg.WMFPainter r1;

        r1 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFPainter;

        r5 := @parameter0: java.awt.Graphics2D;

        i4 := @parameter1: int;

        f0 := @parameter2: float;

        f3 := @parameter3: float;

        $b0 = f0 cmpl 0.0F;

        if $b0 != 0 goto label1;

        f29 = 1.0F;

        goto label2;

     label1:
        f29 = f0;

     label2:
        $r0 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $i1 = virtualinvoke $r0.<java.awt.Toolkit: int getScreenResolution()>();

        $f1 = (float) $i1;

        $r2 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        $i2 = virtualinvoke $r2.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int getMetaFileUnitsPerInch()>();

        $f2 = (float) $i2;

        $f25 = $f1 / $f2;

        $f26 = f3 / $f25;

        $f4 = f29 * $f25;

        $f27 = $f4 * $f26;

        $r3 = r1.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        $i3 = virtualinvoke $r3.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: int getWidthPixels()>();

        $f5 = (float) $i3;

        $f6 = $f5 * 1.0F;

        $f28 = $f6 / 350.0F;

        if i4 != 0 goto label3;

        $r14 = new java.awt.BasicStroke;

        specialinvoke $r14.<java.awt.BasicStroke: void <init>(float,int,int)>($f27, 0, 1);

        virtualinvoke r5.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r14);

        goto label8;

     label3:
        if i4 != 2 goto label4;

        $r12 = newarray (float)[2];

        $f22 = 1.0F * $f28;

        $r12[0] = $f22;

        $f23 = 5.0F * $f28;

        $r12[1] = $f23;

        $r13 = new java.awt.BasicStroke;

        $f24 = 10.0F * $f28;

        specialinvoke $r13.<java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>($f27, 0, 1, $f24, $r12, 0.0F);

        virtualinvoke r5.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r13);

        goto label8;

     label4:
        if i4 != 1 goto label5;

        $r10 = newarray (float)[2];

        $f19 = 5.0F * $f28;

        $r10[0] = $f19;

        $f20 = 2.0F * $f28;

        $r10[1] = $f20;

        $r11 = new java.awt.BasicStroke;

        $f21 = 10.0F * $f28;

        specialinvoke $r11.<java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>($f27, 0, 1, $f21, $r10, 0.0F);

        virtualinvoke r5.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r11);

        goto label8;

     label5:
        if i4 != 3 goto label6;

        $r8 = newarray (float)[4];

        $f14 = 5.0F * $f28;

        $r8[0] = $f14;

        $f15 = 2.0F * $f28;

        $r8[1] = $f15;

        $f16 = 1.0F * $f28;

        $r8[2] = $f16;

        $f17 = 2.0F * $f28;

        $r8[3] = $f17;

        $r9 = new java.awt.BasicStroke;

        $f18 = 10.0F * $f28;

        specialinvoke $r9.<java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>($f27, 0, 1, $f18, $r8, 0.0F);

        virtualinvoke r5.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r9);

        goto label8;

     label6:
        if i4 != 4 goto label7;

        $r6 = newarray (float)[6];

        $f7 = 5.0F * $f28;

        $r6[0] = $f7;

        $f8 = 2.0F * $f28;

        $r6[1] = $f8;

        $f9 = 1.0F * $f28;

        $r6[2] = $f9;

        $f10 = 2.0F * $f28;

        $r6[3] = $f10;

        $f11 = 1.0F * $f28;

        $r6[4] = $f11;

        $f12 = 2.0F * $f28;

        $r6[5] = $f12;

        $r7 = new java.awt.BasicStroke;

        $f13 = 15.0F * $f28;

        specialinvoke $r7.<java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>($f27, 0, 1, $f13, $r6, 0.0F);

        virtualinvoke r5.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r7);

        goto label8;

     label7:
        $r4 = new java.awt.BasicStroke;

        specialinvoke $r4.<java.awt.BasicStroke: void <init>(float,int,int)>($f27, 0, 1);

        virtualinvoke r5.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r4);

     label8:
        return;
    }

    private void setPenColor(org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore, java.awt.Graphics2D, int)
    {
        java.awt.Color $r4;
        java.awt.Graphics2D r2;
        org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore r0;
        int i0;
        java.lang.Object $r3;
        org.apache.batik.transcoder.wmf.tosvg.GdiObject $r1;
        org.apache.batik.transcoder.wmf.tosvg.WMFPainter r5;

        r5 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFPainter;

        r0 := @parameter0: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore;

        r2 := @parameter1: java.awt.Graphics2D;

        i0 := @parameter2: int;

        if i0 < 0 goto label1;

        $r1 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: org.apache.batik.transcoder.wmf.tosvg.GdiObject getObject(int)>(i0);

        $r3 = $r1.<org.apache.batik.transcoder.wmf.tosvg.GdiObject: java.lang.Object obj>;

        $r4 = (java.awt.Color) $r3;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r4);

     label1:
        return;
    }

    private int getHorizontalAlignement(int)
    {
        int i0, i1, i2;
        org.apache.batik.transcoder.wmf.tosvg.WMFPainter r0;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFPainter;

        i0 := @parameter0: int;

        i1 = i0 % 24;

        i2 = i1 % 8;

        if i2 < 6 goto label1;

        return 6;

     label1:
        if i2 < 2 goto label2;

        return 2;

     label2:
        return 0;
    }

    private void setBrushPaint(org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore, java.awt.Graphics2D, int)
    {
        java.awt.Color $r12;
        byte[] $r7;
        org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore r0;
        java.awt.Graphics2D r4;
        int i0;
        org.apache.batik.transcoder.wmf.tosvg.GdiObject $r1;
        boolean $z0, $z1;
        org.apache.batik.transcoder.wmf.tosvg.WMFPainter r5;
        java.awt.Paint $r8, $r10;
        java.lang.Object $r2, $r3, $r6, $r9, $r11;

        r5 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFPainter;

        r0 := @parameter0: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore;

        r4 := @parameter1: java.awt.Graphics2D;

        i0 := @parameter2: int;

        if i0 < 0 goto label3;

        $r1 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: org.apache.batik.transcoder.wmf.tosvg.GdiObject getObject(int)>(i0);

        $r2 = $r1.<org.apache.batik.transcoder.wmf.tosvg.GdiObject: java.lang.Object obj>;

        $z0 = $r2 instanceof java.awt.Color;

        if $z0 == 0 goto label1;

        $r11 = $r1.<org.apache.batik.transcoder.wmf.tosvg.GdiObject: java.lang.Object obj>;

        $r12 = (java.awt.Color) $r11;

        virtualinvoke r4.<java.awt.Graphics: void setColor(java.awt.Color)>($r12);

        goto label3;

     label1:
        $r3 = $r1.<org.apache.batik.transcoder.wmf.tosvg.GdiObject: java.lang.Object obj>;

        $z1 = $r3 instanceof java.awt.Paint;

        if $z1 == 0 goto label2;

        $r9 = $r1.<org.apache.batik.transcoder.wmf.tosvg.GdiObject: java.lang.Object obj>;

        $r10 = (java.awt.Paint) $r9;

        virtualinvoke r4.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r10);

        goto label3;

     label2:
        $r6 = $r1.<org.apache.batik.transcoder.wmf.tosvg.GdiObject: java.lang.Object obj>;

        $r7 = (byte[]) $r6;

        $r8 = specialinvoke r5.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.Paint getPaint(byte[])>($r7);

        virtualinvoke r4.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r8);

     label3:
        return;
    }

    private java.awt.Paint getStoredPaint(org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore, int)
    {
        byte[] $r5;
        org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore r0;
        org.apache.batik.transcoder.wmf.tosvg.WMFPainter r3;
        java.awt.Paint $r6, $r8;
        int i0;
        java.lang.Object $r2, $r4, $r7;
        org.apache.batik.transcoder.wmf.tosvg.GdiObject $r1;
        boolean $z0;

        r3 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFPainter;

        r0 := @parameter0: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore;

        i0 := @parameter1: int;

        if i0 < 0 goto label2;

        $r1 = virtualinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFReader: org.apache.batik.transcoder.wmf.tosvg.GdiObject getObject(int)>(i0);

        $r2 = $r1.<org.apache.batik.transcoder.wmf.tosvg.GdiObject: java.lang.Object obj>;

        $z0 = $r2 instanceof java.awt.Paint;

        if $z0 == 0 goto label1;

        $r7 = $r1.<org.apache.batik.transcoder.wmf.tosvg.GdiObject: java.lang.Object obj>;

        $r8 = (java.awt.Paint) $r7;

        return $r8;

     label1:
        $r4 = $r1.<org.apache.batik.transcoder.wmf.tosvg.GdiObject: java.lang.Object obj>;

        $r5 = (byte[]) $r4;

        $r6 = specialinvoke r3.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.Paint getPaint(byte[])>($r5);

        return $r6;

     label2:
        return null;
    }

    private void paint(int, int, java.awt.Shape, java.awt.Graphics2D)
    {
        java.awt.Color $r6, $r10;
        org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore $r1, $r4, $r7, $r9;
        java.awt.Graphics2D r3;
        int i0, i1;
        boolean $z0, $z1, $z2, $z3;
        java.awt.Shape r5;
        org.apache.batik.transcoder.wmf.tosvg.WMFPainter r0;
        java.awt.Paint $r2, $r8;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFPainter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r5 := @parameter2: java.awt.Shape;

        r3 := @parameter3: java.awt.Graphics2D;

        if i0 < 0 goto label2;

        $r7 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        $r8 = specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.Paint getStoredPaint(org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore,int)>($r7, i0);

        $z2 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: boolean firstEffectivePaint>;

        if $z2 == 0 goto label1;

        $r10 = <java.awt.Color: java.awt.Color white>;

        $z3 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r10);

        if $z3 != 0 goto label2;

     label1:
        $r9 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: void setBrushPaint(org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore,java.awt.Graphics2D,int)>($r9, r3, i0);

        virtualinvoke r3.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r5);

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: boolean firstEffectivePaint> = 0;

     label2:
        if i1 < 0 goto label4;

        $r1 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        $r2 = specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.Paint getStoredPaint(org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore,int)>($r1, i1);

        $z0 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: boolean firstEffectivePaint>;

        if $z0 == 0 goto label3;

        $r6 = <java.awt.Color: java.awt.Color white>;

        $z1 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label4;

     label3:
        $r4 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: void setPenColor(org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore,java.awt.Graphics2D,int)>($r4, r3, i1);

        virtualinvoke r3.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r5);

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: boolean firstEffectivePaint> = 0;

     label4:
        return;
    }

    private void paintWithPen(int, java.awt.Shape, java.awt.Graphics2D)
    {
        java.awt.Shape r5;
        java.awt.Color $r6;
        org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore $r1, $r4;
        org.apache.batik.transcoder.wmf.tosvg.WMFPainter r0;
        java.awt.Paint $r2;
        java.awt.Graphics2D r3;
        int i0;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFPainter;

        i0 := @parameter0: int;

        r5 := @parameter1: java.awt.Shape;

        r3 := @parameter2: java.awt.Graphics2D;

        if i0 < 0 goto label2;

        $r1 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        $r2 = specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.Paint getStoredPaint(org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore,int)>($r1, i0);

        $z0 = r0.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: boolean firstEffectivePaint>;

        if $z0 == 0 goto label1;

        $r6 = <java.awt.Color: java.awt.Color white>;

        $z1 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label2;

     label1:
        $r4 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        specialinvoke r0.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: void setPenColor(org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore,java.awt.Graphics2D,int)>($r4, r3, i0);

        virtualinvoke r3.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r5);

        r0.<org.apache.batik.transcoder.wmf.tosvg.WMFPainter: boolean firstEffectivePaint> = 0;

     label2:
        return;
    }

    private float getVerticalAlignmentValue(java.awt.font.TextLayout, int)
    {
        java.awt.font.TextLayout r0;
        int i0;
        float $f0, $f1, $f2;
        org.apache.batik.transcoder.wmf.tosvg.WMFPainter r1;

        r1 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFPainter;

        r0 := @parameter0: java.awt.font.TextLayout;

        i0 := @parameter1: int;

        if i0 != 8 goto label1;

        $f1 = virtualinvoke r0.<java.awt.font.TextLayout: float getDescent()>();

        $f2 = neg $f1;

        return $f2;

     label1:
        if i0 != 0 goto label2;

        $f0 = virtualinvoke r0.<java.awt.font.TextLayout: float getAscent()>();

        return $f0;

     label2:
        return 0.0F;
    }

    public org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore getRecordStore()
    {
        org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore $r1;
        org.apache.batik.transcoder.wmf.tosvg.WMFPainter r0;

        r0 := @this: org.apache.batik.transcoder.wmf.tosvg.WMFPainter;

        $r1 = r0.<org.apache.batik.transcoder.wmf.tosvg.AbstractWMFPainter: org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore currentStore>;

        return $r1;
    }

    static void <clinit>()
    {
        java.awt.BasicStroke $r1, $r2;
        java.lang.Integer $r0;

        <org.apache.batik.transcoder.wmf.tosvg.WMFPainter: int INPUT_BUFFER_SIZE> = 30720;

        $r0 = new java.lang.Integer;

        specialinvoke $r0.<java.lang.Integer: void <init>(int)>(0);

        <org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.lang.Integer INTEGER_0> = $r0;

        $r1 = new java.awt.BasicStroke;

        specialinvoke $r1.<java.awt.BasicStroke: void <init>(float,int,int)>(1.0F, 0, 1);

        <org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.BasicStroke solid> = $r1;

        $r2 = new java.awt.BasicStroke;

        specialinvoke $r2.<java.awt.BasicStroke: void <init>(float,int,int)>(1.0F, 0, 1);

        <org.apache.batik.transcoder.wmf.tosvg.WMFPainter: java.awt.BasicStroke textSolid> = $r2;

        return;
    }
}
