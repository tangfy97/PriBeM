public class com.hp.hpl.jena.sparql.algebra.optimize.TransformPathFlattern extends com.hp.hpl.jena.sparql.algebra.TransformCopy
{
    private com.hp.hpl.jena.sparql.path.PathCompiler pathCompiler;

    public void <init>()
    {
        com.hp.hpl.jena.sparql.algebra.optimize.TransformPathFlattern r0;
        com.hp.hpl.jena.sparql.path.PathCompiler $r1;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.optimize.TransformPathFlattern;

        $r1 = new com.hp.hpl.jena.sparql.path.PathCompiler;

        specialinvoke $r1.<com.hp.hpl.jena.sparql.path.PathCompiler: void <init>()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.algebra.optimize.TransformPathFlattern: void <init>(com.hp.hpl.jena.sparql.path.PathCompiler)>($r1);

        return;
    }

    public void <init>(com.hp.hpl.jena.sparql.path.PathCompiler)
    {
        com.hp.hpl.jena.sparql.algebra.optimize.TransformPathFlattern r0;
        com.hp.hpl.jena.sparql.path.PathCompiler r1;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.optimize.TransformPathFlattern;

        r1 := @parameter0: com.hp.hpl.jena.sparql.path.PathCompiler;

        specialinvoke r0.<com.hp.hpl.jena.sparql.algebra.TransformCopy: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.algebra.optimize.TransformPathFlattern: com.hp.hpl.jena.sparql.path.PathCompiler pathCompiler> = r1;

        return;
    }

    public com.hp.hpl.jena.sparql.algebra.Op transform(com.hp.hpl.jena.sparql.algebra.op.OpPath)
    {
        com.hp.hpl.jena.sparql.core.PathBlock $r4;
        com.hp.hpl.jena.sparql.algebra.op.OpPath r1;
        com.hp.hpl.jena.sparql.algebra.optimize.TransformPathFlattern r0;
        com.hp.hpl.jena.sparql.path.PathCompiler $r2;
        com.hp.hpl.jena.sparql.core.TriplePath $r3;
        com.hp.hpl.jena.sparql.algebra.Op $r5;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.optimize.TransformPathFlattern;

        r1 := @parameter0: com.hp.hpl.jena.sparql.algebra.op.OpPath;

        $r2 = r0.<com.hp.hpl.jena.sparql.algebra.optimize.TransformPathFlattern: com.hp.hpl.jena.sparql.path.PathCompiler pathCompiler>;

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpPath: com.hp.hpl.jena.sparql.core.TriplePath getTriplePath()>();

        $r4 = virtualinvoke $r2.<com.hp.hpl.jena.sparql.path.PathCompiler: com.hp.hpl.jena.sparql.core.PathBlock reduce(com.hp.hpl.jena.sparql.core.TriplePath)>($r3);

        $r5 = staticinvoke <com.hp.hpl.jena.sparql.path.PathLib: com.hp.hpl.jena.sparql.algebra.Op pathToTriples(com.hp.hpl.jena.sparql.core.PathBlock)>($r4);

        return $r5;
    }
}
