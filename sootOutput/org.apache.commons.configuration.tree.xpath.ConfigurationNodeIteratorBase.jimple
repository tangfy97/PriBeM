abstract class org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase extends java.lang.Object implements org.apache.commons.jxpath.ri.model.NodeIterator
{
    private org.apache.commons.jxpath.ri.model.NodePointer parent;
    private java.util.List subNodes;
    private int position;
    private int startOffset;
    private boolean reverse;

    protected void <init>(org.apache.commons.jxpath.ri.model.NodePointer, boolean)
    {
        org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase r0;
        org.apache.commons.jxpath.ri.model.NodePointer r1;
        boolean z0;

        r0 := @this: org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase;

        r1 := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase: org.apache.commons.jxpath.ri.model.NodePointer parent> = r1;

        r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase: boolean reverse> = z0;

        return;
    }

    public int getPosition()
    {
        int $i0;
        org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase r0;

        r0 := @this: org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase;

        $i0 = r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase: int position>;

        return $i0;
    }

    public boolean setPosition(int)
    {
        int i0, $i1;
        org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase;

        i0 := @parameter0: int;

        r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase: int position> = i0;

        if i0 < 1 goto label1;

        $i1 = virtualinvoke r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase: int getMaxPosition()>();

        if i0 > $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.apache.commons.jxpath.ri.model.NodePointer getNodePointer()
    {
        org.apache.commons.configuration.tree.ConfigurationNode $r3;
        java.util.List $r1;
        org.apache.commons.jxpath.ri.model.NodePointer $r4;
        int $i0, $i1, $i2;
        org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase r0;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase;

        $i0 = virtualinvoke r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase: int getPosition()>();

        if $i0 >= 1 goto label1;

        $z0 = virtualinvoke r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase: boolean setPosition(int)>(1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase: java.util.List subNodes>;

        $i1 = virtualinvoke r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase: int getPosition()>();

        $i2 = virtualinvoke r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase: int positionToIndex(int)>($i1);

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i2);

        $r3 = (org.apache.commons.configuration.tree.ConfigurationNode) $r2;

        $r4 = virtualinvoke r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase: org.apache.commons.jxpath.ri.model.NodePointer createNodePointer(org.apache.commons.configuration.tree.ConfigurationNode)>($r3);

        return $r4;
    }

    protected org.apache.commons.jxpath.ri.model.NodePointer getParent()
    {
        org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase r0;
        org.apache.commons.jxpath.ri.model.NodePointer $r1;

        r0 := @this: org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase;

        $r1 = r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase: org.apache.commons.jxpath.ri.model.NodePointer parent>;

        return $r1;
    }

    protected int getStartOffset()
    {
        int $i0;
        org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase r0;

        r0 := @this: org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase;

        $i0 = r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase: int startOffset>;

        return $i0;
    }

    protected void setStartOffset(int)
    {
        int i0, $i1, $i2, $i3, $i4;
        org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase;

        i0 := @parameter0: int;

        r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase: int startOffset> = i0;

        $z0 = r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase: boolean reverse>;

        if $z0 == 0 goto label1;

        $i3 = r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase: int startOffset>;

        $i4 = $i3 - 1;

        r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase: int startOffset> = $i4;

        goto label2;

     label1:
        $i1 = r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase: int startOffset>;

        $i2 = $i1 + 1;

        r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase: int startOffset> = $i2;

     label2:
        return;
    }

    protected void initSubNodeList(java.util.List)
    {
        java.util.List r1, $r2;
        int $i0;
        org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase;

        r1 := @parameter0: java.util.List;

        r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase: java.util.List subNodes> = r1;

        $z0 = r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase: boolean reverse>;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase: java.util.List subNodes>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        virtualinvoke r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase: void setStartOffset(int)>($i0);

     label1:
        return;
    }

    protected int getMaxPosition()
    {
        java.util.List $r1;
        int $i0, $i1, $i2, $i3;
        org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase;

        $z0 = r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase: boolean reverse>;

        if $z0 == 0 goto label1;

        $i2 = virtualinvoke r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase: int getStartOffset()>();

        $i3 = $i2 + 1;

        goto label2;

     label1:
        $r1 = r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase: java.util.List subNodes>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = virtualinvoke r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase: int getStartOffset()>();

        $i3 = $i0 - $i1;

     label2:
        return $i3;
    }

    protected org.apache.commons.jxpath.ri.model.NodePointer createNodePointer(org.apache.commons.configuration.tree.ConfigurationNode)
    {
        org.apache.commons.jxpath.ri.model.NodePointer $r2;
        org.apache.commons.configuration.tree.xpath.ConfigurationNodePointer $r0;
        org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase r1;
        org.apache.commons.configuration.tree.ConfigurationNode r3;

        r1 := @this: org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase;

        r3 := @parameter0: org.apache.commons.configuration.tree.ConfigurationNode;

        $r0 = new org.apache.commons.configuration.tree.xpath.ConfigurationNodePointer;

        $r2 = virtualinvoke r1.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase: org.apache.commons.jxpath.ri.model.NodePointer getParent()>();

        specialinvoke $r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.configuration.tree.ConfigurationNode)>($r2, r3);

        return $r0;
    }

    protected int positionToIndex(int)
    {
        int i0, $i1, $i2, $i3;
        org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase;

        i0 := @parameter0: int;

        $z0 = r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase: boolean reverse>;

        if $z0 == 0 goto label1;

        $i3 = 1 - i0;

        goto label2;

     label1:
        $i3 = i0 - 1;

     label2:
        $i1 = virtualinvoke r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase: int getStartOffset()>();

        $i2 = $i3 + $i1;

        return $i2;
    }
}
