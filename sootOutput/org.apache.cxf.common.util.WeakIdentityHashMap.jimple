public class org.apache.cxf.common.util.WeakIdentityHashMap extends java.lang.Object implements java.util.Map
{
    private final java.lang.ref.ReferenceQueue queue;
    private java.util.Map backingStore;

    public void <init>()
    {
        org.apache.cxf.common.util.WeakIdentityHashMap r0;
        java.util.HashMap $r2;
        java.lang.ref.ReferenceQueue $r1;

        r0 := @this: org.apache.cxf.common.util.WeakIdentityHashMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.ref.ReferenceQueue;

        specialinvoke $r1.<java.lang.ref.ReferenceQueue: void <init>()>();

        r0.<org.apache.cxf.common.util.WeakIdentityHashMap: java.lang.ref.ReferenceQueue queue> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.cxf.common.util.WeakIdentityHashMap: java.util.Map backingStore> = $r2;

        return;
    }

    public void clear()
    {
        org.apache.cxf.common.util.WeakIdentityHashMap r0;
        java.util.Map $r1;

        r0 := @this: org.apache.cxf.common.util.WeakIdentityHashMap;

        $r1 = r0.<org.apache.cxf.common.util.WeakIdentityHashMap: java.util.Map backingStore>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        specialinvoke r0.<org.apache.cxf.common.util.WeakIdentityHashMap: void reap()>();

        return;
    }

    public boolean containsKey(java.lang.Object)
    {
        org.apache.cxf.common.util.WeakIdentityHashMap r0;
        java.util.Map $r3;
        java.lang.Object r2;
        org.apache.cxf.common.util.WeakIdentityHashMap$IdentityWeakReference $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.common.util.WeakIdentityHashMap;

        r2 := @parameter0: java.lang.Object;

        specialinvoke r0.<org.apache.cxf.common.util.WeakIdentityHashMap: void reap()>();

        $r3 = r0.<org.apache.cxf.common.util.WeakIdentityHashMap: java.util.Map backingStore>;

        $r1 = new org.apache.cxf.common.util.WeakIdentityHashMap$IdentityWeakReference;

        specialinvoke $r1.<org.apache.cxf.common.util.WeakIdentityHashMap$IdentityWeakReference: void <init>(org.apache.cxf.common.util.WeakIdentityHashMap,java.lang.Object)>(r0, r2);

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        org.apache.cxf.common.util.WeakIdentityHashMap r0;
        java.util.Map $r2;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.common.util.WeakIdentityHashMap;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<org.apache.cxf.common.util.WeakIdentityHashMap: void reap()>();

        $r2 = r0.<org.apache.cxf.common.util.WeakIdentityHashMap: java.util.Map backingStore>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsValue(java.lang.Object)>(r1);

        return $z0;
    }

    public java.util.Set entrySet()
    {
        java.util.Map$Entry r7;
        java.util.Iterator $r4;
        java.util.Set $r3, $r5;
        org.apache.cxf.common.util.WeakIdentityHashMap$IdentityWeakReference $r9;
        org.apache.cxf.common.util.WeakIdentityHashMap$1 $r12;
        java.util.HashSet $r1;
        org.apache.cxf.common.util.WeakIdentityHashMap r0;
        java.util.Map $r2;
        java.lang.Object $r6, $r8, $r10, $r11;
        boolean $z0;

        r0 := @this: org.apache.cxf.common.util.WeakIdentityHashMap;

        specialinvoke r0.<org.apache.cxf.common.util.WeakIdentityHashMap: void reap()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        $r2 = r0.<org.apache.cxf.common.util.WeakIdentityHashMap: java.util.Map backingStore>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (org.apache.cxf.common.util.WeakIdentityHashMap$IdentityWeakReference) $r8;

        $r10 = virtualinvoke $r9.<org.apache.cxf.common.util.WeakIdentityHashMap$IdentityWeakReference: java.lang.Object get()>();

        $r11 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = new org.apache.cxf.common.util.WeakIdentityHashMap$1;

        specialinvoke $r12.<org.apache.cxf.common.util.WeakIdentityHashMap$1: void <init>(org.apache.cxf.common.util.WeakIdentityHashMap,java.lang.Object,java.lang.Object)>(r0, $r10, $r11);

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r12);

        goto label1;

     label2:
        $r5 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r1);

        return $r5;
    }

    public java.util.Set keySet()
    {
        java.util.Iterator $r4;
        java.util.Set $r3, $r5;
        org.apache.cxf.common.util.WeakIdentityHashMap$IdentityWeakReference r7;
        java.util.HashSet $r1;
        org.apache.cxf.common.util.WeakIdentityHashMap r0;
        java.util.Map $r2;
        java.lang.Object $r6, $r8;
        boolean $z0;

        r0 := @this: org.apache.cxf.common.util.WeakIdentityHashMap;

        specialinvoke r0.<org.apache.cxf.common.util.WeakIdentityHashMap: void reap()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        $r2 = r0.<org.apache.cxf.common.util.WeakIdentityHashMap: java.util.Map backingStore>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.cxf.common.util.WeakIdentityHashMap$IdentityWeakReference) $r6;

        $r8 = virtualinvoke r7.<org.apache.cxf.common.util.WeakIdentityHashMap$IdentityWeakReference: java.lang.Object get()>();

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r8);

        goto label1;

     label2:
        $r5 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r1);

        return $r5;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.cxf.common.util.WeakIdentityHashMap r1, r2;
        java.util.Map $r3, $r4;
        java.lang.Object r0;
        boolean $z0, $z1;

        r2 := @this: org.apache.cxf.common.util.WeakIdentityHashMap;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.cxf.common.util.WeakIdentityHashMap;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (org.apache.cxf.common.util.WeakIdentityHashMap) r0;

        $r4 = r2.<org.apache.cxf.common.util.WeakIdentityHashMap: java.util.Map backingStore>;

        $r3 = r1.<org.apache.cxf.common.util.WeakIdentityHashMap: java.util.Map backingStore>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        return $z1;
    }

    public java.lang.Object get(java.lang.Object)
    {
        org.apache.cxf.common.util.WeakIdentityHashMap r0;
        java.util.Map $r3;
        java.lang.Object r2, $r4;
        org.apache.cxf.common.util.WeakIdentityHashMap$IdentityWeakReference $r1;

        r0 := @this: org.apache.cxf.common.util.WeakIdentityHashMap;

        r2 := @parameter0: java.lang.Object;

        specialinvoke r0.<org.apache.cxf.common.util.WeakIdentityHashMap: void reap()>();

        $r3 = r0.<org.apache.cxf.common.util.WeakIdentityHashMap: java.util.Map backingStore>;

        $r1 = new org.apache.cxf.common.util.WeakIdentityHashMap$IdentityWeakReference;

        specialinvoke $r1.<org.apache.cxf.common.util.WeakIdentityHashMap$IdentityWeakReference: void <init>(org.apache.cxf.common.util.WeakIdentityHashMap,java.lang.Object)>(r0, r2);

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        return $r4;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        org.apache.cxf.common.util.WeakIdentityHashMap r0;
        java.util.Map $r3;
        java.lang.Object r2, r4, $r5;
        org.apache.cxf.common.util.WeakIdentityHashMap$IdentityWeakReference $r1;

        r0 := @this: org.apache.cxf.common.util.WeakIdentityHashMap;

        r2 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.apache.cxf.common.util.WeakIdentityHashMap: void reap()>();

        $r3 = r0.<org.apache.cxf.common.util.WeakIdentityHashMap: java.util.Map backingStore>;

        $r1 = new org.apache.cxf.common.util.WeakIdentityHashMap$IdentityWeakReference;

        specialinvoke $r1.<org.apache.cxf.common.util.WeakIdentityHashMap$IdentityWeakReference: void <init>(org.apache.cxf.common.util.WeakIdentityHashMap,java.lang.Object)>(r0, r2);

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r4);

        return $r5;
    }

    public int hashCode()
    {
        int $i0;
        org.apache.cxf.common.util.WeakIdentityHashMap r0;
        java.util.Map $r1;

        r0 := @this: org.apache.cxf.common.util.WeakIdentityHashMap;

        specialinvoke r0.<org.apache.cxf.common.util.WeakIdentityHashMap: void reap()>();

        $r1 = r0.<org.apache.cxf.common.util.WeakIdentityHashMap: java.util.Map backingStore>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public boolean isEmpty()
    {
        org.apache.cxf.common.util.WeakIdentityHashMap r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.common.util.WeakIdentityHashMap;

        specialinvoke r0.<org.apache.cxf.common.util.WeakIdentityHashMap: void reap()>();

        $r1 = r0.<org.apache.cxf.common.util.WeakIdentityHashMap: java.util.Map backingStore>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        return $z0;
    }

    public void putAll(java.util.Map)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.cxf.common.util.WeakIdentityHashMap r1;
        java.util.Map r2;

        r1 := @this: org.apache.cxf.common.util.WeakIdentityHashMap;

        r2 := @parameter0: java.util.Map;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        org.apache.cxf.common.util.WeakIdentityHashMap r0;
        java.util.Map $r3;
        java.lang.Object r2, $r4;
        org.apache.cxf.common.util.WeakIdentityHashMap$IdentityWeakReference $r1;

        r0 := @this: org.apache.cxf.common.util.WeakIdentityHashMap;

        r2 := @parameter0: java.lang.Object;

        specialinvoke r0.<org.apache.cxf.common.util.WeakIdentityHashMap: void reap()>();

        $r3 = r0.<org.apache.cxf.common.util.WeakIdentityHashMap: java.util.Map backingStore>;

        $r1 = new org.apache.cxf.common.util.WeakIdentityHashMap$IdentityWeakReference;

        specialinvoke $r1.<org.apache.cxf.common.util.WeakIdentityHashMap$IdentityWeakReference: void <init>(org.apache.cxf.common.util.WeakIdentityHashMap,java.lang.Object)>(r0, r2);

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

        return $r4;
    }

    public int size()
    {
        int $i0;
        org.apache.cxf.common.util.WeakIdentityHashMap r0;
        java.util.Map $r1;

        r0 := @this: org.apache.cxf.common.util.WeakIdentityHashMap;

        specialinvoke r0.<org.apache.cxf.common.util.WeakIdentityHashMap: void reap()>();

        $r1 = r0.<org.apache.cxf.common.util.WeakIdentityHashMap: java.util.Map backingStore>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    public java.util.Collection values()
    {
        org.apache.cxf.common.util.WeakIdentityHashMap r0;
        java.util.Map $r1;
        java.util.Collection $r2;

        r0 := @this: org.apache.cxf.common.util.WeakIdentityHashMap;

        specialinvoke r0.<org.apache.cxf.common.util.WeakIdentityHashMap: void reap()>();

        $r1 = r0.<org.apache.cxf.common.util.WeakIdentityHashMap: java.util.Map backingStore>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        return $r2;
    }

    private synchronized void reap()
    {
        java.lang.ref.Reference r4;
        org.apache.cxf.common.util.WeakIdentityHashMap r0;
        java.util.Map $r2;
        java.lang.ref.ReferenceQueue $r1, $r3;

        r0 := @this: org.apache.cxf.common.util.WeakIdentityHashMap;

        $r1 = r0.<org.apache.cxf.common.util.WeakIdentityHashMap: java.lang.ref.ReferenceQueue queue>;

        r4 = virtualinvoke $r1.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>();

     label1:
        if r4 == null goto label2;

        $r2 = r0.<org.apache.cxf.common.util.WeakIdentityHashMap: java.util.Map backingStore>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r4);

        $r3 = r0.<org.apache.cxf.common.util.WeakIdentityHashMap: java.lang.ref.ReferenceQueue queue>;

        r4 = virtualinvoke $r3.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>();

        goto label1;

     label2:
        return;
    }

    static java.lang.ref.ReferenceQueue access$000(org.apache.cxf.common.util.WeakIdentityHashMap)
    {
        org.apache.cxf.common.util.WeakIdentityHashMap r0;
        java.lang.ref.ReferenceQueue $r1;

        r0 := @parameter0: org.apache.cxf.common.util.WeakIdentityHashMap;

        $r1 = r0.<org.apache.cxf.common.util.WeakIdentityHashMap: java.lang.ref.ReferenceQueue queue>;

        return $r1;
    }
}
