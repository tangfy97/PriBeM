public class org.apache.batik.ext.awt.image.rendered.TileCacheRed extends org.apache.batik.ext.awt.image.rendered.AbstractTiledRed
{

    public void <init>(org.apache.batik.ext.awt.image.rendered.CachableRed)
    {
        org.apache.batik.ext.awt.image.rendered.CachableRed r1;
        org.apache.batik.ext.awt.image.rendered.TileCacheRed r0;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.TileCacheRed;

        r1 := @parameter0: org.apache.batik.ext.awt.image.rendered.CachableRed;

        specialinvoke r0.<org.apache.batik.ext.awt.image.rendered.AbstractTiledRed: void <init>(org.apache.batik.ext.awt.image.rendered.CachableRed,java.util.Map)>(r1, null);

        return;
    }

    public void <init>(org.apache.batik.ext.awt.image.rendered.CachableRed, int, int)
    {
        java.awt.Rectangle $r3;
        java.awt.image.SampleModel $r4;
        org.apache.batik.ext.awt.image.rendered.CachableRed r1;
        java.awt.image.ColorModel $r2;
        int $i0, $i1, $i2, $i3, i4, i5;
        org.apache.batik.ext.awt.image.rendered.TileCacheRed r0;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.TileCacheRed;

        r1 := @parameter0: org.apache.batik.ext.awt.image.rendered.CachableRed;

        i4 := @parameter1: int;

        i5 := @parameter2: int;

        specialinvoke r0.<org.apache.batik.ext.awt.image.rendered.AbstractTiledRed: void <init>()>();

        $r2 = interfaceinvoke r1.<java.awt.image.RenderedImage: java.awt.image.ColorModel getColorModel()>();

        $r3 = interfaceinvoke r1.<org.apache.batik.ext.awt.image.rendered.CachableRed: java.awt.Rectangle getBounds()>();

        $i0 = $r3.<java.awt.Rectangle: int width>;

        if i4 <= $i0 goto label1;

        i4 = $r3.<java.awt.Rectangle: int width>;

     label1:
        $i1 = $r3.<java.awt.Rectangle: int height>;

        if i5 <= $i1 goto label2;

        i5 = $r3.<java.awt.Rectangle: int height>;

     label2:
        $r4 = virtualinvoke $r2.<java.awt.image.ColorModel: java.awt.image.SampleModel createCompatibleSampleModel(int,int)>(i4, i5);

        $i2 = interfaceinvoke r1.<java.awt.image.RenderedImage: int getTileGridXOffset()>();

        $i3 = interfaceinvoke r1.<java.awt.image.RenderedImage: int getTileGridYOffset()>();

        virtualinvoke r0.<org.apache.batik.ext.awt.image.rendered.AbstractTiledRed: void init(org.apache.batik.ext.awt.image.rendered.CachableRed,java.awt.Rectangle,java.awt.image.ColorModel,java.awt.image.SampleModel,int,int,java.util.Map)>(r1, $r3, $r2, $r4, $i2, $i3, null);

        return;
    }

    public void genRect(java.awt.image.WritableRaster)
    {
        java.util.Vector $r1;
        org.apache.batik.ext.awt.image.rendered.CachableRed r3;
        java.lang.Object $r2;
        java.awt.image.WritableRaster r4;
        org.apache.batik.ext.awt.image.rendered.TileCacheRed r0;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.TileCacheRed;

        r4 := @parameter0: java.awt.image.WritableRaster;

        $r1 = virtualinvoke r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: java.util.Vector getSources()>();

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object get(int)>(0);

        r3 = (org.apache.batik.ext.awt.image.rendered.CachableRed) $r2;

        interfaceinvoke r3.<java.awt.image.RenderedImage: java.awt.image.WritableRaster copyData(java.awt.image.WritableRaster)>(r4);

        return;
    }

    public void flushCache(java.awt.Rectangle)
    {
        org.apache.batik.ext.awt.image.rendered.TileStore $r2;
        org.apache.batik.ext.awt.image.rendered.TileCacheRed r0;
        java.awt.Rectangle r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i28, i29, i30, i31, i32, i33;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.TileCacheRed;

        r1 := @parameter0: java.awt.Rectangle;

        $i0 = r1.<java.awt.Rectangle: int x>;

        $i1 = virtualinvoke r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: int getXTile(int)>($i0);

        i28 = $i1;

        $i2 = r1.<java.awt.Rectangle: int y>;

        $i3 = virtualinvoke r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: int getYTile(int)>($i2);

        i29 = $i3;

        $i5 = r1.<java.awt.Rectangle: int x>;

        $i4 = r1.<java.awt.Rectangle: int width>;

        $i6 = $i5 + $i4;

        $i7 = $i6 - 1;

        $i8 = virtualinvoke r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: int getXTile(int)>($i7);

        i30 = $i8;

        $i10 = r1.<java.awt.Rectangle: int y>;

        $i9 = r1.<java.awt.Rectangle: int height>;

        $i11 = $i10 + $i9;

        $i12 = $i11 - 1;

        $i13 = virtualinvoke r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: int getYTile(int)>($i12);

        i31 = $i13;

        $i14 = r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: int minTileX>;

        if $i1 >= $i14 goto label01;

        i28 = r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: int minTileX>;

     label01:
        $i15 = r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: int minTileY>;

        if $i3 >= $i15 goto label02;

        i29 = r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: int minTileY>;

     label02:
        $i17 = r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: int minTileX>;

        $i16 = r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: int numXTiles>;

        $i18 = $i17 + $i16;

        if $i8 < $i18 goto label03;

        $i26 = r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: int minTileX>;

        $i25 = r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: int numXTiles>;

        $i27 = $i26 + $i25;

        i30 = $i27 - 1;

     label03:
        $i20 = r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: int minTileY>;

        $i19 = r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: int numYTiles>;

        $i21 = $i20 + $i19;

        if $i13 < $i21 goto label04;

        $i23 = r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: int minTileY>;

        $i22 = r0.<org.apache.batik.ext.awt.image.rendered.AbstractRed: int numYTiles>;

        $i24 = $i23 + $i22;

        i31 = $i24 - 1;

     label04:
        if i30 < i28 goto label05;

        if i31 >= i29 goto label06;

     label05:
        return;

     label06:
        $r2 = virtualinvoke r0.<org.apache.batik.ext.awt.image.rendered.AbstractTiledRed: org.apache.batik.ext.awt.image.rendered.TileStore getTileStore()>();

        i32 = i29;

        goto label10;

     label07:
        i33 = i28;

        goto label09;

     label08:
        interfaceinvoke $r2.<org.apache.batik.ext.awt.image.rendered.TileStore: void setTile(int,int,java.awt.image.Raster)>(i33, i32, null);

        i33 = i33 + 1;

     label09:
        if i33 <= i30 goto label08;

        i32 = i32 + 1;

     label10:
        if i32 <= i31 goto label07;

        return;
    }
}
