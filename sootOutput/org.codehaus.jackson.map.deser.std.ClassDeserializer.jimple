public class org.codehaus.jackson.map.deser.std.ClassDeserializer extends org.codehaus.jackson.map.deser.std.StdScalarDeserializer
{

    public void <init>()
    {
        org.codehaus.jackson.map.deser.std.ClassDeserializer r0;

        r0 := @this: org.codehaus.jackson.map.deser.std.ClassDeserializer;

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.StdScalarDeserializer: void <init>(java.lang.Class)>(class "Ljava/lang/Class;");

        return;
    }

    public java.lang.Class deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.JsonToken $r1, $r2;
        org.codehaus.jackson.map.DeserializationContext r3;
        org.codehaus.jackson.map.JsonMappingException $r6, $r11;
        java.lang.Class $r5, $r8, $r10;
        java.lang.ClassNotFoundException $r9;
        java.lang.String $r7;
        org.codehaus.jackson.JsonParser r0;
        org.codehaus.jackson.map.deser.std.ClassDeserializer r4;

        r4 := @this: org.codehaus.jackson.map.deser.std.ClassDeserializer;

        r0 := @parameter0: org.codehaus.jackson.JsonParser;

        r3 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r2 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_STRING>;

        if $r1 != $r2 goto label4;

        $r7 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: java.lang.String getText()>();

     label1:
        $r8 = staticinvoke <org.codehaus.jackson.map.util.ClassUtil: java.lang.Class findClass(java.lang.String)>($r7);

     label2:
        return $r8;

     label3:
        $r9 := @caughtexception;

        $r10 = r4.<org.codehaus.jackson.map.deser.std.ClassDeserializer: java.lang.Class _valueClass>;

        $r11 = virtualinvoke r3.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.Throwable)>($r10, $r9);

        throw $r11;

     label4:
        $r5 = r4.<org.codehaus.jackson.map.deser.std.ClassDeserializer: java.lang.Class _valueClass>;

        $r6 = virtualinvoke r3.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class,org.codehaus.jackson.JsonToken)>($r5, $r1);

        throw $r6;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public volatile java.lang.Object deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        java.lang.Class $r3;
        org.codehaus.jackson.JsonParser r1;
        org.codehaus.jackson.map.DeserializationContext r2;
        org.codehaus.jackson.map.deser.std.ClassDeserializer r0;

        r0 := @this: org.codehaus.jackson.map.deser.std.ClassDeserializer;

        r1 := @parameter0: org.codehaus.jackson.JsonParser;

        r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.ClassDeserializer: java.lang.Class deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r1, r2);

        return $r3;
    }
}
