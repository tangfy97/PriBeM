public class org.apache.tika.sax.ToTextContentHandler extends org.xml.sax.helpers.DefaultHandler
{
    private final java.io.Writer writer;

    public void <init>(java.io.Writer)
    {
        java.io.Writer r1;
        org.apache.tika.sax.ToTextContentHandler r0;

        r0 := @this: org.apache.tika.sax.ToTextContentHandler;

        r1 := @parameter0: java.io.Writer;

        specialinvoke r0.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        r0.<org.apache.tika.sax.ToTextContentHandler: java.io.Writer writer> = r1;

        return;
    }

    public void <init>(java.io.OutputStream)
    {
        java.io.OutputStream r2;
        java.nio.charset.Charset $r3;
        java.io.OutputStreamWriter $r1;
        org.apache.tika.sax.ToTextContentHandler r0;

        r0 := @this: org.apache.tika.sax.ToTextContentHandler;

        r2 := @parameter0: java.io.OutputStream;

        $r1 = new java.io.OutputStreamWriter;

        $r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();

        specialinvoke $r1.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>(r2, $r3);

        specialinvoke r0.<org.apache.tika.sax.ToTextContentHandler: void <init>(java.io.Writer)>($r1);

        return;
    }

    public void <init>(java.io.OutputStream, java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.io.OutputStream r2;
        java.io.OutputStreamWriter $r1;
        org.apache.tika.sax.ToTextContentHandler r0;
        java.lang.String r3;

        r0 := @this: org.apache.tika.sax.ToTextContentHandler;

        r2 := @parameter0: java.io.OutputStream;

        r3 := @parameter1: java.lang.String;

        $r1 = new java.io.OutputStreamWriter;

        specialinvoke $r1.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r2, r3);

        specialinvoke r0.<org.apache.tika.sax.ToTextContentHandler: void <init>(java.io.Writer)>($r1);

        return;
    }

    public void <init>()
    {
        org.apache.tika.sax.ToTextContentHandler r0;
        java.io.StringWriter $r1;

        r0 := @this: org.apache.tika.sax.ToTextContentHandler;

        $r1 = new java.io.StringWriter;

        specialinvoke $r1.<java.io.StringWriter: void <init>()>();

        specialinvoke r0.<org.apache.tika.sax.ToTextContentHandler: void <init>(java.io.Writer)>($r1);

        return;
    }

    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        java.io.IOException $r3;
        org.xml.sax.SAXException $r4;
        int i0, i1;
        java.io.Writer $r2;
        char[] r1;
        org.apache.tika.sax.ToTextContentHandler r0;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r7, $r9;

        r0 := @this: org.apache.tika.sax.ToTextContentHandler;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r2 = r0.<org.apache.tika.sax.ToTextContentHandler: java.io.Writer writer>;

        virtualinvoke $r2.<java.io.Writer: void write(char[],int,int)>(r1, i0, i1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.xml.sax.SAXException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error writing: ");

        $r7 = new java.lang.String;

        specialinvoke $r7.<java.lang.String: void <init>(char[],int,int)>(r1, i0, i1);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.xml.sax.SAXException: void <init>(java.lang.String,java.lang.Exception)>($r9, $r3);

        throw $r4;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void ignorableWhitespace(char[], int, int) throws org.xml.sax.SAXException
    {
        int i0, i1;
        char[] r1;
        org.apache.tika.sax.ToTextContentHandler r0;

        r0 := @this: org.apache.tika.sax.ToTextContentHandler;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<org.apache.tika.sax.ToTextContentHandler: void characters(char[],int,int)>(r1, i0, i1);

        return;
    }

    public void endDocument() throws org.xml.sax.SAXException
    {
        org.xml.sax.SAXException $r3;
        java.io.Writer $r1;
        org.apache.tika.sax.ToTextContentHandler r0;
        java.io.IOException $r2;

        r0 := @this: org.apache.tika.sax.ToTextContentHandler;

     label1:
        $r1 = r0.<org.apache.tika.sax.ToTextContentHandler: java.io.Writer writer>;

        virtualinvoke $r1.<java.io.Writer: void flush()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new org.xml.sax.SAXException;

        specialinvoke $r3.<org.xml.sax.SAXException: void <init>(java.lang.String,java.lang.Exception)>("Error flushing character output", $r2);

        throw $r3;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        java.io.Writer $r1;
        org.apache.tika.sax.ToTextContentHandler r0;
        java.lang.String $r2;

        r0 := @this: org.apache.tika.sax.ToTextContentHandler;

        $r1 = r0.<org.apache.tika.sax.ToTextContentHandler: java.io.Writer writer>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }
}
