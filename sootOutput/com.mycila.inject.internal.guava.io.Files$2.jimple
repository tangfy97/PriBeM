final class com.mycila.inject.internal.guava.io.Files$2 extends java.lang.Object implements com.mycila.inject.internal.guava.io.OutputSupplier
{
    final java.io.File val$file;
    final boolean val$append;

    void <init>(java.io.File, boolean)
    {
        com.mycila.inject.internal.guava.io.Files$2 r0;
        java.io.File r1;
        boolean z0;

        r0 := @this: com.mycila.inject.internal.guava.io.Files$2;

        r1 := @parameter0: java.io.File;

        z0 := @parameter1: boolean;

        r0.<com.mycila.inject.internal.guava.io.Files$2: java.io.File val$file> = r1;

        r0.<com.mycila.inject.internal.guava.io.Files$2: boolean val$append> = z0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.io.FileOutputStream getOutput() throws java.io.IOException
    {
        com.mycila.inject.internal.guava.io.Files$2 r1;
        java.io.FileOutputStream $r0;
        java.io.File $r2;
        boolean $z0;

        r1 := @this: com.mycila.inject.internal.guava.io.Files$2;

        $r0 = new java.io.FileOutputStream;

        $r2 = r1.<com.mycila.inject.internal.guava.io.Files$2: java.io.File val$file>;

        $z0 = r1.<com.mycila.inject.internal.guava.io.Files$2: boolean val$append>;

        specialinvoke $r0.<java.io.FileOutputStream: void <init>(java.io.File,boolean)>($r2, $z0);

        return $r0;
    }

    public volatile java.lang.Object getOutput() throws java.io.IOException
    {
        java.io.FileOutputStream $r1;
        com.mycila.inject.internal.guava.io.Files$2 r0;

        r0 := @this: com.mycila.inject.internal.guava.io.Files$2;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.io.Files$2: java.io.FileOutputStream getOutput()>();

        return $r1;
    }
}
