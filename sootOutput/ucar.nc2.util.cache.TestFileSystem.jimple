public class ucar.nc2.util.cache.TestFileSystem extends java.lang.Object
{
    static long touch;
    static boolean readLast;

    public void <init>()
    {
        ucar.nc2.util.cache.TestFileSystem r0;

        r0 := @this: ucar.nc2.util.cache.TestFileSystem;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    int readDir(java.io.File)
    {
        long $l1, $l3, $l4, $l5, $l6, $l7;
        int i0, $i2, $i8, i9, i10;
        java.lang.String $r3;
        boolean $z0, $z1;
        ucar.nc2.util.cache.TestFileSystem r4;
        java.io.File r0, r2;
        java.io.File[] $r1;

        r4 := @this: ucar.nc2.util.cache.TestFileSystem;

        r0 := @parameter0: java.io.File;

        $r1 = virtualinvoke r0.<java.io.File: java.io.File[] listFiles()>();

        if $r1 != null goto label1;

        return 0;

     label1:
        i9 = lengthof $r1;

        i0 = lengthof $r1;

        i10 = 0;

     label2:
        if i10 >= i0 goto label5;

        r2 = $r1[i10];

        $z0 = virtualinvoke r2.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label3;

        $i8 = virtualinvoke r4.<ucar.nc2.util.cache.TestFileSystem: int readDir(java.io.File)>(r2);

        i9 = i9 + $i8;

     label3:
        $z1 = <ucar.nc2.util.cache.TestFileSystem: boolean readLast>;

        if $z1 == 0 goto label4;

        $l5 = <ucar.nc2.util.cache.TestFileSystem: long touch>;

        $l6 = virtualinvoke r2.<java.io.File: long lastModified()>();

        $l7 = $l5 + $l6;

        <ucar.nc2.util.cache.TestFileSystem: long touch> = $l7;

     label4:
        $l1 = <ucar.nc2.util.cache.TestFileSystem: long touch>;

        $r3 = virtualinvoke r2.<java.io.File: java.lang.String getPath()>();

        $i2 = virtualinvoke $r3.<java.lang.String: int hashCode()>();

        $l3 = (long) $i2;

        $l4 = $l1 + $l3;

        <ucar.nc2.util.cache.TestFileSystem: long touch> = $l4;

        i10 = i10 + 1;

        goto label2;

     label5:
        return i9;
    }

    int timeDir(java.io.File)
    {
        java.lang.Object[] $r0, $r6;
        java.lang.Double $r10;
        long $l1, $l3, $l4, $l5;
        java.lang.Integer $r9;
        int i0, $i2, i6, i7;
        java.lang.String $r8;
        boolean $z0;
        ucar.nc2.util.cache.TestFileSystem r5;
        double $d0, $d1;
        java.io.PrintStream $r1, $r7;
        java.io.File r2, r4;
        java.io.File[] $r3;

        r5 := @this: ucar.nc2.util.cache.TestFileSystem;

        r2 := @parameter0: java.io.File;

        i6 = 0;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = newarray (java.lang.Object)[0];

        virtualinvoke $r1.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("file                     count  msecs%n", $r0);

        $r3 = virtualinvoke r2.<java.io.File: java.io.File[] listFiles()>();

        i0 = lengthof $r3;

        i7 = 0;

     label1:
        if i7 >= i0 goto label3;

        r4 = $r3[i7];

        $z0 = virtualinvoke r4.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label2;

        $l1 = staticinvoke <java.lang.System: long nanoTime()>();

        $i2 = virtualinvoke r5.<ucar.nc2.util.cache.TestFileSystem: int readDir(java.io.File)>(r4);

        $l3 = staticinvoke <java.lang.System: long nanoTime()>();

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = newarray (java.lang.Object)[3];

        $r8 = virtualinvoke r4.<java.io.File: java.lang.String getPath()>();

        $r6[0] = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r6[1] = $r9;

        $l4 = $l3 - $l1;

        $l5 = $l4 / 1000L;

        $d0 = (double) $l5;

        $d1 = $d0 / 1000.0;

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r6[2] = $r10;

        virtualinvoke $r7.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%-20s, %8d, %f%n", $r6);

        i6 = i6 + $i2;

     label2:
        i7 = i7 + 1;

        goto label1;

     label3:
        return i6;
    }

    public static void main(java.lang.String[])
    {
        java.lang.Integer $r7;
        java.lang.Long $r11;
        ucar.nc2.util.cache.TestFileSystem $r3;
        boolean $z0, $z1, $z2;
        java.lang.Object[] $r1, $r5, $r9, $r13, $r17, $r21;
        java.lang.Double $r8;
        java.lang.String[] r0;
        long $l1, $l3, $l4, $l5, $l6;
        int $i0, $i2, $i7, $i8, i9;
        java.lang.String $r12, $r15, $r16, $r19, $r20, r23, $r24;
        double $d0, $d1;
        java.io.PrintStream $r2, $r6, $r10, $r14, $r18, $r22;
        java.io.File $r4;

        r0 := @parameter0: java.lang.String[];

        r23 = "C:/";

        i9 = 0;

     label1:
        $i0 = lengthof r0;

        if i9 >= $i0 goto label5;

        $r12 = r0[i9];

        $z0 = virtualinvoke $r12.<java.lang.String: boolean startsWith(java.lang.String)>("root");

        if $z0 == 0 goto label3;

        $r15 = r0[i9];

        $i7 = virtualinvoke $r15.<java.lang.String: int indexOf(int)>(61);

        if $i7 <= 0 goto label2;

        $r19 = r0[i9];

        $i8 = $i7 + 1;

        $r20 = virtualinvoke $r19.<java.lang.String: java.lang.String substring(int)>($i8);

        r23 = $r20;

        $r22 = <java.lang.System: java.io.PrintStream out>;

        $r21 = newarray (java.lang.Object)[1];

        $r21[0] = $r20;

        virtualinvoke $r22.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("root=%s ", $r21);

     label2:
        $r16 = r0[i9];

        $z1 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>("usage");

        if $z1 == 0 goto label3;

        $r18 = <java.lang.System: java.io.PrintStream out>;

        $r17 = newarray (java.lang.Object)[0];

        virtualinvoke $r18.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("java -classpath {jar} ucar.nc2.util.cache.TestFileSystem root={rootDir} [readLastModified] -%n", $r17);

        staticinvoke <java.lang.System: void exit(int)>(0);

     label3:
        $r24 = r0[i9];

        $z2 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>("readLastModified");

        if $z2 == 0 goto label4;

        <ucar.nc2.util.cache.TestFileSystem: boolean readLast> = 1;

        $r14 = <java.lang.System: java.io.PrintStream out>;

        $r13 = newarray (java.lang.Object)[0];

        virtualinvoke $r14.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(" readLastModified ", $r13);

     label4:
        i9 = i9 + 1;

        goto label1;

     label5:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = newarray (java.lang.Object)[0];

        virtualinvoke $r2.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(" %n%n", $r1);

        $r3 = new ucar.nc2.util.cache.TestFileSystem;

        specialinvoke $r3.<ucar.nc2.util.cache.TestFileSystem: void <init>()>();

        $l1 = staticinvoke <java.lang.System: long nanoTime()>();

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>(r23);

        $i2 = virtualinvoke $r3.<ucar.nc2.util.cache.TestFileSystem: int timeDir(java.io.File)>($r4);

        $l3 = staticinvoke <java.lang.System: long nanoTime()>();

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r5 = newarray (java.lang.Object)[3];

        $r5[0] = r23;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r5[1] = $r7;

        $l4 = $l3 - $l1;

        $l5 = $l4 / 1000L;

        $d0 = (double) $l5;

        $d1 = $d0 / 1000.0;

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r5[2] = $r8;

        virtualinvoke $r6.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%n%-20s, %8d, %f usecs%n", $r5);

        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r9 = newarray (java.lang.Object)[1];

        $l6 = <ucar.nc2.util.cache.TestFileSystem: long touch>;

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);

        $r9[0] = $r11;

        virtualinvoke $r10.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("%n %d %n", $r9);

        return;
    }

    static void <clinit>()
    {
        <ucar.nc2.util.cache.TestFileSystem: long touch> = 0L;

        <ucar.nc2.util.cache.TestFileSystem: boolean readLast> = 0;

        return;
    }
}
