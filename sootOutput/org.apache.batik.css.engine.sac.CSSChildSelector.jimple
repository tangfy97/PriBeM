public class org.apache.batik.css.engine.sac.CSSChildSelector extends org.apache.batik.css.engine.sac.AbstractDescendantSelector
{

    public void <init>(org.w3c.css.sac.Selector, org.w3c.css.sac.SimpleSelector)
    {
        org.apache.batik.css.engine.sac.CSSChildSelector r0;
        org.w3c.css.sac.Selector r1;
        org.w3c.css.sac.SimpleSelector r2;

        r0 := @this: org.apache.batik.css.engine.sac.CSSChildSelector;

        r1 := @parameter0: org.w3c.css.sac.Selector;

        r2 := @parameter1: org.w3c.css.sac.SimpleSelector;

        specialinvoke r0.<org.apache.batik.css.engine.sac.AbstractDescendantSelector: void <init>(org.w3c.css.sac.Selector,org.w3c.css.sac.SimpleSelector)>(r1, r2);

        return;
    }

    public short getSelectorType()
    {
        org.apache.batik.css.engine.sac.CSSChildSelector r0;

        r0 := @this: org.apache.batik.css.engine.sac.CSSChildSelector;

        return 11;
    }

    public boolean match(org.w3c.dom.Element, java.lang.String)
    {
        org.w3c.css.sac.Selector $r3;
        short $s0;
        org.w3c.dom.Element r0, $r4;
        org.apache.batik.css.engine.sac.CSSChildSelector r2;
        org.w3c.css.sac.SimpleSelector $r6;
        org.w3c.dom.Node $r1;
        org.apache.batik.css.engine.sac.ExtendedSelector $r5, $r8;
        java.lang.String r7;
        boolean $z0, $z1, $z2;

        r2 := @this: org.apache.batik.css.engine.sac.CSSChildSelector;

        r0 := @parameter0: org.w3c.dom.Element;

        r7 := @parameter1: java.lang.String;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        if $r1 == null goto label3;

        $s0 = interfaceinvoke $r1.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 != 1 goto label3;

        $r3 = virtualinvoke r2.<org.apache.batik.css.engine.sac.AbstractDescendantSelector: org.w3c.css.sac.Selector getAncestorSelector()>();

        $r5 = (org.apache.batik.css.engine.sac.ExtendedSelector) $r3;

        $r4 = (org.w3c.dom.Element) $r1;

        $z0 = interfaceinvoke $r5.<org.apache.batik.css.engine.sac.ExtendedSelector: boolean match(org.w3c.dom.Element,java.lang.String)>($r4, null);

        if $z0 == 0 goto label1;

        $r6 = virtualinvoke r2.<org.apache.batik.css.engine.sac.AbstractDescendantSelector: org.w3c.css.sac.SimpleSelector getSimpleSelector()>();

        $r8 = (org.apache.batik.css.engine.sac.ExtendedSelector) $r6;

        $z1 = interfaceinvoke $r8.<org.apache.batik.css.engine.sac.ExtendedSelector: boolean match(org.w3c.dom.Element,java.lang.String)>(r0, r7);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;

     label3:
        return 0;
    }

    public void fillAttributeSet(java.util.Set)
    {
        org.apache.batik.css.engine.sac.CSSChildSelector r0;
        org.w3c.css.sac.SimpleSelector $r4;
        java.util.Set r2;
        org.apache.batik.css.engine.sac.ExtendedSelector $r3, $r5;
        org.w3c.css.sac.Selector $r1;

        r0 := @this: org.apache.batik.css.engine.sac.CSSChildSelector;

        r2 := @parameter0: java.util.Set;

        $r1 = virtualinvoke r0.<org.apache.batik.css.engine.sac.AbstractDescendantSelector: org.w3c.css.sac.Selector getAncestorSelector()>();

        $r3 = (org.apache.batik.css.engine.sac.ExtendedSelector) $r1;

        interfaceinvoke $r3.<org.apache.batik.css.engine.sac.ExtendedSelector: void fillAttributeSet(java.util.Set)>(r2);

        $r4 = virtualinvoke r0.<org.apache.batik.css.engine.sac.AbstractDescendantSelector: org.w3c.css.sac.SimpleSelector getSimpleSelector()>();

        $r5 = (org.apache.batik.css.engine.sac.ExtendedSelector) $r4;

        interfaceinvoke $r5.<org.apache.batik.css.engine.sac.ExtendedSelector: void fillAttributeSet(java.util.Set)>(r2);

        return;
    }

    public java.lang.String toString()
    {
        org.w3c.css.sac.Selector $r3, $r9;
        short $s0;
        org.apache.batik.css.engine.sac.CSSChildSelector r0;
        org.w3c.css.sac.SimpleSelector $r1;
        java.lang.StringBuffer $r4, $r5, $r6, $r11, $r12, $r14, $r15;
        int $i1;
        java.lang.String $r7, $r10, $r13;

        r0 := @this: org.apache.batik.css.engine.sac.CSSChildSelector;

        $r1 = virtualinvoke r0.<org.apache.batik.css.engine.sac.AbstractDescendantSelector: org.w3c.css.sac.SimpleSelector getSimpleSelector()>();

        $s0 = interfaceinvoke $r1.<org.w3c.css.sac.Selector: short getSelectorType()>();

        $i1 = (int) $s0;

        if $i1 != 9 goto label1;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke r0.<org.apache.batik.css.engine.sac.AbstractDescendantSelector: org.w3c.css.sac.Selector getAncestorSelector()>();

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r13;

     label1:
        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.batik.css.engine.sac.AbstractDescendantSelector: org.w3c.css.sac.Selector getAncestorSelector()>();

        $r4 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" > ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }
}
