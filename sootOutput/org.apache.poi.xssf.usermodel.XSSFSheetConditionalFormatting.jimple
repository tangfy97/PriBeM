public class org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting extends java.lang.Object implements org.apache.poi.ss.usermodel.SheetConditionalFormatting
{
    private final org.apache.poi.xssf.usermodel.XSSFSheet _sheet;

    void <init>(org.apache.poi.xssf.usermodel.XSSFSheet)
    {
        org.apache.poi.xssf.usermodel.XSSFSheet r1;
        org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting;

        r1 := @parameter0: org.apache.poi.xssf.usermodel.XSSFSheet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting: org.apache.poi.xssf.usermodel.XSSFSheet _sheet> = r1;

        return;
    }

    public org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule createConditionalFormattingRule(byte, java.lang.String, java.lang.String)
    {
        org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting r1;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STCfType$Enum $r6;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule $r3;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule $r13;
        byte b0;
        int $i1, $i2;
        java.lang.String r4, r5, $r11;
        java.lang.IllegalArgumentException $r15;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STConditionalFormattingOperator$Enum r12;
        org.apache.poi.xssf.usermodel.XSSFSheet $r2;
        java.lang.StringBuilder $r9, $r10, $r14;

        r1 := @this: org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting;

        b0 := @parameter0: byte;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        $r13 = new org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule;

        $r2 = r1.<org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting: org.apache.poi.xssf.usermodel.XSSFSheet _sheet>;

        specialinvoke $r13.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: void <init>(org.apache.poi.xssf.usermodel.XSSFSheet)>($r2);

        $r3 = virtualinvoke $r13.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule getCTCfRule()>();

        interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule: void addFormula(java.lang.String)>(r4);

        if r5 == null goto label01;

        interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule: void addFormula(java.lang.String)>(r5);

     label01:
        $r6 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STCfType: org.openxmlformats.schemas.spreadsheetml.x2006.main.STCfType$Enum CELL_IS>;

        interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule: void setType(org.openxmlformats.schemas.spreadsheetml.x2006.main.STCfType$Enum)>($r6);

        $i1 = (int) b0;

        tableswitch($i1)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label08;
            case 4: goto label09;
            case 5: goto label06;
            case 6: goto label04;
            case 7: goto label07;
            case 8: goto label05;
            default: goto label10;
        };

     label02:
        r12 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STConditionalFormattingOperator: org.openxmlformats.schemas.spreadsheetml.x2006.main.STConditionalFormattingOperator$Enum BETWEEN>;

        goto label11;

     label03:
        r12 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STConditionalFormattingOperator: org.openxmlformats.schemas.spreadsheetml.x2006.main.STConditionalFormattingOperator$Enum NOT_BETWEEN>;

        goto label11;

     label04:
        r12 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STConditionalFormattingOperator: org.openxmlformats.schemas.spreadsheetml.x2006.main.STConditionalFormattingOperator$Enum LESS_THAN>;

        goto label11;

     label05:
        r12 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STConditionalFormattingOperator: org.openxmlformats.schemas.spreadsheetml.x2006.main.STConditionalFormattingOperator$Enum LESS_THAN_OR_EQUAL>;

        goto label11;

     label06:
        r12 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STConditionalFormattingOperator: org.openxmlformats.schemas.spreadsheetml.x2006.main.STConditionalFormattingOperator$Enum GREATER_THAN>;

        goto label11;

     label07:
        r12 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STConditionalFormattingOperator: org.openxmlformats.schemas.spreadsheetml.x2006.main.STConditionalFormattingOperator$Enum GREATER_THAN_OR_EQUAL>;

        goto label11;

     label08:
        r12 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STConditionalFormattingOperator: org.openxmlformats.schemas.spreadsheetml.x2006.main.STConditionalFormattingOperator$Enum EQUAL>;

        goto label11;

     label09:
        r12 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STConditionalFormattingOperator: org.openxmlformats.schemas.spreadsheetml.x2006.main.STConditionalFormattingOperator$Enum NOT_EQUAL>;

        goto label11;

     label10:
        $r15 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown comparison operator: ");

        $i2 = (int) b0;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r15;

     label11:
        interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule: void setOperator(org.openxmlformats.schemas.spreadsheetml.x2006.main.STConditionalFormattingOperator$Enum)>(r12);

        return $r13;
    }

    public org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule createConditionalFormattingRule(byte, java.lang.String)
    {
        byte b0;
        org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting r0;
        java.lang.String r1;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule $r2;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting;

        b0 := @parameter0: byte;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting: org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule createConditionalFormattingRule(byte,java.lang.String,java.lang.String)>(b0, r1, null);

        return $r2;
    }

    public org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule createConditionalFormattingRule(java.lang.String)
    {
        org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting r1;
        org.apache.poi.xssf.usermodel.XSSFSheet $r2;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STCfType$Enum $r5;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule $r3;
        java.lang.String r4;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule $r0;

        r1 := @this: org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting;

        r4 := @parameter0: java.lang.String;

        $r0 = new org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule;

        $r2 = r1.<org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting: org.apache.poi.xssf.usermodel.XSSFSheet _sheet>;

        specialinvoke $r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: void <init>(org.apache.poi.xssf.usermodel.XSSFSheet)>($r2);

        $r3 = virtualinvoke $r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule getCTCfRule()>();

        interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule: void addFormula(java.lang.String)>(r4);

        $r5 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STCfType: org.openxmlformats.schemas.spreadsheetml.x2006.main.STCfType$Enum EXPRESSION>;

        interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule: void setType(org.openxmlformats.schemas.spreadsheetml.x2006.main.STCfType$Enum)>($r5);

        return $r0;
    }

    public int addConditionalFormatting(org.apache.poi.ss.util.CellRangeAddress[], org.apache.poi.ss.usermodel.ConditionalFormattingRule[])
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting $r6, r31;
        org.apache.poi.ss.usermodel.ConditionalFormattingRule r14;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule r15;
        boolean $z0, $z1;
        org.apache.poi.ss.util.CellRangeAddress r27, r30;
        java.util.List $r10;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet $r5, $r9, $r13;
        org.apache.poi.ss.SpreadsheetVersion $r25;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule[] $r21, r28, r29;
        org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting r3;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule $r16, $r17, $r18;
        org.apache.poi.ss.util.CellRangeAddress[] r0, $r2;
        java.util.ArrayList $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12, i13, i14;
        java.lang.String $r20;
        java.util.Iterator $r11;
        java.lang.IllegalArgumentException $r22, $r23, $r24, $r26;
        org.apache.poi.ss.usermodel.ConditionalFormattingRule[] r1;
        org.apache.poi.xssf.usermodel.XSSFSheet $r4, $r8, $r12;
        java.lang.Object $r19;

        r3 := @this: org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting;

        r0 := @parameter0: org.apache.poi.ss.util.CellRangeAddress[];

        r1 := @parameter1: org.apache.poi.ss.usermodel.ConditionalFormattingRule[];

        if r0 != null goto label01;

        $r26 = new java.lang.IllegalArgumentException;

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("regions must not be null");

        throw $r26;

     label01:
        i9 = lengthof r0;

        i10 = 0;

     label02:
        if i10 >= i9 goto label03;

        r27 = r0[i10];

        $r25 = <org.apache.poi.ss.SpreadsheetVersion: org.apache.poi.ss.SpreadsheetVersion EXCEL2007>;

        virtualinvoke r27.<org.apache.poi.ss.util.CellRangeAddress: void validate(org.apache.poi.ss.SpreadsheetVersion)>($r25);

        i10 = i10 + 1;

        goto label02;

     label03:
        if r1 != null goto label04;

        $r24 = new java.lang.IllegalArgumentException;

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cfRules must not be null");

        throw $r24;

     label04:
        $i0 = lengthof r1;

        if $i0 != 0 goto label05;

        $r23 = new java.lang.IllegalArgumentException;

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cfRules must not be empty");

        throw $r23;

     label05:
        $i1 = lengthof r1;

        if $i1 <= 3 goto label06;

        $r22 = new java.lang.IllegalArgumentException;

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Number of rules must not exceed 3");

        throw $r22;

     label06:
        $z0 = r1 instanceof org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule[];

        if $z0 == 0 goto label07;

        $r21 = (org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule[]) r1;

        r28 = (org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule[]) $r21;

        goto label08;

     label07:
        $i2 = lengthof r1;

        r29 = newarray (org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule)[$i2];

        $i3 = lengthof r29;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r29, 0, $i3);

     label08:
        $r2 = staticinvoke <org.apache.poi.hssf.record.cf.CellRangeUtil: org.apache.poi.ss.util.CellRangeAddress[] mergeCellRanges(org.apache.poi.ss.util.CellRangeAddress[])>(r0);

        $r4 = r3.<org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting: org.apache.poi.xssf.usermodel.XSSFSheet _sheet>;

        $r5 = virtualinvoke $r4.<org.apache.poi.xssf.usermodel.XSSFSheet: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet getCTWorksheet()>();

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting addNewConditionalFormatting()>();

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $i8 = lengthof $r2;

        i11 = 0;

     label09:
        if i11 >= $i8 goto label10;

        r30 = $r2[i11];

        $r20 = virtualinvoke r30.<org.apache.poi.ss.util.CellRangeAddress: java.lang.String formatAsString()>();

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r20);

        i11 = i11 + 1;

        goto label09;

     label10:
        interfaceinvoke $r6.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting: void setSqref(java.util.List)>($r7);

        i12 = 1;

        $r8 = r3.<org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting: org.apache.poi.xssf.usermodel.XSSFSheet _sheet>;

        $r9 = virtualinvoke $r8.<org.apache.poi.xssf.usermodel.XSSFSheet: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet getCTWorksheet()>();

        $r10 = interfaceinvoke $r9.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet: java.util.List getConditionalFormattingList()>();

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z1 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label12;

        $r19 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r31 = (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting) $r19;

        $i7 = interfaceinvoke r31.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting: int sizeOfCfRuleArray()>();

        i12 = i12 + $i7;

        goto label11;

     label12:
        i13 = lengthof r1;

        i14 = 0;

     label13:
        if i14 >= i13 goto label14;

        r14 = r1[i14];

        r15 = (org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule) r14;

        $r16 = virtualinvoke r15.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule getCTCfRule()>();

        $i6 = i12;

        i12 = i12 + 1;

        interfaceinvoke $r16.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule: void setPriority(int)>($i6);

        $r17 = interfaceinvoke $r6.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule addNewCfRule()>();

        $r18 = virtualinvoke r15.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule getCTCfRule()>();

        interfaceinvoke $r17.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>($r18);

        i14 = i14 + 1;

        goto label13;

     label14:
        $r12 = r3.<org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting: org.apache.poi.xssf.usermodel.XSSFSheet _sheet>;

        $r13 = virtualinvoke $r12.<org.apache.poi.xssf.usermodel.XSSFSheet: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet getCTWorksheet()>();

        $i4 = interfaceinvoke $r13.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet: int sizeOfConditionalFormattingArray()>();

        $i5 = $i4 - 1;

        return $i5;
    }

    public int addConditionalFormatting(org.apache.poi.ss.util.CellRangeAddress[], org.apache.poi.ss.usermodel.ConditionalFormattingRule)
    {
        org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting r0;
        int $i0;
        org.apache.poi.ss.util.CellRangeAddress[] r1;
        org.apache.poi.ss.usermodel.ConditionalFormattingRule r2;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule $r3;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule[] $r4;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting;

        r1 := @parameter0: org.apache.poi.ss.util.CellRangeAddress[];

        r2 := @parameter1: org.apache.poi.ss.usermodel.ConditionalFormattingRule;

        if r2 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r4 = newarray (org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule)[1];

        $r3 = (org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule) r2;

        $r4[0] = $r3;

     label2:
        $i0 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting: int addConditionalFormatting(org.apache.poi.ss.util.CellRangeAddress[],org.apache.poi.ss.usermodel.ConditionalFormattingRule[])>(r1, $r4);

        return $i0;
    }

    public int addConditionalFormatting(org.apache.poi.ss.util.CellRangeAddress[], org.apache.poi.ss.usermodel.ConditionalFormattingRule, org.apache.poi.ss.usermodel.ConditionalFormattingRule)
    {
        org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting r0;
        org.apache.poi.ss.util.CellRangeAddress[] r1;
        org.apache.poi.ss.usermodel.ConditionalFormattingRule r2, r4;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule $r3, $r5;
        int $i0;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule[] $r6;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting;

        r1 := @parameter0: org.apache.poi.ss.util.CellRangeAddress[];

        r2 := @parameter1: org.apache.poi.ss.usermodel.ConditionalFormattingRule;

        r4 := @parameter2: org.apache.poi.ss.usermodel.ConditionalFormattingRule;

        if r2 != null goto label1;

        $r6 = null;

        goto label2;

     label1:
        $r6 = newarray (org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule)[2];

        $r3 = (org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule) r2;

        $r6[0] = $r3;

        $r5 = (org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule) r4;

        $r6[1] = $r5;

     label2:
        $i0 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting: int addConditionalFormatting(org.apache.poi.ss.util.CellRangeAddress[],org.apache.poi.ss.usermodel.ConditionalFormattingRule[])>(r1, $r6);

        return $i0;
    }

    public int addConditionalFormatting(org.apache.poi.ss.usermodel.ConditionalFormatting)
    {
        org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting r2;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting $r5, $r6;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormatting r1;
        org.apache.poi.ss.usermodel.ConditionalFormatting r0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet $r4;
        org.apache.poi.xssf.usermodel.XSSFSheet $r3;
        int $i0, $i1;
        org.apache.xmlbeans.XmlObject $r7;

        r2 := @this: org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting;

        r0 := @parameter0: org.apache.poi.ss.usermodel.ConditionalFormatting;

        r1 = (org.apache.poi.xssf.usermodel.XSSFConditionalFormatting) r0;

        $r3 = r2.<org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting: org.apache.poi.xssf.usermodel.XSSFSheet _sheet>;

        $r4 = virtualinvoke $r3.<org.apache.poi.xssf.usermodel.XSSFSheet: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet getCTWorksheet()>();

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting addNewConditionalFormatting()>();

        $r6 = virtualinvoke r1.<org.apache.poi.xssf.usermodel.XSSFConditionalFormatting: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting getCTConditionalFormatting()>();

        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting: org.apache.xmlbeans.XmlObject copy()>();

        interfaceinvoke $r5.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>($r7);

        $i0 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet: int sizeOfConditionalFormattingArray()>();

        $i1 = $i0 - 1;

        return $i1;
    }

    public org.apache.poi.xssf.usermodel.XSSFConditionalFormatting getConditionalFormattingAt(int)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet $r2;
        org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting r0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting $r3;
        int i0;
        org.apache.poi.xssf.usermodel.XSSFSheet $r1, $r5;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormatting $r4;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting: void checkIndex(int)>(i0);

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting: org.apache.poi.xssf.usermodel.XSSFSheet _sheet>;

        $r2 = virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFSheet: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet getCTWorksheet()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting getConditionalFormattingArray(int)>(i0);

        $r4 = new org.apache.poi.xssf.usermodel.XSSFConditionalFormatting;

        $r5 = r0.<org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting: org.apache.poi.xssf.usermodel.XSSFSheet _sheet>;

        specialinvoke $r4.<org.apache.poi.xssf.usermodel.XSSFConditionalFormatting: void <init>(org.apache.poi.xssf.usermodel.XSSFSheet,org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting)>($r5, $r3);

        return $r4;
    }

    public int getNumConditionalFormattings()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet $r2;
        org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting r0;
        org.apache.poi.xssf.usermodel.XSSFSheet $r1;
        int $i0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting: org.apache.poi.xssf.usermodel.XSSFSheet _sheet>;

        $r2 = virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFSheet: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet getCTWorksheet()>();

        $i0 = interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet: int sizeOfConditionalFormattingArray()>();

        return $i0;
    }

    public void removeConditionalFormatting(int)
    {
        java.util.List $r3;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet $r2;
        org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting r0;
        int i0;
        org.apache.poi.xssf.usermodel.XSSFSheet $r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting: void checkIndex(int)>(i0);

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting: org.apache.poi.xssf.usermodel.XSSFSheet _sheet>;

        $r2 = virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFSheet: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet getCTWorksheet()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet: java.util.List getConditionalFormattingList()>();

        interfaceinvoke $r3.<java.util.List: java.lang.Object remove(int)>(i0);

        return;
    }

    private void checkIndex(int)
    {
        org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting r0;
        java.lang.IllegalArgumentException $r1;
        int $i0, i1, $i2;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting;

        i1 := @parameter0: int;

        $i0 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting: int getNumConditionalFormattings()>();

        if i1 < 0 goto label1;

        if i1 < $i0 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Specified CF index ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is outside the allowable range (0..");

        $i2 = $i0 - 1;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r1;

     label2:
        return;
    }

    public volatile org.apache.poi.ss.usermodel.ConditionalFormatting getConditionalFormattingAt(int)
    {
        int i0;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormatting $r1;
        org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting: org.apache.poi.xssf.usermodel.XSSFConditionalFormatting getConditionalFormattingAt(int)>(i0);

        return $r1;
    }

    public volatile org.apache.poi.ss.usermodel.ConditionalFormattingRule createConditionalFormattingRule(java.lang.String)
    {
        java.lang.String r1;
        org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting r0;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule $r2;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting: org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule createConditionalFormattingRule(java.lang.String)>(r1);

        return $r2;
    }

    public volatile org.apache.poi.ss.usermodel.ConditionalFormattingRule createConditionalFormattingRule(byte, java.lang.String)
    {
        byte b0;
        org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting r0;
        java.lang.String r1;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule $r2;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting;

        b0 := @parameter0: byte;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting: org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule createConditionalFormattingRule(byte,java.lang.String)>(b0, r1);

        return $r2;
    }

    public volatile org.apache.poi.ss.usermodel.ConditionalFormattingRule createConditionalFormattingRule(byte, java.lang.String, java.lang.String)
    {
        byte b0;
        org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting r0;
        java.lang.String r1, r2;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule $r3;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting;

        b0 := @parameter0: byte;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFSheetConditionalFormatting: org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule createConditionalFormattingRule(byte,java.lang.String,java.lang.String)>(b0, r1, r2);

        return $r3;
    }
}
