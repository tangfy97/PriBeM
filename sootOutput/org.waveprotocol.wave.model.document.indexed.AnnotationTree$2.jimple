class org.waveprotocol.wave.model.document.indexed.AnnotationTree$2 extends java.lang.Object implements org.waveprotocol.wave.model.util.ReadableStringMap$ProcV
{
    final int val$start;
    final int val$end;
    final org.waveprotocol.wave.model.document.indexed.AnnotationTree this$0;

    void <init>(org.waveprotocol.wave.model.document.indexed.AnnotationTree, int, int)
    {
        int i0, i1;
        org.waveprotocol.wave.model.document.indexed.AnnotationTree$2 r0;
        org.waveprotocol.wave.model.document.indexed.AnnotationTree r1;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.AnnotationTree$2;

        r1 := @parameter0: org.waveprotocol.wave.model.document.indexed.AnnotationTree;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0.<org.waveprotocol.wave.model.document.indexed.AnnotationTree$2: org.waveprotocol.wave.model.document.indexed.AnnotationTree this$0> = r1;

        r0.<org.waveprotocol.wave.model.document.indexed.AnnotationTree$2: int val$start> = i0;

        r0.<org.waveprotocol.wave.model.document.indexed.AnnotationTree$2: int val$end> = i1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void apply(java.lang.String, java.lang.Object)
    {
        org.waveprotocol.wave.model.document.indexed.AnnotationTree $r1, $r4;
        org.waveprotocol.wave.model.util.StringMap $r2;
        int $i0, $i1;
        java.lang.Object r6;
        org.waveprotocol.wave.model.document.indexed.AnnotationTree$2 r0;
        java.lang.String r3;
        org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree $r5;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.AnnotationTree$2;

        r3 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.Object;

        $r1 = r0.<org.waveprotocol.wave.model.document.indexed.AnnotationTree$2: org.waveprotocol.wave.model.document.indexed.AnnotationTree this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.model.document.indexed.AnnotationTree: org.waveprotocol.wave.model.util.StringMap access$100(org.waveprotocol.wave.model.document.indexed.AnnotationTree)>($r1);

        $z0 = interfaceinvoke $r2.<org.waveprotocol.wave.model.util.StringMap: boolean containsKey(java.lang.String)>(r3);

        if $z0 != 0 goto label1;

        $r4 = r0.<org.waveprotocol.wave.model.document.indexed.AnnotationTree$2: org.waveprotocol.wave.model.document.indexed.AnnotationTree this$0>;

        $r5 = staticinvoke <org.waveprotocol.wave.model.document.indexed.AnnotationTree: org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree access$200(org.waveprotocol.wave.model.document.indexed.AnnotationTree)>($r4);

        $i1 = r0.<org.waveprotocol.wave.model.document.indexed.AnnotationTree$2: int val$start>;

        $i0 = r0.<org.waveprotocol.wave.model.document.indexed.AnnotationTree$2: int val$end>;

        virtualinvoke $r5.<org.waveprotocol.wave.model.document.indexed.BasicAnnotationTree: void setAnnotation(int,int,java.lang.String,java.lang.Object)>($i1, $i0, r3, r6);

     label1:
        return;
    }
}
