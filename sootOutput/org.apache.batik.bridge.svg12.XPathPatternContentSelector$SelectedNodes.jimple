public class org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes extends java.lang.Object implements org.w3c.dom.NodeList
{
    protected java.util.ArrayList nodes;
    private final org.apache.batik.bridge.svg12.XPathPatternContentSelector this$0;

    public void <init>(org.apache.batik.bridge.svg12.XPathPatternContentSelector)
    {
        org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes r0;
        org.apache.batik.bridge.svg12.XPathPatternContentSelector r1;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes;

        r1 := @parameter0: org.apache.batik.bridge.svg12.XPathPatternContentSelector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes: org.apache.batik.bridge.svg12.XPathPatternContentSelector this$0> = r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(10);

        r0.<org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes: java.util.ArrayList nodes> = $r2;

        virtualinvoke r0.<org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes: boolean update()>();

        return;
    }

    protected boolean update()
    {
        org.apache.batik.bridge.svg12.XPathPatternContentSelector $r5;
        java.util.ArrayList $r1, r3, $r4, $r7, $r9;
        org.w3c.dom.Element $r6;
        org.w3c.dom.Node r11;
        org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes r0;
        int $i0, $i1, i2;
        java.lang.Object $r2, $r8, $r10;

        r0 := @this: org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes;

        $r1 = r0.<org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes: java.util.ArrayList nodes>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object clone()>();

        r3 = (java.util.ArrayList) $r2;

        $r4 = r0.<org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes: java.util.ArrayList nodes>;

        virtualinvoke $r4.<java.util.ArrayList: void clear()>();

        $r5 = r0.<org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes: org.apache.batik.bridge.svg12.XPathPatternContentSelector this$0>;

        $r6 = $r5.<org.apache.batik.bridge.svg12.AbstractContentSelector: org.w3c.dom.Element boundElement>;

        r11 = interfaceinvoke $r6.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label2;

     label1:
        virtualinvoke r0.<org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes: void update(org.w3c.dom.Node)>(r11);

        r11 = interfaceinvoke r11.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label2:
        if r11 != null goto label1;

        $r7 = r0.<org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes: java.util.ArrayList nodes>;

        $i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        $i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if $i1 == $i0 goto label3;

        return 1;

     label3:
        i2 = 0;

        goto label6;

     label4:
        $r8 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r9 = r0.<org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes: java.util.ArrayList nodes>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        if $r8 == $r10 goto label5;

        return 1;

     label5:
        i2 = i2 + 1;

     label6:
        if i2 < $i0 goto label4;

        return 0;
    }

    protected boolean descendantSelected(org.w3c.dom.Node)
    {
        org.apache.batik.bridge.svg12.XPathPatternContentSelector $r1;
        org.w3c.dom.Node r2, r3;
        org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes;

        r2 := @parameter0: org.w3c.dom.Node;

        r3 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label4;

     label1:
        $r1 = r0.<org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes: org.apache.batik.bridge.svg12.XPathPatternContentSelector this$0>;

        $z0 = virtualinvoke $r1.<org.apache.batik.bridge.svg12.AbstractContentSelector: boolean isSelected(org.w3c.dom.Node)>(r3);

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r0.<org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes: boolean descendantSelected(org.w3c.dom.Node)>(r3);

        if $z1 == 0 goto label3;

     label2:
        return 1;

     label3:
        r3 = interfaceinvoke r3.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label4:
        if r3 != null goto label1;

        return 0;
    }

    protected void update(org.w3c.dom.Node)
    {
        java.lang.Object[] $r15;
        javax.xml.transform.TransformerException $r10;
        java.util.ArrayList $r9;
        byte $b0;
        org.apache.xpath.XPathContext $r6;
        org.w3c.dom.Document $r13;
        org.w3c.dom.Node r20, r21;
        org.apache.batik.bridge.svg12.XPathPatternContentSelector$NSPrefixResolver $r5;
        java.lang.String $r17, $r18;
        boolean $z0, $z1;
        double $d0;
        org.apache.xpath.XPath $r7;
        org.apache.batik.bridge.svg12.XPathPatternContentSelector $r1, $r2, $r3, $r4, $r11, $r16;
        org.apache.batik.dom.AbstractDocument r14;
        org.w3c.dom.xpath.XPathException $r19;
        org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes r0;
        org.apache.xpath.objects.XObject $r8;
        org.apache.batik.dom.svg12.XBLOMContentElement $r12;

        r0 := @this: org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes;

        r20 := @parameter0: org.w3c.dom.Node;

        $r1 = r0.<org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes: org.apache.batik.bridge.svg12.XPathPatternContentSelector this$0>;

        $z0 = virtualinvoke $r1.<org.apache.batik.bridge.svg12.AbstractContentSelector: boolean isSelected(org.w3c.dom.Node)>(r20);

        if $z0 != 0 goto label7;

     label1:
        $r2 = r0.<org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes: org.apache.batik.bridge.svg12.XPathPatternContentSelector this$0>;

        $r7 = $r2.<org.apache.batik.bridge.svg12.XPathPatternContentSelector: org.apache.xpath.XPath xpath>;

        $r3 = r0.<org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes: org.apache.batik.bridge.svg12.XPathPatternContentSelector this$0>;

        $r6 = $r3.<org.apache.batik.bridge.svg12.XPathPatternContentSelector: org.apache.xpath.XPathContext context>;

        $r4 = r0.<org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes: org.apache.batik.bridge.svg12.XPathPatternContentSelector this$0>;

        $r5 = $r4.<org.apache.batik.bridge.svg12.XPathPatternContentSelector: org.apache.batik.bridge.svg12.XPathPatternContentSelector$NSPrefixResolver prefixResolver>;

        $r8 = virtualinvoke $r7.<org.apache.xpath.XPath: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,org.w3c.dom.Node,org.apache.xml.utils.PrefixResolver)>($r6, r20, $r5);

        $d0 = virtualinvoke $r8.<org.apache.xpath.objects.XObject: double num()>();

        $b0 = $d0 cmpl #-Infinity;

        if $b0 == 0 goto label2;

        $z1 = virtualinvoke r0.<org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes: boolean descendantSelected(org.w3c.dom.Node)>(r20);

        if $z1 != 0 goto label5;

        $r9 = r0.<org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes: java.util.ArrayList nodes>;

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r20);

        goto label5;

     label2:
        r21 = interfaceinvoke r20.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label4;

     label3:
        virtualinvoke r0.<org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes: void update(org.w3c.dom.Node)>(r21);

        r21 = interfaceinvoke r21.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label4:
        if r21 != null goto label3;

     label5:
        goto label7;

     label6:
        $r10 := @caughtexception;

        $r11 = r0.<org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes: org.apache.batik.bridge.svg12.XPathPatternContentSelector this$0>;

        $r12 = $r11.<org.apache.batik.bridge.svg12.AbstractContentSelector: org.apache.batik.dom.svg12.XBLOMContentElement contentElement>;

        $r13 = virtualinvoke $r12.<org.apache.batik.dom.AbstractNode: org.w3c.dom.Document getOwnerDocument()>();

        r14 = (org.apache.batik.dom.AbstractDocument) $r13;

        $r15 = newarray (java.lang.Object)[2];

        $r16 = r0.<org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes: org.apache.batik.bridge.svg12.XPathPatternContentSelector this$0>;

        $r17 = $r16.<org.apache.batik.bridge.svg12.XPathPatternContentSelector: java.lang.String expression>;

        $r15[0] = $r17;

        $r18 = virtualinvoke $r10.<java.lang.Throwable: java.lang.String getMessage()>();

        $r15[1] = $r18;

        $r19 = virtualinvoke r14.<org.apache.batik.dom.AbstractDocument: org.w3c.dom.xpath.XPathException createXPathException(short,java.lang.String,java.lang.Object[])>(51, "xpath.error", $r15);

        throw $r19;

     label7:
        return;

        catch javax.xml.transform.TransformerException from label1 to label5 with label6;
    }

    public org.w3c.dom.Node item(int)
    {
        org.w3c.dom.Node $r4;
        int i0, $i1;
        org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes r0;
        java.lang.Object $r3;
        java.util.ArrayList $r1, $r2;

        r0 := @this: org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r1 = r0.<org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes: java.util.ArrayList nodes>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if i0 < $i1 goto label2;

     label1:
        return null;

     label2:
        $r2 = r0.<org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes: java.util.ArrayList nodes>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r4 = (org.w3c.dom.Node) $r3;

        return $r4;
    }

    public int getLength()
    {
        org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes r0;
        int $i0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes;

        $r1 = r0.<org.apache.batik.bridge.svg12.XPathPatternContentSelector$SelectedNodes: java.util.ArrayList nodes>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        return $i0;
    }
}
