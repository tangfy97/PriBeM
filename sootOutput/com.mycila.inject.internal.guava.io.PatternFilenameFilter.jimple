public final class com.mycila.inject.internal.guava.io.PatternFilenameFilter extends java.lang.Object implements java.io.FilenameFilter
{
    private final java.util.regex.Pattern pattern;

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        java.util.regex.Pattern $r2;
        com.mycila.inject.internal.guava.io.PatternFilenameFilter r0;

        r0 := @this: com.mycila.inject.internal.guava.io.PatternFilenameFilter;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r1);

        specialinvoke r0.<com.mycila.inject.internal.guava.io.PatternFilenameFilter: void <init>(java.util.regex.Pattern)>($r2);

        return;
    }

    public void <init>(java.util.regex.Pattern)
    {
        com.mycila.inject.internal.guava.io.PatternFilenameFilter r0;
        java.lang.Object $r2;
        java.util.regex.Pattern r1, $r3;

        r0 := @this: com.mycila.inject.internal.guava.io.PatternFilenameFilter;

        r1 := @parameter0: java.util.regex.Pattern;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (java.util.regex.Pattern) $r2;

        r0.<com.mycila.inject.internal.guava.io.PatternFilenameFilter: java.util.regex.Pattern pattern> = $r3;

        return;
    }

    public boolean accept(java.io.File, java.lang.String)
    {
        java.util.regex.Matcher $r3;
        com.mycila.inject.internal.guava.io.PatternFilenameFilter r0;
        java.lang.String r1;
        java.util.regex.Pattern $r2;
        java.io.File r4;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.io.PatternFilenameFilter;

        r4 := @parameter0: java.io.File;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<com.mycila.inject.internal.guava.io.PatternFilenameFilter: java.util.regex.Pattern pattern>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean matches()>();

        return $z0;
    }
}
