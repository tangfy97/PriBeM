public final class com.google.common.base.Predicates extends java.lang.Object
{
    private static final com.google.common.base.Joiner COMMA_JOINER;

    private void <init>()
    {
        com.google.common.base.Predicates r0;

        r0 := @this: com.google.common.base.Predicates;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.google.common.base.Predicate alwaysTrue()
    {
        com.google.common.base.Predicates$ObjectPredicate $r0;
        com.google.common.base.Predicate $r1;

        $r0 = <com.google.common.base.Predicates$ObjectPredicate: com.google.common.base.Predicates$ObjectPredicate ALWAYS_TRUE>;

        $r1 = virtualinvoke $r0.<com.google.common.base.Predicates$ObjectPredicate: com.google.common.base.Predicate withNarrowedType()>();

        return $r1;
    }

    public static com.google.common.base.Predicate alwaysFalse()
    {
        com.google.common.base.Predicates$ObjectPredicate $r0;
        com.google.common.base.Predicate $r1;

        $r0 = <com.google.common.base.Predicates$ObjectPredicate: com.google.common.base.Predicates$ObjectPredicate ALWAYS_FALSE>;

        $r1 = virtualinvoke $r0.<com.google.common.base.Predicates$ObjectPredicate: com.google.common.base.Predicate withNarrowedType()>();

        return $r1;
    }

    public static com.google.common.base.Predicate isNull()
    {
        com.google.common.base.Predicates$ObjectPredicate $r0;
        com.google.common.base.Predicate $r1;

        $r0 = <com.google.common.base.Predicates$ObjectPredicate: com.google.common.base.Predicates$ObjectPredicate IS_NULL>;

        $r1 = virtualinvoke $r0.<com.google.common.base.Predicates$ObjectPredicate: com.google.common.base.Predicate withNarrowedType()>();

        return $r1;
    }

    public static com.google.common.base.Predicate notNull()
    {
        com.google.common.base.Predicates$ObjectPredicate $r0;
        com.google.common.base.Predicate $r1;

        $r0 = <com.google.common.base.Predicates$ObjectPredicate: com.google.common.base.Predicates$ObjectPredicate NOT_NULL>;

        $r1 = virtualinvoke $r0.<com.google.common.base.Predicates$ObjectPredicate: com.google.common.base.Predicate withNarrowedType()>();

        return $r1;
    }

    public static com.google.common.base.Predicate not(com.google.common.base.Predicate)
    {
        com.google.common.base.Predicates$NotPredicate $r0;
        com.google.common.base.Predicate r1;

        r1 := @parameter0: com.google.common.base.Predicate;

        $r0 = new com.google.common.base.Predicates$NotPredicate;

        specialinvoke $r0.<com.google.common.base.Predicates$NotPredicate: void <init>(com.google.common.base.Predicate)>(r1);

        return $r0;
    }

    public static com.google.common.base.Predicate and(java.lang.Iterable)
    {
        com.google.common.base.Predicates$AndPredicate $r0;
        java.util.List $r2;
        java.lang.Iterable r1;

        r1 := @parameter0: java.lang.Iterable;

        $r0 = new com.google.common.base.Predicates$AndPredicate;

        $r2 = staticinvoke <com.google.common.base.Predicates: java.util.List defensiveCopy(java.lang.Iterable)>(r1);

        specialinvoke $r0.<com.google.common.base.Predicates$AndPredicate: void <init>(java.util.List,com.google.common.base.Predicates$1)>($r2, null);

        return $r0;
    }

    public static transient com.google.common.base.Predicate and(com.google.common.base.Predicate[])
    {
        com.google.common.base.Predicates$AndPredicate $r0;
        com.google.common.base.Predicate[] r1;
        java.util.List $r2;

        r1 := @parameter0: com.google.common.base.Predicate[];

        $r0 = new com.google.common.base.Predicates$AndPredicate;

        $r2 = staticinvoke <com.google.common.base.Predicates: java.util.List defensiveCopy(java.lang.Object[])>(r1);

        specialinvoke $r0.<com.google.common.base.Predicates$AndPredicate: void <init>(java.util.List,com.google.common.base.Predicates$1)>($r2, null);

        return $r0;
    }

    public static com.google.common.base.Predicate and(com.google.common.base.Predicate, com.google.common.base.Predicate)
    {
        com.google.common.base.Predicates$AndPredicate $r0;
        java.util.List $r7;
        com.google.common.base.Predicate r1, r3, $r4, $r6;
        java.lang.Object $r2, $r5;

        r1 := @parameter0: com.google.common.base.Predicate;

        r3 := @parameter1: com.google.common.base.Predicate;

        $r0 = new com.google.common.base.Predicates$AndPredicate;

        $r2 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (com.google.common.base.Predicate) $r2;

        $r5 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r6 = (com.google.common.base.Predicate) $r5;

        $r7 = staticinvoke <com.google.common.base.Predicates: java.util.List asList(com.google.common.base.Predicate,com.google.common.base.Predicate)>($r4, $r6);

        specialinvoke $r0.<com.google.common.base.Predicates$AndPredicate: void <init>(java.util.List,com.google.common.base.Predicates$1)>($r7, null);

        return $r0;
    }

    public static com.google.common.base.Predicate or(java.lang.Iterable)
    {
        java.util.List $r2;
        com.google.common.base.Predicates$OrPredicate $r0;
        java.lang.Iterable r1;

        r1 := @parameter0: java.lang.Iterable;

        $r0 = new com.google.common.base.Predicates$OrPredicate;

        $r2 = staticinvoke <com.google.common.base.Predicates: java.util.List defensiveCopy(java.lang.Iterable)>(r1);

        specialinvoke $r0.<com.google.common.base.Predicates$OrPredicate: void <init>(java.util.List,com.google.common.base.Predicates$1)>($r2, null);

        return $r0;
    }

    public static transient com.google.common.base.Predicate or(com.google.common.base.Predicate[])
    {
        com.google.common.base.Predicate[] r1;
        java.util.List $r2;
        com.google.common.base.Predicates$OrPredicate $r0;

        r1 := @parameter0: com.google.common.base.Predicate[];

        $r0 = new com.google.common.base.Predicates$OrPredicate;

        $r2 = staticinvoke <com.google.common.base.Predicates: java.util.List defensiveCopy(java.lang.Object[])>(r1);

        specialinvoke $r0.<com.google.common.base.Predicates$OrPredicate: void <init>(java.util.List,com.google.common.base.Predicates$1)>($r2, null);

        return $r0;
    }

    public static com.google.common.base.Predicate or(com.google.common.base.Predicate, com.google.common.base.Predicate)
    {
        java.util.List $r7;
        com.google.common.base.Predicate r1, r3, $r4, $r6;
        java.lang.Object $r2, $r5;
        com.google.common.base.Predicates$OrPredicate $r0;

        r1 := @parameter0: com.google.common.base.Predicate;

        r3 := @parameter1: com.google.common.base.Predicate;

        $r0 = new com.google.common.base.Predicates$OrPredicate;

        $r2 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (com.google.common.base.Predicate) $r2;

        $r5 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r6 = (com.google.common.base.Predicate) $r5;

        $r7 = staticinvoke <com.google.common.base.Predicates: java.util.List asList(com.google.common.base.Predicate,com.google.common.base.Predicate)>($r4, $r6);

        specialinvoke $r0.<com.google.common.base.Predicates$OrPredicate: void <init>(java.util.List,com.google.common.base.Predicates$1)>($r7, null);

        return $r0;
    }

    public static com.google.common.base.Predicate equalTo(java.lang.Object)
    {
        java.lang.Object r0;
        com.google.common.base.Predicate $r1;
        com.google.common.base.Predicates$IsEqualToPredicate $r2;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $r1 = staticinvoke <com.google.common.base.Predicates: com.google.common.base.Predicate isNull()>();

        goto label2;

     label1:
        $r2 = new com.google.common.base.Predicates$IsEqualToPredicate;

        $r1 = $r2;

        specialinvoke $r2.<com.google.common.base.Predicates$IsEqualToPredicate: void <init>(java.lang.Object,com.google.common.base.Predicates$1)>(r0, null);

     label2:
        return $r1;
    }

    public static com.google.common.base.Predicate instanceOf(java.lang.Class)
    {
        java.lang.Class r1;
        com.google.common.base.Predicates$InstanceOfPredicate $r0;

        r1 := @parameter0: java.lang.Class;

        $r0 = new com.google.common.base.Predicates$InstanceOfPredicate;

        specialinvoke $r0.<com.google.common.base.Predicates$InstanceOfPredicate: void <init>(java.lang.Class,com.google.common.base.Predicates$1)>(r1, null);

        return $r0;
    }

    public static com.google.common.base.Predicate in(java.util.Collection)
    {
        com.google.common.base.Predicates$InPredicate $r0;
        java.util.Collection r1;

        r1 := @parameter0: java.util.Collection;

        $r0 = new com.google.common.base.Predicates$InPredicate;

        specialinvoke $r0.<com.google.common.base.Predicates$InPredicate: void <init>(java.util.Collection,com.google.common.base.Predicates$1)>(r1, null);

        return $r0;
    }

    public static com.google.common.base.Predicate compose(com.google.common.base.Predicate, com.google.common.base.Function)
    {
        com.google.common.base.Predicates$CompositionPredicate $r0;
        com.google.common.base.Function r2;
        com.google.common.base.Predicate r1;

        r1 := @parameter0: com.google.common.base.Predicate;

        r2 := @parameter1: com.google.common.base.Function;

        $r0 = new com.google.common.base.Predicates$CompositionPredicate;

        specialinvoke $r0.<com.google.common.base.Predicates$CompositionPredicate: void <init>(com.google.common.base.Predicate,com.google.common.base.Function,com.google.common.base.Predicates$1)>(r1, r2, null);

        return $r0;
    }

    public static com.google.common.base.Predicate containsPattern(java.lang.String)
    {
        java.lang.String r1;
        com.google.common.base.Predicates$ContainsPatternPredicate $r0;

        r1 := @parameter0: java.lang.String;

        $r0 = new com.google.common.base.Predicates$ContainsPatternPredicate;

        specialinvoke $r0.<com.google.common.base.Predicates$ContainsPatternPredicate: void <init>(java.lang.String)>(r1);

        return $r0;
    }

    public static com.google.common.base.Predicate contains(java.util.regex.Pattern)
    {
        java.util.regex.Pattern r1;
        com.google.common.base.Predicates$ContainsPatternPredicate $r0;

        r1 := @parameter0: java.util.regex.Pattern;

        $r0 = new com.google.common.base.Predicates$ContainsPatternPredicate;

        specialinvoke $r0.<com.google.common.base.Predicates$ContainsPatternPredicate: void <init>(java.util.regex.Pattern)>(r1);

        return $r0;
    }

    private static java.util.List asList(com.google.common.base.Predicate, com.google.common.base.Predicate)
    {
        java.util.List $r3;
        com.google.common.base.Predicate r1, r2;
        com.google.common.base.Predicate[] $r0;

        r1 := @parameter0: com.google.common.base.Predicate;

        r2 := @parameter1: com.google.common.base.Predicate;

        $r0 = newarray (com.google.common.base.Predicate)[2];

        $r0[0] = r1;

        $r0[1] = r2;

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        return $r3;
    }

    private static transient java.util.List defensiveCopy(java.lang.Object[])
    {
        java.util.List $r1, $r2;
        java.lang.Object[] r0;

        r0 := @parameter0: java.lang.Object[];

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r0);

        $r2 = staticinvoke <com.google.common.base.Predicates: java.util.List defensiveCopy(java.lang.Iterable)>($r1);

        return $r2;
    }

    static java.util.List defensiveCopy(java.lang.Iterable)
    {
        java.util.Iterator $r2;
        java.lang.Object $r3, $r4;
        java.lang.Iterable r1;
        java.util.ArrayList $r0;
        boolean $z0;

        r1 := @parameter0: java.lang.Iterable;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r3);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        goto label1;

     label2:
        return $r0;
    }

    static com.google.common.base.Joiner access$700()
    {
        com.google.common.base.Joiner $r0;

        $r0 = <com.google.common.base.Predicates: com.google.common.base.Joiner COMMA_JOINER>;

        return $r0;
    }

    static void <clinit>()
    {
        com.google.common.base.Joiner $r0;

        $r0 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>(",");

        <com.google.common.base.Predicates: com.google.common.base.Joiner COMMA_JOINER> = $r0;

        return;
    }
}
