final class org.xmlpull.v1.builder.xpath.jaxen.util.PrecedingAxisIterator$ReverseDescendantOrSelfAxisIterator extends org.xmlpull.v1.builder.xpath.jaxen.util.StackedIterator
{
    private final org.xmlpull.v1.builder.xpath.jaxen.util.PrecedingAxisIterator this$0;

    void <init>(org.xmlpull.v1.builder.xpath.jaxen.util.PrecedingAxisIterator, java.lang.Object) throws org.xmlpull.v1.builder.xpath.jaxen.UnsupportedAxisException
    {
        java.util.Iterator $r4;
        org.xmlpull.v1.builder.xpath.jaxen.util.PrecedingAxisIterator$ReverseDescendantOrSelfAxisIterator r0;
        java.lang.Object r3;
        org.xmlpull.v1.builder.xpath.jaxen.util.PrecedingAxisIterator r1;
        org.xmlpull.v1.builder.xpath.jaxen.Navigator $r2, $r5;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.util.PrecedingAxisIterator$ReverseDescendantOrSelfAxisIterator;

        r1 := @parameter0: org.xmlpull.v1.builder.xpath.jaxen.util.PrecedingAxisIterator;

        r3 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.util.StackedIterator: void <init>()>();

        r0.<org.xmlpull.v1.builder.xpath.jaxen.util.PrecedingAxisIterator$ReverseDescendantOrSelfAxisIterator: org.xmlpull.v1.builder.xpath.jaxen.util.PrecedingAxisIterator this$0> = r1;

        $r2 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.util.PrecedingAxisIterator: org.xmlpull.v1.builder.xpath.jaxen.Navigator access$000(org.xmlpull.v1.builder.xpath.jaxen.util.PrecedingAxisIterator)>(r1);

        $r4 = interfaceinvoke $r2.<org.xmlpull.v1.builder.xpath.jaxen.Navigator: java.util.Iterator getSelfAxisIterator(java.lang.Object)>(r3);

        virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.util.StackedIterator: void pushIterator(java.util.Iterator)>($r4);

        $r5 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.util.PrecedingAxisIterator: org.xmlpull.v1.builder.xpath.jaxen.Navigator access$000(org.xmlpull.v1.builder.xpath.jaxen.util.PrecedingAxisIterator)>(r1);

        virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.util.StackedIterator: void init(java.lang.Object,org.xmlpull.v1.builder.xpath.jaxen.Navigator)>(r3, $r5);

        return;
    }

    protected java.util.Iterator createIterator(java.lang.Object)
    {
        org.xmlpull.v1.builder.xpath.jaxen.UnsupportedAxisException $r8;
        java.util.Iterator $r4, $r6;
        org.xmlpull.v1.builder.xpath.jaxen.util.PrecedingAxisIterator$ReverseDescendantOrSelfAxisIterator r0;
        java.lang.Object r3, $r7;
        java.util.LinkedList $r5;
        org.xmlpull.v1.builder.xpath.jaxen.util.PrecedingAxisIterator $r1;
        org.xmlpull.v1.builder.xpath.jaxen.Navigator $r2;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.util.PrecedingAxisIterator$ReverseDescendantOrSelfAxisIterator;

        r3 := @parameter0: java.lang.Object;

     label1:
        $r1 = r0.<org.xmlpull.v1.builder.xpath.jaxen.util.PrecedingAxisIterator$ReverseDescendantOrSelfAxisIterator: org.xmlpull.v1.builder.xpath.jaxen.util.PrecedingAxisIterator this$0>;

        $r2 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.util.PrecedingAxisIterator: org.xmlpull.v1.builder.xpath.jaxen.Navigator access$000(org.xmlpull.v1.builder.xpath.jaxen.util.PrecedingAxisIterator)>($r1);

        $r4 = interfaceinvoke $r2.<org.xmlpull.v1.builder.xpath.jaxen.Navigator: java.util.Iterator getChildAxisIterator(java.lang.Object)>(r3);

        if $r4 != null goto label3;

     label2:
        return null;

     label3:
        $r5 = new java.util.LinkedList;

        specialinvoke $r5.<java.util.LinkedList: void <init>()>();

     label4:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r5.<java.util.LinkedList: void addFirst(java.lang.Object)>($r7);

        goto label4;

     label5:
        $r6 = virtualinvoke $r5.<java.util.AbstractSequentialList: java.util.Iterator iterator()>();

     label6:
        return $r6;

     label7:
        $r8 := @caughtexception;

        return null;

        catch org.xmlpull.v1.builder.xpath.jaxen.UnsupportedAxisException from label1 to label2 with label7;
        catch org.xmlpull.v1.builder.xpath.jaxen.UnsupportedAxisException from label3 to label6 with label7;
    }
}
