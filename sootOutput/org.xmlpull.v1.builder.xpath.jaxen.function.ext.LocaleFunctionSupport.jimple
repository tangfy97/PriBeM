public abstract class org.xmlpull.v1.builder.xpath.jaxen.function.ext.LocaleFunctionSupport extends java.lang.Object implements org.xmlpull.v1.builder.xpath.jaxen.Function
{

    public void <init>()
    {
        org.xmlpull.v1.builder.xpath.jaxen.function.ext.LocaleFunctionSupport r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.function.ext.LocaleFunctionSupport;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected java.util.Locale getLocale(java.lang.Object, org.xmlpull.v1.builder.xpath.jaxen.Navigator)
    {
        java.util.List r8;
        java.util.Locale $r4, $r6, $r7;
        int $i0;
        java.lang.Object r0, $r5;
        org.xmlpull.v1.builder.xpath.jaxen.function.ext.LocaleFunctionSupport r3;
        java.lang.String $r2;
        org.xmlpull.v1.builder.xpath.jaxen.Navigator r1;
        boolean $z0, $z1, $z2;

        r3 := @this: org.xmlpull.v1.builder.xpath.jaxen.function.ext.LocaleFunctionSupport;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: org.xmlpull.v1.builder.xpath.jaxen.Navigator;

        $z0 = r0 instanceof java.util.Locale;

        if $z0 == 0 goto label1;

        $r7 = (java.util.Locale) r0;

        return $r7;

     label1:
        $z1 = r0 instanceof java.util.List;

        if $z1 == 0 goto label3;

        r8 = (java.util.List) r0;

        $z2 = interfaceinvoke r8.<java.util.List: boolean isEmpty()>();

        if $z2 != 0 goto label2;

        $r5 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = virtualinvoke r3.<org.xmlpull.v1.builder.xpath.jaxen.function.ext.LocaleFunctionSupport: java.util.Locale getLocale(java.lang.Object,org.xmlpull.v1.builder.xpath.jaxen.Navigator)>($r5, r1);

        return $r6;

     label2:
        goto label4;

     label3:
        $r2 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.function.StringFunction: java.lang.String evaluate(java.lang.Object,org.xmlpull.v1.builder.xpath.jaxen.Navigator)>(r0, r1);

        if $r2 == null goto label4;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label4;

        $r4 = virtualinvoke r3.<org.xmlpull.v1.builder.xpath.jaxen.function.ext.LocaleFunctionSupport: java.util.Locale findLocale(java.lang.String)>($r2);

        return $r4;

     label4:
        return null;
    }

    protected java.util.Locale findLocale(java.lang.String)
    {
        java.util.StringTokenizer $r0;
        java.util.Locale $r5, $r6, $r8;
        org.xmlpull.v1.builder.xpath.jaxen.function.ext.LocaleFunctionSupport r7;
        java.lang.String r1, $r2, $r3, $r4;
        boolean $z0, $z1, $z2;

        r7 := @this: org.xmlpull.v1.builder.xpath.jaxen.function.ext.LocaleFunctionSupport;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.util.StringTokenizer;

        specialinvoke $r0.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, "-");

        $z0 = virtualinvoke $r0.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label3;

        $r2 = virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $z1 = virtualinvoke $r0.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 != 0 goto label1;

        $r8 = virtualinvoke r7.<org.xmlpull.v1.builder.xpath.jaxen.function.ext.LocaleFunctionSupport: java.util.Locale findLocaleForLanguage(java.lang.String)>($r2);

        return $r8;

     label1:
        $r3 = virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $z2 = virtualinvoke $r0.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z2 != 0 goto label2;

        $r6 = new java.util.Locale;

        specialinvoke $r6.<java.util.Locale: void <init>(java.lang.String,java.lang.String)>($r2, $r3);

        return $r6;

     label2:
        $r4 = virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r5 = new java.util.Locale;

        specialinvoke $r5.<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r2, $r3, $r4);

        return $r5;

     label3:
        return null;
    }

    protected java.util.Locale findLocaleForLanguage(java.lang.String)
    {
        java.util.Locale[] $r0;
        java.util.Locale r1;
        int i0, $i1, $i2, i3;
        org.xmlpull.v1.builder.xpath.jaxen.function.ext.LocaleFunctionSupport r6;
        java.lang.String r2, $r3, $r4, $r5;
        boolean $z0;

        r6 := @this: org.xmlpull.v1.builder.xpath.jaxen.function.ext.LocaleFunctionSupport;

        r2 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.util.Locale: java.util.Locale[] getAvailableLocales()>();

        i3 = 0;

        i0 = lengthof $r0;

     label1:
        if i3 >= i0 goto label5;

        r1 = $r0[i3];

        $r3 = virtualinvoke r1.<java.util.Locale: java.lang.String getLanguage()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label4;

        $r4 = virtualinvoke r1.<java.util.Locale: java.lang.String getCountry()>();

        if $r4 == null goto label2;

        $i2 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i2 != 0 goto label4;

     label2:
        $r5 = virtualinvoke r1.<java.util.Locale: java.lang.String getVariant()>();

        if $r5 == null goto label3;

        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i1 != 0 goto label4;

     label3:
        return r1;

     label4:
        i3 = i3 + 1;

        goto label1;

     label5:
        return null;
    }

    public abstract java.lang.Object call(org.xmlpull.v1.builder.xpath.jaxen.Context, java.util.List) throws org.xmlpull.v1.builder.xpath.jaxen.FunctionCallException;
}
