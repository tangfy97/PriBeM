public class org.codehaus.jackson.map.deser.std.CalendarDeserializer extends org.codehaus.jackson.map.deser.std.StdScalarDeserializer
{
    protected final java.lang.Class _calendarClass;

    public void <init>()
    {
        org.codehaus.jackson.map.deser.std.CalendarDeserializer r0;

        r0 := @this: org.codehaus.jackson.map.deser.std.CalendarDeserializer;

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.CalendarDeserializer: void <init>(java.lang.Class)>(null);

        return;
    }

    public void <init>(java.lang.Class)
    {
        org.codehaus.jackson.map.deser.std.CalendarDeserializer r0;
        java.lang.Class r1;

        r0 := @this: org.codehaus.jackson.map.deser.std.CalendarDeserializer;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.StdScalarDeserializer: void <init>(java.lang.Class)>(class "Ljava/util/Calendar;");

        r0.<org.codehaus.jackson.map.deser.std.CalendarDeserializer: java.lang.Class _calendarClass> = r1;

        return;
    }

    public java.util.Calendar deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        java.util.Date $r3;
        long $l0;
        org.codehaus.jackson.map.DeserializationContext r2;
        java.lang.Exception $r8;
        org.codehaus.jackson.map.JsonMappingException $r10;
        java.util.Calendar $r7, r11;
        org.codehaus.jackson.map.deser.std.CalendarDeserializer r0;
        java.lang.Class $r4, $r5, $r9;
        java.lang.Object $r6;
        org.codehaus.jackson.JsonParser r1;

        r0 := @this: org.codehaus.jackson.map.deser.std.CalendarDeserializer;

        r1 := @parameter0: org.codehaus.jackson.JsonParser;

        r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.CalendarDeserializer: java.util.Date _parseDate(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r1, r2);

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = r0.<org.codehaus.jackson.map.deser.std.CalendarDeserializer: java.lang.Class _calendarClass>;

        if $r4 != null goto label2;

        $r7 = virtualinvoke r2.<org.codehaus.jackson.map.DeserializationContext: java.util.Calendar constructCalendar(java.util.Date)>($r3);

        return $r7;

     label2:
        $r5 = r0.<org.codehaus.jackson.map.deser.std.CalendarDeserializer: java.lang.Class _calendarClass>;

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.Object newInstance()>();

        r11 = (java.util.Calendar) $r6;

        $l0 = virtualinvoke $r3.<java.util.Date: long getTime()>();

        virtualinvoke r11.<java.util.Calendar: void setTimeInMillis(long)>($l0);

     label3:
        return r11;

     label4:
        $r8 := @caughtexception;

        $r9 = r0.<org.codehaus.jackson.map.deser.std.CalendarDeserializer: java.lang.Class _calendarClass>;

        $r10 = virtualinvoke r2.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.Throwable)>($r9, $r8);

        throw $r10;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public volatile java.lang.Object deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        java.util.Calendar $r3;
        org.codehaus.jackson.map.deser.std.CalendarDeserializer r0;
        org.codehaus.jackson.JsonParser r1;
        org.codehaus.jackson.map.DeserializationContext r2;

        r0 := @this: org.codehaus.jackson.map.deser.std.CalendarDeserializer;

        r1 := @parameter0: org.codehaus.jackson.JsonParser;

        r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.CalendarDeserializer: java.util.Calendar deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r1, r2);

        return $r3;
    }
}
