class org.waveprotocol.box.server.persistence.file.FileAttachmentStore$1 extends java.lang.Object implements org.waveprotocol.box.server.persistence.AttachmentStore$AttachmentData
{
    final java.io.File val$file;
    final org.waveprotocol.box.server.persistence.file.FileAttachmentStore this$0;

    void <init>(org.waveprotocol.box.server.persistence.file.FileAttachmentStore, java.io.File)
    {
        org.waveprotocol.box.server.persistence.file.FileAttachmentStore r1;
        org.waveprotocol.box.server.persistence.file.FileAttachmentStore$1 r0;
        java.io.File r2;

        r0 := @this: org.waveprotocol.box.server.persistence.file.FileAttachmentStore$1;

        r1 := @parameter0: org.waveprotocol.box.server.persistence.file.FileAttachmentStore;

        r2 := @parameter1: java.io.File;

        r0.<org.waveprotocol.box.server.persistence.file.FileAttachmentStore$1: org.waveprotocol.box.server.persistence.file.FileAttachmentStore this$0> = r1;

        r0.<org.waveprotocol.box.server.persistence.file.FileAttachmentStore$1: java.io.File val$file> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.Date getLastModifiedDate()
    {
        java.util.Date $r0;
        long $l0;
        org.waveprotocol.box.server.persistence.file.FileAttachmentStore$1 r1;
        java.io.File $r2;

        r1 := @this: org.waveprotocol.box.server.persistence.file.FileAttachmentStore$1;

        $r0 = new java.util.Date;

        $r2 = r1.<org.waveprotocol.box.server.persistence.file.FileAttachmentStore$1: java.io.File val$file>;

        $l0 = virtualinvoke $r2.<java.io.File: long lastModified()>();

        specialinvoke $r0.<java.util.Date: void <init>(long)>($l0);

        return $r0;
    }

    public java.io.InputStream getInputStream() throws java.io.IOException
    {
        java.io.FileInputStream $r0;
        org.waveprotocol.box.server.persistence.file.FileAttachmentStore$1 r1;
        java.io.File $r2;

        r1 := @this: org.waveprotocol.box.server.persistence.file.FileAttachmentStore$1;

        $r0 = new java.io.FileInputStream;

        $r2 = r1.<org.waveprotocol.box.server.persistence.file.FileAttachmentStore$1: java.io.File val$file>;

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

        return $r0;
    }

    public long getContentSize()
    {
        long $l0;
        org.waveprotocol.box.server.persistence.file.FileAttachmentStore$1 r0;
        java.io.File $r1;

        r0 := @this: org.waveprotocol.box.server.persistence.file.FileAttachmentStore$1;

        $r1 = r0.<org.waveprotocol.box.server.persistence.file.FileAttachmentStore$1: java.io.File val$file>;

        $l0 = virtualinvoke $r1.<java.io.File: long length()>();

        return $l0;
    }

    public void writeDataTo(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r2;
        org.waveprotocol.box.server.persistence.file.FileAttachmentStore$1 r0;
        java.io.InputStream $r1;

        r0 := @this: org.waveprotocol.box.server.persistence.file.FileAttachmentStore$1;

        r2 := @parameter0: java.io.OutputStream;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.server.persistence.file.FileAttachmentStore$1: java.io.InputStream getInputStream()>();

        staticinvoke <org.waveprotocol.box.server.persistence.AttachmentUtil: void writeTo(java.io.InputStream,java.io.OutputStream)>($r1, r2);

        virtualinvoke $r1.<java.io.InputStream: void close()>();

        return;
    }
}
