public final class kodkod.engine.fol2sat.TrivialFormulaException extends java.lang.Exception
{
    private final kodkod.engine.bool.BooleanConstant value;
    private final kodkod.engine.fol2sat.TranslationLog log;
    private final kodkod.ast.Formula formula;
    private final kodkod.instance.Bounds bounds;
    private static final long serialVersionUID;
    static final boolean $assertionsDisabled;

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <kodkod.engine.fol2sat.TrivialFormulaException: long serialVersionUID> = 6251577831781586067L;

        $r0 = class "Lkodkod/engine/fol2sat/TrivialFormulaException;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <kodkod.engine.fol2sat.TrivialFormulaException: boolean $assertionsDisabled> = $z1;

        return;
    }

    void <init>(kodkod.ast.Formula, kodkod.instance.Bounds, kodkod.engine.bool.BooleanConstant, kodkod.engine.fol2sat.TranslationLog)
    {
        kodkod.engine.fol2sat.TrivialFormulaException r0;
        kodkod.engine.bool.BooleanConstant r2, $r3;
        kodkod.ast.Formula r8;
        kodkod.engine.fol2sat.TranslationLog r7;
        java.lang.AssertionError $r10;
        kodkod.instance.Bounds r9;
        java.lang.StringBuilder $r1, $r4, $r5;
        java.lang.String $r6, $r11;
        boolean $z0;

        r0 := @this: kodkod.engine.fol2sat.TrivialFormulaException;

        r8 := @parameter0: kodkod.ast.Formula;

        r9 := @parameter1: kodkod.instance.Bounds;

        r2 := @parameter2: kodkod.engine.bool.BooleanConstant;

        r7 := @parameter3: kodkod.engine.fol2sat.TranslationLog;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("Trivially ");

        $r3 = <kodkod.engine.bool.BooleanConstant: kodkod.engine.bool.BooleanConstant FALSE>;

        if r2 != $r3 goto label1;

        $r11 = "un";

        goto label2;

     label1:
        $r11 = "";

     label2:
        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("satisfiable formula.");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>($r6);

        $z0 = <kodkod.engine.fol2sat.TrivialFormulaException: boolean $assertionsDisabled>;

        if $z0 != 0 goto label4;

        if r2 == null goto label3;

        if r9 != null goto label4;

     label3:
        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label4:
        r0.<kodkod.engine.fol2sat.TrivialFormulaException: kodkod.engine.fol2sat.TranslationLog log> = r7;

        r0.<kodkod.engine.fol2sat.TrivialFormulaException: kodkod.ast.Formula formula> = r8;

        r0.<kodkod.engine.fol2sat.TrivialFormulaException: kodkod.instance.Bounds bounds> = r9;

        r0.<kodkod.engine.fol2sat.TrivialFormulaException: kodkod.engine.bool.BooleanConstant value> = r2;

        return;
    }

    public kodkod.engine.fol2sat.TranslationLog log()
    {
        kodkod.engine.fol2sat.TranslationLog $r1;
        kodkod.engine.fol2sat.TrivialFormulaException r0;

        r0 := @this: kodkod.engine.fol2sat.TrivialFormulaException;

        $r1 = r0.<kodkod.engine.fol2sat.TrivialFormulaException: kodkod.engine.fol2sat.TranslationLog log>;

        return $r1;
    }

    public kodkod.ast.Formula formula()
    {
        kodkod.engine.fol2sat.TrivialFormulaException r0;
        kodkod.ast.Formula $r1;

        r0 := @this: kodkod.engine.fol2sat.TrivialFormulaException;

        $r1 = r0.<kodkod.engine.fol2sat.TrivialFormulaException: kodkod.ast.Formula formula>;

        return $r1;
    }

    public kodkod.instance.Bounds bounds()
    {
        kodkod.engine.fol2sat.TrivialFormulaException r0;
        kodkod.instance.Bounds $r1;

        r0 := @this: kodkod.engine.fol2sat.TrivialFormulaException;

        $r1 = r0.<kodkod.engine.fol2sat.TrivialFormulaException: kodkod.instance.Bounds bounds>;

        return $r1;
    }

    public kodkod.engine.bool.BooleanConstant value()
    {
        kodkod.engine.fol2sat.TrivialFormulaException r0;
        kodkod.engine.bool.BooleanConstant $r1;

        r0 := @this: kodkod.engine.fol2sat.TrivialFormulaException;

        $r1 = r0.<kodkod.engine.fol2sat.TrivialFormulaException: kodkod.engine.bool.BooleanConstant value>;

        return $r1;
    }
}
