public abstract class org.springframework.core.io.AbstractFileResolvingResource extends org.springframework.core.io.AbstractResource
{

    public void <init>()
    {
        org.springframework.core.io.AbstractFileResolvingResource r0;

        r0 := @this: org.springframework.core.io.AbstractFileResolvingResource;

        specialinvoke r0.<org.springframework.core.io.AbstractResource: void <init>()>();

        return;
    }

    public java.io.File getFile() throws java.io.IOException
    {
        java.net.URL $r1;
        java.io.File $r4, $r6;
        org.springframework.core.io.AbstractFileResolvingResource r0;
        java.lang.String $r2, $r3;
        boolean $z0;
        org.springframework.core.io.Resource $r5;

        r0 := @this: org.springframework.core.io.AbstractFileResolvingResource;

        $r1 = virtualinvoke r0.<org.springframework.core.io.AbstractFileResolvingResource: java.net.URL getURL()>();

        $r2 = virtualinvoke $r1.<java.net.URL: java.lang.String getProtocol()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("vfs");

        if $z0 == 0 goto label1;

        $r5 = staticinvoke <org.springframework.core.io.AbstractFileResolvingResource$VfsResourceDelegate: org.springframework.core.io.Resource getResource(java.net.URL)>($r1);

        $r6 = interfaceinvoke $r5.<org.springframework.core.io.Resource: java.io.File getFile()>();

        return $r6;

     label1:
        $r3 = virtualinvoke r0.<org.springframework.core.io.AbstractFileResolvingResource: java.lang.String getDescription()>();

        $r4 = staticinvoke <org.springframework.util.ResourceUtils: java.io.File getFile(java.net.URL,java.lang.String)>($r1, $r3);

        return $r4;
    }

    protected java.io.File getFileForLastModifiedCheck() throws java.io.IOException
    {
        java.net.URL $r1, $r3;
        java.io.File $r2, $r5, $r7;
        org.springframework.core.io.AbstractFileResolvingResource r0;
        java.lang.String $r4;
        boolean $z0, $z1;
        org.springframework.core.io.Resource $r6;

        r0 := @this: org.springframework.core.io.AbstractFileResolvingResource;

        $r1 = virtualinvoke r0.<org.springframework.core.io.AbstractFileResolvingResource: java.net.URL getURL()>();

        $z0 = staticinvoke <org.springframework.util.ResourceUtils: boolean isJarURL(java.net.URL)>($r1);

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <org.springframework.util.ResourceUtils: java.net.URL extractJarFileURL(java.net.URL)>($r1);

        $r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("vfs");

        if $z1 == 0 goto label1;

        $r6 = staticinvoke <org.springframework.core.io.AbstractFileResolvingResource$VfsResourceDelegate: org.springframework.core.io.Resource getResource(java.net.URL)>($r3);

        $r7 = interfaceinvoke $r6.<org.springframework.core.io.Resource: java.io.File getFile()>();

        return $r7;

     label1:
        $r5 = staticinvoke <org.springframework.util.ResourceUtils: java.io.File getFile(java.net.URL,java.lang.String)>($r3, "Jar URL");

        return $r5;

     label2:
        $r2 = virtualinvoke r0.<org.springframework.core.io.AbstractFileResolvingResource: java.io.File getFile()>();

        return $r2;
    }

    protected java.io.File getFile(java.net.URI) throws java.io.IOException
    {
        java.io.File $r4, $r6;
        org.springframework.core.io.AbstractFileResolvingResource r2;
        java.net.URI r0;
        java.lang.String $r1, $r3;
        boolean $z0;
        org.springframework.core.io.Resource $r5;

        r2 := @this: org.springframework.core.io.AbstractFileResolvingResource;

        r0 := @parameter0: java.net.URI;

        $r1 = virtualinvoke r0.<java.net.URI: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("vfs");

        if $z0 == 0 goto label1;

        $r5 = staticinvoke <org.springframework.core.io.AbstractFileResolvingResource$VfsResourceDelegate: org.springframework.core.io.Resource getResource(java.net.URI)>(r0);

        $r6 = interfaceinvoke $r5.<org.springframework.core.io.Resource: java.io.File getFile()>();

        return $r6;

     label1:
        $r3 = virtualinvoke r2.<org.springframework.core.io.AbstractFileResolvingResource: java.lang.String getDescription()>();

        $r4 = staticinvoke <org.springframework.util.ResourceUtils: java.io.File getFile(java.net.URI,java.lang.String)>(r0, $r3);

        return $r4;
    }

    public boolean exists()
    {
        java.net.HttpURLConnection r3, $r7;
        java.net.URL $r1;
        java.io.IOException $r6;
        java.io.File $r5;
        org.springframework.core.io.AbstractFileResolvingResource r0;
        java.net.URLConnection $r2;
        int $i0, $i1;
        boolean $z0, $z1, $z2;
        java.io.InputStream $r4;

        r0 := @this: org.springframework.core.io.AbstractFileResolvingResource;

     label01:
        $r1 = virtualinvoke r0.<org.springframework.core.io.AbstractFileResolvingResource: java.net.URL getURL()>();

        $z0 = staticinvoke <org.springframework.util.ResourceUtils: boolean isFileURL(java.net.URL)>($r1);

        if $z0 == 0 goto label03;

        $r5 = virtualinvoke r0.<org.springframework.core.io.AbstractFileResolvingResource: java.io.File getFile()>();

        $z2 = virtualinvoke $r5.<java.io.File: boolean exists()>();

     label02:
        return $z2;

     label03:
        $r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>();

        virtualinvoke $r2.<java.net.URLConnection: void setUseCaches(boolean)>(0);

        $z1 = $r2 instanceof java.net.HttpURLConnection;

        if $z1 == 0 goto label04;

        $r7 = (java.net.HttpURLConnection) $r2;

        goto label05;

     label04:
        $r7 = null;

     label05:
        r3 = $r7;

        if $r7 == null goto label07;

        virtualinvoke $r7.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("HEAD");

        $i1 = virtualinvoke $r7.<java.net.HttpURLConnection: int getResponseCode()>();

        if $i1 != 200 goto label07;

     label06:
        return 1;

     label07:
        $i0 = virtualinvoke $r2.<java.net.URLConnection: int getContentLength()>();

        if $i0 < 0 goto label09;

     label08:
        return 1;

     label09:
        if r3 == null goto label11;

        virtualinvoke r3.<java.net.HttpURLConnection: void disconnect()>();

     label10:
        return 0;

     label11:
        $r4 = virtualinvoke r0.<org.springframework.core.io.AbstractFileResolvingResource: java.io.InputStream getInputStream()>();

        virtualinvoke $r4.<java.io.InputStream: void close()>();

     label12:
        return 1;

     label13:
        $r6 := @caughtexception;

        return 0;

        catch java.io.IOException from label01 to label02 with label13;
        catch java.io.IOException from label03 to label06 with label13;
        catch java.io.IOException from label07 to label08 with label13;
        catch java.io.IOException from label09 to label10 with label13;
        catch java.io.IOException from label11 to label12 with label13;
    }

    public boolean isReadable()
    {
        org.springframework.core.io.AbstractFileResolvingResource r0;
        java.net.URL $r1;
        java.io.IOException $r3;
        java.io.File $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.springframework.core.io.AbstractFileResolvingResource;

     label1:
        $r1 = virtualinvoke r0.<org.springframework.core.io.AbstractFileResolvingResource: java.net.URL getURL()>();

        $z0 = staticinvoke <org.springframework.util.ResourceUtils: boolean isFileURL(java.net.URL)>($r1);

        if $z0 == 0 goto label3;

        $r2 = virtualinvoke r0.<org.springframework.core.io.AbstractFileResolvingResource: java.io.File getFile()>();

        $z1 = virtualinvoke $r2.<java.io.File: boolean canRead()>();

        if $z1 == 0 goto label2;

        $z2 = virtualinvoke $r2.<java.io.File: boolean isDirectory()>();

        if $z2 != 0 goto label2;

        return 1;

     label2:
        return 0;

     label3:
        return 1;

     label4:
        $r3 := @caughtexception;

        return 0;

        catch java.io.IOException from label1 to label2 with label4;
    }

    public long contentLength() throws java.io.IOException
    {
        java.net.HttpURLConnection $r3;
        java.net.URL $r1;
        long $l1, $l2;
        org.springframework.core.io.AbstractFileResolvingResource r0;
        java.net.URLConnection $r2;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: org.springframework.core.io.AbstractFileResolvingResource;

        $r1 = virtualinvoke r0.<org.springframework.core.io.AbstractFileResolvingResource: java.net.URL getURL()>();

        $z0 = staticinvoke <org.springframework.util.ResourceUtils: boolean isFileURL(java.net.URL)>($r1);

        if $z0 == 0 goto label1;

        $l2 = specialinvoke r0.<org.springframework.core.io.AbstractResource: long contentLength()>();

        return $l2;

     label1:
        $r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>();

        virtualinvoke $r2.<java.net.URLConnection: void setUseCaches(boolean)>(0);

        $z1 = $r2 instanceof java.net.HttpURLConnection;

        if $z1 == 0 goto label2;

        $r3 = (java.net.HttpURLConnection) $r2;

        virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("HEAD");

     label2:
        $i0 = virtualinvoke $r2.<java.net.URLConnection: int getContentLength()>();

        $l1 = (long) $i0;

        return $l1;
    }

    public long lastModified() throws java.io.IOException
    {
        java.net.HttpURLConnection $r3;
        java.net.URL $r1;
        long $l0, $l1;
        org.springframework.core.io.AbstractFileResolvingResource r0;
        java.net.URLConnection $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.springframework.core.io.AbstractFileResolvingResource;

        $r1 = virtualinvoke r0.<org.springframework.core.io.AbstractFileResolvingResource: java.net.URL getURL()>();

        $z0 = staticinvoke <org.springframework.util.ResourceUtils: boolean isFileURL(java.net.URL)>($r1);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <org.springframework.util.ResourceUtils: boolean isJarURL(java.net.URL)>($r1);

        if $z1 == 0 goto label2;

     label1:
        $l0 = specialinvoke r0.<org.springframework.core.io.AbstractResource: long lastModified()>();

        return $l0;

     label2:
        $r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>();

        virtualinvoke $r2.<java.net.URLConnection: void setUseCaches(boolean)>(0);

        $z2 = $r2 instanceof java.net.HttpURLConnection;

        if $z2 == 0 goto label3;

        $r3 = (java.net.HttpURLConnection) $r2;

        virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("HEAD");

     label3:
        $l1 = virtualinvoke $r2.<java.net.URLConnection: long getLastModified()>();

        return $l1;
    }
}
