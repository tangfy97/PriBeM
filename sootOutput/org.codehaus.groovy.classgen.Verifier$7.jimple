class org.codehaus.groovy.classgen.Verifier$7 extends java.lang.Object implements org.codehaus.groovy.classgen.Verifier$DefaultArgsAction
{
    private final org.codehaus.groovy.ast.ClassNode val$node;
    private final org.codehaus.groovy.classgen.Verifier this$0;

    void <init>(org.codehaus.groovy.classgen.Verifier, org.codehaus.groovy.ast.ClassNode)
    {
        org.codehaus.groovy.classgen.Verifier$7 r0;
        org.codehaus.groovy.classgen.Verifier r1;
        org.codehaus.groovy.ast.ClassNode r2;

        r0 := @this: org.codehaus.groovy.classgen.Verifier$7;

        r1 := @parameter0: org.codehaus.groovy.classgen.Verifier;

        r2 := @parameter1: org.codehaus.groovy.ast.ClassNode;

        r0.<org.codehaus.groovy.classgen.Verifier$7: org.codehaus.groovy.classgen.Verifier this$0> = r1;

        r0.<org.codehaus.groovy.classgen.Verifier$7: org.codehaus.groovy.ast.ClassNode val$node> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void call(org.codehaus.groovy.ast.expr.ArgumentListExpression, org.codehaus.groovy.ast.Parameter[], org.codehaus.groovy.ast.MethodNode)
    {
        org.codehaus.groovy.ast.stmt.Statement r27;
        org.codehaus.groovy.ast.MethodNode r1, $r6, $r14;
        org.codehaus.groovy.ast.stmt.ExpressionStatement $r26;
        java.lang.StringBuffer $r17, $r18, $r20, $r21, $r23, $r24;
        int $i0;
        org.codehaus.groovy.ast.ClassNode[] $r10;
        org.codehaus.groovy.ast.expr.MethodCallExpression $r0;
        java.lang.String $r3, $r7, $r13, $r19, $r22, $r25;
        org.codehaus.groovy.classgen.Verifier$7 r11;
        boolean $z0;
        org.codehaus.groovy.ast.expr.VariableExpression $r2;
        org.codehaus.groovy.ast.ClassNode $r8, $r12, $r15;
        org.codehaus.groovy.ast.expr.ArgumentListExpression r4;
        org.codehaus.groovy.ast.stmt.ReturnStatement $r5;
        org.codehaus.groovy.ast.Parameter[] r9;
        org.codehaus.groovy.syntax.RuntimeParserException $r16;

        r11 := @this: org.codehaus.groovy.classgen.Verifier$7;

        r4 := @parameter0: org.codehaus.groovy.ast.expr.ArgumentListExpression;

        r9 := @parameter1: org.codehaus.groovy.ast.Parameter[];

        r1 := @parameter2: org.codehaus.groovy.ast.MethodNode;

        $r0 = new org.codehaus.groovy.ast.expr.MethodCallExpression;

        $r2 = <org.codehaus.groovy.ast.expr.VariableExpression: org.codehaus.groovy.ast.expr.VariableExpression THIS_EXPRESSION>;

        $r3 = virtualinvoke r1.<org.codehaus.groovy.ast.MethodNode: java.lang.String getName()>();

        specialinvoke $r0.<org.codehaus.groovy.ast.expr.MethodCallExpression: void <init>(org.codehaus.groovy.ast.expr.Expression,java.lang.String,org.codehaus.groovy.ast.expr.Expression)>($r2, $r3, r4);

        virtualinvoke $r0.<org.codehaus.groovy.ast.expr.MethodCallExpression: void setImplicitThis(boolean)>(1);

        $z0 = virtualinvoke r1.<org.codehaus.groovy.ast.MethodNode: boolean isVoidMethod()>();

        if $z0 == 0 goto label1;

        $r26 = new org.codehaus.groovy.ast.stmt.ExpressionStatement;

        specialinvoke $r26.<org.codehaus.groovy.ast.stmt.ExpressionStatement: void <init>(org.codehaus.groovy.ast.expr.Expression)>($r0);

        r27 = $r26;

        goto label2;

     label1:
        $r5 = new org.codehaus.groovy.ast.stmt.ReturnStatement;

        specialinvoke $r5.<org.codehaus.groovy.ast.stmt.ReturnStatement: void <init>(org.codehaus.groovy.ast.expr.Expression)>($r0);

        virtualinvoke $r5.<org.codehaus.groovy.ast.stmt.ReturnStatement: void setSourcePosition(org.codehaus.groovy.ast.ASTNode)>($r0);

        r27 = $r5;

     label2:
        $r6 = new org.codehaus.groovy.ast.MethodNode;

        $r7 = virtualinvoke r1.<org.codehaus.groovy.ast.MethodNode: java.lang.String getName()>();

        $i0 = virtualinvoke r1.<org.codehaus.groovy.ast.MethodNode: int getModifiers()>();

        $r8 = virtualinvoke r1.<org.codehaus.groovy.ast.MethodNode: org.codehaus.groovy.ast.ClassNode getReturnType()>();

        $r10 = virtualinvoke r1.<org.codehaus.groovy.ast.MethodNode: org.codehaus.groovy.ast.ClassNode[] getExceptions()>();

        specialinvoke $r6.<org.codehaus.groovy.ast.MethodNode: void <init>(java.lang.String,int,org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.Parameter[],org.codehaus.groovy.ast.ClassNode[],org.codehaus.groovy.ast.stmt.Statement)>($r7, $i0, $r8, r9, $r10, r27);

        $r12 = r11.<org.codehaus.groovy.classgen.Verifier$7: org.codehaus.groovy.ast.ClassNode val$node>;

        $r13 = virtualinvoke r1.<org.codehaus.groovy.ast.MethodNode: java.lang.String getName()>();

        $r14 = virtualinvoke $r12.<org.codehaus.groovy.ast.ClassNode: org.codehaus.groovy.ast.MethodNode getDeclaredMethod(java.lang.String,org.codehaus.groovy.ast.Parameter[])>($r13, r9);

        if $r14 == null goto label3;

        $r16 = new org.codehaus.groovy.syntax.RuntimeParserException;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The method with default parameters \"");

        $r19 = virtualinvoke r1.<org.codehaus.groovy.ast.MethodNode: java.lang.String getTypeDescriptor()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" defines a method \"");

        $r22 = virtualinvoke $r6.<org.codehaus.groovy.ast.MethodNode: java.lang.String getTypeDescriptor()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" that is already defined.");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r16.<org.codehaus.groovy.syntax.RuntimeParserException: void <init>(java.lang.String,org.codehaus.groovy.ast.ASTNode)>($r25, r1);

        throw $r16;

     label3:
        $r15 = r11.<org.codehaus.groovy.classgen.Verifier$7: org.codehaus.groovy.ast.ClassNode val$node>;

        virtualinvoke $r15.<org.codehaus.groovy.ast.ClassNode: void addMethod(org.codehaus.groovy.ast.MethodNode)>($r6);

        return;
    }
}
