public interface  jena.schemagen$SchemagenOptions extends java.lang.Object
{
    public static final java.lang.Object[][] m_optionDefinitions;

    public abstract boolean hasConfigFileOption();

    public abstract java.lang.String getConfigFileOption();

    public abstract boolean hasRootOption();

    public abstract java.lang.String getRootOption();

    public abstract boolean hasNoCommentsOption();

    public abstract java.lang.String getNoCommentsOption();

    public abstract boolean hasInputOption();

    public abstract com.hp.hpl.jena.rdf.model.Resource getInputOption();

    public abstract boolean hasLangOwlOption();

    public abstract java.lang.String getLangOwlOption();

    public abstract boolean hasLangRdfsOption();

    public abstract java.lang.String getLangRdfsOption();

    public abstract boolean hasOutputOption();

    public abstract java.lang.String getOutputOption();

    public abstract boolean hasHeaderOption();

    public abstract java.lang.String getHeaderOption();

    public abstract boolean hasFooterOption();

    public abstract java.lang.String getFooterOption();

    public abstract boolean hasMarkerOption();

    public abstract java.lang.String getMarkerOption();

    public abstract boolean hasPackagenameOption();

    public abstract java.lang.String getPackagenameOption();

    public abstract boolean hasOntologyOption();

    public abstract java.lang.String getOntologyOption();

    public abstract boolean hasClassnameOption();

    public abstract java.lang.String getClassnameOption();

    public abstract boolean hasClassdecOption();

    public abstract java.lang.String getClassdecOption();

    public abstract boolean hasNamespaceOption();

    public abstract com.hp.hpl.jena.rdf.model.Resource getNamespaceOption();

    public abstract boolean hasDeclarationsOption();

    public abstract java.lang.String getDeclarationsOption();

    public abstract boolean hasPropertySectionOption();

    public abstract java.lang.String getPropertySectionOption();

    public abstract boolean hasClassSectionOption();

    public abstract java.lang.String getClassSectionOption();

    public abstract boolean hasIndividualsSectionOption();

    public abstract java.lang.String getIndividualsSectionOption();

    public abstract boolean hasNopropertiesOption();

    public abstract boolean hasNoclassesOption();

    public abstract boolean hasNoindividualsOption();

    public abstract boolean hasPropTemplateOption();

    public abstract java.lang.String getPropTemplateOption();

    public abstract boolean hasClassTemplateOption();

    public abstract java.lang.String getClassTemplateOption();

    public abstract boolean hasIndividualTemplateOption();

    public abstract java.lang.String getIndividualTemplateOption();

    public abstract boolean hasUcNamesOption();

    public abstract boolean hasIncludeOption();

    public abstract java.util.List getIncludeOption();

    public abstract boolean hasClassnameSuffixOption();

    public abstract java.lang.String getClassnameSuffixOption();

    public abstract boolean hasNoheaderOption();

    public abstract boolean hasEncodingOption();

    public abstract java.lang.String getEncodingOption();

    public abstract boolean hasHelpOption();

    public abstract java.lang.String getHelpOption();

    public abstract boolean hasDosOption();

    public abstract boolean hasUseInfOption();

    public abstract boolean hasStrictIndividualsOption();

    public abstract boolean hasIncludeSourceOption();

    public abstract boolean hasNoStrictOption();

    static void <clinit>()
    {
        java.lang.Object[] $r1, $r4, $r7, $r10, $r13, $r16, $r19, $r22, $r25, $r28, $r31, $r34, $r37, $r40, $r43, $r46, $r49, $r52, $r55, $r58, $r61, $r64, $r67, $r70, $r73, $r76, $r79, $r82, $r85, $r88, $r91, $r94, $r97, $r100, $r103, $r106, $r109;
        jena.schemagen$OptionDefinition $r3, $r6, $r9, $r12, $r15, $r18, $r21, $r24, $r27, $r30, $r33, $r36, $r39, $r42, $r45, $r48, $r51, $r54, $r57, $r60, $r63, $r66, $r69, $r72, $r75, $r78, $r81, $r84, $r87, $r90, $r93, $r96, $r99, $r102, $r105, $r108, $r111;
        jena.schemagen$SchemagenOptions$OPT $r2, $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r26, $r29, $r32, $r35, $r38, $r41, $r44, $r47, $r50, $r53, $r56, $r59, $r62, $r65, $r68, $r71, $r74, $r77, $r80, $r83, $r86, $r89, $r92, $r95, $r98, $r101, $r104, $r107, $r110;
        java.lang.Object[][] $r0;

        $r0 = newarray (java.lang.Object[])[37];

        $r1 = newarray (java.lang.Object)[2];

        $r2 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT CONFIG_FILE>;

        $r1[0] = $r2;

        $r3 = new jena.schemagen$OptionDefinition;

        specialinvoke $r3.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("-c", "configFile");

        $r1[1] = $r3;

        $r0[0] = $r1;

        $r4 = newarray (java.lang.Object)[2];

        $r5 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT ROOT>;

        $r4[0] = $r5;

        $r6 = new jena.schemagen$OptionDefinition;

        specialinvoke $r6.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("-r", "root");

        $r4[1] = $r6;

        $r0[1] = $r4;

        $r7 = newarray (java.lang.Object)[2];

        $r8 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT NO_COMMENTS>;

        $r7[0] = $r8;

        $r9 = new jena.schemagen$OptionDefinition;

        specialinvoke $r9.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("--nocomments", "noComments");

        $r7[1] = $r9;

        $r0[2] = $r7;

        $r10 = newarray (java.lang.Object)[2];

        $r11 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT INPUT>;

        $r10[0] = $r11;

        $r12 = new jena.schemagen$OptionDefinition;

        specialinvoke $r12.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("-i", "input");

        $r10[1] = $r12;

        $r0[3] = $r10;

        $r13 = newarray (java.lang.Object)[2];

        $r14 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT LANG_DAML>;

        $r13[0] = $r14;

        $r15 = new jena.schemagen$OptionDefinition;

        specialinvoke $r15.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("--daml", "daml");

        $r13[1] = $r15;

        $r0[4] = $r13;

        $r16 = newarray (java.lang.Object)[2];

        $r17 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT LANG_OWL>;

        $r16[0] = $r17;

        $r18 = new jena.schemagen$OptionDefinition;

        specialinvoke $r18.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("--owl", "owl");

        $r16[1] = $r18;

        $r0[5] = $r16;

        $r19 = newarray (java.lang.Object)[2];

        $r20 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT LANG_RDFS>;

        $r19[0] = $r20;

        $r21 = new jena.schemagen$OptionDefinition;

        specialinvoke $r21.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("--rdfs", "rdfs");

        $r19[1] = $r21;

        $r0[6] = $r19;

        $r22 = newarray (java.lang.Object)[2];

        $r23 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT OUTPUT>;

        $r22[0] = $r23;

        $r24 = new jena.schemagen$OptionDefinition;

        specialinvoke $r24.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("-o", "output");

        $r22[1] = $r24;

        $r0[7] = $r22;

        $r25 = newarray (java.lang.Object)[2];

        $r26 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT HEADER>;

        $r25[0] = $r26;

        $r27 = new jena.schemagen$OptionDefinition;

        specialinvoke $r27.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("--header", "header");

        $r25[1] = $r27;

        $r0[8] = $r25;

        $r28 = newarray (java.lang.Object)[2];

        $r29 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT FOOTER>;

        $r28[0] = $r29;

        $r30 = new jena.schemagen$OptionDefinition;

        specialinvoke $r30.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("--footer", "footer");

        $r28[1] = $r30;

        $r0[9] = $r28;

        $r31 = newarray (java.lang.Object)[2];

        $r32 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT MARKER>;

        $r31[0] = $r32;

        $r33 = new jena.schemagen$OptionDefinition;

        specialinvoke $r33.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("--marker", "marker");

        $r31[1] = $r33;

        $r0[10] = $r31;

        $r34 = newarray (java.lang.Object)[2];

        $r35 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT PACKAGENAME>;

        $r34[0] = $r35;

        $r36 = new jena.schemagen$OptionDefinition;

        specialinvoke $r36.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("--package", "package");

        $r34[1] = $r36;

        $r0[11] = $r34;

        $r37 = newarray (java.lang.Object)[2];

        $r38 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT ONTOLOGY>;

        $r37[0] = $r38;

        $r39 = new jena.schemagen$OptionDefinition;

        specialinvoke $r39.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("--ontology", "ontology");

        $r37[1] = $r39;

        $r0[12] = $r37;

        $r40 = newarray (java.lang.Object)[2];

        $r41 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT CLASSNAME>;

        $r40[0] = $r41;

        $r42 = new jena.schemagen$OptionDefinition;

        specialinvoke $r42.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("-n", "classname");

        $r40[1] = $r42;

        $r0[13] = $r40;

        $r43 = newarray (java.lang.Object)[2];

        $r44 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT CLASSDEC>;

        $r43[0] = $r44;

        $r45 = new jena.schemagen$OptionDefinition;

        specialinvoke $r45.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("--classdec", "classdec");

        $r43[1] = $r45;

        $r0[14] = $r43;

        $r46 = newarray (java.lang.Object)[2];

        $r47 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT NAMESPACE>;

        $r46[0] = $r47;

        $r48 = new jena.schemagen$OptionDefinition;

        specialinvoke $r48.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("-a", "namespace");

        $r46[1] = $r48;

        $r0[15] = $r46;

        $r49 = newarray (java.lang.Object)[2];

        $r50 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT DECLARATIONS>;

        $r49[0] = $r50;

        $r51 = new jena.schemagen$OptionDefinition;

        specialinvoke $r51.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("--declarations", "declarations");

        $r49[1] = $r51;

        $r0[16] = $r49;

        $r52 = newarray (java.lang.Object)[2];

        $r53 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT PROPERTY_SECTION>;

        $r52[0] = $r53;

        $r54 = new jena.schemagen$OptionDefinition;

        specialinvoke $r54.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("--propSection", "propSection");

        $r52[1] = $r54;

        $r0[17] = $r52;

        $r55 = newarray (java.lang.Object)[2];

        $r56 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT CLASS_SECTION>;

        $r55[0] = $r56;

        $r57 = new jena.schemagen$OptionDefinition;

        specialinvoke $r57.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("--classSection", "classSection");

        $r55[1] = $r57;

        $r0[18] = $r55;

        $r58 = newarray (java.lang.Object)[2];

        $r59 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT INDIVIDUALS_SECTION>;

        $r58[0] = $r59;

        $r60 = new jena.schemagen$OptionDefinition;

        specialinvoke $r60.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("--individualsSection", "individualsSection");

        $r58[1] = $r60;

        $r0[19] = $r58;

        $r61 = newarray (java.lang.Object)[2];

        $r62 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT NOPROPERTIES>;

        $r61[0] = $r62;

        $r63 = new jena.schemagen$OptionDefinition;

        specialinvoke $r63.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("--noproperties", "noproperties");

        $r61[1] = $r63;

        $r0[20] = $r61;

        $r64 = newarray (java.lang.Object)[2];

        $r65 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT NOCLASSES>;

        $r64[0] = $r65;

        $r66 = new jena.schemagen$OptionDefinition;

        specialinvoke $r66.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("--noclasses", "noclasses");

        $r64[1] = $r66;

        $r0[21] = $r64;

        $r67 = newarray (java.lang.Object)[2];

        $r68 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT NOINDIVIDUALS>;

        $r67[0] = $r68;

        $r69 = new jena.schemagen$OptionDefinition;

        specialinvoke $r69.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("--noindividuals", "noindividuals");

        $r67[1] = $r69;

        $r0[22] = $r67;

        $r70 = newarray (java.lang.Object)[2];

        $r71 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT PROP_TEMPLATE>;

        $r70[0] = $r71;

        $r72 = new jena.schemagen$OptionDefinition;

        specialinvoke $r72.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("--propTemplate", "propTemplate");

        $r70[1] = $r72;

        $r0[23] = $r70;

        $r73 = newarray (java.lang.Object)[2];

        $r74 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT CLASS_TEMPLATE>;

        $r73[0] = $r74;

        $r75 = new jena.schemagen$OptionDefinition;

        specialinvoke $r75.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("--classTemplate", "classTemplate");

        $r73[1] = $r75;

        $r0[24] = $r73;

        $r76 = newarray (java.lang.Object)[2];

        $r77 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT INDIVIDUAL_TEMPLATE>;

        $r76[0] = $r77;

        $r78 = new jena.schemagen$OptionDefinition;

        specialinvoke $r78.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("--individualTemplate", "individualTemplate");

        $r76[1] = $r78;

        $r0[25] = $r76;

        $r79 = newarray (java.lang.Object)[2];

        $r80 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT UC_NAMES>;

        $r79[0] = $r80;

        $r81 = new jena.schemagen$OptionDefinition;

        specialinvoke $r81.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("--uppercase", "uppercase");

        $r79[1] = $r81;

        $r0[26] = $r79;

        $r82 = newarray (java.lang.Object)[2];

        $r83 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT INCLUDE>;

        $r82[0] = $r83;

        $r84 = new jena.schemagen$OptionDefinition;

        specialinvoke $r84.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("--include", "include");

        $r82[1] = $r84;

        $r0[27] = $r82;

        $r85 = newarray (java.lang.Object)[2];

        $r86 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT CLASSNAME_SUFFIX>;

        $r85[0] = $r86;

        $r87 = new jena.schemagen$OptionDefinition;

        specialinvoke $r87.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("--classnamesuffix", "classnamesuffix");

        $r85[1] = $r87;

        $r0[28] = $r85;

        $r88 = newarray (java.lang.Object)[2];

        $r89 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT NOHEADER>;

        $r88[0] = $r89;

        $r90 = new jena.schemagen$OptionDefinition;

        specialinvoke $r90.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("--noheader", "noheader");

        $r88[1] = $r90;

        $r0[29] = $r88;

        $r91 = newarray (java.lang.Object)[2];

        $r92 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT ENCODING>;

        $r91[0] = $r92;

        $r93 = new jena.schemagen$OptionDefinition;

        specialinvoke $r93.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("-e", "encoding");

        $r91[1] = $r93;

        $r0[30] = $r91;

        $r94 = newarray (java.lang.Object)[2];

        $r95 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT HELP>;

        $r94[0] = $r95;

        $r96 = new jena.schemagen$OptionDefinition;

        specialinvoke $r96.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("--help", "help");

        $r94[1] = $r96;

        $r0[31] = $r94;

        $r97 = newarray (java.lang.Object)[2];

        $r98 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT DOS>;

        $r97[0] = $r98;

        $r99 = new jena.schemagen$OptionDefinition;

        specialinvoke $r99.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("--dos", "dos");

        $r97[1] = $r99;

        $r0[32] = $r97;

        $r100 = newarray (java.lang.Object)[2];

        $r101 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT USE_INF>;

        $r100[0] = $r101;

        $r102 = new jena.schemagen$OptionDefinition;

        specialinvoke $r102.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("--inference", "inference");

        $r100[1] = $r102;

        $r0[33] = $r100;

        $r103 = newarray (java.lang.Object)[2];

        $r104 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT STRICT_INDIVIDUALS>;

        $r103[0] = $r104;

        $r105 = new jena.schemagen$OptionDefinition;

        specialinvoke $r105.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("--strictIndividuals", "strictIndividuals");

        $r103[1] = $r105;

        $r0[34] = $r103;

        $r106 = newarray (java.lang.Object)[2];

        $r107 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT INCLUDE_SOURCE>;

        $r106[0] = $r107;

        $r108 = new jena.schemagen$OptionDefinition;

        specialinvoke $r108.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("--includeSource", "includeSource");

        $r106[1] = $r108;

        $r0[35] = $r106;

        $r109 = newarray (java.lang.Object)[2];

        $r110 = <jena.schemagen$SchemagenOptions$OPT: jena.schemagen$SchemagenOptions$OPT NO_STRICT>;

        $r109[0] = $r110;

        $r111 = new jena.schemagen$OptionDefinition;

        specialinvoke $r111.<jena.schemagen$OptionDefinition: void <init>(java.lang.String,java.lang.String)>("--nostrict", "noStrict");

        $r109[1] = $r111;

        $r0[36] = $r109;

        <jena.schemagen$SchemagenOptions: java.lang.Object[][] m_optionDefinitions> = $r0;

        return;
    }
}
