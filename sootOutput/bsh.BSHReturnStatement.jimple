class bsh.BSHReturnStatement extends bsh.SimpleNode implements bsh.ParserConstants
{
    public int kind;

    void <init>(int)
    {
        int i0;
        bsh.BSHReturnStatement r0;

        r0 := @this: bsh.BSHReturnStatement;

        i0 := @parameter0: int;

        specialinvoke r0.<bsh.SimpleNode: void <init>(int)>(i0);

        return;
    }

    public java.lang.Object eval(bsh.CallStack, bsh.Interpreter) throws bsh.EvalError
    {
        bsh.ReturnControl $r1;
        bsh.Interpreter r4;
        bsh.SimpleNode $r5;
        bsh.CallStack r3;
        int $i0, $i1;
        java.lang.Object r6;
        bsh.Node $r2;
        bsh.BSHReturnStatement r0;

        r0 := @this: bsh.BSHReturnStatement;

        r3 := @parameter0: bsh.CallStack;

        r4 := @parameter1: bsh.Interpreter;

        $i0 = virtualinvoke r0.<bsh.BSHReturnStatement: int jjtGetNumChildren()>();

        if $i0 <= 0 goto label1;

        $r2 = virtualinvoke r0.<bsh.BSHReturnStatement: bsh.Node jjtGetChild(int)>(0);

        $r5 = (bsh.SimpleNode) $r2;

        r6 = virtualinvoke $r5.<bsh.SimpleNode: java.lang.Object eval(bsh.CallStack,bsh.Interpreter)>(r3, r4);

        goto label2;

     label1:
        r6 = <bsh.Primitive: bsh.Primitive VOID>;

     label2:
        $r1 = new bsh.ReturnControl;

        $i1 = r0.<bsh.BSHReturnStatement: int kind>;

        specialinvoke $r1.<bsh.ReturnControl: void <init>(int,java.lang.Object,bsh.SimpleNode)>($i1, r6, r0);

        return $r1;
    }
}
