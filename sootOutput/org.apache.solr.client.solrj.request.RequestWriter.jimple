public class org.apache.solr.client.solrj.request.RequestWriter extends java.lang.Object
{
    public static final java.nio.charset.Charset UTF_8;

    public void <init>()
    {
        org.apache.solr.client.solrj.request.RequestWriter r0;

        r0 := @this: org.apache.solr.client.solrj.request.RequestWriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.Collection getContentStreams(org.apache.solr.client.solrj.SolrRequest) throws java.io.IOException
    {
        org.apache.solr.client.solrj.SolrRequest r0;
        java.util.Collection $r1;
        org.apache.solr.client.solrj.request.RequestWriter r3;
        java.util.ArrayList $r4;
        org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream $r5;
        org.apache.solr.client.solrj.request.UpdateRequest r2;
        boolean $z0, $z1;

        r3 := @this: org.apache.solr.client.solrj.request.RequestWriter;

        r0 := @parameter0: org.apache.solr.client.solrj.SolrRequest;

        $z0 = r0 instanceof org.apache.solr.client.solrj.request.UpdateRequest;

        if $z0 == 0 goto label2;

        r2 = (org.apache.solr.client.solrj.request.UpdateRequest) r0;

        $z1 = specialinvoke r3.<org.apache.solr.client.solrj.request.RequestWriter: boolean isEmpty(org.apache.solr.client.solrj.request.UpdateRequest)>(r2);

        if $z1 == 0 goto label1;

        return null;

     label1:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = new org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream;

        specialinvoke $r5.<org.apache.solr.client.solrj.request.RequestWriter$LazyContentStream: void <init>(org.apache.solr.client.solrj.request.RequestWriter,org.apache.solr.client.solrj.request.UpdateRequest)>(r3, r2);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);

        return $r4;

     label2:
        $r1 = virtualinvoke r0.<org.apache.solr.client.solrj.SolrRequest: java.util.Collection getContentStreams()>();

        return $r1;
    }

    private boolean isEmpty(org.apache.solr.client.solrj.request.UpdateRequest)
    {
        java.util.Iterator $r5;
        org.apache.solr.client.solrj.request.RequestWriter r0;
        java.util.List $r2, $r3, $r4;
        org.apache.solr.client.solrj.request.UpdateRequest r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.solr.client.solrj.request.RequestWriter;

        r1 := @parameter0: org.apache.solr.client.solrj.request.UpdateRequest;

        $r2 = virtualinvoke r1.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List getDocuments()>();

        $z0 = virtualinvoke r0.<org.apache.solr.client.solrj.request.RequestWriter: boolean isNull(java.util.List)>($r2);

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r1.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List getDeleteById()>();

        $z1 = virtualinvoke r0.<org.apache.solr.client.solrj.request.RequestWriter: boolean isNull(java.util.List)>($r3);

        if $z1 == 0 goto label1;

        $r4 = virtualinvoke r1.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.List getDeleteQuery()>();

        $z2 = virtualinvoke r0.<org.apache.solr.client.solrj.request.RequestWriter: boolean isNull(java.util.List)>($r4);

        if $z2 == 0 goto label1;

        $r5 = virtualinvoke r1.<org.apache.solr.client.solrj.request.UpdateRequest: java.util.Iterator getDocIterator()>();

        if $r5 != null goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    public java.lang.String getPath(org.apache.solr.client.solrj.SolrRequest)
    {
        org.apache.solr.client.solrj.request.RequestWriter r2;
        org.apache.solr.client.solrj.SolrRequest r0;
        java.lang.String $r1;

        r2 := @this: org.apache.solr.client.solrj.request.RequestWriter;

        r0 := @parameter0: org.apache.solr.client.solrj.SolrRequest;

        $r1 = virtualinvoke r0.<org.apache.solr.client.solrj.SolrRequest: java.lang.String getPath()>();

        return $r1;
    }

    public org.apache.solr.common.util.ContentStream getContentStream(org.apache.solr.client.solrj.request.UpdateRequest) throws java.io.IOException
    {
        org.apache.solr.common.util.ContentStreamBase$StringStream $r0;
        org.apache.solr.client.solrj.request.UpdateRequest r1;
        org.apache.solr.client.solrj.request.RequestWriter r3;
        java.lang.String $r2;

        r3 := @this: org.apache.solr.client.solrj.request.RequestWriter;

        r1 := @parameter0: org.apache.solr.client.solrj.request.UpdateRequest;

        $r0 = new org.apache.solr.common.util.ContentStreamBase$StringStream;

        $r2 = virtualinvoke r1.<org.apache.solr.client.solrj.request.UpdateRequest: java.lang.String getXML()>();

        specialinvoke $r0.<org.apache.solr.common.util.ContentStreamBase$StringStream: void <init>(java.lang.String)>($r2);

        return $r0;
    }

    public void write(org.apache.solr.client.solrj.SolrRequest, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r3;
        org.apache.solr.client.solrj.SolrRequest r0;
        java.nio.charset.Charset $r4;
        org.apache.solr.client.solrj.request.UpdateRequest r1;
        org.apache.solr.client.solrj.request.RequestWriter r5;
        java.io.OutputStreamWriter $r2;
        boolean $z0;

        r5 := @this: org.apache.solr.client.solrj.request.RequestWriter;

        r0 := @parameter0: org.apache.solr.client.solrj.SolrRequest;

        r3 := @parameter1: java.io.OutputStream;

        $z0 = r0 instanceof org.apache.solr.client.solrj.request.UpdateRequest;

        if $z0 == 0 goto label1;

        r1 = (org.apache.solr.client.solrj.request.UpdateRequest) r0;

        $r2 = new java.io.OutputStreamWriter;

        $r4 = <org.apache.solr.client.solrj.request.RequestWriter: java.nio.charset.Charset UTF_8>;

        specialinvoke $r2.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>(r3, $r4);

        virtualinvoke r1.<org.apache.solr.client.solrj.request.UpdateRequest: void writeXML(java.io.Writer)>($r2);

        virtualinvoke $r2.<java.io.OutputStreamWriter: void flush()>();

     label1:
        return;
    }

    public java.lang.String getUpdateContentType()
    {
        org.apache.solr.client.solrj.request.RequestWriter r0;

        r0 := @this: org.apache.solr.client.solrj.request.RequestWriter;

        return "application/xml; charset=UTF-8";
    }

    protected boolean isNull(java.util.List)
    {
        java.util.List r0;
        org.apache.solr.client.solrj.request.RequestWriter r1;
        boolean $z0, $z1;

        r1 := @this: org.apache.solr.client.solrj.request.RequestWriter;

        r0 := @parameter0: java.util.List;

        if r0 == null goto label1;

        $z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    static void <clinit>()
    {
        java.nio.charset.Charset $r0;

        $r0 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");

        <org.apache.solr.client.solrj.request.RequestWriter: java.nio.charset.Charset UTF_8> = $r0;

        return;
    }
}
