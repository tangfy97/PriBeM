public class org.dom4j.bean.BeanDocumentFactory extends org.dom4j.DocumentFactory
{
    private static org.dom4j.bean.BeanDocumentFactory singleton;
    static java.lang.Class class$org$dom4j$bean$BeanDocumentFactory;

    public void <init>()
    {
        org.dom4j.bean.BeanDocumentFactory r0;

        r0 := @this: org.dom4j.bean.BeanDocumentFactory;

        specialinvoke r0.<org.dom4j.DocumentFactory: void <init>()>();

        return;
    }

    public static org.dom4j.DocumentFactory getInstance()
    {
        org.dom4j.bean.BeanDocumentFactory $r0;

        $r0 = <org.dom4j.bean.BeanDocumentFactory: org.dom4j.bean.BeanDocumentFactory singleton>;

        return $r0;
    }

    public org.dom4j.Element createElement(org.dom4j.QName)
    {
        org.dom4j.bean.BeanElement $r3, $r4;
        org.dom4j.bean.BeanDocumentFactory r0;
        org.dom4j.QName r1;
        java.lang.Object $r2;

        r0 := @this: org.dom4j.bean.BeanDocumentFactory;

        r1 := @parameter0: org.dom4j.QName;

        $r2 = virtualinvoke r0.<org.dom4j.bean.BeanDocumentFactory: java.lang.Object createBean(org.dom4j.QName)>(r1);

        if $r2 != null goto label1;

        $r4 = new org.dom4j.bean.BeanElement;

        specialinvoke $r4.<org.dom4j.bean.BeanElement: void <init>(org.dom4j.QName)>(r1);

        return $r4;

     label1:
        $r3 = new org.dom4j.bean.BeanElement;

        specialinvoke $r3.<org.dom4j.bean.BeanElement: void <init>(org.dom4j.QName,java.lang.Object)>(r1, $r2);

        return $r3;
    }

    public org.dom4j.Element createElement(org.dom4j.QName, org.xml.sax.Attributes)
    {
        org.dom4j.bean.BeanElement $r4, $r5;
        org.dom4j.bean.BeanDocumentFactory r0;
        org.xml.sax.Attributes r2;
        org.dom4j.QName r1;
        java.lang.Object $r3;

        r0 := @this: org.dom4j.bean.BeanDocumentFactory;

        r1 := @parameter0: org.dom4j.QName;

        r2 := @parameter1: org.xml.sax.Attributes;

        $r3 = virtualinvoke r0.<org.dom4j.bean.BeanDocumentFactory: java.lang.Object createBean(org.dom4j.QName,org.xml.sax.Attributes)>(r1, r2);

        if $r3 != null goto label1;

        $r5 = new org.dom4j.bean.BeanElement;

        specialinvoke $r5.<org.dom4j.bean.BeanElement: void <init>(org.dom4j.QName)>(r1);

        return $r5;

     label1:
        $r4 = new org.dom4j.bean.BeanElement;

        specialinvoke $r4.<org.dom4j.bean.BeanElement: void <init>(org.dom4j.QName,java.lang.Object)>(r1, $r3);

        return $r4;
    }

    public org.dom4j.Attribute createAttribute(org.dom4j.Element, org.dom4j.QName, java.lang.String)
    {
        org.dom4j.bean.BeanDocumentFactory r3;
        org.dom4j.tree.DefaultAttribute $r0;
        org.dom4j.QName r1;
        org.dom4j.Element r4;
        java.lang.String r2;

        r3 := @this: org.dom4j.bean.BeanDocumentFactory;

        r4 := @parameter0: org.dom4j.Element;

        r1 := @parameter1: org.dom4j.QName;

        r2 := @parameter2: java.lang.String;

        $r0 = new org.dom4j.tree.DefaultAttribute;

        specialinvoke $r0.<org.dom4j.tree.DefaultAttribute: void <init>(org.dom4j.QName,java.lang.String)>(r1, r2);

        return $r0;
    }

    protected java.lang.Object createBean(org.dom4j.QName)
    {
        org.dom4j.QName r1;
        org.dom4j.bean.BeanDocumentFactory r0;

        r0 := @this: org.dom4j.bean.BeanDocumentFactory;

        r1 := @parameter0: org.dom4j.QName;

        return null;
    }

    protected java.lang.Object createBean(org.dom4j.QName, org.xml.sax.Attributes)
    {
        java.lang.Exception $r6;
        org.dom4j.bean.BeanDocumentFactory r7;
        org.xml.sax.Attributes r0;
        java.lang.Class $r2, $r4, $r9;
        java.lang.Object $r5;
        org.dom4j.QName r8;
        java.lang.String $r1;
        java.lang.ClassLoader $r3;

        r7 := @this: org.dom4j.bean.BeanDocumentFactory;

        r8 := @parameter0: org.dom4j.QName;

        r0 := @parameter1: org.xml.sax.Attributes;

        $r1 = interfaceinvoke r0.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("class");

        if $r1 == null goto label6;

     label1:
        $r2 = <org.dom4j.bean.BeanDocumentFactory: java.lang.Class class$org$dom4j$bean$BeanDocumentFactory>;

        if $r2 != null goto label2;

        $r9 = staticinvoke <org.dom4j.bean.BeanDocumentFactory: java.lang.Class class$(java.lang.String)>("org.dom4j.bean.BeanDocumentFactory");

        <org.dom4j.bean.BeanDocumentFactory: java.lang.Class class$org$dom4j$bean$BeanDocumentFactory> = $r9;

        goto label3;

     label2:
        $r9 = <org.dom4j.bean.BeanDocumentFactory: java.lang.Class class$org$dom4j$bean$BeanDocumentFactory>;

     label3:
        $r3 = virtualinvoke $r9.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r1, 1, $r3);

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Object newInstance()>();

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;

        virtualinvoke r7.<org.dom4j.bean.BeanDocumentFactory: void handleException(java.lang.Exception)>($r6);

     label6:
        return null;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    protected void handleException(java.lang.Exception)
    {
        java.io.PrintStream $r1;
        org.dom4j.bean.BeanDocumentFactory r6;
        java.lang.StringBuffer $r0, $r2, $r4;
        java.lang.String $r5;
        java.lang.Exception r3;

        r6 := @this: org.dom4j.bean.BeanDocumentFactory;

        r3 := @parameter0: java.lang.Exception;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#### Warning: couldn\'t create bean: ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        org.dom4j.bean.BeanDocumentFactory $r0;

        $r0 = new org.dom4j.bean.BeanDocumentFactory;

        specialinvoke $r0.<org.dom4j.bean.BeanDocumentFactory: void <init>()>();

        <org.dom4j.bean.BeanDocumentFactory: org.dom4j.bean.BeanDocumentFactory singleton> = $r0;

        return;
    }
}
