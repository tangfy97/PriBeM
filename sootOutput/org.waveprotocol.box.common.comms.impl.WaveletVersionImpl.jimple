public class org.waveprotocol.box.common.comms.impl.WaveletVersionImpl extends java.lang.Object implements org.waveprotocol.box.common.comms.WaveletVersion
{
    private java.lang.String waveletId;
    private org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl hashedVersion;

    public void <init>()
    {
        org.waveprotocol.box.common.comms.impl.WaveletVersionImpl r0;

        r0 := @this: org.waveprotocol.box.common.comms.impl.WaveletVersionImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(org.waveprotocol.box.common.comms.WaveletVersion)
    {
        org.waveprotocol.box.common.comms.WaveletVersion r1;
        org.waveprotocol.box.common.comms.impl.WaveletVersionImpl r0;

        r0 := @this: org.waveprotocol.box.common.comms.impl.WaveletVersionImpl;

        r1 := @parameter0: org.waveprotocol.box.common.comms.WaveletVersion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.waveprotocol.box.common.comms.impl.WaveletVersionImpl: void copyFrom(org.waveprotocol.box.common.comms.WaveletVersion)>(r1);

        return;
    }

    public void copyFrom(org.waveprotocol.box.common.comms.WaveletVersion)
    {
        org.waveprotocol.box.common.comms.WaveletVersion r1;
        java.lang.String $r2;
        org.waveprotocol.wave.federation.ProtocolHashedVersion $r3;
        org.waveprotocol.box.common.comms.impl.WaveletVersionImpl r0;

        r0 := @this: org.waveprotocol.box.common.comms.impl.WaveletVersionImpl;

        r1 := @parameter0: org.waveprotocol.box.common.comms.WaveletVersion;

        $r2 = interfaceinvoke r1.<org.waveprotocol.box.common.comms.WaveletVersion: java.lang.String getWaveletId()>();

        virtualinvoke r0.<org.waveprotocol.box.common.comms.impl.WaveletVersionImpl: void setWaveletId(java.lang.String)>($r2);

        $r3 = interfaceinvoke r1.<org.waveprotocol.box.common.comms.WaveletVersion: org.waveprotocol.wave.federation.ProtocolHashedVersion getHashedVersion()>();

        virtualinvoke r0.<org.waveprotocol.box.common.comms.impl.WaveletVersionImpl: void setHashedVersion(org.waveprotocol.wave.federation.ProtocolHashedVersion)>($r3);

        return;
    }

    public java.lang.String getWaveletId()
    {
        java.lang.String $r1;
        org.waveprotocol.box.common.comms.impl.WaveletVersionImpl r0;

        r0 := @this: org.waveprotocol.box.common.comms.impl.WaveletVersionImpl;

        $r1 = r0.<org.waveprotocol.box.common.comms.impl.WaveletVersionImpl: java.lang.String waveletId>;

        return $r1;
    }

    public void setWaveletId(java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.box.common.comms.impl.WaveletVersionImpl r0;

        r0 := @this: org.waveprotocol.box.common.comms.impl.WaveletVersionImpl;

        r1 := @parameter0: java.lang.String;

        r0.<org.waveprotocol.box.common.comms.impl.WaveletVersionImpl: java.lang.String waveletId> = r1;

        return;
    }

    public org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl getHashedVersion()
    {
        org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl $r0, $r2;
        org.waveprotocol.box.common.comms.impl.WaveletVersionImpl r1;

        r1 := @this: org.waveprotocol.box.common.comms.impl.WaveletVersionImpl;

        $r0 = new org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl;

        $r2 = r1.<org.waveprotocol.box.common.comms.impl.WaveletVersionImpl: org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl hashedVersion>;

        specialinvoke $r0.<org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl: void <init>(org.waveprotocol.wave.federation.ProtocolHashedVersion)>($r2);

        return $r0;
    }

    public void setHashedVersion(org.waveprotocol.wave.federation.ProtocolHashedVersion)
    {
        org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl $r1;
        org.waveprotocol.wave.federation.ProtocolHashedVersion r2;
        org.waveprotocol.box.common.comms.impl.WaveletVersionImpl r0;

        r0 := @this: org.waveprotocol.box.common.comms.impl.WaveletVersionImpl;

        r2 := @parameter0: org.waveprotocol.wave.federation.ProtocolHashedVersion;

        $r1 = new org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl;

        specialinvoke $r1.<org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl: void <init>(org.waveprotocol.wave.federation.ProtocolHashedVersion)>(r2);

        r0.<org.waveprotocol.box.common.comms.impl.WaveletVersionImpl: org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl hashedVersion> = $r1;

        return;
    }

    protected void reset()
    {
        org.waveprotocol.box.common.comms.impl.WaveletVersionImpl r0;

        r0 := @this: org.waveprotocol.box.common.comms.impl.WaveletVersionImpl;

        r0.<org.waveprotocol.box.common.comms.impl.WaveletVersionImpl: java.lang.String waveletId> = null;

        r0.<org.waveprotocol.box.common.comms.impl.WaveletVersionImpl: org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl hashedVersion> = null;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        org.waveprotocol.box.common.comms.impl.WaveletVersionImpl r1;
        boolean $z0, $z1, $z2;

        r1 := @this: org.waveprotocol.box.common.comms.impl.WaveletVersionImpl;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.waveprotocol.box.common.comms.impl.WaveletVersionImpl;

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r1.<org.waveprotocol.box.common.comms.impl.WaveletVersionImpl: boolean isEqualTo(java.lang.Object)>(r0);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean isEqualTo(java.lang.Object)
    {
        org.waveprotocol.box.common.comms.WaveletVersion $r2;
        java.lang.Object r0;
        org.waveprotocol.box.common.comms.impl.WaveletVersionImpl r1;
        boolean $z0, $z1;

        r1 := @this: org.waveprotocol.box.common.comms.impl.WaveletVersionImpl;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof org.waveprotocol.box.common.comms.WaveletVersion;

        if $z0 == 0 goto label2;

        $r2 = (org.waveprotocol.box.common.comms.WaveletVersion) r0;

        $z1 = staticinvoke <org.waveprotocol.box.common.comms.WaveletVersionUtil: boolean isEqual(org.waveprotocol.box.common.comms.WaveletVersion,org.waveprotocol.box.common.comms.WaveletVersion)>(r1, $r2);

        return $z1;

     label2:
        return 0;
    }

    public int hashCode()
    {
        int $i0;
        org.waveprotocol.box.common.comms.impl.WaveletVersionImpl r0;

        r0 := @this: org.waveprotocol.box.common.comms.impl.WaveletVersionImpl;

        $i0 = staticinvoke <org.waveprotocol.box.common.comms.WaveletVersionUtil: int getHashCode(org.waveprotocol.box.common.comms.WaveletVersion)>(r0);

        return $i0;
    }

    public volatile org.waveprotocol.wave.federation.ProtocolHashedVersion getHashedVersion()
    {
        org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl $r1;
        org.waveprotocol.box.common.comms.impl.WaveletVersionImpl r0;

        r0 := @this: org.waveprotocol.box.common.comms.impl.WaveletVersionImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.common.comms.impl.WaveletVersionImpl: org.waveprotocol.wave.federation.impl.ProtocolHashedVersionImpl getHashedVersion()>();

        return $r1;
    }
}
