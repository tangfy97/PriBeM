final class org.springframework.core.convert.support.StringToCollectionConverter extends java.lang.Object implements org.springframework.core.convert.converter.ConditionalGenericConverter
{
    private final org.springframework.core.convert.ConversionService conversionService;

    public void <init>(org.springframework.core.convert.ConversionService)
    {
        org.springframework.core.convert.support.StringToCollectionConverter r0;
        org.springframework.core.convert.ConversionService r1;

        r0 := @this: org.springframework.core.convert.support.StringToCollectionConverter;

        r1 := @parameter0: org.springframework.core.convert.ConversionService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.core.convert.support.StringToCollectionConverter: org.springframework.core.convert.ConversionService conversionService> = r1;

        return;
    }

    public java.util.Set getConvertibleTypes()
    {
        org.springframework.core.convert.converter.GenericConverter$ConvertiblePair $r0;
        java.util.Set $r1;
        org.springframework.core.convert.support.StringToCollectionConverter r2;

        r2 := @this: org.springframework.core.convert.support.StringToCollectionConverter;

        $r0 = new org.springframework.core.convert.converter.GenericConverter$ConvertiblePair;

        specialinvoke $r0.<org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: void <init>(java.lang.Class,java.lang.Class)>(class "Ljava/lang/String;", class "Ljava/util/Collection;");

        $r1 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r0);

        return $r1;
    }

    public boolean matches(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)
    {
        org.springframework.core.convert.TypeDescriptor r1, r2, $r4;
        org.springframework.core.convert.support.StringToCollectionConverter r0;
        org.springframework.core.convert.ConversionService $r3;
        boolean $z0;

        r0 := @this: org.springframework.core.convert.support.StringToCollectionConverter;

        r1 := @parameter0: org.springframework.core.convert.TypeDescriptor;

        r2 := @parameter1: org.springframework.core.convert.TypeDescriptor;

        $r3 = r0.<org.springframework.core.convert.support.StringToCollectionConverter: org.springframework.core.convert.ConversionService conversionService>;

        $r4 = virtualinvoke r2.<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor getElementTypeDescriptor()>();

        $z0 = interfaceinvoke $r3.<org.springframework.core.convert.ConversionService: boolean canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>(r1, $r4);

        return $z0;
    }

    public java.lang.Object convert(java.lang.Object, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)
    {
        java.lang.String[] $r2;
        org.springframework.core.convert.TypeDescriptor r3, r10, $r11;
        int $i0, i1, i2;
        java.lang.String r1, r6, $r9;
        org.springframework.core.convert.ConversionService $r8;
        java.util.Collection $r5;
        org.springframework.core.convert.support.StringToCollectionConverter r7;
        java.lang.Object r0, $r12;
        java.lang.Class $r4;

        r7 := @this: org.springframework.core.convert.support.StringToCollectionConverter;

        r0 := @parameter0: java.lang.Object;

        r10 := @parameter1: org.springframework.core.convert.TypeDescriptor;

        r3 := @parameter2: org.springframework.core.convert.TypeDescriptor;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = (java.lang.String) r0;

        $r2 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] commaDelimitedListToStringArray(java.lang.String)>(r1);

        $r4 = virtualinvoke r3.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>();

        $i0 = lengthof $r2;

        $r5 = staticinvoke <org.springframework.core.CollectionFactory: java.util.Collection createCollection(java.lang.Class,int)>($r4, $i0);

        i1 = lengthof $r2;

        i2 = 0;

        goto label3;

     label2:
        r6 = $r2[i2];

        $r8 = r7.<org.springframework.core.convert.support.StringToCollectionConverter: org.springframework.core.convert.ConversionService conversionService>;

        $r9 = virtualinvoke r6.<java.lang.String: java.lang.String trim()>();

        $r11 = virtualinvoke r3.<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor getElementTypeDescriptor(java.lang.Object)>(r6);

        $r12 = interfaceinvoke $r8.<org.springframework.core.convert.ConversionService: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>($r9, r10, $r11);

        interfaceinvoke $r5.<java.util.Collection: boolean add(java.lang.Object)>($r12);

        i2 = i2 + 1;

     label3:
        if i2 < i1 goto label2;

        return $r5;
    }
}
