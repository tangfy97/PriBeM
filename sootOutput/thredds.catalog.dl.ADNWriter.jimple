public class thredds.catalog.dl.ADNWriter extends java.lang.Object
{
    private static final org.jdom.Namespace defNS;
    private static final java.lang.String schemaLocation;
    private java.lang.String fileDir;
    private java.lang.StringBuffer messBuffer;

    public void <init>()
    {
        thredds.catalog.dl.ADNWriter r0;

        r0 := @this: thredds.catalog.dl.ADNWriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void writeDatasetEntries(thredds.catalog.InvCatalogImpl, java.lang.String, java.lang.StringBuffer)
    {
        java.io.PrintStream $r6;
        thredds.catalog.dl.ADNWriter r0;
        java.io.ByteArrayOutputStream $r5;
        thredds.catalog.dl.ADNWriter$1 $r4;
        java.io.File $r3;
        thredds.catalog.crawl.CatalogCrawler $r7;
        thredds.catalog.InvCatalogImpl r8;
        java.lang.StringBuffer r2;
        java.lang.String r1, $r9;
        boolean $z0;

        r0 := @this: thredds.catalog.dl.ADNWriter;

        r8 := @parameter0: thredds.catalog.InvCatalogImpl;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.StringBuffer;

        r0.<thredds.catalog.dl.ADNWriter: java.lang.String fileDir> = r1;

        r0.<thredds.catalog.dl.ADNWriter: java.lang.StringBuffer messBuffer> = r2;

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>(r1);

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        virtualinvoke $r3.<java.io.File: boolean mkdirs()>();

     label1:
        $r4 = new thredds.catalog.dl.ADNWriter$1;

        specialinvoke $r4.<thredds.catalog.dl.ADNWriter$1: void <init>(thredds.catalog.dl.ADNWriter)>(r0);

        $r5 = new java.io.ByteArrayOutputStream;

        specialinvoke $r5.<java.io.ByteArrayOutputStream: void <init>()>();

        $r6 = new java.io.PrintStream;

        specialinvoke $r6.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r5);

        $r7 = new thredds.catalog.crawl.CatalogCrawler;

        specialinvoke $r7.<thredds.catalog.crawl.CatalogCrawler: void <init>(int,boolean,thredds.catalog.crawl.CatalogCrawler$Listener)>(0, 1, $r4);

        virtualinvoke $r7.<thredds.catalog.crawl.CatalogCrawler: int crawl(thredds.catalog.InvCatalogImpl,ucar.nc2.util.CancelTask,java.io.PrintStream,java.lang.Object)>(r8, null, $r6, null);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n*********************\n");

        $r9 = virtualinvoke $r5.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        return;
    }

    private void doOneDataset(thredds.catalog.InvDataset)
    {
        thredds.catalog.dl.ADNWriter r1;
        thredds.catalog.InvDataset r0;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5, $r7, $r8, $r9, $r10, $r15, $r17, $r19, $r20, $r22, $r23, $r26, $r28, $r30, $r31;
        java.io.BufferedOutputStream $r12;
        java.lang.StringBuffer $r2, $r14, $r16, $r27;
        java.lang.String $r3, $r4, $r6, $r11, $r18, $r21, $r24, $r29, $r32;
        java.io.FileOutputStream $r13;
        java.io.IOException $r25;

        r1 := @this: thredds.catalog.dl.ADNWriter;

        r0 := @parameter0: thredds.catalog.InvDataset;

        $z0 = virtualinvoke r0.<thredds.catalog.InvDataset: boolean isHarvest()>();

        if $z0 != 0 goto label1;

        $r16 = r1.<thredds.catalog.dl.ADNWriter: java.lang.StringBuffer messBuffer>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Dataset ");

        $r18 = virtualinvoke r0.<thredds.catalog.InvDataset: java.lang.String getName()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id = ");

        $r21 = virtualinvoke r0.<thredds.catalog.InvDataset: java.lang.String getID()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has harvest = false\n");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        goto label5;

     label1:
        $r2 = r1.<thredds.catalog.dl.ADNWriter: java.lang.StringBuffer messBuffer>;

        $z1 = virtualinvoke r1.<thredds.catalog.dl.ADNWriter: boolean isDatasetUseable(thredds.catalog.InvDataset,java.lang.StringBuffer)>(r0, $r2);

        if $z1 == 0 goto label5;

        $r3 = virtualinvoke r0.<thredds.catalog.InvDataset: java.lang.String getID()>();

        $r4 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>($r3, "/", "-");

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = r1.<thredds.catalog.dl.ADNWriter: java.lang.String fileDir>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".adn.xml");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r12 = new java.io.BufferedOutputStream;

        $r13 = new java.io.FileOutputStream;

        specialinvoke $r13.<java.io.FileOutputStream: void <init>(java.lang.String)>($r11);

        specialinvoke $r12.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r13);

        specialinvoke r1.<thredds.catalog.dl.ADNWriter: void writeOneItem(thredds.catalog.InvDataset,java.io.OutputStream)>(r0, $r12);

        virtualinvoke $r12.<java.io.OutputStream: void close()>();

        $r14 = r1.<thredds.catalog.dl.ADNWriter: java.lang.StringBuffer messBuffer>;

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" OK on Write\n");

     label3:
        goto label5;

     label4:
        $r25 := @caughtexception;

        $r27 = r1.<thredds.catalog.dl.ADNWriter: java.lang.StringBuffer messBuffer>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FAILED on Write ");

        $r29 = virtualinvoke $r25.<java.io.IOException: java.lang.String getMessage()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r32);

        virtualinvoke $r25.<java.io.IOException: void printStackTrace()>();

     label5:
        return;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public boolean isDatasetUseable(thredds.catalog.InvDataset, java.lang.StringBuffer)
    {
        thredds.catalog.dl.ADNWriter r20;
        java.lang.StringBuffer r0;
        int $i0;
        java.lang.String $r4, $r7, $r10, $r11, $r12, $r14, $r19, $r21;
        thredds.catalog.InvDataset r3;
        boolean z0, z1, z2;
        java.util.List $r13;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r8, $r9, $r15, $r16, $r17, $r18;

        r20 := @this: thredds.catalog.dl.ADNWriter;

        r3 := @parameter0: thredds.catalog.InvDataset;

        r0 := @parameter1: java.lang.StringBuffer;

        z0 = 1;

        z2 = 1;

        z1 = 1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dataset ");

        $r4 = virtualinvoke r3.<thredds.catalog.InvDataset: java.lang.String getName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id = ");

        $r7 = virtualinvoke r3.<thredds.catalog.InvDataset: java.lang.String getID()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r11 = virtualinvoke r3.<thredds.catalog.InvDataset: java.lang.String getName()>();

        if $r11 != null goto label1;

        z0 = 0;

        z2 = 0;

        z1 = 0;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" missing Name field\n");

     label1:
        $r12 = virtualinvoke r3.<thredds.catalog.InvDataset: java.lang.String getUniqueID()>();

        if $r12 != null goto label2;

        z0 = 0;

        z2 = 0;

        z1 = 0;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" missing ID field\n");

     label2:
        $r13 = virtualinvoke r3.<thredds.catalog.InvDataset: java.util.List getPublishers()>();

        if $r13 == null goto label3;

        $i0 = interfaceinvoke $r13.<java.util.List: int size()>();

        if $i0 != 0 goto label4;

     label3:
        z0 = 0;

        z2 = 0;

        z1 = 0;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" must have publisher element that defines the data center\n");

     label4:
        $r21 = virtualinvoke r3.<thredds.catalog.InvDataset: java.lang.String getDocumentation(java.lang.String)>("summary");

        if $r21 != null goto label5;

        z0 = 0;

        z2 = 0;

        z1 = 0;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" must have documentation element of type summary\n");

     label5:
        $r14 = virtualinvoke r3.<thredds.catalog.InvDataset: java.lang.String getDocumentation(java.lang.String)>("rights");

        if $r14 != null goto label6;

        z0 = 0;

        z2 = 0;

        z1 = 0;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" must have documentation element of type rights\n");

     label6:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" useable= ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        return z2;
    }

    private void writeOneItem(thredds.catalog.InvDataset, java.io.OutputStream) throws java.io.IOException
    {
        thredds.catalog.dl.ADNWriter r3;
        org.jdom.output.Format $r15;
        org.jdom.output.XMLOutputter $r14;
        org.jdom.Document $r2;
        org.jdom.Namespace $r1, $r5, $r7, $r13;
        java.lang.String $r8, $r12;
        thredds.catalog.InvDataset r4;
        java.io.OutputStream r16;
        java.lang.StringBuilder $r6, $r9, $r10, $r11;
        org.jdom.Element $r0;

        r3 := @this: thredds.catalog.dl.ADNWriter;

        r4 := @parameter0: thredds.catalog.InvDataset;

        r16 := @parameter1: java.io.OutputStream;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("itemRecord", $r1);

        $r2 = new org.jdom.Document;

        specialinvoke $r2.<org.jdom.Document: void <init>(org.jdom.Element)>($r0);

        virtualinvoke r3.<thredds.catalog.dl.ADNWriter: void writeDataset(thredds.catalog.InvDataset,org.jdom.Element)>(r4, $r0);

        $r5 = <thredds.catalog.XMLEntityResolver: org.jdom.Namespace xsiNS>;

        virtualinvoke $r0.<org.jdom.Element: void addNamespaceDeclaration(org.jdom.Namespace)>($r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        $r8 = virtualinvoke $r7.<org.jdom.Namespace: java.lang.String getURI()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://www.dlese.org/Metadata/adn-item/0.6.50/record.xsd");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = <thredds.catalog.XMLEntityResolver: org.jdom.Namespace xsiNS>;

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String,org.jdom.Namespace)>("schemaLocation", $r12, $r13);

        $r14 = new org.jdom.output.XMLOutputter;

        $r15 = staticinvoke <org.jdom.output.Format: org.jdom.output.Format getPrettyFormat()>();

        specialinvoke $r14.<org.jdom.output.XMLOutputter: void <init>(org.jdom.output.Format)>($r15);

        virtualinvoke $r14.<org.jdom.output.XMLOutputter: void output(org.jdom.Document,java.io.OutputStream)>($r2, r16);

        return;
    }

    public void writeDataset(thredds.catalog.InvDataset, org.jdom.Element)
    {
        org.jdom.Namespace $r1, $r4, $r13, $r17, $r20, $r22, $r26, $r29, $r46, $r48, $r51, $r53, $r55, $r58, $r60, $r62, $r65, $r67, $r69, $r71, $r74, $r99, $r102, $r109, $r111, $r113, $r119, $r123, $r125, $r128, $r131, $r134, $r136, $r138, $r140, $r146, $r149, $r151, $r154;
        ucar.nc2.constants.FeatureType $r75, $r76, $r77, $r78;
        thredds.catalog.InvCatalog $r32;
        thredds.catalog.InvCatalogImpl r143;
        java.lang.StringBuilder $r5, $r6, $r9, $r35, $r37, $r38, $r40, $r41, $r42, $r44, $r85, $r87, $r88;
        org.jdom.Element $r0, r2, $r3, $r11, $r12, $r15, $r16, $r18, $r19, $r21, $r23, $r25, $r28, $r45, $r47, $r49, $r50, $r52, $r54, $r56, $r57, $r59, $r61, $r63, $r64, $r66, $r68, $r70, $r72, $r73, $r81, $r82, $r92, $r96, $r98, $r101, $r104, $r108, $r110, $r112, $r118, $r122, $r124, $r126, $r127, $r129, $r130, $r132, $r133, $r135, $r137, $r139, $r145, $r147, $r148, $r150, $r152, $r153, $r156;
        java.util.Date $r117;
        ucar.nc2.units.DateType $r116;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, $i8, i9, $i10;
        java.lang.Object $r89, $r93, $r100;
        thredds.catalog.dl.ADNWriter r80;
        thredds.catalog.InvCatalogRef r141;
        thredds.catalog.ThreddsMetadata$Vocab $r90, $r94, r105;
        ucar.nc2.units.DateRange $r79;
        java.lang.String $r8, $r10, $r14, $r34, $r36, $r39, $r43, $r84, $r86, $r91, $r95, $r103, $r114, $r115, $r120, $r121, r142, r144, $r155;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage $r157;
        java.net.URI $r33, $r83;
        thredds.catalog.InvDataset r7;
        boolean $z0, $z1, $z2;
        java.util.List $r24, $r27, $r30, $r31, $r97;
        thredds.catalog.ThreddsMetadata$Source r106, r107;

        r80 := @this: thredds.catalog.dl.ADNWriter;

        r7 := @parameter0: thredds.catalog.InvDataset;

        r2 := @parameter1: org.jdom.Element;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("general", $r1);

        virtualinvoke r2.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r0);

        $r3 = new org.jdom.Element;

        $r4 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r3.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("title", $r4);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dataset ");

        $r8 = virtualinvoke r7.<thredds.catalog.InvDataset: java.lang.String getFullName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = virtualinvoke $r3.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r10);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r11);

        $r12 = new org.jdom.Element;

        $r13 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r12.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("description", $r13);

        $r14 = virtualinvoke r7.<thredds.catalog.InvDataset: java.lang.String getDocumentation(java.lang.String)>("summary");

        $r15 = virtualinvoke $r12.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r14);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r15);

        $r16 = new org.jdom.Element;

        $r17 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r16.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("language", $r17);

        $r18 = virtualinvoke $r16.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>("en");

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r18);

        $r19 = new org.jdom.Element;

        $r20 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r19.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("subjects", $r20);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r19);

        $r21 = new org.jdom.Element;

        $r22 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r21.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("subject", $r22);

        $r23 = virtualinvoke $r21.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>("DLESE:Atmospheric science");

        virtualinvoke $r19.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r23);

        $r24 = virtualinvoke r7.<thredds.catalog.InvDataset: java.util.List getKeywords()>();

        $i0 = interfaceinvoke $r24.<java.util.List: int size()>();

        if $i0 <= 0 goto label02;

        $r98 = new org.jdom.Element;

        $r99 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r98.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("keywords", $r99);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r98);

        i6 = 0;

     label01:
        $i5 = interfaceinvoke $r24.<java.util.List: int size()>();

        if i6 >= $i5 goto label02;

        $r100 = interfaceinvoke $r24.<java.util.List: java.lang.Object get(int)>(i6);

        r105 = (thredds.catalog.ThreddsMetadata$Vocab) $r100;

        $r101 = new org.jdom.Element;

        $r102 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r101.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("keyword", $r102);

        $r103 = virtualinvoke r105.<thredds.catalog.ThreddsMetadata$Vocab: java.lang.String getText()>();

        $r104 = virtualinvoke $r101.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r103);

        virtualinvoke $r98.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r104);

        i6 = i6 + 1;

        goto label01;

     label02:
        $r25 = new org.jdom.Element;

        $r26 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r25.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("lifecycle", $r26);

        virtualinvoke r2.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r25);

        $r27 = virtualinvoke r7.<thredds.catalog.InvDataset: java.util.List getPublishers()>();

        $i1 = interfaceinvoke $r27.<java.util.List: int size()>();

        if $i1 > 0 goto label03;

        $r97 = virtualinvoke r7.<thredds.catalog.InvDataset: java.util.List getCreators()>();

        $i4 = interfaceinvoke $r97.<java.util.List: int size()>();

        if $i4 <= 0 goto label09;

     label03:
        $r28 = new org.jdom.Element;

        $r29 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r28.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("contributors", $r29);

        virtualinvoke $r25.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r28);

        $r30 = virtualinvoke r7.<thredds.catalog.InvDataset: java.util.List getPublishers()>();

        i7 = 0;

     label04:
        $i8 = interfaceinvoke $r30.<java.util.List: int size()>();

        if i7 >= $i8 goto label06;

        $r93 = interfaceinvoke $r30.<java.util.List: java.lang.Object get(int)>(i7);

        r106 = (thredds.catalog.ThreddsMetadata$Source) $r93;

        $r94 = virtualinvoke r106.<thredds.catalog.ThreddsMetadata$Source: thredds.catalog.ThreddsMetadata$Vocab getNameVocab()>();

        $r95 = virtualinvoke $r94.<thredds.catalog.ThreddsMetadata$Vocab: java.lang.String getVocabulary()>();

        $z1 = virtualinvoke $r95.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("ADN");

        if $z1 == 0 goto label05;

        $r96 = virtualinvoke r80.<thredds.catalog.dl.ADNWriter: org.jdom.Element writeSource(thredds.catalog.ThreddsMetadata$Source,java.lang.String)>(r106, "Publisher");

        virtualinvoke $r28.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r96);

        goto label06;

     label05:
        i7 = i7 + 1;

        goto label04;

     label06:
        $r31 = virtualinvoke r7.<thredds.catalog.InvDataset: java.util.List getCreators()>();

        i9 = 0;

     label07:
        $i10 = interfaceinvoke $r31.<java.util.List: int size()>();

        if i9 >= $i10 goto label09;

        $r89 = interfaceinvoke $r31.<java.util.List: java.lang.Object get(int)>(i9);

        r107 = (thredds.catalog.ThreddsMetadata$Source) $r89;

        $r90 = virtualinvoke r107.<thredds.catalog.ThreddsMetadata$Source: thredds.catalog.ThreddsMetadata$Vocab getNameVocab()>();

        $r91 = virtualinvoke $r90.<thredds.catalog.ThreddsMetadata$Vocab: java.lang.String getVocabulary()>();

        $z0 = virtualinvoke $r91.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("ADN");

        if $z0 == 0 goto label08;

        $r92 = virtualinvoke r80.<thredds.catalog.dl.ADNWriter: org.jdom.Element writeSource(thredds.catalog.ThreddsMetadata$Source,java.lang.String)>(r107, "Author");

        virtualinvoke $r28.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r92);

        goto label09;

     label08:
        i9 = i9 + 1;

        goto label07;

     label09:
        $r108 = new org.jdom.Element;

        $r109 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r108.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("metaMetadata", $r109);

        virtualinvoke r2.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r108);

        $r110 = new org.jdom.Element;

        $r111 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r110.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("catalogEntries", $r111);

        virtualinvoke $r108.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r110);

        $r112 = new org.jdom.Element;

        $r113 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r112.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("catalog", $r113);

        virtualinvoke $r110.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r112);

        $r114 = virtualinvoke r7.<thredds.catalog.InvDataset: java.lang.String getUniqueID()>();

        $r115 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String allow(java.lang.String,java.lang.String,char)>($r114, ".", 45);

        virtualinvoke $r112.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("entry", $r115);

        virtualinvoke $r112.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>("THREDDS-motherlode");

        $r116 = new ucar.nc2.units.DateType;

        $r117 = new java.util.Date;

        specialinvoke $r117.<java.util.Date: void <init>()>();

        specialinvoke $r116.<ucar.nc2.units.DateType: void <init>(boolean,java.util.Date)>(0, $r117);

        $r118 = new org.jdom.Element;

        $r119 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r118.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("dateInfo", $r119);

        virtualinvoke $r108.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r118);

        $r120 = virtualinvoke $r116.<ucar.nc2.units.DateType: java.lang.String toDateString()>();

        virtualinvoke $r118.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("created", $r120);

        $r121 = virtualinvoke $r116.<ucar.nc2.units.DateType: java.lang.String toDateString()>();

        virtualinvoke $r118.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("accessioned", $r121);

        $r122 = new org.jdom.Element;

        $r123 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r122.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("statusOf", $r123);

        virtualinvoke $r108.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r122);

        virtualinvoke $r122.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("status", "Accessioned");

        $r124 = new org.jdom.Element;

        $r125 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r124.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("language", $r125);

        $r126 = virtualinvoke $r124.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>("en");

        virtualinvoke $r108.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r126);

        $r127 = new org.jdom.Element;

        $r128 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r127.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("scheme", $r128);

        $r129 = virtualinvoke $r127.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>("ADN (ADEPT/DLESE/NASA Alexandria Digital Earth Prototype/Digital Library for Earth System Education/National Aeronautics and Space Administration)");

        virtualinvoke $r108.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r129);

        $r130 = new org.jdom.Element;

        $r131 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r130.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("copyright", $r131);

        $r132 = virtualinvoke $r130.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>("Copyright (c) 2002 UCAR (University Corporation for Atmospheric Research)");

        virtualinvoke $r108.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r132);

        $r133 = new org.jdom.Element;

        $r134 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r133.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("termsOfUse", $r134);

        virtualinvoke $r108.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r133);

        virtualinvoke $r133.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>("Terms of use consistent with DLESE (Digital Library for Earth System Education) policy");

        virtualinvoke $r133.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("URI", "http://www.dlese.org/documents/policy/terms_use_full.html");

        $r135 = new org.jdom.Element;

        $r136 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r135.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("technical", $r136);

        virtualinvoke r2.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r135);

        $r137 = new org.jdom.Element;

        $r138 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r137.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("online", $r138);

        virtualinvoke $r135.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r137);

        $r139 = new org.jdom.Element;

        $r140 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r139.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("primaryURL", $r140);

        virtualinvoke $r137.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r139);

        $z2 = r7 instanceof thredds.catalog.InvCatalogRef;

        if $z2 == 0 goto label10;

        r141 = (thredds.catalog.InvCatalogRef) r7;

        $r83 = virtualinvoke r141.<thredds.catalog.InvCatalogRef: java.net.URI getURI()>();

        $r84 = virtualinvoke $r83.<java.net.URI: java.lang.String toString()>();

        $i3 = virtualinvoke $r84.<java.lang.String: int lastIndexOf(int)>(46);

        $r85 = new java.lang.StringBuilder;

        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();

        $r86 = virtualinvoke $r84.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        $r87 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r86);

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".html");

        r142 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label11;

     label10:
        $r32 = virtualinvoke r7.<thredds.catalog.InvDataset: thredds.catalog.InvCatalog getParentCatalog()>();

        r143 = (thredds.catalog.InvCatalogImpl) $r32;

        $r33 = virtualinvoke r143.<thredds.catalog.InvCatalogImpl: java.net.URI getBaseURI()>();

        $r34 = virtualinvoke $r33.<java.net.URI: java.lang.String toString()>();

        $i2 = virtualinvoke $r34.<java.lang.String: int lastIndexOf(int)>(46);

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r34.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".html");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?dataset=");

        $r43 = virtualinvoke r7.<thredds.catalog.InvDataset: java.lang.String getID()>();

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        r142 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        virtualinvoke $r139.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>(r142);

        $r45 = new org.jdom.Element;

        $r46 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r45.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("mediums", $r46);

        virtualinvoke $r137.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r45);

        $r47 = new org.jdom.Element;

        $r48 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r47.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("medium", $r48);

        $r49 = virtualinvoke $r47.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>("text/html");

        virtualinvoke $r45.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r49);

        $r50 = new org.jdom.Element;

        $r51 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r50.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("requirements", $r51);

        virtualinvoke $r137.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r50);

        $r52 = new org.jdom.Element;

        $r53 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r52.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("requirement", $r53);

        virtualinvoke $r50.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r52);

        $r54 = new org.jdom.Element;

        $r55 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r54.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("reqType", $r55);

        $r56 = virtualinvoke $r54.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>("DLESE:Other:More specific technical requirements");

        virtualinvoke $r52.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r56);

        $r57 = new org.jdom.Element;

        $r58 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r57.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("otherRequirements", $r58);

        virtualinvoke $r137.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r57);

        $r59 = new org.jdom.Element;

        $r60 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r59.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("otherRequirement", $r60);

        virtualinvoke $r57.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r59);

        $r61 = new org.jdom.Element;

        $r62 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r61.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("otherType", $r62);

        $r63 = virtualinvoke $r61.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>("Requires data viewer tool. See the documentation page in the resource.");

        virtualinvoke $r59.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r63);

        $r64 = new org.jdom.Element;

        $r65 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r64.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("educational", $r65);

        virtualinvoke r2.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r64);

        $r66 = new org.jdom.Element;

        $r67 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r66.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("audiences", $r67);

        virtualinvoke $r64.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r66);

        $r68 = new org.jdom.Element;

        $r69 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r68.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("audience", $r69);

        virtualinvoke $r66.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r68);

        $r70 = new org.jdom.Element;

        $r71 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r70.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("gradeRange", $r71);

        $r72 = virtualinvoke $r70.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>("DLESE:Graduate or professional");

        virtualinvoke $r68.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r72);

        $r73 = new org.jdom.Element;

        $r74 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r73.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("resourceTypes", $r74);

        virtualinvoke $r64.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r73);

        r144 = "DLESE:Data:In situ dataset";

        $r75 = virtualinvoke r7.<thredds.catalog.InvDataset: ucar.nc2.constants.FeatureType getDataType()>();

        $r76 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType GRID>;

        if $r75 != $r76 goto label12;

        r144 = "DLESE:Data:Modeled dataset";

        goto label13;

     label12:
        $r77 = virtualinvoke r7.<thredds.catalog.InvDataset: ucar.nc2.constants.FeatureType getDataType()>();

        $r78 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType IMAGE>;

        if $r77 != $r78 goto label13;

        r144 = "DLESE:Data:Remotely sensed dataset";

     label13:
        $r145 = new org.jdom.Element;

        $r146 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r145.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("resourceType", $r146);

        $r147 = virtualinvoke $r145.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>(r144);

        virtualinvoke $r73.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r147);

        $r148 = new org.jdom.Element;

        $r149 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r148.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("rights", $r149);

        virtualinvoke r2.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r148);

        $r150 = new org.jdom.Element;

        $r151 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r150.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("cost", $r151);

        $r152 = virtualinvoke $r150.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>("DLESE:No");

        virtualinvoke $r148.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r152);

        $r153 = new org.jdom.Element;

        $r154 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r153.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("description", $r154);

        $r155 = virtualinvoke r7.<thredds.catalog.InvDataset: java.lang.String getDocumentation(java.lang.String)>("rights");

        $r156 = virtualinvoke $r153.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r155);

        virtualinvoke $r148.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r156);

        $r157 = virtualinvoke r7.<thredds.catalog.InvDataset: thredds.catalog.ThreddsMetadata$GeospatialCoverage getGeospatialCoverage()>();

        if null == $r157 goto label14;

        $r82 = virtualinvoke r80.<thredds.catalog.dl.ADNWriter: org.jdom.Element writeGeospatialCoverage(thredds.catalog.ThreddsMetadata$GeospatialCoverage)>($r157);

        virtualinvoke r2.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r82);

     label14:
        $r79 = virtualinvoke r7.<thredds.catalog.InvDataset: ucar.nc2.units.DateRange getTimeCoverage()>();

        if null == $r79 goto label15;

        $r81 = virtualinvoke r80.<thredds.catalog.dl.ADNWriter: org.jdom.Element writeTemporalCoverage(ucar.nc2.units.DateRange)>($r79);

        virtualinvoke r2.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r81);

     label15:
        return;
    }

    protected boolean emailOK(thredds.catalog.ThreddsMetadata$Source)
    {
        thredds.catalog.ThreddsMetadata$Source r0;
        thredds.catalog.dl.ADNWriter r2;
        int $i0;
        java.lang.String $r1;
        boolean $z0;

        r2 := @this: thredds.catalog.dl.ADNWriter;

        r0 := @parameter0: thredds.catalog.ThreddsMetadata$Source;

        $r1 = virtualinvoke r0.<thredds.catalog.ThreddsMetadata$Source: java.lang.String getEmail()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(64);

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected org.jdom.Element writeSource(thredds.catalog.ThreddsMetadata$Source, java.lang.String)
    {
        thredds.catalog.dl.ADNWriter r12;
        org.jdom.Namespace $r1, $r4, $r9, $r14, $r19, $r23, $r27;
        boolean $z0;
        thredds.catalog.ThreddsMetadata$Vocab $r6;
        thredds.catalog.ThreddsMetadata$Source r5;
        int $i0, $i1, $i2;
        java.lang.String r2, $r7, $r11, $r15, $r17, $r20, $r24, $r28;
        org.jdom.Element $r0, $r3, $r8, $r10, $r13, $r16, $r18, $r21, $r22, $r25, $r26, $r29;

        r12 := @this: thredds.catalog.dl.ADNWriter;

        r5 := @parameter0: thredds.catalog.ThreddsMetadata$Source;

        r2 := @parameter1: java.lang.String;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("contributor", $r1);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("role", r2);

        $r3 = new org.jdom.Element;

        $r4 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r3.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("organization", $r4);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r3);

        $r6 = virtualinvoke r5.<thredds.catalog.ThreddsMetadata$Source: thredds.catalog.ThreddsMetadata$Vocab getNameVocab()>();

        $r7 = virtualinvoke $r6.<thredds.catalog.ThreddsMetadata$Vocab: java.lang.String getText()>();

        $i0 = virtualinvoke $r7.<java.lang.String: int indexOf(int)>(47);

        if $i0 <= 0 goto label1;

        $r22 = new org.jdom.Element;

        $r23 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r22.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("instName", $r23);

        $r24 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r25 = virtualinvoke $r22.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r24);

        virtualinvoke $r3.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r25);

        $r26 = new org.jdom.Element;

        $r27 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r26.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("instDept", $r27);

        $i2 = $i0 + 1;

        $r28 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int)>($i2);

        $r29 = virtualinvoke $r26.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r28);

        virtualinvoke $r3.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r29);

        goto label2;

     label1:
        $r8 = new org.jdom.Element;

        $r9 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r8.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("instName", $r9);

        $r10 = virtualinvoke $r8.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r7);

        virtualinvoke $r3.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r10);

     label2:
        $r11 = virtualinvoke r5.<thredds.catalog.ThreddsMetadata$Source: java.lang.String getUrl()>();

        if $r11 == null goto label3;

        $r17 = virtualinvoke r5.<thredds.catalog.ThreddsMetadata$Source: java.lang.String getUrl()>();

        $i1 = virtualinvoke $r17.<java.lang.String: int length()>();

        if $i1 <= 0 goto label3;

        $r18 = new org.jdom.Element;

        $r19 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r18.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("instUrl", $r19);

        $r20 = virtualinvoke r5.<thredds.catalog.ThreddsMetadata$Source: java.lang.String getUrl()>();

        $r21 = virtualinvoke $r18.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r20);

        virtualinvoke $r3.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r21);

     label3:
        $z0 = virtualinvoke r12.<thredds.catalog.dl.ADNWriter: boolean emailOK(thredds.catalog.ThreddsMetadata$Source)>(r5);

        if $z0 == 0 goto label4;

        $r13 = new org.jdom.Element;

        $r14 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r13.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("instEmail", $r14);

        $r15 = virtualinvoke r5.<thredds.catalog.ThreddsMetadata$Source: java.lang.String getEmail()>();

        $r16 = virtualinvoke $r13.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r15);

        virtualinvoke $r3.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r16);

     label4:
        return $r0;
    }

    protected org.jdom.Element writeGeospatialCoverage(thredds.catalog.ThreddsMetadata$GeospatialCoverage)
    {
        thredds.catalog.dl.ADNWriter r40;
        org.jdom.Namespace $r1, $r3, $r5, $r7, $r10, $r13, $r16, $r19, $r22, $r26, $r30, $r34, $r38;
        java.lang.String $r23, $r27, $r31, $r35;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        thredds.catalog.ThreddsMetadata$GeospatialCoverage r20;
        org.jdom.Element $r0, $r2, $r4, $r6, $r8, $r9, $r11, $r12, $r14, $r15, $r17, $r18, $r21, $r24, $r25, $r28, $r29, $r32, $r33, $r36, $r37, $r39;

        r40 := @this: thredds.catalog.dl.ADNWriter;

        r20 := @parameter0: thredds.catalog.ThreddsMetadata$GeospatialCoverage;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("geospatialCoverages", $r1);

        $r2 = new org.jdom.Element;

        $r3 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r2.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("geospatialCoverage", $r3);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r2);

        $r4 = new org.jdom.Element;

        $r5 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r4.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("body", $r5);

        virtualinvoke $r2.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r4);

        $r6 = new org.jdom.Element;

        $r7 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r6.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("planet", $r7);

        $r8 = virtualinvoke $r6.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>("Earth");

        virtualinvoke $r4.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r8);

        $r9 = new org.jdom.Element;

        $r10 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r9.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("geodeticDatumGlobalOrHorz", $r10);

        $r11 = virtualinvoke $r9.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>("DLESE:WGS84");

        virtualinvoke $r2.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r11);

        $r12 = new org.jdom.Element;

        $r13 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r12.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("projection", $r13);

        $r14 = virtualinvoke $r12.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("type", "DLESE:Unknown");

        virtualinvoke $r2.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r14);

        $r15 = new org.jdom.Element;

        $r16 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r15.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("coordinateSystem", $r16);

        $r17 = virtualinvoke $r15.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("type", "DLESE:Geographic latitude and longitude");

        virtualinvoke $r2.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r17);

        $r18 = new org.jdom.Element;

        $r19 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r18.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("boundBox", $r19);

        virtualinvoke $r2.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r18);

        $d0 = virtualinvoke r20.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: double getLonWest()>();

        $d1 = staticinvoke <ucar.unidata.geoloc.LatLonPointImpl: double lonNormal(double)>($d0);

        $d2 = virtualinvoke r20.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: double getLonEast()>();

        $d3 = staticinvoke <ucar.unidata.geoloc.LatLonPointImpl: double lonNormal(double)>($d2);

        $r21 = new org.jdom.Element;

        $r22 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r21.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("westCoord", $r22);

        $r23 = staticinvoke <ucar.unidata.util.Format: java.lang.String dfrac(double,int)>($d1, 2);

        $r24 = virtualinvoke $r21.<org.jdom.Element: org.jdom.Element setText(java.lang.String)>($r23);

        virtualinvoke $r18.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r24);

        $r25 = new org.jdom.Element;

        $r26 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r25.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("eastCoord", $r26);

        $r27 = staticinvoke <ucar.unidata.util.Format: java.lang.String dfrac(double,int)>($d3, 2);

        $r28 = virtualinvoke $r25.<org.jdom.Element: org.jdom.Element setText(java.lang.String)>($r27);

        virtualinvoke $r18.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r28);

        $r29 = new org.jdom.Element;

        $r30 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r29.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("northCoord", $r30);

        $d4 = virtualinvoke r20.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: double getLatNorth()>();

        $r31 = staticinvoke <ucar.unidata.util.Format: java.lang.String dfrac(double,int)>($d4, 2);

        $r32 = virtualinvoke $r29.<org.jdom.Element: org.jdom.Element setText(java.lang.String)>($r31);

        virtualinvoke $r18.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r32);

        $r33 = new org.jdom.Element;

        $r34 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r33.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("southCoord", $r34);

        $d5 = virtualinvoke r20.<thredds.catalog.ThreddsMetadata$GeospatialCoverage: double getLatSouth()>();

        $r35 = staticinvoke <ucar.unidata.util.Format: java.lang.String dfrac(double,int)>($d5, 2);

        $r36 = virtualinvoke $r33.<org.jdom.Element: org.jdom.Element setText(java.lang.String)>($r35);

        virtualinvoke $r18.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r36);

        $r37 = new org.jdom.Element;

        $r38 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r37.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("bbSrcName", $r38);

        $r39 = virtualinvoke $r37.<org.jdom.Element: org.jdom.Element setText(java.lang.String)>("Calculated from dataset coordinate system by CDM/THREDDS");

        virtualinvoke $r18.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r39);

        return $r0;
    }

    protected org.jdom.Element writeTemporalCoverage(ucar.nc2.units.DateRange)
    {
        thredds.catalog.dl.ADNWriter r28;
        org.jdom.Namespace $r1, $r3, $r5, $r11, $r13, $r16, $r21, $r23, $r26;
        boolean $z0;
        ucar.nc2.units.TimeDuration $r18;
        java.lang.Exception $r27;
        ucar.nc2.units.DateRange r7;
        ucar.nc2.units.DateType $r8, $r9;
        java.lang.String $r14, $r17, $r24;
        double d0;
        ucar.nc2.units.TimeUnit $r19;
        org.jdom.Element $r0, $r2, $r4, $r6, $r10, $r12, $r15, $r20, $r22, $r25, r29;

        r28 := @this: thredds.catalog.dl.ADNWriter;

        r7 := @parameter0: ucar.nc2.units.DateRange;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("temporalCoverages", $r1);

        $r2 = new org.jdom.Element;

        $r3 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r2.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("timeAndPeriod", $r3);

        $r4 = new org.jdom.Element;

        $r5 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r4.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("timeInfo", $r5);

        $r6 = virtualinvoke $r2.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r4);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r6);

        $r8 = virtualinvoke r7.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getStart()>();

        $r9 = virtualinvoke r7.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getEnd()>();

        $z0 = virtualinvoke $r9.<ucar.nc2.units.DateType: boolean isPresent()>();

        if $z0 == 0 goto label5;

        $r18 = virtualinvoke r7.<ucar.nc2.units.DateRange: ucar.nc2.units.TimeDuration getDuration()>();

        d0 = -0.0;

     label1:
        $r19 = new ucar.nc2.units.TimeUnit;

        specialinvoke $r19.<ucar.nc2.units.TimeUnit: void <init>(java.lang.String)>("days");

        d0 = virtualinvoke $r18.<ucar.nc2.units.TimeDuration: double getValue(ucar.nc2.units.TimeUnit)>($r19);

     label2:
        goto label4;

     label3:
        $r27 := @caughtexception;

        virtualinvoke $r27.<java.lang.Exception: void printStackTrace()>();

     label4:
        $r20 = new org.jdom.Element;

        $r21 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r20.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("timeRelative", $r21);

        r29 = $r20;

        $r22 = new org.jdom.Element;

        $r23 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r22.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("begin", $r23);

        virtualinvoke $r22.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("units", "Days ago");

        $r24 = staticinvoke <java.lang.Double: java.lang.String toString(double)>(d0);

        virtualinvoke $r22.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>($r24);

        virtualinvoke $r20.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r22);

        $r25 = new org.jdom.Element;

        $r26 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r25.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("end", $r26);

        virtualinvoke $r25.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("units", "Days ago");

        virtualinvoke $r25.<org.jdom.Element: org.jdom.Element addContent(java.lang.String)>("0");

        virtualinvoke $r20.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r25);

        goto label6;

     label5:
        $r10 = new org.jdom.Element;

        $r11 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r10.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("timeAD", $r11);

        r29 = $r10;

        $r12 = new org.jdom.Element;

        $r13 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r12.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("begin", $r13);

        $r14 = virtualinvoke $r8.<ucar.nc2.units.DateType: java.lang.String toDateString()>();

        virtualinvoke $r12.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("date", $r14);

        virtualinvoke $r10.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r12);

        $r15 = new org.jdom.Element;

        $r16 = <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS>;

        specialinvoke $r15.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("end", $r16);

        $r17 = virtualinvoke $r9.<ucar.nc2.units.DateType: java.lang.String toDateString()>();

        virtualinvoke $r15.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("date", $r17);

        virtualinvoke $r10.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r15);

     label6:
        virtualinvoke $r4.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(r29);

        return $r0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static void doOne(thredds.catalog.InvCatalogFactory, java.lang.String)
    {
        thredds.catalog.dl.ADNWriter $r23;
        thredds.catalog.InvCatalogFactory r6;
        boolean $z0;
        java.lang.Exception $r30;
        thredds.catalog.InvCatalogImpl $r7;
        java.lang.StringBuilder $r0, $r2, $r4, $r8, $r9, $r11, $r13, $r14, $r15, $r16, $r18, $r20, $r21, $r25, $r27, $r28;
        java.lang.StringBuffer $r24;
        java.lang.String r3, $r5, $r12, $r17, $r22, $r29, $r31;
        java.io.PrintStream $r1, $r10, $r19, $r26;

        r6 := @parameter0: thredds.catalog.InvCatalogFactory;

        r3 := @parameter1: java.lang.String;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("***read ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);

     label1:
        $r7 = virtualinvoke r6.<thredds.catalog.InvCatalogFactory: thredds.catalog.InvCatalogImpl readXML(java.lang.String)>(r3);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $z0 = virtualinvoke $r7.<thredds.catalog.InvCatalogImpl: boolean check(java.lang.StringBuilder,boolean)>($r8, 0);

        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("catalog <");

        $r12 = virtualinvoke $r7.<thredds.catalog.InvCatalogImpl: java.lang.String getName()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        if $z0 == 0 goto label2;

        $r31 = "is";

        goto label3;

     label2:
        $r31 = "is not";

     label3:
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" valid");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r17);

        $r19 = <java.lang.System: java.io.PrintStream out>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" validation output=\n");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r22);

        $r23 = new thredds.catalog.dl.ADNWriter;

        specialinvoke $r23.<thredds.catalog.dl.ADNWriter: void <init>()>();

        $r24 = new java.lang.StringBuffer;

        specialinvoke $r24.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r23.<thredds.catalog.dl.ADNWriter: void writeDatasetEntries(thredds.catalog.InvCatalogImpl,java.lang.String,java.lang.StringBuffer)>($r7, "C:/temp/adn3", $r24);

        $r26 = <java.lang.System: java.io.PrintStream out>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" messages=\n");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r29);

     label4:
        goto label6;

     label5:
        $r30 := @caughtexception;

        virtualinvoke $r30.<java.lang.Exception: void printStackTrace()>();

     label6:
        return;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.String[] r1;
        thredds.catalog.InvCatalogFactory $r0;

        r1 := @parameter0: java.lang.String[];

        $r0 = staticinvoke <thredds.catalog.InvCatalogFactory: thredds.catalog.InvCatalogFactory getDefaultFactory(boolean)>(1);

        staticinvoke <thredds.catalog.dl.ADNWriter: void doOne(thredds.catalog.InvCatalogFactory,java.lang.String)>($r0, "http://motherlode.ucar.edu:9080/thredds/idd/models.xml");

        return;
    }

    static void access$000(thredds.catalog.dl.ADNWriter, thredds.catalog.InvDataset)
    {
        thredds.catalog.dl.ADNWriter r0;
        thredds.catalog.InvDataset r1;

        r0 := @parameter0: thredds.catalog.dl.ADNWriter;

        r1 := @parameter1: thredds.catalog.InvDataset;

        specialinvoke r0.<thredds.catalog.dl.ADNWriter: void doOneDataset(thredds.catalog.InvDataset)>(r1);

        return;
    }

    static void <clinit>()
    {
        org.jdom.Namespace $r0;

        <thredds.catalog.dl.ADNWriter: java.lang.String schemaLocation> = "http://www.dlese.org/Metadata/adn-item/0.6.50/record.xsd";

        $r0 = staticinvoke <org.jdom.Namespace: org.jdom.Namespace getNamespace(java.lang.String)>("http://adn.dlese.org");

        <thredds.catalog.dl.ADNWriter: org.jdom.Namespace defNS> = $r0;

        return;
    }
}
