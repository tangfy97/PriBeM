public class org.apache.commons.compress.archivers.cpio.CpioArchiveEntry extends java.lang.Object implements org.apache.commons.compress.archivers.cpio.CpioConstants, org.apache.commons.compress.archivers.ArchiveEntry
{
    private final short fileFormat;
    private final int headerSize;
    private final int alignmentBoundary;
    private long chksum;
    private long filesize;
    private long gid;
    private long inode;
    private long maj;
    private long min;
    private long mode;
    private long mtime;
    private java.lang.String name;
    private long nlink;
    private long rmaj;
    private long rmin;
    private long uid;

    public void <init>(short)
    {
        short s0;
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        int $i1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        s0 := @parameter0: short;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long chksum> = 0L;

        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long filesize> = 0L;

        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long gid> = 0L;

        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long inode> = 0L;

        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long maj> = 0L;

        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long min> = 0L;

        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long mode> = 0L;

        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long mtime> = 0L;

        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long nlink> = 0L;

        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long rmaj> = 0L;

        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long rmin> = 0L;

        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long uid> = 0L;

        $i1 = (int) s0;

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label5;
            case 4: goto label3;
            case 5: goto label5;
            case 6: goto label5;
            case 7: goto label5;
            case 8: goto label4;
            default: goto label5;
        };

     label1:
        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: int headerSize> = 110;

        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: int alignmentBoundary> = 4;

        goto label6;

     label2:
        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: int headerSize> = 110;

        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: int alignmentBoundary> = 4;

        goto label6;

     label3:
        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: int headerSize> = 76;

        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: int alignmentBoundary> = 0;

        goto label6;

     label4:
        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: int headerSize> = 26;

        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: int alignmentBoundary> = 2;

        goto label6;

     label5:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown header type");

        throw $r2;

     label6:
        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: short fileFormat> = s0;

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: void <init>(short,java.lang.String)>(1, r1);

        return;
    }

    public void <init>(short, java.lang.String)
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        short s0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        s0 := @parameter0: short;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: void <init>(short)>(s0);

        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: java.lang.String name> = r1;

        return;
    }

    public void <init>(java.lang.String, long)
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long l0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        specialinvoke r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: void <init>(java.lang.String)>(r1);

        virtualinvoke r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: void setSize(long)>(l0);

        return;
    }

    public void <init>(short, java.lang.String, long)
    {
        short s0;
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long l1;
        java.lang.String r1;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        s0 := @parameter0: short;

        r1 := @parameter1: java.lang.String;

        l1 := @parameter2: long;

        specialinvoke r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: void <init>(short,java.lang.String)>(s0, r1);

        virtualinvoke r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: void setSize(long)>(l1);

        return;
    }

    public void <init>(java.io.File, java.lang.String)
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        java.lang.String r2;
        java.io.File r1;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: void <init>(short,java.io.File,java.lang.String)>(1, r1, r2);

        return;
    }

    public void <init>(short, java.io.File, java.lang.String)
    {
        long $l1, $l2, $l3;
        short s0;
        java.lang.String r1, $r6, $r8;
        boolean $z0, $z1, $z2;
        java.lang.IllegalArgumentException $r3;
        java.io.File r2;
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        java.lang.StringBuilder $r4, $r5, $r7;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        s0 := @parameter0: short;

        r2 := @parameter1: java.io.File;

        r1 := @parameter2: java.lang.String;

        $z0 = virtualinvoke r2.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label1;

        $l3 = virtualinvoke r2.<java.io.File: long length()>();

        goto label2;

     label1:
        $l3 = 0L;

     label2:
        specialinvoke r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: void <init>(short,java.lang.String,long)>(s0, r1, $l3);

        $z1 = virtualinvoke r2.<java.io.File: boolean isDirectory()>();

        if $z1 == 0 goto label3;

        virtualinvoke r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: void setMode(long)>(16384L);

        goto label5;

     label3:
        $z2 = virtualinvoke r2.<java.io.File: boolean isFile()>();

        if $z2 == 0 goto label4;

        virtualinvoke r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: void setMode(long)>(32768L);

        goto label5;

     label4:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot determine type of file ");

        $r6 = virtualinvoke r2.<java.io.File: java.lang.String getName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label5:
        $l1 = virtualinvoke r2.<java.io.File: long lastModified()>();

        $l2 = $l1 / 1000L;

        virtualinvoke r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: void setTime(long)>($l2);

        return;
    }

    private void checkNewFormat()
    {
        java.lang.UnsupportedOperationException $r1;
        short $s0, $s1;
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        $s0 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: short fileFormat>;

        $s1 = $s0 & 3;

        if $s1 != 0 goto label1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;

     label1:
        return;
    }

    private void checkOldFormat()
    {
        java.lang.UnsupportedOperationException $r1;
        short $s0, $s1;
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        $s0 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: short fileFormat>;

        $s1 = $s0 & 12;

        if $s1 != 0 goto label1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;

     label1:
        return;
    }

    public long getChksum()
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long $l0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        specialinvoke r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: void checkNewFormat()>();

        $l0 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long chksum>;

        return $l0;
    }

    public long getDevice()
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long $l0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        specialinvoke r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: void checkOldFormat()>();

        $l0 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long min>;

        return $l0;
    }

    public long getDeviceMaj()
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long $l0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        specialinvoke r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: void checkNewFormat()>();

        $l0 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long maj>;

        return $l0;
    }

    public long getDeviceMin()
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long $l0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        specialinvoke r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: void checkNewFormat()>();

        $l0 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long min>;

        return $l0;
    }

    public long getSize()
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long $l0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        $l0 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long filesize>;

        return $l0;
    }

    public short getFormat()
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        short $s0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        $s0 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: short fileFormat>;

        return $s0;
    }

    public long getGID()
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long $l0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        $l0 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long gid>;

        return $l0;
    }

    public int getHeaderSize()
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        int $i0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        $i0 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: int headerSize>;

        return $i0;
    }

    public int getAlignmentBoundary()
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        int $i0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        $i0 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: int alignmentBoundary>;

        return $i0;
    }

    public int getHeaderPadCount()
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        java.lang.String $r1, $r2;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        $i0 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: int alignmentBoundary>;

        if $i0 != 0 goto label1;

        return 0;

     label1:
        $i1 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: int headerSize>;

        i7 = $i1 + 1;

        $r1 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: java.lang.String name>;

        if $r1 == null goto label2;

        $r2 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: java.lang.String name>;

        $i5 = virtualinvoke $r2.<java.lang.String: int length()>();

        i7 = i7 + $i5;

     label2:
        $i2 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: int alignmentBoundary>;

        $i6 = i7 % $i2;

        if $i6 <= 0 goto label3;

        $i3 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: int alignmentBoundary>;

        $i4 = $i3 - $i6;

        return $i4;

     label3:
        return 0;
    }

    public int getDataPadCount()
    {
        long l1, $l3, $l4;
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        int $i0, $i2, i5, $i6, $i7;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        $i0 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: int alignmentBoundary>;

        if $i0 != 0 goto label1;

        return 0;

     label1:
        l1 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long filesize>;

        $i2 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: int alignmentBoundary>;

        $l3 = (long) $i2;

        $l4 = l1 % $l3;

        i5 = (int) $l4;

        if i5 <= 0 goto label2;

        $i6 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: int alignmentBoundary>;

        $i7 = $i6 - i5;

        return $i7;

     label2:
        return 0;
    }

    public long getInode()
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long $l0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        $l0 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long inode>;

        return $l0;
    }

    public long getMode()
    {
        byte $b1;
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long $l0, $l2;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        $l0 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long mode>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $r2 = "TRAILER!!!";

        $r1 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: java.lang.String name>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $l2 = 32768L;

        goto label2;

     label1:
        $l2 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long mode>;

     label2:
        return $l2;
    }

    public java.lang.String getName()
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        $r1 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: java.lang.String name>;

        return $r1;
    }

    public long getNumberOfLinks()
    {
        byte $b1;
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long $l0, $l2;
        boolean $z0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        $l0 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long nlink>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label2;

        $z0 = virtualinvoke r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: boolean isDirectory()>();

        if $z0 == 0 goto label1;

        $l2 = 2L;

        goto label3;

     label1:
        $l2 = 1L;

        goto label3;

     label2:
        $l2 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long nlink>;

     label3:
        return $l2;
    }

    public long getRemoteDevice()
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long $l0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        specialinvoke r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: void checkOldFormat()>();

        $l0 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long rmin>;

        return $l0;
    }

    public long getRemoteDeviceMaj()
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long $l0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        specialinvoke r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: void checkNewFormat()>();

        $l0 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long rmaj>;

        return $l0;
    }

    public long getRemoteDeviceMin()
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long $l0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        specialinvoke r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: void checkNewFormat()>();

        $l0 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long rmin>;

        return $l0;
    }

    public long getTime()
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long $l0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        $l0 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long mtime>;

        return $l0;
    }

    public java.util.Date getLastModifiedDate()
    {
        java.util.Date $r0;
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r1;
        long $l0, $l1;

        r1 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        $r0 = new java.util.Date;

        $l0 = virtualinvoke r1.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long getTime()>();

        $l1 = 1000L * $l0;

        specialinvoke $r0.<java.util.Date: void <init>(long)>($l1);

        return $r0;
    }

    public long getUID()
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long $l0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        $l0 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long uid>;

        return $l0;
    }

    public boolean isBlockDevice()
    {
        byte $b2;
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long $l0, $l1;
        boolean $z0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        $l0 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long mode>;

        $l1 = staticinvoke <org.apache.commons.compress.archivers.cpio.CpioUtil: long fileType(long)>($l0);

        $b2 = $l1 cmp 24576L;

        if $b2 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isCharacterDevice()
    {
        byte $b2;
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long $l0, $l1;
        boolean $z0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        $l0 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long mode>;

        $l1 = staticinvoke <org.apache.commons.compress.archivers.cpio.CpioUtil: long fileType(long)>($l0);

        $b2 = $l1 cmp 8192L;

        if $b2 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isDirectory()
    {
        byte $b2;
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long $l0, $l1;
        boolean $z0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        $l0 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long mode>;

        $l1 = staticinvoke <org.apache.commons.compress.archivers.cpio.CpioUtil: long fileType(long)>($l0);

        $b2 = $l1 cmp 16384L;

        if $b2 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isNetwork()
    {
        byte $b2;
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long $l0, $l1;
        boolean $z0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        $l0 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long mode>;

        $l1 = staticinvoke <org.apache.commons.compress.archivers.cpio.CpioUtil: long fileType(long)>($l0);

        $b2 = $l1 cmp 36864L;

        if $b2 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isPipe()
    {
        byte $b2;
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long $l0, $l1;
        boolean $z0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        $l0 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long mode>;

        $l1 = staticinvoke <org.apache.commons.compress.archivers.cpio.CpioUtil: long fileType(long)>($l0);

        $b2 = $l1 cmp 4096L;

        if $b2 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isRegularFile()
    {
        byte $b2;
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long $l0, $l1;
        boolean $z0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        $l0 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long mode>;

        $l1 = staticinvoke <org.apache.commons.compress.archivers.cpio.CpioUtil: long fileType(long)>($l0);

        $b2 = $l1 cmp 32768L;

        if $b2 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isSocket()
    {
        byte $b2;
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long $l0, $l1;
        boolean $z0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        $l0 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long mode>;

        $l1 = staticinvoke <org.apache.commons.compress.archivers.cpio.CpioUtil: long fileType(long)>($l0);

        $b2 = $l1 cmp 49152L;

        if $b2 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isSymbolicLink()
    {
        byte $b2;
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long $l0, $l1;
        boolean $z0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        $l0 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long mode>;

        $l1 = staticinvoke <org.apache.commons.compress.archivers.cpio.CpioUtil: long fileType(long)>($l0);

        $b2 = $l1 cmp 40960L;

        if $b2 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setChksum(long)
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long l0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        l0 := @parameter0: long;

        specialinvoke r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: void checkNewFormat()>();

        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long chksum> = l0;

        return;
    }

    public void setDevice(long)
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long l0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        l0 := @parameter0: long;

        specialinvoke r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: void checkOldFormat()>();

        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long min> = l0;

        return;
    }

    public void setDeviceMaj(long)
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long l0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        l0 := @parameter0: long;

        specialinvoke r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: void checkNewFormat()>();

        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long maj> = l0;

        return;
    }

    public void setDeviceMin(long)
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long l0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        l0 := @parameter0: long;

        specialinvoke r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: void checkNewFormat()>();

        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long min> = l0;

        return;
    }

    public void setSize(long)
    {
        long l0;
        java.lang.IllegalArgumentException $r8;
        byte $b1, $b2;
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r6;
        int $i3, $i4;
        java.lang.StringBuilder $r2, $r3, $r4, $r7;
        java.lang.String $r5;

        r6 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        $i3 = (int) $b1;

        if $i3 < 0 goto label1;

        $b2 = l0 cmp 4294967295L;

        $i4 = (int) $b2;

        if $i4 <= 0 goto label2;

     label1:
        $r8 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid entry size <");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r8;

     label2:
        r6.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long filesize> = l0;

        return;
    }

    public void setGID(long)
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long l0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        l0 := @parameter0: long;

        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long gid> = l0;

        return;
    }

    public void setInode(long)
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long l0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        l0 := @parameter0: long;

        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long inode> = l0;

        return;
    }

    public void setMode(long)
    {
        long l0, l1;
        java.lang.IllegalArgumentException $r1;
        int $i2;
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        l0 := @parameter0: long;

        l1 = l0 & 61440L;

        $i2 = (int) l1;

        lookupswitch($i2)
        {
            case 4096: goto label1;
            case 8192: goto label1;
            case 16384: goto label1;
            case 24576: goto label1;
            case 32768: goto label1;
            case 36864: goto label1;
            case 40960: goto label1;
            case 49152: goto label1;
            default: goto label2;
        };

     label1:
        goto label3;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown mode. Full: ");

        $r4 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Masked: ");

        $r7 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l1);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r1;

     label3:
        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long mode> = l0;

        return;
    }

    public void setName(java.lang.String)
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: java.lang.String name> = r1;

        return;
    }

    public void setNumberOfLinks(long)
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long l0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        l0 := @parameter0: long;

        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long nlink> = l0;

        return;
    }

    public void setRemoteDevice(long)
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long l0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        l0 := @parameter0: long;

        specialinvoke r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: void checkOldFormat()>();

        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long rmin> = l0;

        return;
    }

    public void setRemoteDeviceMaj(long)
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long l0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        l0 := @parameter0: long;

        specialinvoke r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: void checkNewFormat()>();

        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long rmaj> = l0;

        return;
    }

    public void setRemoteDeviceMin(long)
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long l0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        l0 := @parameter0: long;

        specialinvoke r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: void checkNewFormat()>();

        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long rmin> = l0;

        return;
    }

    public void setTime(long)
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long l0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        l0 := @parameter0: long;

        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long mtime> = l0;

        return;
    }

    public void setUID(long)
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        long l0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        l0 := @parameter0: long;

        r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: long uid> = l0;

        return;
    }

    public int hashCode()
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0;
        int $i0, $i1;
        java.lang.String $r1, $r2;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        $r1 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: java.lang.String name>;

        if $r1 != null goto label1;

        $i1 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: java.lang.String name>;

        $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

     label2:
        $i0 = 31 + $i1;

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.compress.archivers.cpio.CpioArchiveEntry r0, r4;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        java.lang.String $r5, $r6, $r7, $r8;
        boolean $z0;

        r0 := @this: org.apache.commons.compress.archivers.cpio.CpioArchiveEntry;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

     label2:
        return 0;

     label3:
        r4 = (org.apache.commons.compress.archivers.cpio.CpioArchiveEntry) r1;

        $r5 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: java.lang.String name>;

        if $r5 != null goto label4;

        $r8 = r4.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: java.lang.String name>;

        if $r8 == null goto label5;

        return 0;

     label4:
        $r7 = r0.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: java.lang.String name>;

        $r6 = r4.<org.apache.commons.compress.archivers.cpio.CpioArchiveEntry: java.lang.String name>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label5;

        return 0;

     label5:
        return 1;
    }
}
