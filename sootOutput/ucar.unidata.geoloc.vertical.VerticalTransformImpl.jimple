public abstract class ucar.unidata.geoloc.vertical.VerticalTransformImpl extends java.lang.Object implements ucar.unidata.geoloc.vertical.VerticalTransform
{
    protected java.lang.String units;
    private ucar.nc2.Dimension timeDim;

    public void <init>(ucar.nc2.Dimension)
    {
        ucar.nc2.Dimension r1;
        ucar.unidata.geoloc.vertical.VerticalTransformImpl r0;

        r0 := @this: ucar.unidata.geoloc.vertical.VerticalTransformImpl;

        r1 := @parameter0: ucar.nc2.Dimension;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.unidata.geoloc.vertical.VerticalTransformImpl: ucar.nc2.Dimension timeDim> = r1;

        return;
    }

    public abstract ucar.ma2.ArrayDouble$D3 getCoordinateArray(int) throws java.io.IOException, ucar.ma2.InvalidRangeException;

    public java.lang.String getUnitString()
    {
        ucar.unidata.geoloc.vertical.VerticalTransformImpl r0;
        java.lang.String $r1;

        r0 := @this: ucar.unidata.geoloc.vertical.VerticalTransformImpl;

        $r1 = r0.<ucar.unidata.geoloc.vertical.VerticalTransformImpl: java.lang.String units>;

        return $r1;
    }

    public boolean isTimeDependent()
    {
        ucar.nc2.Dimension $r1;
        ucar.unidata.geoloc.vertical.VerticalTransformImpl r0;
        boolean $z0;

        r0 := @this: ucar.unidata.geoloc.vertical.VerticalTransformImpl;

        $r1 = r0.<ucar.unidata.geoloc.vertical.VerticalTransformImpl: ucar.nc2.Dimension timeDim>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected ucar.nc2.Dimension getTimeDimension()
    {
        ucar.nc2.Dimension $r1;
        ucar.unidata.geoloc.vertical.VerticalTransformImpl r0;

        r0 := @this: ucar.unidata.geoloc.vertical.VerticalTransformImpl;

        $r1 = r0.<ucar.unidata.geoloc.vertical.VerticalTransformImpl: ucar.nc2.Dimension timeDim>;

        return $r1;
    }

    protected ucar.ma2.Array readArray(ucar.nc2.Variable, int) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.unidata.geoloc.vertical.VerticalTransformImpl r3;
        ucar.ma2.Array $r5, $r8, $r9;
        int[] $r1, r2;
        int $i0, $i1, i2;
        ucar.nc2.Variable r0;
        ucar.nc2.Dimension $r4, $r6;
        java.lang.String $r7;

        r3 := @this: ucar.unidata.geoloc.vertical.VerticalTransformImpl;

        r0 := @parameter0: ucar.nc2.Variable;

        i2 := @parameter1: int;

        $r1 = virtualinvoke r0.<ucar.nc2.Variable: int[] getShape()>();

        $i0 = virtualinvoke r0.<ucar.nc2.Variable: int getRank()>();

        r2 = newarray (int)[$i0];

        $r4 = virtualinvoke r3.<ucar.unidata.geoloc.vertical.VerticalTransformImpl: ucar.nc2.Dimension getTimeDimension()>();

        if $r4 == null goto label1;

        $r6 = virtualinvoke r3.<ucar.unidata.geoloc.vertical.VerticalTransformImpl: ucar.nc2.Dimension getTimeDimension()>();

        $r7 = virtualinvoke $r6.<ucar.nc2.Dimension: java.lang.String getName()>();

        $i1 = virtualinvoke r0.<ucar.nc2.Variable: int findDimensionIndex(java.lang.String)>($r7);

        if $i1 < 0 goto label1;

        $r1[$i1] = 1;

        r2[$i1] = i2;

        $r8 = virtualinvoke r0.<ucar.nc2.Variable: ucar.ma2.Array read(int[],int[])>(r2, $r1);

        $r9 = virtualinvoke $r8.<ucar.ma2.Array: ucar.ma2.Array reduce(int)>($i1);

        return $r9;

     label1:
        $r5 = virtualinvoke r0.<ucar.nc2.Variable: ucar.ma2.Array read(int[],int[])>(r2, $r1);

        return $r5;
    }

    public ucar.unidata.geoloc.vertical.VerticalTransform subset(ucar.ma2.Range, ucar.ma2.Range, ucar.ma2.Range, ucar.ma2.Range) throws ucar.ma2.InvalidRangeException
    {
        ucar.ma2.Range r2, r3, r4, r5;
        ucar.unidata.geoloc.vertical.VerticalTransformImpl r1;
        ucar.unidata.geoloc.vertical.VerticalTransformSubset $r0;

        r1 := @this: ucar.unidata.geoloc.vertical.VerticalTransformImpl;

        r2 := @parameter0: ucar.ma2.Range;

        r3 := @parameter1: ucar.ma2.Range;

        r4 := @parameter2: ucar.ma2.Range;

        r5 := @parameter3: ucar.ma2.Range;

        $r0 = new ucar.unidata.geoloc.vertical.VerticalTransformSubset;

        specialinvoke $r0.<ucar.unidata.geoloc.vertical.VerticalTransformSubset: void <init>(ucar.unidata.geoloc.vertical.VerticalTransform,ucar.ma2.Range,ucar.ma2.Range,ucar.ma2.Range,ucar.ma2.Range)>(r1, r2, r3, r4, r5);

        return $r0;
    }

    protected java.lang.String getParameterStringValue(java.util.List, java.lang.String)
    {
        ucar.unidata.geoloc.vertical.VerticalTransformImpl r7;
        java.util.Iterator $r1;
        ucar.unidata.util.Parameter r3;
        java.util.List r0;
        java.lang.Object $r2;
        java.lang.String r4, $r5, $r6;
        boolean $z0, $z1;

        r7 := @this: ucar.unidata.geoloc.vertical.VerticalTransformImpl;

        r0 := @parameter0: java.util.List;

        r4 := @parameter1: java.lang.String;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (ucar.unidata.util.Parameter) $r2;

        $r5 = virtualinvoke r3.<ucar.unidata.util.Parameter: java.lang.String getName()>();

        $z1 = virtualinvoke r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r5);

        if $z1 == 0 goto label2;

        $r6 = virtualinvoke r3.<ucar.unidata.util.Parameter: java.lang.String getStringValue()>();

        return $r6;

     label2:
        goto label1;

     label3:
        return null;
    }

    protected boolean getParameterBooleanValue(java.util.List, java.lang.String)
    {
        ucar.unidata.geoloc.vertical.VerticalTransformImpl r8;
        java.util.Iterator $r1;
        ucar.unidata.util.Parameter r3;
        java.util.List r0;
        java.lang.Boolean $r7;
        java.lang.Object $r2;
        java.lang.String r4, $r5, $r6;
        boolean $z0, $z1, $z2;

        r8 := @this: ucar.unidata.geoloc.vertical.VerticalTransformImpl;

        r0 := @parameter0: java.util.List;

        r4 := @parameter1: java.lang.String;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (ucar.unidata.util.Parameter) $r2;

        $r5 = virtualinvoke r3.<ucar.unidata.util.Parameter: java.lang.String getName()>();

        $z1 = virtualinvoke r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r5);

        if $z1 == 0 goto label2;

        $r6 = virtualinvoke r3.<ucar.unidata.util.Parameter: java.lang.String getStringValue()>();

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r6);

        $z2 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        return $z2;

     label2:
        goto label1;

     label3:
        return 0;
    }
}
