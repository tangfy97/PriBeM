public class org.apache.batik.css.parser.DefaultAttributeCondition extends org.apache.batik.css.parser.AbstractAttributeCondition
{
    protected java.lang.String localName;
    protected java.lang.String namespaceURI;
    protected boolean specified;

    public void <init>(java.lang.String, java.lang.String, boolean, java.lang.String)
    {
        org.apache.batik.css.parser.DefaultAttributeCondition r0;
        java.lang.String r1, r2, r3;
        boolean z0;

        r0 := @this: org.apache.batik.css.parser.DefaultAttributeCondition;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r1 := @parameter3: java.lang.String;

        specialinvoke r0.<org.apache.batik.css.parser.AbstractAttributeCondition: void <init>(java.lang.String)>(r1);

        r0.<org.apache.batik.css.parser.DefaultAttributeCondition: java.lang.String localName> = r2;

        r0.<org.apache.batik.css.parser.DefaultAttributeCondition: java.lang.String namespaceURI> = r3;

        r0.<org.apache.batik.css.parser.DefaultAttributeCondition: boolean specified> = z0;

        return;
    }

    public short getConditionType()
    {
        org.apache.batik.css.parser.DefaultAttributeCondition r0;

        r0 := @this: org.apache.batik.css.parser.DefaultAttributeCondition;

        return 4;
    }

    public java.lang.String getNamespaceURI()
    {
        org.apache.batik.css.parser.DefaultAttributeCondition r0;
        java.lang.String $r1;

        r0 := @this: org.apache.batik.css.parser.DefaultAttributeCondition;

        $r1 = r0.<org.apache.batik.css.parser.DefaultAttributeCondition: java.lang.String namespaceURI>;

        return $r1;
    }

    public java.lang.String getLocalName()
    {
        org.apache.batik.css.parser.DefaultAttributeCondition r0;
        java.lang.String $r1;

        r0 := @this: org.apache.batik.css.parser.DefaultAttributeCondition;

        $r1 = r0.<org.apache.batik.css.parser.DefaultAttributeCondition: java.lang.String localName>;

        return $r1;
    }

    public boolean getSpecified()
    {
        org.apache.batik.css.parser.DefaultAttributeCondition r0;
        boolean $z0;

        r0 := @this: org.apache.batik.css.parser.DefaultAttributeCondition;

        $z0 = r0.<org.apache.batik.css.parser.DefaultAttributeCondition: boolean specified>;

        return $z0;
    }

    public java.lang.String toString()
    {
        org.apache.batik.css.parser.DefaultAttributeCondition r0;
        java.lang.StringBuffer $r2, $r3, $r5, $r6, $r8, $r9, $r11, $r12, $r14, $r15;
        java.lang.String $r1, $r4, $r7, $r10, $r13, $r16;

        r0 := @this: org.apache.batik.css.parser.DefaultAttributeCondition;

        $r1 = r0.<org.apache.batik.css.parser.AbstractAttributeCondition: java.lang.String value>;

        if $r1 != null goto label1;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $r13 = r0.<org.apache.batik.css.parser.DefaultAttributeCondition: java.lang.String localName>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r16;

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $r4 = r0.<org.apache.batik.css.parser.DefaultAttributeCondition: java.lang.String localName>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=\"");

        $r7 = r0.<org.apache.batik.css.parser.AbstractAttributeCondition: java.lang.String value>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"]");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r10;
    }
}
