class com.mongodb.util.TestCase$Result extends java.lang.Object
{
    final com.mongodb.util.TestCase$Test _test;
    final java.lang.Throwable _error;

    void <init>(com.mongodb.util.TestCase$Test)
    {
        com.mongodb.util.TestCase$Test r1;
        com.mongodb.util.TestCase$Result r0;

        r0 := @this: com.mongodb.util.TestCase$Result;

        r1 := @parameter0: com.mongodb.util.TestCase$Test;

        specialinvoke r0.<com.mongodb.util.TestCase$Result: void <init>(com.mongodb.util.TestCase$Test,java.lang.Throwable)>(r1, null);

        return;
    }

    void <init>(com.mongodb.util.TestCase$Test, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        com.mongodb.util.TestCase$Test r1;
        com.mongodb.util.TestCase$Result r0;

        r0 := @this: com.mongodb.util.TestCase$Result;

        r1 := @parameter0: com.mongodb.util.TestCase$Test;

        r2 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mongodb.util.TestCase$Result: com.mongodb.util.TestCase$Test _test> = r1;

        r0.<com.mongodb.util.TestCase$Result: java.lang.Throwable _error> = r2;

        return;
    }

    boolean ok()
    {
        java.lang.Throwable $r1;
        com.mongodb.util.TestCase$Result r0;
        boolean $z0;

        r0 := @this: com.mongodb.util.TestCase$Result;

        $r1 = r0.<com.mongodb.util.TestCase$Result: java.lang.Throwable _error>;

        if $r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String toString()
    {
        java.lang.Throwable r16;
        com.mongodb.util.TestCase$Result r1;
        int i0, i1;
        java.lang.StackTraceElement r10;
        java.lang.String $r3, $r8, $r15;
        com.mongodb.util.TestCase$Test $r2;
        java.lang.StackTraceElement[] $r9;
        java.lang.StringBuilder $r0, $r4, $r5, $r6, $r7, $r11, $r12, $r13, $r14;

        r1 := @this: com.mongodb.util.TestCase$Result;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<com.mongodb.util.TestCase$Result: com.mongodb.util.TestCase$Test _test>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        r16 = r1.<com.mongodb.util.TestCase$Result: java.lang.Throwable _error>;

     label1:
        if r16 == null goto label4;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\t");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = virtualinvoke r16.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        i0 = lengthof $r9;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r10 = $r9[i1];

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t\t");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        i1 = i1 + 1;

        goto label2;

     label3:
        r16 = virtualinvoke r16.<java.lang.Throwable: java.lang.Throwable getCause()>();

        goto label1;

     label4:
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
}
