class org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedInteriorObject extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    transient org.apache.xmlbeans.XmlObject _impl;
    transient org.apache.xmlbeans.XmlObject _root;

    private void <init>()
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedInteriorObject r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedInteriorObject;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private void <init>(org.apache.xmlbeans.XmlObject, org.apache.xmlbeans.XmlObject)
    {
        org.apache.xmlbeans.XmlObject r1, r2;
        org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedInteriorObject r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedInteriorObject;

        r1 := @parameter0: org.apache.xmlbeans.XmlObject;

        r2 := @parameter1: org.apache.xmlbeans.XmlObject;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedInteriorObject: org.apache.xmlbeans.XmlObject _impl> = r1;

        r0.<org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedInteriorObject: org.apache.xmlbeans.XmlObject _root> = r2;

        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        int $i0;
        java.io.ObjectOutputStream r0;
        org.apache.xmlbeans.XmlObject $r2;
        org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedInteriorObject r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedInteriorObject;

        r0 := @parameter0: java.io.ObjectOutputStream;

        $r2 = r1.<org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedInteriorObject: org.apache.xmlbeans.XmlObject _root>;

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r2);

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeBoolean(boolean)>(0);

        $i0 = specialinvoke r1.<org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedInteriorObject: int distanceToRoot()>();

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeInt(int)>($i0);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream r1;
        int $i0;
        java.lang.Object $r2;
        org.apache.xmlbeans.XmlObject $r3, $r4;
        org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedInteriorObject r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedInteriorObject;

        r1 := @parameter0: java.io.ObjectInputStream;

        $r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r3 = (org.apache.xmlbeans.XmlObject) $r2;

        r0.<org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedInteriorObject: org.apache.xmlbeans.XmlObject _root> = $r3;

        virtualinvoke r1.<java.io.ObjectInputStream: boolean readBoolean()>();

        $i0 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();

        $r4 = specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedInteriorObject: org.apache.xmlbeans.XmlObject objectAtDistance(int)>($i0);

        r0.<org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedInteriorObject: org.apache.xmlbeans.XmlObject _impl> = $r4;

        return;
    }

    private java.lang.Object readResolve() throws java.io.ObjectStreamException
    {
        org.apache.xmlbeans.XmlObject $r1;
        org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedInteriorObject r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedInteriorObject;

        $r1 = r0.<org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedInteriorObject: org.apache.xmlbeans.XmlObject _impl>;

        return $r1;
    }

    private int distanceToRoot()
    {
        org.apache.xmlbeans.XmlCursor $r2;
        org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedInteriorObject r0;
        org.apache.xmlbeans.XmlCursor$TokenType $r3, $r4;
        int i0;
        org.apache.xmlbeans.XmlObject $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedInteriorObject;

        $r1 = r0.<org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedInteriorObject: org.apache.xmlbeans.XmlObject _impl>;

        $r2 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlCursor newCursor()>();

        i0 = 0;

     label1:
        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toPrevToken()>();

        $z1 = virtualinvoke $r4.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isNone()>();

        if $z1 != 0 goto label2;

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        $z0 = virtualinvoke $r3.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isNamespace()>();

        if $z0 != 0 goto label1;

        i0 = i0 + 1;

        goto label1;

     label2:
        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return i0;
    }

    private org.apache.xmlbeans.XmlObject objectAtDistance(int)
    {
        org.apache.xmlbeans.XmlCursor $r2;
        org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedInteriorObject r0;
        org.apache.xmlbeans.XmlCursor$TokenType $r4;
        int i0, $i2;
        org.apache.xmlbeans.XmlObject $r1, $r3;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedInteriorObject;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedInteriorObject: org.apache.xmlbeans.XmlObject _root>;

        $r2 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlCursor newCursor()>();

     label1:
        if i0 <= 0 goto label2;

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType currentTokenType()>();

        $z0 = virtualinvoke $r4.<org.apache.xmlbeans.XmlCursor$TokenType: boolean isNamespace()>();

        if $z0 != 0 goto label1;

        $i2 = (int) -1;

        i0 = i0 + $i2;

        goto label1;

     label2:
        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return $r3;
    }

    void <init>(org.apache.xmlbeans.XmlObject, org.apache.xmlbeans.XmlObject, org.apache.xmlbeans.impl.values.XmlObjectBase$1)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase$1 r3;
        org.apache.xmlbeans.XmlObject r1, r2;
        org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedInteriorObject r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedInteriorObject;

        r1 := @parameter0: org.apache.xmlbeans.XmlObject;

        r2 := @parameter1: org.apache.xmlbeans.XmlObject;

        r3 := @parameter2: org.apache.xmlbeans.impl.values.XmlObjectBase$1;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedInteriorObject: void <init>(org.apache.xmlbeans.XmlObject,org.apache.xmlbeans.XmlObject)>(r1, r2);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.xmlbeans.impl.values.XmlObjectBase$SerializedInteriorObject: long serialVersionUID> = 1L;

        return;
    }
}
