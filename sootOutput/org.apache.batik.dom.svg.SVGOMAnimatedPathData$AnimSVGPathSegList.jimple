public class org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList extends org.apache.batik.dom.svg.AbstractSVGPathSegList
{
    private int[] parameterIndex;
    private final org.apache.batik.dom.svg.SVGOMAnimatedPathData this$0;

    public void <init>(org.apache.batik.dom.svg.SVGOMAnimatedPathData)
    {
        org.apache.batik.dom.svg.SVGOMAnimatedPathData r1;
        org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList r0;
        int[] $r2;
        java.util.ArrayList $r3;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList;

        r1 := @parameter0: org.apache.batik.dom.svg.SVGOMAnimatedPathData;

        specialinvoke r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList: void <init>()>();

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList: org.apache.batik.dom.svg.SVGOMAnimatedPathData this$0> = r1;

        $r2 = newarray (int)[1];

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList: int[] parameterIndex> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(1);

        r0.<org.apache.batik.dom.svg.AbstractSVGList: java.util.List itemList> = $r3;

        return;
    }

    protected org.w3c.dom.DOMException createDOMException(short, java.lang.String, java.lang.Object[])
    {
        short s0;
        java.lang.Object[] r3;
        org.apache.batik.dom.svg.SVGOMAnimatedPathData $r1;
        org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList r0;
        org.w3c.dom.DOMException $r5;
        java.lang.String r2;
        org.apache.batik.dom.svg.AbstractElement $r4;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList;

        s0 := @parameter0: short;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList: org.apache.batik.dom.svg.SVGOMAnimatedPathData this$0>;

        $r4 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r5 = virtualinvoke $r4.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(s0, r2, r3);

        return $r5;
    }

    protected org.w3c.dom.svg.SVGException createSVGException(short, java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r4;
        org.apache.batik.dom.svg.SVGOMAnimatedPathData $r1;
        short s0;
        org.w3c.dom.svg.SVGException $r6;
        org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList r0;
        java.lang.String r3;
        org.apache.batik.dom.svg.AbstractElement $r2;
        org.apache.batik.dom.svg.SVGOMElement $r5;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList;

        s0 := @parameter0: short;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.Object[];

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList: org.apache.batik.dom.svg.SVGOMAnimatedPathData this$0>;

        $r2 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r5 = (org.apache.batik.dom.svg.SVGOMElement) $r2;

        $r6 = virtualinvoke $r5.<org.apache.batik.dom.svg.SVGOMElement: org.w3c.dom.svg.SVGException createSVGException(short,java.lang.String,java.lang.Object[])>(s0, r3, r4);

        return $r6;
    }

    public int getNumberOfItems()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedPathData $r1, $r2;
        org.w3c.dom.svg.SVGPathSegList $r3;
        org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList: org.apache.batik.dom.svg.SVGOMAnimatedPathData this$0>;

        $z0 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal>;

        if $z0 == 0 goto label1;

        $i1 = specialinvoke r0.<org.apache.batik.dom.svg.AbstractSVGList: int getNumberOfItems()>();

        return $i1;

     label1:
        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList: org.apache.batik.dom.svg.SVGOMAnimatedPathData this$0>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: org.w3c.dom.svg.SVGPathSegList getPathSegList()>();

        $i0 = interfaceinvoke $r3.<org.w3c.dom.svg.SVGPathSegList: int getNumberOfItems()>();

        return $i0;
    }

    public org.w3c.dom.svg.SVGPathSeg getItem(int) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.svg.SVGOMAnimatedPathData $r1, $r2;
        org.w3c.dom.svg.SVGPathSegList $r3;
        org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList r0;
        int i0;
        org.w3c.dom.svg.SVGPathSeg $r4, $r5;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList: org.apache.batik.dom.svg.SVGOMAnimatedPathData this$0>;

        $z0 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal>;

        if $z0 == 0 goto label1;

        $r5 = specialinvoke r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList: org.w3c.dom.svg.SVGPathSeg getItem(int)>(i0);

        return $r5;

     label1:
        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList: org.apache.batik.dom.svg.SVGOMAnimatedPathData this$0>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.svg.SVGOMAnimatedPathData: org.w3c.dom.svg.SVGPathSegList getPathSegList()>();

        $r4 = interfaceinvoke $r3.<org.w3c.dom.svg.SVGPathSegList: org.w3c.dom.svg.SVGPathSeg getItem(int)>(i0);

        return $r4;
    }

    protected java.lang.String getValueAsString()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList r0;
        java.lang.StringBuffer $r2;
        int $i0, $i1, $i2;
        java.lang.String $r6, $r9, $r10, $r13;
        boolean $z0, $z1;
        java.util.Iterator $r5;
        org.apache.batik.dom.svg.SVGItem $r8, $r12;
        java.util.List $r1, $r3, $r4;
        java.lang.Object $r7, $r11;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList;

        $r1 = r0.<org.apache.batik.dom.svg.AbstractSVGList: java.util.List itemList>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        return "";

     label1:
        $r2 = new java.lang.StringBuffer;

        $r3 = r0.<org.apache.batik.dom.svg.AbstractSVGList: java.util.List itemList>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i2 = $i1 * 8;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(int)>($i2);

        $r4 = r0.<org.apache.batik.dom.svg.AbstractSVGList: java.util.List itemList>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r11 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (org.apache.batik.dom.svg.SVGItem) $r11;

        $r13 = interfaceinvoke $r12.<org.apache.batik.dom.svg.SVGItem: java.lang.String getValueAsString()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        goto label3;

     label2:
        $r6 = virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGPathSegList: java.lang.String getItemSeparator()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (org.apache.batik.dom.svg.SVGItem) $r7;

        $r9 = interfaceinvoke $r8.<org.apache.batik.dom.svg.SVGItem: java.lang.String getValueAsString()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

     label3:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label2;

        $r10 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r10;
    }

    protected void setAttributeValue(java.lang.String)
    {
        java.lang.String r1;
        org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void clear() throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.svg.SVGOMAnimatedPathData $r1;
        org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList r0;
        org.w3c.dom.DOMException $r3;
        org.apache.batik.dom.svg.AbstractElement $r2;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList: org.apache.batik.dom.svg.SVGOMAnimatedPathData this$0>;

        $r2 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(7, "readonly.pathseg.list", null);

        throw $r3;
    }

    public org.w3c.dom.svg.SVGPathSeg initialize(org.w3c.dom.svg.SVGPathSeg) throws org.w3c.dom.DOMException, org.w3c.dom.svg.SVGException
    {
        org.apache.batik.dom.svg.SVGOMAnimatedPathData $r1;
        org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList r0;
        org.w3c.dom.DOMException $r3;
        org.apache.batik.dom.svg.AbstractElement $r2;
        org.w3c.dom.svg.SVGPathSeg r4;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList;

        r4 := @parameter0: org.w3c.dom.svg.SVGPathSeg;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList: org.apache.batik.dom.svg.SVGOMAnimatedPathData this$0>;

        $r2 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(7, "readonly.pathseg.list", null);

        throw $r3;
    }

    public org.w3c.dom.svg.SVGPathSeg insertItemBefore(org.w3c.dom.svg.SVGPathSeg, int) throws org.w3c.dom.DOMException, org.w3c.dom.svg.SVGException
    {
        org.apache.batik.dom.svg.SVGOMAnimatedPathData $r1;
        org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList r0;
        org.w3c.dom.DOMException $r3;
        int i0;
        org.apache.batik.dom.svg.AbstractElement $r2;
        org.w3c.dom.svg.SVGPathSeg r4;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList;

        r4 := @parameter0: org.w3c.dom.svg.SVGPathSeg;

        i0 := @parameter1: int;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList: org.apache.batik.dom.svg.SVGOMAnimatedPathData this$0>;

        $r2 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(7, "readonly.pathseg.list", null);

        throw $r3;
    }

    public org.w3c.dom.svg.SVGPathSeg replaceItem(org.w3c.dom.svg.SVGPathSeg, int) throws org.w3c.dom.DOMException, org.w3c.dom.svg.SVGException
    {
        org.apache.batik.dom.svg.SVGOMAnimatedPathData $r1;
        org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList r0;
        org.w3c.dom.DOMException $r3;
        int i0;
        org.apache.batik.dom.svg.AbstractElement $r2;
        org.w3c.dom.svg.SVGPathSeg r4;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList;

        r4 := @parameter0: org.w3c.dom.svg.SVGPathSeg;

        i0 := @parameter1: int;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList: org.apache.batik.dom.svg.SVGOMAnimatedPathData this$0>;

        $r2 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(7, "readonly.pathseg.list", null);

        throw $r3;
    }

    public org.w3c.dom.svg.SVGPathSeg removeItem(int) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.svg.SVGOMAnimatedPathData $r1;
        org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList r0;
        org.w3c.dom.DOMException $r3;
        int i0;
        org.apache.batik.dom.svg.AbstractElement $r2;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList: org.apache.batik.dom.svg.SVGOMAnimatedPathData this$0>;

        $r2 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(7, "readonly.pathseg.list", null);

        throw $r3;
    }

    public org.w3c.dom.svg.SVGPathSeg appendItem(org.w3c.dom.svg.SVGPathSeg) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.svg.SVGOMAnimatedPathData $r1;
        org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList r0;
        org.w3c.dom.DOMException $r3;
        org.apache.batik.dom.svg.AbstractElement $r2;
        org.w3c.dom.svg.SVGPathSeg r4;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList;

        r4 := @parameter0: org.w3c.dom.svg.SVGPathSeg;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList: org.apache.batik.dom.svg.SVGOMAnimatedPathData this$0>;

        $r2 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(7, "readonly.pathseg.list", null);

        throw $r3;
    }

    protected org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem newItem(short, float[], int[])
    {
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoCubicItem $r32;
        byte $b25, $b28;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegLinetoVerticalItem $r38;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegMovetoLinetoItem $r36;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoCubicSmoothItem $r33;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem $r31;
        float[] r3;
        short s0;
        java.lang.String $r5, $r8, $r11, $r14, $r18, $r21, $r24, $r27, $r29;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoQuadraticItem $r34;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoQuadraticSmoothItem $r35;
        int[] r4;
        boolean $z0, $z1;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem $r30;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26;
        java.lang.String[] $r2, $r7, $r10, $r13, $r15, $r17, $r20, $r23, $r26;
        org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList r1;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegLinetoHorizontalItem $r37;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i26, $i27, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66;

        r1 := @this: org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList;

        s0 := @parameter0: short;

        r3 := @parameter1: float[];

        r4 := @parameter2: int[];

        $i57 = (int) s0;

        tableswitch($i57)
        {
            case 1: goto label06;
            case 2: goto label11;
            case 3: goto label11;
            case 4: goto label11;
            case 5: goto label11;
            case 6: goto label07;
            case 7: goto label07;
            case 8: goto label09;
            case 9: goto label09;
            case 10: goto label01;
            case 11: goto label01;
            case 12: goto label12;
            case 13: goto label12;
            case 14: goto label13;
            case 15: goto label13;
            case 16: goto label08;
            case 17: goto label08;
            case 18: goto label10;
            case 19: goto label10;
            default: goto label14;
        };

     label01:
        $r30 = new org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem;

        $r15 = <org.apache.batik.dom.svg.SVGPathSegConstants: java.lang.String[] PATHSEG_LETTERS>;

        $i58 = (int) s0;

        $r29 = $r15[$i58];

        $i17 = r4[0];

        $i18 = $i17 + 1;

        r4[0] = $i18;

        $f22 = r3[$i17];

        $i19 = r4[0];

        $i20 = $i19 + 1;

        r4[0] = $i20;

        $f23 = r3[$i19];

        $i21 = r4[0];

        $i22 = $i21 + 1;

        r4[0] = $i22;

        $f24 = r3[$i21];

        $i23 = r4[0];

        $i24 = $i23 + 1;

        r4[0] = $i24;

        $f8 = r3[$i23];

        $b25 = $f8 cmpl 0.0F;

        if $b25 == 0 goto label02;

        $z0 = 1;

        goto label03;

     label02:
        $z0 = 0;

     label03:
        $i26 = r4[0];

        $i27 = $i26 + 1;

        r4[0] = $i27;

        $f9 = r3[$i26];

        $b28 = $f9 cmpl 0.0F;

        if $b28 == 0 goto label04;

        $z1 = 1;

        goto label05;

     label04:
        $z1 = 0;

     label05:
        $i53 = r4[0];

        $i54 = $i53 + 1;

        r4[0] = $i54;

        $f25 = r3[$i53];

        $i55 = r4[0];

        $i56 = $i55 + 1;

        r4[0] = $i56;

        $f26 = r3[$i55];

        specialinvoke $r30.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem: void <init>(org.apache.batik.dom.svg.AbstractSVGPathSegList,short,java.lang.String,float,float,float,boolean,boolean,float,float)>(r1, s0, $r29, $f22, $f23, $f24, $z0, $z1, $f25, $f26);

        return $r30;

     label06:
        $r31 = new org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem;

        $r26 = <org.apache.batik.dom.svg.SVGPathSegConstants: java.lang.String[] PATHSEG_LETTERS>;

        $i59 = (int) s0;

        $r27 = $r26[$i59];

        specialinvoke $r31.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: void <init>(org.apache.batik.dom.svg.AbstractSVGPathSegList,short,java.lang.String)>(r1, s0, $r27);

        return $r31;

     label07:
        $r32 = new org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoCubicItem;

        $r20 = <org.apache.batik.dom.svg.SVGPathSegConstants: java.lang.String[] PATHSEG_LETTERS>;

        $i60 = (int) s0;

        $r21 = $r20[$i60];

        $i37 = r4[0];

        $i38 = $i37 + 1;

        r4[0] = $i38;

        $f19 = r3[$i37];

        $i39 = r4[0];

        $i40 = $i39 + 1;

        r4[0] = $i40;

        $f18 = r3[$i39];

        $i41 = r4[0];

        $i42 = $i41 + 1;

        r4[0] = $i42;

        $f17 = r3[$i41];

        $i43 = r4[0];

        $i44 = $i43 + 1;

        r4[0] = $i44;

        $f16 = r3[$i43];

        $i45 = r4[0];

        $i46 = $i45 + 1;

        r4[0] = $i46;

        $f15 = r3[$i45];

        $i47 = r4[0];

        $i48 = $i47 + 1;

        r4[0] = $i48;

        $f14 = r3[$i47];

        specialinvoke $r32.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoCubicItem: void <init>(org.apache.batik.dom.svg.AbstractSVGPathSegList,short,java.lang.String,float,float,float,float,float,float)>(r1, s0, $r21, $f19, $f18, $f17, $f16, $f15, $f14);

        return $r32;

     label08:
        $r33 = new org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoCubicSmoothItem;

        $r7 = <org.apache.batik.dom.svg.SVGPathSegConstants: java.lang.String[] PATHSEG_LETTERS>;

        $i61 = (int) s0;

        $r8 = $r7[$i61];

        $i5 = r4[0];

        $i6 = $i5 + 1;

        r4[0] = $i6;

        $f5 = r3[$i5];

        $i7 = r4[0];

        $i8 = $i7 + 1;

        r4[0] = $i8;

        $f4 = r3[$i7];

        $i9 = r4[0];

        $i10 = $i9 + 1;

        r4[0] = $i10;

        $f3 = r3[$i9];

        $i11 = r4[0];

        $i12 = $i11 + 1;

        r4[0] = $i12;

        $f2 = r3[$i11];

        specialinvoke $r33.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoCubicSmoothItem: void <init>(org.apache.batik.dom.svg.AbstractSVGPathSegList,short,java.lang.String,float,float,float,float)>(r1, s0, $r8, $f5, $f4, $f3, $f2);

        return $r33;

     label09:
        $r34 = new org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoQuadraticItem;

        $r17 = <org.apache.batik.dom.svg.SVGPathSegConstants: java.lang.String[] PATHSEG_LETTERS>;

        $i62 = (int) s0;

        $r18 = $r17[$i62];

        $i29 = r4[0];

        $i30 = $i29 + 1;

        r4[0] = $i30;

        $f13 = r3[$i29];

        $i31 = r4[0];

        $i32 = $i31 + 1;

        r4[0] = $i32;

        $f12 = r3[$i31];

        $i33 = r4[0];

        $i34 = $i33 + 1;

        r4[0] = $i34;

        $f11 = r3[$i33];

        $i35 = r4[0];

        $i36 = $i35 + 1;

        r4[0] = $i36;

        $f10 = r3[$i35];

        specialinvoke $r34.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoQuadraticItem: void <init>(org.apache.batik.dom.svg.AbstractSVGPathSegList,short,java.lang.String,float,float,float,float)>(r1, s0, $r18, $f13, $f12, $f11, $f10);

        return $r34;

     label10:
        $r35 = new org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoQuadraticSmoothItem;

        $r2 = <org.apache.batik.dom.svg.SVGPathSegConstants: java.lang.String[] PATHSEG_LETTERS>;

        $i63 = (int) s0;

        $r5 = $r2[$i63];

        $i1 = r4[0];

        $i2 = $i1 + 1;

        r4[0] = $i2;

        $f1 = r3[$i1];

        $i3 = r4[0];

        $i4 = $i3 + 1;

        r4[0] = $i4;

        $f0 = r3[$i3];

        specialinvoke $r35.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoQuadraticSmoothItem: void <init>(org.apache.batik.dom.svg.AbstractSVGPathSegList,short,java.lang.String,float,float)>(r1, s0, $r5, $f1, $f0);

        return $r35;

     label11:
        $r36 = new org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegMovetoLinetoItem;

        $r23 = <org.apache.batik.dom.svg.SVGPathSegConstants: java.lang.String[] PATHSEG_LETTERS>;

        $i64 = (int) s0;

        $r24 = $r23[$i64];

        $i49 = r4[0];

        $i50 = $i49 + 1;

        r4[0] = $i50;

        $f21 = r3[$i49];

        $i51 = r4[0];

        $i52 = $i51 + 1;

        r4[0] = $i52;

        $f20 = r3[$i51];

        specialinvoke $r36.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegMovetoLinetoItem: void <init>(org.apache.batik.dom.svg.AbstractSVGPathSegList,short,java.lang.String,float,float)>(r1, s0, $r24, $f21, $f20);

        return $r36;

     label12:
        $r37 = new org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegLinetoHorizontalItem;

        $r13 = <org.apache.batik.dom.svg.SVGPathSegConstants: java.lang.String[] PATHSEG_LETTERS>;

        $i65 = (int) s0;

        $r14 = $r13[$i65];

        $i15 = r4[0];

        $i16 = $i15 + 1;

        r4[0] = $i16;

        $f7 = r3[$i15];

        specialinvoke $r37.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegLinetoHorizontalItem: void <init>(org.apache.batik.dom.svg.AbstractSVGPathSegList,short,java.lang.String,float)>(r1, s0, $r14, $f7);

        return $r37;

     label13:
        $r38 = new org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegLinetoVerticalItem;

        $r10 = <org.apache.batik.dom.svg.SVGPathSegConstants: java.lang.String[] PATHSEG_LETTERS>;

        $i66 = (int) s0;

        $r11 = $r10[$i66];

        $i13 = r4[0];

        $i14 = $i13 + 1;

        r4[0] = $i14;

        $f6 = r3[$i13];

        specialinvoke $r38.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegLinetoVerticalItem: void <init>(org.apache.batik.dom.svg.AbstractSVGPathSegList,short,java.lang.String,float)>(r1, s0, $r11, $f6);

        return $r38;

     label14:
        return null;
    }

    protected void setAnimatedValue(short[], float[])
    {
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoCubicItem r10;
        byte $b31, $b34;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegLinetoVerticalItem r16;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegMovetoLinetoItem r14;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoCubicSmoothItem r11;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem $r5;
        float[] r4;
        short $s1, $s4, $s5, $s6, $s63;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoQuadraticItem r12;
        org.w3c.dom.svg.SVGPathSeg r8;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoQuadraticSmoothItem r13;
        int[] r2;
        boolean $z0, $z1;
        java.util.List $r1, $r6;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem r9;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26;
        short[] r3;
        org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList r0;
        org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegLinetoHorizontalItem r15;
        int $i0, $i2, $i3, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i32, $i33, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, i64, i65, $i66, $i67, $i68, $i69, $i71;
        java.lang.Object $r7;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList;

        r3 := @parameter0: short[];

        r4 := @parameter1: float[];

        $r1 = r0.<org.apache.batik.dom.svg.AbstractSVGList: java.util.List itemList>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        i64 = $i0;

        i65 = 0;

        r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList: int[] parameterIndex>;

        r2[0] = 0;

        goto label17;

     label01:
        $r6 = r0.<org.apache.batik.dom.svg.AbstractSVGList: java.util.List itemList>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i65);

        r8 = (org.w3c.dom.svg.SVGPathSeg) $r7;

        $s4 = interfaceinvoke r8.<org.w3c.dom.svg.SVGPathSeg: short getPathSegType()>();

        $s5 = r3[i65];

        $i67 = (int) $s4;

        $i68 = (int) $s5;

        if $i67 == $i68 goto label02;

        $s63 = r3[i65];

        virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList: org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem newItem(short,float[],int[])>($s63, r4, r2);

        goto label16;

     label02:
        $s6 = r3[i65];

        $i69 = (int) $s6;

        tableswitch($i69)
        {
            case 1: goto label08;
            case 2: goto label13;
            case 3: goto label13;
            case 4: goto label13;
            case 5: goto label13;
            case 6: goto label09;
            case 7: goto label09;
            case 8: goto label11;
            case 9: goto label11;
            case 10: goto label03;
            case 11: goto label03;
            case 12: goto label14;
            case 13: goto label14;
            case 14: goto label15;
            case 15: goto label15;
            case 16: goto label10;
            case 17: goto label10;
            case 18: goto label12;
            case 19: goto label12;
            default: goto label16;
        };

     label03:
        r9 = (org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegArcItem) r8;

        $i23 = r2[0];

        $i24 = $i23 + 1;

        r2[0] = $i24;

        $f8 = r4[$i23];

        r9.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float r1> = $f8;

        $i25 = r2[0];

        $i26 = $i25 + 1;

        r2[0] = $i26;

        $f9 = r4[$i25];

        r9.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float r2> = $f9;

        $i27 = r2[0];

        $i28 = $i27 + 1;

        r2[0] = $i28;

        $f10 = r4[$i27];

        r9.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float angle> = $f10;

        $i29 = r2[0];

        $i30 = $i29 + 1;

        r2[0] = $i30;

        $f11 = r4[$i29];

        $b31 = $f11 cmpl 0.0F;

        if $b31 == 0 goto label04;

        $z0 = 1;

        goto label05;

     label04:
        $z0 = 0;

     label05:
        r9.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: boolean largeArcFlag> = $z0;

        $i32 = r2[0];

        $i33 = $i32 + 1;

        r2[0] = $i33;

        $f12 = r4[$i32];

        $b34 = $f12 cmpl 0.0F;

        if $b34 == 0 goto label06;

        $z1 = 1;

        goto label07;

     label06:
        $z1 = 0;

     label07:
        r9.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: boolean sweepFlag> = $z1;

        $i35 = r2[0];

        $i36 = $i35 + 1;

        r2[0] = $i36;

        $f13 = r4[$i35];

        r9.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float x> = $f13;

        $i37 = r2[0];

        $i38 = $i37 + 1;

        r2[0] = $i38;

        $f14 = r4[$i37];

        r9.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float y> = $f14;

        goto label16;

     label08:
        goto label16;

     label09:
        r10 = (org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoCubicItem) r8;

        $i47 = r2[0];

        $i48 = $i47 + 1;

        r2[0] = $i48;

        $f19 = r4[$i47];

        r10.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float x1> = $f19;

        $i49 = r2[0];

        $i50 = $i49 + 1;

        r2[0] = $i50;

        $f20 = r4[$i49];

        r10.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float y1> = $f20;

        $i51 = r2[0];

        $i52 = $i51 + 1;

        r2[0] = $i52;

        $f21 = r4[$i51];

        r10.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float x2> = $f21;

        $i53 = r2[0];

        $i54 = $i53 + 1;

        r2[0] = $i54;

        $f22 = r4[$i53];

        r10.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float y2> = $f22;

        $i55 = r2[0];

        $i56 = $i55 + 1;

        r2[0] = $i56;

        $f23 = r4[$i55];

        r10.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float x> = $f23;

        $i57 = r2[0];

        $i58 = $i57 + 1;

        r2[0] = $i58;

        $f24 = r4[$i57];

        r10.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float y> = $f24;

        goto label16;

     label10:
        r11 = (org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoCubicSmoothItem) r8;

        $i11 = r2[0];

        $i12 = $i11 + 1;

        r2[0] = $i12;

        $f2 = r4[$i11];

        r11.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float x2> = $f2;

        $i13 = r2[0];

        $i14 = $i13 + 1;

        r2[0] = $i14;

        $f3 = r4[$i13];

        r11.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float y2> = $f3;

        $i15 = r2[0];

        $i16 = $i15 + 1;

        r2[0] = $i16;

        $f4 = r4[$i15];

        r11.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float x> = $f4;

        $i17 = r2[0];

        $i18 = $i17 + 1;

        r2[0] = $i18;

        $f5 = r4[$i17];

        r11.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float y> = $f5;

        goto label16;

     label11:
        r12 = (org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoQuadraticItem) r8;

        $i39 = r2[0];

        $i40 = $i39 + 1;

        r2[0] = $i40;

        $f15 = r4[$i39];

        r12.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float x1> = $f15;

        $i41 = r2[0];

        $i42 = $i41 + 1;

        r2[0] = $i42;

        $f16 = r4[$i41];

        r12.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float y1> = $f16;

        $i43 = r2[0];

        $i44 = $i43 + 1;

        r2[0] = $i44;

        $f17 = r4[$i43];

        r12.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float x> = $f17;

        $i45 = r2[0];

        $i46 = $i45 + 1;

        r2[0] = $i46;

        $f18 = r4[$i45];

        r12.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float y> = $f18;

        goto label16;

     label12:
        r13 = (org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegCurvetoQuadraticSmoothItem) r8;

        $i7 = r2[0];

        $i8 = $i7 + 1;

        r2[0] = $i8;

        $f0 = r4[$i7];

        r13.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float x> = $f0;

        $i9 = r2[0];

        $i10 = $i9 + 1;

        r2[0] = $i10;

        $f1 = r4[$i9];

        r13.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float y> = $f1;

        goto label16;

     label13:
        r14 = (org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegMovetoLinetoItem) r8;

        $i59 = r2[0];

        $i60 = $i59 + 1;

        r2[0] = $i60;

        $f25 = r4[$i59];

        r14.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float x> = $f25;

        $i61 = r2[0];

        $i62 = $i61 + 1;

        r2[0] = $i62;

        $f26 = r4[$i61];

        r14.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float y> = $f26;

        goto label16;

     label14:
        r15 = (org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegLinetoHorizontalItem) r8;

        $i21 = r2[0];

        $i22 = $i21 + 1;

        r2[0] = $i22;

        $f7 = r4[$i21];

        r15.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float x> = $f7;

        goto label16;

     label15:
        r16 = (org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegLinetoVerticalItem) r8;

        $i19 = r2[0];

        $i20 = $i19 + 1;

        r2[0] = $i20;

        $f6 = r4[$i19];

        r16.<org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem: float y> = $f6;

        goto label16;

     label16:
        i65 = i65 + 1;

     label17:
        if i65 >= $i0 goto label19;

        $i3 = lengthof r3;

        if i65 < $i3 goto label01;

        goto label19;

     label18:
        $s1 = r3[i65];

        $r5 = virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList: org.apache.batik.dom.svg.AbstractSVGPathSegList$SVGPathSegItem newItem(short,float[],int[])>($s1, r4, r2);

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGList: org.apache.batik.dom.svg.SVGItem appendItemImpl(java.lang.Object)>($r5);

        i65 = i65 + 1;

     label19:
        $i66 = lengthof r3;

        if i65 < $i66 goto label18;

        goto label21;

     label20:
        $i71 = (int) -1;

        i64 = i64 + $i71;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGList: org.apache.batik.dom.svg.SVGItem removeItemImpl(int)>(i64);

     label21:
        $i2 = lengthof r3;

        if i64 > $i2 goto label20;

        return;
    }

    protected void resetAttribute()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList;

        return;
    }

    protected void resetAttribute(org.apache.batik.dom.svg.SVGItem)
    {
        org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList r0;
        org.apache.batik.dom.svg.SVGItem r1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList;

        r1 := @parameter0: org.apache.batik.dom.svg.SVGItem;

        return;
    }

    protected void revalidate()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedPathData$AnimSVGPathSegList;

        r0.<org.apache.batik.dom.svg.AbstractSVGList: boolean valid> = 1;

        return;
    }
}
