class org.eclipse.jetty.xml.XmlParser$Node$1 extends java.lang.Object implements java.util.Iterator
{
    int c;
    org.eclipse.jetty.xml.XmlParser$Node _node;
    final java.lang.String val$tag;
    final org.eclipse.jetty.xml.XmlParser$Node this$0;

    void <init>(org.eclipse.jetty.xml.XmlParser$Node, java.lang.String)
    {
        org.eclipse.jetty.xml.XmlParser$Node r1;
        java.lang.String r2;
        org.eclipse.jetty.xml.XmlParser$Node$1 r0;

        r0 := @this: org.eclipse.jetty.xml.XmlParser$Node$1;

        r1 := @parameter0: org.eclipse.jetty.xml.XmlParser$Node;

        r2 := @parameter1: java.lang.String;

        r0.<org.eclipse.jetty.xml.XmlParser$Node$1: org.eclipse.jetty.xml.XmlParser$Node this$0> = r1;

        r0.<org.eclipse.jetty.xml.XmlParser$Node$1: java.lang.String val$tag> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.eclipse.jetty.xml.XmlParser$Node$1: int c> = 0;

        return;
    }

    public boolean hasNext()
    {
        java.util.ArrayList $r3, $r5, $r7;
        org.eclipse.jetty.xml.XmlParser$Node $r1, $r2, $r4, $r6, r9;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r10, $r11;
        boolean $z0, $z1;
        org.eclipse.jetty.xml.XmlParser$Node$1 r0;
        java.lang.Object $r8;

        r0 := @this: org.eclipse.jetty.xml.XmlParser$Node$1;

        $r1 = r0.<org.eclipse.jetty.xml.XmlParser$Node$1: org.eclipse.jetty.xml.XmlParser$Node _node>;

        if $r1 == null goto label1;

        return 1;

     label1:
        $r2 = r0.<org.eclipse.jetty.xml.XmlParser$Node$1: org.eclipse.jetty.xml.XmlParser$Node this$0>;

        $r3 = staticinvoke <org.eclipse.jetty.xml.XmlParser$Node: java.util.ArrayList access$700(org.eclipse.jetty.xml.XmlParser$Node)>($r2);

        if $r3 == null goto label3;

        $i0 = r0.<org.eclipse.jetty.xml.XmlParser$Node$1: int c>;

        $r4 = r0.<org.eclipse.jetty.xml.XmlParser$Node$1: org.eclipse.jetty.xml.XmlParser$Node this$0>;

        $r5 = staticinvoke <org.eclipse.jetty.xml.XmlParser$Node: java.util.ArrayList access$700(org.eclipse.jetty.xml.XmlParser$Node)>($r4);

        $i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label3;

        $r6 = r0.<org.eclipse.jetty.xml.XmlParser$Node$1: org.eclipse.jetty.xml.XmlParser$Node this$0>;

        $r7 = staticinvoke <org.eclipse.jetty.xml.XmlParser$Node: java.util.ArrayList access$700(org.eclipse.jetty.xml.XmlParser$Node)>($r6);

        $i2 = r0.<org.eclipse.jetty.xml.XmlParser$Node$1: int c>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $z0 = $r8 instanceof org.eclipse.jetty.xml.XmlParser$Node;

        if $z0 == 0 goto label2;

        r9 = (org.eclipse.jetty.xml.XmlParser$Node) $r8;

        $r10 = r0.<org.eclipse.jetty.xml.XmlParser$Node$1: java.lang.String val$tag>;

        $r11 = staticinvoke <org.eclipse.jetty.xml.XmlParser$Node: java.lang.String access$800(org.eclipse.jetty.xml.XmlParser$Node)>(r9);

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z1 == 0 goto label2;

        r0.<org.eclipse.jetty.xml.XmlParser$Node$1: org.eclipse.jetty.xml.XmlParser$Node _node> = r9;

        return 1;

     label2:
        $i3 = r0.<org.eclipse.jetty.xml.XmlParser$Node$1: int c>;

        $i4 = $i3 + 1;

        r0.<org.eclipse.jetty.xml.XmlParser$Node$1: int c> = $i4;

        goto label1;

     label3:
        return 0;
    }

    public org.eclipse.jetty.xml.XmlParser$Node next()
    {
        java.lang.Throwable $r3;
        org.eclipse.jetty.xml.XmlParser$Node$1 r0;
        org.eclipse.jetty.xml.XmlParser$Node r2;
        int $i0, $i1, $i2, $i3;
        java.util.NoSuchElementException $r1;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.xml.XmlParser$Node$1;

     label1:
        $z0 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node$1: boolean hasNext()>();

        if $z0 == 0 goto label3;

        r2 = r0.<org.eclipse.jetty.xml.XmlParser$Node$1: org.eclipse.jetty.xml.XmlParser$Node _node>;

     label2:
        r0.<org.eclipse.jetty.xml.XmlParser$Node$1: org.eclipse.jetty.xml.XmlParser$Node _node> = null;

        $i0 = r0.<org.eclipse.jetty.xml.XmlParser$Node$1: int c>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jetty.xml.XmlParser$Node$1: int c> = $i1;

        return r2;

     label3:
        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;

     label4:
        $r3 := @caughtexception;

     label5:
        r0.<org.eclipse.jetty.xml.XmlParser$Node$1: org.eclipse.jetty.xml.XmlParser$Node _node> = null;

        $i2 = r0.<org.eclipse.jetty.xml.XmlParser$Node$1: int c>;

        $i3 = $i2 + 1;

        r0.<org.eclipse.jetty.xml.XmlParser$Node$1: int c> = $i3;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label5 with label4;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        org.eclipse.jetty.xml.XmlParser$Node$1 r1;

        r1 := @this: org.eclipse.jetty.xml.XmlParser$Node$1;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Not supported");

        throw $r0;
    }

    public volatile java.lang.Object next()
    {
        org.eclipse.jetty.xml.XmlParser$Node $r1;
        org.eclipse.jetty.xml.XmlParser$Node$1 r0;

        r0 := @this: org.eclipse.jetty.xml.XmlParser$Node$1;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlParser$Node$1: org.eclipse.jetty.xml.XmlParser$Node next()>();

        return $r1;
    }
}
