final class org.joda.time.chrono.BasicDayOfMonthDateTimeField extends org.joda.time.field.PreciseDurationDateTimeField
{
    private static final long serialVersionUID;
    private final org.joda.time.chrono.BasicChronology iChronology;

    void <init>(org.joda.time.chrono.BasicChronology, org.joda.time.DurationField)
    {
        org.joda.time.chrono.BasicDayOfMonthDateTimeField r0;
        org.joda.time.DurationField r2;
        org.joda.time.chrono.BasicChronology r3;
        org.joda.time.DateTimeFieldType $r1;

        r0 := @this: org.joda.time.chrono.BasicDayOfMonthDateTimeField;

        r3 := @parameter0: org.joda.time.chrono.BasicChronology;

        r2 := @parameter1: org.joda.time.DurationField;

        $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfMonth()>();

        specialinvoke r0.<org.joda.time.field.PreciseDurationDateTimeField: void <init>(org.joda.time.DateTimeFieldType,org.joda.time.DurationField)>($r1, r2);

        r0.<org.joda.time.chrono.BasicDayOfMonthDateTimeField: org.joda.time.chrono.BasicChronology iChronology> = r3;

        return;
    }

    public int get(long)
    {
        org.joda.time.chrono.BasicDayOfMonthDateTimeField r0;
        int $i1;
        org.joda.time.chrono.BasicChronology $r1;
        long l0;

        r0 := @this: org.joda.time.chrono.BasicDayOfMonthDateTimeField;

        l0 := @parameter0: long;

        $r1 = r0.<org.joda.time.chrono.BasicDayOfMonthDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $i1 = virtualinvoke $r1.<org.joda.time.chrono.BasicChronology: int getDayOfMonth(long)>(l0);

        return $i1;
    }

    public org.joda.time.DurationField getRangeDurationField()
    {
        org.joda.time.chrono.BasicChronology $r1;
        org.joda.time.chrono.BasicDayOfMonthDateTimeField r0;
        org.joda.time.DurationField $r2;

        r0 := @this: org.joda.time.chrono.BasicDayOfMonthDateTimeField;

        $r1 = r0.<org.joda.time.chrono.BasicDayOfMonthDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $r2 = virtualinvoke $r1.<org.joda.time.chrono.BasicChronology: org.joda.time.DurationField months()>();

        return $r2;
    }

    public int getMinimumValue()
    {
        org.joda.time.chrono.BasicDayOfMonthDateTimeField r0;

        r0 := @this: org.joda.time.chrono.BasicDayOfMonthDateTimeField;

        return 1;
    }

    public int getMaximumValue()
    {
        int $i0;
        org.joda.time.chrono.BasicChronology $r1;
        org.joda.time.chrono.BasicDayOfMonthDateTimeField r0;

        r0 := @this: org.joda.time.chrono.BasicDayOfMonthDateTimeField;

        $r1 = r0.<org.joda.time.chrono.BasicDayOfMonthDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $i0 = virtualinvoke $r1.<org.joda.time.chrono.BasicChronology: int getDaysInMonthMax()>();

        return $i0;
    }

    public int getMaximumValue(long)
    {
        org.joda.time.chrono.BasicDayOfMonthDateTimeField r0;
        int $i1;
        org.joda.time.chrono.BasicChronology $r1;
        long l0;

        r0 := @this: org.joda.time.chrono.BasicDayOfMonthDateTimeField;

        l0 := @parameter0: long;

        $r1 = r0.<org.joda.time.chrono.BasicDayOfMonthDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $i1 = virtualinvoke $r1.<org.joda.time.chrono.BasicChronology: int getDaysInMonthMax(long)>(l0);

        return $i1;
    }

    public int getMaximumValue(org.joda.time.ReadablePartial)
    {
        org.joda.time.chrono.BasicDayOfMonthDateTimeField r2;
        org.joda.time.ReadablePartial r0;
        int $i0, $i1, $i2, $i3, $i4;
        org.joda.time.chrono.BasicChronology $r5, $r7;
        org.joda.time.DateTimeFieldType $r1, $r3, $r4, $r6;
        boolean $z0, $z1;

        r2 := @this: org.joda.time.chrono.BasicDayOfMonthDateTimeField;

        r0 := @parameter0: org.joda.time.ReadablePartial;

        $r1 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType monthOfYear()>();

        $z0 = interfaceinvoke r0.<org.joda.time.ReadablePartial: boolean isSupported(org.joda.time.DateTimeFieldType)>($r1);

        if $z0 == 0 goto label2;

        $r3 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType monthOfYear()>();

        $i1 = interfaceinvoke r0.<org.joda.time.ReadablePartial: int get(org.joda.time.DateTimeFieldType)>($r3);

        $r4 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType year()>();

        $z1 = interfaceinvoke r0.<org.joda.time.ReadablePartial: boolean isSupported(org.joda.time.DateTimeFieldType)>($r4);

        if $z1 == 0 goto label1;

        $r6 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType year()>();

        $i3 = interfaceinvoke r0.<org.joda.time.ReadablePartial: int get(org.joda.time.DateTimeFieldType)>($r6);

        $r7 = r2.<org.joda.time.chrono.BasicDayOfMonthDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $i4 = virtualinvoke $r7.<org.joda.time.chrono.BasicChronology: int getDaysInYearMonth(int,int)>($i3, $i1);

        return $i4;

     label1:
        $r5 = r2.<org.joda.time.chrono.BasicDayOfMonthDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $i2 = virtualinvoke $r5.<org.joda.time.chrono.BasicChronology: int getDaysInMonthMax(int)>($i1);

        return $i2;

     label2:
        $i0 = virtualinvoke r2.<org.joda.time.chrono.BasicDayOfMonthDateTimeField: int getMaximumValue()>();

        return $i0;
    }

    public int getMaximumValue(org.joda.time.ReadablePartial, int[])
    {
        int[] r4;
        int $i0, $i1, i2, $i3, i4, $i5, i6, i7;
        org.joda.time.DateTimeFieldType $r2, $r3, $r6, $r7;
        org.joda.time.chrono.BasicDayOfMonthDateTimeField r1;
        org.joda.time.ReadablePartial r0;
        org.joda.time.chrono.BasicChronology $r5, $r8;

        r1 := @this: org.joda.time.chrono.BasicDayOfMonthDateTimeField;

        r0 := @parameter0: org.joda.time.ReadablePartial;

        r4 := @parameter1: int[];

        $i0 = interfaceinvoke r0.<org.joda.time.ReadablePartial: int size()>();

        i6 = 0;

     label1:
        if i6 >= $i0 goto label6;

        $r2 = interfaceinvoke r0.<org.joda.time.ReadablePartial: org.joda.time.DateTimeFieldType getFieldType(int)>(i6);

        $r3 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType monthOfYear()>();

        if $r2 != $r3 goto label5;

        i2 = r4[i6];

        i7 = 0;

     label2:
        if i7 >= $i0 goto label4;

        $r6 = interfaceinvoke r0.<org.joda.time.ReadablePartial: org.joda.time.DateTimeFieldType getFieldType(int)>(i7);

        $r7 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType year()>();

        if $r6 != $r7 goto label3;

        i4 = r4[i7];

        $r8 = r1.<org.joda.time.chrono.BasicDayOfMonthDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $i5 = virtualinvoke $r8.<org.joda.time.chrono.BasicChronology: int getDaysInYearMonth(int,int)>(i4, i2);

        return $i5;

     label3:
        i7 = i7 + 1;

        goto label2;

     label4:
        $r5 = r1.<org.joda.time.chrono.BasicDayOfMonthDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $i3 = virtualinvoke $r5.<org.joda.time.chrono.BasicChronology: int getDaysInMonthMax(int)>(i2);

        return $i3;

     label5:
        i6 = i6 + 1;

        goto label1;

     label6:
        $i1 = virtualinvoke r1.<org.joda.time.chrono.BasicDayOfMonthDateTimeField: int getMaximumValue()>();

        return $i1;
    }

    protected int getMaximumValueForSet(long, int)
    {
        org.joda.time.chrono.BasicDayOfMonthDateTimeField r0;
        int i1, $i2;
        org.joda.time.chrono.BasicChronology $r1;
        long l0;

        r0 := @this: org.joda.time.chrono.BasicDayOfMonthDateTimeField;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<org.joda.time.chrono.BasicDayOfMonthDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $i2 = virtualinvoke $r1.<org.joda.time.chrono.BasicChronology: int getDaysInMonthMaxForSet(long,int)>(l0, i1);

        return $i2;
    }

    private java.lang.Object readResolve()
    {
        org.joda.time.chrono.BasicChronology $r1;
        org.joda.time.DateTimeField $r2;
        org.joda.time.chrono.BasicDayOfMonthDateTimeField r0;

        r0 := @this: org.joda.time.chrono.BasicDayOfMonthDateTimeField;

        $r1 = r0.<org.joda.time.chrono.BasicDayOfMonthDateTimeField: org.joda.time.chrono.BasicChronology iChronology>;

        $r2 = virtualinvoke $r1.<org.joda.time.chrono.BasicChronology: org.joda.time.DateTimeField dayOfMonth()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <org.joda.time.chrono.BasicDayOfMonthDateTimeField: long serialVersionUID> = -4677223814028011723L;

        return;
    }
}
