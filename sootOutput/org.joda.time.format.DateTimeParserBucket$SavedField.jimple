class org.joda.time.format.DateTimeParserBucket$SavedField extends java.lang.Object implements java.lang.Comparable
{
    final org.joda.time.DateTimeField iField;
    final int iValue;
    final java.lang.String iText;
    final java.util.Locale iLocale;

    void <init>(org.joda.time.DateTimeField, int)
    {
        org.joda.time.format.DateTimeParserBucket$SavedField r0;
        int i0;
        org.joda.time.DateTimeField r1;

        r0 := @this: org.joda.time.format.DateTimeParserBucket$SavedField;

        r1 := @parameter0: org.joda.time.DateTimeField;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.joda.time.format.DateTimeParserBucket$SavedField: org.joda.time.DateTimeField iField> = r1;

        r0.<org.joda.time.format.DateTimeParserBucket$SavedField: int iValue> = i0;

        r0.<org.joda.time.format.DateTimeParserBucket$SavedField: java.lang.String iText> = null;

        r0.<org.joda.time.format.DateTimeParserBucket$SavedField: java.util.Locale iLocale> = null;

        return;
    }

    void <init>(org.joda.time.DateTimeField, java.lang.String, java.util.Locale)
    {
        org.joda.time.format.DateTimeParserBucket$SavedField r0;
        java.util.Locale r3;
        org.joda.time.DateTimeField r1;
        java.lang.String r2;

        r0 := @this: org.joda.time.format.DateTimeParserBucket$SavedField;

        r1 := @parameter0: org.joda.time.DateTimeField;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Locale;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.joda.time.format.DateTimeParserBucket$SavedField: org.joda.time.DateTimeField iField> = r1;

        r0.<org.joda.time.format.DateTimeParserBucket$SavedField: int iValue> = 0;

        r0.<org.joda.time.format.DateTimeParserBucket$SavedField: java.lang.String iText> = r2;

        r0.<org.joda.time.format.DateTimeParserBucket$SavedField: java.util.Locale iLocale> = r3;

        return;
    }

    long set(long, boolean)
    {
        long l1, l2;
        org.joda.time.format.DateTimeParserBucket$SavedField r0;
        java.util.Locale $r2;
        int $i0;
        org.joda.time.DateTimeField $r4, $r5, $r6;
        java.lang.String $r1, $r3;
        boolean z0;

        r0 := @this: org.joda.time.format.DateTimeParserBucket$SavedField;

        l1 := @parameter0: long;

        z0 := @parameter1: boolean;

        $r1 = r0.<org.joda.time.format.DateTimeParserBucket$SavedField: java.lang.String iText>;

        if $r1 != null goto label1;

        $r6 = r0.<org.joda.time.format.DateTimeParserBucket$SavedField: org.joda.time.DateTimeField iField>;

        $i0 = r0.<org.joda.time.format.DateTimeParserBucket$SavedField: int iValue>;

        l2 = virtualinvoke $r6.<org.joda.time.DateTimeField: long set(long,int)>(l1, $i0);

        goto label2;

     label1:
        $r4 = r0.<org.joda.time.format.DateTimeParserBucket$SavedField: org.joda.time.DateTimeField iField>;

        $r3 = r0.<org.joda.time.format.DateTimeParserBucket$SavedField: java.lang.String iText>;

        $r2 = r0.<org.joda.time.format.DateTimeParserBucket$SavedField: java.util.Locale iLocale>;

        l2 = virtualinvoke $r4.<org.joda.time.DateTimeField: long set(long,java.lang.String,java.util.Locale)>(l1, $r3, $r2);

     label2:
        if z0 == 0 goto label3;

        $r5 = r0.<org.joda.time.format.DateTimeParserBucket$SavedField: org.joda.time.DateTimeField iField>;

        l2 = virtualinvoke $r5.<org.joda.time.DateTimeField: long roundFloor(long)>(l2);

     label3:
        return l2;
    }

    public int compareTo(java.lang.Object)
    {
        org.joda.time.DurationField $r5, $r6, $r8, $r9;
        org.joda.time.format.DateTimeParserBucket$SavedField $r1, r3;
        int $i0, $i1;
        java.lang.Object r0;
        org.joda.time.DateTimeField r2, $r4, $r7;

        r3 := @this: org.joda.time.format.DateTimeParserBucket$SavedField;

        r0 := @parameter0: java.lang.Object;

        $r1 = (org.joda.time.format.DateTimeParserBucket$SavedField) r0;

        r2 = $r1.<org.joda.time.format.DateTimeParserBucket$SavedField: org.joda.time.DateTimeField iField>;

        $r4 = r3.<org.joda.time.format.DateTimeParserBucket$SavedField: org.joda.time.DateTimeField iField>;

        $r5 = virtualinvoke $r4.<org.joda.time.DateTimeField: org.joda.time.DurationField getRangeDurationField()>();

        $r6 = virtualinvoke r2.<org.joda.time.DateTimeField: org.joda.time.DurationField getRangeDurationField()>();

        $i0 = specialinvoke r3.<org.joda.time.format.DateTimeParserBucket$SavedField: int compareReverse(org.joda.time.DurationField,org.joda.time.DurationField)>($r5, $r6);

        if $i0 == 0 goto label1;

        return $i0;

     label1:
        $r7 = r3.<org.joda.time.format.DateTimeParserBucket$SavedField: org.joda.time.DateTimeField iField>;

        $r8 = virtualinvoke $r7.<org.joda.time.DateTimeField: org.joda.time.DurationField getDurationField()>();

        $r9 = virtualinvoke r2.<org.joda.time.DateTimeField: org.joda.time.DurationField getDurationField()>();

        $i1 = specialinvoke r3.<org.joda.time.format.DateTimeParserBucket$SavedField: int compareReverse(org.joda.time.DurationField,org.joda.time.DurationField)>($r8, $r9);

        return $i1;
    }

    private int compareReverse(org.joda.time.DurationField, org.joda.time.DurationField)
    {
        org.joda.time.DurationField r0, r1;
        org.joda.time.format.DateTimeParserBucket$SavedField r2;
        int $i0, $i1, $i3;
        boolean $z0, $z1, $z2;

        r2 := @this: org.joda.time.format.DateTimeParserBucket$SavedField;

        r0 := @parameter0: org.joda.time.DurationField;

        r1 := @parameter1: org.joda.time.DurationField;

        if r0 == null goto label1;

        $z1 = virtualinvoke r0.<org.joda.time.DurationField: boolean isSupported()>();

        if $z1 != 0 goto label4;

     label1:
        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<org.joda.time.DurationField: boolean isSupported()>();

        if $z0 != 0 goto label3;

     label2:
        return 0;

     label3:
        $i3 = (int) -1;

        return $i3;

     label4:
        if r1 == null goto label5;

        $z2 = virtualinvoke r1.<org.joda.time.DurationField: boolean isSupported()>();

        if $z2 != 0 goto label6;

     label5:
        return 1;

     label6:
        $i0 = virtualinvoke r0.<org.joda.time.DurationField: int compareTo(java.lang.Object)>(r1);

        $i1 = neg $i0;

        return $i1;
    }
}
