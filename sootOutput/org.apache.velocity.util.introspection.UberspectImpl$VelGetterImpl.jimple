public class org.apache.velocity.util.introspection.UberspectImpl$VelGetterImpl extends java.lang.Object implements org.apache.velocity.util.introspection.VelPropertyGet
{
    final org.apache.velocity.runtime.parser.node.AbstractExecutor getExecutor;

    public void <init>(org.apache.velocity.runtime.parser.node.AbstractExecutor)
    {
        org.apache.velocity.runtime.parser.node.AbstractExecutor r1;
        org.apache.velocity.util.introspection.UberspectImpl$VelGetterImpl r0;

        r0 := @this: org.apache.velocity.util.introspection.UberspectImpl$VelGetterImpl;

        r1 := @parameter0: org.apache.velocity.runtime.parser.node.AbstractExecutor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.velocity.util.introspection.UberspectImpl$VelGetterImpl: org.apache.velocity.runtime.parser.node.AbstractExecutor getExecutor> = r1;

        return;
    }

    private void <init>()
    {
        org.apache.velocity.util.introspection.UberspectImpl$VelGetterImpl r0;

        r0 := @this: org.apache.velocity.util.introspection.UberspectImpl$VelGetterImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.velocity.util.introspection.UberspectImpl$VelGetterImpl: org.apache.velocity.runtime.parser.node.AbstractExecutor getExecutor> = null;

        return;
    }

    public java.lang.Object invoke(java.lang.Object) throws java.lang.Exception
    {
        java.lang.Object r1, $r3;
        org.apache.velocity.runtime.parser.node.AbstractExecutor $r2;
        org.apache.velocity.util.introspection.UberspectImpl$VelGetterImpl r0;

        r0 := @this: org.apache.velocity.util.introspection.UberspectImpl$VelGetterImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.velocity.util.introspection.UberspectImpl$VelGetterImpl: org.apache.velocity.runtime.parser.node.AbstractExecutor getExecutor>;

        $r3 = virtualinvoke $r2.<org.apache.velocity.runtime.parser.node.AbstractExecutor: java.lang.Object execute(java.lang.Object)>(r1);

        return $r3;
    }

    public boolean isCacheable()
    {
        org.apache.velocity.util.introspection.UberspectImpl$VelGetterImpl r0;

        r0 := @this: org.apache.velocity.util.introspection.UberspectImpl$VelGetterImpl;

        return 1;
    }

    public java.lang.String getMethodName()
    {
        org.apache.velocity.runtime.parser.node.AbstractExecutor $r1, $r2;
        java.lang.String $r4;
        org.apache.velocity.util.introspection.UberspectImpl$VelGetterImpl r0;
        java.lang.reflect.Method $r3;
        boolean $z0;

        r0 := @this: org.apache.velocity.util.introspection.UberspectImpl$VelGetterImpl;

        $r1 = r0.<org.apache.velocity.util.introspection.UberspectImpl$VelGetterImpl: org.apache.velocity.runtime.parser.node.AbstractExecutor getExecutor>;

        $z0 = virtualinvoke $r1.<org.apache.velocity.runtime.parser.node.AbstractExecutor: boolean isAlive()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.velocity.util.introspection.UberspectImpl$VelGetterImpl: org.apache.velocity.runtime.parser.node.AbstractExecutor getExecutor>;

        $r3 = virtualinvoke $r2.<org.apache.velocity.runtime.parser.node.AbstractExecutor: java.lang.reflect.Method getMethod()>();

        $r4 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.String getName()>();

        goto label2;

     label1:
        $r4 = null;

     label2:
        return $r4;
    }
}
