public class ucar.nc2.dt.point.UnidataStationObsMultidimDataset extends ucar.nc2.dt.point.StationObsDatasetImpl implements ucar.nc2.dt.TypedDatasetFactoryIF
{
    private static org.slf4j.Logger log;
    private ucar.nc2.Dimension stationDim;
    private ucar.nc2.Dimension obsDim;
    private ucar.nc2.Variable latVar;
    private ucar.nc2.Variable lonVar;
    private ucar.nc2.Variable altVar;
    private ucar.nc2.Variable timeVar;
    private ucar.nc2.Variable timeNominalVar;
    private ucar.nc2.Variable stationIdVar;
    private ucar.nc2.Variable stationDescVar;
    private ucar.nc2.Variable numStationsVar;
    private ucar.ma2.StructureMembers structureMembers;

    public static boolean isValidFile(ucar.nc2.NetcdfFile)
    {
        java.util.StringTokenizer $r5;
        ucar.nc2.Variable $r7;
        java.lang.String $r1, $r3, $r4, $r8, $r9, $r10, $r12;
        ucar.nc2.constants.FeatureType $r2, $r11;
        boolean $z0, $z1, $z2, $z3, z4;
        ucar.nc2.Dimension $r6;
        ucar.nc2.NetcdfFile r0;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        $r1 = virtualinvoke r0.<ucar.nc2.NetcdfFile: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "cdm_data_type", "");

        $r2 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType STATION>;

        $r3 = virtualinvoke $r2.<ucar.nc2.constants.FeatureType: java.lang.String toString()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z0 != 0 goto label1;

        $r10 = virtualinvoke r0.<ucar.nc2.NetcdfFile: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "cdm_datatype", "");

        $r11 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType STATION>;

        $r12 = virtualinvoke $r11.<ucar.nc2.constants.FeatureType: java.lang.String toString()>();

        $z3 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r12);

        if $z3 != 0 goto label1;

        return 0;

     label1:
        $r4 = virtualinvoke r0.<ucar.nc2.NetcdfFile: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "Conventions", null);

        if $r4 != null goto label2;

        return 0;

     label2:
        z4 = 0;

        $r5 = new java.util.StringTokenizer;

        specialinvoke $r5.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r4, ",");

     label3:
        $z1 = virtualinvoke $r5.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label5;

        $r8 = virtualinvoke $r5.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Unidata Observation Dataset v1.0");

        if $z2 == 0 goto label4;

        z4 = 1;

     label4:
        goto label3;

     label5:
        if z4 != 0 goto label6;

        return 0;

     label6:
        $r6 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Dimension findDimension(ucar.nc2.NetcdfFile,java.lang.String)>(r0, "station");

        if null != $r6 goto label7;

        return 0;

     label7:
        $r7 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,java.lang.String)>(r0, "parent_index");

        if $r7 == null goto label8;

        return 0;

     label8:
        return 1;
    }

    public boolean isMine(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dt.point.UnidataStationObsMultidimDataset r1;
        ucar.nc2.dataset.NetcdfDataset r0;
        boolean $z0;

        r1 := @this: ucar.nc2.dt.point.UnidataStationObsMultidimDataset;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $z0 = staticinvoke <ucar.nc2.dt.point.UnidataStationObsMultidimDataset: boolean isValidFile(ucar.nc2.NetcdfFile)>(r0);

        return $z0;
    }

    public ucar.nc2.dt.TypedDataset open(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.util.CancelTask, java.lang.StringBuilder) throws java.io.IOException
    {
        ucar.nc2.util.CancelTask r3;
        ucar.nc2.dt.point.UnidataStationObsMultidimDataset $r0, r2;
        java.lang.StringBuilder r4;
        ucar.nc2.dataset.NetcdfDataset r1;

        r2 := @this: ucar.nc2.dt.point.UnidataStationObsMultidimDataset;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r3 := @parameter1: ucar.nc2.util.CancelTask;

        r4 := @parameter2: java.lang.StringBuilder;

        $r0 = new ucar.nc2.dt.point.UnidataStationObsMultidimDataset;

        specialinvoke $r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: void <init>(ucar.nc2.dataset.NetcdfDataset)>(r1);

        return $r0;
    }

    public void <init>()
    {
        ucar.nc2.dt.point.UnidataStationObsMultidimDataset r0;

        r0 := @this: ucar.nc2.dt.point.UnidataStationObsMultidimDataset;

        specialinvoke r0.<ucar.nc2.dt.point.StationObsDatasetImpl: void <init>()>();

        return;
    }

    public void <init>(ucar.nc2.dataset.NetcdfDataset) throws java.io.IOException
    {
        ucar.nc2.constants.AxisType $r6, $r8, $r10, $r12;
        ucar.ma2.StructureMembers $r37, $r55;
        java.lang.String $r45, $r46, $r56, $r57, $r58;
        ucar.unidata.geoloc.LatLonRect $r43, $r44;
        ucar.nc2.Dimension $r2, $r3, $r4, $r5, $r19, $r20, $r22, $r23, $r25, $r26, $r34, $r35, $r49, $r50, $r51, $r52, $r61, $r62, $r67, $r68, $r71, $r72, $r81;
        ucar.nc2.dataset.NetcdfDataset r1, $r38;
        java.lang.IllegalStateException $r63, $r64, $r65, $r69, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80;
        java.util.Date $r41, $r42;
        int[] $r54;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        ucar.ma2.DataType $r59;
        java.util.List $r39, $r53;
        ucar.nc2.dt.point.UnidataStationObsMultidimDataset r0;
        int $i0;
        ucar.nc2.Variable $r7, $r9, $r11, $r13, $r14, $r15, $r16, $r17, $r18, $r21, $r24, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r36, r48, $r60, $r66, $r70;
        java.util.Iterator $r40;
        java.lang.Object $r47;

        r0 := @this: ucar.nc2.dt.point.UnidataStationObsMultidimDataset;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        specialinvoke r0.<ucar.nc2.dt.point.StationObsDatasetImpl: void <init>(ucar.nc2.dataset.NetcdfDataset)>(r1);

        $r2 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Dimension findDimension(ucar.nc2.NetcdfFile,java.lang.String)>(r1, "station");

        r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Dimension stationDim> = $r2;

        $r3 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Dimension findDimension(ucar.nc2.NetcdfFile,java.lang.String)>(r1, "observation");

        r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Dimension obsDim> = $r3;

        $r4 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Dimension obsDim>;

        if $r4 != null goto label01;

        $r81 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension getUnlimitedDimension()>();

        r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Dimension obsDim> = $r81;

     label01:
        $r5 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Dimension obsDim>;

        if $r5 != null goto label02;

        $r80 = new java.lang.IllegalStateException;

        specialinvoke $r80.<java.lang.IllegalStateException: void <init>(java.lang.String)>("must specify the observation dimension or use unlimited dimension");

        throw $r80;

     label02:
        $r6 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r7 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable getCoordinate(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r1, $r6);

        r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable latVar> = $r7;

        $r8 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        $r9 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable getCoordinate(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r1, $r8);

        r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable lonVar> = $r9;

        $r10 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        $r11 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable getCoordinate(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r1, $r10);

        r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable altVar> = $r11;

        $r12 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r13 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable getCoordinate(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r1, $r12);

        r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable timeVar> = $r13;

        $r14 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,java.lang.String)>(r1, "time_nominal");

        r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable timeNominalVar> = $r14;

        $r15 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable latVar>;

        if $r15 != null goto label03;

        $r79 = new java.lang.IllegalStateException;

        specialinvoke $r79.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Missing latitude variable");

        throw $r79;

     label03:
        $r16 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable lonVar>;

        if $r16 != null goto label04;

        $r78 = new java.lang.IllegalStateException;

        specialinvoke $r78.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Missing longitude coordinate variable");

        throw $r78;

     label04:
        $r17 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable timeVar>;

        if $r17 != null goto label05;

        $r77 = new java.lang.IllegalStateException;

        specialinvoke $r77.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Missing time coordinate variable");

        throw $r77;

     label05:
        $r18 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable latVar>;

        $r19 = virtualinvoke $r18.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $r20 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Dimension stationDim>;

        $z0 = virtualinvoke $r19.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r20);

        if $z0 != 0 goto label06;

        $r76 = new java.lang.IllegalStateException;

        specialinvoke $r76.<java.lang.IllegalStateException: void <init>(java.lang.String)>("latitude variable must use the station dimension");

        throw $r76;

     label06:
        $r21 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable lonVar>;

        $r22 = virtualinvoke $r21.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $r23 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Dimension stationDim>;

        $z1 = virtualinvoke $r22.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r23);

        if $z1 != 0 goto label07;

        $r75 = new java.lang.IllegalStateException;

        specialinvoke $r75.<java.lang.IllegalStateException: void <init>(java.lang.String)>("longitude variable must use the station dimension");

        throw $r75;

     label07:
        $r24 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable timeVar>;

        $r25 = virtualinvoke $r24.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $r26 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Dimension stationDim>;

        $z2 = virtualinvoke $r25.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r26);

        if $z2 != 0 goto label08;

        $r74 = new java.lang.IllegalStateException;

        specialinvoke $r74.<java.lang.IllegalStateException: void <init>(java.lang.String)>("time variable must use the station dimension");

        throw $r74;

     label08:
        $r27 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable altVar>;

        if $r27 == null goto label09;

        $r70 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable altVar>;

        $r71 = virtualinvoke $r70.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $r72 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Dimension stationDim>;

        $z8 = virtualinvoke $r71.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r72);

        if $z8 != 0 goto label09;

        $r73 = new java.lang.IllegalStateException;

        specialinvoke $r73.<java.lang.IllegalStateException: void <init>(java.lang.String)>("altitude variable must use the station dimension");

        throw $r73;

     label09:
        $r28 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable timeNominalVar>;

        if $r28 == null goto label10;

        $r66 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable timeNominalVar>;

        $r67 = virtualinvoke $r66.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $r68 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Dimension stationDim>;

        $z7 = virtualinvoke $r67.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r68);

        if $z7 != 0 goto label10;

        $r69 = new java.lang.IllegalStateException;

        specialinvoke $r69.<java.lang.IllegalStateException: void <init>(java.lang.String)>("timeNominal variable must use the station dimension");

        throw $r69;

     label10:
        $r29 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,java.lang.String)>(r1, "station_id");

        r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable stationIdVar> = $r29;

        $r30 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,java.lang.String)>(r1, "station_description");

        r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable stationDescVar> = $r30;

        $r31 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,java.lang.String)>(r1, "number_stations");

        r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable numStationsVar> = $r31;

        $r32 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable stationIdVar>;

        if $r32 != null goto label11;

        $r65 = new java.lang.IllegalStateException;

        specialinvoke $r65.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Missing station id variable");

        throw $r65;

     label11:
        $r33 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable stationIdVar>;

        $r34 = virtualinvoke $r33.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $r35 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Dimension stationDim>;

        $z3 = virtualinvoke $r34.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r35);

        if $z3 != 0 goto label12;

        $r64 = new java.lang.IllegalStateException;

        specialinvoke $r64.<java.lang.IllegalStateException: void <init>(java.lang.String)>("stationId variable must use the station dimension");

        throw $r64;

     label12:
        $r36 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable stationDescVar>;

        if $r36 == null goto label13;

        $r60 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable stationDescVar>;

        $r61 = virtualinvoke $r60.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $r62 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Dimension stationDim>;

        $z6 = virtualinvoke $r61.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r62);

        if $z6 != 0 goto label13;

        $r63 = new java.lang.IllegalStateException;

        specialinvoke $r63.<java.lang.IllegalStateException: void <init>(java.lang.String)>("stationDesc variable must use the station dimension");

        throw $r63;

     label13:
        $r37 = new ucar.ma2.StructureMembers;

        specialinvoke $r37.<ucar.ma2.StructureMembers: void <init>(java.lang.String)>("UnidataStationObsMultidimDataset_obsStructure");

        r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.ma2.StructureMembers structureMembers> = $r37;

        $r38 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.dataset.NetcdfDataset ncfile>;

        $r39 = virtualinvoke $r38.<ucar.nc2.dataset.NetcdfDataset: java.util.List getVariables()>();

        $r40 = interfaceinvoke $r39.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $z9 = interfaceinvoke $r40.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label17;

        $r47 = interfaceinvoke $r40.<java.util.Iterator: java.lang.Object next()>();

        r48 = (ucar.nc2.Variable) $r47;

        $i0 = virtualinvoke r48.<ucar.nc2.Variable: int getRank()>();

        if $i0 >= 2 goto label15;

        goto label14;

     label15:
        $r49 = virtualinvoke r48.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(0);

        $r50 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Dimension stationDim>;

        $z4 = virtualinvoke $r49.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r50);

        if $z4 == 0 goto label16;

        $r51 = virtualinvoke r48.<ucar.nc2.Variable: ucar.nc2.Dimension getDimension(int)>(1);

        $r52 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Dimension obsDim>;

        $z5 = virtualinvoke $r51.<ucar.nc2.Dimension: boolean equals(java.lang.Object)>($r52);

        if $z5 == 0 goto label16;

        $r53 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: java.util.List dataVariables>;

        interfaceinvoke $r53.<java.util.List: boolean add(java.lang.Object)>(r48);

        $r54 = virtualinvoke r48.<ucar.nc2.Variable: int[] getShape()>();

        $r54[0] = 1;

        $r54[1] = 1;

        $r55 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.ma2.StructureMembers structureMembers>;

        $r56 = virtualinvoke r48.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $r57 = virtualinvoke r48.<ucar.nc2.Variable: java.lang.String getDescription()>();

        $r58 = virtualinvoke r48.<ucar.nc2.Variable: java.lang.String getUnitsString()>();

        $r59 = virtualinvoke r48.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        virtualinvoke $r55.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member addMember(java.lang.String,java.lang.String,java.lang.String,ucar.ma2.DataType,int[])>($r56, $r57, $r58, $r59, $r54);

     label16:
        goto label14;

     label17:
        specialinvoke r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: void readStations()>();

        $r41 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: java.util.Date getStartDate(ucar.nc2.dataset.NetcdfDataset)>(r1);

        r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: java.util.Date startDate> = $r41;

        $r42 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: java.util.Date getEndDate(ucar.nc2.dataset.NetcdfDataset)>(r1);

        r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: java.util.Date endDate> = $r42;

        $r43 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.unidata.geoloc.LatLonRect getBoundingBox(ucar.nc2.dataset.NetcdfDataset)>(r1);

        r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.unidata.geoloc.LatLonRect boundingBox> = $r43;

        $r44 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.unidata.geoloc.LatLonRect boundingBox>;

        if null != $r44 goto label18;

        virtualinvoke r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: void setBoundingBox()>();

     label18:
        virtualinvoke r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: void setTimeUnits()>();

        $r45 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "title", "");

        r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: java.lang.String title> = $r45;

        $r46 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "description", "");

        r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: java.lang.String desc> = $r46;

        return;
    }

    private void readStations() throws java.io.IOException
    {
        ucar.nc2.dt.point.UnidataStationObsMultidimDataset$MStationImpl $r15;
        boolean $z0;
        java.util.List $r17;
        ucar.nc2.dt.point.UnidataStationObsMultidimDataset r0;
        float $f0, $f1, $f2;
        ucar.ma2.ArrayChar $r21, r28;
        int $i0, i1, i2;
        ucar.nc2.Variable $r1, $r3, $r4, $r6, $r8, $r10, $r14, $r23, $r24, $r25, $r26, $r34;
        java.lang.String $r18, $r19, $r22, r30, $r31, r32, $r33;
        double $d0, $d1, $d2;
        ucar.ma2.Array $r2, $r5, $r7, r9, $r27, $r29;
        ucar.ma2.Index $r12;
        ucar.nc2.Dimension $r11, $r16;
        java.lang.Object $r13, $r20;

        r0 := @this: ucar.nc2.dt.point.UnidataStationObsMultidimDataset;

        $r1 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable stationIdVar>;

        $r2 = virtualinvoke $r1.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        r28 = null;

        $r3 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable stationDescVar>;

        if $r3 == null goto label01;

        $r26 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable stationDescVar>;

        $r27 = virtualinvoke $r26.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        r28 = (ucar.ma2.ArrayChar) $r27;

     label01:
        $r4 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable latVar>;

        $r5 = specialinvoke r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.ma2.Array readStationVariable(ucar.nc2.Variable)>($r4);

        $r6 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable lonVar>;

        $r7 = specialinvoke r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.ma2.Array readStationVariable(ucar.nc2.Variable)>($r6);

        $r8 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable altVar>;

        if $r8 == null goto label02;

        $r25 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable altVar>;

        $r29 = specialinvoke r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.ma2.Array readStationVariable(ucar.nc2.Variable)>($r25);

        goto label03;

     label02:
        $r29 = null;

     label03:
        r9 = $r29;

        $r10 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable numStationsVar>;

        if $r10 == null goto label04;

        $r24 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable numStationsVar>;

        i1 = virtualinvoke $r24.<ucar.nc2.Variable: int readScalarInt()>();

        goto label05;

     label04:
        $r11 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Dimension stationDim>;

        i1 = virtualinvoke $r11.<ucar.nc2.Dimension: int getLength()>();

     label05:
        $r12 = virtualinvoke $r2.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        i2 = 0;

     label06:
        if i2 >= i1 goto label15;

        virtualinvoke $r12.<ucar.ma2.Index: ucar.ma2.Index set(int)>(i2);

        $z0 = $r2 instanceof ucar.ma2.ArrayChar;

        if $z0 == 0 goto label09;

        $r21 = (ucar.ma2.ArrayChar) $r2;

        $r22 = virtualinvoke $r21.<ucar.ma2.ArrayChar: java.lang.String getString(int)>(i2);

        r30 = virtualinvoke $r22.<java.lang.String: java.lang.String trim()>();

        $r23 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable stationDescVar>;

        if $r23 == null goto label07;

        $r31 = virtualinvoke r28.<ucar.ma2.ArrayChar: java.lang.String getString(int)>(i2);

        goto label08;

     label07:
        $r31 = null;

     label08:
        r32 = $r31;

        if $r31 == null goto label12;

        r32 = virtualinvoke $r31.<java.lang.String: java.lang.String trim()>();

        goto label12;

     label09:
        $r13 = virtualinvoke $r2.<ucar.ma2.Array: java.lang.Object getObject(ucar.ma2.Index)>($r12);

        r30 = virtualinvoke $r13.<java.lang.Object: java.lang.String toString()>();

        $r14 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable stationDescVar>;

        if $r14 == null goto label10;

        $r20 = virtualinvoke r28.<ucar.ma2.ArrayChar: java.lang.Object getObject(ucar.ma2.Index)>($r12);

        $r33 = (java.lang.String) $r20;

        goto label11;

     label10:
        $r33 = null;

     label11:
        r32 = $r33;

     label12:
        $r15 = new ucar.nc2.dt.point.UnidataStationObsMultidimDataset$MStationImpl;

        $r18 = r30;

        $r19 = r32;

        $f1 = virtualinvoke $r5.<ucar.ma2.Array: float getFloat(ucar.ma2.Index)>($r12);

        $d0 = (double) $f1;

        $f2 = virtualinvoke $r7.<ucar.ma2.Array: float getFloat(ucar.ma2.Index)>($r12);

        $d1 = (double) $f2;

        $r34 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable altVar>;

        if $r34 == null goto label13;

        $f0 = virtualinvoke r9.<ucar.ma2.Array: float getFloat(ucar.ma2.Index)>($r12);

        $d2 = (double) $f0;

        goto label14;

     label13:
        $d2 = #NaN;

     label14:
        $r16 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Dimension obsDim>;

        $i0 = virtualinvoke $r16.<ucar.nc2.Dimension: int getLength()>();

        specialinvoke $r15.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset$MStationImpl: void <init>(ucar.nc2.dt.point.UnidataStationObsMultidimDataset,java.lang.String,java.lang.String,double,double,double,int,int,ucar.nc2.dt.point.UnidataStationObsMultidimDataset$1)>(r0, $r18, $r19, $d0, $d1, $d2, i2, $i0, null);

        $r17 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: java.util.List stations>;

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r15);

        i2 = i2 + 1;

        goto label06;

     label15:
        return;
    }

    private ucar.ma2.Array readStationVariable(ucar.nc2.Variable) throws java.io.IOException
    {
        java.lang.IllegalStateException $r1, $r8;
        ucar.ma2.Array $r4, $r5, $r6;
        ucar.ma2.InvalidRangeException $r7;
        ucar.nc2.dt.point.UnidataStationObsMultidimDataset r10;
        int[] $r2, $r3;
        int $i0, $i1;
        ucar.nc2.Variable r0;
        java.lang.String $r9;

        r10 := @this: ucar.nc2.dt.point.UnidataStationObsMultidimDataset;

        r0 := @parameter0: ucar.nc2.Variable;

        $i0 = virtualinvoke r0.<ucar.nc2.Variable: int getRank()>();

        if $i0 != 1 goto label1;

        $r6 = virtualinvoke r0.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        return $r6;

     label1:
        $i1 = virtualinvoke r0.<ucar.nc2.Variable: int getRank()>();

        if $i1 != 2 goto label5;

        $r2 = virtualinvoke r0.<ucar.nc2.Variable: int[] getShape()>();

        $r2[1] = 1;

     label2:
        $r3 = newarray (int)[2];

        $r4 = virtualinvoke r0.<ucar.nc2.Variable: ucar.ma2.Array read(int[],int[])>($r3, $r2);

        $r5 = virtualinvoke $r4.<ucar.ma2.Array: ucar.ma2.Array reduce(int)>(1);

     label3:
        return $r5;

     label4:
        $r7 := @caughtexception;

        $r8 = new java.lang.IllegalStateException;

        $r9 = virtualinvoke $r7.<ucar.ma2.InvalidRangeException: java.lang.String getMessage()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label5:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Station variables must have rank 1 or 2");

        throw $r1;

        catch ucar.ma2.InvalidRangeException from label2 to label3 with label4;
    }

    protected void setTimeUnits()
    {
        ucar.nc2.units.DateUnit $r4, $r13;
        java.lang.Exception $r5, $r6;
        ucar.nc2.dt.point.UnidataStationObsMultidimDataset r0;
        java.lang.StringBuffer $r7, $r8, $r9, $r10, $r12;
        ucar.nc2.Variable $r1;
        java.lang.String $r3, $r11;
        ucar.nc2.dataset.NetcdfDataset $r2;

        r0 := @this: ucar.nc2.dt.point.UnidataStationObsMultidimDataset;

        $r2 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.dataset.NetcdfDataset ncfile>;

        $r1 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable timeVar>;

        $r3 = virtualinvoke $r2.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>($r1, "units", "seconds since 1970-01-01");

     label1:
        $r4 = new ucar.nc2.units.DateUnit;

        specialinvoke $r4.<ucar.nc2.units.DateUnit: void <init>(java.lang.String)>($r3);

        r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.units.DateUnit timeUnit> = $r4;

     label2:
        goto label7;

     label3:
        $r6 := @caughtexception;

        $r7 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: java.lang.StringBuffer parseInfo>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error on units = ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" == ");

        $r11 = virtualinvoke $r6.<java.lang.Exception: java.lang.String getMessage()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

     label4:
        $r13 = new ucar.nc2.units.DateUnit;

        specialinvoke $r13.<ucar.nc2.units.DateUnit: void <init>(java.lang.String)>("seconds since 1970-01-01");

        r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.units.DateUnit timeUnit> = $r13;

     label5:
        goto label7;

     label6:
        $r5 := @caughtexception;

     label7:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    protected void setStartDate()
    {
        ucar.nc2.dt.point.UnidataStationObsMultidimDataset r0;

        r0 := @this: ucar.nc2.dt.point.UnidataStationObsMultidimDataset;

        return;
    }

    protected void setEndDate()
    {
        ucar.nc2.dt.point.UnidataStationObsMultidimDataset r0;

        r0 := @this: ucar.nc2.dt.point.UnidataStationObsMultidimDataset;

        return;
    }

    protected void setBoundingBox()
    {
        ucar.unidata.geoloc.LatLonRect $r2;
        ucar.nc2.dt.point.StationDatasetHelper $r1;
        ucar.nc2.dt.point.UnidataStationObsMultidimDataset r0;

        r0 := @this: ucar.nc2.dt.point.UnidataStationObsMultidimDataset;

        $r1 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.dt.point.StationDatasetHelper stationHelper>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dt.point.StationDatasetHelper: ucar.unidata.geoloc.LatLonRect getBoundingBox()>();

        r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.unidata.geoloc.LatLonRect boundingBox> = $r2;

        return;
    }

    public java.util.List getData(ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.util.Iterator $r3;
        ucar.unidata.geoloc.Station r5;
        java.util.ArrayList $r0;
        ucar.nc2.dt.point.UnidataStationObsMultidimDataset$MStationImpl r6;
        java.util.List $r2, $r7;
        ucar.nc2.util.CancelTask r8;
        ucar.nc2.dt.point.UnidataStationObsMultidimDataset r1;
        java.lang.Object $r4;
        boolean $z0, $z1;

        r1 := @this: ucar.nc2.dt.point.UnidataStationObsMultidimDataset;

        r8 := @parameter0: ucar.nc2.util.CancelTask;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = virtualinvoke r1.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: java.util.List getStations()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (ucar.unidata.geoloc.Station) $r4;

        r6 = (ucar.nc2.dt.point.UnidataStationObsMultidimDataset$MStationImpl) r5;

        $r7 = virtualinvoke r6.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset$MStationImpl: java.util.List readObservations()>();

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r7);

        if r8 == null goto label2;

        $z1 = interfaceinvoke r8.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z1 == 0 goto label2;

        return null;

     label2:
        goto label1;

     label3:
        return $r0;
    }

    public int getDataCount()
    {
        ucar.nc2.dt.point.UnidataStationObsMultidimDataset r0;
        int $i0, $i1, $i2;
        ucar.nc2.Dimension $r1, $r2;

        r0 := @this: ucar.nc2.dt.point.UnidataStationObsMultidimDataset;

        $r1 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Dimension stationDim>;

        $i0 = virtualinvoke $r1.<ucar.nc2.Dimension: int getLength()>();

        $r2 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Dimension obsDim>;

        $i1 = virtualinvoke $r2.<ucar.nc2.Dimension: int getLength()>();

        $i2 = $i0 * $i1;

        return $i2;
    }

    public java.util.List getData(ucar.unidata.geoloc.Station, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.util.List $r2;
        ucar.nc2.util.CancelTask r4;
        ucar.nc2.dt.point.UnidataStationObsMultidimDataset r3;
        ucar.unidata.geoloc.Station r0;
        ucar.nc2.dt.point.UnidataStationObsMultidimDataset$MStationImpl $r1;

        r3 := @this: ucar.nc2.dt.point.UnidataStationObsMultidimDataset;

        r0 := @parameter0: ucar.unidata.geoloc.Station;

        r4 := @parameter1: ucar.nc2.util.CancelTask;

        $r1 = (ucar.nc2.dt.point.UnidataStationObsMultidimDataset$MStationImpl) r0;

        $r2 = virtualinvoke $r1.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset$MStationImpl: java.util.List getObservations()>();

        return $r2;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.io.PrintStream $r5;
        java.lang.String[] r10;
        ucar.nc2.dt.point.UnidataStationObsDataset $r12;
        java.lang.StringBuffer $r13;
        int $i1;
        java.lang.StringBuilder $r6, $r8, $r14;
        java.lang.String $r7, $r9;
        ucar.nc2.dataset.NetcdfDataset $r2, $r11;

        r10 := @parameter0: java.lang.String[];

        $r11 = new ucar.nc2.dataset.NetcdfDataset;

        specialinvoke $r11.<ucar.nc2.dataset.NetcdfDataset: void <init>()>();

        $r12 = new ucar.nc2.dt.point.UnidataStationObsDataset;

        $r2 = staticinvoke <ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.NetcdfDataset openDataset(java.lang.String)>("C:/data/199707010000.LAKEOUT_DOMAIN2");

        specialinvoke $r12.<ucar.nc2.dt.point.UnidataStationObsDataset: void <init>(ucar.nc2.dataset.NetcdfDataset)>($r2);

        $r13 = new java.lang.StringBuffer;

        $i1 = (int) 50000;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>(int)>($i1);

        virtualinvoke $r12.<ucar.nc2.dt.point.UnidataStationObsDataset: void checkLinks(java.lang.StringBuffer)>($r13);

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\n");

        $r7 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r9);

        staticinvoke <ucar.nc2.dataset.NetcdfDataset: void shutdown()>();

        return;
    }

    private ucar.ma2.Array readData(ucar.nc2.Variable, int, int) throws java.io.IOException
    {
        java.lang.IllegalStateException $r5;
        ucar.ma2.Array $r3;
        ucar.ma2.InvalidRangeException $r4;
        ucar.nc2.dt.point.UnidataStationObsMultidimDataset r7;
        int[] $r1, r2;
        int $i0, i1, i2;
        ucar.nc2.Variable r0;
        java.lang.String $r6;

        r7 := @this: ucar.nc2.dt.point.UnidataStationObsMultidimDataset;

        r0 := @parameter0: ucar.nc2.Variable;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = virtualinvoke r0.<ucar.nc2.Variable: int[] getShape()>();

        $i0 = virtualinvoke r0.<ucar.nc2.Variable: int getRank()>();

        r2 = newarray (int)[$i0];

        r2[0] = i1;

        r2[1] = i2;

        $r1[0] = 1;

        $r1[1] = 1;

     label1:
        $r3 = virtualinvoke r0.<ucar.nc2.Variable: ucar.ma2.Array read(int[],int[])>(r2, $r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke $r4.<ucar.ma2.InvalidRangeException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label4:
        return $r3;

        catch ucar.ma2.InvalidRangeException from label1 to label2 with label3;
    }

    public ucar.nc2.dt.DataIterator getDataIterator(ucar.unidata.geoloc.Station)
    {
        ucar.nc2.dt.point.UnidataStationObsMultidimDataset r3;
        ucar.unidata.geoloc.Station r0;
        ucar.nc2.dt.point.UnidataStationObsMultidimDataset$MStationImpl $r1;
        ucar.nc2.dt.DataIterator $r2;

        r3 := @this: ucar.nc2.dt.point.UnidataStationObsMultidimDataset;

        r0 := @parameter0: ucar.unidata.geoloc.Station;

        $r1 = (ucar.nc2.dt.point.UnidataStationObsMultidimDataset$MStationImpl) r0;

        $r2 = virtualinvoke $r1.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset$MStationImpl: ucar.nc2.dt.DataIterator iterator()>();

        return $r2;
    }

    public ucar.nc2.dt.DataIterator getDataIterator(ucar.unidata.geoloc.Station, java.util.Date, java.util.Date)
    {
        ucar.nc2.dt.point.UnidataStationObsMultidimDataset r5;
        java.util.Date r1, r2;
        ucar.unidata.geoloc.Station r0;
        ucar.nc2.dt.point.UnidataStationObsMultidimDataset$MStationImpl $r3;
        ucar.nc2.dt.DataIterator $r4;

        r5 := @this: ucar.nc2.dt.point.UnidataStationObsMultidimDataset;

        r0 := @parameter0: ucar.unidata.geoloc.Station;

        r1 := @parameter1: java.util.Date;

        r2 := @parameter2: java.util.Date;

        $r3 = (ucar.nc2.dt.point.UnidataStationObsMultidimDataset$MStationImpl) r0;

        $r4 = virtualinvoke $r3.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset$MStationImpl: ucar.nc2.dt.DataIterator iterator(java.util.Date,java.util.Date)>(r1, r2);

        return $r4;
    }

    public ucar.nc2.dt.DataIterator getDataIterator(int) throws java.io.IOException
    {
        java.util.List $r2;
        ucar.nc2.dt.point.UnidataStationObsMultidimDataset r1;
        java.util.Iterator $r3;
        int i0;
        ucar.nc2.dt.DataIteratorAdapter $r0;

        r1 := @this: ucar.nc2.dt.point.UnidataStationObsMultidimDataset;

        i0 := @parameter0: int;

        $r0 = new ucar.nc2.dt.DataIteratorAdapter;

        $r2 = virtualinvoke r1.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: java.util.List getData()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        specialinvoke $r0.<ucar.nc2.dt.DataIteratorAdapter: void <init>(java.util.Iterator)>($r3);

        return $r0;
    }

    static java.util.List access$200(ucar.nc2.dt.point.UnidataStationObsMultidimDataset)
    {
        java.util.List $r1;
        ucar.nc2.dt.point.UnidataStationObsMultidimDataset r0;

        r0 := @parameter0: ucar.nc2.dt.point.UnidataStationObsMultidimDataset;

        $r1 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: java.util.List dataVariables>;

        return $r1;
    }

    static ucar.ma2.StructureMembers access$300(ucar.nc2.dt.point.UnidataStationObsMultidimDataset)
    {
        ucar.ma2.StructureMembers $r1;
        ucar.nc2.dt.point.UnidataStationObsMultidimDataset r0;

        r0 := @parameter0: ucar.nc2.dt.point.UnidataStationObsMultidimDataset;

        $r1 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.ma2.StructureMembers structureMembers>;

        return $r1;
    }

    static ucar.nc2.Variable access$400(ucar.nc2.dt.point.UnidataStationObsMultidimDataset)
    {
        ucar.nc2.Variable $r1;
        ucar.nc2.dt.point.UnidataStationObsMultidimDataset r0;

        r0 := @parameter0: ucar.nc2.dt.point.UnidataStationObsMultidimDataset;

        $r1 = r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.nc2.Variable timeVar>;

        return $r1;
    }

    static ucar.ma2.Array access$500(ucar.nc2.dt.point.UnidataStationObsMultidimDataset, ucar.nc2.Variable, int, int) throws java.io.IOException
    {
        ucar.nc2.dt.point.UnidataStationObsMultidimDataset r0;
        int i0, i1;
        ucar.nc2.Variable r1;
        ucar.ma2.Array $r2;

        r0 := @parameter0: ucar.nc2.dt.point.UnidataStationObsMultidimDataset;

        r1 := @parameter1: ucar.nc2.Variable;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r2 = specialinvoke r0.<ucar.nc2.dt.point.UnidataStationObsMultidimDataset: ucar.ma2.Array readData(ucar.nc2.Variable,int,int)>(r1, i0, i1);

        return $r2;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/dt/point/UnidataStationObsMultidimDataset;");

        <ucar.nc2.dt.point.UnidataStationObsMultidimDataset: org.slf4j.Logger log> = $r0;

        return;
    }
}
