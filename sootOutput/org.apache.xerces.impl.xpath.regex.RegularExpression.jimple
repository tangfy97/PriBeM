public class org.apache.xerces.impl.xpath.regex.RegularExpression extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    static final boolean DEBUG;
    java.lang.String regex;
    int options;
    int nofparen;
    org.apache.xerces.impl.xpath.regex.Token tokentree;
    boolean hasBackReferences;
    transient int minlength;
    transient org.apache.xerces.impl.xpath.regex.Op operations;
    transient int numberOfClosures;
    transient org.apache.xerces.impl.xpath.regex.RegularExpression$Context context;
    transient org.apache.xerces.impl.xpath.regex.RangeToken firstChar;
    transient java.lang.String fixedString;
    transient int fixedStringOptions;
    transient org.apache.xerces.impl.xpath.regex.BMPattern fixedStringTable;
    transient boolean fixedStringOnly;
    static final int IGNORE_CASE;
    static final int SINGLE_LINE;
    static final int MULTIPLE_LINES;
    static final int EXTENDED_COMMENT;
    static final int USE_UNICODE_CATEGORY;
    static final int UNICODE_WORD_BOUNDARY;
    static final int PROHIBIT_HEAD_CHARACTER_OPTIMIZATION;
    static final int PROHIBIT_FIXED_STRING_OPTIMIZATION;
    static final int XMLSCHEMA_MODE;
    static final int SPECIAL_COMMA;
    private static final int WT_IGNORE;
    private static final int WT_LETTER;
    private static final int WT_OTHER;
    static final int LINE_FEED;
    static final int CARRIAGE_RETURN;
    static final int LINE_SEPARATOR;
    static final int PARAGRAPH_SEPARATOR;

    private synchronized void compile(org.apache.xerces.impl.xpath.regex.Token)
    {
        org.apache.xerces.impl.xpath.regex.Op $r1, $r3;
        org.apache.xerces.impl.xpath.regex.RegularExpression r0;
        org.apache.xerces.impl.xpath.regex.Token r2;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression;

        r2 := @parameter0: org.apache.xerces.impl.xpath.regex.Token;

        $r1 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        if $r1 == null goto label1;

        return;

     label1:
        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int numberOfClosures> = 0;

        $r3 = specialinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op compile(org.apache.xerces.impl.xpath.regex.Token,org.apache.xerces.impl.xpath.regex.Op,boolean)>(r2, null, 0);

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations> = $r3;

        return;
    }

    private org.apache.xerces.impl.xpath.regex.Op compile(org.apache.xerces.impl.xpath.regex.Token, org.apache.xerces.impl.xpath.regex.Op, boolean)
    {
        org.apache.xerces.impl.xpath.regex.Op$UnionOp $r40;
        org.apache.xerces.impl.xpath.regex.Op r4, $r6, $r10, $r14, $r16, $r18, $r20, $r22, $r24, $r30, $r33, $r37, $r39, $r42, r51, r52, $r55, $r56;
        org.apache.xerces.impl.xpath.regex.RegularExpression r2;
        org.apache.xerces.impl.xpath.regex.Op$CharOp $r23, $r27, $r28, $r31, $r45;
        org.apache.xerces.impl.xpath.regex.Token r0, $r1, $r3, $r5, $r7, $r8, $r9, $r13, $r15, $r17, $r19, $r21, $r29, $r32, $r34, $r36, $r41, $r43, $r44;
        java.lang.StringBuffer $r48, $r49, $r57;
        java.lang.String $r25, $r50;
        org.apache.xerces.impl.xpath.regex.Op$StringOp $r26;
        java.lang.RuntimeException $r58;
        org.apache.xerces.impl.xpath.regex.Op$RangeOp $r35;
        boolean z0, $z1;
        org.apache.xerces.impl.xpath.regex.Op$ChildOp $r38, r53;
        org.apache.xerces.impl.xpath.regex.Token$ModifierToken $r11, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25, i26, i27, i28, i29, i30, i31, $i33;
        org.apache.xerces.impl.xpath.regex.Token$ConditionToken r54;

        r2 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression;

        r0 := @parameter0: org.apache.xerces.impl.xpath.regex.Token;

        r51 := @parameter1: org.apache.xerces.impl.xpath.regex.Op;

        z0 := @parameter2: boolean;

        $i0 = r0.<org.apache.xerces.impl.xpath.regex.Token: int type>;

        tableswitch($i0)
        {
            case 0: goto label02;
            case 1: goto label05;
            case 2: goto label11;
            case 3: goto label14;
            case 4: goto label04;
            case 5: goto label04;
            case 6: goto label32;
            case 7: goto label29;
            case 8: goto label03;
            case 9: goto label14;
            case 10: goto label30;
            case 11: goto label01;
            case 12: goto label31;
            case 13: goto label46;
            case 14: goto label46;
            case 15: goto label46;
            case 16: goto label46;
            case 17: goto label46;
            case 18: goto label46;
            case 19: goto label46;
            case 20: goto label35;
            case 21: goto label36;
            case 22: goto label37;
            case 23: goto label38;
            case 24: goto label39;
            case 25: goto label40;
            case 26: goto label41;
            default: goto label46;
        };

     label01:
        $r24 = staticinvoke <org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op createDot()>();

        r52 = $r24;

        $r24.<org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op next> = r51;

        goto label47;

     label02:
        $i22 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.Token: int getChar()>();

        $r45 = staticinvoke <org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op$CharOp createChar(int)>($i22);

        r52 = $r45;

        $r45.<org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op next> = r51;

        goto label47;

     label03:
        $i4 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.Token: int getChar()>();

        $r27 = staticinvoke <org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op$CharOp createAnchor(int)>($i4);

        r52 = $r27;

        $r27.<org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op next> = r51;

        goto label47;

     label04:
        $r35 = staticinvoke <org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op$RangeOp createRange(org.apache.xerces.impl.xpath.regex.Token)>(r0);

        r52 = $r35;

        $r35.<org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op next> = r51;

        goto label47;

     label05:
        r52 = r51;

        if z0 != 0 goto label08;

        $i21 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.Token: int size()>();

        i24 = $i21 - 1;

        goto label07;

     label06:
        $r44 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.Token: org.apache.xerces.impl.xpath.regex.Token getChild(int)>(i24);

        r52 = specialinvoke r2.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op compile(org.apache.xerces.impl.xpath.regex.Token,org.apache.xerces.impl.xpath.regex.Op,boolean)>($r44, r52, 0);

        $i33 = (int) -1;

        i24 = i24 + $i33;

     label07:
        if i24 >= 0 goto label06;

        goto label47;

     label08:
        i25 = 0;

        goto label10;

     label09:
        $r43 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.Token: org.apache.xerces.impl.xpath.regex.Token getChild(int)>(i25);

        r52 = specialinvoke r2.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op compile(org.apache.xerces.impl.xpath.regex.Token,org.apache.xerces.impl.xpath.regex.Op,boolean)>($r43, r52, 1);

        i25 = i25 + 1;

     label10:
        $i20 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.Token: int size()>();

        if i25 < $i20 goto label09;

        goto label47;

     label11:
        $i18 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.Token: int size()>();

        $r40 = staticinvoke <org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op$UnionOp createUnion(int)>($i18);

        i26 = 0;

        goto label13;

     label12:
        $r41 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.Token: org.apache.xerces.impl.xpath.regex.Token getChild(int)>(i26);

        $r42 = specialinvoke r2.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op compile(org.apache.xerces.impl.xpath.regex.Token,org.apache.xerces.impl.xpath.regex.Op,boolean)>($r41, r51, z0);

        virtualinvoke $r40.<org.apache.xerces.impl.xpath.regex.Op$UnionOp: void addElement(org.apache.xerces.impl.xpath.regex.Op)>($r42);

        i26 = i26 + 1;

     label13:
        $i19 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.Token: int size()>();

        if i26 < $i19 goto label12;

        r52 = $r40;

        goto label47;

     label14:
        $r36 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.Token: org.apache.xerces.impl.xpath.regex.Token getChild(int)>(0);

        $i12 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.Token: int getMin()>();

        $i13 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.Token: int getMax()>();

        i27 = $i13;

        if $i12 < 0 goto label17;

        if $i12 != $i13 goto label17;

        r52 = r51;

        i28 = 0;

        goto label16;

     label15:
        r52 = specialinvoke r2.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op compile(org.apache.xerces.impl.xpath.regex.Token,org.apache.xerces.impl.xpath.regex.Op,boolean)>($r36, r52, z0);

        i28 = i28 + 1;

     label16:
        if i28 < $i12 goto label15;

        goto label47;

     label17:
        if $i12 <= 0 goto label18;

        if $i13 <= 0 goto label18;

        i27 = $i13 - $i12;

     label18:
        if i27 <= 0 goto label23;

        r52 = r51;

        i29 = 0;

        goto label22;

     label19:
        $i17 = r0.<org.apache.xerces.impl.xpath.regex.Token: int type>;

        if $i17 != 9 goto label20;

        $z1 = 1;

        goto label21;

     label20:
        $z1 = 0;

     label21:
        $r38 = staticinvoke <org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op$ChildOp createQuestion(boolean)>($z1);

        $r38.<org.apache.xerces.impl.xpath.regex.Op$ChildOp: org.apache.xerces.impl.xpath.regex.Op next> = r51;

        $r39 = specialinvoke r2.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op compile(org.apache.xerces.impl.xpath.regex.Token,org.apache.xerces.impl.xpath.regex.Op,boolean)>($r36, r52, z0);

        virtualinvoke $r38.<org.apache.xerces.impl.xpath.regex.Op$ChildOp: void setChild(org.apache.xerces.impl.xpath.regex.Op)>($r39);

        r52 = $r38;

        i29 = i29 + 1;

     label22:
        if i29 < i27 goto label19;

        goto label26;

     label23:
        $i14 = r0.<org.apache.xerces.impl.xpath.regex.Token: int type>;

        if $i14 != 9 goto label24;

        r53 = staticinvoke <org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op$ChildOp createNonGreedyClosure()>();

        goto label25;

     label24:
        $i15 = r2.<org.apache.xerces.impl.xpath.regex.RegularExpression: int numberOfClosures>;

        $i16 = $i15 + 1;

        r2.<org.apache.xerces.impl.xpath.regex.RegularExpression: int numberOfClosures> = $i16;

        r53 = staticinvoke <org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op$ChildOp createClosure(int)>($i15);

     label25:
        r53.<org.apache.xerces.impl.xpath.regex.Op$ChildOp: org.apache.xerces.impl.xpath.regex.Op next> = r51;

        $r37 = specialinvoke r2.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op compile(org.apache.xerces.impl.xpath.regex.Token,org.apache.xerces.impl.xpath.regex.Op,boolean)>($r36, r53, z0);

        virtualinvoke r53.<org.apache.xerces.impl.xpath.regex.Op$ChildOp: void setChild(org.apache.xerces.impl.xpath.regex.Op)>($r37);

        r52 = r53;

     label26:
        if $i12 <= 0 goto label47;

        i30 = 0;

        goto label28;

     label27:
        r52 = specialinvoke r2.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op compile(org.apache.xerces.impl.xpath.regex.Token,org.apache.xerces.impl.xpath.regex.Op,boolean)>($r36, r52, z0);

        i30 = i30 + 1;

     label28:
        if i30 < $i12 goto label27;

        goto label47;

     label29:
        r52 = r51;

        goto label47;

     label30:
        $r25 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.Token: java.lang.String getString()>();

        $r26 = staticinvoke <org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op$StringOp createString(java.lang.String)>($r25);

        r52 = $r26;

        $r26.<org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op next> = r51;

        goto label47;

     label31:
        $i3 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.Token: int getReferenceNumber()>();

        $r23 = staticinvoke <org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op$CharOp createBackReference(int)>($i3);

        r52 = $r23;

        $r23.<org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op next> = r51;

        goto label47;

     label32:
        $i5 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.Token: int getParenNumber()>();

        if $i5 != 0 goto label33;

        $r34 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.Token: org.apache.xerces.impl.xpath.regex.Token getChild(int)>(0);

        r52 = specialinvoke r2.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op compile(org.apache.xerces.impl.xpath.regex.Token,org.apache.xerces.impl.xpath.regex.Op,boolean)>($r34, r51, z0);

        goto label47;

     label33:
        if z0 == 0 goto label34;

        $i9 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.Token: int getParenNumber()>();

        $r31 = staticinvoke <org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op$CharOp createCapture(int,org.apache.xerces.impl.xpath.regex.Op)>($i9, r51);

        $r32 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.Token: org.apache.xerces.impl.xpath.regex.Token getChild(int)>(0);

        $r33 = specialinvoke r2.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op compile(org.apache.xerces.impl.xpath.regex.Token,org.apache.xerces.impl.xpath.regex.Op,boolean)>($r32, $r31, z0);

        $i10 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.Token: int getParenNumber()>();

        $i11 = neg $i10;

        r52 = staticinvoke <org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op$CharOp createCapture(int,org.apache.xerces.impl.xpath.regex.Op)>($i11, $r33);

        goto label47;

     label34:
        $i6 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.Token: int getParenNumber()>();

        $i7 = neg $i6;

        $r28 = staticinvoke <org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op$CharOp createCapture(int,org.apache.xerces.impl.xpath.regex.Op)>($i7, r51);

        $r29 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.Token: org.apache.xerces.impl.xpath.regex.Token getChild(int)>(0);

        $r30 = specialinvoke r2.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op compile(org.apache.xerces.impl.xpath.regex.Token,org.apache.xerces.impl.xpath.regex.Op,boolean)>($r29, $r28, z0);

        $i8 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.Token: int getParenNumber()>();

        r52 = staticinvoke <org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op$CharOp createCapture(int,org.apache.xerces.impl.xpath.regex.Op)>($i8, $r30);

        goto label47;

     label35:
        $r21 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.Token: org.apache.xerces.impl.xpath.regex.Token getChild(int)>(0);

        $r22 = specialinvoke r2.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op compile(org.apache.xerces.impl.xpath.regex.Token,org.apache.xerces.impl.xpath.regex.Op,boolean)>($r21, null, 0);

        r52 = staticinvoke <org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op$ChildOp createLook(int,org.apache.xerces.impl.xpath.regex.Op,org.apache.xerces.impl.xpath.regex.Op)>(20, r51, $r22);

        goto label47;

     label36:
        $r19 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.Token: org.apache.xerces.impl.xpath.regex.Token getChild(int)>(0);

        $r20 = specialinvoke r2.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op compile(org.apache.xerces.impl.xpath.regex.Token,org.apache.xerces.impl.xpath.regex.Op,boolean)>($r19, null, 0);

        r52 = staticinvoke <org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op$ChildOp createLook(int,org.apache.xerces.impl.xpath.regex.Op,org.apache.xerces.impl.xpath.regex.Op)>(21, r51, $r20);

        goto label47;

     label37:
        $r17 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.Token: org.apache.xerces.impl.xpath.regex.Token getChild(int)>(0);

        $r18 = specialinvoke r2.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op compile(org.apache.xerces.impl.xpath.regex.Token,org.apache.xerces.impl.xpath.regex.Op,boolean)>($r17, null, 1);

        r52 = staticinvoke <org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op$ChildOp createLook(int,org.apache.xerces.impl.xpath.regex.Op,org.apache.xerces.impl.xpath.regex.Op)>(22, r51, $r18);

        goto label47;

     label38:
        $r15 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.Token: org.apache.xerces.impl.xpath.regex.Token getChild(int)>(0);

        $r16 = specialinvoke r2.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op compile(org.apache.xerces.impl.xpath.regex.Token,org.apache.xerces.impl.xpath.regex.Op,boolean)>($r15, null, 1);

        r52 = staticinvoke <org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op$ChildOp createLook(int,org.apache.xerces.impl.xpath.regex.Op,org.apache.xerces.impl.xpath.regex.Op)>(23, r51, $r16);

        goto label47;

     label39:
        $r13 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.Token: org.apache.xerces.impl.xpath.regex.Token getChild(int)>(0);

        $r14 = specialinvoke r2.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op compile(org.apache.xerces.impl.xpath.regex.Token,org.apache.xerces.impl.xpath.regex.Op,boolean)>($r13, null, z0);

        r52 = staticinvoke <org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op$ChildOp createIndependent(org.apache.xerces.impl.xpath.regex.Op,org.apache.xerces.impl.xpath.regex.Op)>(r51, $r14);

        goto label47;

     label40:
        $r9 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.Token: org.apache.xerces.impl.xpath.regex.Token getChild(int)>(0);

        $r10 = specialinvoke r2.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op compile(org.apache.xerces.impl.xpath.regex.Token,org.apache.xerces.impl.xpath.regex.Op,boolean)>($r9, null, z0);

        $r11 = (org.apache.xerces.impl.xpath.regex.Token$ModifierToken) r0;

        $i1 = virtualinvoke $r11.<org.apache.xerces.impl.xpath.regex.Token$ModifierToken: int getOptions()>();

        $r12 = (org.apache.xerces.impl.xpath.regex.Token$ModifierToken) r0;

        $i2 = virtualinvoke $r12.<org.apache.xerces.impl.xpath.regex.Token$ModifierToken: int getOptionsMask()>();

        r52 = staticinvoke <org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op$ModifierOp createModifier(org.apache.xerces.impl.xpath.regex.Op,org.apache.xerces.impl.xpath.regex.Op,int,int)>(r51, $r10, $i1, $i2);

        goto label47;

     label41:
        r54 = (org.apache.xerces.impl.xpath.regex.Token$ConditionToken) r0;

        i31 = r54.<org.apache.xerces.impl.xpath.regex.Token$ConditionToken: int refNumber>;

        $r1 = r54.<org.apache.xerces.impl.xpath.regex.Token$ConditionToken: org.apache.xerces.impl.xpath.regex.Token condition>;

        if $r1 != null goto label42;

        $r55 = null;

        goto label43;

     label42:
        $r3 = r54.<org.apache.xerces.impl.xpath.regex.Token$ConditionToken: org.apache.xerces.impl.xpath.regex.Token condition>;

        $r55 = specialinvoke r2.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op compile(org.apache.xerces.impl.xpath.regex.Token,org.apache.xerces.impl.xpath.regex.Op,boolean)>($r3, null, z0);

     label43:
        r4 = $r55;

        $r5 = r54.<org.apache.xerces.impl.xpath.regex.Token$ConditionToken: org.apache.xerces.impl.xpath.regex.Token yes>;

        $r6 = specialinvoke r2.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op compile(org.apache.xerces.impl.xpath.regex.Token,org.apache.xerces.impl.xpath.regex.Op,boolean)>($r5, r51, z0);

        $r7 = r54.<org.apache.xerces.impl.xpath.regex.Token$ConditionToken: org.apache.xerces.impl.xpath.regex.Token no>;

        if $r7 != null goto label44;

        $r56 = null;

        goto label45;

     label44:
        $r8 = r54.<org.apache.xerces.impl.xpath.regex.Token$ConditionToken: org.apache.xerces.impl.xpath.regex.Token no>;

        $r56 = specialinvoke r2.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op compile(org.apache.xerces.impl.xpath.regex.Token,org.apache.xerces.impl.xpath.regex.Op,boolean)>($r8, r51, z0);

     label45:
        r52 = staticinvoke <org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op$ConditionOp createCondition(org.apache.xerces.impl.xpath.regex.Op,int,org.apache.xerces.impl.xpath.regex.Op,org.apache.xerces.impl.xpath.regex.Op,org.apache.xerces.impl.xpath.regex.Op)>(r51, i31, r4, $r6, $r56);

        goto label47;

     label46:
        $r58 = new java.lang.RuntimeException;

        $r57 = new java.lang.StringBuffer;

        specialinvoke $r57.<java.lang.StringBuffer: void <init>()>();

        $r48 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unknown token type: ");

        $i23 = r0.<org.apache.xerces.impl.xpath.regex.Token: int type>;

        $r49 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i23);

        $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r58.<java.lang.RuntimeException: void <init>(java.lang.String)>($r50);

        throw $r58;

     label47:
        return r52;
    }

    public boolean matches(char[])
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression r0;
        int $i0;
        char[] r1;
        boolean $z0;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression;

        r1 := @parameter0: char[];

        $i0 = lengthof r1;

        $z0 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: boolean matches(char[],int,int,org.apache.xerces.impl.xpath.regex.Match)>(r1, 0, $i0, null);

        return $z0;
    }

    public boolean matches(char[], int, int)
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression r0;
        int i0, i1;
        char[] r1;
        boolean $z0;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: boolean matches(char[],int,int,org.apache.xerces.impl.xpath.regex.Match)>(r1, i0, i1, null);

        return $z0;
    }

    public boolean matches(char[], org.apache.xerces.impl.xpath.regex.Match)
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression r0;
        int $i0;
        char[] r1;
        org.apache.xerces.impl.xpath.regex.Match r2;
        boolean $z0;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression;

        r1 := @parameter0: char[];

        r2 := @parameter1: org.apache.xerces.impl.xpath.regex.Match;

        $i0 = lengthof r1;

        $z0 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: boolean matches(char[],int,int,org.apache.xerces.impl.xpath.regex.Match)>(r1, 0, $i0, r2);

        return $z0;
    }

    public boolean matches(char[], int, int, org.apache.xerces.impl.xpath.regex.Match)
    {
        org.apache.xerces.impl.xpath.regex.Match $r9, $r10, $r11, $r20, $r21, $r23, $r25, $r26, $r27, r32, $r39;
        org.apache.xerces.impl.xpath.regex.RangeToken $r35, r36;
        org.apache.xerces.impl.xpath.regex.Op $r1, $r7, $r8, $r12, $r13, $r14, $r15, $r16, $r17, $r24;
        org.apache.xerces.impl.xpath.regex.RegularExpression r0;
        org.apache.xerces.impl.xpath.regex.RegularExpression$Context $r2, r3, $r4, $r33, r34, $r37, $r38;
        java.lang.Throwable $r30, $r31;
        java.lang.String $r6, $r22;
        char[] r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, $z8;
        org.apache.xerces.impl.xpath.regex.BMPattern $r18, $r19;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, i37, i38, i40, $i42, $i43, $i44;
        char $c12, c39;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression;

        r5 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r32 := @parameter3: org.apache.xerces.impl.xpath.regex.Match;

        entermonitor r0;

     label01:
        $r1 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        if $r1 != null goto label02;

        virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: void prepare()>();

     label02:
        $r2 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.RegularExpression$Context context>;

        if $r2 != null goto label03;

        $r37 = new org.apache.xerces.impl.xpath.regex.RegularExpression$Context;

        specialinvoke $r37.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: void <init>()>();

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.RegularExpression$Context context> = $r37;

     label03:
        exitmonitor r0;

        goto label05;

     label04:
        $r31 := @caughtexception;

        exitmonitor r0;

        throw $r31;

     label05:
        r3 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.RegularExpression$Context context>;

        entermonitor r3;

     label06:
        $r4 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.RegularExpression$Context context>;

        $z0 = $r4.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: boolean inuse>;

        if $z0 == 0 goto label07;

        $r38 = new org.apache.xerces.impl.xpath.regex.RegularExpression$Context;

        $r33 = $r38;

        specialinvoke $r38.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: void <init>()>();

        goto label08;

     label07:
        $r33 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.RegularExpression$Context context>;

     label08:
        r34 = $r33;

        $i2 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int numberOfClosures>;

        virtualinvoke $r33.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: void reset(char[],int,int,int)>(r5, i0, i1, $i2);

        exitmonitor r3;

        goto label10;

     label09:
        $r30 := @caughtexception;

        exitmonitor r3;

        throw $r30;

     label10:
        if r32 == null goto label11;

        $i35 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int nofparen>;

        virtualinvoke r32.<org.apache.xerces.impl.xpath.regex.Match: void setNumberOfGroups(int)>($i35);

        virtualinvoke r32.<org.apache.xerces.impl.xpath.regex.Match: void setSource(char[])>(r5);

        goto label12;

     label11:
        $z1 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: boolean hasBackReferences>;

        if $z1 == 0 goto label12;

        $r39 = new org.apache.xerces.impl.xpath.regex.Match;

        specialinvoke $r39.<org.apache.xerces.impl.xpath.regex.Match: void <init>()>();

        r32 = $r39;

        $i34 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int nofparen>;

        virtualinvoke $r39.<org.apache.xerces.impl.xpath.regex.Match: void setNumberOfGroups(int)>($i34);

     label12:
        r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match> = r32;

        $i36 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        $z6 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: boolean isSet(int,int)>($i36, 512);

        if $z6 == 0 goto label15;

        $r24 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        $i30 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        $i29 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        $i31 = specialinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int match(org.apache.xerces.impl.xpath.regex.RegularExpression$Context,org.apache.xerces.impl.xpath.regex.Op,int,int,int)>(r34, $r24, $i30, 1, $i29);

        $i32 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        if $i31 != $i32 goto label14;

        $r25 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        if $r25 == null goto label13;

        $r26 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        $i33 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        virtualinvoke $r26.<org.apache.xerces.impl.xpath.regex.Match: void setBeginning(int,int)>(0, $i33);

        $r27 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        virtualinvoke $r27.<org.apache.xerces.impl.xpath.regex.Match: void setEnd(int,int)>(0, $i31);

     label13:
        virtualinvoke r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: void setInUse(boolean)>(0);

        return 1;

     label14:
        return 0;

     label15:
        $z2 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: boolean fixedStringOnly>;

        if $z2 == 0 goto label18;

        $r19 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.BMPattern fixedStringTable>;

        $i25 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        $i24 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        $i26 = virtualinvoke $r19.<org.apache.xerces.impl.xpath.regex.BMPattern: int matches(char[],int,int)>(r5, $i25, $i24);

        if $i26 < 0 goto label17;

        $r20 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        if $r20 == null goto label16;

        $r21 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        virtualinvoke $r21.<org.apache.xerces.impl.xpath.regex.Match: void setBeginning(int,int)>(0, $i26);

        $r23 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        $r22 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: java.lang.String fixedString>;

        $i27 = virtualinvoke $r22.<java.lang.String: int length()>();

        $i28 = $i26 + $i27;

        virtualinvoke $r23.<org.apache.xerces.impl.xpath.regex.Match: void setEnd(int,int)>(0, $i28);

     label16:
        virtualinvoke r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: void setInUse(boolean)>(0);

        return 1;

     label17:
        virtualinvoke r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: void setInUse(boolean)>(0);

        return 0;

     label18:
        $r6 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: java.lang.String fixedString>;

        if $r6 == null goto label19;

        $r18 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.BMPattern fixedStringTable>;

        $i21 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        $i20 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        $i22 = virtualinvoke $r18.<org.apache.xerces.impl.xpath.regex.BMPattern: int matches(char[],int,int)>(r5, $i21, $i20);

        if $i22 >= 0 goto label19;

        virtualinvoke r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: void setInUse(boolean)>(0);

        return 0;

     label19:
        $i4 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        $i3 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int minlength>;

        $i23 = $i4 - $i3;

        $i42 = (int) -1;

        i37 = $i42;

        $r7 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        if $r7 == null goto label26;

        $r13 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        $i13 = $r13.<org.apache.xerces.impl.xpath.regex.Op: int type>;

        if $i13 != 7 goto label26;

        $r14 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        $r15 = virtualinvoke $r14.<org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op getChild()>();

        $i14 = $r15.<org.apache.xerces.impl.xpath.regex.Op: int type>;

        if $i14 != 0 goto label26;

        $i15 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        $z4 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: boolean isSet(int,int)>($i15, 4);

        if $z4 == 0 goto label20;

        i38 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        $r17 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        $i19 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        $i18 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        i37 = specialinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int match(org.apache.xerces.impl.xpath.regex.RegularExpression$Context,org.apache.xerces.impl.xpath.regex.Op,int,int,int)>(r34, $r17, $i19, 1, $i18);

        goto label36;

     label20:
        z7 = 1;

        i38 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        goto label25;

     label21:
        c39 = r5[i38];

        $i43 = (int) c39;

        $z5 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: boolean isEOLChar(int)>($i43);

        if $z5 == 0 goto label22;

        z7 = 1;

        goto label24;

     label22:
        if z7 == 0 goto label23;

        $r16 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        $i16 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        $i17 = specialinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int match(org.apache.xerces.impl.xpath.regex.RegularExpression$Context,org.apache.xerces.impl.xpath.regex.Op,int,int,int)>(r34, $r16, i38, 1, $i16);

        i37 = $i17;

        if 0 > $i17 goto label23;

        goto label36;

     label23:
        z7 = 0;

     label24:
        i38 = i38 + 1;

     label25:
        if i38 <= $i23 goto label21;

        goto label36;

     label26:
        $r35 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.RangeToken firstChar>;

        if $r35 == null goto label32;

        r36 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.RangeToken firstChar>;

        i38 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        goto label31;

     label27:
        i40 = r5[i38];

        $z3 = staticinvoke <org.apache.xerces.impl.xpath.regex.REUtil: boolean isHighSurrogate(int)>(i40);

        if $z3 == 0 goto label28;

        $i10 = i38 + 1;

        $i9 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        if $i10 >= $i9 goto label28;

        $i11 = i38 + 1;

        $c12 = r5[$i11];

        $i44 = (int) $c12;

        i40 = staticinvoke <org.apache.xerces.impl.xpath.regex.REUtil: int composeFromSurrogates(int,int)>(i40, $i44);

     label28:
        $z8 = virtualinvoke r36.<org.apache.xerces.impl.xpath.regex.RangeToken: boolean match(int)>(i40);

        if $z8 != 0 goto label29;

        goto label30;

     label29:
        $r12 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        $i7 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        $i8 = specialinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int match(org.apache.xerces.impl.xpath.regex.RegularExpression$Context,org.apache.xerces.impl.xpath.regex.Op,int,int,int)>(r34, $r12, i38, 1, $i7);

        i37 = $i8;

        if 0 > $i8 goto label30;

        goto label36;

     label30:
        i38 = i38 + 1;

     label31:
        if i38 <= $i23 goto label27;

        goto label36;

     label32:
        i38 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        goto label35;

     label33:
        $r8 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        $i5 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        $i6 = specialinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int match(org.apache.xerces.impl.xpath.regex.RegularExpression$Context,org.apache.xerces.impl.xpath.regex.Op,int,int,int)>(r34, $r8, i38, 1, $i5);

        i37 = $i6;

        if 0 > $i6 goto label34;

        goto label36;

     label34:
        i38 = i38 + 1;

     label35:
        if i38 <= $i23 goto label33;

     label36:
        if i37 < 0 goto label38;

        $r9 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        if $r9 == null goto label37;

        $r10 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        virtualinvoke $r10.<org.apache.xerces.impl.xpath.regex.Match: void setBeginning(int,int)>(0, i38);

        $r11 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        virtualinvoke $r11.<org.apache.xerces.impl.xpath.regex.Match: void setEnd(int,int)>(0, i37);

     label37:
        virtualinvoke r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: void setInUse(boolean)>(0);

        return 1;

     label38:
        virtualinvoke r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: void setInUse(boolean)>(0);

        return 0;

        catch java.lang.Throwable from label01 to label04 with label04;
        catch java.lang.Throwable from label06 to label09 with label09;
    }

    public boolean matches(java.lang.String)
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression r0;
        int $i0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $z0 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: boolean matches(java.lang.String,int,int,org.apache.xerces.impl.xpath.regex.Match)>(r1, 0, $i0, null);

        return $z0;
    }

    public boolean matches(java.lang.String, int, int)
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression r0;
        int i0, i1;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: boolean matches(java.lang.String,int,int,org.apache.xerces.impl.xpath.regex.Match)>(r1, i0, i1, null);

        return $z0;
    }

    public boolean matches(java.lang.String, org.apache.xerces.impl.xpath.regex.Match)
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression r0;
        int $i0;
        java.lang.String r1;
        org.apache.xerces.impl.xpath.regex.Match r2;
        boolean $z0;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.xerces.impl.xpath.regex.Match;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $z0 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: boolean matches(java.lang.String,int,int,org.apache.xerces.impl.xpath.regex.Match)>(r1, 0, $i0, r2);

        return $z0;
    }

    public boolean matches(java.lang.String, int, int, org.apache.xerces.impl.xpath.regex.Match)
    {
        org.apache.xerces.impl.xpath.regex.Match $r9, $r10, $r11, $r20, $r21, $r23, $r25, $r26, $r27, r32, $r39;
        org.apache.xerces.impl.xpath.regex.RangeToken $r35, r36;
        org.apache.xerces.impl.xpath.regex.Op $r1, $r7, $r8, $r12, $r13, $r14, $r15, $r16, $r17, $r24;
        org.apache.xerces.impl.xpath.regex.RegularExpression r0;
        org.apache.xerces.impl.xpath.regex.RegularExpression$Context $r2, r3, $r4, $r33, r34, $r37, $r38;
        java.lang.Throwable $r30, $r31;
        java.lang.String r5, $r6, $r22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, $z8;
        org.apache.xerces.impl.xpath.regex.BMPattern $r18, $r19;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, i39, i40, i41, $i43, $i44, $i45, $i46, $i47, $i48;
        char $c7, $c13, $c17;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression;

        r5 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r32 := @parameter3: org.apache.xerces.impl.xpath.regex.Match;

        entermonitor r0;

     label01:
        $r1 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        if $r1 != null goto label02;

        virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: void prepare()>();

     label02:
        $r2 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.RegularExpression$Context context>;

        if $r2 != null goto label03;

        $r37 = new org.apache.xerces.impl.xpath.regex.RegularExpression$Context;

        specialinvoke $r37.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: void <init>()>();

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.RegularExpression$Context context> = $r37;

     label03:
        exitmonitor r0;

        goto label05;

     label04:
        $r31 := @caughtexception;

        exitmonitor r0;

        throw $r31;

     label05:
        r3 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.RegularExpression$Context context>;

        entermonitor r3;

     label06:
        $r4 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.RegularExpression$Context context>;

        $z0 = $r4.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: boolean inuse>;

        if $z0 == 0 goto label07;

        $r38 = new org.apache.xerces.impl.xpath.regex.RegularExpression$Context;

        $r33 = $r38;

        specialinvoke $r38.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: void <init>()>();

        goto label08;

     label07:
        $r33 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.RegularExpression$Context context>;

     label08:
        r34 = $r33;

        $i2 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int numberOfClosures>;

        virtualinvoke $r33.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: void reset(java.lang.String,int,int,int)>(r5, i0, i1, $i2);

        exitmonitor r3;

        goto label10;

     label09:
        $r30 := @caughtexception;

        exitmonitor r3;

        throw $r30;

     label10:
        if r32 == null goto label11;

        $i37 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int nofparen>;

        virtualinvoke r32.<org.apache.xerces.impl.xpath.regex.Match: void setNumberOfGroups(int)>($i37);

        virtualinvoke r32.<org.apache.xerces.impl.xpath.regex.Match: void setSource(java.lang.String)>(r5);

        goto label12;

     label11:
        $z1 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: boolean hasBackReferences>;

        if $z1 == 0 goto label12;

        $r39 = new org.apache.xerces.impl.xpath.regex.Match;

        specialinvoke $r39.<org.apache.xerces.impl.xpath.regex.Match: void <init>()>();

        r32 = $r39;

        $i36 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int nofparen>;

        virtualinvoke $r39.<org.apache.xerces.impl.xpath.regex.Match: void setNumberOfGroups(int)>($i36);

     label12:
        r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match> = r32;

        $i38 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        $z6 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: boolean isSet(int,int)>($i38, 512);

        if $z6 == 0 goto label15;

        $r24 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        $i32 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        $i31 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        $i33 = specialinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int match(org.apache.xerces.impl.xpath.regex.RegularExpression$Context,org.apache.xerces.impl.xpath.regex.Op,int,int,int)>(r34, $r24, $i32, 1, $i31);

        $i34 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        if $i33 != $i34 goto label14;

        $r25 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        if $r25 == null goto label13;

        $r26 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        $i35 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        virtualinvoke $r26.<org.apache.xerces.impl.xpath.regex.Match: void setBeginning(int,int)>(0, $i35);

        $r27 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        virtualinvoke $r27.<org.apache.xerces.impl.xpath.regex.Match: void setEnd(int,int)>(0, $i33);

     label13:
        virtualinvoke r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: void setInUse(boolean)>(0);

        return 1;

     label14:
        return 0;

     label15:
        $z2 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: boolean fixedStringOnly>;

        if $z2 == 0 goto label18;

        $r19 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.BMPattern fixedStringTable>;

        $i27 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        $i26 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        $i28 = virtualinvoke $r19.<org.apache.xerces.impl.xpath.regex.BMPattern: int matches(java.lang.String,int,int)>(r5, $i27, $i26);

        if $i28 < 0 goto label17;

        $r20 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        if $r20 == null goto label16;

        $r21 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        virtualinvoke $r21.<org.apache.xerces.impl.xpath.regex.Match: void setBeginning(int,int)>(0, $i28);

        $r23 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        $r22 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: java.lang.String fixedString>;

        $i29 = virtualinvoke $r22.<java.lang.String: int length()>();

        $i30 = $i28 + $i29;

        virtualinvoke $r23.<org.apache.xerces.impl.xpath.regex.Match: void setEnd(int,int)>(0, $i30);

     label16:
        virtualinvoke r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: void setInUse(boolean)>(0);

        return 1;

     label17:
        virtualinvoke r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: void setInUse(boolean)>(0);

        return 0;

     label18:
        $r6 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: java.lang.String fixedString>;

        if $r6 == null goto label19;

        $r18 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.BMPattern fixedStringTable>;

        $i23 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        $i22 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        $i24 = virtualinvoke $r18.<org.apache.xerces.impl.xpath.regex.BMPattern: int matches(java.lang.String,int,int)>(r5, $i23, $i22);

        if $i24 >= 0 goto label19;

        virtualinvoke r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: void setInUse(boolean)>(0);

        return 0;

     label19:
        $i4 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        $i3 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int minlength>;

        $i25 = $i4 - $i3;

        $i43 = (int) -1;

        i39 = $i43;

        $r7 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        if $r7 == null goto label26;

        $r13 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        $i14 = $r13.<org.apache.xerces.impl.xpath.regex.Op: int type>;

        if $i14 != 7 goto label26;

        $r14 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        $r15 = virtualinvoke $r14.<org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op getChild()>();

        $i15 = $r15.<org.apache.xerces.impl.xpath.regex.Op: int type>;

        if $i15 != 0 goto label26;

        $i16 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        $z4 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: boolean isSet(int,int)>($i16, 4);

        if $z4 == 0 goto label20;

        i40 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        $r17 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        $i21 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        $i20 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        i39 = specialinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int match(org.apache.xerces.impl.xpath.regex.RegularExpression$Context,org.apache.xerces.impl.xpath.regex.Op,int,int,int)>(r34, $r17, $i21, 1, $i20);

        goto label36;

     label20:
        z7 = 1;

        i40 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        goto label25;

     label21:
        $c17 = virtualinvoke r5.<java.lang.String: char charAt(int)>(i40);

        $i44 = (int) $c17;

        $z5 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: boolean isEOLChar(int)>($i44);

        if $z5 == 0 goto label22;

        z7 = 1;

        goto label24;

     label22:
        if z7 == 0 goto label23;

        $r16 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        $i18 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        $i19 = specialinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int match(org.apache.xerces.impl.xpath.regex.RegularExpression$Context,org.apache.xerces.impl.xpath.regex.Op,int,int,int)>(r34, $r16, i40, 1, $i18);

        i39 = $i19;

        if 0 > $i19 goto label23;

        goto label36;

     label23:
        z7 = 0;

     label24:
        i40 = i40 + 1;

     label25:
        if i40 <= $i25 goto label21;

        goto label36;

     label26:
        $r35 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.RangeToken firstChar>;

        if $r35 == null goto label32;

        r36 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.RangeToken firstChar>;

        i40 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        goto label31;

     label27:
        $c7 = virtualinvoke r5.<java.lang.String: char charAt(int)>(i40);

        $i45 = (int) $c7;

        i41 = $i45;

        $i46 = (int) $c7;

        $z3 = staticinvoke <org.apache.xerces.impl.xpath.regex.REUtil: boolean isHighSurrogate(int)>($i46);

        if $z3 == 0 goto label28;

        $i11 = i40 + 1;

        $i10 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        if $i11 >= $i10 goto label28;

        $i12 = i40 + 1;

        $c13 = virtualinvoke r5.<java.lang.String: char charAt(int)>($i12);

        $i47 = (int) $c7;

        $i48 = (int) $c13;

        i41 = staticinvoke <org.apache.xerces.impl.xpath.regex.REUtil: int composeFromSurrogates(int,int)>($i47, $i48);

     label28:
        $z8 = virtualinvoke r36.<org.apache.xerces.impl.xpath.regex.RangeToken: boolean match(int)>(i41);

        if $z8 != 0 goto label29;

        goto label30;

     label29:
        $r12 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        $i8 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        $i9 = specialinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int match(org.apache.xerces.impl.xpath.regex.RegularExpression$Context,org.apache.xerces.impl.xpath.regex.Op,int,int,int)>(r34, $r12, i40, 1, $i8);

        i39 = $i9;

        if 0 > $i9 goto label30;

        goto label36;

     label30:
        i40 = i40 + 1;

     label31:
        if i40 <= $i25 goto label27;

        goto label36;

     label32:
        i40 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        goto label35;

     label33:
        $r8 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        $i5 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        $i6 = specialinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int match(org.apache.xerces.impl.xpath.regex.RegularExpression$Context,org.apache.xerces.impl.xpath.regex.Op,int,int,int)>(r34, $r8, i40, 1, $i5);

        i39 = $i6;

        if 0 > $i6 goto label34;

        goto label36;

     label34:
        i40 = i40 + 1;

     label35:
        if i40 <= $i25 goto label33;

     label36:
        if i39 < 0 goto label38;

        $r9 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        if $r9 == null goto label37;

        $r10 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        virtualinvoke $r10.<org.apache.xerces.impl.xpath.regex.Match: void setBeginning(int,int)>(0, i40);

        $r11 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        virtualinvoke $r11.<org.apache.xerces.impl.xpath.regex.Match: void setEnd(int,int)>(0, i39);

     label37:
        virtualinvoke r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: void setInUse(boolean)>(0);

        return 1;

     label38:
        virtualinvoke r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: void setInUse(boolean)>(0);

        return 0;

        catch java.lang.Throwable from label01 to label04 with label04;
        catch java.lang.Throwable from label06 to label09 with label09;
    }

    private int match(org.apache.xerces.impl.xpath.regex.RegularExpression$Context, org.apache.xerces.impl.xpath.regex.Op, int, int, int)
    {
        org.apache.xerces.impl.xpath.regex.Match $r6, $r7, $r9, $r11, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30;
        byte $b78;
        org.apache.xerces.impl.xpath.regex.RangeToken $r42;
        org.apache.xerces.impl.xpath.regex.Op $r5, $r10, r41;
        org.apache.xerces.impl.xpath.regex.RegularExpression r8;
        org.apache.xerces.impl.xpath.regex.RegularExpression$Context r0;
        org.apache.xerces.util.IntStack $r46;
        java.lang.StringBuffer $r14, $r15, $r19, $r20, $r38, $r39, $r47, $r49, $r51;
        org.apache.xerces.impl.xpath.regex.RegularExpression$ClosureContext $r32, $r34;
        org.apache.xerces.impl.xpath.regex.Op$ConditionOp r43, r44;
        java.util.Stack $r45;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i44, $i45, $i46, $i48, $i49, $i51, $i53, $i54, $i55, $i58, $i59, $i60, $i61, i62, i63, i64, $i65, i66, $i67, $i68, i69, i70, $i71, $i72, i73, i74, $i75, i76, i77, i79, i80, i81, $i83, $i85, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i99, $i101, $i103, $i105;
        java.lang.Object $r4;
        java.lang.String $r16, $r21, $r35, $r40;
        java.lang.RuntimeException $r48, $r50, $r52;
        org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, z14, $z15, $z16;
        char $c43, $c47, $c50, $c52, $c56, $c57;
        org.apache.xerces.impl.xpath.regex.RegularExpression$ClosureContext[] $r31, $r33;

        r8 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression;

        r0 := @parameter0: org.apache.xerces.impl.xpath.regex.RegularExpression$Context;

        r41 := @parameter1: org.apache.xerces.impl.xpath.regex.Op;

        i62 := @parameter2: int;

        i63 := @parameter3: int;

        i64 := @parameter4: int;

        r1 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget target>;

        $r45 = new java.util.Stack;

        specialinvoke $r45.<java.util.Stack: void <init>()>();

        $r46 = new org.apache.xerces.util.IntStack;

        specialinvoke $r46.<org.apache.xerces.util.IntStack: void <init>()>();

        $z0 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: boolean isSet(int,int)>(i64, 2);

        z14 = 0;

        goto label01;

     label01:
        if r41 == null goto label02;

        $i8 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        if i62 > $i8 goto label02;

        $i9 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        if i62 >= $i9 goto label07;

     label02:
        if r41 != null goto label05;

        $z2 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: boolean isSet(int,int)>(i64, 512);

        if $z2 == 0 goto label03;

        $i7 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        if i62 == $i7 goto label03;

        $i83 = (int) -1;

        $i65 = $i83;

        goto label04;

     label03:
        $i65 = i62;

     label04:
        i66 = $i65;

        goto label06;

     label05:
        $i85 = (int) -1;

        i66 = $i85;

     label06:
        z14 = 1;

        goto label88;

     label07:
        $i87 = (int) -1;

        i66 = $i87;

        $i10 = r41.<org.apache.xerces.impl.xpath.regex.Op: int type>;

        tableswitch($i10)
        {
            case 0: goto label13;
            case 1: goto label08;
            case 2: goto label69;
            case 3: goto label23;
            case 4: goto label23;
            case 5: goto label32;
            case 6: goto label43;
            case 7: goto label48;
            case 8: goto label51;
            case 9: goto label50;
            case 10: goto label51;
            case 11: goto label52;
            case 12: goto label69;
            case 13: goto label69;
            case 14: goto label69;
            case 15: goto label54;
            case 16: goto label34;
            case 17: goto label69;
            case 18: goto label69;
            case 19: goto label69;
            case 20: goto label58;
            case 21: goto label58;
            case 22: goto label58;
            case 23: goto label58;
            case 24: goto label62;
            case 25: goto label63;
            case 26: goto label64;
            default: goto label69;
        };

     label08:
        if i63 <= 0 goto label09;

        $i67 = i62;

        goto label10;

     label09:
        $i67 = i62 - 1;

     label10:
        $i48 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        if $i67 >= $i48 goto label11;

        if $i67 < 0 goto label11;

        $i49 = virtualinvoke r41.<org.apache.xerces.impl.xpath.regex.Op: int getData()>();

        $c50 = virtualinvoke r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget: char charAt(int)>($i67);

        $i88 = (int) $c50;

        $z10 = specialinvoke r8.<org.apache.xerces.impl.xpath.regex.RegularExpression: boolean matchChar(int,int,boolean)>($i49, $i88, $z0);

        if $z10 != 0 goto label12;

     label11:
        z14 = 1;

        goto label88;

     label12:
        i62 = i62 + i63;

        r41 = r41.<org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op next>;

        goto label88;

     label13:
        if i63 <= 0 goto label14;

        $i68 = i62;

        goto label15;

     label14:
        $i68 = i62 - 1;

     label15:
        i69 = $i68;

        $i51 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        if $i68 >= $i51 goto label16;

        if $i68 >= 0 goto label17;

     label16:
        z14 = 1;

        goto label88;

     label17:
        $z11 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: boolean isSet(int,int)>(i64, 4);

        if $z11 == 0 goto label18;

        $c57 = virtualinvoke r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget: char charAt(int)>($i68);

        $i89 = (int) $c57;

        $z13 = staticinvoke <org.apache.xerces.impl.xpath.regex.REUtil: boolean isHighSurrogate(int)>($i89);

        if $z13 == 0 goto label20;

        $i58 = $i68 + i63;

        if $i58 < 0 goto label20;

        $i60 = $i68 + i63;

        $i59 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        if $i60 >= $i59 goto label20;

        i69 = $i68 + i63;

        goto label20;

     label18:
        $c52 = virtualinvoke r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget: char charAt(int)>($i68);

        $i90 = (int) $c52;

        i70 = $i90;

        $i91 = (int) $c52;

        $z12 = staticinvoke <org.apache.xerces.impl.xpath.regex.REUtil: boolean isHighSurrogate(int)>($i91);

        if $z12 == 0 goto label19;

        $i53 = $i68 + i63;

        if $i53 < 0 goto label19;

        $i55 = $i68 + i63;

        $i54 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        if $i55 >= $i54 goto label19;

        i69 = $i68 + i63;

        $c56 = virtualinvoke r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget: char charAt(int)>(i69);

        $i92 = (int) $c52;

        $i93 = (int) $c56;

        i70 = staticinvoke <org.apache.xerces.impl.xpath.regex.REUtil: int composeFromSurrogates(int,int)>($i92, $i93);

     label19:
        $z15 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: boolean isEOLChar(int)>(i70);

        if $z15 == 0 goto label20;

        z14 = 1;

        goto label88;

     label20:
        if i63 <= 0 goto label21;

        $i71 = i69 + 1;

        goto label22;

     label21:
        $i71 = i69;

     label22:
        i62 = $i71;

        r41 = r41.<org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op next>;

        goto label88;

     label23:
        if i63 <= 0 goto label24;

        $i72 = i62;

        goto label25;

     label24:
        $i72 = i62 - 1;

     label25:
        i73 = $i72;

        $i42 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        if $i72 >= $i42 goto label26;

        if $i72 >= 0 goto label27;

     label26:
        z14 = 1;

        goto label88;

     label27:
        $c43 = virtualinvoke r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget: char charAt(int)>(i62);

        $i94 = (int) $c43;

        i74 = $i94;

        $i95 = (int) $c43;

        $z9 = staticinvoke <org.apache.xerces.impl.xpath.regex.REUtil: boolean isHighSurrogate(int)>($i95);

        if $z9 == 0 goto label28;

        $i45 = $i72 + i63;

        $i44 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        if $i45 >= $i44 goto label28;

        $i46 = $i72 + i63;

        if $i46 < 0 goto label28;

        i73 = $i72 + i63;

        $c47 = virtualinvoke r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget: char charAt(int)>(i73);

        $i96 = (int) $c43;

        $i97 = (int) $c47;

        i74 = staticinvoke <org.apache.xerces.impl.xpath.regex.REUtil: int composeFromSurrogates(int,int)>($i96, $i97);

     label28:
        $r42 = virtualinvoke r41.<org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.RangeToken getToken()>();

        $z16 = virtualinvoke $r42.<org.apache.xerces.impl.xpath.regex.RangeToken: boolean match(int)>(i74);

        if $z16 != 0 goto label29;

        z14 = 1;

        goto label88;

     label29:
        if i63 <= 0 goto label30;

        $i75 = i73 + 1;

        goto label31;

     label30:
        $i75 = i73;

     label31:
        i62 = $i75;

        r41 = r41.<org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op next>;

        goto label88;

     label32:
        $z8 = virtualinvoke r8.<org.apache.xerces.impl.xpath.regex.RegularExpression: boolean matchAnchor(org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget,org.apache.xerces.impl.xpath.regex.Op,org.apache.xerces.impl.xpath.regex.RegularExpression$Context,int,int)>(r1, r41, r0, i62, i64);

        if $z8 != 0 goto label33;

        z14 = 1;

        goto label88;

     label33:
        r41 = r41.<org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op next>;

        goto label88;

     label34:
        $i24 = virtualinvoke r41.<org.apache.xerces.impl.xpath.regex.Op: int getData()>();

        if $i24 <= 0 goto label35;

        $i25 = r8.<org.apache.xerces.impl.xpath.regex.RegularExpression: int nofparen>;

        if $i24 < $i25 goto label36;

     label35:
        $r48 = new java.lang.RuntimeException;

        $r47 = new java.lang.StringBuffer;

        specialinvoke $r47.<java.lang.StringBuffer: void <init>()>();

        $r19 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Internal Error: Reference number must be more than zero: ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i24);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r48.<java.lang.RuntimeException: void <init>(java.lang.String)>($r21);

        throw $r48;

     label36:
        $r22 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        $i26 = virtualinvoke $r22.<org.apache.xerces.impl.xpath.regex.Match: int getBeginning(int)>($i24);

        if $i26 < 0 goto label37;

        $r23 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        $i27 = virtualinvoke $r23.<org.apache.xerces.impl.xpath.regex.Match: int getEnd(int)>($i24);

        if $i27 >= 0 goto label38;

     label37:
        z14 = 1;

        goto label88;

     label38:
        $r24 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        $i28 = virtualinvoke $r24.<org.apache.xerces.impl.xpath.regex.Match: int getBeginning(int)>($i24);

        $r25 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        $i29 = virtualinvoke $r25.<org.apache.xerces.impl.xpath.regex.Match: int getEnd(int)>($i24);

        i76 = $i29 - $i28;

        if i63 <= 0 goto label40;

        $i32 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        $z4 = virtualinvoke r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget: boolean regionMatches(boolean,int,int,int,int)>($z0, i62, $i32, $i28, i76);

        if $z4 != 0 goto label39;

        z14 = 1;

        goto label88;

     label39:
        i62 = i62 + i76;

        goto label42;

     label40:
        $i31 = i62 - i76;

        $i30 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        $z3 = virtualinvoke r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget: boolean regionMatches(boolean,int,int,int,int)>($z0, $i31, $i30, $i28, i76);

        if $z3 != 0 goto label41;

        z14 = 1;

        goto label88;

     label41:
        i62 = i62 - i76;

     label42:
        r41 = r41.<org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op next>;

        goto label88;

     label43:
        $r35 = virtualinvoke r41.<org.apache.xerces.impl.xpath.regex.Op: java.lang.String getString()>();

        $i38 = virtualinvoke $r35.<java.lang.String: int length()>();

        if i63 <= 0 goto label45;

        $i41 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        $z7 = virtualinvoke r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget: boolean regionMatches(boolean,int,int,java.lang.String,int)>($z0, i62, $i41, $r35, $i38);

        if $z7 != 0 goto label44;

        z14 = 1;

        goto label88;

     label44:
        i62 = i62 + $i38;

        goto label47;

     label45:
        $i40 = i62 - $i38;

        $i39 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        $z6 = virtualinvoke r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget: boolean regionMatches(boolean,int,int,java.lang.String,int)>($z0, $i40, $i39, $r35, $i38);

        if $z6 != 0 goto label46;

        z14 = 1;

        goto label88;

     label46:
        i62 = i62 - $i38;

     label47:
        r41 = r41.<org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op next>;

        goto label88;

     label48:
        $i37 = virtualinvoke r41.<org.apache.xerces.impl.xpath.regex.Op: int getData()>();

        $r31 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.RegularExpression$ClosureContext[] closureContexts>;

        $r32 = $r31[$i37];

        $z5 = virtualinvoke $r32.<org.apache.xerces.impl.xpath.regex.RegularExpression$ClosureContext: boolean contains(int)>(i62);

        if $z5 == 0 goto label49;

        z14 = 1;

        goto label88;

     label49:
        $r33 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.RegularExpression$ClosureContext[] closureContexts>;

        $r34 = $r33[$i37];

        virtualinvoke $r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$ClosureContext: void addOffset(int)>(i62);

     label50:
        virtualinvoke $r45.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r41);

        virtualinvoke $r46.<org.apache.xerces.util.IntStack: void push(int)>(i62);

        r41 = virtualinvoke r41.<org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op getChild()>();

        goto label88;

     label51:
        virtualinvoke $r45.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r41);

        virtualinvoke $r46.<org.apache.xerces.util.IntStack: void push(int)>(i62);

        r41 = r41.<org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op next>;

        goto label88;

     label52:
        $i36 = virtualinvoke r41.<org.apache.xerces.impl.xpath.regex.Op: int size()>();

        if $i36 != 0 goto label53;

        z14 = 1;

        goto label88;

     label53:
        virtualinvoke $r45.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r41);

        virtualinvoke $r46.<org.apache.xerces.util.IntStack: void push(int)>(0);

        virtualinvoke $r46.<org.apache.xerces.util.IntStack: void push(int)>(i62);

        r41 = virtualinvoke r41.<org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op elementAt(int)>(0);

        goto label88;

     label54:
        $i33 = virtualinvoke r41.<org.apache.xerces.impl.xpath.regex.Op: int getData()>();

        $r26 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        if $r26 == null goto label57;

        if $i33 <= 0 goto label55;

        $r29 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        $i35 = virtualinvoke $r29.<org.apache.xerces.impl.xpath.regex.Match: int getBeginning(int)>($i33);

        virtualinvoke $r46.<org.apache.xerces.util.IntStack: void push(int)>($i35);

        $r30 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        virtualinvoke $r30.<org.apache.xerces.impl.xpath.regex.Match: void setBeginning(int,int)>($i33, i62);

        goto label56;

     label55:
        i77 = neg $i33;

        $r27 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        $i34 = virtualinvoke $r27.<org.apache.xerces.impl.xpath.regex.Match: int getEnd(int)>(i77);

        virtualinvoke $r46.<org.apache.xerces.util.IntStack: void push(int)>($i34);

        $r28 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        virtualinvoke $r28.<org.apache.xerces.impl.xpath.regex.Match: void setEnd(int,int)>(i77, i62);

     label56:
        virtualinvoke $r45.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r41);

        virtualinvoke $r46.<org.apache.xerces.util.IntStack: void push(int)>(i62);

     label57:
        r41 = r41.<org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op next>;

        goto label88;

     label58:
        virtualinvoke $r45.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r41);

        virtualinvoke $r46.<org.apache.xerces.util.IntStack: void push(int)>(i63);

        virtualinvoke $r46.<org.apache.xerces.util.IntStack: void push(int)>(i62);

        $i22 = r41.<org.apache.xerces.impl.xpath.regex.Op: int type>;

        if $i22 == 20 goto label59;

        $i23 = r41.<org.apache.xerces.impl.xpath.regex.Op: int type>;

        if $i23 != 21 goto label60;

     label59:
        $b78 = 1;

        goto label61;

     label60:
        $b78 = -1;

     label61:
        i63 = $b78;

        r41 = virtualinvoke r41.<org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op getChild()>();

        goto label88;

     label62:
        virtualinvoke $r45.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r41);

        virtualinvoke $r46.<org.apache.xerces.util.IntStack: void push(int)>(i62);

        r41 = virtualinvoke r41.<org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op getChild()>();

        goto label88;

     label63:
        $i19 = virtualinvoke r41.<org.apache.xerces.impl.xpath.regex.Op: int getData()>();

        i79 = i64 | $i19;

        $i20 = virtualinvoke r41.<org.apache.xerces.impl.xpath.regex.Op: int getData2()>();

        $i99 = (int) -1;

        $i21 = $i20 ^ $i99;

        i80 = i79 & $i21;

        virtualinvoke $r45.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r41);

        virtualinvoke $r46.<org.apache.xerces.util.IntStack: void push(int)>(i64);

        virtualinvoke $r46.<org.apache.xerces.util.IntStack: void push(int)>(i62);

        i64 = i80;

        r41 = virtualinvoke r41.<org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op getChild()>();

        goto label88;

     label64:
        r43 = (org.apache.xerces.impl.xpath.regex.Op$ConditionOp) r41;

        $i11 = r43.<org.apache.xerces.impl.xpath.regex.Op$ConditionOp: int refNumber>;

        if $i11 <= 0 goto label68;

        $i13 = r43.<org.apache.xerces.impl.xpath.regex.Op$ConditionOp: int refNumber>;

        $i12 = r8.<org.apache.xerces.impl.xpath.regex.RegularExpression: int nofparen>;

        if $i13 < $i12 goto label65;

        $r50 = new java.lang.RuntimeException;

        $r49 = new java.lang.StringBuffer;

        specialinvoke $r49.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Internal Error: Reference number must be more than zero: ");

        $i18 = r43.<org.apache.xerces.impl.xpath.regex.Op$ConditionOp: int refNumber>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i18);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r50.<java.lang.RuntimeException: void <init>(java.lang.String)>($r16);

        throw $r50;

     label65:
        $r9 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        $i14 = r43.<org.apache.xerces.impl.xpath.regex.Op$ConditionOp: int refNumber>;

        $i15 = virtualinvoke $r9.<org.apache.xerces.impl.xpath.regex.Match: int getBeginning(int)>($i14);

        if $i15 < 0 goto label66;

        $r11 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        $i16 = r43.<org.apache.xerces.impl.xpath.regex.Op$ConditionOp: int refNumber>;

        $i17 = virtualinvoke $r11.<org.apache.xerces.impl.xpath.regex.Match: int getEnd(int)>($i16);

        if $i17 < 0 goto label66;

        r41 = r43.<org.apache.xerces.impl.xpath.regex.Op$ConditionOp: org.apache.xerces.impl.xpath.regex.Op yes>;

        goto label88;

     label66:
        $r10 = r43.<org.apache.xerces.impl.xpath.regex.Op$ConditionOp: org.apache.xerces.impl.xpath.regex.Op no>;

        if $r10 == null goto label67;

        r41 = r43.<org.apache.xerces.impl.xpath.regex.Op$ConditionOp: org.apache.xerces.impl.xpath.regex.Op no>;

        goto label88;

     label67:
        r41 = r43.<org.apache.xerces.impl.xpath.regex.Op$ConditionOp: org.apache.xerces.impl.xpath.regex.Op next>;

        goto label88;

     label68:
        virtualinvoke $r45.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r41);

        virtualinvoke $r46.<org.apache.xerces.util.IntStack: void push(int)>(i62);

        r41 = r43.<org.apache.xerces.impl.xpath.regex.Op$ConditionOp: org.apache.xerces.impl.xpath.regex.Op condition>;

        goto label88;

     label69:
        $r52 = new java.lang.RuntimeException;

        $r51 = new java.lang.StringBuffer;

        specialinvoke $r51.<java.lang.StringBuffer: void <init>()>();

        $r38 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unknown operation type: ");

        $i61 = r41.<org.apache.xerces.impl.xpath.regex.Op: int type>;

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i61);

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r52.<java.lang.RuntimeException: void <init>(java.lang.String)>($r40);

        throw $r52;

     label70:
        $z1 = virtualinvoke $r45.<java.util.Stack: boolean isEmpty()>();

        if $z1 == 0 goto label71;

        return i66;

     label71:
        $r4 = virtualinvoke $r45.<java.util.Stack: java.lang.Object pop()>();

        r41 = (org.apache.xerces.impl.xpath.regex.Op) $r4;

        $i0 = virtualinvoke $r46.<org.apache.xerces.util.IntStack: int pop()>();

        i62 = $i0;

        $i1 = r41.<org.apache.xerces.impl.xpath.regex.Op: int type>;

        tableswitch($i1)
        {
            case 7: goto label72;
            case 8: goto label73;
            case 9: goto label72;
            case 10: goto label73;
            case 11: goto label74;
            case 12: goto label88;
            case 13: goto label88;
            case 14: goto label88;
            case 15: goto label76;
            case 16: goto label88;
            case 17: goto label88;
            case 18: goto label88;
            case 19: goto label88;
            case 20: goto label78;
            case 21: goto label80;
            case 22: goto label78;
            case 23: goto label80;
            case 24: goto label83;
            case 25: goto label82;
            case 26: goto label84;
            default: goto label88;
        };

     label72:
        if i66 >= 0 goto label88;

        r41 = r41.<org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op next>;

        z14 = 0;

        goto label88;

     label73:
        if i66 >= 0 goto label88;

        r41 = virtualinvoke r41.<org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op getChild()>();

        z14 = 0;

        goto label88;

     label74:
        $i5 = virtualinvoke $r46.<org.apache.xerces.util.IntStack: int pop()>();

        if i66 >= 0 goto label88;

        i81 = $i5 + 1;

        $i6 = virtualinvoke r41.<org.apache.xerces.impl.xpath.regex.Op: int size()>();

        if i81 >= $i6 goto label75;

        virtualinvoke $r45.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r41);

        virtualinvoke $r46.<org.apache.xerces.util.IntStack: void push(int)>(i81);

        virtualinvoke $r46.<org.apache.xerces.util.IntStack: void push(int)>($i0);

        r41 = virtualinvoke r41.<org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op elementAt(int)>(i81);

        z14 = 0;

        goto label88;

     label75:
        $i101 = (int) -1;

        i66 = $i101;

        goto label88;

     label76:
        $i2 = virtualinvoke r41.<org.apache.xerces.impl.xpath.regex.Op: int getData()>();

        $i3 = virtualinvoke $r46.<org.apache.xerces.util.IntStack: int pop()>();

        if i66 >= 0 goto label88;

        if $i2 <= 0 goto label77;

        $r7 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        virtualinvoke $r7.<org.apache.xerces.impl.xpath.regex.Match: void setBeginning(int,int)>($i2, $i3);

        goto label88;

     label77:
        $r6 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        $i4 = neg $i2;

        virtualinvoke $r6.<org.apache.xerces.impl.xpath.regex.Match: void setEnd(int,int)>($i4, $i3);

        goto label88;

     label78:
        i63 = virtualinvoke $r46.<org.apache.xerces.util.IntStack: int pop()>();

        if 0 > i66 goto label79;

        r41 = r41.<org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op next>;

        z14 = 0;

     label79:
        $i103 = (int) -1;

        i66 = $i103;

        goto label88;

     label80:
        i63 = virtualinvoke $r46.<org.apache.xerces.util.IntStack: int pop()>();

        if 0 <= i66 goto label81;

        r41 = r41.<org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op next>;

        z14 = 0;

     label81:
        $i105 = (int) -1;

        i66 = $i105;

        goto label88;

     label82:
        i64 = virtualinvoke $r46.<org.apache.xerces.util.IntStack: int pop()>();

     label83:
        if i66 < 0 goto label88;

        i62 = i66;

        r41 = r41.<org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op next>;

        z14 = 0;

        goto label88;

     label84:
        r44 = (org.apache.xerces.impl.xpath.regex.Op$ConditionOp) r41;

        if 0 > i66 goto label85;

        r41 = r44.<org.apache.xerces.impl.xpath.regex.Op$ConditionOp: org.apache.xerces.impl.xpath.regex.Op yes>;

        goto label87;

     label85:
        $r5 = r44.<org.apache.xerces.impl.xpath.regex.Op$ConditionOp: org.apache.xerces.impl.xpath.regex.Op no>;

        if $r5 == null goto label86;

        r41 = r44.<org.apache.xerces.impl.xpath.regex.Op$ConditionOp: org.apache.xerces.impl.xpath.regex.Op no>;

        goto label87;

     label86:
        r41 = r44.<org.apache.xerces.impl.xpath.regex.Op$ConditionOp: org.apache.xerces.impl.xpath.regex.Op next>;

     label87:
        z14 = 0;

        goto label88;

     label88:
        if z14 != 0 goto label70;

        goto label01;
    }

    private boolean matchChar(int, int, boolean)
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression r0;
        int i0, i1;
        boolean z0, $z1;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        $z1 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: boolean matchIgnoreCase(int,int)>(i0, i1);

        goto label3;

     label1:
        if i0 != i1 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    boolean matchAnchor(org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget, org.apache.xerces.impl.xpath.regex.Op, org.apache.xerces.impl.xpath.regex.RegularExpression$Context, int, int)
    {
        org.apache.xerces.impl.xpath.regex.Op r0;
        org.apache.xerces.impl.xpath.regex.RegularExpression r3;
        org.apache.xerces.impl.xpath.regex.RegularExpression$Context r1;
        org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, $z8;
        int $i0, i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i21, $i23, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i60, $i63, $i64, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74;
        char $c16, $c22, $c24, $c25, $c37, $c59, $c61, $c62, $c65;

        r3 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression;

        r2 := @parameter0: org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget;

        r0 := @parameter1: org.apache.xerces.impl.xpath.regex.Op;

        r1 := @parameter2: org.apache.xerces.impl.xpath.regex.RegularExpression$Context;

        i1 := @parameter3: int;

        i4 := @parameter4: int;

        $i0 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.Op: int getData()>();

        lookupswitch($i0)
        {
            case 36: goto label06;
            case 60: goto label25;
            case 62: goto label29;
            case 64: goto label04;
            case 65: goto label11;
            case 66: goto label19;
            case 90: goto label12;
            case 94: goto label01;
            case 98: goto label16;
            case 122: goto label15;
            default: goto label33;
        };

     label01:
        $z0 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: boolean isSet(int,int)>(i4, 8);

        if $z0 == 0 goto label03;

        $i12 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        if i1 == $i12 goto label33;

        $i13 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        if i1 <= $i13 goto label02;

        $i14 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        if i1 >= $i14 goto label02;

        $i15 = i1 - 1;

        $c16 = virtualinvoke r2.<org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget: char charAt(int)>($i15);

        $i66 = (int) $c16;

        $z1 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: boolean isEOLChar(int)>($i66);

        if $z1 != 0 goto label33;

     label02:
        return 0;

     label03:
        $i11 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        if i1 == $i11 goto label33;

        return 0;

     label04:
        $i34 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        if i1 == $i34 goto label33;

        $i35 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        if i1 <= $i35 goto label05;

        $i36 = i1 - 1;

        $c37 = virtualinvoke r2.<org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget: char charAt(int)>($i36);

        $i67 = (int) $c37;

        $z3 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: boolean isEOLChar(int)>($i67);

        if $z3 != 0 goto label33;

     label05:
        return 0;

     label06:
        $z4 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: boolean isSet(int,int)>(i4, 8);

        if $z4 == 0 goto label08;

        $i63 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        if i1 == $i63 goto label33;

        $i64 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        if i1 >= $i64 goto label07;

        $c65 = virtualinvoke r2.<org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget: char charAt(int)>(i1);

        $i68 = (int) $c65;

        $z6 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: boolean isEOLChar(int)>($i68);

        if $z6 != 0 goto label33;

     label07:
        return 0;

     label08:
        $i54 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        if i1 == $i54 goto label33;

        $i56 = i1 + 1;

        $i55 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        if $i56 != $i55 goto label09;

        $c62 = virtualinvoke r2.<org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget: char charAt(int)>(i1);

        $i69 = (int) $c62;

        $z5 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: boolean isEOLChar(int)>($i69);

        if $z5 != 0 goto label33;

     label09:
        $i58 = i1 + 2;

        $i57 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        if $i58 != $i57 goto label10;

        $c59 = virtualinvoke r2.<org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget: char charAt(int)>(i1);

        $i70 = (int) $c59;

        if $i70 != 13 goto label10;

        $i60 = i1 + 1;

        $c61 = virtualinvoke r2.<org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget: char charAt(int)>($i60);

        $i71 = (int) $c61;

        if $i71 == 10 goto label33;

     label10:
        return 0;

     label11:
        $i33 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        if i1 == $i33 goto label33;

        return 0;

     label12:
        $i17 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        if i1 == $i17 goto label33;

        $i19 = i1 + 1;

        $i18 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        if $i19 != $i18 goto label13;

        $c25 = virtualinvoke r2.<org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget: char charAt(int)>(i1);

        $i72 = (int) $c25;

        $z2 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: boolean isEOLChar(int)>($i72);

        if $z2 != 0 goto label33;

     label13:
        $i21 = i1 + 2;

        $i20 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        if $i21 != $i20 goto label14;

        $c22 = virtualinvoke r2.<org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget: char charAt(int)>(i1);

        $i73 = (int) $c22;

        if $i73 != 13 goto label14;

        $i23 = i1 + 1;

        $c24 = virtualinvoke r2.<org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget: char charAt(int)>($i23);

        $i74 = (int) $c24;

        if $i74 == 10 goto label33;

     label14:
        return 0;

     label15:
        $i2 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        if i1 == $i2 goto label33;

        return 0;

     label16:
        $i3 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int length>;

        if $i3 != 0 goto label17;

        return 0;

     label17:
        $i6 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        $i5 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        $i7 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: int getWordType(org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget,int,int,int,int)>(r2, $i6, $i5, i1, i4);

        if $i7 != 0 goto label18;

        return 0;

     label18:
        $i9 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        $i8 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        $i10 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: int getPreviousWordType(org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget,int,int,int,int)>(r2, $i9, $i8, i1, i4);

        if $i7 != $i10 goto label33;

        return 0;

     label19:
        $i26 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int length>;

        if $i26 != 0 goto label20;

        z7 = 1;

        goto label24;

     label20:
        $i28 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        $i27 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        $i29 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: int getWordType(org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget,int,int,int,int)>(r2, $i28, $i27, i1, i4);

        if $i29 == 0 goto label21;

        $i31 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        $i30 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        $i32 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: int getPreviousWordType(org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget,int,int,int,int)>(r2, $i31, $i30, i1, i4);

        if $i29 != $i32 goto label22;

     label21:
        $z8 = 1;

        goto label23;

     label22:
        $z8 = 0;

     label23:
        z7 = $z8;

     label24:
        if z7 != 0 goto label33;

        return 0;

     label25:
        $i46 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int length>;

        if $i46 == 0 goto label26;

        $i47 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        if i1 != $i47 goto label27;

     label26:
        return 0;

     label27:
        $i49 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        $i48 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        $i50 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: int getWordType(org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget,int,int,int,int)>(r2, $i49, $i48, i1, i4);

        if $i50 != 1 goto label28;

        $i52 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        $i51 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        $i53 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: int getPreviousWordType(org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget,int,int,int,int)>(r2, $i52, $i51, i1, i4);

        if $i53 == 2 goto label33;

     label28:
        return 0;

     label29:
        $i38 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int length>;

        if $i38 == 0 goto label30;

        $i39 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        if i1 != $i39 goto label31;

     label30:
        return 0;

     label31:
        $i41 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        $i40 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        $i42 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: int getWordType(org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget,int,int,int,int)>(r2, $i41, $i40, i1, i4);

        if $i42 != 2 goto label32;

        $i44 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        $i43 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        $i45 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: int getPreviousWordType(org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget,int,int,int,int)>(r2, $i44, $i43, i1, i4);

        if $i45 == 1 goto label33;

     label32:
        return 0;

     label33:
        return 1;
    }

    private static final int getPreviousWordType(org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget, int, int, int, int)
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget r0;
        int i0, i1, i2, i3, i4, i5, $i7, $i9;

        r0 := @parameter0: org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i3 := @parameter3: int;

        i2 := @parameter4: int;

        $i7 = (int) -1;

        i4 = i3 + $i7;

        i5 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: int getWordType(org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget,int,int,int,int)>(r0, i0, i1, i4, i2);

        goto label2;

     label1:
        $i9 = (int) -1;

        i4 = i4 + $i9;

        i5 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: int getWordType(org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget,int,int,int,int)>(r0, i0, i1, i4, i2);

     label2:
        if i5 == 0 goto label1;

        return i5;
    }

    private static final int getWordType(org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget, int, int, int, int)
    {
        int i0, i1, i2, i4, $i5;
        char $c3;
        org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget r0;

        r0 := @parameter0: org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i0 := @parameter3: int;

        i4 := @parameter4: int;

        if i0 < i1 goto label1;

        if i0 < i2 goto label2;

     label1:
        return 2;

     label2:
        $c3 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression$ExpressionTarget: char charAt(int)>(i0);

        $i5 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: int getWordType0(char,int)>($c3, i4);

        return $i5;
    }

    public boolean matches(java.text.CharacterIterator)
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression r0;
        java.text.CharacterIterator r1;
        boolean $z0;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression;

        r1 := @parameter0: java.text.CharacterIterator;

        $z0 = virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: boolean matches(java.text.CharacterIterator,org.apache.xerces.impl.xpath.regex.Match)>(r1, null);

        return $z0;
    }

    public boolean matches(java.text.CharacterIterator, org.apache.xerces.impl.xpath.regex.Match)
    {
        org.apache.xerces.impl.xpath.regex.Match $r9, $r10, $r11, $r20, $r21, $r23, $r25, $r26, $r27, r32, $r39;
        java.text.CharacterIterator r0;
        org.apache.xerces.impl.xpath.regex.RangeToken $r35, r36;
        org.apache.xerces.impl.xpath.regex.Op $r2, $r7, $r8, $r12, $r13, $r14, $r15, $r16, $r17, $r24;
        org.apache.xerces.impl.xpath.regex.RegularExpression r1;
        org.apache.xerces.impl.xpath.regex.RegularExpression$Context $r3, r4, $r5, $r33, r34, $r37, $r38;
        java.lang.Throwable $r30, $r31;
        java.lang.String $r6, $r22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, $z8;
        org.apache.xerces.impl.xpath.regex.BMPattern $r18, $r19;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, i39, i40, i41, $i43, $i44, $i45, $i46, $i47, $i48;
        char $c7, $c13, $c17;

        r1 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression;

        r0 := @parameter0: java.text.CharacterIterator;

        r32 := @parameter1: org.apache.xerces.impl.xpath.regex.Match;

        $i0 = interfaceinvoke r0.<java.text.CharacterIterator: int getBeginIndex()>();

        $i1 = interfaceinvoke r0.<java.text.CharacterIterator: int getEndIndex()>();

        entermonitor r1;

     label01:
        $r2 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        if $r2 != null goto label02;

        virtualinvoke r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: void prepare()>();

     label02:
        $r3 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.RegularExpression$Context context>;

        if $r3 != null goto label03;

        $r37 = new org.apache.xerces.impl.xpath.regex.RegularExpression$Context;

        specialinvoke $r37.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: void <init>()>();

        r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.RegularExpression$Context context> = $r37;

     label03:
        exitmonitor r1;

        goto label05;

     label04:
        $r31 := @caughtexception;

        exitmonitor r1;

        throw $r31;

     label05:
        r4 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.RegularExpression$Context context>;

        entermonitor r4;

     label06:
        $r5 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.RegularExpression$Context context>;

        $z0 = $r5.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: boolean inuse>;

        if $z0 == 0 goto label07;

        $r38 = new org.apache.xerces.impl.xpath.regex.RegularExpression$Context;

        $r33 = $r38;

        specialinvoke $r38.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: void <init>()>();

        goto label08;

     label07:
        $r33 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.RegularExpression$Context context>;

     label08:
        r34 = $r33;

        $i2 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: int numberOfClosures>;

        virtualinvoke $r33.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: void reset(java.text.CharacterIterator,int,int,int)>(r0, $i0, $i1, $i2);

        exitmonitor r4;

        goto label10;

     label09:
        $r30 := @caughtexception;

        exitmonitor r4;

        throw $r30;

     label10:
        if r32 == null goto label11;

        $i37 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: int nofparen>;

        virtualinvoke r32.<org.apache.xerces.impl.xpath.regex.Match: void setNumberOfGroups(int)>($i37);

        virtualinvoke r32.<org.apache.xerces.impl.xpath.regex.Match: void setSource(java.text.CharacterIterator)>(r0);

        goto label12;

     label11:
        $z1 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: boolean hasBackReferences>;

        if $z1 == 0 goto label12;

        $r39 = new org.apache.xerces.impl.xpath.regex.Match;

        specialinvoke $r39.<org.apache.xerces.impl.xpath.regex.Match: void <init>()>();

        r32 = $r39;

        $i36 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: int nofparen>;

        virtualinvoke $r39.<org.apache.xerces.impl.xpath.regex.Match: void setNumberOfGroups(int)>($i36);

     label12:
        r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match> = r32;

        $i38 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        $z6 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: boolean isSet(int,int)>($i38, 512);

        if $z6 == 0 goto label15;

        $r24 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        $i32 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        $i31 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        $i33 = specialinvoke r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: int match(org.apache.xerces.impl.xpath.regex.RegularExpression$Context,org.apache.xerces.impl.xpath.regex.Op,int,int,int)>(r34, $r24, $i32, 1, $i31);

        $i34 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        if $i33 != $i34 goto label14;

        $r25 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        if $r25 == null goto label13;

        $r26 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        $i35 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        virtualinvoke $r26.<org.apache.xerces.impl.xpath.regex.Match: void setBeginning(int,int)>(0, $i35);

        $r27 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        virtualinvoke $r27.<org.apache.xerces.impl.xpath.regex.Match: void setEnd(int,int)>(0, $i33);

     label13:
        virtualinvoke r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: void setInUse(boolean)>(0);

        return 1;

     label14:
        return 0;

     label15:
        $z2 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: boolean fixedStringOnly>;

        if $z2 == 0 goto label18;

        $r19 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.BMPattern fixedStringTable>;

        $i27 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        $i26 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        $i28 = virtualinvoke $r19.<org.apache.xerces.impl.xpath.regex.BMPattern: int matches(java.text.CharacterIterator,int,int)>(r0, $i27, $i26);

        if $i28 < 0 goto label17;

        $r20 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        if $r20 == null goto label16;

        $r21 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        virtualinvoke $r21.<org.apache.xerces.impl.xpath.regex.Match: void setBeginning(int,int)>(0, $i28);

        $r23 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        $r22 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: java.lang.String fixedString>;

        $i29 = virtualinvoke $r22.<java.lang.String: int length()>();

        $i30 = $i28 + $i29;

        virtualinvoke $r23.<org.apache.xerces.impl.xpath.regex.Match: void setEnd(int,int)>(0, $i30);

     label16:
        virtualinvoke r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: void setInUse(boolean)>(0);

        return 1;

     label17:
        virtualinvoke r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: void setInUse(boolean)>(0);

        return 0;

     label18:
        $r6 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: java.lang.String fixedString>;

        if $r6 == null goto label19;

        $r18 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.BMPattern fixedStringTable>;

        $i23 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        $i22 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        $i24 = virtualinvoke $r18.<org.apache.xerces.impl.xpath.regex.BMPattern: int matches(java.text.CharacterIterator,int,int)>(r0, $i23, $i22);

        if $i24 >= 0 goto label19;

        virtualinvoke r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: void setInUse(boolean)>(0);

        return 0;

     label19:
        $i4 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        $i3 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: int minlength>;

        $i25 = $i4 - $i3;

        $i43 = (int) -1;

        i39 = $i43;

        $r7 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        if $r7 == null goto label26;

        $r13 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        $i14 = $r13.<org.apache.xerces.impl.xpath.regex.Op: int type>;

        if $i14 != 7 goto label26;

        $r14 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        $r15 = virtualinvoke $r14.<org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op getChild()>();

        $i15 = $r15.<org.apache.xerces.impl.xpath.regex.Op: int type>;

        if $i15 != 0 goto label26;

        $i16 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        $z4 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: boolean isSet(int,int)>($i16, 4);

        if $z4 == 0 goto label20;

        i40 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        $r17 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        $i21 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        $i20 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        i39 = specialinvoke r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: int match(org.apache.xerces.impl.xpath.regex.RegularExpression$Context,org.apache.xerces.impl.xpath.regex.Op,int,int,int)>(r34, $r17, $i21, 1, $i20);

        goto label36;

     label20:
        z7 = 1;

        i40 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        goto label25;

     label21:
        $c17 = interfaceinvoke r0.<java.text.CharacterIterator: char setIndex(int)>(i40);

        $i44 = (int) $c17;

        $z5 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: boolean isEOLChar(int)>($i44);

        if $z5 == 0 goto label22;

        z7 = 1;

        goto label24;

     label22:
        if z7 == 0 goto label23;

        $r16 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        $i18 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        $i19 = specialinvoke r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: int match(org.apache.xerces.impl.xpath.regex.RegularExpression$Context,org.apache.xerces.impl.xpath.regex.Op,int,int,int)>(r34, $r16, i40, 1, $i18);

        i39 = $i19;

        if 0 > $i19 goto label23;

        goto label36;

     label23:
        z7 = 0;

     label24:
        i40 = i40 + 1;

     label25:
        if i40 <= $i25 goto label21;

        goto label36;

     label26:
        $r35 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.RangeToken firstChar>;

        if $r35 == null goto label32;

        r36 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.RangeToken firstChar>;

        i40 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        goto label31;

     label27:
        $c7 = interfaceinvoke r0.<java.text.CharacterIterator: char setIndex(int)>(i40);

        $i45 = (int) $c7;

        i41 = $i45;

        $i46 = (int) $c7;

        $z3 = staticinvoke <org.apache.xerces.impl.xpath.regex.REUtil: boolean isHighSurrogate(int)>($i46);

        if $z3 == 0 goto label28;

        $i11 = i40 + 1;

        $i10 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int limit>;

        if $i11 >= $i10 goto label28;

        $i12 = i40 + 1;

        $c13 = interfaceinvoke r0.<java.text.CharacterIterator: char setIndex(int)>($i12);

        $i47 = (int) $c7;

        $i48 = (int) $c13;

        i41 = staticinvoke <org.apache.xerces.impl.xpath.regex.REUtil: int composeFromSurrogates(int,int)>($i47, $i48);

     label28:
        $z8 = virtualinvoke r36.<org.apache.xerces.impl.xpath.regex.RangeToken: boolean match(int)>(i41);

        if $z8 != 0 goto label29;

        goto label30;

     label29:
        $r12 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        $i8 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        $i9 = specialinvoke r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: int match(org.apache.xerces.impl.xpath.regex.RegularExpression$Context,org.apache.xerces.impl.xpath.regex.Op,int,int,int)>(r34, $r12, i40, 1, $i8);

        i39 = $i9;

        if 0 > $i9 goto label30;

        goto label36;

     label30:
        i40 = i40 + 1;

     label31:
        if i40 <= $i25 goto label27;

        goto label36;

     label32:
        i40 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: int start>;

        goto label35;

     label33:
        $r8 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        $i5 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        $i6 = specialinvoke r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: int match(org.apache.xerces.impl.xpath.regex.RegularExpression$Context,org.apache.xerces.impl.xpath.regex.Op,int,int,int)>(r34, $r8, i40, 1, $i5);

        i39 = $i6;

        if 0 > $i6 goto label34;

        goto label36;

     label34:
        i40 = i40 + 1;

     label35:
        if i40 <= $i25 goto label33;

     label36:
        if i39 < 0 goto label38;

        $r9 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        if $r9 == null goto label37;

        $r10 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        virtualinvoke $r10.<org.apache.xerces.impl.xpath.regex.Match: void setBeginning(int,int)>(0, i40);

        $r11 = r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: org.apache.xerces.impl.xpath.regex.Match match>;

        virtualinvoke $r11.<org.apache.xerces.impl.xpath.regex.Match: void setEnd(int,int)>(0, i39);

     label37:
        virtualinvoke r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: void setInUse(boolean)>(0);

        return 1;

     label38:
        virtualinvoke r34.<org.apache.xerces.impl.xpath.regex.RegularExpression$Context: void setInUse(boolean)>(0);

        return 0;

        catch java.lang.Throwable from label01 to label04 with label04;
        catch java.lang.Throwable from label06 to label09 with label09;
    }

    void prepare()
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.xerces.impl.xpath.regex.BMPattern $r8, $r27;
        org.apache.xerces.impl.xpath.regex.RangeToken $r23;
        org.apache.xerces.impl.xpath.regex.Op $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r20, $r22, $r25;
        org.apache.xerces.impl.xpath.regex.RegularExpression r0;
        org.apache.xerces.impl.xpath.regex.Token $r1, $r2, $r4, $r5, $r6, $r24;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        java.lang.String $r7, $r9, $r10, $r17, $r19, $r21, $r28, $r29, $r30;
        char $c11;
        org.apache.xerces.impl.xpath.regex.Token$FixedStringContainer $r3;
        char[] r26;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression;

        $r1 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Token tokentree>;

        specialinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: void compile(org.apache.xerces.impl.xpath.regex.Token)>($r1);

        $r2 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Token tokentree>;

        $i0 = virtualinvoke $r2.<org.apache.xerces.impl.xpath.regex.Token: int getMinLength()>();

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int minlength> = $i0;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.RangeToken firstChar> = null;

        $i1 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        $z0 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: boolean isSet(int,int)>($i1, 128);

        if $z0 != 0 goto label01;

        $i14 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        $z3 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: boolean isSet(int,int)>($i14, 512);

        if $z3 != 0 goto label01;

        $r23 = staticinvoke <org.apache.xerces.impl.xpath.regex.Token: org.apache.xerces.impl.xpath.regex.RangeToken createRange()>();

        $r24 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Token tokentree>;

        $i15 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        $i16 = virtualinvoke $r24.<org.apache.xerces.impl.xpath.regex.Token: int analyzeFirstCharacter(org.apache.xerces.impl.xpath.regex.RangeToken,int)>($r23, $i15);

        if $i16 != 1 goto label01;

        virtualinvoke $r23.<org.apache.xerces.impl.xpath.regex.RangeToken: void compactRanges()>();

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.RangeToken firstChar> = $r23;

     label01:
        $r25 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        if $r25 == null goto label06;

        $r11 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        $i7 = $r11.<org.apache.xerces.impl.xpath.regex.Op: int type>;

        if $i7 == 6 goto label02;

        $r22 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        $i13 = $r22.<org.apache.xerces.impl.xpath.regex.Op: int type>;

        if $i13 != 1 goto label06;

     label02:
        $r12 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        $r13 = $r12.<org.apache.xerces.impl.xpath.regex.Op: org.apache.xerces.impl.xpath.regex.Op next>;

        if $r13 != null goto label06;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: boolean fixedStringOnly> = 1;

        $r14 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        $i8 = $r14.<org.apache.xerces.impl.xpath.regex.Op: int type>;

        if $i8 != 6 goto label03;

        $r20 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        $r21 = virtualinvoke $r20.<org.apache.xerces.impl.xpath.regex.Op: java.lang.String getString()>();

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: java.lang.String fixedString> = $r21;

        goto label05;

     label03:
        $r15 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        $i9 = virtualinvoke $r15.<org.apache.xerces.impl.xpath.regex.Op: int getData()>();

        if $i9 < 65536 goto label04;

        $r18 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        $i12 = virtualinvoke $r18.<org.apache.xerces.impl.xpath.regex.Op: int getData()>();

        $r19 = staticinvoke <org.apache.xerces.impl.xpath.regex.REUtil: java.lang.String decomposeToSurrogates(int)>($i12);

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: java.lang.String fixedString> = $r19;

        goto label05;

     label04:
        r26 = newarray (char)[1];

        $r16 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations>;

        $i10 = virtualinvoke $r16.<org.apache.xerces.impl.xpath.regex.Op: int getData()>();

        $c11 = (char) $i10;

        r26[0] = $c11;

        $r17 = new java.lang.String;

        specialinvoke $r17.<java.lang.String: void <init>(char[])>(r26);

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: java.lang.String fixedString> = $r17;

     label05:
        $i17 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int fixedStringOptions> = $i17;

        $r27 = new org.apache.xerces.impl.xpath.regex.BMPattern;

        $r28 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: java.lang.String fixedString>;

        $i18 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int fixedStringOptions>;

        $z4 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: boolean isSet(int,int)>($i18, 2);

        specialinvoke $r27.<org.apache.xerces.impl.xpath.regex.BMPattern: void <init>(java.lang.String,int,boolean)>($r28, 256, $z4);

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.BMPattern fixedStringTable> = $r27;

        goto label10;

     label06:
        $i19 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        $z5 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: boolean isSet(int,int)>($i19, 256);

        if $z5 != 0 goto label10;

        $i2 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        $z1 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: boolean isSet(int,int)>($i2, 512);

        if $z1 != 0 goto label10;

        $r3 = new org.apache.xerces.impl.xpath.regex.Token$FixedStringContainer;

        specialinvoke $r3.<org.apache.xerces.impl.xpath.regex.Token$FixedStringContainer: void <init>()>();

        $r4 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Token tokentree>;

        $i3 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        virtualinvoke $r4.<org.apache.xerces.impl.xpath.regex.Token: void findFixedString(org.apache.xerces.impl.xpath.regex.Token$FixedStringContainer,int)>($r3, $i3);

        $r5 = $r3.<org.apache.xerces.impl.xpath.regex.Token$FixedStringContainer: org.apache.xerces.impl.xpath.regex.Token token>;

        if $r5 != null goto label07;

        $r29 = null;

        goto label08;

     label07:
        $r6 = $r3.<org.apache.xerces.impl.xpath.regex.Token$FixedStringContainer: org.apache.xerces.impl.xpath.regex.Token token>;

        $r29 = virtualinvoke $r6.<org.apache.xerces.impl.xpath.regex.Token: java.lang.String getString()>();

     label08:
        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: java.lang.String fixedString> = $r29;

        $i4 = $r3.<org.apache.xerces.impl.xpath.regex.Token$FixedStringContainer: int options>;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int fixedStringOptions> = $i4;

        $r7 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: java.lang.String fixedString>;

        if $r7 == null goto label09;

        $r10 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: java.lang.String fixedString>;

        $i6 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i6 >= 2 goto label09;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: java.lang.String fixedString> = null;

     label09:
        $r30 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: java.lang.String fixedString>;

        if $r30 == null goto label10;

        $r8 = new org.apache.xerces.impl.xpath.regex.BMPattern;

        $r9 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: java.lang.String fixedString>;

        $i5 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int fixedStringOptions>;

        $z2 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: boolean isSet(int,int)>($i5, 2);

        specialinvoke $r8.<org.apache.xerces.impl.xpath.regex.BMPattern: void <init>(java.lang.String,int,boolean)>($r9, 256, $z2);

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.BMPattern fixedStringTable> = $r8;

     label10:
        return;
    }

    private static final boolean isSet(int, int)
    {
        int i0, i1, $i2;
        boolean $z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 & i1;

        if $i2 != i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void <init>(java.lang.String) throws org.apache.xerces.impl.xpath.regex.ParseException
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression r0;
        java.lang.String r1;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: void <init>(java.lang.String,java.lang.String)>(r1, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.String) throws org.apache.xerces.impl.xpath.regex.ParseException
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: boolean hasBackReferences> = 0;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations> = null;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.RegularExpression$Context context> = null;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.RangeToken firstChar> = null;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: java.lang.String fixedString> = null;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.BMPattern fixedStringTable> = null;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: boolean fixedStringOnly> = 0;

        virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: void setPattern(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.util.Locale) throws org.apache.xerces.impl.xpath.regex.ParseException
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression r0;
        java.util.Locale r3;
        java.lang.String r1, r2;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Locale;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: boolean hasBackReferences> = 0;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations> = null;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.RegularExpression$Context context> = null;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.RangeToken firstChar> = null;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: java.lang.String fixedString> = null;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.BMPattern fixedStringTable> = null;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: boolean fixedStringOnly> = 0;

        virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: void setPattern(java.lang.String,java.lang.String,java.util.Locale)>(r1, r2, r3);

        return;
    }

    void <init>(java.lang.String, org.apache.xerces.impl.xpath.regex.Token, int, boolean, int)
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression r0;
        org.apache.xerces.impl.xpath.regex.Token r2;
        int i0, i1;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.xerces.impl.xpath.regex.Token;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        i1 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: boolean hasBackReferences> = 0;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations> = null;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.RegularExpression$Context context> = null;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.RangeToken firstChar> = null;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: java.lang.String fixedString> = null;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.BMPattern fixedStringTable> = null;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: boolean fixedStringOnly> = 0;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: java.lang.String regex> = r1;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Token tokentree> = r2;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int nofparen> = i0;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options> = i1;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: boolean hasBackReferences> = z0;

        return;
    }

    public void setPattern(java.lang.String) throws org.apache.xerces.impl.xpath.regex.ParseException
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression r0;
        java.lang.String r1;
        java.util.Locale $r2;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: void setPattern(java.lang.String,java.util.Locale)>(r1, $r2);

        return;
    }

    public void setPattern(java.lang.String, java.util.Locale) throws org.apache.xerces.impl.xpath.regex.ParseException
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression r0;
        java.util.Locale r2;
        int $i0;
        java.lang.String r1;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Locale;

        $i0 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        specialinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: void setPattern(java.lang.String,int,java.util.Locale)>(r1, $i0, r2);

        return;
    }

    private void setPattern(java.lang.String, int, java.util.Locale) throws org.apache.xerces.impl.xpath.regex.ParseException
    {
        org.apache.xerces.impl.xpath.regex.ParserForXMLSchema $r6;
        org.apache.xerces.impl.xpath.regex.RegularExpression r0;
        java.util.Locale r2;
        org.apache.xerces.impl.xpath.regex.Token $r4;
        int i0, $i1, $i2, $i3;
        java.lang.String r1, $r3;
        org.apache.xerces.impl.xpath.regex.RegexParser $r5, $r7;
        boolean $z0, $z1;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.util.Locale;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: java.lang.String regex> = r1;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options> = i0;

        $i1 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        $z0 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: boolean isSet(int,int)>($i1, 512);

        if $z0 == 0 goto label1;

        $r6 = new org.apache.xerces.impl.xpath.regex.ParserForXMLSchema;

        $r5 = $r6;

        specialinvoke $r6.<org.apache.xerces.impl.xpath.regex.ParserForXMLSchema: void <init>(java.util.Locale)>(r2);

        goto label2;

     label1:
        $r7 = new org.apache.xerces.impl.xpath.regex.RegexParser;

        $r5 = $r7;

        specialinvoke $r7.<org.apache.xerces.impl.xpath.regex.RegexParser: void <init>(java.util.Locale)>(r2);

     label2:
        $r3 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: java.lang.String regex>;

        $i2 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        $r4 = virtualinvoke $r5.<org.apache.xerces.impl.xpath.regex.RegexParser: org.apache.xerces.impl.xpath.regex.Token parse(java.lang.String,int)>($r3, $i2);

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Token tokentree> = $r4;

        $i3 = $r5.<org.apache.xerces.impl.xpath.regex.RegexParser: int parennumber>;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int nofparen> = $i3;

        $z1 = $r5.<org.apache.xerces.impl.xpath.regex.RegexParser: boolean hasBackReferences>;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: boolean hasBackReferences> = $z1;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Op operations> = null;

        r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.RegularExpression$Context context> = null;

        return;
    }

    public void setPattern(java.lang.String, java.lang.String) throws org.apache.xerces.impl.xpath.regex.ParseException
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression r0;
        java.util.Locale $r3;
        java.lang.String r1, r2;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        virtualinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: void setPattern(java.lang.String,java.lang.String,java.util.Locale)>(r1, r2, $r3);

        return;
    }

    public void setPattern(java.lang.String, java.lang.String, java.util.Locale) throws org.apache.xerces.impl.xpath.regex.ParseException
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression r0;
        java.util.Locale r3;
        int $i0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Locale;

        $i0 = staticinvoke <org.apache.xerces.impl.xpath.regex.REUtil: int parseOptions(java.lang.String)>(r2);

        specialinvoke r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: void setPattern(java.lang.String,int,java.util.Locale)>(r1, $i0, r3);

        return;
    }

    public java.lang.String getPattern()
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression;

        $r1 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: java.lang.String regex>;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression r0;
        org.apache.xerces.impl.xpath.regex.Token $r1;
        int $i0;
        java.lang.String $r2;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression;

        $r1 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: org.apache.xerces.impl.xpath.regex.Token tokentree>;

        $i0 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        $r2 = virtualinvoke $r1.<org.apache.xerces.impl.xpath.regex.Token: java.lang.String toString(int)>($i0);

        return $r2;
    }

    public java.lang.String getOptions()
    {
        int $i0;
        org.apache.xerces.impl.xpath.regex.RegularExpression r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression;

        $i0 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        $r1 = staticinvoke <org.apache.xerces.impl.xpath.regex.REUtil: java.lang.String createOptionString(int)>($i0);

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression r1, r2;
        int $i0, $i1;
        java.lang.Object r0;
        java.lang.String $r3, $r4;
        boolean $z0, $z1, $z2;

        r2 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0;

     label1:
        $z0 = r0 instanceof org.apache.xerces.impl.xpath.regex.RegularExpression;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r1 = (org.apache.xerces.impl.xpath.regex.RegularExpression) r0;

        $r4 = r2.<org.apache.xerces.impl.xpath.regex.RegularExpression: java.lang.String regex>;

        $r3 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: java.lang.String regex>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label3;

        $i1 = r2.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        $i0 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        if $i1 != $i0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    boolean equals(java.lang.String, int)
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression r0;
        int i0, $i1;
        java.lang.String r1, $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: java.lang.String regex>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $i1 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int options>;

        if $i1 != i0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public int hashCode()
    {
        org.apache.xerces.impl.xpath.regex.RegularExpression r1;
        java.lang.StringBuffer $r0, $r3, $r4, $r6;
        int $i0;
        java.lang.String $r2, $r5, $r7;

        r1 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: java.lang.String regex>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r5 = virtualinvoke r1.<org.apache.xerces.impl.xpath.regex.RegularExpression: java.lang.String getOptions()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        $i0 = virtualinvoke $r7.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public int getNumberOfGroups()
    {
        int $i0;
        org.apache.xerces.impl.xpath.regex.RegularExpression r0;

        r0 := @this: org.apache.xerces.impl.xpath.regex.RegularExpression;

        $i0 = r0.<org.apache.xerces.impl.xpath.regex.RegularExpression: int nofparen>;

        return $i0;
    }

    private static final int getWordType0(char, int)
    {
        char c1;
        org.apache.xerces.impl.xpath.regex.RangeToken $r0;
        byte $b3, $b4;
        int i0, $i2, $i5, $i6, $i7;
        boolean $z0, $z1, $z2, $z3;

        c1 := @parameter0: char;

        i0 := @parameter1: int;

        $z0 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: boolean isSet(int,int)>(i0, 64);

        if $z0 != 0 goto label06;

        $z1 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: boolean isSet(int,int)>(i0, 32);

        if $z1 == 0 goto label03;

        $r0 = staticinvoke <org.apache.xerces.impl.xpath.regex.Token: org.apache.xerces.impl.xpath.regex.RangeToken getRange(java.lang.String,boolean)>("IsWord", 1);

        $i5 = (int) c1;

        $z3 = virtualinvoke $r0.<org.apache.xerces.impl.xpath.regex.RangeToken: boolean match(int)>($i5);

        if $z3 == 0 goto label01;

        $b3 = 1;

        goto label02;

     label01:
        $b3 = 2;

     label02:
        return $b3;

     label03:
        $i6 = (int) c1;

        $z2 = staticinvoke <org.apache.xerces.impl.xpath.regex.RegularExpression: boolean isWordChar(int)>($i6);

        if $z2 == 0 goto label04;

        $b4 = 1;

        goto label05;

     label04:
        $b4 = 2;

     label05:
        return $b4;

     label06:
        $i2 = staticinvoke <java.lang.Character: int getType(char)>(c1);

        tableswitch($i2)
        {
            case 1: goto label07;
            case 2: goto label07;
            case 3: goto label07;
            case 4: goto label07;
            case 5: goto label07;
            case 6: goto label08;
            case 7: goto label08;
            case 8: goto label07;
            case 9: goto label07;
            case 10: goto label07;
            case 11: goto label07;
            case 12: goto label12;
            case 13: goto label12;
            case 14: goto label12;
            case 15: goto label09;
            case 16: goto label08;
            default: goto label12;
        };

     label07:
        return 1;

     label08:
        return 0;

     label09:
        $i7 = (int) c1;

        tableswitch($i7)
        {
            case 9: goto label10;
            case 10: goto label10;
            case 11: goto label10;
            case 12: goto label10;
            case 13: goto label10;
            default: goto label11;
        };

     label10:
        return 2;

     label11:
        return 0;

     label12:
        return 2;
    }

    private static final boolean isEOLChar(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 == 10 goto label1;

        if i0 == 13 goto label1;

        if i0 == 8232 goto label1;

        if i0 != 8233 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private static final boolean isWordChar(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 != 95 goto label1;

        return 1;

     label1:
        if i0 >= 48 goto label2;

        return 0;

     label2:
        if i0 <= 122 goto label3;

        return 0;

     label3:
        if i0 > 57 goto label4;

        return 1;

     label4:
        if i0 >= 65 goto label5;

        return 0;

     label5:
        if i0 > 90 goto label6;

        return 1;

     label6:
        if i0 >= 97 goto label7;

        return 0;

     label7:
        return 1;
    }

    private static final boolean matchIgnoreCase(int, int)
    {
        char $c2, $c3, $c4, $c5, $c6, $c7;
        int i0, i1, $i9, $i11, $i12, $i13, $i14, $i15;
        boolean $z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 != i1 goto label1;

        return 1;

     label1:
        $i9 = (int) 65535;

        if i0 > $i9 goto label2;

        $i11 = (int) 65535;

        if i1 <= $i11 goto label3;

     label2:
        return 0;

     label3:
        $c2 = (char) i0;

        $c3 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c2);

        $c4 = (char) i1;

        $c5 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c4);

        $i12 = (int) $c3;

        $i13 = (int) $c5;

        if $i12 != $i13 goto label4;

        return 1;

     label4:
        $c6 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c3);

        $c7 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c5);

        $i14 = (int) $c6;

        $i15 = (int) $c7;

        if $i14 != $i15 goto label5;

        $z0 = 1;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        return $z0;
    }

    public static void <clinit>()
    {
        <org.apache.xerces.impl.xpath.regex.RegularExpression: int PARAGRAPH_SEPARATOR> = 8233;

        <org.apache.xerces.impl.xpath.regex.RegularExpression: int LINE_SEPARATOR> = 8232;

        <org.apache.xerces.impl.xpath.regex.RegularExpression: int CARRIAGE_RETURN> = 13;

        <org.apache.xerces.impl.xpath.regex.RegularExpression: int LINE_FEED> = 10;

        <org.apache.xerces.impl.xpath.regex.RegularExpression: int WT_OTHER> = 2;

        <org.apache.xerces.impl.xpath.regex.RegularExpression: int WT_LETTER> = 1;

        <org.apache.xerces.impl.xpath.regex.RegularExpression: int WT_IGNORE> = 0;

        <org.apache.xerces.impl.xpath.regex.RegularExpression: int SPECIAL_COMMA> = 1024;

        <org.apache.xerces.impl.xpath.regex.RegularExpression: int XMLSCHEMA_MODE> = 512;

        <org.apache.xerces.impl.xpath.regex.RegularExpression: int PROHIBIT_FIXED_STRING_OPTIMIZATION> = 256;

        <org.apache.xerces.impl.xpath.regex.RegularExpression: int PROHIBIT_HEAD_CHARACTER_OPTIMIZATION> = 128;

        <org.apache.xerces.impl.xpath.regex.RegularExpression: int UNICODE_WORD_BOUNDARY> = 64;

        <org.apache.xerces.impl.xpath.regex.RegularExpression: int USE_UNICODE_CATEGORY> = 32;

        <org.apache.xerces.impl.xpath.regex.RegularExpression: int EXTENDED_COMMENT> = 16;

        <org.apache.xerces.impl.xpath.regex.RegularExpression: int MULTIPLE_LINES> = 8;

        <org.apache.xerces.impl.xpath.regex.RegularExpression: int SINGLE_LINE> = 4;

        <org.apache.xerces.impl.xpath.regex.RegularExpression: int IGNORE_CASE> = 2;

        <org.apache.xerces.impl.xpath.regex.RegularExpression: boolean DEBUG> = 0;

        <org.apache.xerces.impl.xpath.regex.RegularExpression: long serialVersionUID> = 6242499334195006401L;

        return;
    }
}
