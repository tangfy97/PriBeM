public abstract class com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService extends com.mycila.inject.internal.guava.collect.ForwardingObject implements java.util.concurrent.ExecutorService
{

    protected void <init>()
    {
        com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService r0;

        r0 := @this: com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingObject: void <init>()>();

        return;
    }

    protected abstract java.util.concurrent.ExecutorService delegate();

    public boolean awaitTermination(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException
    {
        java.util.concurrent.TimeUnit r2;
        com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService r0;
        long l0;
        java.util.concurrent.ExecutorService $r1;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService;

        l0 := @parameter0: long;

        r2 := @parameter1: java.util.concurrent.TimeUnit;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService: java.util.concurrent.ExecutorService delegate()>();

        $z0 = interfaceinvoke $r1.<java.util.concurrent.ExecutorService: boolean awaitTermination(long,java.util.concurrent.TimeUnit)>(l0, r2);

        return $z0;
    }

    public java.util.List invokeAll(java.util.Collection) throws java.lang.InterruptedException
    {
        com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService r0;
        java.util.List $r3;
        java.util.Collection r2;
        java.util.concurrent.ExecutorService $r1;

        r0 := @this: com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService;

        r2 := @parameter0: java.util.Collection;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService: java.util.concurrent.ExecutorService delegate()>();

        $r3 = interfaceinvoke $r1.<java.util.concurrent.ExecutorService: java.util.List invokeAll(java.util.Collection)>(r2);

        return $r3;
    }

    public java.util.List invokeAll(java.util.Collection, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException
    {
        java.util.concurrent.TimeUnit r3;
        com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService r0;
        java.util.List $r4;
        java.util.Collection r2;
        long l0;
        java.util.concurrent.ExecutorService $r1;

        r0 := @this: com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService;

        r2 := @parameter0: java.util.Collection;

        l0 := @parameter1: long;

        r3 := @parameter2: java.util.concurrent.TimeUnit;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService: java.util.concurrent.ExecutorService delegate()>();

        $r4 = interfaceinvoke $r1.<java.util.concurrent.ExecutorService: java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit)>(r2, l0, r3);

        return $r4;
    }

    public java.lang.Object invokeAny(java.util.Collection) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException
    {
        com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService r0;
        java.util.Collection r2;
        java.lang.Object $r3;
        java.util.concurrent.ExecutorService $r1;

        r0 := @this: com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService;

        r2 := @parameter0: java.util.Collection;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService: java.util.concurrent.ExecutorService delegate()>();

        $r3 = interfaceinvoke $r1.<java.util.concurrent.ExecutorService: java.lang.Object invokeAny(java.util.Collection)>(r2);

        return $r3;
    }

    public java.lang.Object invokeAny(java.util.Collection, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException
    {
        java.util.concurrent.TimeUnit r3;
        com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService r0;
        java.util.Collection r2;
        long l0;
        java.lang.Object $r4;
        java.util.concurrent.ExecutorService $r1;

        r0 := @this: com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService;

        r2 := @parameter0: java.util.Collection;

        l0 := @parameter1: long;

        r3 := @parameter2: java.util.concurrent.TimeUnit;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService: java.util.concurrent.ExecutorService delegate()>();

        $r4 = interfaceinvoke $r1.<java.util.concurrent.ExecutorService: java.lang.Object invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit)>(r2, l0, r3);

        return $r4;
    }

    public boolean isShutdown()
    {
        com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService r0;
        java.util.concurrent.ExecutorService $r1;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService: java.util.concurrent.ExecutorService delegate()>();

        $z0 = interfaceinvoke $r1.<java.util.concurrent.ExecutorService: boolean isShutdown()>();

        return $z0;
    }

    public boolean isTerminated()
    {
        com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService r0;
        java.util.concurrent.ExecutorService $r1;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService: java.util.concurrent.ExecutorService delegate()>();

        $z0 = interfaceinvoke $r1.<java.util.concurrent.ExecutorService: boolean isTerminated()>();

        return $z0;
    }

    public void shutdown()
    {
        com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService r0;
        java.util.concurrent.ExecutorService $r1;

        r0 := @this: com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService: java.util.concurrent.ExecutorService delegate()>();

        interfaceinvoke $r1.<java.util.concurrent.ExecutorService: void shutdown()>();

        return;
    }

    public java.util.List shutdownNow()
    {
        com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService r0;
        java.util.List $r2;
        java.util.concurrent.ExecutorService $r1;

        r0 := @this: com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService: java.util.concurrent.ExecutorService delegate()>();

        $r2 = interfaceinvoke $r1.<java.util.concurrent.ExecutorService: java.util.List shutdownNow()>();

        return $r2;
    }

    public void execute(java.lang.Runnable)
    {
        com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService r0;
        java.lang.Runnable r2;
        java.util.concurrent.ExecutorService $r1;

        r0 := @this: com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService;

        r2 := @parameter0: java.lang.Runnable;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService: java.util.concurrent.ExecutorService delegate()>();

        interfaceinvoke $r1.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>(r2);

        return;
    }

    public java.util.concurrent.Future submit(java.util.concurrent.Callable)
    {
        com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService r0;
        java.util.concurrent.Future $r3;
        java.util.concurrent.Callable r2;
        java.util.concurrent.ExecutorService $r1;

        r0 := @this: com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService;

        r2 := @parameter0: java.util.concurrent.Callable;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService: java.util.concurrent.ExecutorService delegate()>();

        $r3 = interfaceinvoke $r1.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>(r2);

        return $r3;
    }

    public java.util.concurrent.Future submit(java.lang.Runnable)
    {
        com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService r0;
        java.util.concurrent.Future $r3;
        java.lang.Runnable r2;
        java.util.concurrent.ExecutorService $r1;

        r0 := @this: com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService;

        r2 := @parameter0: java.lang.Runnable;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService: java.util.concurrent.ExecutorService delegate()>();

        $r3 = interfaceinvoke $r1.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>(r2);

        return $r3;
    }

    public java.util.concurrent.Future submit(java.lang.Runnable, java.lang.Object)
    {
        com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService r0;
        java.util.concurrent.Future $r4;
        java.lang.Object r3;
        java.lang.Runnable r2;
        java.util.concurrent.ExecutorService $r1;

        r0 := @this: com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService;

        r2 := @parameter0: java.lang.Runnable;

        r3 := @parameter1: java.lang.Object;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService: java.util.concurrent.ExecutorService delegate()>();

        $r4 = interfaceinvoke $r1.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object)>(r2, r3);

        return $r4;
    }

    protected volatile java.lang.Object delegate()
    {
        com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService r0;
        java.util.concurrent.ExecutorService $r1;

        r0 := @this: com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.util.concurrent.ForwardingExecutorService: java.util.concurrent.ExecutorService delegate()>();

        return $r1;
    }
}
