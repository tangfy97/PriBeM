class ucar.nc2.ft.point.standard.Table$TableParentId$ParentInfo extends java.lang.Object
{
    java.util.List recnumList;
    ucar.ma2.StructureData sdata;
    final ucar.nc2.ft.point.standard.Table$TableParentId this$0;

    private void <init>(ucar.nc2.ft.point.standard.Table$TableParentId)
    {
        ucar.nc2.ft.point.standard.Table$TableParentId$ParentInfo r0;
        ucar.nc2.ft.point.standard.Table$TableParentId r1;
        java.util.ArrayList $r2;

        r0 := @this: ucar.nc2.ft.point.standard.Table$TableParentId$ParentInfo;

        r1 := @parameter0: ucar.nc2.ft.point.standard.Table$TableParentId;

        r0.<ucar.nc2.ft.point.standard.Table$TableParentId$ParentInfo: ucar.nc2.ft.point.standard.Table$TableParentId this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.ft.point.standard.Table$TableParentId$ParentInfo: java.util.List recnumList> = $r2;

        return;
    }

    void add(int) throws java.io.IOException
    {
        java.lang.Integer $r2;
        ucar.ma2.StructureData $r3, $r6;
        int i0;
        java.lang.String $r12, $r14;
        org.slf4j.Logger $r8;
        ucar.nc2.ft.point.standard.Table$TableParentId$ParentInfo r0;
        java.lang.RuntimeException $r13;
        java.util.List $r1;
        ucar.ma2.InvalidRangeException $r7;
        ucar.nc2.dataset.StructureDS $r5;
        java.lang.StringBuilder $r9, $r10, $r11;
        ucar.nc2.ft.point.standard.Table$TableParentId $r4;

        r0 := @this: ucar.nc2.ft.point.standard.Table$TableParentId$ParentInfo;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.nc2.ft.point.standard.Table$TableParentId$ParentInfo: java.util.List recnumList>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        $r3 = r0.<ucar.nc2.ft.point.standard.Table$TableParentId$ParentInfo: ucar.ma2.StructureData sdata>;

        if $r3 == null goto label1;

        return;

     label1:
        $r4 = r0.<ucar.nc2.ft.point.standard.Table$TableParentId$ParentInfo: ucar.nc2.ft.point.standard.Table$TableParentId this$0>;

        $r5 = $r4.<ucar.nc2.ft.point.standard.Table$TableParentId: ucar.nc2.dataset.StructureDS struct>;

        $r6 = virtualinvoke $r5.<ucar.nc2.dataset.StructureDS: ucar.ma2.StructureData readStructure(int)>(i0);

        r0.<ucar.nc2.ft.point.standard.Table$TableParentId$ParentInfo: ucar.ma2.StructureData sdata> = $r6;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = staticinvoke <ucar.nc2.ft.point.standard.Table: org.slf4j.Logger access$100()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TableParentId read recno=");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r12, $r7);

        $r13 = new java.lang.RuntimeException;

        $r14 = virtualinvoke $r7.<ucar.ma2.InvalidRangeException: java.lang.String getMessage()>();

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14);

        throw $r13;

     label4:
        return;

        catch ucar.ma2.InvalidRangeException from label1 to label2 with label3;
    }

    void <init>(ucar.nc2.ft.point.standard.Table$TableParentId, ucar.nc2.ft.point.standard.Table$1)
    {
        ucar.nc2.ft.point.standard.Table$1 r2;
        ucar.nc2.ft.point.standard.Table$TableParentId$ParentInfo r0;
        ucar.nc2.ft.point.standard.Table$TableParentId r1;

        r0 := @this: ucar.nc2.ft.point.standard.Table$TableParentId$ParentInfo;

        r1 := @parameter0: ucar.nc2.ft.point.standard.Table$TableParentId;

        r2 := @parameter1: ucar.nc2.ft.point.standard.Table$1;

        specialinvoke r0.<ucar.nc2.ft.point.standard.Table$TableParentId$ParentInfo: void <init>(ucar.nc2.ft.point.standard.Table$TableParentId)>(r1);

        return;
    }
}
