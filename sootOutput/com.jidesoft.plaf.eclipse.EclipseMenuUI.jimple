public class com.jidesoft.plaf.eclipse.EclipseMenuUI extends com.jidesoft.plaf.eclipse.EclipseMenuItemUI
{
    protected javax.swing.event.ChangeListener changeListener;
    protected java.beans.PropertyChangeListener propertyChangeListener;
    protected javax.swing.event.MenuListener menuListener;
    private int lastMnemonic;
    private static boolean crossMenuMnemonic;
    private boolean isMouseOver;

    public void <init>()
    {
        com.jidesoft.plaf.eclipse.EclipseMenuUI r0;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuUI;

        specialinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: void <init>()>();

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: int lastMnemonic> = 0;

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: boolean isMouseOver> = 0;

        return;
    }

    public static javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        com.jidesoft.plaf.eclipse.EclipseMenuUI $r0;

        r1 := @parameter0: javax.swing.JComponent;

        $r0 = new com.jidesoft.plaf.eclipse.EclipseMenuUI;

        specialinvoke $r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: void <init>()>();

        return $r0;
    }

    protected void installDefaults()
    {
        com.jidesoft.plaf.eclipse.EclipseMenuUI r0;
        javax.swing.JMenuItem $r1;
        javax.swing.JMenu $r2;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuUI;

        specialinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: void installDefaults()>();

        $r1 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.JMenuItem menuItem>;

        $r2 = (javax.swing.JMenu) $r1;

        virtualinvoke $r2.<javax.swing.JMenu: void setDelay(int)>(200);

        $z0 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: boolean getBoolean(java.lang.Object)>("Menu.crossMenuMnemonic");

        <com.jidesoft.plaf.eclipse.EclipseMenuUI: boolean crossMenuMnemonic> = $z0;

        return;
    }

    protected java.lang.String getPropertyPrefix()
    {
        com.jidesoft.plaf.eclipse.EclipseMenuUI r0;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuUI;

        return "Menu";
    }

    protected void paintBackground(java.awt.Graphics, javax.swing.JMenuItem, java.awt.Color)
    {
        java.awt.Color r3, $r6, $r7, $r10, $r12, $r14, $r16;
        com.jidesoft.plaf.eclipse.EclipseMenuUI r1;
        javax.swing.border.Border $r8, $r9;
        javax.swing.ButtonModel $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        javax.swing.JMenu $r4;
        java.awt.Graphics r2;
        javax.swing.JMenuItem r0;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, $i13, $i14, $i15;
        java.awt.Container $r11, $r13, $r15;

        r1 := @this: com.jidesoft.plaf.eclipse.EclipseMenuUI;

        r2 := @parameter0: java.awt.Graphics;

        r0 := @parameter1: javax.swing.JMenuItem;

        r3 := @parameter2: java.awt.Color;

        $z0 = r0 instanceof javax.swing.JMenu;

        if $z0 == 0 goto label01;

        $r4 = (javax.swing.JMenu) r0;

        $z1 = virtualinvoke $r4.<javax.swing.JMenu: boolean isTopLevelMenu()>();

        if $z1 != 0 goto label02;

     label01:
        specialinvoke r1.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: void paintBackground(java.awt.Graphics,javax.swing.JMenuItem,java.awt.Color)>(r2, r0, r3);

        return;

     label02:
        $r5 = virtualinvoke r0.<javax.swing.JMenuItem: javax.swing.ButtonModel getModel()>();

        $r6 = virtualinvoke r2.<java.awt.Graphics: java.awt.Color getColor()>();

        $i0 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: int getOrientationOf(java.awt.Component)>(r0);

        if $i0 != 0 goto label03;

        i11 = virtualinvoke r0.<javax.swing.JMenuItem: int getWidth()>();

        i12 = virtualinvoke r0.<javax.swing.JMenuItem: int getHeight()>();

        goto label04;

     label03:
        i11 = virtualinvoke r0.<javax.swing.JMenuItem: int getHeight()>();

        i12 = virtualinvoke r0.<javax.swing.JMenuItem: int getWidth()>();

     label04:
        staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlDkShadow");

        $r7 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("Menu.mouseHoverBackground");

        $r8 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: javax.swing.border.Border getBorder(java.lang.Object)>("Menu.mouseHoverBorder");

        $r9 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: javax.swing.border.Border getBorder(java.lang.Object)>("Menu.mouseSelectedBorder");

        $z2 = virtualinvoke r0.<javax.swing.JMenuItem: boolean isOpaque()>();

        if $z2 == 0 goto label07;

        $r11 = virtualinvoke r0.<javax.swing.JMenuItem: java.awt.Container getParent()>();

        if $r11 == null goto label05;

        $r13 = virtualinvoke r0.<javax.swing.JMenuItem: java.awt.Container getParent()>();

        $r14 = virtualinvoke $r13.<java.awt.Container: java.awt.Color getBackground()>();

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r14);

        goto label06;

     label05:
        $r12 = virtualinvoke r0.<javax.swing.JMenuItem: java.awt.Color getBackground()>();

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r12);

     label06:
        virtualinvoke r2.<java.awt.Graphics: void fillRect(int,int,int,int)>(0, 0, i11, i12);

     label07:
        $z11 = interfaceinvoke $r5.<javax.swing.ButtonModel: boolean isArmed()>();

        if $z11 != 0 goto label08;

        $z7 = r0 instanceof javax.swing.JMenu;

        if $z7 == 0 goto label10;

        $z10 = interfaceinvoke $r5.<javax.swing.ButtonModel: boolean isSelected()>();

        if $z10 == 0 goto label10;

     label08:
        if $r9 == null goto label09;

        $i7 = i11 - 1;

        interfaceinvoke $r9.<javax.swing.border.Border: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)>(r0, r2, 0, 0, $i7, i12);

     label09:
        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r7);

        $i2 = i11 - 3;

        $i1 = i12 - 2;

        virtualinvoke r2.<java.awt.Graphics: void fillRect(int,int,int,int)>(1, 1, $i2, $i1);

        goto label12;

     label10:
        $z8 = virtualinvoke r1.<com.jidesoft.plaf.eclipse.EclipseMenuUI: boolean isMouseOver()>();

        if $z8 == 0 goto label12;

        $z9 = interfaceinvoke $r5.<javax.swing.ButtonModel: boolean isEnabled()>();

        if $z9 == 0 goto label12;

        if $r8 == null goto label11;

        $i10 = i11 - 1;

        interfaceinvoke $r8.<javax.swing.border.Border: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)>(r0, r2, 0, 0, $i10, i12);

     label11:
        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r7);

        $i9 = i11 - 3;

        $i8 = i12 - 2;

        virtualinvoke r2.<java.awt.Graphics: void fillRect(int,int,int,int)>(1, 1, $i9, $i8);

     label12:
        $r15 = virtualinvoke r0.<javax.swing.JMenuItem: java.awt.Container getParent()>();

        $z12 = virtualinvoke r1.<com.jidesoft.plaf.eclipse.EclipseMenuUI: boolean isDownArrowVisible(java.awt.Container)>($r15);

        if $z12 == 0 goto label15;

        i3 = i11 - 9;

        $z3 = interfaceinvoke $r5.<javax.swing.ButtonModel: boolean isSelected()>();

        if $z3 != 0 goto label13;

        $z4 = interfaceinvoke $r5.<javax.swing.ButtonModel: boolean isArmed()>();

        if $z4 != 0 goto label13;

        $z5 = interfaceinvoke $r5.<javax.swing.ButtonModel: boolean isPressed()>();

        if $z5 != 0 goto label13;

        $z6 = virtualinvoke r1.<com.jidesoft.plaf.eclipse.EclipseMenuUI: boolean isMouseOver()>();

        if $z6 == 0 goto label14;

     label13:
        $r16 = r1.<com.jidesoft.plaf.eclipse.EclipseMenuUI: java.awt.Color selectionForeground>;

        $i13 = i3 - 2;

        $i14 = i12 / 2;

        $i15 = $i14 - 1;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void paintArrow(java.awt.Graphics,java.awt.Color,int,int,int,int)>(r2, $r16, $i13, $i15, 5, 0);

        goto label15;

     label14:
        $r10 = virtualinvoke r0.<javax.swing.JMenuItem: java.awt.Color getForeground()>();

        $i6 = i3 - 2;

        $i4 = i12 / 2;

        $i5 = $i4 - 1;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void paintArrow(java.awt.Graphics,java.awt.Color,int,int,int,int)>(r2, $r10, $i6, $i5, 5, 0);

     label15:
        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r6);

        return;
    }

    protected void installListeners()
    {
        com.jidesoft.plaf.eclipse.EclipseMenuUI r0;
        javax.swing.JMenuItem $r7, $r10, $r13, $r14, $r17, $r18;
        javax.swing.event.ChangeListener $r1, $r2, $r16, $r19;
        javax.swing.JMenu $r9;
        javax.swing.event.MenuListener $r5, $r6, $r8, $r11;
        java.beans.PropertyChangeListener $r3, $r4, $r12, $r15;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuUI;

        specialinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: void installListeners()>();

        $r1 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.event.ChangeListener changeListener>;

        if $r1 != null goto label1;

        $r18 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.JMenuItem menuItem>;

        $r19 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.event.ChangeListener createChangeListener(javax.swing.JComponent)>($r18);

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.event.ChangeListener changeListener> = $r19;

     label1:
        $r2 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.event.ChangeListener changeListener>;

        if $r2 == null goto label2;

        $r17 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.JMenuItem menuItem>;

        $r16 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.event.ChangeListener changeListener>;

        virtualinvoke $r17.<javax.swing.JMenuItem: void addChangeListener(javax.swing.event.ChangeListener)>($r16);

     label2:
        $r3 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: java.beans.PropertyChangeListener propertyChangeListener>;

        if $r3 != null goto label3;

        $r14 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.JMenuItem menuItem>;

        $r15 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: java.beans.PropertyChangeListener createPropertyChangeListener(javax.swing.JComponent)>($r14);

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: java.beans.PropertyChangeListener propertyChangeListener> = $r15;

     label3:
        $r4 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: java.beans.PropertyChangeListener propertyChangeListener>;

        if $r4 == null goto label4;

        $r13 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.JMenuItem menuItem>;

        $r12 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: java.beans.PropertyChangeListener propertyChangeListener>;

        virtualinvoke $r13.<javax.swing.JMenuItem: void addPropertyChangeListener(java.beans.PropertyChangeListener)>($r12);

     label4:
        $r5 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.event.MenuListener menuListener>;

        if $r5 != null goto label5;

        $r10 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.JMenuItem menuItem>;

        $r11 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.event.MenuListener createMenuListener(javax.swing.JComponent)>($r10);

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.event.MenuListener menuListener> = $r11;

     label5:
        $r6 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.event.MenuListener menuListener>;

        if $r6 == null goto label6;

        $r7 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.JMenuItem menuItem>;

        $r9 = (javax.swing.JMenu) $r7;

        $r8 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.event.MenuListener menuListener>;

        virtualinvoke $r9.<javax.swing.JMenu: void addMenuListener(javax.swing.event.MenuListener)>($r8);

     label6:
        return;
    }

    protected void installKeyboardActions()
    {
        com.jidesoft.plaf.eclipse.EclipseMenuUI r0;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuUI;

        specialinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: void installKeyboardActions()>();

        virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: void updateMnemonicBinding()>();

        return;
    }

    void updateMnemonicBinding()
    {
        com.jidesoft.plaf.eclipse.EclipseMenuUI r0;
        javax.swing.JMenuItem $r1, $r11;
        int[] $r4, r5;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8, i9;
        javax.swing.ButtonModel $r2;
        javax.swing.KeyStroke $r8, $r14;
        java.lang.Object $r3;
        javax.swing.InputMap $r6, $r7, $r9, $r10, $r12, $r13;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuUI;

        $r1 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.JMenuItem menuItem>;

        $r2 = virtualinvoke $r1.<javax.swing.JMenuItem: javax.swing.ButtonModel getModel()>();

        $i0 = interfaceinvoke $r2.<javax.swing.ButtonModel: int getMnemonic()>();

        $r3 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("Menu.shortcutKeys");

        $r4 = (int[]) $r3;

        r5 = (int[]) $r4;

        $i1 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: int lastMnemonic>;

        if $i0 == $i1 goto label1;

        if r5 != null goto label2;

     label1:
        return;

     label2:
        $i2 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: int lastMnemonic>;

        if $i2 == 0 goto label4;

        $r12 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.InputMap windowInputMap>;

        if $r12 == null goto label4;

        i5 = lengthof r5;

        i6 = 0;

     label3:
        if i6 >= i5 goto label4;

        i7 = r5[i6];

        $r13 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.InputMap windowInputMap>;

        $i4 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: int lastMnemonic>;

        $r14 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int,boolean)>($i4, i7, 0);

        virtualinvoke $r13.<javax.swing.InputMap: void remove(javax.swing.KeyStroke)>($r14);

        i6 = i6 + 1;

        goto label3;

     label4:
        if $i0 == 0 goto label7;

        $r6 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.InputMap windowInputMap>;

        if $r6 != null goto label5;

        $r9 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.InputMap createInputMap(int)>(2);

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.InputMap windowInputMap> = $r9;

        $r11 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.JMenuItem menuItem>;

        $r10 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.InputMap windowInputMap>;

        staticinvoke <javax.swing.SwingUtilities: void replaceUIInputMap(javax.swing.JComponent,int,javax.swing.InputMap)>($r11, 2, $r10);

     label5:
        $i3 = lengthof r5;

        i8 = 0;

     label6:
        if i8 >= $i3 goto label7;

        i9 = r5[i8];

        $r7 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.InputMap windowInputMap>;

        $r8 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int,boolean)>($i0, i9, 0);

        virtualinvoke $r7.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r8, "selectMenu");

        i8 = i8 + 1;

        goto label6;

     label7:
        r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: int lastMnemonic> = $i0;

        return;
    }

    protected void uninstallKeyboardActions()
    {
        com.jidesoft.plaf.eclipse.EclipseMenuUI r0;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuUI;

        specialinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: void uninstallKeyboardActions()>();

        return;
    }

    javax.swing.ActionMap getActionMap()
    {
        com.jidesoft.plaf.eclipse.EclipseMenuUI r0;
        javax.swing.ActionMap $r1;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuUI;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.ActionMap createActionMap()>();

        return $r1;
    }

    javax.swing.ActionMap createActionMap()
    {
        com.jidesoft.plaf.eclipse.EclipseMenuUI r0;
        javax.swing.JMenuItem $r3;
        javax.swing.JMenu $r4;
        javax.swing.ActionMap $r1;
        com.jidesoft.plaf.eclipse.EclipseMenuUI$PostAction $r2;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuUI;

        $r1 = specialinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.ActionMap createActionMap()>();

        if $r1 == null goto label1;

        $r2 = new com.jidesoft.plaf.eclipse.EclipseMenuUI$PostAction;

        $r3 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.JMenuItem menuItem>;

        $r4 = (javax.swing.JMenu) $r3;

        specialinvoke $r2.<com.jidesoft.plaf.eclipse.EclipseMenuUI$PostAction: void <init>(javax.swing.JMenu,boolean)>($r4, 1);

        virtualinvoke $r1.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("selectMenu", $r2);

     label1:
        return $r1;
    }

    protected javax.swing.event.MouseInputListener createMouseInputListener(javax.swing.JComponent)
    {
        javax.swing.JComponent r2;
        com.jidesoft.plaf.eclipse.EclipseMenuUI r1;
        com.jidesoft.plaf.eclipse.EclipseMenuUI$MouseInputHandler $r0;

        r1 := @this: com.jidesoft.plaf.eclipse.EclipseMenuUI;

        r2 := @parameter0: javax.swing.JComponent;

        $r0 = new com.jidesoft.plaf.eclipse.EclipseMenuUI$MouseInputHandler;

        specialinvoke $r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI$MouseInputHandler: void <init>(com.jidesoft.plaf.eclipse.EclipseMenuUI)>(r1);

        return $r0;
    }

    protected javax.swing.event.MenuListener createMenuListener(javax.swing.JComponent)
    {
        javax.swing.JComponent r2;
        com.jidesoft.plaf.eclipse.EclipseMenuUI r1;
        com.jidesoft.plaf.eclipse.EclipseMenuUI$MenuHandler $r0;

        r1 := @this: com.jidesoft.plaf.eclipse.EclipseMenuUI;

        r2 := @parameter0: javax.swing.JComponent;

        $r0 = new com.jidesoft.plaf.eclipse.EclipseMenuUI$MenuHandler;

        specialinvoke $r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI$MenuHandler: void <init>(com.jidesoft.plaf.eclipse.EclipseMenuUI$1)>(null);

        return $r0;
    }

    protected javax.swing.event.ChangeListener createChangeListener(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        com.jidesoft.plaf.eclipse.EclipseMenuUI r0;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuUI;

        r1 := @parameter0: javax.swing.JComponent;

        return null;
    }

    protected java.beans.PropertyChangeListener createPropertyChangeListener(javax.swing.JComponent)
    {
        javax.swing.JComponent r2;
        com.jidesoft.plaf.eclipse.EclipseMenuUI r1;
        com.jidesoft.plaf.eclipse.EclipseMenuUI$PropertyChangeHandler $r0;

        r1 := @this: com.jidesoft.plaf.eclipse.EclipseMenuUI;

        r2 := @parameter0: javax.swing.JComponent;

        $r0 = new com.jidesoft.plaf.eclipse.EclipseMenuUI$PropertyChangeHandler;

        specialinvoke $r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI$PropertyChangeHandler: void <init>(com.jidesoft.plaf.eclipse.EclipseMenuUI,com.jidesoft.plaf.eclipse.EclipseMenuUI$1)>(r1, null);

        return $r0;
    }

    protected void uninstallDefaults()
    {
        com.jidesoft.plaf.eclipse.EclipseMenuUI r0;
        javax.swing.JMenuItem $r1, $r2, $r3;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuUI;

        $r1 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.JMenuItem menuItem>;

        virtualinvoke $r1.<javax.swing.JMenuItem: void setArmed(boolean)>(0);

        $r2 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.JMenuItem menuItem>;

        virtualinvoke $r2.<javax.swing.JMenuItem: void setSelected(boolean)>(0);

        $r3 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.JMenuItem menuItem>;

        virtualinvoke $r3.<javax.swing.JMenuItem: void resetKeyboardActions()>();

        specialinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: void uninstallDefaults()>();

        return;
    }

    protected void uninstallListeners()
    {
        com.jidesoft.plaf.eclipse.EclipseMenuUI r0;
        javax.swing.JMenu $r6;
        javax.swing.event.MenuListener $r3, $r5;
        java.beans.PropertyChangeListener $r2, $r7;
        javax.swing.JMenuItem $r4, $r8, $r10;
        javax.swing.event.ChangeListener $r1, $r9;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuUI;

        specialinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: void uninstallListeners()>();

        $r1 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.event.ChangeListener changeListener>;

        if $r1 == null goto label1;

        $r10 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.JMenuItem menuItem>;

        $r9 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.event.ChangeListener changeListener>;

        virtualinvoke $r10.<javax.swing.JMenuItem: void removeChangeListener(javax.swing.event.ChangeListener)>($r9);

     label1:
        $r2 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: java.beans.PropertyChangeListener propertyChangeListener>;

        if $r2 == null goto label2;

        $r8 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.JMenuItem menuItem>;

        $r7 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: java.beans.PropertyChangeListener propertyChangeListener>;

        virtualinvoke $r8.<javax.swing.JMenuItem: void removePropertyChangeListener(java.beans.PropertyChangeListener)>($r7);

     label2:
        $r3 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.event.MenuListener menuListener>;

        if $r3 == null goto label3;

        $r4 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.JMenuItem menuItem>;

        $r6 = (javax.swing.JMenu) $r4;

        $r5 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.event.MenuListener menuListener>;

        virtualinvoke $r6.<javax.swing.JMenu: void removeMenuListener(javax.swing.event.MenuListener)>($r5);

     label3:
        r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.event.ChangeListener changeListener> = null;

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: java.beans.PropertyChangeListener propertyChangeListener> = null;

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.event.MenuListener menuListener> = null;

        return;
    }

    protected javax.swing.event.MenuDragMouseListener createMenuDragMouseListener(javax.swing.JComponent)
    {
        javax.swing.JComponent r2;
        com.jidesoft.plaf.eclipse.EclipseMenuUI r1;
        com.jidesoft.plaf.eclipse.EclipseMenuUI$MenuDragMouseHandler $r0;

        r1 := @this: com.jidesoft.plaf.eclipse.EclipseMenuUI;

        r2 := @parameter0: javax.swing.JComponent;

        $r0 = new com.jidesoft.plaf.eclipse.EclipseMenuUI$MenuDragMouseHandler;

        specialinvoke $r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI$MenuDragMouseHandler: void <init>(com.jidesoft.plaf.eclipse.EclipseMenuUI,com.jidesoft.plaf.eclipse.EclipseMenuUI$1)>(r1, null);

        return $r0;
    }

    protected javax.swing.event.MenuKeyListener createMenuKeyListener(javax.swing.JComponent)
    {
        com.jidesoft.plaf.eclipse.EclipseMenuUI$MenuKeyHandler $r0;
        javax.swing.JComponent r2;
        com.jidesoft.plaf.eclipse.EclipseMenuUI r1;

        r1 := @this: com.jidesoft.plaf.eclipse.EclipseMenuUI;

        r2 := @parameter0: javax.swing.JComponent;

        $r0 = new com.jidesoft.plaf.eclipse.EclipseMenuUI$MenuKeyHandler;

        specialinvoke $r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI$MenuKeyHandler: void <init>(com.jidesoft.plaf.eclipse.EclipseMenuUI,com.jidesoft.plaf.eclipse.EclipseMenuUI$1)>(r1, null);

        return $r0;
    }

    public java.awt.Dimension getMaximumSize(javax.swing.JComponent)
    {
        javax.swing.JComponent r3;
        com.jidesoft.plaf.eclipse.EclipseMenuUI r0;
        javax.swing.JMenu $r2;
        java.awt.Dimension $r4, $r5;
        javax.swing.JMenuItem $r1;
        int $i0;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuUI;

        r3 := @parameter0: javax.swing.JComponent;

        $r1 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.JMenuItem menuItem>;

        $r2 = (javax.swing.JMenu) $r1;

        $z0 = virtualinvoke $r2.<javax.swing.JMenu: boolean isTopLevelMenu()>();

        if $z0 != 1 goto label1;

        $r4 = virtualinvoke r3.<javax.swing.JComponent: java.awt.Dimension getPreferredSize()>();

        $r5 = new java.awt.Dimension;

        $i0 = $r4.<java.awt.Dimension: int width>;

        specialinvoke $r5.<java.awt.Dimension: void <init>(int,int)>($i0, 32767);

        return $r5;

     label1:
        return null;
    }

    public static void setupPostTimer(javax.swing.JMenu)
    {
        int $i0;
        javax.swing.JMenu r1;
        com.jidesoft.plaf.eclipse.EclipseMenuUI$PostAction $r2;
        javax.swing.Timer $r0;

        r1 := @parameter0: javax.swing.JMenu;

        $r0 = new javax.swing.Timer;

        $i0 = virtualinvoke r1.<javax.swing.JMenu: int getDelay()>();

        $r2 = new com.jidesoft.plaf.eclipse.EclipseMenuUI$PostAction;

        specialinvoke $r2.<com.jidesoft.plaf.eclipse.EclipseMenuUI$PostAction: void <init>(javax.swing.JMenu,boolean)>(r1, 0);

        specialinvoke $r0.<javax.swing.Timer: void <init>(int,java.awt.event.ActionListener)>($i0, $r2);

        virtualinvoke $r0.<javax.swing.Timer: void setRepeats(boolean)>(0);

        virtualinvoke $r0.<javax.swing.Timer: void start()>();

        return;
    }

    protected static void appendPath(javax.swing.MenuElement[], javax.swing.MenuElement)
    {
        javax.swing.MenuSelectionManager $r3;
        javax.swing.MenuElement r2;
        javax.swing.MenuElement[] r0, r1;
        int $i0, $i1, $i2, $i3;

        r0 := @parameter0: javax.swing.MenuElement[];

        r2 := @parameter1: javax.swing.MenuElement;

        $i0 = lengthof r0;

        $i1 = $i0 + 1;

        r1 = newarray (javax.swing.MenuElement)[$i1];

        $i2 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, $i2);

        $i3 = lengthof r0;

        r1[$i3] = r2;

        $r3 = staticinvoke <javax.swing.MenuSelectionManager: javax.swing.MenuSelectionManager defaultManager()>();

        virtualinvoke $r3.<javax.swing.MenuSelectionManager: void setSelectedPath(javax.swing.MenuElement[])>(r1);

        return;
    }

    static javax.swing.JPopupMenu getActivePopupMenu()
    {
        javax.swing.JPopupMenu $r3;
        javax.swing.MenuSelectionManager $r0;
        javax.swing.MenuElement r2;
        javax.swing.MenuElement[] $r1;
        int $i0, i1, $i3;
        boolean $z0;

        $r0 = staticinvoke <javax.swing.MenuSelectionManager: javax.swing.MenuSelectionManager defaultManager()>();

        $r1 = virtualinvoke $r0.<javax.swing.MenuSelectionManager: javax.swing.MenuElement[] getSelectedPath()>();

        $i0 = lengthof $r1;

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        r2 = $r1[i1];

        $z0 = r2 instanceof javax.swing.JPopupMenu;

        if $z0 == 0 goto label2;

        $r3 = (javax.swing.JPopupMenu) r2;

        return $r3;

     label2:
        $i3 = (int) -1;

        i1 = i1 + $i3;

        goto label1;

     label3:
        return null;
    }

    protected void paintText(java.awt.Graphics, javax.swing.JMenuItem, java.awt.Rectangle, java.lang.String)
    {
        java.awt.Color $r5, $r10;
        com.jidesoft.plaf.eclipse.EclipseMenuUI r6;
        javax.swing.ButtonModel $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        javax.swing.JMenu $r9;
        java.awt.Graphics r3;
        java.awt.Rectangle r8;
        javax.swing.JMenuItem r0;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, $i12;
        java.lang.String r7;
        java.awt.ComponentOrientation $r2;
        java.awt.FontMetrics $r4;

        r6 := @this: com.jidesoft.plaf.eclipse.EclipseMenuUI;

        r3 := @parameter0: java.awt.Graphics;

        r0 := @parameter1: javax.swing.JMenuItem;

        r8 := @parameter2: java.awt.Rectangle;

        r7 := @parameter3: java.lang.String;

        $r1 = virtualinvoke r0.<javax.swing.JMenuItem: javax.swing.ButtonModel getModel()>();

        $z0 = r0 instanceof javax.swing.JMenu;

        if $z0 == 0 goto label1;

        $r9 = (javax.swing.JMenu) r0;

        $z7 = virtualinvoke $r9.<javax.swing.JMenu: boolean isTopLevelMenu()>();

        if $z7 != 0 goto label2;

     label1:
        $r2 = virtualinvoke r0.<javax.swing.JMenuItem: java.awt.ComponentOrientation getComponentOrientation()>();

        $z1 = virtualinvoke $r2.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z1 == 0 goto label2;

        $i2 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("MenuItem.textIconGap");

        $i3 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("MenuItem.shadowWidth");

        $i4 = $i3 + $i2;

        r8.<java.awt.Rectangle: int x> = $i4;

     label2:
        $z8 = interfaceinvoke $r1.<javax.swing.ButtonModel: boolean isEnabled()>();

        if $z8 != 0 goto label3;

        $i0 = r8.<java.awt.Rectangle: int y>;

        $i1 = $i0 + 1;

        r8.<java.awt.Rectangle: int y> = $i1;

        staticinvoke <com.sun.java.swing.plaf.windows.WindowsGraphicsUtils: void paintText(java.awt.Graphics,javax.swing.AbstractButton,java.awt.Rectangle,java.lang.String,int)>(r3, r0, r8, r7, 0);

        goto label8;

     label3:
        $r4 = virtualinvoke r3.<java.awt.Graphics: java.awt.FontMetrics getFontMetrics()>();

        i5 = virtualinvoke r0.<javax.swing.JMenuItem: int getDisplayedMnemonicIndex()>();

        $z2 = staticinvoke <com.sun.java.swing.plaf.windows.WindowsLookAndFeel: boolean isMnemonicHidden()>();

        if $z2 == 0 goto label4;

        $i12 = (int) -1;

        i5 = $i12;

     label4:
        $r5 = virtualinvoke r3.<java.awt.Graphics: java.awt.Color getColor()>();

        $z3 = interfaceinvoke $r1.<javax.swing.ButtonModel: boolean isArmed()>();

        if $z3 != 0 goto label6;

        $z4 = r0 instanceof javax.swing.JMenu;

        if $z4 == 0 goto label5;

        $z6 = interfaceinvoke $r1.<javax.swing.ButtonModel: boolean isSelected()>();

        if $z6 != 0 goto label6;

     label5:
        $z5 = virtualinvoke r6.<com.jidesoft.plaf.eclipse.EclipseMenuUI: boolean isMouseOver()>();

        if $z5 == 0 goto label7;

     label6:
        $r10 = r6.<com.jidesoft.plaf.eclipse.EclipseMenuUI: java.awt.Color selectionForeground>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r10);

     label7:
        $i6 = r8.<java.awt.Rectangle: int x>;

        $i7 = r8.<java.awt.Rectangle: int y>;

        $i8 = virtualinvoke $r4.<java.awt.FontMetrics: int getAscent()>();

        $i9 = $i7 + $i8;

        $i10 = $i9 - 1;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void drawStringUnderlineCharAt(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int,int)>(r0, r3, r7, i5, $i6, $i10);

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r5);

     label8:
        return;
    }

    protected void setMouseOver(boolean)
    {
        com.jidesoft.plaf.eclipse.EclipseMenuUI r0;
        javax.swing.JMenuItem $r1;
        javax.swing.ButtonModel $r2;
        boolean z0, $z1;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuUI;

        z0 := @parameter0: boolean;

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: boolean isMouseOver> = z0;

        $r1 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.JMenuItem menuItem>;

        $r2 = virtualinvoke $r1.<javax.swing.JMenuItem: javax.swing.ButtonModel getModel()>();

        $z1 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: boolean isMouseOver>;

        interfaceinvoke $r2.<javax.swing.ButtonModel: void setRollover(boolean)>($z1);

        return;
    }

    protected boolean isMouseOver()
    {
        com.jidesoft.plaf.eclipse.EclipseMenuUI r0;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuUI;

        $z0 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: boolean isMouseOver>;

        return $z0;
    }

    public java.awt.Dimension getPreferredSize(javax.swing.JComponent)
    {
        com.jidesoft.plaf.eclipse.EclipseMenuUI r0;
        javax.swing.JMenuItem $r3, $r4, $r6, $r8;
        int $i0, $i1, $i2, $i3, $i4;
        java.awt.Container $r7;
        boolean $z0, $z1, $z2;
        javax.swing.JComponent r1;
        javax.swing.JMenu $r5;
        java.awt.Dimension $r2;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuUI;

        r1 := @parameter0: javax.swing.JComponent;

        $r2 = specialinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)>(r1);

        $r3 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.JMenuItem menuItem>;

        $z0 = $r3 instanceof javax.swing.JMenu;

        if $z0 == 0 goto label2;

        $r4 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.JMenuItem menuItem>;

        $r5 = (javax.swing.JMenu) $r4;

        $z1 = virtualinvoke $r5.<javax.swing.JMenu: boolean isTopLevelMenu()>();

        if $z1 == 0 goto label2;

        $r6 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.JMenuItem menuItem>;

        $r7 = virtualinvoke $r6.<javax.swing.JMenuItem: java.awt.Container getParent()>();

        $z2 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: boolean isDownArrowVisible(java.awt.Container)>($r7);

        if $z2 == 0 goto label2;

        $r8 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuUI: javax.swing.JMenuItem menuItem>;

        $i0 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: int getOrientationOf(java.awt.Component)>($r8);

        if $i0 != 0 goto label1;

        $i3 = $r2.<java.awt.Dimension: int width>;

        $i4 = $i3 + 11;

        $r2.<java.awt.Dimension: int width> = $i4;

        goto label2;

     label1:
        $i1 = $r2.<java.awt.Dimension: int height>;

        $i2 = $i1 + 11;

        $r2.<java.awt.Dimension: int height> = $i2;

     label2:
        return $r2;
    }

    static boolean access$400()
    {
        boolean $z0;

        $z0 = <com.jidesoft.plaf.eclipse.EclipseMenuUI: boolean crossMenuMnemonic>;

        return $z0;
    }

    static void <clinit>()
    {
        <com.jidesoft.plaf.eclipse.EclipseMenuUI: boolean crossMenuMnemonic> = 1;

        return;
    }
}
