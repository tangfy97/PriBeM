public abstract class javax.ws.rs.core.Response$ResponseBuilder extends java.lang.Object
{

    protected void <init>()
    {
        javax.ws.rs.core.Response$ResponseBuilder r0;

        r0 := @this: javax.ws.rs.core.Response$ResponseBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected static javax.ws.rs.core.Response$ResponseBuilder newInstance()
    {
        javax.ws.rs.ext.RuntimeDelegate $r0;
        javax.ws.rs.core.Response$ResponseBuilder $r1;

        $r0 = staticinvoke <javax.ws.rs.ext.RuntimeDelegate: javax.ws.rs.ext.RuntimeDelegate getInstance()>();

        $r1 = virtualinvoke $r0.<javax.ws.rs.ext.RuntimeDelegate: javax.ws.rs.core.Response$ResponseBuilder createResponseBuilder()>();

        return $r1;
    }

    public abstract javax.ws.rs.core.Response build();

    public abstract javax.ws.rs.core.Response$ResponseBuilder clone() throws java.lang.CloneNotSupportedException;

    public abstract javax.ws.rs.core.Response$ResponseBuilder status(int);

    public javax.ws.rs.core.Response$ResponseBuilder status(javax.ws.rs.core.Response$StatusType)
    {
        javax.ws.rs.core.Response$ResponseBuilder r1, $r2;
        int $i0;
        java.lang.IllegalArgumentException $r3;
        javax.ws.rs.core.Response$StatusType r0;

        r1 := @this: javax.ws.rs.core.Response$ResponseBuilder;

        r0 := @parameter0: javax.ws.rs.core.Response$StatusType;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label1:
        $i0 = interfaceinvoke r0.<javax.ws.rs.core.Response$StatusType: int getStatusCode()>();

        $r2 = virtualinvoke r1.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder status(int)>($i0);

        return $r2;
    }

    public javax.ws.rs.core.Response$ResponseBuilder status(javax.ws.rs.core.Response$Status)
    {
        javax.ws.rs.core.Response$Status r1;
        javax.ws.rs.core.Response$ResponseBuilder r0, $r2;

        r0 := @this: javax.ws.rs.core.Response$ResponseBuilder;

        r1 := @parameter0: javax.ws.rs.core.Response$Status;

        $r2 = virtualinvoke r0.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder status(javax.ws.rs.core.Response$StatusType)>(r1);

        return $r2;
    }

    public abstract javax.ws.rs.core.Response$ResponseBuilder entity(java.lang.Object);

    public abstract javax.ws.rs.core.Response$ResponseBuilder entity(java.lang.Object, java.lang.'annotation'.Annotation[]);

    public abstract transient javax.ws.rs.core.Response$ResponseBuilder allow(java.lang.String[]);

    public abstract javax.ws.rs.core.Response$ResponseBuilder allow(java.util.Set);

    public abstract javax.ws.rs.core.Response$ResponseBuilder cacheControl(javax.ws.rs.core.CacheControl);

    public abstract javax.ws.rs.core.Response$ResponseBuilder encoding(java.lang.String);

    public abstract javax.ws.rs.core.Response$ResponseBuilder header(java.lang.String, java.lang.Object);

    public abstract javax.ws.rs.core.Response$ResponseBuilder replaceAll(javax.ws.rs.core.MultivaluedMap);

    public abstract javax.ws.rs.core.Response$ResponseBuilder language(java.lang.String);

    public abstract javax.ws.rs.core.Response$ResponseBuilder language(java.util.Locale);

    public abstract javax.ws.rs.core.Response$ResponseBuilder type(javax.ws.rs.core.MediaType);

    public abstract javax.ws.rs.core.Response$ResponseBuilder type(java.lang.String);

    public abstract javax.ws.rs.core.Response$ResponseBuilder variant(javax.ws.rs.core.Variant);

    public abstract javax.ws.rs.core.Response$ResponseBuilder contentLocation(java.net.URI);

    public abstract transient javax.ws.rs.core.Response$ResponseBuilder cookie(javax.ws.rs.core.NewCookie[]);

    public abstract javax.ws.rs.core.Response$ResponseBuilder expires(java.util.Date);

    public abstract javax.ws.rs.core.Response$ResponseBuilder lastModified(java.util.Date);

    public abstract javax.ws.rs.core.Response$ResponseBuilder location(java.net.URI);

    public abstract javax.ws.rs.core.Response$ResponseBuilder tag(javax.ws.rs.core.EntityTag);

    public abstract javax.ws.rs.core.Response$ResponseBuilder tag(java.lang.String);

    public abstract transient javax.ws.rs.core.Response$ResponseBuilder variants(javax.ws.rs.core.Variant[]);

    public abstract javax.ws.rs.core.Response$ResponseBuilder variants(java.util.List);

    public abstract transient javax.ws.rs.core.Response$ResponseBuilder links(javax.ws.rs.core.Link[]);

    public abstract javax.ws.rs.core.Response$ResponseBuilder link(java.net.URI, java.lang.String);

    public abstract javax.ws.rs.core.Response$ResponseBuilder link(java.lang.String, java.lang.String);

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        javax.ws.rs.core.Response$ResponseBuilder r0, $r1;

        r0 := @this: javax.ws.rs.core.Response$ResponseBuilder;

        $r1 = virtualinvoke r0.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder clone()>();

        return $r1;
    }
}
