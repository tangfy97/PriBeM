public abstract class org.apache.lucene.index.IndexCommit extends java.lang.Object implements java.lang.Comparable
{

    public abstract java.lang.String getSegmentsFileName();

    public abstract java.util.Collection getFileNames() throws java.io.IOException;

    public abstract org.apache.lucene.store.Directory getDirectory();

    public abstract void delete();

    public abstract boolean isDeleted();

    public abstract int getSegmentCount();

    protected void <init>()
    {
        org.apache.lucene.index.IndexCommit r0;

        r0 := @this: org.apache.lucene.index.IndexCommit;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.lucene.index.IndexCommit r1, r3;
        long $l0, $l1;
        byte $b2;
        org.apache.lucene.store.Directory $r2, $r4;
        java.lang.Object r0;
        boolean $z0, $z1;

        r3 := @this: org.apache.lucene.index.IndexCommit;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.lucene.index.IndexCommit;

        if $z0 == 0 goto label3;

        r1 = (org.apache.lucene.index.IndexCommit) r0;

        $r2 = virtualinvoke r1.<org.apache.lucene.index.IndexCommit: org.apache.lucene.store.Directory getDirectory()>();

        $r4 = virtualinvoke r3.<org.apache.lucene.index.IndexCommit: org.apache.lucene.store.Directory getDirectory()>();

        if $r2 != $r4 goto label1;

        $l0 = virtualinvoke r1.<org.apache.lucene.index.IndexCommit: long getGeneration()>();

        $l1 = virtualinvoke r3.<org.apache.lucene.index.IndexCommit: long getGeneration()>();

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        return 0;
    }

    public int hashCode()
    {
        org.apache.lucene.index.IndexCommit r0;
        java.lang.Long $r2;
        org.apache.lucene.store.Directory $r1;
        int $i0, $i2, $i3;
        long $l1;

        r0 := @this: org.apache.lucene.index.IndexCommit;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.IndexCommit: org.apache.lucene.store.Directory getDirectory()>();

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $l1 = virtualinvoke r0.<org.apache.lucene.index.IndexCommit: long getGeneration()>();

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $i2 = virtualinvoke $r2.<java.lang.Long: int hashCode()>();

        $i3 = $i0 + $i2;

        return $i3;
    }

    public abstract long getGeneration();

    public abstract java.util.Map getUserData() throws java.io.IOException;

    public int compareTo(org.apache.lucene.index.IndexCommit)
    {
        org.apache.lucene.index.IndexCommit r0, r2;
        java.lang.UnsupportedOperationException $r5;
        long $l0, $l1;
        byte $b2, $b3;
        org.apache.lucene.store.Directory $r1, $r3;
        int $i4, $i6, $i7;

        r0 := @this: org.apache.lucene.index.IndexCommit;

        r2 := @parameter0: org.apache.lucene.index.IndexCommit;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.IndexCommit: org.apache.lucene.store.Directory getDirectory()>();

        $r3 = virtualinvoke r2.<org.apache.lucene.index.IndexCommit: org.apache.lucene.store.Directory getDirectory()>();

        if $r1 == $r3 goto label1;

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("cannot compare IndexCommits from different Directory instances");

        throw $r5;

     label1:
        $l0 = virtualinvoke r0.<org.apache.lucene.index.IndexCommit: long getGeneration()>();

        $l1 = virtualinvoke r2.<org.apache.lucene.index.IndexCommit: long getGeneration()>();

        $b2 = $l0 cmp $l1;

        $i4 = (int) $b2;

        if $i4 >= 0 goto label2;

        $i6 = (int) -1;

        return $i6;

     label2:
        $b3 = $l0 cmp $l1;

        $i7 = (int) $b3;

        if $i7 <= 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public volatile int compareTo(java.lang.Object)
    {
        org.apache.lucene.index.IndexCommit r0, $r2;
        int $i0;
        java.lang.Object r1;

        r0 := @this: org.apache.lucene.index.IndexCommit;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.lucene.index.IndexCommit) r1;

        $i0 = virtualinvoke r0.<org.apache.lucene.index.IndexCommit: int compareTo(org.apache.lucene.index.IndexCommit)>($r2);

        return $i0;
    }
}
