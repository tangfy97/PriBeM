class com.hp.hpl.jena.sparql.core.DatasetGraphSimpleMem$MiniSet extends java.lang.Object implements java.lang.Iterable
{
    final java.util.Collection store;

    void <init>(java.util.Collection)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphSimpleMem$MiniSet r0;
        java.util.Collection r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphSimpleMem$MiniSet;

        r1 := @parameter0: java.util.Collection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.core.DatasetGraphSimpleMem$MiniSet: java.util.Collection store> = r1;

        return;
    }

    void <init>()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphSimpleMem$MiniSet r0;
        java.util.ArrayList $r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphSimpleMem$MiniSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.core.DatasetGraphSimpleMem$MiniSet: java.util.Collection store> = $r1;

        return;
    }

    void add(java.lang.Object)
    {
        java.util.Collection $r2, $r3;
        com.hp.hpl.jena.sparql.core.DatasetGraphSimpleMem$MiniSet r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphSimpleMem$MiniSet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphSimpleMem$MiniSet: java.util.Collection store>;

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphSimpleMem$MiniSet: java.util.Collection store>;

        interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>(r1);

     label1:
        return;
    }

    void remove(java.lang.Object)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphSimpleMem$MiniSet r0;
        java.lang.Object r1;
        java.util.Collection $r2;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphSimpleMem$MiniSet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphSimpleMem$MiniSet: java.util.Collection store>;

        interfaceinvoke $r2.<java.util.Collection: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public java.util.Iterator iterator()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphSimpleMem$MiniSet r0;
        java.util.Iterator $r2;
        java.util.Collection $r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphSimpleMem$MiniSet;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphSimpleMem$MiniSet: java.util.Collection store>;

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

        return $r2;
    }

    boolean isEmpty()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphSimpleMem$MiniSet r0;
        java.util.Collection $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphSimpleMem$MiniSet;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphSimpleMem$MiniSet: java.util.Collection store>;

        $z0 = interfaceinvoke $r1.<java.util.Collection: boolean isEmpty()>();

        return $z0;
    }

    int size()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphSimpleMem$MiniSet r0;
        int $i0;
        java.util.Collection $r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphSimpleMem$MiniSet;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphSimpleMem$MiniSet: java.util.Collection store>;

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        return $i0;
    }
}
