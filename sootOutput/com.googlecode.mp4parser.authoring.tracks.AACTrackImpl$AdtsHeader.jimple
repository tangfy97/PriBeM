class com.googlecode.mp4parser.authoring.tracks.AACTrackImpl$AdtsHeader extends java.lang.Object
{
    int sampleFrequencyIndex;
    int mpegVersion;
    int layer;
    int protectionAbsent;
    int profile;
    int sampleRate;
    int channelconfig;
    int original;
    int home;
    int copyrightedStream;
    int copyrightStart;
    int frameLength;
    int bufferFullness;
    int numAacFramesPerAdtsFrame;
    final com.googlecode.mp4parser.authoring.tracks.AACTrackImpl this$0;

    void <init>(com.googlecode.mp4parser.authoring.tracks.AACTrackImpl)
    {
        com.googlecode.mp4parser.authoring.tracks.AACTrackImpl$AdtsHeader r0;
        com.googlecode.mp4parser.authoring.tracks.AACTrackImpl r1;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.AACTrackImpl$AdtsHeader;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.tracks.AACTrackImpl;

        r0.<com.googlecode.mp4parser.authoring.tracks.AACTrackImpl$AdtsHeader: com.googlecode.mp4parser.authoring.tracks.AACTrackImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    int getSize()
    {
        byte $b2;
        com.googlecode.mp4parser.authoring.tracks.AACTrackImpl$AdtsHeader r0;
        int $i0, $i1;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.AACTrackImpl$AdtsHeader;

        $i0 = r0.<com.googlecode.mp4parser.authoring.tracks.AACTrackImpl$AdtsHeader: int protectionAbsent>;

        if $i0 != 0 goto label1;

        $b2 = 2;

        goto label2;

     label1:
        $b2 = 0;

     label2:
        $i1 = 7 + $b2;

        return $i1;
    }
}
