public class org.jdesktop.swingx.plaf.basic.core.BasicXListUI extends javax.swing.plaf.basic.BasicListUI
{
    private static final java.lang.StringBuilder BASELINE_COMPONENT_KEY;
    protected org.jdesktop.swingx.JXList list;
    protected javax.swing.CellRendererPane rendererPane;
    protected java.awt.event.FocusListener focusListener;
    protected javax.swing.event.MouseInputListener mouseInputListener;
    protected javax.swing.event.ListSelectionListener listSelectionListener;
    protected javax.swing.event.ListDataListener listDataListener;
    protected java.beans.PropertyChangeListener propertyChangeListener;
    private org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Handler handler;
    protected int[] cellHeights;
    protected int cellHeight;
    protected int cellWidth;
    protected int updateLayoutStateNeeded;
    private int listHeight;
    private int listWidth;
    private int layoutOrientation;
    private int columnCount;
    private int preferredHeight;
    private int rowsPerColumn;
    private long timeFactor;
    private boolean isFileList;
    private boolean isLeftToRight;
    protected static final int modelChanged;
    protected static final int selectionModelChanged;
    protected static final int fontChanged;
    protected static final int fixedCellWidthChanged;
    protected static final int fixedCellHeightChanged;
    protected static final int prototypeCellValueChanged;
    protected static final int cellRendererChanged;
    private static final int layoutOrientationChanged;
    private static final int heightChanged;
    private static final int widthChanged;
    private static final int componentOrientationChanged;
    private static final int DROP_LINE_THICKNESS;
    private javax.swing.ListModel modelX;
    private org.jdesktop.swingx.plaf.basic.core.ListSortUI sortUI;
    private static final int CHANGE_LEAD;
    private static final int CHANGE_SELECTION;
    private static final int EXTEND_SELECTION;
    private static final javax.swing.TransferHandler defaultTransferHandler;

    public void <init>()
    {
        int $i1, $i3;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        specialinvoke r0.<javax.swing.plaf.basic.BasicListUI: void <init>()>();

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list> = null;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int[] cellHeights> = null;

        $i1 = (int) -1;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int cellHeight> = $i1;

        $i3 = (int) -1;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int cellWidth> = $i3;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int updateLayoutStateNeeded> = 1;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: long timeFactor> = 1000L;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: boolean isFileList> = 0;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: boolean isLeftToRight> = 1;

        return;
    }

    public static void loadActionMap(org.jdesktop.swingx.plaf.basic.core.LazyActionMap)
    {
        org.jdesktop.swingx.plaf.basic.core.LazyActionMap r0;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30;
        javax.swing.Action $r31, $r33, $r34, $r36, $r37, $r39;
        java.lang.Object $r32, $r35, $r38;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.core.LazyActionMap;

        $r1 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions;

        specialinvoke $r1.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions: void <init>(java.lang.String)>("selectPreviousColumn");

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.LazyActionMap: void put(javax.swing.Action)>($r1);

        $r2 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions;

        specialinvoke $r2.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions: void <init>(java.lang.String)>("selectPreviousColumnExtendSelection");

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.LazyActionMap: void put(javax.swing.Action)>($r2);

        $r3 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions;

        specialinvoke $r3.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions: void <init>(java.lang.String)>("selectPreviousColumnChangeLead");

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.LazyActionMap: void put(javax.swing.Action)>($r3);

        $r4 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions;

        specialinvoke $r4.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions: void <init>(java.lang.String)>("selectNextColumn");

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.LazyActionMap: void put(javax.swing.Action)>($r4);

        $r5 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions;

        specialinvoke $r5.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions: void <init>(java.lang.String)>("selectNextColumnExtendSelection");

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.LazyActionMap: void put(javax.swing.Action)>($r5);

        $r6 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions;

        specialinvoke $r6.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions: void <init>(java.lang.String)>("selectNextColumnChangeLead");

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.LazyActionMap: void put(javax.swing.Action)>($r6);

        $r7 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions;

        specialinvoke $r7.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions: void <init>(java.lang.String)>("selectPreviousRow");

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.LazyActionMap: void put(javax.swing.Action)>($r7);

        $r8 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions;

        specialinvoke $r8.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions: void <init>(java.lang.String)>("selectPreviousRowExtendSelection");

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.LazyActionMap: void put(javax.swing.Action)>($r8);

        $r9 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions;

        specialinvoke $r9.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions: void <init>(java.lang.String)>("selectPreviousRowChangeLead");

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.LazyActionMap: void put(javax.swing.Action)>($r9);

        $r10 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions;

        specialinvoke $r10.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions: void <init>(java.lang.String)>("selectNextRow");

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.LazyActionMap: void put(javax.swing.Action)>($r10);

        $r11 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions;

        specialinvoke $r11.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions: void <init>(java.lang.String)>("selectNextRowExtendSelection");

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.LazyActionMap: void put(javax.swing.Action)>($r11);

        $r12 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions;

        specialinvoke $r12.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions: void <init>(java.lang.String)>("selectNextRowChangeLead");

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.LazyActionMap: void put(javax.swing.Action)>($r12);

        $r13 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions;

        specialinvoke $r13.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions: void <init>(java.lang.String)>("selectFirstRow");

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.LazyActionMap: void put(javax.swing.Action)>($r13);

        $r14 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions;

        specialinvoke $r14.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions: void <init>(java.lang.String)>("selectFirstRowExtendSelection");

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.LazyActionMap: void put(javax.swing.Action)>($r14);

        $r15 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions;

        specialinvoke $r15.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions: void <init>(java.lang.String)>("selectFirstRowChangeLead");

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.LazyActionMap: void put(javax.swing.Action)>($r15);

        $r16 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions;

        specialinvoke $r16.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions: void <init>(java.lang.String)>("selectLastRow");

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.LazyActionMap: void put(javax.swing.Action)>($r16);

        $r17 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions;

        specialinvoke $r17.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions: void <init>(java.lang.String)>("selectLastRowExtendSelection");

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.LazyActionMap: void put(javax.swing.Action)>($r17);

        $r18 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions;

        specialinvoke $r18.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions: void <init>(java.lang.String)>("selectLastRowChangeLead");

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.LazyActionMap: void put(javax.swing.Action)>($r18);

        $r19 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions;

        specialinvoke $r19.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions: void <init>(java.lang.String)>("scrollUp");

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.LazyActionMap: void put(javax.swing.Action)>($r19);

        $r20 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions;

        specialinvoke $r20.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions: void <init>(java.lang.String)>("scrollUpExtendSelection");

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.LazyActionMap: void put(javax.swing.Action)>($r20);

        $r21 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions;

        specialinvoke $r21.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions: void <init>(java.lang.String)>("scrollUpChangeLead");

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.LazyActionMap: void put(javax.swing.Action)>($r21);

        $r22 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions;

        specialinvoke $r22.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions: void <init>(java.lang.String)>("scrollDown");

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.LazyActionMap: void put(javax.swing.Action)>($r22);

        $r23 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions;

        specialinvoke $r23.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions: void <init>(java.lang.String)>("scrollDownExtendSelection");

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.LazyActionMap: void put(javax.swing.Action)>($r23);

        $r24 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions;

        specialinvoke $r24.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions: void <init>(java.lang.String)>("scrollDownChangeLead");

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.LazyActionMap: void put(javax.swing.Action)>($r24);

        $r25 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions;

        specialinvoke $r25.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions: void <init>(java.lang.String)>("selectAll");

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.LazyActionMap: void put(javax.swing.Action)>($r25);

        $r26 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions;

        specialinvoke $r26.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions: void <init>(java.lang.String)>("clearSelection");

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.LazyActionMap: void put(javax.swing.Action)>($r26);

        $r27 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions;

        specialinvoke $r27.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions: void <init>(java.lang.String)>("addToSelection");

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.LazyActionMap: void put(javax.swing.Action)>($r27);

        $r28 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions;

        specialinvoke $r28.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions: void <init>(java.lang.String)>("toggleAndAnchor");

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.LazyActionMap: void put(javax.swing.Action)>($r28);

        $r29 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions;

        specialinvoke $r29.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions: void <init>(java.lang.String)>("extendTo");

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.LazyActionMap: void put(javax.swing.Action)>($r29);

        $r30 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions;

        specialinvoke $r30.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Actions: void <init>(java.lang.String)>("moveSelectionTo");

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.LazyActionMap: void put(javax.swing.Action)>($r30);

        $r31 = staticinvoke <javax.swing.TransferHandler: javax.swing.Action getCutAction()>();

        $r32 = interfaceinvoke $r31.<javax.swing.Action: java.lang.Object getValue(java.lang.String)>("Name");

        $r33 = staticinvoke <javax.swing.TransferHandler: javax.swing.Action getCutAction()>();

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.LazyActionMap: void put(java.lang.Object,javax.swing.Action)>($r32, $r33);

        $r34 = staticinvoke <javax.swing.TransferHandler: javax.swing.Action getCopyAction()>();

        $r35 = interfaceinvoke $r34.<javax.swing.Action: java.lang.Object getValue(java.lang.String)>("Name");

        $r36 = staticinvoke <javax.swing.TransferHandler: javax.swing.Action getCopyAction()>();

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.LazyActionMap: void put(java.lang.Object,javax.swing.Action)>($r35, $r36);

        $r37 = staticinvoke <javax.swing.TransferHandler: javax.swing.Action getPasteAction()>();

        $r38 = interfaceinvoke $r37.<javax.swing.Action: java.lang.Object getValue(java.lang.String)>("Name");

        $r39 = staticinvoke <javax.swing.TransferHandler: javax.swing.Action getPasteAction()>();

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.LazyActionMap: void put(java.lang.Object,javax.swing.Action)>($r38, $r39);

        return;
    }

    protected javax.swing.ListModel getViewModel()
    {
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI$1 $r3;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        javax.swing.ListModel $r1, $r2;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: javax.swing.ListModel modelX>;

        if $r1 != null goto label1;

        $r3 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$1;

        specialinvoke $r3.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$1: void <init>(org.jdesktop.swingx.plaf.basic.core.BasicXListUI)>(r0);

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: javax.swing.ListModel modelX> = $r3;

     label1:
        $r2 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: javax.swing.ListModel modelX>;

        return $r2;
    }

    protected int getElementCount()
    {
        org.jdesktop.swingx.JXList $r1;
        int $i0;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $i0 = virtualinvoke $r1.<org.jdesktop.swingx.JXList: int getElementCount()>();

        return $i0;
    }

    protected java.lang.Object getElementAt(int)
    {
        int i0;
        org.jdesktop.swingx.JXList $r1;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        java.lang.Object $r2;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        i0 := @parameter0: int;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXList: java.lang.Object getElementAt(int)>(i0);

        return $r2;
    }

    protected org.jdesktop.swingx.plaf.basic.core.ListSortUI getSortUI()
    {
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        org.jdesktop.swingx.plaf.basic.core.ListSortUI $r1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.plaf.basic.core.ListSortUI sortUI>;

        return $r1;
    }

    protected void installSortUI()
    {
        org.jdesktop.swingx.plaf.basic.core.ListSortUI $r3;
        org.jdesktop.swingx.JXList $r1, $r4, $r5;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        javax.swing.RowSorter $r2, $r6;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXList: javax.swing.RowSorter getRowSorter()>();

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = new org.jdesktop.swingx.plaf.basic.core.ListSortUI;

        $r5 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r4 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r6 = virtualinvoke $r4.<org.jdesktop.swingx.JXList: javax.swing.RowSorter getRowSorter()>();

        specialinvoke $r3.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: void <init>(org.jdesktop.swingx.JXList,javax.swing.RowSorter)>($r5, $r6);

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.plaf.basic.core.ListSortUI sortUI> = $r3;

        return;
    }

    protected void uninstallSortUI()
    {
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        org.jdesktop.swingx.plaf.basic.core.ListSortUI $r1, $r2;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.plaf.basic.core.ListSortUI sortUI>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.plaf.basic.core.ListSortUI sortUI>;

        virtualinvoke $r2.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: void dispose()>();

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.plaf.basic.core.ListSortUI sortUI> = null;

        return;
    }

    protected void updateSortUI(java.lang.String)
    {
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r2;
        java.lang.String r0, $r1;
        boolean $z0;

        r2 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        r0 := @parameter0: java.lang.String;

        $r1 = "rowSorter";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        specialinvoke r2.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: void updateSortUIToRowSorterProperty()>();

     label1:
        return;
    }

    private void updateSortUIToRowSorterProperty()
    {
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: void uninstallSortUI()>();

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: void installSortUI()>();

        return;
    }

    protected boolean processedBySortUI(javax.swing.event.ListDataEvent)
    {
        org.jdesktop.swingx.plaf.basic.core.ListSortUI $r1, $r3;
        javax.swing.event.ListDataEvent r2;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        r2 := @parameter0: javax.swing.event.ListDataEvent;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.plaf.basic.core.ListSortUI sortUI>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r3 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.plaf.basic.core.ListSortUI sortUI>;

        virtualinvoke $r3.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: void modelChanged(javax.swing.event.ListDataEvent)>(r2);

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int updateLayoutStateNeeded> = 1;

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: void redrawList()>();

        return 1;
    }

    protected boolean processedBySortUI(javax.swing.event.ListSelectionEvent)
    {
        org.jdesktop.swingx.plaf.basic.core.ListSortUI $r1, $r3;
        org.jdesktop.swingx.JXList $r4;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        javax.swing.event.ListSelectionEvent r2;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        r2 := @parameter0: javax.swing.event.ListSelectionEvent;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.plaf.basic.core.ListSortUI sortUI>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r3 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.plaf.basic.core.ListSortUI sortUI>;

        virtualinvoke $r3.<org.jdesktop.swingx.plaf.basic.core.ListSortUI: void viewSelectionChanged(javax.swing.event.ListSelectionEvent)>(r2);

        $r4 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        virtualinvoke $r4.<org.jdesktop.swingx.JXList: void repaint()>();

        return 1;
    }

    public void invalidateCellSizeCache()
    {
        int $i0, $i1;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        $i0 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int updateLayoutStateNeeded>;

        $i1 = $i0 | 1;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int updateLayoutStateNeeded> = $i1;

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: void redrawList()>();

        return;
    }

    protected void paintCell(java.awt.Graphics, int, java.awt.Rectangle, javax.swing.ListCellRenderer, javax.swing.ListModel, javax.swing.ListSelectionModel, int)
    {
        javax.swing.ListSelectionModel r4;
        java.awt.Rectangle r6;
        int i0, $i1, $i2, $i3, $i4, i5, $i6, i7, $i8, $i9, i10, $i11;
        org.jdesktop.swingx.JXList $r3, $r9, $r12;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r2;
        java.awt.Component $r10;
        javax.swing.ListCellRenderer r5;
        java.awt.Dimension $r8;
        javax.swing.CellRendererPane $r11;
        java.awt.Graphics r7;
        java.lang.Object $r1;
        javax.swing.ListModel r0;

        r2 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        r7 := @parameter0: java.awt.Graphics;

        i0 := @parameter1: int;

        r6 := @parameter2: java.awt.Rectangle;

        r5 := @parameter3: javax.swing.ListCellRenderer;

        r0 := @parameter4: javax.swing.ListModel;

        r4 := @parameter5: javax.swing.ListSelectionModel;

        i5 := @parameter6: int;

        $r1 = interfaceinvoke r0.<javax.swing.ListModel: java.lang.Object getElementAt(int)>(i0);

        $r3 = r2.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $z0 = virtualinvoke $r3.<org.jdesktop.swingx.JXList: boolean hasFocus()>();

        if $z0 == 0 goto label1;

        if i0 != i5 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        $z3 = interfaceinvoke r4.<javax.swing.ListSelectionModel: boolean isSelectedIndex(int)>(i0);

        $r9 = r2.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r10 = interfaceinvoke r5.<javax.swing.ListCellRenderer: java.awt.Component getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)>($r9, $r1, i0, $z3, $z2);

        $i6 = r6.<java.awt.Rectangle: int x>;

        i7 = $i6;

        $i8 = r6.<java.awt.Rectangle: int y>;

        $i9 = r6.<java.awt.Rectangle: int width>;

        i10 = $i9;

        $i11 = r6.<java.awt.Rectangle: int height>;

        $z4 = r2.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: boolean isFileList>;

        if $z4 == 0 goto label4;

        $r8 = virtualinvoke $r10.<java.awt.Component: java.awt.Dimension getPreferredSize()>();

        $i1 = $r8.<java.awt.Dimension: int width>;

        $i2 = $i1 + 4;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i9, $i2);

        $z1 = r2.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: boolean isLeftToRight>;

        if $z1 != 0 goto label3;

        $i4 = $i9 - $i3;

        i7 = $i6 + $i4;

     label3:
        i10 = $i3;

     label4:
        $r11 = r2.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: javax.swing.CellRendererPane rendererPane>;

        $r12 = r2.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        virtualinvoke $r11.<javax.swing.CellRendererPane: void paintComponent(java.awt.Graphics,java.awt.Component,java.awt.Container,int,int,int,int,boolean)>(r7, $r10, $r12, i7, $i8, i10, $i11, 1);

        return;
    }

    public void paint(java.awt.Graphics, javax.swing.JComponent)
    {
        java.awt.Shape $r1;
        javax.swing.JComponent r3;
        java.awt.Graphics r0;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r2;

        r2 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        r0 := @parameter0: java.awt.Graphics;

        r3 := @parameter1: javax.swing.JComponent;

        $r1 = virtualinvoke r0.<java.awt.Graphics: java.awt.Shape getClip()>();

        specialinvoke r2.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: void paintImpl(java.awt.Graphics,javax.swing.JComponent)>(r0, r3);

        virtualinvoke r0.<java.awt.Graphics: void setClip(java.awt.Shape)>($r1);

        specialinvoke r2.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: void paintDropLine(java.awt.Graphics)>(r0);

        return;
    }

    private void paintImpl(java.awt.Graphics, javax.swing.JComponent)
    {
        javax.swing.CellRendererPane $r8;
        javax.swing.ListSelectionModel $r16;
        org.jdesktop.swingx.JXList $r1, $r6, $r7, $r9, $r11, $r12, $r15;
        java.awt.ComponentOrientation $r5;
        javax.swing.ListModel $r14;
        boolean $z0;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        java.awt.Graphics r2;
        java.awt.Rectangle $r3, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, i46, i47, $i48, i49, i50, i51;
        javax.swing.JComponent r4;
        javax.swing.ListCellRenderer $r13;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        r2 := @parameter0: java.awt.Graphics;

        r4 := @parameter1: javax.swing.JComponent;

        $i0 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int layoutOrientation>;

        lookupswitch($i0)
        {
            case 1: goto label01;
            case 2: goto label02;
            default: goto label03;
        };

     label01:
        $r11 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $i42 = virtualinvoke $r11.<org.jdesktop.swingx.JXList: int getHeight()>();

        $i43 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int listHeight>;

        if $i42 == $i43 goto label03;

        $i44 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int updateLayoutStateNeeded>;

        $i45 = $i44 | 256;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int updateLayoutStateNeeded> = $i45;

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: void redrawList()>();

        goto label03;

     label02:
        $r1 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $i1 = virtualinvoke $r1.<org.jdesktop.swingx.JXList: int getWidth()>();

        $i2 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int listWidth>;

        if $i1 == $i2 goto label03;

        $i40 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int updateLayoutStateNeeded>;

        $i41 = $i40 | 512;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int updateLayoutStateNeeded> = $i41;

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: void redrawList()>();

        goto label03;

     label03:
        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: void maybeUpdateLayoutState()>();

        $r12 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r13 = virtualinvoke $r12.<org.jdesktop.swingx.JXList: javax.swing.ListCellRenderer getCellRenderer()>();

        $r14 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: javax.swing.ListModel getViewModel()>();

        $r15 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r16 = virtualinvoke $r15.<org.jdesktop.swingx.JXList: javax.swing.ListSelectionModel getSelectionModel()>();

        if $r13 == null goto label04;

        $i3 = interfaceinvoke $r14.<javax.swing.ListModel: int getSize()>();

        if $i3 != 0 goto label05;

     label04:
        return;

     label05:
        $r3 = virtualinvoke r2.<java.awt.Graphics: java.awt.Rectangle getClipBounds()>();

        $r5 = virtualinvoke r4.<javax.swing.JComponent: java.awt.ComponentOrientation getComponentOrientation()>();

        $z0 = virtualinvoke $r5.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z0 == 0 goto label06;

        $i34 = $r3.<java.awt.Rectangle: int x>;

        $i33 = $r3.<java.awt.Rectangle: int y>;

        i46 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int convertLocationToColumn(int,int)>($i34, $i33);

        $i36 = $r3.<java.awt.Rectangle: int x>;

        $i35 = $r3.<java.awt.Rectangle: int width>;

        $i38 = $i36 + $i35;

        $i37 = $r3.<java.awt.Rectangle: int y>;

        i47 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int convertLocationToColumn(int,int)>($i38, $i37);

        goto label07;

     label06:
        $i5 = $r3.<java.awt.Rectangle: int x>;

        $i4 = $r3.<java.awt.Rectangle: int width>;

        $i7 = $i5 + $i4;

        $i6 = $r3.<java.awt.Rectangle: int y>;

        i46 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int convertLocationToColumn(int,int)>($i7, $i6);

        $i9 = $r3.<java.awt.Rectangle: int x>;

        $i8 = $r3.<java.awt.Rectangle: int y>;

        i47 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int convertLocationToColumn(int,int)>($i9, $i8);

     label07:
        $i11 = $r3.<java.awt.Rectangle: int y>;

        $i10 = $r3.<java.awt.Rectangle: int height>;

        $i39 = $i11 + $i10;

        $r6 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $i12 = virtualinvoke $r6.<org.jdesktop.swingx.JXList: int getLeadSelectionIndex()>();

        $r7 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $i13 = staticinvoke <org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int adjustIndex(int,javax.swing.JList)>($i12, $r7);

        $i14 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int layoutOrientation>;

        if $i14 != 2 goto label08;

        $i48 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int columnCount>;

        goto label09;

     label08:
        $i48 = 1;

     label09:
        i15 = $i48;

        i49 = i46;

     label10:
        if i49 > i47 goto label13;

        $i16 = $r3.<java.awt.Rectangle: int y>;

        $i17 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int convertLocationToRowInColumn(int,int)>($i16, i49);

        i50 = $i17;

        $i18 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int getRowCount(int)>(i49);

        $i19 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int getModelIndex(int,int)>(i49, $i17);

        i51 = $i19;

        $r9 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r10 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: java.awt.Rectangle getCellBounds(javax.swing.JList,int,int)>($r9, $i19, $i19);

        if $r10 != null goto label11;

        return;

     label11:
        if i50 >= $i18 goto label12;

        $i20 = $r10.<java.awt.Rectangle: int y>;

        if $i20 >= $i39 goto label12;

        if i51 >= $i3 goto label12;

        $i21 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int getHeight(int,int)>(i49, i50);

        $r10.<java.awt.Rectangle: int height> = $i21;

        $i25 = $r10.<java.awt.Rectangle: int x>;

        $i24 = $r10.<java.awt.Rectangle: int y>;

        $i23 = $r10.<java.awt.Rectangle: int width>;

        $i22 = $r10.<java.awt.Rectangle: int height>;

        virtualinvoke r2.<java.awt.Graphics: void setClip(int,int,int,int)>($i25, $i24, $i23, $i22);

        $i29 = $r3.<java.awt.Rectangle: int x>;

        $i28 = $r3.<java.awt.Rectangle: int y>;

        $i27 = $r3.<java.awt.Rectangle: int width>;

        $i26 = $r3.<java.awt.Rectangle: int height>;

        virtualinvoke r2.<java.awt.Graphics: void clipRect(int,int,int,int)>($i29, $i28, $i27, $i26);

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: void paintCell(java.awt.Graphics,int,java.awt.Rectangle,javax.swing.ListCellRenderer,javax.swing.ListModel,javax.swing.ListSelectionModel,int)>(r2, i51, $r10, $r13, $r14, $r16, $i13);

        $i31 = $r10.<java.awt.Rectangle: int y>;

        $i30 = $r10.<java.awt.Rectangle: int height>;

        $i32 = $i31 + $i30;

        $r10.<java.awt.Rectangle: int y> = $i32;

        i51 = i51 + i15;

        i50 = i50 + 1;

        goto label11;

     label12:
        i49 = i49 + 1;

        goto label10;

     label13:
        $r8 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: javax.swing.CellRendererPane rendererPane>;

        virtualinvoke $r8.<javax.swing.CellRendererPane: void removeAll()>();

        return;
    }

    private void paintDropLine(java.awt.Graphics)
    {
        java.awt.Color $r3;
        java.awt.Rectangle $r5;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        org.jdesktop.swingx.JXList $r1;
        java.awt.Graphics r4;
        int $i0, $i1, $i2, $i3;
        javax.swing.JList$DropLocation $r2;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        r4 := @parameter0: java.awt.Graphics;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXList: javax.swing.JList$DropLocation getDropLocation()>();

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<javax.swing.JList$DropLocation: boolean isInsert()>();

        if $z0 != 0 goto label2;

     label1:
        return;

     label2:
        $r3 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("List.dropLineColor");

        if $r3 == null goto label3;

        virtualinvoke r4.<java.awt.Graphics: void setColor(java.awt.Color)>($r3);

        $r5 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: java.awt.Rectangle getDropLineRect(javax.swing.JList$DropLocation)>($r2);

        $i3 = $r5.<java.awt.Rectangle: int x>;

        $i2 = $r5.<java.awt.Rectangle: int y>;

        $i1 = $r5.<java.awt.Rectangle: int width>;

        $i0 = $r5.<java.awt.Rectangle: int height>;

        virtualinvoke r4.<java.awt.Graphics: void fillRect(int,int,int,int)>($i3, $i2, $i1, $i0);

     label3:
        return;
    }

    private java.awt.Rectangle getDropLineRect(javax.swing.JList$DropLocation)
    {
        byte $b33, $b72, $b89;
        javax.swing.JList$DropLocation r1;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        java.awt.Insets $r30;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, i105, $i106, $i107, i108, i109, $i110, $i111, i112, $i113, $i114, $i116, $i118, $i119, $i121, $i123;
        org.jdesktop.swingx.JXList $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r11, $r14, $r15, $r17, $r19, $r21, $r22, $r24, $r26, $r29, $r32, $r34, $r37, $r38;
        java.awt.Point $r13, $r28;
        boolean $z0, $z1, $z2, $z3, z4, $z5, $z6;
        java.awt.Rectangle $r6, $r10, $r12, $r16, $r18, $r20, $r23, $r25, $r27, r36, $r39, $r40, $r41;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        r1 := @parameter0: javax.swing.JList$DropLocation;

        $i0 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int getElementCount()>();

        if $i0 != 0 goto label03;

        $r29 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r30 = virtualinvoke $r29.<org.jdesktop.swingx.JXList: java.awt.Insets getInsets()>();

        $i90 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int layoutOrientation>;

        if $i90 != 2 goto label02;

        $z3 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: boolean isLeftToRight>;

        if $z3 == 0 goto label01;

        $r39 = new java.awt.Rectangle;

        $i104 = $r30.<java.awt.Insets: int left>;

        $i103 = $r30.<java.awt.Insets: int top>;

        specialinvoke $r39.<java.awt.Rectangle: void <init>(int,int,int,int)>($i104, $i103, 2, 20);

        return $r39;

     label01:
        $r40 = new java.awt.Rectangle;

        $r34 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $i98 = virtualinvoke $r34.<org.jdesktop.swingx.JXList: int getWidth()>();

        $i100 = $i98 - 2;

        $i99 = $r30.<java.awt.Insets: int right>;

        $i102 = $i100 - $i99;

        $i101 = $r30.<java.awt.Insets: int top>;

        specialinvoke $r40.<java.awt.Rectangle: void <init>(int,int,int,int)>($i102, $i101, 2, 20);

        return $r40;

     label02:
        $r41 = new java.awt.Rectangle;

        $i91 = $r30.<java.awt.Insets: int left>;

        $i92 = $r30.<java.awt.Insets: int top>;

        $r32 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $i93 = virtualinvoke $r32.<org.jdesktop.swingx.JXList: int getWidth()>();

        $i94 = $r30.<java.awt.Insets: int left>;

        $i96 = $i93 - $i94;

        $i95 = $r30.<java.awt.Insets: int right>;

        $i97 = $i96 - $i95;

        specialinvoke $r41.<java.awt.Rectangle: void <init>(int,int,int,int)>($i91, $i92, $i97, 2);

        return $r41;

     label03:
        $i1 = virtualinvoke r1.<javax.swing.JList$DropLocation: int getIndex()>();

        z4 = 0;

        $i2 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int layoutOrientation>;

        if $i2 != 2 goto label16;

        if $i1 != $i0 goto label04;

        z4 = 1;

        goto label10;

     label04:
        if $i1 == 0 goto label10;

        $i52 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int convertModelToRow(int)>($i1);

        $i53 = $i1 - 1;

        $i54 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int convertModelToRow(int)>($i53);

        if $i52 == $i54 goto label10;

        $r24 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $i55 = $i1 - 1;

        $r25 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: java.awt.Rectangle getCellBounds(javax.swing.JList,int)>($r24, $i55);

        $r26 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r27 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: java.awt.Rectangle getCellBounds(javax.swing.JList,int)>($r26, $i1);

        $r28 = virtualinvoke r1.<javax.swing.JList$DropLocation: java.awt.Point getDropPoint()>();

        $z2 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: boolean isLeftToRight>;

        if $z2 == 0 goto label07;

        $i74 = $r25.<java.awt.Rectangle: int x>;

        $i73 = $r25.<java.awt.Rectangle: int width>;

        $i75 = $i74 + $i73;

        $d33 = (double) $i75;

        $i78 = $r25.<java.awt.Rectangle: int y>;

        $i76 = $r25.<java.awt.Rectangle: int height>;

        $d28 = (double) $i76;

        $d29 = $d28 / 2.0;

        $i77 = (int) $d29;

        $i79 = $i78 + $i77;

        $d32 = (double) $i79;

        $i80 = $r28.<java.awt.Point: int x>;

        $d31 = (double) $i80;

        $i81 = $r28.<java.awt.Point: int y>;

        $d30 = (double) $i81;

        $d34 = staticinvoke <java.awt.geom.Point2D: double distance(double,double,double,double)>($d33, $d32, $d31, $d30);

        $i82 = $r27.<java.awt.Rectangle: int x>;

        $d40 = (double) $i82;

        $i85 = $r27.<java.awt.Rectangle: int y>;

        $i83 = $r27.<java.awt.Rectangle: int height>;

        $d35 = (double) $i83;

        $d36 = $d35 / 2.0;

        $i84 = (int) $d36;

        $i86 = $i85 + $i84;

        $d39 = (double) $i86;

        $i87 = $r28.<java.awt.Point: int x>;

        $d38 = (double) $i87;

        $i88 = $r28.<java.awt.Point: int y>;

        $d37 = (double) $i88;

        $d41 = staticinvoke <java.awt.geom.Point2D: double distance(double,double,double,double)>($d40, $d39, $d38, $d37);

        $b89 = $d34 cmpg $d41;

        $i113 = (int) $b89;

        if $i113 >= 0 goto label05;

        $z5 = 1;

        goto label06;

     label05:
        $z5 = 0;

     label06:
        z4 = $z5;

        goto label10;

     label07:
        $i56 = $r25.<java.awt.Rectangle: int x>;

        $d19 = (double) $i56;

        $i59 = $r25.<java.awt.Rectangle: int y>;

        $i57 = $r25.<java.awt.Rectangle: int height>;

        $d14 = (double) $i57;

        $d15 = $d14 / 2.0;

        $i58 = (int) $d15;

        $i60 = $i59 + $i58;

        $d18 = (double) $i60;

        $i61 = $r28.<java.awt.Point: int x>;

        $d17 = (double) $i61;

        $i62 = $r28.<java.awt.Point: int y>;

        $d16 = (double) $i62;

        $d20 = staticinvoke <java.awt.geom.Point2D: double distance(double,double,double,double)>($d19, $d18, $d17, $d16);

        $i64 = $r27.<java.awt.Rectangle: int x>;

        $i63 = $r27.<java.awt.Rectangle: int width>;

        $i65 = $i64 + $i63;

        $d26 = (double) $i65;

        $i68 = $r27.<java.awt.Rectangle: int y>;

        $i66 = $r25.<java.awt.Rectangle: int height>;

        $d21 = (double) $i66;

        $d22 = $d21 / 2.0;

        $i67 = (int) $d22;

        $i69 = $i68 + $i67;

        $d25 = (double) $i69;

        $i70 = $r28.<java.awt.Point: int x>;

        $d24 = (double) $i70;

        $i71 = $r28.<java.awt.Point: int y>;

        $d23 = (double) $i71;

        $d27 = staticinvoke <java.awt.geom.Point2D: double distance(double,double,double,double)>($d26, $d25, $d24, $d23);

        $b72 = $d20 cmpg $d27;

        $i114 = (int) $b72;

        if $i114 >= 0 goto label08;

        $z6 = 1;

        goto label09;

     label08:
        $z6 = 0;

     label09:
        z4 = $z6;

     label10:
        if z4 == 0 goto label12;

        $i116 = (int) -1;

        i105 = $i1 + $i116;

        $r22 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r23 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: java.awt.Rectangle getCellBounds(javax.swing.JList,int)>($r22, i105);

        r36 = $r23;

        $z1 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: boolean isLeftToRight>;

        if $z1 == 0 goto label11;

        $i50 = $r23.<java.awt.Rectangle: int x>;

        $i49 = $r23.<java.awt.Rectangle: int width>;

        $i51 = $i50 + $i49;

        $r23.<java.awt.Rectangle: int x> = $i51;

        goto label13;

     label11:
        $i47 = $r23.<java.awt.Rectangle: int x>;

        $i48 = $i47 - 2;

        $r23.<java.awt.Rectangle: int x> = $i48;

        goto label13;

     label12:
        $r19 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r20 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: java.awt.Rectangle getCellBounds(javax.swing.JList,int)>($r19, $i1);

        r36 = $r20;

        $z0 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: boolean isLeftToRight>;

        if $z0 != 0 goto label13;

        $i45 = $r20.<java.awt.Rectangle: int x>;

        $i43 = $r20.<java.awt.Rectangle: int width>;

        $i44 = $i43 - 2;

        $i46 = $i45 + $i44;

        $r20.<java.awt.Rectangle: int x> = $i46;

     label13:
        $i106 = r36.<java.awt.Rectangle: int x>;

        $r37 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $i107 = virtualinvoke $r37.<org.jdesktop.swingx.JXList: int getWidth()>();

        if $i106 < $i107 goto label14;

        $r21 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $i41 = virtualinvoke $r21.<org.jdesktop.swingx.JXList: int getWidth()>();

        $i42 = $i41 - 2;

        r36.<java.awt.Rectangle: int x> = $i42;

        goto label15;

     label14:
        $i40 = r36.<java.awt.Rectangle: int x>;

        if $i40 >= 0 goto label15;

        r36.<java.awt.Rectangle: int x> = 0;

     label15:
        r36.<java.awt.Rectangle: int width> = 2;

        goto label27;

     label16:
        $i3 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int layoutOrientation>;

        if $i3 != 1 goto label23;

        if $i1 != $i0 goto label17;

        $i118 = (int) -1;

        i108 = $i1 + $i118;

        $r17 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r18 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: java.awt.Rectangle getCellBounds(javax.swing.JList,int)>($r17, i108);

        r36 = $r18;

        $i38 = $r18.<java.awt.Rectangle: int y>;

        $i37 = $r18.<java.awt.Rectangle: int height>;

        $i39 = $i38 + $i37;

        $r18.<java.awt.Rectangle: int y> = $i39;

        goto label21;

     label17:
        if $i1 == 0 goto label20;

        $i13 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int convertModelToColumn(int)>($i1);

        $i14 = $i1 - 1;

        $i15 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int convertModelToColumn(int)>($i14);

        if $i13 == $i15 goto label20;

        $r9 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $i16 = $i1 - 1;

        $r10 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: java.awt.Rectangle getCellBounds(javax.swing.JList,int)>($r9, $i16);

        $r11 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r12 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: java.awt.Rectangle getCellBounds(javax.swing.JList,int)>($r11, $i1);

        $r13 = virtualinvoke r1.<javax.swing.JList$DropLocation: java.awt.Point getDropPoint()>();

        $i19 = $r10.<java.awt.Rectangle: int x>;

        $i17 = $r10.<java.awt.Rectangle: int width>;

        $d0 = (double) $i17;

        $d1 = $d0 / 2.0;

        $i18 = (int) $d1;

        $i20 = $i19 + $i18;

        $d5 = (double) $i20;

        $i22 = $r10.<java.awt.Rectangle: int y>;

        $i21 = $r10.<java.awt.Rectangle: int height>;

        $i23 = $i22 + $i21;

        $d4 = (double) $i23;

        $i24 = $r13.<java.awt.Point: int x>;

        $d3 = (double) $i24;

        $i25 = $r13.<java.awt.Point: int y>;

        $d2 = (double) $i25;

        $d6 = staticinvoke <java.awt.geom.Point2D: double distance(double,double,double,double)>($d5, $d4, $d3, $d2);

        $i28 = $r12.<java.awt.Rectangle: int x>;

        $i26 = $r12.<java.awt.Rectangle: int width>;

        $d7 = (double) $i26;

        $d8 = $d7 / 2.0;

        $i27 = (int) $d8;

        $i29 = $i28 + $i27;

        $d12 = (double) $i29;

        $i30 = $r12.<java.awt.Rectangle: int y>;

        $d11 = (double) $i30;

        $i31 = $r13.<java.awt.Point: int x>;

        $d10 = (double) $i31;

        $i32 = $r13.<java.awt.Point: int y>;

        $d9 = (double) $i32;

        $d13 = staticinvoke <java.awt.geom.Point2D: double distance(double,double,double,double)>($d12, $d11, $d10, $d9);

        $b33 = $d6 cmpg $d13;

        $i119 = (int) $b33;

        if $i119 >= 0 goto label18;

        $i121 = (int) -1;

        i109 = $i1 + $i121;

        $r15 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r16 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: java.awt.Rectangle getCellBounds(javax.swing.JList,int)>($r15, i109);

        r36 = $r16;

        $i35 = $r16.<java.awt.Rectangle: int y>;

        $i34 = $r16.<java.awt.Rectangle: int height>;

        $i36 = $i35 + $i34;

        $r16.<java.awt.Rectangle: int y> = $i36;

        goto label19;

     label18:
        $r14 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        r36 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: java.awt.Rectangle getCellBounds(javax.swing.JList,int)>($r14, $i1);

     label19:
        goto label21;

     label20:
        $r7 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        r36 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: java.awt.Rectangle getCellBounds(javax.swing.JList,int)>($r7, $i1);

     label21:
        $i110 = r36.<java.awt.Rectangle: int y>;

        $r38 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $i111 = virtualinvoke $r38.<org.jdesktop.swingx.JXList: int getHeight()>();

        if $i110 < $i111 goto label22;

        $r8 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $i11 = virtualinvoke $r8.<org.jdesktop.swingx.JXList: int getHeight()>();

        $i12 = $i11 - 2;

        r36.<java.awt.Rectangle: int y> = $i12;

     label22:
        r36.<java.awt.Rectangle: int height> = 2;

        goto label27;

     label23:
        if $i1 != $i0 goto label24;

        $i123 = (int) -1;

        i112 = $i1 + $i123;

        $r5 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r6 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: java.awt.Rectangle getCellBounds(javax.swing.JList,int)>($r5, i112);

        r36 = $r6;

        $i9 = $r6.<java.awt.Rectangle: int y>;

        $i8 = $r6.<java.awt.Rectangle: int height>;

        $i10 = $i9 + $i8;

        $r6.<java.awt.Rectangle: int y> = $i10;

        goto label25;

     label24:
        $r2 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        r36 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: java.awt.Rectangle getCellBounds(javax.swing.JList,int)>($r2, $i1);

     label25:
        $i4 = r36.<java.awt.Rectangle: int y>;

        $r3 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $i5 = virtualinvoke $r3.<org.jdesktop.swingx.JXList: int getHeight()>();

        if $i4 < $i5 goto label26;

        $r4 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $i6 = virtualinvoke $r4.<org.jdesktop.swingx.JXList: int getHeight()>();

        $i7 = $i6 - 2;

        r36.<java.awt.Rectangle: int y> = $i7;

     label26:
        r36.<java.awt.Rectangle: int height> = 2;

     label27:
        return r36;
    }

    public int getBaseline(javax.swing.JComponent, int, int)
    {
        java.awt.Insets $r7;
        int i0, i1, $i2, $i3, $i4, $i5, i6, $i8, $i10;
        org.jdesktop.swingx.JXList $r2, $r6, $r10, $r16;
        javax.swing.JComponent r1;
        javax.swing.DefaultListCellRenderer $r18;
        java.awt.Font $r17;
        javax.swing.UIDefaults $r3;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        java.awt.Component $r11, r14;
        javax.swing.ListCellRenderer r15;
        java.awt.Dimension $r8;
        java.lang.StringBuilder $r4, $r12;
        java.lang.Object $r5, $r9;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        r1 := @parameter0: javax.swing.JComponent;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<javax.swing.plaf.basic.BasicListUI: int getBaseline(javax.swing.JComponent,int,int)>(r1, i0, i1);

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $i2 = virtualinvoke $r2.<org.jdesktop.swingx.JXList: int getFixedCellHeight()>();

        i6 = $i2;

        $r3 = staticinvoke <javax.swing.UIManager: javax.swing.UIDefaults getLookAndFeelDefaults()>();

        $r4 = <org.jdesktop.swingx.plaf.basic.core.BasicXListUI: java.lang.StringBuilder BASELINE_COMPONENT_KEY>;

        $r5 = virtualinvoke $r3.<javax.swing.UIDefaults: java.lang.Object get(java.lang.Object)>($r4);

        r14 = (java.awt.Component) $r5;

        if r14 != null goto label2;

        $r9 = staticinvoke <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>("List.cellRenderer");

        r15 = (javax.swing.ListCellRenderer) $r9;

        if r15 != null goto label1;

        $r18 = new javax.swing.DefaultListCellRenderer;

        specialinvoke $r18.<javax.swing.DefaultListCellRenderer: void <init>()>();

        r15 = $r18;

     label1:
        $r10 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $i8 = (int) -1;

        $r11 = interfaceinvoke r15.<javax.swing.ListCellRenderer: java.awt.Component getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)>($r10, "a", $i8, 0, 0);

        r14 = $r11;

        $r12 = <org.jdesktop.swingx.plaf.basic.core.BasicXListUI: java.lang.StringBuilder BASELINE_COMPONENT_KEY>;

        virtualinvoke $r3.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r11);

     label2:
        $r16 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r17 = virtualinvoke $r16.<org.jdesktop.swingx.JXList: java.awt.Font getFont()>();

        virtualinvoke r14.<java.awt.Component: void setFont(java.awt.Font)>($r17);

        $i10 = (int) -1;

        if $i2 != $i10 goto label3;

        $r8 = virtualinvoke r14.<java.awt.Component: java.awt.Dimension getPreferredSize()>();

        i6 = $r8.<java.awt.Dimension: int height>;

     label3:
        $i3 = virtualinvoke r14.<java.awt.Component: int getBaseline(int,int)>(2147483647, i6);

        $r6 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r7 = virtualinvoke $r6.<org.jdesktop.swingx.JXList: java.awt.Insets getInsets()>();

        $i4 = $r7.<java.awt.Insets: int top>;

        $i5 = $i3 + $i4;

        return $i5;
    }

    public java.awt.Component$BaselineResizeBehavior getBaselineResizeBehavior(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        java.awt.Component$BaselineResizeBehavior $r2;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        r1 := @parameter0: javax.swing.JComponent;

        specialinvoke r0.<javax.swing.plaf.basic.BasicListUI: java.awt.Component$BaselineResizeBehavior getBaselineResizeBehavior(javax.swing.JComponent)>(r1);

        $r2 = <java.awt.Component$BaselineResizeBehavior: java.awt.Component$BaselineResizeBehavior CONSTANT_ASCENT>;

        return $r2;
    }

    public java.awt.Dimension getPreferredSize(javax.swing.JComponent)
    {
        java.awt.Rectangle $r4;
        java.awt.Insets $r2;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i11, $i12, $i13, i14;
        org.jdesktop.swingx.JXList $r1, $r3;
        javax.swing.JComponent r6;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        java.awt.Dimension $r5, $r7;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        r6 := @parameter0: javax.swing.JComponent;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: void maybeUpdateLayoutState()>();

        $i0 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int getElementCount()>();

        i1 = $i0 - 1;

        if i1 >= 0 goto label1;

        $r5 = new java.awt.Dimension;

        specialinvoke $r5.<java.awt.Dimension: void <init>(int,int)>(0, 0);

        return $r5;

     label1:
        $r1 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXList: java.awt.Insets getInsets()>();

        $i3 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int cellWidth>;

        $i2 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int columnCount>;

        $i5 = $i3 * $i2;

        $i4 = $r2.<java.awt.Insets: int left>;

        $i7 = $i5 + $i4;

        $i6 = $r2.<java.awt.Insets: int right>;

        i8 = $i7 + $i6;

        $i9 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int layoutOrientation>;

        if $i9 == 0 goto label2;

        i14 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int preferredHeight>;

        goto label4;

     label2:
        $r3 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r4 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: java.awt.Rectangle getCellBounds(javax.swing.JList,int)>($r3, i1);

        if $r4 == null goto label3;

        $i11 = $r4.<java.awt.Rectangle: int y>;

        $i10 = $r4.<java.awt.Rectangle: int height>;

        $i13 = $i11 + $i10;

        $i12 = $r2.<java.awt.Insets: int bottom>;

        i14 = $i13 + $i12;

        goto label4;

     label3:
        i14 = 0;

     label4:
        $r7 = new java.awt.Dimension;

        specialinvoke $r7.<java.awt.Dimension: void <init>(int,int)>(i8, i14);

        return $r7;
    }

    protected void selectPreviousIndex()
    {
        org.jdesktop.swingx.JXList $r1, $r2, $r3;
        int $i0, i1, $i3;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $i0 = virtualinvoke $r1.<org.jdesktop.swingx.JXList: int getSelectedIndex()>();

        if $i0 <= 0 goto label1;

        $i3 = (int) -1;

        i1 = $i0 + $i3;

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        virtualinvoke $r2.<org.jdesktop.swingx.JXList: void setSelectedIndex(int)>(i1);

        $r3 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        virtualinvoke $r3.<org.jdesktop.swingx.JXList: void ensureIndexIsVisible(int)>(i1);

     label1:
        return;
    }

    protected void selectNextIndex()
    {
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        org.jdesktop.swingx.JXList $r1, $r2, $r3;
        int $i0, $i1, $i2, i3;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $i0 = virtualinvoke $r1.<org.jdesktop.swingx.JXList: int getSelectedIndex()>();

        $i1 = $i0 + 1;

        $i2 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int getElementCount()>();

        if $i1 >= $i2 goto label1;

        i3 = $i0 + 1;

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        virtualinvoke $r2.<org.jdesktop.swingx.JXList: void setSelectedIndex(int)>(i3);

        $r3 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        virtualinvoke $r3.<org.jdesktop.swingx.JXList: void ensureIndexIsVisible(int)>(i3);

     label1:
        return;
    }

    protected void installKeyboardActions()
    {
        org.jdesktop.swingx.JXList $r2, $r3;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        javax.swing.InputMap $r1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: javax.swing.InputMap getInputMap(int)>(0);

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        staticinvoke <javax.swing.SwingUtilities: void replaceUIInputMap(javax.swing.JComponent,int,javax.swing.InputMap)>($r2, 0, $r1);

        $r3 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        staticinvoke <org.jdesktop.swingx.plaf.basic.core.LazyActionMap: void installLazyActionMap(javax.swing.JComponent,java.lang.Class,java.lang.String)>($r3, class "Lorg/jdesktop/swingx/plaf/basic/core/BasicXListUI;", "XList.actionMap");

        return;
    }

    javax.swing.InputMap getInputMap(int)
    {
        int i0;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r2;
        java.lang.Object $r0, $r3;
        javax.swing.InputMap r1, $r4;
        boolean $z0;

        r2 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        i0 := @parameter0: int;

        if i0 != 0 goto label3;

        $r0 = staticinvoke <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>("List.focusInputMap");

        r1 = (javax.swing.InputMap) $r0;

        $z0 = r2.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: boolean isLeftToRight>;

        if $z0 != 0 goto label1;

        $r3 = staticinvoke <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>("List.focusInputMap.RightToLeft");

        $r4 = (javax.swing.InputMap) $r3;

        if $r4 != null goto label2;

     label1:
        return r1;

     label2:
        virtualinvoke $r4.<javax.swing.InputMap: void setParent(javax.swing.InputMap)>(r1);

        return $r4;

     label3:
        return null;
    }

    protected void uninstallKeyboardActions()
    {
        org.jdesktop.swingx.JXList $r1, $r2;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        staticinvoke <javax.swing.SwingUtilities: void replaceUIActionMap(javax.swing.JComponent,javax.swing.ActionMap)>($r1, null);

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        staticinvoke <javax.swing.SwingUtilities: void replaceUIInputMap(javax.swing.JComponent,int,javax.swing.InputMap)>($r2, 0, null);

        return;
    }

    protected void installListeners()
    {
        java.awt.dnd.DropTarget $r6;
        javax.swing.ListSelectionModel $r8;
        java.awt.event.FocusListener $r12, $r18;
        javax.swing.TransferHandler $r2, $r3;
        org.jdesktop.swingx.JXList $r1, $r4, $r5, $r7, $r11, $r17, $r19, $r21, $r23, $r25, $r27;
        boolean $z0, $z1;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Handler $r26;
        javax.swing.event.MouseInputListener $r13, $r20, $r22;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        javax.swing.event.ListDataListener $r10, $r16;
        java.beans.PropertyChangeListener $r14, $r24;
        javax.swing.event.ListSelectionListener $r9, $r15;
        javax.swing.ListModel $r28;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXList: javax.swing.TransferHandler getTransferHandler()>();

        if $r2 == null goto label1;

        $z1 = $r2 instanceof javax.swing.plaf.UIResource;

        if $z1 == 0 goto label2;

     label1:
        $r4 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r3 = <org.jdesktop.swingx.plaf.basic.core.BasicXListUI: javax.swing.TransferHandler defaultTransferHandler>;

        virtualinvoke $r4.<org.jdesktop.swingx.JXList: void setTransferHandler(javax.swing.TransferHandler)>($r3);

        $r5 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r6 = virtualinvoke $r5.<org.jdesktop.swingx.JXList: java.awt.dnd.DropTarget getDropTarget()>();

        $z0 = $r6 instanceof javax.swing.plaf.UIResource;

        if $z0 == 0 goto label2;

        $r11 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        virtualinvoke $r11.<org.jdesktop.swingx.JXList: void setDropTarget(java.awt.dnd.DropTarget)>(null);

     label2:
        $r12 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: java.awt.event.FocusListener createFocusListener()>();

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: java.awt.event.FocusListener focusListener> = $r12;

        $r13 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: javax.swing.event.MouseInputListener createMouseInputListener()>();

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: javax.swing.event.MouseInputListener mouseInputListener> = $r13;

        $r14 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: java.beans.PropertyChangeListener createPropertyChangeListener()>();

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: java.beans.PropertyChangeListener propertyChangeListener> = $r14;

        $r15 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: javax.swing.event.ListSelectionListener createListSelectionListener()>();

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: javax.swing.event.ListSelectionListener listSelectionListener> = $r15;

        $r16 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: javax.swing.event.ListDataListener createListDataListener()>();

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: javax.swing.event.ListDataListener listDataListener> = $r16;

        $r17 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r18 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: java.awt.event.FocusListener focusListener>;

        virtualinvoke $r17.<org.jdesktop.swingx.JXList: void addFocusListener(java.awt.event.FocusListener)>($r18);

        $r19 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r20 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: javax.swing.event.MouseInputListener mouseInputListener>;

        virtualinvoke $r19.<org.jdesktop.swingx.JXList: void addMouseListener(java.awt.event.MouseListener)>($r20);

        $r21 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r22 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: javax.swing.event.MouseInputListener mouseInputListener>;

        virtualinvoke $r21.<org.jdesktop.swingx.JXList: void addMouseMotionListener(java.awt.event.MouseMotionListener)>($r22);

        $r23 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r24 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: java.beans.PropertyChangeListener propertyChangeListener>;

        virtualinvoke $r23.<org.jdesktop.swingx.JXList: void addPropertyChangeListener(java.beans.PropertyChangeListener)>($r24);

        $r25 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r26 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Handler getHandler()>();

        virtualinvoke $r25.<org.jdesktop.swingx.JXList: void addKeyListener(java.awt.event.KeyListener)>($r26);

        $r27 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r28 = virtualinvoke $r27.<org.jdesktop.swingx.JXList: javax.swing.ListModel getModel()>();

        if $r28 == null goto label3;

        $r10 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: javax.swing.event.ListDataListener listDataListener>;

        interfaceinvoke $r28.<javax.swing.ListModel: void addListDataListener(javax.swing.event.ListDataListener)>($r10);

     label3:
        $r7 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r8 = virtualinvoke $r7.<org.jdesktop.swingx.JXList: javax.swing.ListSelectionModel getSelectionModel()>();

        if $r8 == null goto label4;

        $r9 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: javax.swing.event.ListSelectionListener listSelectionListener>;

        interfaceinvoke $r8.<javax.swing.ListSelectionModel: void addListSelectionListener(javax.swing.event.ListSelectionListener)>($r9);

     label4:
        return;
    }

    protected void uninstallListeners()
    {
        javax.swing.ListSelectionModel $r14;
        java.awt.event.FocusListener $r1;
        org.jdesktop.swingx.JXList $r2, $r4, $r6, $r8, $r9, $r11, $r13;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Handler $r10;
        javax.swing.event.MouseInputListener $r3, $r5;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        javax.swing.event.ListDataListener $r16;
        java.beans.PropertyChangeListener $r7;
        javax.swing.event.ListSelectionListener $r15;
        javax.swing.ListModel $r12;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: java.awt.event.FocusListener focusListener>;

        virtualinvoke $r2.<org.jdesktop.swingx.JXList: void removeFocusListener(java.awt.event.FocusListener)>($r1);

        $r4 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r3 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: javax.swing.event.MouseInputListener mouseInputListener>;

        virtualinvoke $r4.<org.jdesktop.swingx.JXList: void removeMouseListener(java.awt.event.MouseListener)>($r3);

        $r6 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r5 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: javax.swing.event.MouseInputListener mouseInputListener>;

        virtualinvoke $r6.<org.jdesktop.swingx.JXList: void removeMouseMotionListener(java.awt.event.MouseMotionListener)>($r5);

        $r8 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r7 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: java.beans.PropertyChangeListener propertyChangeListener>;

        virtualinvoke $r8.<org.jdesktop.swingx.JXList: void removePropertyChangeListener(java.beans.PropertyChangeListener)>($r7);

        $r9 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r10 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Handler getHandler()>();

        virtualinvoke $r9.<org.jdesktop.swingx.JXList: void removeKeyListener(java.awt.event.KeyListener)>($r10);

        $r11 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r12 = virtualinvoke $r11.<org.jdesktop.swingx.JXList: javax.swing.ListModel getModel()>();

        if $r12 == null goto label1;

        $r16 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: javax.swing.event.ListDataListener listDataListener>;

        interfaceinvoke $r12.<javax.swing.ListModel: void removeListDataListener(javax.swing.event.ListDataListener)>($r16);

     label1:
        $r13 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r14 = virtualinvoke $r13.<org.jdesktop.swingx.JXList: javax.swing.ListSelectionModel getSelectionModel()>();

        if $r14 == null goto label2;

        $r15 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: javax.swing.event.ListSelectionListener listSelectionListener>;

        interfaceinvoke $r14.<javax.swing.ListSelectionModel: void removeListSelectionListener(javax.swing.event.ListSelectionListener)>($r15);

     label2:
        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: java.awt.event.FocusListener focusListener> = null;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: javax.swing.event.MouseInputListener mouseInputListener> = null;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: javax.swing.event.ListSelectionListener listSelectionListener> = null;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: javax.swing.event.ListDataListener listDataListener> = null;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: java.beans.PropertyChangeListener propertyChangeListener> = null;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Handler handler> = null;

        return;
    }

    protected void installDefaults()
    {
        java.awt.Color $r9, $r11, $r13, $r19;
        long $l0;
        java.lang.Long $r21;
        org.jdesktop.swingx.JXList $r1, $r2, $r3, $r5, $r6, $r8, $r10, $r12, $r14, $r18;
        java.lang.Boolean $r4;
        boolean $z0, $z1;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        javax.swing.ListCellRenderer $r7, $r16, $r17;
        java.lang.Object $r15, $r20;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        virtualinvoke $r1.<org.jdesktop.swingx.JXList: void setLayout(java.awt.LayoutManager)>(null);

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        staticinvoke <javax.swing.LookAndFeel: void installBorder(javax.swing.JComponent,java.lang.String)>($r2, "List.border");

        $r3 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        staticinvoke <javax.swing.LookAndFeel: void installColorsAndFont(javax.swing.JComponent,java.lang.String,java.lang.String,java.lang.String)>($r3, "List.background", "List.foreground", "List.font");

        $r5 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r4 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        staticinvoke <javax.swing.LookAndFeel: void installProperty(javax.swing.JComponent,java.lang.String,java.lang.Object)>($r5, "opaque", $r4);

        $r6 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r7 = virtualinvoke $r6.<org.jdesktop.swingx.JXList: javax.swing.ListCellRenderer getCellRenderer()>();

        if $r7 != null goto label1;

        $r14 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r15 = staticinvoke <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>("List.cellRenderer");

        $r16 = (javax.swing.ListCellRenderer) $r15;

        $r17 = (javax.swing.ListCellRenderer) $r16;

        virtualinvoke $r14.<org.jdesktop.swingx.JXList: void setCellRenderer(javax.swing.ListCellRenderer)>($r17);

     label1:
        $r8 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r9 = virtualinvoke $r8.<org.jdesktop.swingx.JXList: java.awt.Color getSelectionBackground()>();

        if $r9 == null goto label2;

        $z1 = $r9 instanceof javax.swing.plaf.UIResource;

        if $z1 == 0 goto label3;

     label2:
        $r10 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r11 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("List.selectionBackground");

        virtualinvoke $r10.<org.jdesktop.swingx.JXList: void setSelectionBackground(java.awt.Color)>($r11);

     label3:
        $r18 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r19 = virtualinvoke $r18.<org.jdesktop.swingx.JXList: java.awt.Color getSelectionForeground()>();

        if $r19 == null goto label4;

        $z0 = $r19 instanceof javax.swing.plaf.UIResource;

        if $z0 == 0 goto label5;

     label4:
        $r12 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r13 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("List.selectionForeground");

        virtualinvoke $r12.<org.jdesktop.swingx.JXList: void setSelectionForeground(java.awt.Color)>($r13);

     label5:
        $r20 = staticinvoke <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>("List.timeFactor");

        $r21 = (java.lang.Long) $r20;

        if $r21 == null goto label6;

        $l0 = virtualinvoke $r21.<java.lang.Long: long longValue()>();

        goto label7;

     label6:
        $l0 = 1000L;

     label7:
        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: long timeFactor> = $l0;

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: void updateIsFileList()>();

        return;
    }

    private void updateIsFileList()
    {
        java.awt.Font $r5, $r6;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        org.jdesktop.swingx.JXList $r1, $r4, $r7;
        java.lang.Boolean $r2;
        java.lang.Object $r3;
        java.lang.String $r8;
        boolean $z0, $z1, $z2;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r3 = virtualinvoke $r1.<org.jdesktop.swingx.JXList: java.lang.Object getClientProperty(java.lang.Object)>("List.isFileList");

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean equals(java.lang.Object)>($r3);

        $z1 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: boolean isFileList>;

        if $z0 == $z1 goto label4;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: boolean isFileList> = $z0;

        $r4 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r5 = virtualinvoke $r4.<org.jdesktop.swingx.JXList: java.awt.Font getFont()>();

        if $r5 == null goto label1;

        $z2 = $r5 instanceof javax.swing.plaf.UIResource;

        if $z2 == 0 goto label4;

     label1:
        if $z0 == 0 goto label2;

        $r8 = "FileChooser.listFont";

        goto label3;

     label2:
        $r8 = "List.font";

     label3:
        $r6 = staticinvoke <javax.swing.UIManager: java.awt.Font getFont(java.lang.Object)>($r8);

        if $r6 == null goto label4;

        if $r6 == $r5 goto label4;

        $r7 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        virtualinvoke $r7.<org.jdesktop.swingx.JXList: void setFont(java.awt.Font)>($r6);

     label4:
        return;
    }

    protected void uninstallDefaults()
    {
        java.awt.Color $r5, $r7, $r9, $r11;
        javax.swing.TransferHandler $r15;
        org.jdesktop.swingx.JXList $r1, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r17, $r18, $r19, $r20, $r21, $r22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.awt.Font $r3;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        javax.swing.ListCellRenderer $r13;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        staticinvoke <javax.swing.LookAndFeel: void uninstallBorder(javax.swing.JComponent)>($r1);

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r3 = virtualinvoke $r2.<org.jdesktop.swingx.JXList: java.awt.Font getFont()>();

        $z0 = $r3 instanceof javax.swing.plaf.UIResource;

        if $z0 == 0 goto label1;

        $r22 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        virtualinvoke $r22.<org.jdesktop.swingx.JXList: void setFont(java.awt.Font)>(null);

     label1:
        $r4 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r5 = virtualinvoke $r4.<org.jdesktop.swingx.JXList: java.awt.Color getForeground()>();

        $z1 = $r5 instanceof javax.swing.plaf.UIResource;

        if $z1 == 0 goto label2;

        $r21 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        virtualinvoke $r21.<org.jdesktop.swingx.JXList: void setForeground(java.awt.Color)>(null);

     label2:
        $r6 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r7 = virtualinvoke $r6.<org.jdesktop.swingx.JXList: java.awt.Color getBackground()>();

        $z2 = $r7 instanceof javax.swing.plaf.UIResource;

        if $z2 == 0 goto label3;

        $r20 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        virtualinvoke $r20.<org.jdesktop.swingx.JXList: void setBackground(java.awt.Color)>(null);

     label3:
        $r8 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r9 = virtualinvoke $r8.<org.jdesktop.swingx.JXList: java.awt.Color getSelectionBackground()>();

        $z3 = $r9 instanceof javax.swing.plaf.UIResource;

        if $z3 == 0 goto label4;

        $r19 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        virtualinvoke $r19.<org.jdesktop.swingx.JXList: void setSelectionBackground(java.awt.Color)>(null);

     label4:
        $r10 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r11 = virtualinvoke $r10.<org.jdesktop.swingx.JXList: java.awt.Color getSelectionForeground()>();

        $z4 = $r11 instanceof javax.swing.plaf.UIResource;

        if $z4 == 0 goto label5;

        $r18 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        virtualinvoke $r18.<org.jdesktop.swingx.JXList: void setSelectionForeground(java.awt.Color)>(null);

     label5:
        $r12 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r13 = virtualinvoke $r12.<org.jdesktop.swingx.JXList: javax.swing.ListCellRenderer getCellRenderer()>();

        $z5 = $r13 instanceof javax.swing.plaf.UIResource;

        if $z5 == 0 goto label6;

        $r17 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        virtualinvoke $r17.<org.jdesktop.swingx.JXList: void setCellRenderer(javax.swing.ListCellRenderer)>(null);

     label6:
        $r14 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r15 = virtualinvoke $r14.<org.jdesktop.swingx.JXList: javax.swing.TransferHandler getTransferHandler()>();

        $z6 = $r15 instanceof javax.swing.plaf.UIResource;

        if $z6 == 0 goto label7;

        $r16 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        virtualinvoke $r16.<org.jdesktop.swingx.JXList: void setTransferHandler(javax.swing.TransferHandler)>(null);

     label7:
        return;
    }

    public void installUI(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        java.awt.ComponentOrientation $r8;
        javax.swing.CellRendererPane $r4, $r5;
        org.jdesktop.swingx.JXList $r2, $r3, $r6, $r7;
        int $i0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        r1 := @parameter0: javax.swing.JComponent;

        $r2 = (org.jdesktop.swingx.JXList) r1;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list> = $r2;

        $r3 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $i0 = virtualinvoke $r3.<org.jdesktop.swingx.JXList: int getLayoutOrientation()>();

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int layoutOrientation> = $i0;

        $r4 = new javax.swing.CellRendererPane;

        specialinvoke $r4.<javax.swing.CellRendererPane: void <init>()>();

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: javax.swing.CellRendererPane rendererPane> = $r4;

        $r6 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r5 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: javax.swing.CellRendererPane rendererPane>;

        virtualinvoke $r6.<org.jdesktop.swingx.JXList: java.awt.Component add(java.awt.Component)>($r5);

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int columnCount> = 1;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int updateLayoutStateNeeded> = 1;

        $r7 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r8 = virtualinvoke $r7.<org.jdesktop.swingx.JXList: java.awt.ComponentOrientation getComponentOrientation()>();

        $z0 = virtualinvoke $r8.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: boolean isLeftToRight> = $z0;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: void installDefaults()>();

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: void installListeners()>();

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: void installKeyboardActions()>();

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: void installSortUI()>();

        return;
    }

    public void uninstallUI(javax.swing.JComponent)
    {
        javax.swing.JComponent r3;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        javax.swing.CellRendererPane $r1;
        org.jdesktop.swingx.JXList $r2;
        int $i1, $i3, $i5, $i7;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        r3 := @parameter0: javax.swing.JComponent;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: void uninstallSortUI()>();

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: void uninstallListeners()>();

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: void uninstallDefaults()>();

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: void uninstallKeyboardActions()>();

        $i1 = (int) -1;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int cellHeight> = $i1;

        $i3 = (int) -1;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int cellWidth> = $i3;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int[] cellHeights> = null;

        $i5 = (int) -1;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int listHeight> = $i5;

        $i7 = (int) -1;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int listWidth> = $i7;

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: javax.swing.CellRendererPane rendererPane>;

        virtualinvoke $r2.<org.jdesktop.swingx.JXList: void remove(java.awt.Component)>($r1);

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: javax.swing.CellRendererPane rendererPane> = null;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list> = null;

        return;
    }

    public static javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI $r0;

        r1 := @parameter0: javax.swing.JComponent;

        $r0 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        specialinvoke $r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: void <init>()>();

        return $r0;
    }

    public int locationToIndex(javax.swing.JList, java.awt.Point)
    {
        int $i0, $i1, $i2;
        javax.swing.JList r2;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        java.awt.Point r1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        r2 := @parameter0: javax.swing.JList;

        r1 := @parameter1: java.awt.Point;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: void maybeUpdateLayoutState()>();

        $i1 = r1.<java.awt.Point: int x>;

        $i0 = r1.<java.awt.Point: int y>;

        $i2 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int convertLocationToModel(int,int)>($i1, $i0);

        return $i2;
    }

    public java.awt.Point indexToLocation(javax.swing.JList, int)
    {
        java.awt.Rectangle $r2;
        javax.swing.JList r1;
        int i0, $i1, $i2;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        java.awt.Point $r3;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        r1 := @parameter0: javax.swing.JList;

        i0 := @parameter1: int;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: void maybeUpdateLayoutState()>();

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: java.awt.Rectangle getCellBounds(javax.swing.JList,int,int)>(r1, i0, i0);

        if $r2 == null goto label1;

        $r3 = new java.awt.Point;

        $i2 = $r2.<java.awt.Rectangle: int x>;

        $i1 = $r2.<java.awt.Rectangle: int y>;

        specialinvoke $r3.<java.awt.Point: void <init>(int,int)>($i2, $i1);

        return $r3;

     label1:
        return null;
    }

    public java.awt.Rectangle getCellBounds(javax.swing.JList, int, int)
    {
        java.awt.Rectangle $r2, $r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        javax.swing.JList r1;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        r1 := @parameter0: javax.swing.JList;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: void maybeUpdateLayoutState()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i1);

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(i0, i1);

        $i4 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int getElementCount()>();

        if $i2 < $i4 goto label1;

        return null;

     label1:
        $r2 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: java.awt.Rectangle getCellBounds(javax.swing.JList,int)>(r1, $i2);

        if $r2 != null goto label2;

        return null;

     label2:
        if $i2 != $i3 goto label3;

        return $r2;

     label3:
        $r3 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: java.awt.Rectangle getCellBounds(javax.swing.JList,int)>(r1, $i3);

        if $r3 == null goto label7;

        $i5 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int layoutOrientation>;

        if $i5 != 2 goto label5;

        $i9 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int convertModelToRow(int)>($i2);

        $i10 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int convertModelToRow(int)>($i3);

        if $i9 == $i10 goto label4;

        $r2.<java.awt.Rectangle: int x> = 0;

        $i11 = virtualinvoke r1.<javax.swing.JList: int getWidth()>();

        $r2.<java.awt.Rectangle: int width> = $i11;

     label4:
        goto label6;

     label5:
        $i7 = $r2.<java.awt.Rectangle: int x>;

        $i6 = $r3.<java.awt.Rectangle: int x>;

        if $i7 == $i6 goto label6;

        $r2.<java.awt.Rectangle: int y> = 0;

        $i8 = virtualinvoke r1.<javax.swing.JList: int getHeight()>();

        $r2.<java.awt.Rectangle: int height> = $i8;

     label6:
        virtualinvoke $r2.<java.awt.Rectangle: void add(java.awt.Rectangle)>($r3);

     label7:
        return $r2;
    }

    private java.awt.Rectangle getCellBounds(javax.swing.JList, int)
    {
        int[] $r3, $r4, $r5;
        boolean $z0;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        java.awt.Rectangle $r7;
        java.awt.Insets $r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, i21, i22, i23, $i24, $i25, $i26, $i27, $i29, $i31;
        javax.swing.JList r1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        r1 := @parameter0: javax.swing.JList;

        i0 := @parameter1: int;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: void maybeUpdateLayoutState()>();

        $i1 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int convertModelToRow(int)>(i0);

        $i2 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int convertModelToColumn(int)>(i0);

        $i29 = (int) -1;

        if $i1 == $i29 goto label01;

        $i31 = (int) -1;

        if $i2 != $i31 goto label02;

     label01:
        return null;

     label02:
        $r2 = virtualinvoke r1.<javax.swing.JList: java.awt.Insets getInsets()>();

        i19 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int cellWidth>;

        i20 = $r2.<java.awt.Insets: int top>;

        $i3 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int layoutOrientation>;

        lookupswitch($i3)
        {
            case 1: goto label03;
            case 2: goto label03;
            default: goto label06;
        };

     label03:
        $z0 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: boolean isLeftToRight>;

        if $z0 == 0 goto label04;

        $i14 = $r2.<java.awt.Insets: int left>;

        $i12 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int cellWidth>;

        $i13 = $i2 * $i12;

        i21 = $i14 + $i13;

        goto label05;

     label04:
        $i4 = virtualinvoke r1.<javax.swing.JList: int getWidth()>();

        $i5 = $r2.<java.awt.Insets: int right>;

        $i9 = $i4 - $i5;

        $i7 = $i2 + 1;

        $i6 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int cellWidth>;

        $i8 = $i7 * $i6;

        i21 = $i9 - $i8;

     label05:
        $i10 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int cellHeight>;

        $i11 = $i10 * $i1;

        i20 = i20 + $i11;

        i22 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int cellHeight>;

        goto label11;

     label06:
        i21 = $r2.<java.awt.Insets: int left>;

        $r3 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int[] cellHeights>;

        if $r3 != null goto label07;

        $i17 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int cellHeight>;

        $i18 = $i17 * $i1;

        i20 = i20 + $i18;

        goto label10;

     label07:
        $r4 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int[] cellHeights>;

        $i15 = lengthof $r4;

        if $i1 < $i15 goto label08;

        i20 = 0;

        goto label10;

     label08:
        i23 = 0;

     label09:
        if i23 >= $i1 goto label10;

        $r5 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int[] cellHeights>;

        $i16 = $r5[i23];

        i20 = i20 + $i16;

        i23 = i23 + 1;

        goto label09;

     label10:
        $i24 = virtualinvoke r1.<javax.swing.JList: int getWidth()>();

        $i25 = $r2.<java.awt.Insets: int left>;

        $i26 = $r2.<java.awt.Insets: int right>;

        $i27 = $i25 + $i26;

        i19 = $i24 - $i27;

        i22 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int getRowHeight(int)>(i0);

     label11:
        $r7 = new java.awt.Rectangle;

        specialinvoke $r7.<java.awt.Rectangle: void <init>(int,int,int,int)>(i21, i20, i19, i22);

        return $r7;
    }

    protected int getRowHeight(int)
    {
        int i0, $i1;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        i0 := @parameter0: int;

        $i1 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int getHeight(int,int)>(0, i0);

        return $i1;
    }

    protected int convertYToRow(int)
    {
        int i0, $i1;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        i0 := @parameter0: int;

        $i1 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int convertLocationToRow(int,int,boolean)>(0, i0, 0);

        return $i1;
    }

    protected int convertRowToY(int)
    {
        java.awt.Rectangle $r2;
        int i0, $i1, $i2, $i4;
        org.jdesktop.swingx.JXList $r1;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        i0 := @parameter0: int;

        $i1 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int getRowCount(int)>(0);

        if i0 >= $i1 goto label1;

        if i0 >= 0 goto label2;

     label1:
        $i4 = (int) -1;

        return $i4;

     label2:
        $r1 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: java.awt.Rectangle getCellBounds(javax.swing.JList,int,int)>($r1, i0, i0);

        $i2 = $r2.<java.awt.Rectangle: int y>;

        return $i2;
    }

    private int getHeight(int, int)
    {
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        int[] $r1, $r2, $r3;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i9, $i11, $i13;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        if i0 < 0 goto label1;

        $i1 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int columnCount>;

        if i0 > $i1 goto label1;

        if i2 >= 0 goto label2;

     label1:
        $i9 = (int) -1;

        return $i9;

     label2:
        $i3 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int layoutOrientation>;

        if $i3 == 0 goto label3;

        $i6 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int cellHeight>;

        return $i6;

     label3:
        $i4 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int getElementCount()>();

        if i2 < $i4 goto label4;

        $i11 = (int) -1;

        return $i11;

     label4:
        $r1 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int[] cellHeights>;

        if $r1 != null goto label5;

        $i7 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int cellHeight>;

        goto label7;

     label5:
        $r2 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int[] cellHeights>;

        $i5 = lengthof $r2;

        if i2 >= $i5 goto label6;

        $r3 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int[] cellHeights>;

        $i7 = $r3[i2];

        goto label7;

     label6:
        $i13 = (int) -1;

        $i7 = $i13;

     label7:
        return $i7;
    }

    private int convertLocationToRow(int, int, boolean)
    {
        java.awt.Insets $r2;
        int[] $r3, $r4, $r5, $r6;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12, i13, i14, i15, i16, $i18, $i20;
        org.jdesktop.swingx.JXList $r1;
        boolean z0;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        i11 := @parameter0: int;

        i3 := @parameter1: int;

        z0 := @parameter2: boolean;

        $i0 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int getElementCount()>();

        if $i0 > 0 goto label01;

        $i18 = (int) -1;

        return $i18;

     label01:
        $r1 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXList: java.awt.Insets getInsets()>();

        $r3 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int[] cellHeights>;

        if $r3 != null goto label06;

        $i7 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int cellHeight>;

        if $i7 != 0 goto label02;

        $i12 = 0;

        goto label03;

     label02:
        $i8 = $r2.<java.awt.Insets: int top>;

        $i10 = i3 - $i8;

        $i9 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int cellHeight>;

        $i12 = $i10 / $i9;

     label03:
        i13 = $i12;

        if z0 == 0 goto label05;

        if $i12 >= 0 goto label04;

        i13 = 0;

        goto label05;

     label04:
        if $i12 < $i0 goto label05;

        i13 = $i0 - 1;

     label05:
        return i13;

     label06:
        $r4 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int[] cellHeights>;

        $i1 = lengthof $r4;

        if $i0 <= $i1 goto label07;

        $i20 = (int) -1;

        return $i20;

     label07:
        i14 = $r2.<java.awt.Insets: int top>;

        i15 = 0;

        if z0 == 0 goto label08;

        if i3 >= i14 goto label08;

        return 0;

     label08:
        i16 = 0;

     label09:
        if i16 >= $i0 goto label11;

        if i3 < i14 goto label10;

        $r6 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int[] cellHeights>;

        $i5 = $r6[i16];

        $i6 = i14 + $i5;

        if i3 >= $i6 goto label10;

        return i15;

     label10:
        $r5 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int[] cellHeights>;

        $i4 = $r5[i16];

        i14 = i14 + $i4;

        i15 = i15 + 1;

        i16 = i16 + 1;

        goto label09;

     label11:
        $i2 = i16 - 1;

        return $i2;
    }

    private int convertLocationToRowInColumn(int, int)
    {
        java.awt.Insets $r3;
        int $i0, i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11;
        org.jdesktop.swingx.JXList $r1, $r2;
        boolean $z0;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        i1 := @parameter0: int;

        i3 := @parameter1: int;

        i10 = 0;

        $i0 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int layoutOrientation>;

        if $i0 == 0 goto label2;

        $z0 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: boolean isLeftToRight>;

        if $z0 == 0 goto label1;

        $i9 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int cellWidth>;

        i10 = i3 * $i9;

        goto label2;

     label1:
        $r1 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $i2 = virtualinvoke $r1.<org.jdesktop.swingx.JXList: int getWidth()>();

        $i5 = i3 + 1;

        $i4 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int cellWidth>;

        $i6 = $i5 * $i4;

        $i7 = $i2 - $i6;

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r3 = virtualinvoke $r2.<org.jdesktop.swingx.JXList: java.awt.Insets getInsets()>();

        $i8 = $r3.<java.awt.Insets: int right>;

        i10 = $i7 - $i8;

     label2:
        $i11 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int convertLocationToRow(int,int,boolean)>(i10, i1, 1);

        return $i11;
    }

    private int convertLocationToModel(int, int)
    {
        int i0, i1, $i2, $i3, $i4, $i6;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int convertLocationToRow(int,int,boolean)>(i0, i1, 1);

        $i3 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int convertLocationToColumn(int,int)>(i0, i1);

        if $i2 < 0 goto label1;

        if $i3 < 0 goto label1;

        $i4 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int getModelIndex(int,int)>($i3, $i2);

        return $i4;

     label1:
        $i6 = (int) -1;

        return $i6;
    }

    private int getRowCount(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i28, $i30;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i1 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int columnCount>;

        if i0 < $i1 goto label2;

     label1:
        $i28 = (int) -1;

        return $i28;

     label2:
        $i2 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int layoutOrientation>;

        if $i2 == 0 goto label3;

        if i0 != 0 goto label4;

        $i26 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int columnCount>;

        if $i26 != 1 goto label4;

     label3:
        $i3 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int getElementCount()>();

        return $i3;

     label4:
        $i4 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int columnCount>;

        if i0 < $i4 goto label5;

        $i30 = (int) -1;

        return $i30;

     label5:
        $i5 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int layoutOrientation>;

        if $i5 != 1 goto label7;

        $i17 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int columnCount>;

        $i18 = $i17 - 1;

        if i0 >= $i18 goto label6;

        $i25 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int rowsPerColumn>;

        return $i25;

     label6:
        $i19 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int getElementCount()>();

        $i20 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int columnCount>;

        $i22 = $i20 - 1;

        $i21 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int rowsPerColumn>;

        $i23 = $i22 * $i21;

        $i24 = $i19 - $i23;

        return $i24;

     label7:
        $i8 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int columnCount>;

        $i7 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int columnCount>;

        $i6 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int rowsPerColumn>;

        $i9 = $i7 * $i6;

        $i10 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int getElementCount()>();

        $i11 = $i9 - $i10;

        i12 = $i8 - $i11;

        if i0 < i12 goto label8;

        $i14 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int rowsPerColumn>;

        $i15 = $i14 - 1;

        $i16 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i15);

        return $i16;

     label8:
        $i13 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int rowsPerColumn>;

        return $i13;
    }

    private int getModelIndex(int, int)
    {
        int $i0, $i1, i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        i4 := @parameter0: int;

        i2 := @parameter1: int;

        $i0 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int layoutOrientation>;

        lookupswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $i9 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int getElementCount()>();

        $i13 = $i9 - 1;

        $i10 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int rowsPerColumn>;

        $i14 = $i10 * i4;

        $i11 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int rowsPerColumn>;

        $i12 = $i11 - 1;

        $i15 = staticinvoke <java.lang.Math: int min(int,int)>(i2, $i12);

        $i16 = $i14 + $i15;

        $i17 = staticinvoke <java.lang.Math: int min(int,int)>($i13, $i16);

        return $i17;

     label2:
        $i1 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int getElementCount()>();

        $i7 = $i1 - 1;

        $i3 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int columnCount>;

        $i5 = i2 * $i3;

        $i6 = $i5 + i4;

        $i8 = staticinvoke <java.lang.Math: int min(int,int)>($i7, $i6);

        return $i8;

     label3:
        return i2;
    }

    private int convertLocationToColumn(int, int)
    {
        java.awt.Insets $r2;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16;
        org.jdesktop.swingx.JXList $r1, $r3;
        boolean $z0;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        i3 := @parameter0: int;

        i15 := @parameter1: int;

        $i0 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int cellWidth>;

        if $i0 <= 0 goto label6;

        $i1 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int layoutOrientation>;

        if $i1 != 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXList: java.awt.Insets getInsets()>();

        $z0 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: boolean isLeftToRight>;

        if $z0 == 0 goto label2;

        $i12 = $r2.<java.awt.Insets: int left>;

        $i14 = i3 - $i12;

        $i13 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int cellWidth>;

        i16 = $i14 / $i13;

        goto label3;

     label2:
        $r3 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $i2 = virtualinvoke $r3.<org.jdesktop.swingx.JXList: int getWidth()>();

        $i5 = $i2 - i3;

        $i4 = $r2.<java.awt.Insets: int right>;

        $i6 = $i5 - $i4;

        $i8 = $i6 - 1;

        $i7 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int cellWidth>;

        i16 = $i8 / $i7;

     label3:
        if i16 >= 0 goto label4;

        return 0;

     label4:
        $i9 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int columnCount>;

        if i16 < $i9 goto label5;

        $i10 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int columnCount>;

        $i11 = $i10 - 1;

        return $i11;

     label5:
        return i16;

     label6:
        return 0;
    }

    private int convertModelToRow(int)
    {
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        i1 := @parameter0: int;

        $i0 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int getElementCount()>();

        if i1 < 0 goto label1;

        if i1 < $i0 goto label2;

     label1:
        $i11 = (int) -1;

        return $i11;

     label2:
        $i2 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int layoutOrientation>;

        if $i2 == 0 goto label4;

        $i3 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int columnCount>;

        if $i3 <= 1 goto label4;

        $i4 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int rowsPerColumn>;

        if $i4 <= 0 goto label4;

        $i5 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int layoutOrientation>;

        if $i5 != 1 goto label3;

        $i8 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int rowsPerColumn>;

        $i9 = i1 % $i8;

        return $i9;

     label3:
        $i6 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int columnCount>;

        $i7 = i1 / $i6;

        return $i7;

     label4:
        return i1;
    }

    private int convertModelToColumn(int)
    {
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        i1 := @parameter0: int;

        $i0 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int getElementCount()>();

        if i1 < 0 goto label1;

        if i1 < $i0 goto label2;

     label1:
        $i11 = (int) -1;

        return $i11;

     label2:
        $i2 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int layoutOrientation>;

        if $i2 == 0 goto label4;

        $i3 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int rowsPerColumn>;

        if $i3 <= 0 goto label4;

        $i4 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int columnCount>;

        if $i4 <= 1 goto label4;

        $i5 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int layoutOrientation>;

        if $i5 != 1 goto label3;

        $i8 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int rowsPerColumn>;

        $i9 = i1 / $i8;

        return $i9;

     label3:
        $i6 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int columnCount>;

        $i7 = i1 % $i6;

        return $i7;

     label4:
        return 0;
    }

    protected void maybeUpdateLayoutState()
    {
        int $i0;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        $i0 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int updateLayoutStateNeeded>;

        if $i0 == 0 goto label1;

        virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: void updateLayoutState()>();

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int updateLayoutStateNeeded> = 0;

     label1:
        return;
    }

    protected void updateLayoutState()
    {
        int[] $r3, $r7, $r8, $r9, $r15;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        java.awt.Component $r12;
        java.awt.Dimension $r14;
        javax.swing.CellRendererPane $r13;
        org.jdesktop.swingx.JXList $r1, $r2, $r5, $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, $i12, $i14, $i16, $i18, $i20, $i22, $i24, $i26, $i28, $i30;
        javax.swing.ListCellRenderer $r6;
        java.lang.Object $r10;
        javax.swing.ListModel $r4;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $i0 = virtualinvoke $r1.<org.jdesktop.swingx.JXList: int getFixedCellHeight()>();

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $i1 = virtualinvoke $r2.<org.jdesktop.swingx.JXList: int getFixedCellWidth()>();

        $i14 = (int) -1;

        if $i1 == $i14 goto label01;

        $i9 = $i1;

        goto label02;

     label01:
        $i16 = (int) -1;

        $i9 = $i16;

     label02:
        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int cellWidth> = $i9;

        $i18 = (int) -1;

        if $i0 == $i18 goto label03;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int cellHeight> = $i0;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int[] cellHeights> = null;

        goto label04;

     label03:
        $i20 = (int) -1;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int cellHeight> = $i20;

        $i2 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int getElementCount()>();

        $r3 = newarray (int)[$i2];

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int[] cellHeights> = $r3;

     label04:
        $i22 = (int) -1;

        if $i1 == $i22 goto label05;

        $i24 = (int) -1;

        if $i0 != $i24 goto label14;

     label05:
        $r4 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: javax.swing.ListModel getViewModel()>();

        $i3 = interfaceinvoke $r4.<javax.swing.ListModel: int getSize()>();

        $r5 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r6 = virtualinvoke $r5.<org.jdesktop.swingx.JXList: javax.swing.ListCellRenderer getCellRenderer()>();

        if $r6 == null goto label10;

        i10 = 0;

     label06:
        if i10 >= $i3 goto label09;

        $r10 = interfaceinvoke $r4.<javax.swing.ListModel: java.lang.Object getElementAt(int)>(i10);

        $r11 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r12 = interfaceinvoke $r6.<javax.swing.ListCellRenderer: java.awt.Component getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)>($r11, $r10, i10, 0, 0);

        $r13 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: javax.swing.CellRendererPane rendererPane>;

        virtualinvoke $r13.<javax.swing.CellRendererPane: java.awt.Component add(java.awt.Component)>($r12);

        $r14 = virtualinvoke $r12.<java.awt.Component: java.awt.Dimension getPreferredSize()>();

        $i26 = (int) -1;

        if $i1 != $i26 goto label07;

        $i7 = $r14.<java.awt.Dimension: int width>;

        $i6 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int cellWidth>;

        $i8 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i6);

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int cellWidth> = $i8;

     label07:
        $i28 = (int) -1;

        if $i0 != $i28 goto label08;

        $r15 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int[] cellHeights>;

        $i5 = $r14.<java.awt.Dimension: int height>;

        $r15[i10] = $i5;

     label08:
        i10 = i10 + 1;

        goto label06;

     label09:
        goto label14;

     label10:
        $i4 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int cellWidth>;

        $i30 = (int) -1;

        if $i4 != $i30 goto label11;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int cellWidth> = 0;

     label11:
        $r7 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int[] cellHeights>;

        if $r7 != null goto label12;

        $r9 = newarray (int)[$i3];

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int[] cellHeights> = $r9;

     label12:
        i11 = 0;

     label13:
        if i11 >= $i3 goto label14;

        $r8 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int[] cellHeights>;

        $r8[i11] = 0;

        i11 = i11 + 1;

        goto label13;

     label14:
        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int columnCount> = 1;

        $i12 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int layoutOrientation>;

        if $i12 == 0 goto label15;

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: void updateHorizontalLayoutState(int,int)>($i1, $i0);

     label15:
        return;
    }

    private void updateHorizontalLayoutState(int, int)
    {
        org.jdesktop.swingx.JXList $r1, $r2, $r4, $r5;
        int[] $r6, $r7, $r8, $r9, $r10;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        java.awt.Insets $r3;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, i60, i61, i62, i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i73, $i75;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        i60 := @parameter0: int;

        i4 := @parameter1: int;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $i0 = virtualinvoke $r1.<org.jdesktop.swingx.JXList: int getVisibleRowCount()>();

        $i1 = virtualinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int getElementCount()>();

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $r3 = virtualinvoke $r2.<org.jdesktop.swingx.JXList: java.awt.Insets getInsets()>();

        $r4 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $i2 = virtualinvoke $r4.<org.jdesktop.swingx.JXList: int getHeight()>();

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int listHeight> = $i2;

        $r5 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        $i3 = virtualinvoke $r5.<org.jdesktop.swingx.JXList: int getWidth()>();

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int listWidth> = $i3;

        if $i1 != 0 goto label1;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int columnCount> = 0;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int rowsPerColumn> = 0;

        $i58 = $r3.<java.awt.Insets: int top>;

        $i57 = $r3.<java.awt.Insets: int bottom>;

        $i59 = $i58 + $i57;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int preferredHeight> = $i59;

        return;

     label1:
        $i73 = (int) -1;

        if i4 == $i73 goto label2;

        i61 = i4;

        goto label5;

     label2:
        i62 = 0;

        $r6 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int[] cellHeights>;

        $i5 = lengthof $r6;

        if $i5 <= 0 goto label4;

        $r8 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int[] cellHeights>;

        $r7 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int[] cellHeights>;

        $i53 = lengthof $r7;

        $i54 = $i53 - 1;

        i62 = $r8[$i54];

        $r9 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int[] cellHeights>;

        $i55 = lengthof $r9;

        i63 = $i55 - 2;

     label3:
        if i63 < 0 goto label4;

        $r10 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int[] cellHeights>;

        $i56 = $r10[i63];

        i62 = staticinvoke <java.lang.Math: int max(int,int)>(i62, $i56);

        $i75 = (int) -1;

        i63 = i63 + $i75;

        goto label3;

     label4:
        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int cellHeight> = i62;

        i61 = i62;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int[] cellHeights> = null;

     label5:
        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int rowsPerColumn> = $i1;

        if $i0 <= 0 goto label7;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int rowsPerColumn> = $i0;

        $i39 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int rowsPerColumn>;

        $i40 = $i1 / $i39;

        $i41 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i40);

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int columnCount> = $i41;

        if $i1 <= 0 goto label6;

        $i48 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int rowsPerColumn>;

        if $i1 <= $i48 goto label6;

        $i49 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int rowsPerColumn>;

        $i50 = $i1 % $i49;

        if $i50 == 0 goto label6;

        $i51 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int columnCount>;

        $i52 = $i51 + 1;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int columnCount> = $i52;

     label6:
        $i64 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int layoutOrientation>;

        if $i64 != 2 goto label9;

        $i42 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int columnCount>;

        $i43 = $i1 / $i42;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int rowsPerColumn> = $i43;

        $i44 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int columnCount>;

        $i45 = $i1 % $i44;

        if $i45 <= 0 goto label9;

        $i46 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int rowsPerColumn>;

        $i47 = $i46 + 1;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int rowsPerColumn> = $i47;

        goto label9;

     label7:
        $i6 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int layoutOrientation>;

        if $i6 != 1 goto label8;

        if i61 == 0 goto label8;

        $i25 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int listHeight>;

        $i24 = $r3.<java.awt.Insets: int top>;

        $i27 = $i25 - $i24;

        $i26 = $r3.<java.awt.Insets: int bottom>;

        $i28 = $i27 - $i26;

        $i29 = $i28 / i61;

        $i30 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i29);

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int rowsPerColumn> = $i30;

        $i31 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int rowsPerColumn>;

        $i32 = $i1 / $i31;

        $i33 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i32);

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int columnCount> = $i33;

        if $i1 <= 0 goto label9;

        $i34 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int rowsPerColumn>;

        if $i1 <= $i34 goto label9;

        $i35 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int rowsPerColumn>;

        $i36 = $i1 % $i35;

        if $i36 == 0 goto label9;

        $i37 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int columnCount>;

        $i38 = $i37 + 1;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int columnCount> = $i38;

        goto label9;

     label8:
        $i7 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int layoutOrientation>;

        if $i7 != 2 goto label9;

        $i8 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int cellWidth>;

        if $i8 <= 0 goto label9;

        $i9 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int listWidth>;

        if $i9 <= 0 goto label9;

        $i11 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int listWidth>;

        $i10 = $r3.<java.awt.Insets: int left>;

        $i13 = $i11 - $i10;

        $i12 = $r3.<java.awt.Insets: int right>;

        $i15 = $i13 - $i12;

        $i14 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int cellWidth>;

        $i16 = $i15 / $i14;

        $i17 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i16);

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int columnCount> = $i17;

        $i18 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int columnCount>;

        $i19 = $i1 / $i18;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int rowsPerColumn> = $i19;

        $i20 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int columnCount>;

        $i21 = $i1 % $i20;

        if $i21 <= 0 goto label9;

        $i22 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int rowsPerColumn>;

        $i23 = $i22 + 1;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int rowsPerColumn> = $i23;

     label9:
        $i65 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int rowsPerColumn>;

        $i66 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int cellHeight>;

        $i67 = $i65 * $i66;

        $i68 = $r3.<java.awt.Insets: int top>;

        $i69 = $i67 + $i68;

        $i70 = $r3.<java.awt.Insets: int bottom>;

        $i71 = $i69 + $i70;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int preferredHeight> = $i71;

        return;
    }

    private org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Handler getHandler()
    {
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Handler $r1, $r2, $r3;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Handler handler>;

        if $r1 != null goto label1;

        $r3 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Handler;

        specialinvoke $r3.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Handler: void <init>(org.jdesktop.swingx.plaf.basic.core.BasicXListUI,org.jdesktop.swingx.plaf.basic.core.BasicXListUI$1)>(r0, null);

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Handler handler> = $r3;

     label1:
        $r2 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Handler handler>;

        return $r2;
    }

    protected javax.swing.event.MouseInputListener createMouseInputListener()
    {
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Handler $r1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        $r1 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Handler getHandler()>();

        return $r1;
    }

    protected java.awt.event.FocusListener createFocusListener()
    {
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Handler $r1;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        $r1 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Handler getHandler()>();

        return $r1;
    }

    protected javax.swing.event.ListSelectionListener createListSelectionListener()
    {
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r1;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI$ListSelectionHandler $r0;

        r1 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        $r0 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$ListSelectionHandler;

        specialinvoke $r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$ListSelectionHandler: void <init>(org.jdesktop.swingx.plaf.basic.core.BasicXListUI)>(r1);

        return $r0;
    }

    private void redrawList()
    {
        org.jdesktop.swingx.JXList $r1, $r2;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        virtualinvoke $r1.<org.jdesktop.swingx.JXList: void revalidate()>();

        $r2 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.JXList list>;

        virtualinvoke $r2.<org.jdesktop.swingx.JXList: void repaint()>();

        return;
    }

    protected javax.swing.event.ListDataListener createListDataListener()
    {
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r1;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI$ListDataHandler $r0;

        r1 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        $r0 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$ListDataHandler;

        specialinvoke $r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$ListDataHandler: void <init>(org.jdesktop.swingx.plaf.basic.core.BasicXListUI)>(r1);

        return $r0;
    }

    protected java.beans.PropertyChangeListener createPropertyChangeListener()
    {
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r1;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI$PropertyChangeHandler $r0;

        r1 := @this: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        $r0 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$PropertyChangeHandler;

        specialinvoke $r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$PropertyChangeHandler: void <init>(org.jdesktop.swingx.plaf.basic.core.BasicXListUI)>(r1);

        return $r0;
    }

    private static int adjustIndex(int, javax.swing.JList)
    {
        int i0, $i1, $i2, $i4;
        javax.swing.JList r0;
        org.jdesktop.swingx.JXList $r1;

        i0 := @parameter0: int;

        r0 := @parameter1: javax.swing.JList;

        $r1 = (org.jdesktop.swingx.JXList) r0;

        $i1 = virtualinvoke $r1.<org.jdesktop.swingx.JXList: int getElementCount()>();

        if i0 >= $i1 goto label1;

        $i2 = i0;

        goto label2;

     label1:
        $i4 = (int) -1;

        $i2 = $i4;

     label2:
        return $i2;
    }

    static org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Handler access$100(org.jdesktop.swingx.plaf.basic.core.BasicXListUI)
    {
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Handler $r1;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        $r1 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: org.jdesktop.swingx.plaf.basic.core.BasicXListUI$Handler getHandler()>();

        return $r1;
    }

    static int access$200(int, javax.swing.JList)
    {
        int i0, $i1;
        javax.swing.JList r0;

        i0 := @parameter0: int;

        r0 := @parameter1: javax.swing.JList;

        $i1 = staticinvoke <org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int adjustIndex(int,javax.swing.JList)>(i0, r0);

        return $i1;
    }

    static int access$300(org.jdesktop.swingx.plaf.basic.core.BasicXListUI)
    {
        int $i0;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        $i0 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int columnCount>;

        return $i0;
    }

    static int access$400(org.jdesktop.swingx.plaf.basic.core.BasicXListUI, int)
    {
        int i0, $i1;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        i0 := @parameter1: int;

        $i1 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int convertModelToColumn(int)>(i0);

        return $i1;
    }

    static int access$500(org.jdesktop.swingx.plaf.basic.core.BasicXListUI, int)
    {
        int i0, $i1;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        i0 := @parameter1: int;

        $i1 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int convertModelToRow(int)>(i0);

        return $i1;
    }

    static int access$600(org.jdesktop.swingx.plaf.basic.core.BasicXListUI, int)
    {
        int i0, $i1;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        i0 := @parameter1: int;

        $i1 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int getRowCount(int)>(i0);

        return $i1;
    }

    static int access$700(org.jdesktop.swingx.plaf.basic.core.BasicXListUI, int, int)
    {
        int i0, i1, $i2;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int getModelIndex(int,int)>(i0, i1);

        return $i2;
    }

    static long access$800(org.jdesktop.swingx.plaf.basic.core.BasicXListUI)
    {
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        long $l0;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        $l0 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: long timeFactor>;

        return $l0;
    }

    static void access$900(org.jdesktop.swingx.plaf.basic.core.BasicXListUI)
    {
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: void redrawList()>();

        return;
    }

    static int access$1002(org.jdesktop.swingx.plaf.basic.core.BasicXListUI, int)
    {
        int i0;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        i0 := @parameter1: int;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int layoutOrientation> = i0;

        return i0;
    }

    static int access$1000(org.jdesktop.swingx.plaf.basic.core.BasicXListUI)
    {
        int $i0;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        $i0 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int layoutOrientation>;

        return $i0;
    }

    static boolean access$1102(org.jdesktop.swingx.plaf.basic.core.BasicXListUI, boolean)
    {
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        boolean z0;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        z0 := @parameter1: boolean;

        r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: boolean isLeftToRight> = z0;

        return z0;
    }

    static void access$1200(org.jdesktop.swingx.plaf.basic.core.BasicXListUI)
    {
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: void updateIsFileList()>();

        return;
    }

    static java.awt.Rectangle access$1300(org.jdesktop.swingx.plaf.basic.core.BasicXListUI, javax.swing.JList$DropLocation)
    {
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        java.awt.Rectangle $r2;
        javax.swing.JList$DropLocation r1;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        r1 := @parameter1: javax.swing.JList$DropLocation;

        $r2 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: java.awt.Rectangle getDropLineRect(javax.swing.JList$DropLocation)>(r1);

        return $r2;
    }

    static java.awt.Rectangle access$1400(org.jdesktop.swingx.plaf.basic.core.BasicXListUI, javax.swing.JList, int)
    {
        java.awt.Rectangle $r2;
        javax.swing.JList r1;
        int i0;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        r1 := @parameter1: javax.swing.JList;

        i0 := @parameter2: int;

        $r2 = specialinvoke r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: java.awt.Rectangle getCellBounds(javax.swing.JList,int)>(r1, i0);

        return $r2;
    }

    static boolean access$1500(org.jdesktop.swingx.plaf.basic.core.BasicXListUI)
    {
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI r0;
        boolean $z0;

        r0 := @parameter0: org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        $z0 = r0.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: boolean isFileList>;

        return $z0;
    }

    static void <clinit>()
    {
        java.lang.StringBuilder $r0;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI$ListTransferHandler $r1;

        <org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int EXTEND_SELECTION> = 2;

        <org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int CHANGE_SELECTION> = 1;

        <org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int CHANGE_LEAD> = 0;

        <org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int DROP_LINE_THICKNESS> = 2;

        <org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int componentOrientationChanged> = 1024;

        <org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int widthChanged> = 512;

        <org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int heightChanged> = 256;

        <org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int layoutOrientationChanged> = 128;

        <org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int cellRendererChanged> = 64;

        <org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int prototypeCellValueChanged> = 32;

        <org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int fixedCellHeightChanged> = 16;

        <org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int fixedCellWidthChanged> = 8;

        <org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int fontChanged> = 4;

        <org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int selectionModelChanged> = 2;

        <org.jdesktop.swingx.plaf.basic.core.BasicXListUI: int modelChanged> = 1;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("List.baselineComponent");

        <org.jdesktop.swingx.plaf.basic.core.BasicXListUI: java.lang.StringBuilder BASELINE_COMPONENT_KEY> = $r0;

        $r1 = new org.jdesktop.swingx.plaf.basic.core.BasicXListUI$ListTransferHandler;

        specialinvoke $r1.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI$ListTransferHandler: void <init>()>();

        <org.jdesktop.swingx.plaf.basic.core.BasicXListUI: javax.swing.TransferHandler defaultTransferHandler> = $r1;

        return;
    }
}
