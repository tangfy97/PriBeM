final class org.waveprotocol.wave.model.operation.OpComparators$1 extends java.lang.Object implements org.waveprotocol.wave.model.operation.OpComparators$OpEquator
{

    void <init>()
    {
        org.waveprotocol.wave.model.operation.OpComparators$1 r0;

        r0 := @this: org.waveprotocol.wave.model.operation.OpComparators$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean equal(org.waveprotocol.wave.model.document.operation.DocOp, org.waveprotocol.wave.model.document.operation.DocOp)
    {
        org.waveprotocol.wave.model.operation.OpComparators$1 r2;
        org.waveprotocol.wave.model.document.operation.DocOp r0, r1;
        boolean $z0;

        r2 := @this: org.waveprotocol.wave.model.operation.OpComparators$1;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.DocOp;

        r1 := @parameter1: org.waveprotocol.wave.model.document.operation.DocOp;

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r0, "First argument is null");

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "Second argument is null");

        $z0 = virtualinvoke r2.<org.waveprotocol.wave.model.operation.OpComparators$1: boolean equalNullable(org.waveprotocol.wave.model.document.operation.DocOp,org.waveprotocol.wave.model.document.operation.DocOp)>(r0, r1);

        return $z0;
    }

    public boolean equalNullable(org.waveprotocol.wave.model.document.operation.DocOp, org.waveprotocol.wave.model.document.operation.DocOp)
    {
        org.waveprotocol.wave.model.operation.OpComparators$1 r2;
        org.waveprotocol.wave.model.document.operation.DocOp r0, r1;
        int $i0, $i1, $i2, i3;
        boolean $z0, $z1;

        r2 := @this: org.waveprotocol.wave.model.operation.OpComparators$1;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.DocOp;

        r1 := @parameter1: org.waveprotocol.wave.model.document.operation.DocOp;

        if r0 != null goto label3;

        if r1 != null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        if r1 != null goto label4;

        return 0;

     label4:
        $i0 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.DocOp: int size()>();

        $i1 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.DocOp: int size()>();

        if $i0 == $i1 goto label5;

        return 0;

     label5:
        i3 = 0;

     label6:
        $i2 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.DocOp: int size()>();

        if i3 >= $i2 goto label8;

        $z0 = specialinvoke r2.<org.waveprotocol.wave.model.operation.OpComparators$1: boolean equalComponent(org.waveprotocol.wave.model.document.operation.DocOp,org.waveprotocol.wave.model.document.operation.DocOp,int)>(r0, r1, i3);

        if $z0 != 0 goto label7;

        return 0;

     label7:
        i3 = i3 + 1;

        goto label6;

     label8:
        return 1;
    }

    private boolean equalComponent(org.waveprotocol.wave.model.document.operation.DocOp, org.waveprotocol.wave.model.document.operation.DocOp, int)
    {
        org.waveprotocol.wave.model.operation.OpComparators$1 r19;
        org.waveprotocol.wave.model.document.operation.DocOp r0, r2;
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap $r38, $r39;
        org.waveprotocol.wave.model.document.operation.DocOpComponentType $r1, $r3, $r8, $r9, $r10, $r11, $r12, $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        org.waveprotocol.wave.model.document.operation.DocInitializationComponentType $r4, $r5, $r6, $r7;
        org.waveprotocol.wave.model.document.operation.Attributes $r22, $r23, $r24, $r25, $r28, $r29, $r34, $r35;
        java.lang.StringBuilder $r15, $r16, $r17;
        org.waveprotocol.wave.model.document.operation.AttributesUpdate $r20, $r21;
        int i0, $i1, $i2;
        java.lang.String $r18, $r26, $r27, $r30, $r31, $r32, $r33, $r36, $r37;
        java.lang.IllegalArgumentException $r14;

        r19 := @this: org.waveprotocol.wave.model.operation.OpComparators$1;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.DocOp;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.DocOp;

        i0 := @parameter2: int;

        $r1 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.DocOp: org.waveprotocol.wave.model.document.operation.DocOpComponentType getType(int)>(i0);

        $r3 = interfaceinvoke r2.<org.waveprotocol.wave.model.document.operation.DocOp: org.waveprotocol.wave.model.document.operation.DocOpComponentType getType(int)>(i0);

        if $r1 == $r3 goto label01;

        return 0;

     label01:
        $r4 = <org.waveprotocol.wave.model.document.operation.DocOpComponentType: org.waveprotocol.wave.model.document.operation.DocInitializationComponentType ANNOTATION_BOUNDARY>;

        if $r1 != $r4 goto label02;

        $r38 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.DocOp: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap getAnnotationBoundary(int)>(i0);

        $r39 = interfaceinvoke r2.<org.waveprotocol.wave.model.document.operation.DocOp: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap getAnnotationBoundary(int)>(i0);

        $z9 = specialinvoke r19.<org.waveprotocol.wave.model.operation.OpComparators$1: boolean equal(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap,org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap)>($r38, $r39);

        return $z9;

     label02:
        $r5 = <org.waveprotocol.wave.model.document.operation.DocOpComponentType: org.waveprotocol.wave.model.document.operation.DocInitializationComponentType CHARACTERS>;

        if $r1 != $r5 goto label03;

        $r36 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.DocOp: java.lang.String getCharactersString(int)>(i0);

        $r37 = interfaceinvoke r2.<org.waveprotocol.wave.model.document.operation.DocOp: java.lang.String getCharactersString(int)>(i0);

        $z8 = specialinvoke r19.<org.waveprotocol.wave.model.operation.OpComparators$1: boolean equal(java.lang.String,java.lang.String)>($r36, $r37);

        return $z8;

     label03:
        $r6 = <org.waveprotocol.wave.model.document.operation.DocOpComponentType: org.waveprotocol.wave.model.document.operation.DocInitializationComponentType ELEMENT_START>;

        if $r1 != $r6 goto label06;

        $r32 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.DocOp: java.lang.String getElementStartTag(int)>(i0);

        $r33 = interfaceinvoke r2.<org.waveprotocol.wave.model.document.operation.DocOp: java.lang.String getElementStartTag(int)>(i0);

        $z6 = specialinvoke r19.<org.waveprotocol.wave.model.operation.OpComparators$1: boolean equal(java.lang.String,java.lang.String)>($r32, $r33);

        if $z6 == 0 goto label04;

        $r34 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.DocOp: org.waveprotocol.wave.model.document.operation.Attributes getElementStartAttributes(int)>(i0);

        $r35 = interfaceinvoke r2.<org.waveprotocol.wave.model.document.operation.DocOp: org.waveprotocol.wave.model.document.operation.Attributes getElementStartAttributes(int)>(i0);

        $z7 = specialinvoke r19.<org.waveprotocol.wave.model.operation.OpComparators$1: boolean equal(java.util.Map,java.util.Map)>($r34, $r35);

        if $z7 == 0 goto label04;

        $z10 = 1;

        goto label05;

     label04:
        $z10 = 0;

     label05:
        return $z10;

     label06:
        $r7 = <org.waveprotocol.wave.model.document.operation.DocOpComponentType: org.waveprotocol.wave.model.document.operation.DocInitializationComponentType ELEMENT_END>;

        if $r1 != $r7 goto label07;

        return 1;

     label07:
        $r8 = <org.waveprotocol.wave.model.document.operation.DocOpComponentType: org.waveprotocol.wave.model.document.operation.DocOpComponentType RETAIN>;

        if $r1 != $r8 goto label10;

        $i1 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.DocOp: int getRetainItemCount(int)>(i0);

        $i2 = interfaceinvoke r2.<org.waveprotocol.wave.model.document.operation.DocOp: int getRetainItemCount(int)>(i0);

        if $i1 != $i2 goto label08;

        $z11 = 1;

        goto label09;

     label08:
        $z11 = 0;

     label09:
        return $z11;

     label10:
        $r9 = <org.waveprotocol.wave.model.document.operation.DocOpComponentType: org.waveprotocol.wave.model.document.operation.DocOpComponentType DELETE_CHARACTERS>;

        if $r1 != $r9 goto label11;

        $r30 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.DocOp: java.lang.String getDeleteCharactersString(int)>(i0);

        $r31 = interfaceinvoke r2.<org.waveprotocol.wave.model.document.operation.DocOp: java.lang.String getDeleteCharactersString(int)>(i0);

        $z5 = specialinvoke r19.<org.waveprotocol.wave.model.operation.OpComparators$1: boolean equal(java.lang.String,java.lang.String)>($r30, $r31);

        return $z5;

     label11:
        $r10 = <org.waveprotocol.wave.model.document.operation.DocOpComponentType: org.waveprotocol.wave.model.document.operation.DocOpComponentType DELETE_ELEMENT_START>;

        if $r1 != $r10 goto label14;

        $r26 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.DocOp: java.lang.String getDeleteElementStartTag(int)>(i0);

        $r27 = interfaceinvoke r2.<org.waveprotocol.wave.model.document.operation.DocOp: java.lang.String getDeleteElementStartTag(int)>(i0);

        $z3 = specialinvoke r19.<org.waveprotocol.wave.model.operation.OpComparators$1: boolean equal(java.lang.String,java.lang.String)>($r26, $r27);

        if $z3 == 0 goto label12;

        $r28 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.DocOp: org.waveprotocol.wave.model.document.operation.Attributes getDeleteElementStartAttributes(int)>(i0);

        $r29 = interfaceinvoke r2.<org.waveprotocol.wave.model.document.operation.DocOp: org.waveprotocol.wave.model.document.operation.Attributes getDeleteElementStartAttributes(int)>(i0);

        $z4 = specialinvoke r19.<org.waveprotocol.wave.model.operation.OpComparators$1: boolean equal(java.util.Map,java.util.Map)>($r28, $r29);

        if $z4 == 0 goto label12;

        $z12 = 1;

        goto label13;

     label12:
        $z12 = 0;

     label13:
        return $z12;

     label14:
        $r11 = <org.waveprotocol.wave.model.document.operation.DocOpComponentType: org.waveprotocol.wave.model.document.operation.DocOpComponentType DELETE_ELEMENT_END>;

        if $r1 != $r11 goto label15;

        return 1;

     label15:
        $r12 = <org.waveprotocol.wave.model.document.operation.DocOpComponentType: org.waveprotocol.wave.model.document.operation.DocOpComponentType REPLACE_ATTRIBUTES>;

        if $r1 != $r12 goto label18;

        $r22 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.DocOp: org.waveprotocol.wave.model.document.operation.Attributes getReplaceAttributesOldAttributes(int)>(i0);

        $r23 = interfaceinvoke r2.<org.waveprotocol.wave.model.document.operation.DocOp: org.waveprotocol.wave.model.document.operation.Attributes getReplaceAttributesOldAttributes(int)>(i0);

        $z1 = specialinvoke r19.<org.waveprotocol.wave.model.operation.OpComparators$1: boolean equal(java.util.Map,java.util.Map)>($r22, $r23);

        if $z1 == 0 goto label16;

        $r24 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.DocOp: org.waveprotocol.wave.model.document.operation.Attributes getReplaceAttributesNewAttributes(int)>(i0);

        $r25 = interfaceinvoke r2.<org.waveprotocol.wave.model.document.operation.DocOp: org.waveprotocol.wave.model.document.operation.Attributes getReplaceAttributesNewAttributes(int)>(i0);

        $z2 = specialinvoke r19.<org.waveprotocol.wave.model.operation.OpComparators$1: boolean equal(java.util.Map,java.util.Map)>($r24, $r25);

        if $z2 == 0 goto label16;

        $z13 = 1;

        goto label17;

     label16:
        $z13 = 0;

     label17:
        return $z13;

     label18:
        $r13 = <org.waveprotocol.wave.model.document.operation.DocOpComponentType: org.waveprotocol.wave.model.document.operation.DocOpComponentType UPDATE_ATTRIBUTES>;

        if $r1 != $r13 goto label19;

        $r20 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.DocOp: org.waveprotocol.wave.model.document.operation.AttributesUpdate getUpdateAttributesUpdate(int)>(i0);

        $r21 = interfaceinvoke r2.<org.waveprotocol.wave.model.document.operation.DocOp: org.waveprotocol.wave.model.document.operation.AttributesUpdate getUpdateAttributesUpdate(int)>(i0);

        $z0 = specialinvoke r19.<org.waveprotocol.wave.model.operation.OpComparators$1: boolean equal(org.waveprotocol.wave.model.document.operation.AttributesUpdate,org.waveprotocol.wave.model.document.operation.AttributesUpdate)>($r20, $r21);

        return $z0;

     label19:
        $r14 = new java.lang.IllegalArgumentException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unsupported DocOpComponentType: ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r14;
    }

    private boolean equal(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap, org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap)
    {
        org.waveprotocol.wave.model.operation.OpComparators$1 r2;
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap r0, r1;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        boolean $z0, $z1, $z2, $z3;

        r2 := @this: org.waveprotocol.wave.model.operation.OpComparators$1;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap;

        r1 := @parameter1: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap;

        $i0 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: int changeSize()>();

        $i1 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: int changeSize()>();

        if $i0 == $i1 goto label01;

        return 0;

     label01:
        i4 = 0;

     label02:
        if i4 >= $i0 goto label06;

        $r5 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: java.lang.String getChangeKey(int)>(i4);

        $r6 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: java.lang.String getChangeKey(int)>(i4);

        $z1 = specialinvoke r2.<org.waveprotocol.wave.model.operation.OpComparators$1: boolean equal(java.lang.String,java.lang.String)>($r5, $r6);

        if $z1 != 0 goto label03;

        return 0;

     label03:
        $r7 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: java.lang.String getOldValue(int)>(i4);

        $r8 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: java.lang.String getOldValue(int)>(i4);

        $z2 = specialinvoke r2.<org.waveprotocol.wave.model.operation.OpComparators$1: boolean equalNullable(java.lang.String,java.lang.String)>($r7, $r8);

        if $z2 != 0 goto label04;

        return 0;

     label04:
        $r9 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: java.lang.String getNewValue(int)>(i4);

        $r10 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: java.lang.String getNewValue(int)>(i4);

        $z3 = specialinvoke r2.<org.waveprotocol.wave.model.operation.OpComparators$1: boolean equalNullable(java.lang.String,java.lang.String)>($r9, $r10);

        if $z3 != 0 goto label05;

        return 0;

     label05:
        i4 = i4 + 1;

        goto label02;

     label06:
        $i2 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: int endSize()>();

        $i3 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: int endSize()>();

        if $i2 == $i3 goto label07;

        return 0;

     label07:
        i5 = 0;

     label08:
        if i5 >= $i2 goto label10;

        $r3 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: java.lang.String getEndKey(int)>(i5);

        $r4 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap: java.lang.String getEndKey(int)>(i5);

        $z0 = specialinvoke r2.<org.waveprotocol.wave.model.operation.OpComparators$1: boolean equal(java.lang.String,java.lang.String)>($r3, $r4);

        if $z0 != 0 goto label09;

        return 0;

     label09:
        i5 = i5 + 1;

        goto label08;

     label10:
        return 1;
    }

    private boolean equalNullable(java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.model.operation.OpComparators$1 r2;
        java.lang.String r0, r1;
        boolean $z0, $z1;

        r2 := @this: org.waveprotocol.wave.model.operation.OpComparators$1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label3;

        if r1 != null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        if r1 != null goto label4;

        return 0;

     label4:
        $z0 = specialinvoke r2.<org.waveprotocol.wave.model.operation.OpComparators$1: boolean equal(java.lang.String,java.lang.String)>(r0, r1);

        return $z0;
    }

    private boolean equal(java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.model.operation.OpComparators$1 r3;
        java.lang.Object $r2;
        java.lang.String r0, r1;
        boolean $z0;

        r3 := @this: org.waveprotocol.wave.model.operation.OpComparators$1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "b");

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    private boolean equal(java.util.Map, java.util.Map)
    {
        java.util.Map r0, r1;
        org.waveprotocol.wave.model.operation.OpComparators$1 r3;
        java.lang.Object $r2;
        boolean $z0;

        r3 := @this: org.waveprotocol.wave.model.operation.OpComparators$1;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.util.Map;

        $r2 = staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "b");

        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    private boolean equal(org.waveprotocol.wave.model.document.operation.AttributesUpdate, org.waveprotocol.wave.model.document.operation.AttributesUpdate)
    {
        org.waveprotocol.wave.model.operation.OpComparators$1 r2;
        int $i0, $i1, i2;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8;
        org.waveprotocol.wave.model.document.operation.AttributesUpdate r0, r1;
        boolean $z0, $z1, $z2;

        r2 := @this: org.waveprotocol.wave.model.operation.OpComparators$1;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.AttributesUpdate;

        r1 := @parameter1: org.waveprotocol.wave.model.document.operation.AttributesUpdate;

        $i0 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: int changeSize()>();

        $i1 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: int changeSize()>();

        if $i0 == $i1 goto label1;

        return 0;

     label1:
        i2 = 0;

     label2:
        if i2 >= $i0 goto label6;

        $r3 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: java.lang.String getChangeKey(int)>(i2);

        $r4 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: java.lang.String getChangeKey(int)>(i2);

        $z0 = specialinvoke r2.<org.waveprotocol.wave.model.operation.OpComparators$1: boolean equal(java.lang.String,java.lang.String)>($r3, $r4);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $r5 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: java.lang.String getOldValue(int)>(i2);

        $r6 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: java.lang.String getOldValue(int)>(i2);

        $z1 = specialinvoke r2.<org.waveprotocol.wave.model.operation.OpComparators$1: boolean equalNullable(java.lang.String,java.lang.String)>($r5, $r6);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        $r7 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: java.lang.String getNewValue(int)>(i2);

        $r8 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.operation.AttributesUpdate: java.lang.String getNewValue(int)>(i2);

        $z2 = specialinvoke r2.<org.waveprotocol.wave.model.operation.OpComparators$1: boolean equalNullable(java.lang.String,java.lang.String)>($r7, $r8);

        if $z2 != 0 goto label5;

        return 0;

     label5:
        i2 = i2 + 1;

        goto label2;

     label6:
        return 1;
    }
}
