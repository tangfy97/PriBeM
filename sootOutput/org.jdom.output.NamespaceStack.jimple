class org.jdom.output.NamespaceStack extends java.lang.Object
{
    private static final java.lang.String CVS_ID;
    private java.util.Stack prefixes;
    private java.util.Stack uris;

    void <init>()
    {
        org.jdom.output.NamespaceStack r0;
        java.util.Stack $r1, $r2;

        r0 := @this: org.jdom.output.NamespaceStack;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Stack;

        specialinvoke $r1.<java.util.Stack: void <init>()>();

        r0.<org.jdom.output.NamespaceStack: java.util.Stack prefixes> = $r1;

        $r2 = new java.util.Stack;

        specialinvoke $r2.<java.util.Stack: void <init>()>();

        r0.<org.jdom.output.NamespaceStack: java.util.Stack uris> = $r2;

        return;
    }

    public java.lang.String getURI(java.lang.String)
    {
        org.jdom.output.NamespaceStack r0;
        java.util.Stack $r2, $r3;
        int $i0, $i2;
        java.lang.Object $r4;
        java.lang.String r1, r5;

        r0 := @this: org.jdom.output.NamespaceStack;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.jdom.output.NamespaceStack: java.util.Stack prefixes>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int lastIndexOf(java.lang.Object)>(r1);

        $i2 = (int) -1;

        if $i0 != $i2 goto label1;

        return null;

     label1:
        $r3 = r0.<org.jdom.output.NamespaceStack: java.util.Stack uris>;

        $r4 = virtualinvoke $r3.<java.util.Vector: java.lang.Object elementAt(int)>($i0);

        r5 = (java.lang.String) $r4;

        return r5;
    }

    public java.lang.String pop()
    {
        org.jdom.output.NamespaceStack r0;
        java.lang.Object $r2;
        java.lang.String r3;
        java.util.Stack $r1, $r4;

        r0 := @this: org.jdom.output.NamespaceStack;

        $r1 = r0.<org.jdom.output.NamespaceStack: java.util.Stack prefixes>;

        $r2 = virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        r3 = (java.lang.String) $r2;

        $r4 = r0.<org.jdom.output.NamespaceStack: java.util.Stack uris>;

        virtualinvoke $r4.<java.util.Stack: java.lang.Object pop()>();

        return r3;
    }

    public void push(org.jdom.Namespace)
    {
        org.jdom.output.NamespaceStack r0;
        org.jdom.Namespace r1;
        java.lang.String $r3, $r5;
        java.util.Stack $r2, $r4;

        r0 := @this: org.jdom.output.NamespaceStack;

        r1 := @parameter0: org.jdom.Namespace;

        $r2 = r0.<org.jdom.output.NamespaceStack: java.util.Stack prefixes>;

        $r3 = virtualinvoke r1.<org.jdom.Namespace: java.lang.String getPrefix()>();

        virtualinvoke $r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r3);

        $r4 = r0.<org.jdom.output.NamespaceStack: java.util.Stack uris>;

        $r5 = virtualinvoke r1.<org.jdom.Namespace: java.lang.String getURI()>();

        virtualinvoke $r4.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r5);

        return;
    }

    public int size()
    {
        int $i0;
        org.jdom.output.NamespaceStack r0;
        java.util.Stack $r1;

        r0 := @this: org.jdom.output.NamespaceStack;

        $r1 = r0.<org.jdom.output.NamespaceStack: java.util.Stack prefixes>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        org.jdom.output.NamespaceStack r3;
        java.util.Stack $r4, $r8, $r10, $r15;
        java.lang.StringBuffer $r0, $r2, $r5, $r6, $r9, $r14, $r17, $r18;
        int $i0, $i1, i2;
        java.lang.String $r1, $r7, $r12, $r13, $r19, $r20;
        java.lang.Object $r11, $r16;

        r3 := @this: org.jdom.output.NamespaceStack;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(java.lang.String)>("Stack: ");

        $r4 = r3.<org.jdom.output.NamespaceStack: java.util.Stack prefixes>;

        $i0 = virtualinvoke $r4.<java.util.Vector: int size()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        i2 = 0;

        goto label2;

     label1:
        $r9 = new java.lang.StringBuffer;

        $r10 = r3.<org.jdom.output.NamespaceStack: java.util.Stack prefixes>;

        $r11 = virtualinvoke $r10.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r11);

        $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r12);

        specialinvoke $r9.<java.lang.StringBuffer: void <init>(java.lang.String)>($r13);

        $r14 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&");

        $r15 = r3.<org.jdom.output.NamespaceStack: java.util.Stack uris>;

        $r16 = virtualinvoke $r15.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        $r17 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        i2 = i2 + 1;

     label2:
        $r8 = r3.<org.jdom.output.NamespaceStack: java.util.Stack prefixes>;

        $i1 = virtualinvoke $r8.<java.util.Vector: int size()>();

        if i2 < $i1 goto label1;

        $r20 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r20;
    }

    public static void <clinit>()
    {
        <org.jdom.output.NamespaceStack: java.lang.String CVS_ID> = "@(#) $RCSfile: NamespaceStack.java,v $ $Revision: 1.13 $ $Date: 2004/02/06 09:28:32 $ $Name: jdom_1_0 $";

        return;
    }
}
