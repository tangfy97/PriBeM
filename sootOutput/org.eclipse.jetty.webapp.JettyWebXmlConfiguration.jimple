public class org.eclipse.jetty.webapp.JettyWebXmlConfiguration extends org.eclipse.jetty.webapp.AbstractConfiguration
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    public static final java.lang.String PROPERTY_THIS_WEB_INF_URL;
    public static final java.lang.String XML_CONFIGURATION;
    public static final java.lang.String JETTY_WEB_XML;

    public void <init>()
    {
        org.eclipse.jetty.webapp.JettyWebXmlConfiguration r0;

        r0 := @this: org.eclipse.jetty.webapp.JettyWebXmlConfiguration;

        specialinvoke r0.<org.eclipse.jetty.webapp.AbstractConfiguration: void <init>()>();

        return;
    }

    public void configure(org.eclipse.jetty.webapp.WebAppContext) throws java.lang.Exception
    {
        org.eclipse.jetty.webapp.WebAppContext r0;
        java.net.URL $r11;
        org.eclipse.jetty.xml.XmlConfiguration $r10, $r18, r26;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r12, $r14, $r15;
        java.lang.Throwable $r21;
        java.lang.Object[] $r1, $r17, $r19;
        java.lang.String[] $r5, $r9, $r22;
        java.lang.String $r16;
        org.eclipse.jetty.webapp.JettyWebXmlConfiguration r8;
        org.eclipse.jetty.util.resource.Resource $r3, $r4, r25;
        java.lang.Object $r7;
        java.lang.ClassNotFoundException $r23;
        org.eclipse.jetty.util.log.Logger $r2, $r6, $r13, $r20, $r24;

        r8 := @this: org.eclipse.jetty.webapp.JettyWebXmlConfiguration;

        r0 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: boolean isStarted()>();

        if $z0 == 0 goto label01;

        $r20 = <org.eclipse.jetty.webapp.JettyWebXmlConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        $r19 = newarray (java.lang.Object)[0];

        interfaceinvoke $r20.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("Cannot configure webapp after it is started", $r19);

        return;

     label01:
        $r2 = <org.eclipse.jetty.webapp.JettyWebXmlConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        $r1 = newarray (java.lang.Object)[0];

        interfaceinvoke $r2.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("Configuring web-jetty.xml", $r1);

        $r3 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.util.resource.Resource getWebInf()>();

        if $r3 == null goto label15;

        $z1 = virtualinvoke $r3.<org.eclipse.jetty.util.resource.Resource: boolean isDirectory()>();

        if $z1 == 0 goto label15;

        $r4 = virtualinvoke $r3.<org.eclipse.jetty.util.resource.Resource: org.eclipse.jetty.util.resource.Resource addPath(java.lang.String)>("jetty8-web.xml");

        r25 = $r4;

        $z2 = virtualinvoke $r4.<org.eclipse.jetty.util.resource.Resource: boolean exists()>();

        if $z2 != 0 goto label02;

        r25 = virtualinvoke $r3.<org.eclipse.jetty.util.resource.Resource: org.eclipse.jetty.util.resource.Resource addPath(java.lang.String)>("jetty-web.xml");

     label02:
        $z3 = virtualinvoke r25.<org.eclipse.jetty.util.resource.Resource: boolean exists()>();

        if $z3 != 0 goto label03;

        r25 = virtualinvoke $r3.<org.eclipse.jetty.util.resource.Resource: org.eclipse.jetty.util.resource.Resource addPath(java.lang.String)>("web-jetty.xml");

     label03:
        $z4 = virtualinvoke r25.<org.eclipse.jetty.util.resource.Resource: boolean exists()>();

        if $z4 == 0 goto label15;

        $r5 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: java.lang.String[] getServerClasses()>();

     label04:
        virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: void setServerClasses(java.lang.String[])>(null);

        $r6 = <org.eclipse.jetty.webapp.JettyWebXmlConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        $z5 = interfaceinvoke $r6.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z5 == 0 goto label05;

        $r13 = <org.eclipse.jetty.webapp.JettyWebXmlConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Configure: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r25);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = newarray (java.lang.Object)[0];

        interfaceinvoke $r13.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r16, $r17);

     label05:
        $r7 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: java.lang.Object getAttribute(java.lang.String)>("org.eclipse.jetty.webapp.JettyWebXmlConfiguration");

        $r18 = (org.eclipse.jetty.xml.XmlConfiguration) $r7;

        r26 = $r18;

        if $r18 != null goto label06;

        $r10 = new org.eclipse.jetty.xml.XmlConfiguration;

        $r11 = virtualinvoke r25.<org.eclipse.jetty.util.resource.Resource: java.net.URL getURL()>();

        specialinvoke $r10.<org.eclipse.jetty.xml.XmlConfiguration: void <init>(java.net.URL)>($r11);

        r26 = $r10;

        goto label07;

     label06:
        virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: void removeAttribute(java.lang.String)>("org.eclipse.jetty.webapp.JettyWebXmlConfiguration");

     label07:
        specialinvoke r8.<org.eclipse.jetty.webapp.JettyWebXmlConfiguration: void setupXmlConfiguration(org.eclipse.jetty.webapp.WebAppContext,org.eclipse.jetty.xml.XmlConfiguration,org.eclipse.jetty.util.resource.Resource)>(r0, r26, $r3);

     label08:
        virtualinvoke r26.<org.eclipse.jetty.xml.XmlConfiguration: java.lang.Object configure(java.lang.Object)>(r0);

     label09:
        goto label11;

     label10:
        $r23 := @caughtexception;

        $r24 = <org.eclipse.jetty.webapp.JettyWebXmlConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r24.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>("Unable to process jetty-web.xml", $r23);

     label11:
        $r9 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: java.lang.String[] getServerClasses()>();

        if $r9 != null goto label15;

        virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: void setServerClasses(java.lang.String[])>($r5);

        goto label15;

     label12:
        $r21 := @caughtexception;

     label13:
        $r22 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: java.lang.String[] getServerClasses()>();

        if $r22 != null goto label14;

        virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: void setServerClasses(java.lang.String[])>($r5);

     label14:
        throw $r21;

     label15:
        return;

        catch java.lang.ClassNotFoundException from label08 to label09 with label10;
        catch java.lang.Throwable from label04 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private void setupXmlConfiguration(org.eclipse.jetty.webapp.WebAppContext, org.eclipse.jetty.xml.XmlConfiguration, org.eclipse.jetty.util.resource.Resource)
    {
        org.eclipse.jetty.webapp.WebAppContext r3;
        org.eclipse.jetty.util.resource.Resource r2;
        org.eclipse.jetty.webapp.JettyWebXmlConfiguration r0;
        org.eclipse.jetty.xml.XmlConfiguration r1;

        r0 := @this: org.eclipse.jetty.webapp.JettyWebXmlConfiguration;

        r3 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        r1 := @parameter1: org.eclipse.jetty.xml.XmlConfiguration;

        r2 := @parameter2: org.eclipse.jetty.util.resource.Resource;

        specialinvoke r0.<org.eclipse.jetty.webapp.JettyWebXmlConfiguration: void setupXmlConfiguration(org.eclipse.jetty.xml.XmlConfiguration,org.eclipse.jetty.util.resource.Resource)>(r1, r2);

        return;
    }

    private void setupXmlConfiguration(org.eclipse.jetty.xml.XmlConfiguration, org.eclipse.jetty.util.resource.Resource)
    {
        java.net.URL $r3;
        java.util.HashMap $r5;
        org.eclipse.jetty.webapp.JettyWebXmlConfiguration r6;
        org.eclipse.jetty.util.resource.Resource r2;
        java.util.Map $r1, r7;
        java.lang.String $r4;
        org.eclipse.jetty.xml.XmlConfiguration r0;

        r6 := @this: org.eclipse.jetty.webapp.JettyWebXmlConfiguration;

        r0 := @parameter0: org.eclipse.jetty.xml.XmlConfiguration;

        r2 := @parameter1: org.eclipse.jetty.util.resource.Resource;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.xml.XmlConfiguration: java.util.Map getProperties()>();

        r7 = $r1;

        if $r1 != null goto label1;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r7 = $r5;

        virtualinvoke r0.<org.eclipse.jetty.xml.XmlConfiguration: void setProperties(java.util.Map)>($r5);

     label1:
        $r3 = virtualinvoke r2.<org.eclipse.jetty.util.resource.Resource: java.net.URL getURL()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("this.web-inf.url", $r4);

        return;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        <org.eclipse.jetty.webapp.JettyWebXmlConfiguration: java.lang.String JETTY_WEB_XML> = "jetty-web.xml";

        <org.eclipse.jetty.webapp.JettyWebXmlConfiguration: java.lang.String XML_CONFIGURATION> = "org.eclipse.jetty.webapp.JettyWebXmlConfiguration";

        <org.eclipse.jetty.webapp.JettyWebXmlConfiguration: java.lang.String PROPERTY_THIS_WEB_INF_URL> = "this.web-inf.url";

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/webapp/JettyWebXmlConfiguration;");

        <org.eclipse.jetty.webapp.JettyWebXmlConfiguration: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
