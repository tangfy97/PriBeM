final class test.translator.A4Solution$Peeker extends java.lang.Object implements java.util.Iterator
{
    private java.util.Iterator iterator;
    private boolean hasFirst;
    private java.lang.Object first;

    private void <init>(java.util.Iterator)
    {
        java.util.Iterator r1;
        java.lang.Object $r2;
        test.translator.A4Solution$Peeker r0;
        boolean $z0;

        r0 := @this: test.translator.A4Solution$Peeker;

        r1 := @parameter0: java.util.Iterator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<test.translator.A4Solution$Peeker: java.util.Iterator iterator> = r1;

        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        r0.<test.translator.A4Solution$Peeker: boolean hasFirst> = 1;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r0.<test.translator.A4Solution$Peeker: java.lang.Object first> = $r2;

     label1:
        return;
    }

    public boolean hasNext()
    {
        java.util.Iterator $r1;
        test.translator.A4Solution$Peeker r0;
        boolean $z0, $z1;

        r0 := @this: test.translator.A4Solution$Peeker;

        $z0 = r0.<test.translator.A4Solution$Peeker: boolean hasFirst>;

        if $z0 != 0 goto label1;

        $r1 = r0.<test.translator.A4Solution$Peeker: java.util.Iterator iterator>;

        $z1 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public java.lang.Object next()
    {
        java.util.Iterator $r1;
        java.lang.Object $r2, r3;
        test.translator.A4Solution$Peeker r0;
        boolean $z0;

        r0 := @this: test.translator.A4Solution$Peeker;

        $z0 = r0.<test.translator.A4Solution$Peeker: boolean hasFirst>;

        if $z0 == 0 goto label1;

        r0.<test.translator.A4Solution$Peeker: boolean hasFirst> = 0;

        r3 = r0.<test.translator.A4Solution$Peeker: java.lang.Object first>;

        r0.<test.translator.A4Solution$Peeker: java.lang.Object first> = null;

        return r3;

     label1:
        $r1 = r0.<test.translator.A4Solution$Peeker: java.util.Iterator iterator>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        return $r2;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        test.translator.A4Solution$Peeker r1;

        r1 := @this: test.translator.A4Solution$Peeker;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    void <init>(java.util.Iterator, test.translator.A4Solution$Peeker)
    {
        test.translator.A4Solution$Peeker r0, r2;
        java.util.Iterator r1;

        r0 := @this: test.translator.A4Solution$Peeker;

        r1 := @parameter0: java.util.Iterator;

        r2 := @parameter1: test.translator.A4Solution$Peeker;

        specialinvoke r0.<test.translator.A4Solution$Peeker: void <init>(java.util.Iterator)>(r1);

        return;
    }
}
