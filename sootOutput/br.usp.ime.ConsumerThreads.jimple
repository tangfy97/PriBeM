public class br.usp.ime.ConsumerThreads extends java.lang.Object
{
    private static br.usp.ime.Monitor monitor;

    public void <init>()
    {
        br.usp.ime.ConsumerThreads r0;

        r0 := @this: br.usp.ime.ConsumerThreads;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String status()
    {
        br.usp.ime.ConsumerThreads r1;
        br.usp.ime.Monitor $r0;
        boolean $z0;

        r1 := @this: br.usp.ime.ConsumerThreads;

        $r0 = <br.usp.ime.ConsumerThreads: br.usp.ime.Monitor monitor>;

        $z0 = virtualinvoke $r0.<br.usp.ime.Monitor: boolean getState()>();

        if $z0 == 0 goto label1;

        return "true";

     label1:
        return "false";
    }

    public java.lang.String status1()
    {
        br.usp.ime.ConsumerThreads r1;
        br.usp.ime.Monitor $r0;
        boolean $z0;

        r1 := @this: br.usp.ime.ConsumerThreads;

        $r0 = <br.usp.ime.ConsumerThreads: br.usp.ime.Monitor monitor>;

        $z0 = virtualinvoke $r0.<br.usp.ime.Monitor: boolean getState()>();

        if $z0 == 0 goto label1;

        return "true";

     label1:
        return "false";
    }

    public java.lang.String enable()
    {
        br.usp.ime.ConsumerThreads r5;
        br.usp.ime.RunWhileTrue $r3;
        java.lang.Thread $r2;
        int i0;
        br.usp.ime.Monitor $r0, $r1, $r4;
        boolean $z0;

        r5 := @this: br.usp.ime.ConsumerThreads;

        $r0 = <br.usp.ime.ConsumerThreads: br.usp.ime.Monitor monitor>;

        virtualinvoke $r0.<br.usp.ime.Monitor: void setTrue()>();

        i0 = 0;

     label1:
        if i0 >= 5 goto label2;

        $r2 = new java.lang.Thread;

        $r3 = new br.usp.ime.RunWhileTrue;

        $r4 = <br.usp.ime.ConsumerThreads: br.usp.ime.Monitor monitor>;

        specialinvoke $r3.<br.usp.ime.RunWhileTrue: void <init>(br.usp.ime.Monitor)>($r4);

        specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>($r3);

        virtualinvoke $r2.<java.lang.Thread: void start()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        $r1 = <br.usp.ime.ConsumerThreads: br.usp.ime.Monitor monitor>;

        $z0 = virtualinvoke $r1.<br.usp.ime.Monitor: boolean getState()>();

        if $z0 == 0 goto label3;

        return "true";

     label3:
        return "false";
    }

    public java.lang.String disable()
    {
        br.usp.ime.ConsumerThreads r2;
        br.usp.ime.Monitor $r0, $r1;
        boolean $z0;

        r2 := @this: br.usp.ime.ConsumerThreads;

        $r0 = <br.usp.ime.ConsumerThreads: br.usp.ime.Monitor monitor>;

        virtualinvoke $r0.<br.usp.ime.Monitor: void setFalse()>();

        $r1 = <br.usp.ime.ConsumerThreads: br.usp.ime.Monitor monitor>;

        $z0 = virtualinvoke $r1.<br.usp.ime.Monitor: boolean getState()>();

        if $z0 == 0 goto label1;

        return "true";

     label1:
        return "false";
    }

    static void <clinit>()
    {
        br.usp.ime.Monitor $r0;

        $r0 = new br.usp.ime.Monitor;

        specialinvoke $r0.<br.usp.ime.Monitor: void <init>()>();

        <br.usp.ime.ConsumerThreads: br.usp.ime.Monitor monitor> = $r0;

        return;
    }
}
