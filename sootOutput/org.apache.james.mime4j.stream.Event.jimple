public final class org.apache.james.mime4j.stream.Event extends java.lang.Object
{
    public static final org.apache.james.mime4j.stream.Event MIME_BODY_PREMATURE_END;
    public static final org.apache.james.mime4j.stream.Event HEADERS_PREMATURE_END;
    public static final org.apache.james.mime4j.stream.Event INVALID_HEADER;
    public static final org.apache.james.mime4j.stream.Event OBSOLETE_HEADER;
    private final java.lang.String code;

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.apache.james.mime4j.stream.Event r0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.james.mime4j.stream.Event;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Code may not be null");

        throw $r2;

     label1:
        r0.<org.apache.james.mime4j.stream.Event: java.lang.String code> = r1;

        return;
    }

    public int hashCode()
    {
        int $i0;
        java.lang.String $r1;
        org.apache.james.mime4j.stream.Event r0;

        r0 := @this: org.apache.james.mime4j.stream.Event;

        $r1 = r0.<org.apache.james.mime4j.stream.Event: java.lang.String code>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.james.mime4j.stream.Event r1, r2;
        java.lang.Object r0;
        java.lang.String $r3, $r4;
        boolean $z0, $z1;

        r1 := @this: org.apache.james.mime4j.stream.Event;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0;

     label1:
        if r1 != r0 goto label2;

        return 1;

     label2:
        $z0 = r0 instanceof org.apache.james.mime4j.stream.Event;

        if $z0 == 0 goto label3;

        r2 = (org.apache.james.mime4j.stream.Event) r0;

        $r4 = r1.<org.apache.james.mime4j.stream.Event: java.lang.String code>;

        $r3 = r2.<org.apache.james.mime4j.stream.Event: java.lang.String code>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z1;

     label3:
        return 0;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        org.apache.james.mime4j.stream.Event r0;

        r0 := @this: org.apache.james.mime4j.stream.Event;

        $r1 = r0.<org.apache.james.mime4j.stream.Event: java.lang.String code>;

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.james.mime4j.stream.Event $r0, $r1, $r2, $r3;

        $r0 = new org.apache.james.mime4j.stream.Event;

        specialinvoke $r0.<org.apache.james.mime4j.stream.Event: void <init>(java.lang.String)>("Body part ended prematurely. Boundary detected in header or EOF reached.");

        <org.apache.james.mime4j.stream.Event: org.apache.james.mime4j.stream.Event MIME_BODY_PREMATURE_END> = $r0;

        $r1 = new org.apache.james.mime4j.stream.Event;

        specialinvoke $r1.<org.apache.james.mime4j.stream.Event: void <init>(java.lang.String)>("Unexpected end of headers detected. Higher level boundary detected or EOF reached.");

        <org.apache.james.mime4j.stream.Event: org.apache.james.mime4j.stream.Event HEADERS_PREMATURE_END> = $r1;

        $r2 = new org.apache.james.mime4j.stream.Event;

        specialinvoke $r2.<org.apache.james.mime4j.stream.Event: void <init>(java.lang.String)>("Invalid header encountered");

        <org.apache.james.mime4j.stream.Event: org.apache.james.mime4j.stream.Event INVALID_HEADER> = $r2;

        $r3 = new org.apache.james.mime4j.stream.Event;

        specialinvoke $r3.<org.apache.james.mime4j.stream.Event: void <init>(java.lang.String)>("Obsolete header encountered");

        <org.apache.james.mime4j.stream.Event: org.apache.james.mime4j.stream.Event OBSOLETE_HEADER> = $r3;

        return;
    }
}
