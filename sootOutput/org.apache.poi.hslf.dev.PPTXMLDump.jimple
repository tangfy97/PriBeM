public final class org.apache.poi.hslf.dev.PPTXMLDump extends java.lang.Object
{
    public static final int HEADER_SIZE;
    public static final int PICT_HEADER_SIZE;
    public static final java.lang.String PPDOC_ENTRY;
    public static final java.lang.String PICTURES_ENTRY;
    public static final java.lang.String CR;
    protected java.io.Writer out;
    protected byte[] docstream;
    protected byte[] pictstream;
    protected boolean hexHeader;
    private static final byte[] hexval;

    public void <init>(java.io.File) throws java.io.IOException
    {
        byte[] $r6, $r8, $r11, $r13;
        org.apache.poi.poifs.filesystem.Entry $r5, $r10;
        org.apache.poi.hslf.dev.PPTXMLDump r0;
        org.apache.poi.poifs.filesystem.POIFSFileSystem $r3;
        int $i0, $i1;
        org.apache.poi.poifs.filesystem.DocumentEntry r15, r16;
        java.io.FileInputStream $r1;
        java.io.File r2;
        java.io.FileNotFoundException $r14;
        org.apache.poi.poifs.filesystem.DirectoryNode $r4, $r9;
        org.apache.poi.poifs.filesystem.DocumentInputStream $r7, $r12;

        r0 := @this: org.apache.poi.hslf.dev.PPTXMLDump;

        r2 := @parameter0: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.hslf.dev.PPTXMLDump: boolean hexHeader> = 1;

        $r1 = new java.io.FileInputStream;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>(r2);

        $r3 = new org.apache.poi.poifs.filesystem.POIFSFileSystem;

        specialinvoke $r3.<org.apache.poi.poifs.filesystem.POIFSFileSystem: void <init>(java.io.InputStream)>($r1);

        virtualinvoke $r1.<java.io.FileInputStream: void close()>();

        $r4 = virtualinvoke $r3.<org.apache.poi.poifs.filesystem.POIFSFileSystem: org.apache.poi.poifs.filesystem.DirectoryNode getRoot()>();

        $r5 = virtualinvoke $r4.<org.apache.poi.poifs.filesystem.DirectoryNode: org.apache.poi.poifs.filesystem.Entry getEntry(java.lang.String)>("PowerPoint Document");

        r15 = (org.apache.poi.poifs.filesystem.DocumentEntry) $r5;

        $i0 = interfaceinvoke r15.<org.apache.poi.poifs.filesystem.DocumentEntry: int getSize()>();

        $r6 = newarray (byte)[$i0];

        r0.<org.apache.poi.hslf.dev.PPTXMLDump: byte[] docstream> = $r6;

        $r7 = virtualinvoke $r3.<org.apache.poi.poifs.filesystem.POIFSFileSystem: org.apache.poi.poifs.filesystem.DocumentInputStream createDocumentInputStream(java.lang.String)>("PowerPoint Document");

        $r8 = r0.<org.apache.poi.hslf.dev.PPTXMLDump: byte[] docstream>;

        virtualinvoke $r7.<org.apache.poi.poifs.filesystem.DocumentInputStream: int read(byte[])>($r8);

     label1:
        $r9 = virtualinvoke $r3.<org.apache.poi.poifs.filesystem.POIFSFileSystem: org.apache.poi.poifs.filesystem.DirectoryNode getRoot()>();

        $r10 = virtualinvoke $r9.<org.apache.poi.poifs.filesystem.DirectoryNode: org.apache.poi.poifs.filesystem.Entry getEntry(java.lang.String)>("Pictures");

        r16 = (org.apache.poi.poifs.filesystem.DocumentEntry) $r10;

        $i1 = interfaceinvoke r16.<org.apache.poi.poifs.filesystem.DocumentEntry: int getSize()>();

        $r11 = newarray (byte)[$i1];

        r0.<org.apache.poi.hslf.dev.PPTXMLDump: byte[] pictstream> = $r11;

        $r12 = virtualinvoke $r3.<org.apache.poi.poifs.filesystem.POIFSFileSystem: org.apache.poi.poifs.filesystem.DocumentInputStream createDocumentInputStream(java.lang.String)>("Pictures");

        $r13 = r0.<org.apache.poi.hslf.dev.PPTXMLDump: byte[] pictstream>;

        virtualinvoke $r12.<org.apache.poi.poifs.filesystem.DocumentInputStream: int read(byte[])>($r13);

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

     label4:
        return;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
    }

    public void dump(java.io.Writer) throws java.io.IOException
    {
        byte[] $r7, $r13, $r14, $r25;
        org.apache.poi.hslf.dev.PPTXMLDump r0;
        java.io.Writer r1;
        java.lang.StringBuilder $r2, $r3, $r5, $r8, $r9, $r11, $r15, $r16, $r18, $r20, $r21, $r23, $r26, $r27, $r29;
        int $i0;
        java.lang.String $r4, $r6, $r10, $r12, $r17, $r19, $r22, $r24, $r28, $r30;

        r0 := @this: org.apache.poi.hslf.dev.PPTXMLDump;

        r1 := @parameter0: java.io.Writer;

        r0.<org.apache.poi.hslf.dev.PPTXMLDump: java.io.Writer out> = r1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<Presentation>");

        $r4 = <org.apache.poi.hslf.dev.PPTXMLDump: java.lang.String CR>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.poi.hslf.dev.PPTXMLDump: void write(java.io.Writer,java.lang.String,int)>(r1, $r6, 0);

        $r7 = r0.<org.apache.poi.hslf.dev.PPTXMLDump: byte[] pictstream>;

        if $r7 == null goto label1;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<Pictures>");

        $r22 = <org.apache.poi.hslf.dev.PPTXMLDump: java.lang.String CR>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.poi.hslf.dev.PPTXMLDump: void write(java.io.Writer,java.lang.String,int)>(r1, $r24, 1);

        $r25 = r0.<org.apache.poi.hslf.dev.PPTXMLDump: byte[] pictstream>;

        virtualinvoke r0.<org.apache.poi.hslf.dev.PPTXMLDump: void dumpPictures(byte[],int)>($r25, 1);

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</Pictures>");

        $r28 = <org.apache.poi.hslf.dev.PPTXMLDump: java.lang.String CR>;

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.poi.hslf.dev.PPTXMLDump: void write(java.io.Writer,java.lang.String,int)>(r1, $r30, 1);

     label1:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<PowerPointDocument>");

        $r10 = <org.apache.poi.hslf.dev.PPTXMLDump: java.lang.String CR>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.poi.hslf.dev.PPTXMLDump: void write(java.io.Writer,java.lang.String,int)>(r1, $r12, 1);

        $r14 = r0.<org.apache.poi.hslf.dev.PPTXMLDump: byte[] docstream>;

        $r13 = r0.<org.apache.poi.hslf.dev.PPTXMLDump: byte[] docstream>;

        $i0 = lengthof $r13;

        virtualinvoke r0.<org.apache.poi.hslf.dev.PPTXMLDump: void dump(byte[],int,int,int)>($r14, 0, $i0, 2);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</PowerPointDocument>");

        $r17 = <org.apache.poi.hslf.dev.PPTXMLDump: java.lang.String CR>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.poi.hslf.dev.PPTXMLDump: void write(java.io.Writer,java.lang.String,int)>(r1, $r19, 1);

        staticinvoke <org.apache.poi.hslf.dev.PPTXMLDump: void write(java.io.Writer,java.lang.String,int)>(r1, "</Presentation>", 0);

        return;
    }

    public void dump(byte[], int, int, int) throws java.io.IOException
    {
        byte[] r0;
        org.apache.poi.hslf.dev.PPTXMLDump r2;
        boolean $z0, $z1;
        java.io.Writer $r4, $r18, $r23, $r25, $r32, $r33, $r34;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r19, $r21, $r26, $r27, $r28, $r30, $r35, $r36, $r37;
        long $l6;
        int i0, i1, $i2, $i3, $i4, $i5, i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, i17, i18, i19, $i21;
        java.lang.String $r1, $r16, $r20, $r22, $r29, $r31;

        r2 := @this: org.apache.poi.hslf.dev.PPTXMLDump;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i14 := @parameter3: int;

        i15 = i0;

     label1:
        $i2 = i0 + i1;

        $i3 = $i2 - 8;

        if i15 > $i3 goto label8;

        if i15 >= 0 goto label2;

        goto label8;

     label2:
        $i4 = staticinvoke <org.apache.poi.util.LittleEndian: int getUShort(byte[],int)>(r0, i15);

        i16 = i15 + 2;

        $i5 = staticinvoke <org.apache.poi.util.LittleEndian: int getUShort(byte[],int)>(r0, i16);

        i17 = i16 + 2;

        $l6 = staticinvoke <org.apache.poi.util.LittleEndian: long getUInt(byte[],int)>(r0, i17);

        i7 = (int) $l6;

        i18 = i17 + 4;

        $r1 = staticinvoke <org.apache.poi.hslf.record.RecordTypes: java.lang.String recordName(int)>($i5);

        $r4 = r2.<org.apache.poi.hslf.dev.PPTXMLDump: java.io.Writer out>;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" info=\"");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" type=\"");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" size=\"");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" offset=\"");

        $i8 = i18 - 8;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.poi.hslf.dev.PPTXMLDump: void write(java.io.Writer,java.lang.String,int)>($r4, $r16, i14);

        $z0 = r2.<org.apache.poi.hslf.dev.PPTXMLDump: boolean hexHeader>;

        if $z0 == 0 goto label3;

        $r32 = r2.<org.apache.poi.hslf.dev.PPTXMLDump: java.io.Writer out>;

        virtualinvoke $r32.<java.io.Writer: void write(java.lang.String)>(" header=\"");

        $r33 = r2.<org.apache.poi.hslf.dev.PPTXMLDump: java.io.Writer out>;

        $i13 = i18 - 8;

        staticinvoke <org.apache.poi.hslf.dev.PPTXMLDump: void dump(java.io.Writer,byte[],int,int,int,boolean)>($r33, r0, $i13, 8, 0, 0);

        $r34 = r2.<org.apache.poi.hslf.dev.PPTXMLDump: java.io.Writer out>;

        virtualinvoke $r34.<java.io.Writer: void write(java.lang.String)>("\"");

     label3:
        $r18 = r2.<org.apache.poi.hslf.dev.PPTXMLDump: java.io.Writer out>;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r20 = <org.apache.poi.hslf.dev.PPTXMLDump: java.lang.String CR>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<java.io.Writer: void write(java.lang.String)>($r22);

        i19 = i14 + 1;

        $i9 = $i4 & 15;

        if $i9 != 15 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        if $z1 == 0 goto label6;

        virtualinvoke r2.<org.apache.poi.hslf.dev.PPTXMLDump: void dump(byte[],int,int,int)>(r0, i18, i7, i19);

        goto label7;

     label6:
        $r23 = r2.<org.apache.poi.hslf.dev.PPTXMLDump: java.io.Writer out>;

        $i10 = lengthof r0;

        $i11 = $i10 - i18;

        $i12 = staticinvoke <java.lang.Math: int min(int,int)>(i7, $i11);

        staticinvoke <org.apache.poi.hslf.dev.PPTXMLDump: void dump(java.io.Writer,byte[],int,int,int,boolean)>($r23, r0, i18, $i12, i19, 1);

     label7:
        $i21 = (int) -1;

        i14 = i19 + $i21;

        $r25 = r2.<org.apache.poi.hslf.dev.PPTXMLDump: java.io.Writer out>;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r29 = <org.apache.poi.hslf.dev.PPTXMLDump: java.lang.String CR>;

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.poi.hslf.dev.PPTXMLDump: void write(java.io.Writer,java.lang.String,int)>($r25, $r31, i14);

        i15 = i18 + i7;

        goto label1;

     label8:
        return;
    }

    public void dumpPictures(byte[], int) throws java.io.IOException
    {
        byte[] r0, r1, r2;
        org.apache.poi.hslf.dev.PPTXMLDump r3;
        java.lang.StringBuilder $r6, $r7, $r8, $r10, $r11, $r13, $r17, $r19, $r24, $r26, $r30, $r32, $r37, $r39, $r43, $r45, $r47, $r48, $r49, $r50, $r51, $r52;
        java.lang.String $r9, $r12, $r14, $r18, $r20, $r25, $r27, $r31, $r33, $r38, $r40, $r44, $r46;
        java.io.Writer $r5, $r16, $r21, $r23, $r29, $r34, $r36, $r42;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13, i14, $i16, $i18;

        r3 := @this: org.apache.poi.hslf.dev.PPTXMLDump;

        r0 := @parameter0: byte[];

        i10 := @parameter1: int;

        i11 = 0;

     label1:
        $i0 = lengthof r0;

        if i11 >= $i0 goto label2;

        r1 = newarray (byte)[25];

        $i1 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, i11, r1, 0, $i1);

        $i2 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r1, 4);

        i3 = $i2 - 17;

        r2 = newarray (byte)[i3];

        $i5 = i11 + 25;

        $i4 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, $i5, r2, 0, $i4);

        $i6 = 25 + i3;

        i11 = i11 + $i6;

        i12 = i10 + 1;

        $r5 = r3.<org.apache.poi.hslf.dev.PPTXMLDump: java.io.Writer out>;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<picture size=\"");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" type=\"");

        $r9 = specialinvoke r3.<org.apache.poi.hslf.dev.PPTXMLDump: java.lang.String getPictureType(byte[])>(r1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\">");

        $r12 = <org.apache.poi.hslf.dev.PPTXMLDump: java.lang.String CR>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.poi.hslf.dev.PPTXMLDump: void write(java.io.Writer,java.lang.String,int)>($r5, $r14, i12);

        i13 = i12 + 1;

        $r16 = r3.<org.apache.poi.hslf.dev.PPTXMLDump: java.io.Writer out>;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<header>");

        $r18 = <org.apache.poi.hslf.dev.PPTXMLDump: java.lang.String CR>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.poi.hslf.dev.PPTXMLDump: void write(java.io.Writer,java.lang.String,int)>($r16, $r20, i13);

        $r21 = r3.<org.apache.poi.hslf.dev.PPTXMLDump: java.io.Writer out>;

        $i7 = lengthof r1;

        staticinvoke <org.apache.poi.hslf.dev.PPTXMLDump: void dump(java.io.Writer,byte[],int,int,int,boolean)>($r21, r1, 0, $i7, i13, 1);

        $r23 = r3.<org.apache.poi.hslf.dev.PPTXMLDump: java.io.Writer out>;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</header>");

        $r25 = <org.apache.poi.hslf.dev.PPTXMLDump: java.lang.String CR>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.poi.hslf.dev.PPTXMLDump: void write(java.io.Writer,java.lang.String,int)>($r23, $r27, i13);

        $r29 = r3.<org.apache.poi.hslf.dev.PPTXMLDump: java.io.Writer out>;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<imgdata>");

        $r31 = <org.apache.poi.hslf.dev.PPTXMLDump: java.lang.String CR>;

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.poi.hslf.dev.PPTXMLDump: void write(java.io.Writer,java.lang.String,int)>($r29, $r33, i13);

        $r34 = r3.<org.apache.poi.hslf.dev.PPTXMLDump: java.io.Writer out>;

        $i8 = lengthof r2;

        $i9 = staticinvoke <java.lang.Math: int min(int,int)>($i8, 100);

        staticinvoke <org.apache.poi.hslf.dev.PPTXMLDump: void dump(java.io.Writer,byte[],int,int,int,boolean)>($r34, r2, 0, $i9, i13, 1);

        $r36 = r3.<org.apache.poi.hslf.dev.PPTXMLDump: java.io.Writer out>;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</imgdata>");

        $r38 = <org.apache.poi.hslf.dev.PPTXMLDump: java.lang.String CR>;

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.poi.hslf.dev.PPTXMLDump: void write(java.io.Writer,java.lang.String,int)>($r36, $r40, i13);

        $i16 = (int) -1;

        i14 = i13 + $i16;

        $r42 = r3.<org.apache.poi.hslf.dev.PPTXMLDump: java.io.Writer out>;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</picture>");

        $r44 = <org.apache.poi.hslf.dev.PPTXMLDump: java.lang.String CR>;

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.poi.hslf.dev.PPTXMLDump: void write(java.io.Writer,java.lang.String,int)>($r42, $r46, i14);

        $i18 = (int) -1;

        i10 = i14 + $i18;

        goto label1;

     label2:
        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        org.apache.poi.hslf.dev.PPTXMLDump $r4;
        java.lang.String[] r0;
        int $i0, $i1, i2;
        java.lang.String $r1, $r3, $r8, $r10, $r13, $r16, $r19, $r20, $r21;
        boolean $z0, $z1, z2;
        java.io.PrintStream $r6, $r12, $r22;
        java.io.StringWriter $r11;
        java.io.FileWriter $r14;
        java.io.File $r2;
        java.lang.StringBuilder $r5, $r7, $r9, $r15, $r17, $r18;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        $r22 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>("Usage: PPTXMLDump (options) pptfile\nWhere options include:\n    -f     write output to <pptfile>.xml file in the current directory");

        return;

     label1:
        z2 = 0;

        i2 = 0;

     label2:
        $i1 = lengthof r0;

        if i2 >= $i1 goto label6;

        $r1 = r0[i2];

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z0 == 0 goto label3;

        $r21 = "-f";

        $r20 = r0[i2];

        $z1 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z1 == 0 goto label5;

        z2 = 1;

        goto label5;

     label3:
        $r2 = new java.io.File;

        $r3 = r0[i2];

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r3);

        $r4 = new org.apache.poi.hslf.dev.PPTXMLDump;

        specialinvoke $r4.<org.apache.poi.hslf.dev.PPTXMLDump: void <init>(java.io.File)>($r2);

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dumping ");

        $r8 = r0[i2];

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r10);

        if z2 == 0 goto label4;

        $r14 = new java.io.FileWriter;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r2.<java.io.File: java.lang.String getName()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xml");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.io.FileWriter: void <init>(java.lang.String)>($r19);

        virtualinvoke $r4.<org.apache.poi.hslf.dev.PPTXMLDump: void dump(java.io.Writer)>($r14);

        virtualinvoke $r14.<java.io.FileWriter: void close()>();

        goto label5;

     label4:
        $r11 = new java.io.StringWriter;

        specialinvoke $r11.<java.io.StringWriter: void <init>()>();

        virtualinvoke $r4.<org.apache.poi.hslf.dev.PPTXMLDump: void dump(java.io.Writer)>($r11);

        $r12 = <java.lang.System: java.io.PrintStream out>;

        $r13 = virtualinvoke $r11.<java.io.StringWriter: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r13);

     label5:
        i2 = i2 + 1;

        goto label2;

     label6:
        return;
    }

    private static void write(java.io.Writer, java.lang.String, int) throws java.io.IOException
    {
        int i0, i1;
        java.io.Writer r0;
        java.lang.String r1;

        r0 := @parameter0: java.io.Writer;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>("  ");

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>(r1);

        return;
    }

    private java.lang.String getPictureType(byte[])
    {
        byte[] r0;
        org.apache.poi.hslf.dev.PPTXMLDump r1;
        int $i0;
        java.lang.String r2;

        r1 := @this: org.apache.poi.hslf.dev.PPTXMLDump;

        r0 := @parameter0: byte[];

        $i0 = staticinvoke <org.apache.poi.util.LittleEndian: int getUShort(byte[],int)>(r0, 0);

        lookupswitch($i0)
        {
            case 8544: goto label2;
            case 18080: goto label1;
            case 28160: goto label3;
            default: goto label4;
        };

     label1:
        r2 = "jpeg";

        goto label5;

     label2:
        r2 = "wmf";

        goto label5;

     label3:
        r2 = "png";

        goto label5;

     label4:
        r2 = "unknown";

     label5:
        return r2;
    }

    private static void dump(java.io.Writer, byte[], int, int, int, boolean) throws java.io.IOException
    {
        byte[] r2, $r3, $r4;
        byte b4, $b7, $b9, $b11;
        boolean z0;
        java.io.Writer r0;
        short $s5, $s21;
        int i0, i1, i2, $i3, $i6, $i10, $i13, $i14, $i15, $i16, $i17, i18, i19, i20, $i22, $i23, $i24, $i25;
        java.lang.String $r1, $r5;
        char $c8, $c12;

        r0 := @parameter0: java.io.Writer;

        r2 := @parameter1: byte[];

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i0 := @parameter4: int;

        z0 := @parameter5: boolean;

        i18 = 0;

     label1:
        if i18 >= i0 goto label2;

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>("  ");

        i18 = i18 + 1;

        goto label1;

     label2:
        i19 = i1;

     label3:
        $i3 = i1 + i2;

        if i19 >= $i3 goto label6;

        b4 = r2[i19];

        $r3 = <org.apache.poi.hslf.dev.PPTXMLDump: byte[] hexval>;

        $s21 = (short) b4;

        $s5 = $s21 & 240;

        $i22 = (int) $s5;

        $i6 = $i22 >> 4;

        $b7 = $r3[$i6];

        $c8 = (char) $b7;

        $i23 = (int) $c8;

        virtualinvoke r0.<java.io.Writer: void write(int)>($i23);

        $r4 = <org.apache.poi.hslf.dev.PPTXMLDump: byte[] hexval>;

        $b9 = b4 & 15;

        $i24 = (int) $b9;

        $i10 = $i24 >> 0;

        $b11 = $r4[$i10];

        $c12 = (char) $b11;

        $i25 = (int) $c12;

        virtualinvoke r0.<java.io.Writer: void write(int)>($i25);

        virtualinvoke r0.<java.io.Writer: void write(int)>(32);

        $i13 = i19 + 1;

        $i14 = $i13 - i1;

        $i15 = $i14 % 25;

        if $i15 != 0 goto label5;

        $i16 = i1 + i2;

        $i17 = $i16 - 1;

        if i19 == $i17 goto label5;

        $r5 = <org.apache.poi.hslf.dev.PPTXMLDump: java.lang.String CR>;

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>($r5);

        i20 = 0;

     label4:
        if i20 >= i0 goto label5;

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>("  ");

        i20 = i20 + 1;

        goto label4;

     label5:
        i19 = i19 + 1;

        goto label3;

     label6:
        if z0 == 0 goto label7;

        if i2 <= 0 goto label7;

        $r1 = <org.apache.poi.hslf.dev.PPTXMLDump: java.lang.String CR>;

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>($r1);

     label7:
        return;
    }

    static void <clinit>()
    {
        byte[] $r1;
        java.lang.String $r0;

        <org.apache.poi.hslf.dev.PPTXMLDump: java.lang.String PICTURES_ENTRY> = "Pictures";

        <org.apache.poi.hslf.dev.PPTXMLDump: java.lang.String PPDOC_ENTRY> = "PowerPoint Document";

        <org.apache.poi.hslf.dev.PPTXMLDump: int PICT_HEADER_SIZE> = 25;

        <org.apache.poi.hslf.dev.PPTXMLDump: int HEADER_SIZE> = 8;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        <org.apache.poi.hslf.dev.PPTXMLDump: java.lang.String CR> = $r0;

        $r1 = newarray (byte)[16];

        $r1[0] = 48;

        $r1[1] = 49;

        $r1[2] = 50;

        $r1[3] = 51;

        $r1[4] = 52;

        $r1[5] = 53;

        $r1[6] = 54;

        $r1[7] = 55;

        $r1[8] = 56;

        $r1[9] = 57;

        $r1[10] = 65;

        $r1[11] = 66;

        $r1[12] = 67;

        $r1[13] = 68;

        $r1[14] = 69;

        $r1[15] = 70;

        <org.apache.poi.hslf.dev.PPTXMLDump: byte[] hexval> = $r1;

        return;
    }
}
