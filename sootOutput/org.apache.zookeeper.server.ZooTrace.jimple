public class org.apache.zookeeper.server.ZooTrace extends java.lang.Object
{
    public static final long CLIENT_REQUEST_TRACE_MASK;
    public static final long CLIENT_DATA_PACKET_TRACE_MASK;
    public static final long CLIENT_PING_TRACE_MASK;
    public static final long SERVER_PACKET_TRACE_MASK;
    public static final long SESSION_TRACE_MASK;
    public static final long EVENT_DELIVERY_TRACE_MASK;
    public static final long SERVER_PING_TRACE_MASK;
    public static final long WARNING_TRACE_MASK;
    public static final long JMX_TRACE_MASK;
    private static long traceMask;

    public void <init>()
    {
        org.apache.zookeeper.server.ZooTrace r0;

        r0 := @this: org.apache.zookeeper.server.ZooTrace;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static long getTextTraceLevel()
    {
        long $l0;

        $l0 = <org.apache.zookeeper.server.ZooTrace: long traceMask>;

        return $l0;
    }

    public static void setTextTraceLevel(long)
    {
        org.slf4j.Logger $r0;
        long l0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5;

        l0 := @parameter0: long;

        <org.apache.zookeeper.server.ZooTrace: long traceMask> = l0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/zookeeper/server/ZooTrace;");

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Set text trace mask to 0x");

        $r3 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r0.<org.slf4j.Logger: void info(java.lang.String)>($r5);

        return;
    }

    public static boolean isTraceEnabled(org.slf4j.Logger, long)
    {
        org.slf4j.Logger r0;
        byte $b3;
        long l0, $l1, $l2;
        boolean $z0, $z1;

        r0 := @parameter0: org.slf4j.Logger;

        l0 := @parameter1: long;

        $z0 = interfaceinvoke r0.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label1;

        $l1 = <org.apache.zookeeper.server.ZooTrace: long traceMask>;

        $l2 = l0 & $l1;

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static void logTraceMessage(org.slf4j.Logger, long, java.lang.String)
    {
        org.slf4j.Logger r0;
        long l0;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: org.slf4j.Logger;

        l0 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        $z0 = staticinvoke <org.apache.zookeeper.server.ZooTrace: boolean isTraceEnabled(org.slf4j.Logger,long)>(r0, l0);

        if $z0 == 0 goto label1;

        interfaceinvoke r0.<org.slf4j.Logger: void trace(java.lang.String)>(r1);

     label1:
        return;
    }

    public static void logQuorumPacket(org.slf4j.Logger, long, char, org.apache.zookeeper.server.quorum.QuorumPacket)
    {
        org.apache.zookeeper.server.quorum.QuorumPacket r1;
        org.slf4j.Logger r0;
        long l0;
        char c1;

        r0 := @parameter0: org.slf4j.Logger;

        l0 := @parameter1: long;

        c1 := @parameter2: char;

        r1 := @parameter3: org.apache.zookeeper.server.quorum.QuorumPacket;

        return;
    }

    public static void logRequest(org.slf4j.Logger, long, char, org.apache.zookeeper.server.Request, java.lang.String)
    {
        org.slf4j.Logger r0;
        long l0;
        char c1;
        org.apache.zookeeper.server.Request r6;
        java.lang.StringBuilder $r1, $r3, $r4, $r5, $r8;
        java.lang.String r2, $r7, $r9;
        boolean $z0;

        r0 := @parameter0: org.slf4j.Logger;

        l0 := @parameter1: long;

        c1 := @parameter2: char;

        r6 := @parameter3: org.apache.zookeeper.server.Request;

        r2 := @parameter4: java.lang.String;

        $z0 = staticinvoke <org.apache.zookeeper.server.ZooTrace: boolean isTraceEnabled(org.slf4j.Logger,long)>(r0, l0);

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        $r7 = virtualinvoke r6.<org.apache.zookeeper.server.Request: java.lang.String toString()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r0.<org.slf4j.Logger: void trace(java.lang.String)>($r9);

     label1:
        return;
    }

    static void <clinit>()
    {
        <org.apache.zookeeper.server.ZooTrace: long JMX_TRACE_MASK> = 512L;

        <org.apache.zookeeper.server.ZooTrace: long WARNING_TRACE_MASK> = 256L;

        <org.apache.zookeeper.server.ZooTrace: long SERVER_PING_TRACE_MASK> = 128L;

        <org.apache.zookeeper.server.ZooTrace: long EVENT_DELIVERY_TRACE_MASK> = 64L;

        <org.apache.zookeeper.server.ZooTrace: long SESSION_TRACE_MASK> = 32L;

        <org.apache.zookeeper.server.ZooTrace: long SERVER_PACKET_TRACE_MASK> = 16L;

        <org.apache.zookeeper.server.ZooTrace: long CLIENT_PING_TRACE_MASK> = 8L;

        <org.apache.zookeeper.server.ZooTrace: long CLIENT_DATA_PACKET_TRACE_MASK> = 4L;

        <org.apache.zookeeper.server.ZooTrace: long CLIENT_REQUEST_TRACE_MASK> = 2L;

        <org.apache.zookeeper.server.ZooTrace: long traceMask> = 306L;

        return;
    }
}
