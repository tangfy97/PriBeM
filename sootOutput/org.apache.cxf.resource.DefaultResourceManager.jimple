public class org.apache.cxf.resource.DefaultResourceManager extends java.lang.Object implements org.apache.cxf.resource.ResourceManager
{
    private static final java.util.logging.Logger LOG;
    protected final java.util.List registeredResolvers;
    protected boolean firstCalled;

    public void <init>()
    {
        org.apache.cxf.resource.DefaultResourceManager r0;
        java.util.concurrent.CopyOnWriteArrayList $r1;

        r0 := @this: org.apache.cxf.resource.DefaultResourceManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r1.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<org.apache.cxf.resource.DefaultResourceManager: java.util.List registeredResolvers> = $r1;

        specialinvoke r0.<org.apache.cxf.resource.DefaultResourceManager: void initializeDefaultResolvers()>();

        return;
    }

    public void <init>(org.apache.cxf.resource.ResourceResolver)
    {
        org.apache.cxf.resource.ResourceResolver r2;
        org.apache.cxf.resource.DefaultResourceManager r0;
        java.util.concurrent.CopyOnWriteArrayList $r1;

        r0 := @this: org.apache.cxf.resource.DefaultResourceManager;

        r2 := @parameter0: org.apache.cxf.resource.ResourceResolver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r1.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<org.apache.cxf.resource.DefaultResourceManager: java.util.List registeredResolvers> = $r1;

        virtualinvoke r0.<org.apache.cxf.resource.DefaultResourceManager: void addResourceResolver(org.apache.cxf.resource.ResourceResolver)>(r2);

        return;
    }

    public void <init>(java.util.List)
    {
        java.util.List r2;
        org.apache.cxf.resource.DefaultResourceManager r0;
        java.util.concurrent.CopyOnWriteArrayList $r1;

        r0 := @this: org.apache.cxf.resource.DefaultResourceManager;

        r2 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r1.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<org.apache.cxf.resource.DefaultResourceManager: java.util.List registeredResolvers> = $r1;

        virtualinvoke r0.<org.apache.cxf.resource.DefaultResourceManager: void addResourceResolvers(java.util.Collection)>(r2);

        return;
    }

    protected void onFirstResolve()
    {
        org.apache.cxf.resource.DefaultResourceManager r0;

        r0 := @this: org.apache.cxf.resource.DefaultResourceManager;

        r0.<org.apache.cxf.resource.DefaultResourceManager: boolean firstCalled> = 1;

        return;
    }

    public final java.lang.Object resolveResource(java.lang.String, java.lang.Class)
    {
        java.util.List $r3;
        org.apache.cxf.resource.DefaultResourceManager r0;
        java.lang.Class r2;
        java.lang.Object $r4;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.resource.DefaultResourceManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        $r3 = r0.<org.apache.cxf.resource.DefaultResourceManager: java.util.List registeredResolvers>;

        $r4 = specialinvoke r0.<org.apache.cxf.resource.DefaultResourceManager: java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)>(r1, r2, 0, $r3);

        return $r4;
    }

    public final java.lang.Object resolveResource(java.lang.String, java.lang.Class, java.util.List)
    {
        java.util.List r3;
        org.apache.cxf.resource.DefaultResourceManager r0;
        java.lang.Class r2;
        java.lang.Object $r4;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.resource.DefaultResourceManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.util.List;

        $r4 = specialinvoke r0.<org.apache.cxf.resource.DefaultResourceManager: java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)>(r1, r2, 0, r3);

        return $r4;
    }

    public final java.io.InputStream getResourceAsStream(java.lang.String)
    {
        java.util.List $r2;
        org.apache.cxf.resource.DefaultResourceManager r0;
        java.lang.Object $r3;
        java.lang.String r1;
        java.io.InputStream $r4;

        r0 := @this: org.apache.cxf.resource.DefaultResourceManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.cxf.resource.DefaultResourceManager: java.util.List registeredResolvers>;

        $r3 = specialinvoke r0.<org.apache.cxf.resource.DefaultResourceManager: java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)>(r1, class "Ljava/io/InputStream;", 1, $r2);

        $r4 = (java.io.InputStream) $r3;

        return $r4;
    }

    public final void addResourceResolver(org.apache.cxf.resource.ResourceResolver)
    {
        org.apache.cxf.resource.ResourceResolver r1;
        java.util.List $r2, $r3;
        org.apache.cxf.resource.DefaultResourceManager r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.resource.DefaultResourceManager;

        r1 := @parameter0: org.apache.cxf.resource.ResourceResolver;

        $r2 = r0.<org.apache.cxf.resource.DefaultResourceManager: java.util.List registeredResolvers>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<org.apache.cxf.resource.DefaultResourceManager: java.util.List registeredResolvers>;

        interfaceinvoke $r3.<java.util.List: void add(int,java.lang.Object)>(0, r1);

     label1:
        return;
    }

    public final void addResourceResolvers(java.util.Collection)
    {
        org.apache.cxf.resource.ResourceResolver r3;
        java.util.Iterator $r1;
        java.util.Collection r0;
        org.apache.cxf.resource.DefaultResourceManager r4;
        java.lang.Object $r2;
        boolean $z0;

        r4 := @this: org.apache.cxf.resource.DefaultResourceManager;

        r0 := @parameter0: java.util.Collection;

        $r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.cxf.resource.ResourceResolver) $r2;

        virtualinvoke r4.<org.apache.cxf.resource.DefaultResourceManager: void addResourceResolver(org.apache.cxf.resource.ResourceResolver)>(r3);

        goto label1;

     label2:
        return;
    }

    public final void removeResourceResolver(org.apache.cxf.resource.ResourceResolver)
    {
        org.apache.cxf.resource.ResourceResolver r1;
        java.util.List $r2, $r3;
        org.apache.cxf.resource.DefaultResourceManager r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.resource.DefaultResourceManager;

        r1 := @parameter0: org.apache.cxf.resource.ResourceResolver;

        $r2 = r0.<org.apache.cxf.resource.DefaultResourceManager: java.util.List registeredResolvers>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.cxf.resource.DefaultResourceManager: java.util.List registeredResolvers>;

        interfaceinvoke $r3.<java.util.List: boolean remove(java.lang.Object)>(r1);

     label1:
        return;
    }

    public final java.util.List getResourceResolvers()
    {
        java.util.List $r1, $r2;
        org.apache.cxf.resource.DefaultResourceManager r0;

        r0 := @this: org.apache.cxf.resource.DefaultResourceManager;

        $r1 = r0.<org.apache.cxf.resource.DefaultResourceManager: java.util.List registeredResolvers>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    private java.lang.Object findResource(java.lang.String, java.lang.Class, boolean, java.util.List)
    {
        org.apache.cxf.resource.ResourceResolver r4;
        org.apache.cxf.resource.DefaultResourceManager r0;
        java.util.logging.Level $r1;
        java.lang.String r5, $r18, $r20;
        boolean $z0, $z1, z2, $z3;
        java.util.Iterator $r22;
        java.util.logging.Logger $r2, $r9;
        java.util.List r19;
        java.lang.Object $r3, r21;
        java.lang.Class r6;
        java.lang.StringBuilder $r8, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        java.io.InputStream $r7;

        r0 := @this: org.apache.cxf.resource.DefaultResourceManager;

        r5 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.Class;

        z2 := @parameter2: boolean;

        r19 := @parameter3: java.util.List;

        $z0 = r0.<org.apache.cxf.resource.DefaultResourceManager: boolean firstCalled>;

        if $z0 != 0 goto label01;

        virtualinvoke r0.<org.apache.cxf.resource.DefaultResourceManager: void onFirstResolve()>();

     label01:
        if r19 != null goto label02;

        r19 = r0.<org.apache.cxf.resource.DefaultResourceManager: java.util.List registeredResolvers>;

     label02:
        $r2 = <org.apache.cxf.resource.DefaultResourceManager: java.util.logging.Logger LOG>;

        $r1 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z1 = virtualinvoke $r2.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r1);

        if $z1 == 0 goto label05;

        $r9 = <org.apache.cxf.resource.DefaultResourceManager: java.util.logging.Logger LOG>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("resolving resource <");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        if z2 == 0 goto label03;

        $r20 = " as stream ";

        goto label04;

     label03:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type <");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

     label04:
        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.util.logging.Logger: void fine(java.lang.String)>($r18);

     label05:
        r21 = null;

        $r22 = interfaceinvoke r19.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z3 = interfaceinvoke $r22.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        $r3 = interfaceinvoke $r22.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.cxf.resource.ResourceResolver) $r3;

        if z2 == 0 goto label07;

        $r7 = interfaceinvoke r4.<org.apache.cxf.resource.ResourceResolver: java.io.InputStream getAsStream(java.lang.String)>(r5);

        r21 = virtualinvoke r6.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r7);

        goto label08;

     label07:
        r21 = interfaceinvoke r4.<org.apache.cxf.resource.ResourceResolver: java.lang.Object resolve(java.lang.String,java.lang.Class)>(r5, r6);

     label08:
        if r21 == null goto label09;

        goto label10;

     label09:
        goto label06;

     label10:
        return r21;
    }

    private void initializeDefaultResolvers()
    {
        org.apache.cxf.resource.ClassLoaderResolver $r2;
        org.apache.cxf.resource.ClasspathResolver $r1;
        org.apache.cxf.resource.DefaultResourceManager r0;
        java.lang.Class $r3;
        java.lang.ClassLoader $r4;

        r0 := @this: org.apache.cxf.resource.DefaultResourceManager;

        $r1 = new org.apache.cxf.resource.ClasspathResolver;

        specialinvoke $r1.<org.apache.cxf.resource.ClasspathResolver: void <init>()>();

        virtualinvoke r0.<org.apache.cxf.resource.DefaultResourceManager: void addResourceResolver(org.apache.cxf.resource.ResourceResolver)>($r1);

        $r2 = new org.apache.cxf.resource.ClassLoaderResolver;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        specialinvoke $r2.<org.apache.cxf.resource.ClassLoaderResolver: void <init>(java.lang.ClassLoader)>($r4);

        virtualinvoke r0.<org.apache.cxf.resource.DefaultResourceManager: void addResourceResolver(org.apache.cxf.resource.ResourceResolver)>($r2);

        return;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/resource/DefaultResourceManager;");

        <org.apache.cxf.resource.DefaultResourceManager: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
