public class org.apache.batik.svggen.SVGAttribute extends java.lang.Object
{
    private java.lang.String name;
    private java.util.Set applicabilitySet;
    private boolean isSetInclusive;

    public void <init>(java.util.Set, boolean)
    {
        java.util.HashSet $r1;
        org.apache.batik.svggen.SVGAttribute r0;
        java.util.Set r2;
        boolean z0;

        r0 := @this: org.apache.batik.svggen.SVGAttribute;

        r2 := @parameter0: java.util.Set;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r2 != null goto label1;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r2 = $r1;

     label1:
        r0.<org.apache.batik.svggen.SVGAttribute: java.util.Set applicabilitySet> = r2;

        r0.<org.apache.batik.svggen.SVGAttribute: boolean isSetInclusive> = z0;

        return;
    }

    public boolean appliesTo(java.lang.String)
    {
        org.apache.batik.svggen.SVGAttribute r0;
        java.util.Set $r2;
        java.lang.String r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.batik.svggen.SVGAttribute;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.batik.svggen.SVGAttribute: java.util.Set applicabilitySet>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        $z1 = r0.<org.apache.batik.svggen.SVGAttribute: boolean isSetInclusive>;

        if $z1 == 0 goto label1;

        return $z0;

     label1:
        if $z0 != 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }
}
