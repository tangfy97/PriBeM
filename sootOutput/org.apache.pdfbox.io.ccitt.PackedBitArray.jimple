public class org.apache.pdfbox.io.ccitt.PackedBitArray extends java.lang.Object
{
    private int bitCount;
    private byte[] data;

    public void <init>(int)
    {
        byte[] $r1;
        int i0, $i1, i2;
        org.apache.pdfbox.io.ccitt.PackedBitArray r0;

        r0 := @this: org.apache.pdfbox.io.ccitt.PackedBitArray;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.pdfbox.io.ccitt.PackedBitArray: int bitCount> = i0;

        $i1 = i0 + 7;

        i2 = $i1 / 8;

        $r1 = newarray (byte)[i2];

        r0.<org.apache.pdfbox.io.ccitt.PackedBitArray: byte[] data> = $r1;

        return;
    }

    private int byteOffset(int)
    {
        int i0, $i1;
        org.apache.pdfbox.io.ccitt.PackedBitArray r0;

        r0 := @this: org.apache.pdfbox.io.ccitt.PackedBitArray;

        i0 := @parameter0: int;

        $i1 = i0 / 8;

        return $i1;
    }

    private int bitOffset(int)
    {
        int i0, $i1;
        org.apache.pdfbox.io.ccitt.PackedBitArray r0;

        r0 := @this: org.apache.pdfbox.io.ccitt.PackedBitArray;

        i0 := @parameter0: int;

        $i1 = i0 % 8;

        return $i1;
    }

    public void set(int)
    {
        byte[] $r1;
        byte $b2, $b6;
        int i0, $i1, $i3, $i4, $i5, $i7;
        org.apache.pdfbox.io.ccitt.PackedBitArray r0;

        r0 := @this: org.apache.pdfbox.io.ccitt.PackedBitArray;

        i0 := @parameter0: int;

        $i1 = specialinvoke r0.<org.apache.pdfbox.io.ccitt.PackedBitArray: int byteOffset(int)>(i0);

        $r1 = r0.<org.apache.pdfbox.io.ccitt.PackedBitArray: byte[] data>;

        $b2 = $r1[$i1];

        $i3 = specialinvoke r0.<org.apache.pdfbox.io.ccitt.PackedBitArray: int bitOffset(int)>(i0);

        $i4 = 1 << $i3;

        $i7 = (int) $b2;

        $i5 = $i7 | $i4;

        $b6 = (byte) $i5;

        $r1[$i1] = $b6;

        return;
    }

    public void clear(int)
    {
        byte[] $r1;
        byte $b5, $b7;
        int i0, $i1, $i2, $i3, $i4, $i6, $i9, $i10;
        org.apache.pdfbox.io.ccitt.PackedBitArray r0;

        r0 := @this: org.apache.pdfbox.io.ccitt.PackedBitArray;

        i0 := @parameter0: int;

        $i1 = specialinvoke r0.<org.apache.pdfbox.io.ccitt.PackedBitArray: int byteOffset(int)>(i0);

        $i2 = specialinvoke r0.<org.apache.pdfbox.io.ccitt.PackedBitArray: int bitOffset(int)>(i0);

        $r1 = r0.<org.apache.pdfbox.io.ccitt.PackedBitArray: byte[] data>;

        $b5 = $r1[$i1];

        $i3 = 1 << $i2;

        $i9 = (int) -1;

        $i4 = $i3 ^ $i9;

        $i10 = (int) $b5;

        $i6 = $i10 & $i4;

        $b7 = (byte) $i6;

        $r1[$i1] = $b7;

        return;
    }

    public void setBits(int, int, int)
    {
        int i0, i1, i2;
        org.apache.pdfbox.io.ccitt.PackedBitArray r0;

        r0 := @this: org.apache.pdfbox.io.ccitt.PackedBitArray;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        if i0 != 0 goto label1;

        virtualinvoke r0.<org.apache.pdfbox.io.ccitt.PackedBitArray: void clearBits(int,int)>(i1, i2);

        goto label2;

     label1:
        virtualinvoke r0.<org.apache.pdfbox.io.ccitt.PackedBitArray: void setBits(int,int)>(i1, i2);

     label2:
        return;
    }

    public void setBits(int, int)
    {
        byte[] $r1, $r2, $r3, $r4;
        java.lang.IndexOutOfBoundsException $r6;
        byte $b9, $b11, $b14, $b16, $b19, $b21;
        int i0, i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i10, $i12, $i13, $i15, $i17, $i18, $i20, i22, i23, $i24, $i25, $i26;
        org.apache.pdfbox.io.ccitt.PackedBitArray r0;

        r0 := @this: org.apache.pdfbox.io.ccitt.PackedBitArray;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        if i0 != 0 goto label1;

        return;

     label1:
        $i2 = specialinvoke r0.<org.apache.pdfbox.io.ccitt.PackedBitArray: int bitOffset(int)>(i1);

        $i3 = specialinvoke r0.<org.apache.pdfbox.io.ccitt.PackedBitArray: int byteOffset(int)>(i1);

        i4 = i1 + i0;

        $i5 = virtualinvoke r0.<org.apache.pdfbox.io.ccitt.PackedBitArray: int getBitCount()>();

        if i4 <= $i5 goto label2;

        $r6 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r6.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>("offset + length > bit count");

        throw $r6;

     label2:
        $i6 = specialinvoke r0.<org.apache.pdfbox.io.ccitt.PackedBitArray: int byteOffset(int)>(i4);

        $i7 = specialinvoke r0.<org.apache.pdfbox.io.ccitt.PackedBitArray: int bitOffset(int)>(i4);

        if $i3 != $i6 goto label3;

        $i18 = 1 << $i7;

        $i17 = 1 << $i2;

        i22 = $i18 - $i17;

        $r4 = r0.<org.apache.pdfbox.io.ccitt.PackedBitArray: byte[] data>;

        $b19 = $r4[$i3];

        $i24 = (int) $b19;

        $i20 = $i24 | i22;

        $b21 = (byte) $i20;

        $r4[$i3] = $b21;

        goto label6;

     label3:
        $r1 = r0.<org.apache.pdfbox.io.ccitt.PackedBitArray: byte[] data>;

        $b9 = $r1[$i3];

        $i8 = 255 << $i2;

        $i25 = (int) $b9;

        $i10 = $i25 | $i8;

        $b11 = (byte) $i10;

        $r1[$i3] = $b11;

        i23 = $i3 + 1;

     label4:
        if i23 >= $i6 goto label5;

        $r3 = r0.<org.apache.pdfbox.io.ccitt.PackedBitArray: byte[] data>;

        $r3[i23] = -1;

        i23 = i23 + 1;

        goto label4;

     label5:
        if $i7 <= 0 goto label6;

        $r2 = r0.<org.apache.pdfbox.io.ccitt.PackedBitArray: byte[] data>;

        $b14 = $r2[$i6];

        $i12 = 8 - $i7;

        $i13 = 255 >> $i12;

        $i26 = (int) $b14;

        $i15 = $i26 | $i13;

        $b16 = (byte) $i15;

        $r2[$i6] = $b16;

     label6:
        return;
    }

    public void clearBits(int, int)
    {
        byte[] $r1, $r2, $r3, $r4;
        byte $b9, $b11, $b15, $b17, $b21, $b23;
        int i0, i1, i2, $i3, i4, $i5, i6, $i7, $i8, $i10, $i12, $i13, $i14, $i16, $i18, $i19, $i20, $i22, i24, i25, $i27, $i28, $i30, $i31, $i33, $i34;
        org.apache.pdfbox.io.ccitt.PackedBitArray r0;

        r0 := @this: org.apache.pdfbox.io.ccitt.PackedBitArray;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        if i0 != 0 goto label1;

        return;

     label1:
        i2 = i1 % 8;

        $i3 = specialinvoke r0.<org.apache.pdfbox.io.ccitt.PackedBitArray: int byteOffset(int)>(i1);

        i4 = i1 + i0;

        $i5 = specialinvoke r0.<org.apache.pdfbox.io.ccitt.PackedBitArray: int byteOffset(int)>(i4);

        i6 = i4 % 8;

        if $i3 != $i5 goto label2;

        $i19 = 1 << i6;

        $i18 = 1 << i2;

        i24 = $i19 - $i18;

        $r4 = r0.<org.apache.pdfbox.io.ccitt.PackedBitArray: byte[] data>;

        $b21 = $r4[$i3];

        $i27 = (int) -1;

        $i20 = i24 ^ $i27;

        $i28 = (int) $b21;

        $i22 = $i28 & $i20;

        $b23 = (byte) $i22;

        $r4[$i3] = $b23;

        goto label5;

     label2:
        $r1 = r0.<org.apache.pdfbox.io.ccitt.PackedBitArray: byte[] data>;

        $b9 = $r1[$i3];

        $i7 = 255 << i2;

        $i30 = (int) -1;

        $i8 = $i7 ^ $i30;

        $i31 = (int) $b9;

        $i10 = $i31 & $i8;

        $b11 = (byte) $i10;

        $r1[$i3] = $b11;

        i25 = $i3 + 1;

     label3:
        if i25 >= $i5 goto label4;

        $r3 = r0.<org.apache.pdfbox.io.ccitt.PackedBitArray: byte[] data>;

        $r3[i25] = 0;

        i25 = i25 + 1;

        goto label3;

     label4:
        if i6 <= 0 goto label5;

        $r2 = r0.<org.apache.pdfbox.io.ccitt.PackedBitArray: byte[] data>;

        $b15 = $r2[$i5];

        $i12 = 8 - i6;

        $i13 = 255 >> $i12;

        $i33 = (int) -1;

        $i14 = $i13 ^ $i33;

        $i34 = (int) $b15;

        $i16 = $i34 & $i14;

        $b17 = (byte) $i16;

        $r2[$i5] = $b17;

     label5:
        return;
    }

    public void clear()
    {
        int $i0;
        org.apache.pdfbox.io.ccitt.PackedBitArray r0;

        r0 := @this: org.apache.pdfbox.io.ccitt.PackedBitArray;

        $i0 = virtualinvoke r0.<org.apache.pdfbox.io.ccitt.PackedBitArray: int getBitCount()>();

        virtualinvoke r0.<org.apache.pdfbox.io.ccitt.PackedBitArray: void clearBits(int,int)>(0, $i0);

        return;
    }

    public int getBitCount()
    {
        int $i0;
        org.apache.pdfbox.io.ccitt.PackedBitArray r0;

        r0 := @this: org.apache.pdfbox.io.ccitt.PackedBitArray;

        $i0 = r0.<org.apache.pdfbox.io.ccitt.PackedBitArray: int bitCount>;

        return $i0;
    }

    public int getByteCount()
    {
        int $i0;
        byte[] $r1;
        org.apache.pdfbox.io.ccitt.PackedBitArray r0;

        r0 := @this: org.apache.pdfbox.io.ccitt.PackedBitArray;

        $r1 = r0.<org.apache.pdfbox.io.ccitt.PackedBitArray: byte[] data>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public byte[] getData()
    {
        byte[] $r1;
        org.apache.pdfbox.io.ccitt.PackedBitArray r0;

        r0 := @this: org.apache.pdfbox.io.ccitt.PackedBitArray;

        $r1 = r0.<org.apache.pdfbox.io.ccitt.PackedBitArray: byte[] data>;

        return $r1;
    }

    public java.lang.String toString()
    {
        byte[] $r1;
        int $i0;
        java.lang.String $r2, $r3;
        org.apache.pdfbox.io.ccitt.PackedBitArray r0;

        r0 := @this: org.apache.pdfbox.io.ccitt.PackedBitArray;

        $r1 = r0.<org.apache.pdfbox.io.ccitt.PackedBitArray: byte[] data>;

        $r2 = staticinvoke <org.apache.pdfbox.io.ccitt.PackedBitArray: java.lang.String toBitString(byte[])>($r1);

        $i0 = r0.<org.apache.pdfbox.io.ccitt.PackedBitArray: int bitCount>;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        return $r3;
    }

    public static java.lang.String toBitString(byte)
    {
        byte[] $r0;
        java.lang.String $r1;
        byte b0;

        b0 := @parameter0: byte;

        $r0 = newarray (byte)[1];

        $r0[0] = b0;

        $r1 = staticinvoke <org.apache.pdfbox.io.ccitt.PackedBitArray: java.lang.String toBitString(byte[])>($r0);

        return $r1;
    }

    public static java.lang.String toBitString(byte[])
    {
        int $i0;
        byte[] r0;
        java.lang.String $r1;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        $r1 = staticinvoke <org.apache.pdfbox.io.ccitt.PackedBitArray: java.lang.String toBitString(byte[],int,int)>(r0, 0, $i0);

        return $r1;
    }

    public static java.lang.String toBitString(byte[], int, int)
    {
        byte[] r2;
        char $c8;
        byte $b4;
        java.lang.StringBuffer $r3;
        int i0, i1, i2, i3, i5, i6, i7, $i9;
        java.lang.String $r1;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        i6 = i0;

        i2 = i0 + i1;

     label1:
        if i6 >= i2 goto label6;

        i7 = 0;

     label2:
        if i7 >= 8 goto label5;

        i3 = 1 << i7;

        $b4 = r2[i6];

        $i9 = (int) $b4;

        i5 = $i9 & i3;

        if i5 == 0 goto label3;

        $c8 = 49;

        goto label4;

     label3:
        $c8 = 48;

     label4:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c8);

        i7 = i7 + 1;

        goto label2;

     label5:
        i6 = i6 + 1;

        goto label1;

     label6:
        $r1 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }
}
