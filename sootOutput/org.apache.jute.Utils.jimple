public class org.apache.jute.Utils extends java.lang.Object
{
    private static final char[] hexchars;

    private void <init>()
    {
        org.apache.jute.Utils r0;

        r0 := @this: org.apache.jute.Utils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean bufEquals(byte[], byte[])
    {
        byte[] r0, r1;
        byte $b3, $b4;
        int $i0, $i1, $i2, i5, $i6, $i7;
        boolean $z1, $z2;

        r0 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        if r0 != r1 goto label1;

        return 1;

     label1:
        $i1 = lengthof r0;

        $i0 = lengthof r1;

        if $i1 != $i0 goto label2;

        $z2 = 1;

        $z1 = 1;

        goto label3;

     label2:
        $z2 = 0;

        $z1 = 0;

     label3:
        if $z1 != 0 goto label4;

        return $z2;

     label4:
        i5 = 0;

     label5:
        $i2 = lengthof r0;

        if i5 >= $i2 goto label7;

        $b4 = r0[i5];

        $b3 = r1[i5];

        $i6 = (int) $b4;

        $i7 = (int) $b3;

        if $i6 == $i7 goto label6;

        return 0;

     label6:
        i5 = i5 + 1;

        goto label5;

     label7:
        return 1;
    }

    static java.lang.String toXMLString(java.lang.String)
    {
        int $i0, $i2, $i4, i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.lang.String r0, $r2;
        char $c1, $c3, $c5;
        char[] $r3, $r4;
        java.lang.StringBuilder $r5;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return "";

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        i6 = 0;

     label2:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i6 >= $i0 goto label8;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

        $i7 = (int) $c1;

        if $i7 != 60 goto label3;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&lt;");

        goto label7;

     label3:
        $i8 = (int) $c1;

        if $i8 != 38 goto label4;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&amp;");

        goto label7;

     label4:
        $i9 = (int) $c1;

        if $i9 != 37 goto label5;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%25");

        goto label7;

     label5:
        $i10 = (int) $c1;

        if $i10 >= 32 goto label6;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%");

        $r3 = <org.apache.jute.Utils: char[] hexchars>;

        $i11 = (int) $c1;

        $i2 = $i11 / 16;

        $c3 = $r3[$i2];

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $r4 = <org.apache.jute.Utils: char[] hexchars>;

        $i12 = (int) $c1;

        $i4 = $i12 % 16;

        $c5 = $r4[$i4];

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        goto label7;

     label6:
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

     label7:
        i6 = i6 + 1;

        goto label2;

     label8:
        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    private static int h2c(char)
    {
        char c0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;

        c0 := @parameter0: char;

        $i4 = (int) c0;

        if $i4 < 48 goto label1;

        $i5 = (int) c0;

        if $i5 > 57 goto label1;

        $i6 = (int) c0;

        $i3 = $i6 - 48;

        return $i3;

     label1:
        $i7 = (int) c0;

        if $i7 < 65 goto label2;

        $i8 = (int) c0;

        if $i8 > 70 goto label2;

        $i9 = (int) c0;

        $i2 = $i9 - 65;

        return $i2;

     label2:
        $i10 = (int) c0;

        if $i10 < 97 goto label3;

        $i11 = (int) c0;

        if $i11 > 102 goto label3;

        $i12 = (int) c0;

        $i1 = $i12 - 97;

        return $i1;

     label3:
        return 0;
    }

    static java.lang.String fromXMLString(java.lang.String)
    {
        int $i0, $i1, $i5, $i6, $i7, $i8, i10, i11, $i12;
        java.lang.String r1, $r2;
        char $c2, $c3, $c4, c9;
        java.lang.StringBuilder $r3;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        i10 = 0;

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i10 >= $i0 goto label4;

        $i1 = i10;

        i10 = i10 + 1;

        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i1);

        $i12 = (int) $c2;

        if $i12 != 37 goto label2;

        i11 = i10 + 1;

        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i10);

        i10 = i11 + 1;

        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i11);

        $i5 = staticinvoke <org.apache.jute.Utils: int h2c(char)>($c3);

        $i6 = $i5 * 16;

        $i7 = staticinvoke <org.apache.jute.Utils: int h2c(char)>($c4);

        $i8 = $i6 + $i7;

        c9 = (char) $i8;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c9);

        goto label3;

     label2:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

     label3:
        goto label1;

     label4:
        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    static java.lang.String toCSVString(java.lang.String)
    {
        char $c3;
        int $i0, $i1, $i2, i4, $i5;
        java.lang.StringBuilder $r3;
        java.lang.String r0, $r2;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label01;

        return "";

     label01:
        $r3 = new java.lang.StringBuilder;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = $i0 + 1;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        i4 = 0;

     label02:
        if i4 >= $i2 goto label11;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $i5 = (int) $c3;

        lookupswitch($i5)
        {
            case 0: goto label03;
            case 10: goto label04;
            case 13: goto label05;
            case 37: goto label08;
            case 44: goto label06;
            case 125: goto label07;
            default: goto label09;
        };

     label03:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%00");

        goto label10;

     label04:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%0A");

        goto label10;

     label05:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%0D");

        goto label10;

     label06:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%2C");

        goto label10;

     label07:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%7D");

        goto label10;

     label08:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%25");

        goto label10;

     label09:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

     label10:
        i4 = i4 + 1;

        goto label02;

     label11:
        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    static java.lang.String fromCSVString(java.lang.String) throws java.io.IOException
    {
        int $i1, $i2, $i4, $i6, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        java.lang.String r0, $r2;
        char $c0, $c3, $c5, $c7;
        java.io.IOException $r5, $r7;
        java.lang.StringBuilder $r6;

        r0 := @parameter0: java.lang.String;

        $c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i9 = (int) $c0;

        if $i9 == 39 goto label01;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("Error deserializing string.");

        throw $r5;

     label01:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        $r6 = new java.lang.StringBuilder;

        $i2 = $i1 - 1;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(int)>($i2);

        i8 = 1;

     label02:
        if i8 >= $i1 goto label12;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i8);

        $i10 = (int) $c3;

        if $i10 != 37 goto label10;

        $i4 = i8 + 1;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        $i6 = i8 + 2;

        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i6);

        i8 = i8 + 2;

        $i11 = (int) $c5;

        if $i11 != 48 goto label03;

        $i12 = (int) $c7;

        if $i12 != 48 goto label03;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(0);

        goto label09;

     label03:
        $i13 = (int) $c5;

        if $i13 != 48 goto label04;

        $i14 = (int) $c7;

        if $i14 != 65 goto label04;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        goto label09;

     label04:
        $i15 = (int) $c5;

        if $i15 != 48 goto label05;

        $i16 = (int) $c7;

        if $i16 != 68 goto label05;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(13);

        goto label09;

     label05:
        $i17 = (int) $c5;

        if $i17 != 50 goto label06;

        $i18 = (int) $c7;

        if $i18 != 67 goto label06;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        goto label09;

     label06:
        $i19 = (int) $c5;

        if $i19 != 55 goto label07;

        $i20 = (int) $c7;

        if $i20 != 68 goto label07;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        goto label09;

     label07:
        $i21 = (int) $c5;

        if $i21 != 50 goto label08;

        $i22 = (int) $c7;

        if $i22 != 53 goto label08;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(37);

        goto label09;

     label08:
        $r7 = new java.io.IOException;

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("Error deserializing string.");

        throw $r7;

     label09:
        goto label11;

     label10:
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

     label11:
        i8 = i8 + 1;

        goto label02;

     label12:
        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    static java.lang.String toXMLBuffer(byte[])
    {
        byte[] r0;
        byte $b4;
        int $i0, $i1, $i2, $i3, i5, $i6;
        java.lang.StringBuilder $r4;
        java.lang.String $r2, $r3;

        r0 := @parameter0: byte[];

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 != 0 goto label2;

     label1:
        return "";

     label2:
        $r4 = new java.lang.StringBuilder;

        $i1 = lengthof r0;

        $i2 = 2 * $i1;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i2);

        i5 = 0;

     label3:
        $i3 = lengthof r0;

        if i5 >= $i3 goto label4;

        $b4 = r0[i5];

        $i6 = (int) $b4;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        i5 = i5 + 1;

        goto label3;

     label4:
        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    static byte[] fromXMLBuffer(java.lang.String) throws java.io.IOException
    {
        byte[] r2, $r3, $r9;
        java.io.ByteArrayOutputStream $r0;
        byte $b8;
        int $i0, $i1, i2, $i3, $i5, $i6, i9;
        java.lang.String r1, $r8;
        char $c4, $c7;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $r9 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r9;

     label1:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        i2 = $i1 / 2;

        r2 = newarray (byte)[i2];

        i9 = 0;

     label2:
        if i9 >= i2 goto label3;

        $i3 = 2 * i9;

        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i3);

        $i5 = 2 * i9;

        $i6 = $i5 + 1;

        $c7 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i6);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c7);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $b8 = staticinvoke <java.lang.Byte: byte parseByte(java.lang.String,int)>($r8, 16);

        r2[i9] = $b8;

        i9 = i9 + 1;

        goto label2;

     label3:
        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[])>(r2);

        $r3 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r3;
    }

    static java.lang.String toCSVBuffer(byte[])
    {
        byte[] r0;
        byte $b4;
        int $i0, $i1, $i2, $i3, i5, $i6;
        java.lang.StringBuilder $r4;
        java.lang.String $r2, $r3;

        r0 := @parameter0: byte[];

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 != 0 goto label2;

     label1:
        return "";

     label2:
        $r4 = new java.lang.StringBuilder;

        $i1 = lengthof r0;

        $i2 = $i1 + 1;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(35);

        i5 = 0;

     label3:
        $i3 = lengthof r0;

        if i5 >= $i3 goto label4;

        $b4 = r0[i5];

        $i6 = (int) $b4;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        i5 = i5 + 1;

        goto label3;

     label4:
        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    static byte[] fromCSVBuffer(java.lang.String) throws java.io.IOException
    {
        byte[] r2, $r3, $r9;
        java.io.ByteArrayOutputStream $r12;
        byte $b11;
        int $i1, $i2, $i3, i4, $i5, $i6, $i8, $i9, i12, $i13;
        java.lang.String r0, $r8;
        char $c0, $c7, $c10;
        java.io.IOException $r11;
        java.lang.StringBuilder $r5, $r6, $r7, $r13;

        r0 := @parameter0: java.lang.String;

        $c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i13 = (int) $c0;

        if $i13 == 35 goto label1;

        $r11 = new java.io.IOException;

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>("Error deserializing buffer.");

        throw $r11;

     label1:
        $r12 = new java.io.ByteArrayOutputStream;

        specialinvoke $r12.<java.io.ByteArrayOutputStream: void <init>()>();

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 != 1 goto label2;

        $r9 = virtualinvoke $r12.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r9;

     label2:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        $i3 = $i2 - 1;

        i4 = $i3 / 2;

        r2 = newarray (byte)[i4];

        i12 = 0;

     label3:
        if i12 >= i4 goto label4;

        $i5 = 2 * i12;

        $i6 = $i5 + 1;

        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i6);

        $i8 = 2 * i12;

        $i9 = $i8 + 2;

        $c10 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i9);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c10);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $b11 = staticinvoke <java.lang.Byte: byte parseByte(java.lang.String,int)>($r8, 16);

        r2[i12] = $b11;

        i12 = i12 + 1;

        goto label3;

     label4:
        virtualinvoke $r12.<java.io.ByteArrayOutputStream: void write(byte[])>(r2);

        $r3 = virtualinvoke $r12.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r3;
    }

    public static int compareBytes(byte[], int, int, byte[], int, int)
    {
        byte[] r0, r1;
        byte $b6, $b7, $b10, $b11, $b13, $b14;
        int i0, i1, i2, $i3, i4, $i5, $i8, $i9, i12, $i15, $i16, $i17, $i18;

        r0 := @parameter0: byte[];

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        r1 := @parameter3: byte[];

        i4 := @parameter4: int;

        i1 := @parameter5: int;

        i12 = 0;

     label1:
        if i12 >= i0 goto label5;

        if i12 >= i1 goto label5;

        $i3 = i2 + i12;

        $b7 = r0[$i3];

        $i5 = i4 + i12;

        $b6 = r1[$i5];

        $i15 = (int) $b7;

        $i16 = (int) $b6;

        if $i15 == $i16 goto label4;

        $i8 = i2 + i12;

        $b11 = r0[$i8];

        $i9 = i4 + 1;

        $b10 = r1[$i9];

        $i17 = (int) $b11;

        $i18 = (int) $b10;

        if $i17 >= $i18 goto label2;

        $b13 = -1;

        goto label3;

     label2:
        $b13 = 1;

     label3:
        return $b13;

     label4:
        i12 = i12 + 1;

        goto label1;

     label5:
        if i0 == i1 goto label8;

        if i0 >= i1 goto label6;

        $b14 = -1;

        goto label7;

     label6:
        $b14 = 1;

     label7:
        return $b14;

     label8:
        return 0;
    }

    static void <clinit>()
    {
        char[] $r0;

        $r0 = newarray (char)[16];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 65;

        $r0[11] = 66;

        $r0[12] = 67;

        $r0[13] = 68;

        $r0[14] = 69;

        $r0[15] = 70;

        <org.apache.jute.Utils: char[] hexchars> = $r0;

        return;
    }
}
