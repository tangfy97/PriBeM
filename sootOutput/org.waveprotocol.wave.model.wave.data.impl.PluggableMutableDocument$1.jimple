final class org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument$1 extends java.lang.Object implements org.waveprotocol.wave.model.wave.data.DocumentFactory
{
    final org.waveprotocol.wave.model.schema.SchemaProvider val$schemas;

    void <init>(org.waveprotocol.wave.model.schema.SchemaProvider)
    {
        org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument$1 r0;
        org.waveprotocol.wave.model.schema.SchemaProvider r1;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument$1;

        r1 := @parameter0: org.waveprotocol.wave.model.schema.SchemaProvider;

        r0.<org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument$1: org.waveprotocol.wave.model.schema.SchemaProvider val$schemas> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument create(org.waveprotocol.wave.model.id.WaveletId, java.lang.String, org.waveprotocol.wave.model.document.operation.DocInitialization)
    {
        org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument$1 r2;
        org.waveprotocol.wave.model.schema.SchemaProvider $r5;
        org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument $r0;
        org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema $r6;
        org.waveprotocol.wave.model.document.operation.DocInitialization r1;
        org.waveprotocol.wave.model.id.WaveletId r3;
        java.lang.String r4;

        r2 := @this: org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument$1;

        r3 := @parameter0: org.waveprotocol.wave.model.id.WaveletId;

        r4 := @parameter1: java.lang.String;

        r1 := @parameter2: org.waveprotocol.wave.model.document.operation.DocInitialization;

        $r0 = new org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument;

        $r5 = r2.<org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument$1: org.waveprotocol.wave.model.schema.SchemaProvider val$schemas>;

        $r6 = interfaceinvoke $r5.<org.waveprotocol.wave.model.schema.SchemaProvider: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema getSchemaForId(org.waveprotocol.wave.model.id.WaveletId,java.lang.String)>(r3, r4);

        specialinvoke $r0.<org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument: void <init>(org.waveprotocol.wave.model.document.operation.DocInitialization,org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema,org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument$1)>(r1, $r6, null);

        return $r0;
    }

    public volatile org.waveprotocol.wave.model.wave.data.DocumentOperationSink create(org.waveprotocol.wave.model.id.WaveletId, java.lang.String, org.waveprotocol.wave.model.document.operation.DocInitialization)
    {
        org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument$1 r0;
        org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument $r4;
        org.waveprotocol.wave.model.document.operation.DocInitialization r3;
        org.waveprotocol.wave.model.id.WaveletId r1;
        java.lang.String r2;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument$1;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveletId;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.waveprotocol.wave.model.document.operation.DocInitialization;

        $r4 = virtualinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument$1: org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument create(org.waveprotocol.wave.model.id.WaveletId,java.lang.String,org.waveprotocol.wave.model.document.operation.DocInitialization)>(r1, r2, r3);

        return $r4;
    }
}
