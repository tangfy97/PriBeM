class org.springframework.context.config.LoadTimeWeaverBeanDefinitionParser extends org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser
{
    private static final java.lang.String WEAVER_CLASS_ATTRIBUTE;
    private static final java.lang.String ASPECTJ_WEAVING_ATTRIBUTE;
    private static final java.lang.String ASPECTJ_AOP_XML_RESOURCE;
    private static final java.lang.String DEFAULT_LOAD_TIME_WEAVER_CLASS_NAME;
    private static final java.lang.String ASPECTJ_WEAVING_ENABLER_CLASS_NAME;

    void <init>()
    {
        org.springframework.context.config.LoadTimeWeaverBeanDefinitionParser r0;

        r0 := @this: org.springframework.context.config.LoadTimeWeaverBeanDefinitionParser;

        specialinvoke r0.<org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser: void <init>()>();

        return;
    }

    protected java.lang.String getBeanClassName(org.w3c.dom.Element)
    {
        org.w3c.dom.Element r0;
        org.springframework.context.config.LoadTimeWeaverBeanDefinitionParser r2;
        java.lang.String $r1;
        boolean $z0;

        r2 := @this: org.springframework.context.config.LoadTimeWeaverBeanDefinitionParser;

        r0 := @parameter0: org.w3c.dom.Element;

        $z0 = interfaceinvoke r0.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("weaver-class");

        if $z0 == 0 goto label1;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("weaver-class");

        return $r1;

     label1:
        return "org.springframework.context.weaving.DefaultContextLoadTimeWeaver";
    }

    protected java.lang.String resolveId(org.w3c.dom.Element, org.springframework.beans.factory.support.AbstractBeanDefinition, org.springframework.beans.factory.xml.ParserContext)
    {
        org.w3c.dom.Element r1;
        org.springframework.beans.factory.xml.ParserContext r3;
        org.springframework.context.config.LoadTimeWeaverBeanDefinitionParser r0;
        org.springframework.beans.factory.support.AbstractBeanDefinition r2;

        r0 := @this: org.springframework.context.config.LoadTimeWeaverBeanDefinitionParser;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: org.springframework.beans.factory.support.AbstractBeanDefinition;

        r3 := @parameter2: org.springframework.beans.factory.xml.ParserContext;

        return "loadTimeWeaver";
    }

    protected void doParse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, org.springframework.beans.factory.support.BeanDefinitionBuilder)
    {
        org.springframework.beans.factory.support.RootBeanDefinition $r5;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r0;
        org.springframework.beans.factory.xml.XmlReaderContext $r6, $r7;
        org.w3c.dom.Element r2;
        org.springframework.beans.factory.xml.ParserContext r4;
        org.springframework.context.config.LoadTimeWeaverBeanDefinitionParser r1;
        java.lang.String $r3;
        java.lang.ClassLoader $r8;
        org.springframework.context.config.SpringConfiguredBeanDefinitionParser $r9;
        boolean $z0, $z1;

        r1 := @this: org.springframework.context.config.LoadTimeWeaverBeanDefinitionParser;

        r2 := @parameter0: org.w3c.dom.Element;

        r4 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        r0 := @parameter2: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        virtualinvoke r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder setRole(int)>(2);

        $r3 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("aspectj-weaving");

        $z0 = virtualinvoke r1.<org.springframework.context.config.LoadTimeWeaverBeanDefinitionParser: boolean isAspectJWeavingEnabled(java.lang.String,org.springframework.beans.factory.xml.ParserContext)>($r3, r4);

        if $z0 == 0 goto label1;

        $r5 = new org.springframework.beans.factory.support.RootBeanDefinition;

        specialinvoke $r5.<org.springframework.beans.factory.support.RootBeanDefinition: void <init>()>();

        virtualinvoke $r5.<org.springframework.beans.factory.support.RootBeanDefinition: void setBeanClassName(java.lang.String)>("org.springframework.context.weaving.AspectJWeavingEnabler");

        $r6 = virtualinvoke r4.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.XmlReaderContext getReaderContext()>();

        virtualinvoke $r6.<org.springframework.beans.factory.xml.XmlReaderContext: java.lang.String registerWithGeneratedName(org.springframework.beans.factory.config.BeanDefinition)>($r5);

        $r7 = virtualinvoke r4.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.XmlReaderContext getReaderContext()>();

        $r8 = virtualinvoke $r7.<org.springframework.beans.factory.xml.XmlReaderContext: java.lang.ClassLoader getBeanClassLoader()>();

        $z1 = virtualinvoke r1.<org.springframework.context.config.LoadTimeWeaverBeanDefinitionParser: boolean isBeanConfigurerAspectEnabled(java.lang.ClassLoader)>($r8);

        if $z1 == 0 goto label1;

        $r9 = new org.springframework.context.config.SpringConfiguredBeanDefinitionParser;

        specialinvoke $r9.<org.springframework.context.config.SpringConfiguredBeanDefinitionParser: void <init>()>();

        virtualinvoke $r9.<org.springframework.context.config.SpringConfiguredBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)>(r2, r4);

     label1:
        return;
    }

    protected boolean isAspectJWeavingEnabled(java.lang.String, org.springframework.beans.factory.xml.ParserContext)
    {
        org.springframework.core.io.ResourceLoader $r5;
        java.net.URL $r7;
        org.springframework.beans.factory.xml.XmlReaderContext $r4;
        org.springframework.beans.factory.xml.ParserContext r3;
        org.springframework.context.config.LoadTimeWeaverBeanDefinitionParser r8;
        java.lang.String r0, $r1, $r2;
        java.lang.ClassLoader $r6;
        boolean $z0, $z1;

        r8 := @this: org.springframework.context.config.LoadTimeWeaverBeanDefinitionParser;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        $r1 = "on";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r2 = "off";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

        return 0;

     label2:
        $r4 = virtualinvoke r3.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.XmlReaderContext getReaderContext()>();

        $r5 = virtualinvoke $r4.<org.springframework.beans.factory.xml.XmlReaderContext: org.springframework.core.io.ResourceLoader getResourceLoader()>();

        $r6 = interfaceinvoke $r5.<org.springframework.core.io.ResourceLoader: java.lang.ClassLoader getClassLoader()>();

        $r7 = virtualinvoke $r6.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>("META-INF/aop.xml");

        if $r7 == null goto label3;

        return 1;

     label3:
        return 0;
    }

    protected boolean isBeanConfigurerAspectEnabled(java.lang.ClassLoader)
    {
        org.springframework.context.config.LoadTimeWeaverBeanDefinitionParser r1;
        java.lang.ClassLoader r0;
        boolean $z0;

        r1 := @this: org.springframework.context.config.LoadTimeWeaverBeanDefinitionParser;

        r0 := @parameter0: java.lang.ClassLoader;

        $z0 = staticinvoke <org.springframework.util.ClassUtils: boolean isPresent(java.lang.String,java.lang.ClassLoader)>("org.springframework.beans.factory.aspectj.AnnotationBeanConfigurerAspect", r0);

        return $z0;
    }

    public static void <clinit>()
    {
        <org.springframework.context.config.LoadTimeWeaverBeanDefinitionParser: java.lang.String ASPECTJ_WEAVING_ENABLER_CLASS_NAME> = "org.springframework.context.weaving.AspectJWeavingEnabler";

        <org.springframework.context.config.LoadTimeWeaverBeanDefinitionParser: java.lang.String DEFAULT_LOAD_TIME_WEAVER_CLASS_NAME> = "org.springframework.context.weaving.DefaultContextLoadTimeWeaver";

        <org.springframework.context.config.LoadTimeWeaverBeanDefinitionParser: java.lang.String ASPECTJ_AOP_XML_RESOURCE> = "META-INF/aop.xml";

        <org.springframework.context.config.LoadTimeWeaverBeanDefinitionParser: java.lang.String ASPECTJ_WEAVING_ATTRIBUTE> = "aspectj-weaving";

        <org.springframework.context.config.LoadTimeWeaverBeanDefinitionParser: java.lang.String WEAVER_CLASS_ATTRIBUTE> = "weaver-class";

        return;
    }
}
