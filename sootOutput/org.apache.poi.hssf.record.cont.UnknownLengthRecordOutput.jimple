final class org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput extends java.lang.Object implements org.apache.poi.util.LittleEndianOutput
{
    private static final int MAX_DATA_SIZE;
    private final org.apache.poi.util.LittleEndianOutput _originalOut;
    private final org.apache.poi.util.LittleEndianOutput _dataSizeOutput;
    private final byte[] _byteBuffer;
    private org.apache.poi.util.LittleEndianOutput _out;
    private int _size;

    public void <init>(org.apache.poi.util.LittleEndianOutput, int)
    {
        byte[] $r2, $r4;
        org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput r0;
        org.apache.poi.util.LittleEndianByteArrayOutputStream $r3;
        org.apache.poi.util.DelayableLittleEndianOutput r5;
        org.apache.poi.util.LittleEndianOutput r1, $r6;
        int i0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput;

        r1 := @parameter0: org.apache.poi.util.LittleEndianOutput;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: org.apache.poi.util.LittleEndianOutput _originalOut> = r1;

        interfaceinvoke r1.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>(i0);

        $z0 = r1 instanceof org.apache.poi.util.DelayableLittleEndianOutput;

        if $z0 == 0 goto label1;

        r5 = (org.apache.poi.util.DelayableLittleEndianOutput) r1;

        $r6 = interfaceinvoke r5.<org.apache.poi.util.DelayableLittleEndianOutput: org.apache.poi.util.LittleEndianOutput createDelayedOutput(int)>(2);

        r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: org.apache.poi.util.LittleEndianOutput _dataSizeOutput> = $r6;

        r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: byte[] _byteBuffer> = null;

        r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: org.apache.poi.util.LittleEndianOutput _out> = r1;

        goto label2;

     label1:
        r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: org.apache.poi.util.LittleEndianOutput _dataSizeOutput> = r1;

        $r2 = newarray (byte)[8224];

        r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: byte[] _byteBuffer> = $r2;

        $r3 = new org.apache.poi.util.LittleEndianByteArrayOutputStream;

        $r4 = r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: byte[] _byteBuffer>;

        specialinvoke $r3.<org.apache.poi.util.LittleEndianByteArrayOutputStream: void <init>(byte[],int)>($r4, 0);

        r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: org.apache.poi.util.LittleEndianOutput _out> = $r3;

     label2:
        return;
    }

    public int getTotalSize()
    {
        int $i0, $i1;
        org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput r0;

        r0 := @this: org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput;

        $i0 = r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: int _size>;

        $i1 = 4 + $i0;

        return $i1;
    }

    public int getAvailableSpace()
    {
        java.lang.IllegalStateException $r2;
        org.apache.poi.util.LittleEndianOutput $r1;
        org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput r0;
        int $i0, $i1;

        r0 := @this: org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput;

        $r1 = r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: org.apache.poi.util.LittleEndianOutput _out>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Record already terminated");

        throw $r2;

     label1:
        $i0 = r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: int _size>;

        $i1 = 8224 - $i0;

        return $i1;
    }

    public void terminate()
    {
        byte[] $r3, $r4;
        java.lang.IllegalStateException $r6;
        org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput r0;
        org.apache.poi.util.LittleEndianOutput $r1, $r2, $r5;
        int $i0, $i1;

        r0 := @this: org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput;

        $r1 = r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: org.apache.poi.util.LittleEndianOutput _out>;

        if $r1 != null goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Record already terminated");

        throw $r6;

     label1:
        $r2 = r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: org.apache.poi.util.LittleEndianOutput _dataSizeOutput>;

        $i0 = r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: int _size>;

        interfaceinvoke $r2.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i0);

        $r3 = r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: byte[] _byteBuffer>;

        if $r3 == null goto label2;

        $r5 = r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: org.apache.poi.util.LittleEndianOutput _originalOut>;

        $r4 = r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: byte[] _byteBuffer>;

        $i1 = r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: int _size>;

        interfaceinvoke $r5.<org.apache.poi.util.LittleEndianOutput: void write(byte[],int,int)>($r4, 0, $i1);

        r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: org.apache.poi.util.LittleEndianOutput _out> = null;

        return;

     label2:
        r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: org.apache.poi.util.LittleEndianOutput _out> = null;

        return;
    }

    public void write(byte[])
    {
        byte[] r1;
        org.apache.poi.util.LittleEndianOutput $r2;
        org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput;

        r1 := @parameter0: byte[];

        $r2 = r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: org.apache.poi.util.LittleEndianOutput _out>;

        interfaceinvoke $r2.<org.apache.poi.util.LittleEndianOutput: void write(byte[])>(r1);

        $i1 = r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: int _size>;

        $i0 = lengthof r1;

        $i2 = $i1 + $i0;

        r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: int _size> = $i2;

        return;
    }

    public void write(byte[], int, int)
    {
        byte[] r1;
        org.apache.poi.util.LittleEndianOutput $r2;
        org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput r0;
        int i0, i1, $i2, $i3;

        r0 := @this: org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: org.apache.poi.util.LittleEndianOutput _out>;

        interfaceinvoke $r2.<org.apache.poi.util.LittleEndianOutput: void write(byte[],int,int)>(r1, i0, i1);

        $i2 = r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: int _size>;

        $i3 = $i2 + i1;

        r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: int _size> = $i3;

        return;
    }

    public void writeByte(int)
    {
        org.apache.poi.util.LittleEndianOutput $r1;
        org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput r0;
        int i0, $i1, $i2;

        r0 := @this: org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: org.apache.poi.util.LittleEndianOutput _out>;

        interfaceinvoke $r1.<org.apache.poi.util.LittleEndianOutput: void writeByte(int)>(i0);

        $i1 = r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: int _size>;

        $i2 = $i1 + 1;

        r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: int _size> = $i2;

        return;
    }

    public void writeDouble(double)
    {
        org.apache.poi.util.LittleEndianOutput $r1;
        org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput r0;
        int $i0, $i1;
        double d0;

        r0 := @this: org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput;

        d0 := @parameter0: double;

        $r1 = r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: org.apache.poi.util.LittleEndianOutput _out>;

        interfaceinvoke $r1.<org.apache.poi.util.LittleEndianOutput: void writeDouble(double)>(d0);

        $i0 = r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: int _size>;

        $i1 = $i0 + 8;

        r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: int _size> = $i1;

        return;
    }

    public void writeInt(int)
    {
        org.apache.poi.util.LittleEndianOutput $r1;
        org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput r0;
        int i0, $i1, $i2;

        r0 := @this: org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: org.apache.poi.util.LittleEndianOutput _out>;

        interfaceinvoke $r1.<org.apache.poi.util.LittleEndianOutput: void writeInt(int)>(i0);

        $i1 = r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: int _size>;

        $i2 = $i1 + 4;

        r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: int _size> = $i2;

        return;
    }

    public void writeLong(long)
    {
        org.apache.poi.util.LittleEndianOutput $r1;
        org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput r0;
        int $i1, $i2;
        long l0;

        r0 := @this: org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: org.apache.poi.util.LittleEndianOutput _out>;

        interfaceinvoke $r1.<org.apache.poi.util.LittleEndianOutput: void writeLong(long)>(l0);

        $i1 = r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: int _size>;

        $i2 = $i1 + 8;

        r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: int _size> = $i2;

        return;
    }

    public void writeShort(int)
    {
        org.apache.poi.util.LittleEndianOutput $r1;
        org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput r0;
        int i0, $i1, $i2;

        r0 := @this: org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: org.apache.poi.util.LittleEndianOutput _out>;

        interfaceinvoke $r1.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>(i0);

        $i1 = r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: int _size>;

        $i2 = $i1 + 2;

        r0.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: int _size> = $i2;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: int MAX_DATA_SIZE> = 8224;

        return;
    }
}
