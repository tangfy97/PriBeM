public class org.mortbay.util.ajax.JSON extends java.lang.Object
{
    private static org.mortbay.util.ajax.JSON __default;
    private java.util.Map _convertors;
    private int _stringBufferSize;
    static java.lang.Class class$org$mortbay$util$ajax$JSON$Convertible;
    static java.lang.Class class$java$lang$Object;
    static java.lang.Class class$org$mortbay$util$ajax$JSON;

    public void <init>()
    {
        java.util.HashMap $r1;
        org.mortbay.util.ajax.JSON r0;
        java.util.Map $r2;

        r0 := @this: org.mortbay.util.ajax.JSON;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r2 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r1);

        r0.<org.mortbay.util.ajax.JSON: java.util.Map _convertors> = $r2;

        r0.<org.mortbay.util.ajax.JSON: int _stringBufferSize> = 256;

        return;
    }

    public int getStringBufferSize()
    {
        int $i0;
        org.mortbay.util.ajax.JSON r0;

        r0 := @this: org.mortbay.util.ajax.JSON;

        $i0 = r0.<org.mortbay.util.ajax.JSON: int _stringBufferSize>;

        return $i0;
    }

    public void setStringBufferSize(int)
    {
        int i0;
        org.mortbay.util.ajax.JSON r0;

        r0 := @this: org.mortbay.util.ajax.JSON;

        i0 := @parameter0: int;

        r0.<org.mortbay.util.ajax.JSON: int _stringBufferSize> = i0;

        return;
    }

    public static void registerConvertor(java.lang.Class, org.mortbay.util.ajax.JSON$Convertor)
    {
        java.lang.Class r0;
        org.mortbay.util.ajax.JSON$Convertor r1;
        org.mortbay.util.ajax.JSON $r2;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: org.mortbay.util.ajax.JSON$Convertor;

        $r2 = <org.mortbay.util.ajax.JSON: org.mortbay.util.ajax.JSON __default>;

        virtualinvoke $r2.<org.mortbay.util.ajax.JSON: void addConvertor(java.lang.Class,org.mortbay.util.ajax.JSON$Convertor)>(r0, r1);

        return;
    }

    public static org.mortbay.util.ajax.JSON getDefault()
    {
        org.mortbay.util.ajax.JSON $r0;

        $r0 = <org.mortbay.util.ajax.JSON: org.mortbay.util.ajax.JSON __default>;

        return $r0;
    }

    public static void setDefault(org.mortbay.util.ajax.JSON)
    {
        org.mortbay.util.ajax.JSON r0;

        r0 := @parameter0: org.mortbay.util.ajax.JSON;

        <org.mortbay.util.ajax.JSON: org.mortbay.util.ajax.JSON __default> = r0;

        return;
    }

    public static java.lang.String toString(java.lang.Object)
    {
        java.lang.Throwable $r5;
        java.lang.StringBuffer $r0;
        int $i0;
        java.lang.Object r2;
        java.lang.String $r4;
        org.mortbay.util.ajax.JSON $r1, $r3;

        r2 := @parameter0: java.lang.Object;

        $r0 = new java.lang.StringBuffer;

        $r1 = <org.mortbay.util.ajax.JSON: org.mortbay.util.ajax.JSON __default>;

        $i0 = virtualinvoke $r1.<org.mortbay.util.ajax.JSON: int getStringBufferSize()>();

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>($i0);

        entermonitor $r0;

     label1:
        $r3 = <org.mortbay.util.ajax.JSON: org.mortbay.util.ajax.JSON __default>;

        virtualinvoke $r3.<org.mortbay.util.ajax.JSON: void append(java.lang.StringBuffer,java.lang.Object)>($r0, r2);

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        exitmonitor $r0;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static java.lang.String toString(java.util.Map)
    {
        java.lang.Throwable $r5;
        java.lang.StringBuffer $r0;
        java.util.Map r2;
        int $i0;
        java.lang.String $r4;
        org.mortbay.util.ajax.JSON $r1, $r3;

        r2 := @parameter0: java.util.Map;

        $r0 = new java.lang.StringBuffer;

        $r1 = <org.mortbay.util.ajax.JSON: org.mortbay.util.ajax.JSON __default>;

        $i0 = virtualinvoke $r1.<org.mortbay.util.ajax.JSON: int getStringBufferSize()>();

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>($i0);

        entermonitor $r0;

     label1:
        $r3 = <org.mortbay.util.ajax.JSON: org.mortbay.util.ajax.JSON __default>;

        virtualinvoke $r3.<org.mortbay.util.ajax.JSON: void appendMap(java.lang.StringBuffer,java.util.Map)>($r0, r2);

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        exitmonitor $r0;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static java.lang.String toString(java.lang.Object[])
    {
        java.lang.Throwable $r5;
        java.lang.Object[] r2;
        java.lang.StringBuffer $r0;
        int $i0;
        java.lang.String $r4;
        org.mortbay.util.ajax.JSON $r1, $r3;

        r2 := @parameter0: java.lang.Object[];

        $r0 = new java.lang.StringBuffer;

        $r1 = <org.mortbay.util.ajax.JSON: org.mortbay.util.ajax.JSON __default>;

        $i0 = virtualinvoke $r1.<org.mortbay.util.ajax.JSON: int getStringBufferSize()>();

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>($i0);

        entermonitor $r0;

     label1:
        $r3 = <org.mortbay.util.ajax.JSON: org.mortbay.util.ajax.JSON __default>;

        virtualinvoke $r3.<org.mortbay.util.ajax.JSON: void appendArray(java.lang.StringBuffer,java.lang.Object)>($r0, r2);

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        exitmonitor $r0;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static java.lang.Object parse(java.lang.String)
    {
        org.mortbay.util.ajax.JSON$StringSource $r0;
        java.lang.Object $r3;
        java.lang.String r1;
        org.mortbay.util.ajax.JSON $r2;

        r1 := @parameter0: java.lang.String;

        $r2 = <org.mortbay.util.ajax.JSON: org.mortbay.util.ajax.JSON __default>;

        $r0 = new org.mortbay.util.ajax.JSON$StringSource;

        specialinvoke $r0.<org.mortbay.util.ajax.JSON$StringSource: void <init>(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<org.mortbay.util.ajax.JSON: java.lang.Object parse(org.mortbay.util.ajax.JSON$Source,boolean)>($r0, 0);

        return $r3;
    }

    public static java.lang.Object parse(java.lang.String, boolean)
    {
        org.mortbay.util.ajax.JSON$StringSource $r0;
        java.lang.Object $r3;
        java.lang.String r1;
        org.mortbay.util.ajax.JSON $r2;
        boolean z0;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = <org.mortbay.util.ajax.JSON: org.mortbay.util.ajax.JSON __default>;

        $r0 = new org.mortbay.util.ajax.JSON$StringSource;

        specialinvoke $r0.<org.mortbay.util.ajax.JSON$StringSource: void <init>(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<org.mortbay.util.ajax.JSON: java.lang.Object parse(org.mortbay.util.ajax.JSON$Source,boolean)>($r0, z0);

        return $r3;
    }

    public static java.lang.Object parse(java.io.Reader) throws java.io.IOException
    {
        org.mortbay.util.ajax.JSON$ReaderSource $r0;
        java.lang.Object $r3;
        java.io.Reader r1;
        org.mortbay.util.ajax.JSON $r2;

        r1 := @parameter0: java.io.Reader;

        $r2 = <org.mortbay.util.ajax.JSON: org.mortbay.util.ajax.JSON __default>;

        $r0 = new org.mortbay.util.ajax.JSON$ReaderSource;

        specialinvoke $r0.<org.mortbay.util.ajax.JSON$ReaderSource: void <init>(java.io.Reader)>(r1);

        $r3 = virtualinvoke $r2.<org.mortbay.util.ajax.JSON: java.lang.Object parse(org.mortbay.util.ajax.JSON$Source,boolean)>($r0, 0);

        return $r3;
    }

    public static java.lang.Object parse(java.io.Reader, boolean) throws java.io.IOException
    {
        org.mortbay.util.ajax.JSON$ReaderSource $r0;
        java.lang.Object $r3;
        java.io.Reader r1;
        org.mortbay.util.ajax.JSON $r2;
        boolean z0;

        r1 := @parameter0: java.io.Reader;

        z0 := @parameter1: boolean;

        $r2 = <org.mortbay.util.ajax.JSON: org.mortbay.util.ajax.JSON __default>;

        $r0 = new org.mortbay.util.ajax.JSON$ReaderSource;

        specialinvoke $r0.<org.mortbay.util.ajax.JSON$ReaderSource: void <init>(java.io.Reader)>(r1);

        $r3 = virtualinvoke $r2.<org.mortbay.util.ajax.JSON: java.lang.Object parse(org.mortbay.util.ajax.JSON$Source,boolean)>($r0, z0);

        return $r3;
    }

    public static java.lang.Object parse(java.io.InputStream) throws java.io.IOException
    {
        org.mortbay.util.ajax.JSON$StringSource $r0;
        java.lang.Object $r4;
        java.lang.String $r3;
        java.io.InputStream r1;
        org.mortbay.util.ajax.JSON $r2;

        r1 := @parameter0: java.io.InputStream;

        $r2 = <org.mortbay.util.ajax.JSON: org.mortbay.util.ajax.JSON __default>;

        $r0 = new org.mortbay.util.ajax.JSON$StringSource;

        $r3 = staticinvoke <org.mortbay.util.IO: java.lang.String toString(java.io.InputStream)>(r1);

        specialinvoke $r0.<org.mortbay.util.ajax.JSON$StringSource: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke $r2.<org.mortbay.util.ajax.JSON: java.lang.Object parse(org.mortbay.util.ajax.JSON$Source,boolean)>($r0, 0);

        return $r4;
    }

    public static java.lang.Object parse(java.io.InputStream, boolean) throws java.io.IOException
    {
        org.mortbay.util.ajax.JSON$StringSource $r0;
        java.lang.Object $r4;
        java.lang.String $r3;
        java.io.InputStream r1;
        org.mortbay.util.ajax.JSON $r2;
        boolean z0;

        r1 := @parameter0: java.io.InputStream;

        z0 := @parameter1: boolean;

        $r2 = <org.mortbay.util.ajax.JSON: org.mortbay.util.ajax.JSON __default>;

        $r0 = new org.mortbay.util.ajax.JSON$StringSource;

        $r3 = staticinvoke <org.mortbay.util.IO: java.lang.String toString(java.io.InputStream)>(r1);

        specialinvoke $r0.<org.mortbay.util.ajax.JSON$StringSource: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke $r2.<org.mortbay.util.ajax.JSON: java.lang.Object parse(org.mortbay.util.ajax.JSON$Source,boolean)>($r0, z0);

        return $r4;
    }

    public java.lang.String toJSON(java.lang.Object)
    {
        java.lang.Throwable $r4;
        java.lang.StringBuffer $r0;
        int $i0;
        java.lang.Object r2;
        java.lang.String $r3;
        org.mortbay.util.ajax.JSON r1;

        r1 := @this: org.mortbay.util.ajax.JSON;

        r2 := @parameter0: java.lang.Object;

        $r0 = new java.lang.StringBuffer;

        $i0 = virtualinvoke r1.<org.mortbay.util.ajax.JSON: int getStringBufferSize()>();

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>($i0);

        entermonitor $r0;

     label1:
        virtualinvoke r1.<org.mortbay.util.ajax.JSON: void append(java.lang.StringBuffer,java.lang.Object)>($r0, r2);

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        exitmonitor $r0;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.Object fromJSON(java.lang.String)
    {
        org.mortbay.util.ajax.JSON$StringSource $r0;
        java.lang.Object $r3;
        java.lang.String r1;
        org.mortbay.util.ajax.JSON r2;

        r2 := @this: org.mortbay.util.ajax.JSON;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.mortbay.util.ajax.JSON$StringSource;

        specialinvoke $r0.<org.mortbay.util.ajax.JSON$StringSource: void <init>(java.lang.String)>(r1);

        $r3 = virtualinvoke r2.<org.mortbay.util.ajax.JSON: java.lang.Object parse(org.mortbay.util.ajax.JSON$Source)>($r0);

        return $r3;
    }

    public void append(java.lang.StringBuffer, java.lang.Object)
    {
        org.mortbay.util.ajax.JSON r2;
        java.lang.StringBuffer r5;
        java.util.Map $r11;
        java.lang.Boolean $r8;
        java.lang.String $r6, $r7;
        java.lang.Number $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.mortbay.util.ajax.JSON$Convertible $r13;
        org.mortbay.util.ajax.JSON$Convertor $r4;
        java.util.Collection $r10;
        org.mortbay.util.ajax.JSON$Generator $r12;
        java.lang.Object r0;
        java.lang.Class $r1, $r3;

        r2 := @this: org.mortbay.util.ajax.JSON;

        r5 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: java.lang.Object;

        if r0 != null goto label01;

        virtualinvoke r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("null");

        goto label11;

     label01:
        $z0 = r0 instanceof org.mortbay.util.ajax.JSON$Convertible;

        if $z0 == 0 goto label02;

        $r13 = (org.mortbay.util.ajax.JSON$Convertible) r0;

        virtualinvoke r2.<org.mortbay.util.ajax.JSON: void appendJSON(java.lang.StringBuffer,org.mortbay.util.ajax.JSON$Convertible)>(r5, $r13);

        goto label11;

     label02:
        $z1 = r0 instanceof org.mortbay.util.ajax.JSON$Generator;

        if $z1 == 0 goto label03;

        $r12 = (org.mortbay.util.ajax.JSON$Generator) r0;

        virtualinvoke r2.<org.mortbay.util.ajax.JSON: void appendJSON(java.lang.StringBuffer,org.mortbay.util.ajax.JSON$Generator)>(r5, $r12);

        goto label11;

     label03:
        $z2 = r0 instanceof java.util.Map;

        if $z2 == 0 goto label04;

        $r11 = (java.util.Map) r0;

        virtualinvoke r2.<org.mortbay.util.ajax.JSON: void appendMap(java.lang.StringBuffer,java.util.Map)>(r5, $r11);

        goto label11;

     label04:
        $z3 = r0 instanceof java.util.Collection;

        if $z3 == 0 goto label05;

        $r10 = (java.util.Collection) r0;

        virtualinvoke r2.<org.mortbay.util.ajax.JSON: void appendArray(java.lang.StringBuffer,java.util.Collection)>(r5, $r10);

        goto label11;

     label05:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z4 = virtualinvoke $r1.<java.lang.Class: boolean isArray()>();

        if $z4 == 0 goto label06;

        virtualinvoke r2.<org.mortbay.util.ajax.JSON: void appendArray(java.lang.StringBuffer,java.lang.Object)>(r5, r0);

        goto label11;

     label06:
        $z5 = r0 instanceof java.lang.Number;

        if $z5 == 0 goto label07;

        $r9 = (java.lang.Number) r0;

        virtualinvoke r2.<org.mortbay.util.ajax.JSON: void appendNumber(java.lang.StringBuffer,java.lang.Number)>(r5, $r9);

        goto label11;

     label07:
        $z6 = r0 instanceof java.lang.Boolean;

        if $z6 == 0 goto label08;

        $r8 = (java.lang.Boolean) r0;

        virtualinvoke r2.<org.mortbay.util.ajax.JSON: void appendBoolean(java.lang.StringBuffer,java.lang.Boolean)>(r5, $r8);

        goto label11;

     label08:
        $z7 = r0 instanceof java.lang.String;

        if $z7 == 0 goto label09;

        $r7 = (java.lang.String) r0;

        virtualinvoke r2.<org.mortbay.util.ajax.JSON: void appendString(java.lang.StringBuffer,java.lang.String)>(r5, $r7);

        goto label11;

     label09:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r2.<org.mortbay.util.ajax.JSON: org.mortbay.util.ajax.JSON$Convertor getConvertor(java.lang.Class)>($r3);

        if $r4 == null goto label10;

        virtualinvoke r2.<org.mortbay.util.ajax.JSON: void appendJSON(java.lang.StringBuffer,org.mortbay.util.ajax.JSON$Convertor,java.lang.Object)>(r5, $r4, r0);

        goto label11;

     label10:
        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r2.<org.mortbay.util.ajax.JSON: void appendString(java.lang.StringBuffer,java.lang.String)>(r5, $r6);

     label11:
        return;
    }

    public void appendNull(java.lang.StringBuffer)
    {
        java.lang.StringBuffer r0;
        org.mortbay.util.ajax.JSON r1;

        r1 := @this: org.mortbay.util.ajax.JSON;

        r0 := @parameter0: java.lang.StringBuffer;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("null");

        return;
    }

    public void appendJSON(java.lang.StringBuffer, org.mortbay.util.ajax.JSON$Convertor, java.lang.Object)
    {
        org.mortbay.util.ajax.JSON$Convertor r3;
        java.lang.StringBuffer r1;
        java.lang.Object r4;
        org.mortbay.util.ajax.JSON r0;
        org.mortbay.util.ajax.JSON$1 $r2;

        r0 := @this: org.mortbay.util.ajax.JSON;

        r1 := @parameter0: java.lang.StringBuffer;

        r3 := @parameter1: org.mortbay.util.ajax.JSON$Convertor;

        r4 := @parameter2: java.lang.Object;

        $r2 = new org.mortbay.util.ajax.JSON$1;

        specialinvoke $r2.<org.mortbay.util.ajax.JSON$1: void <init>(org.mortbay.util.ajax.JSON,org.mortbay.util.ajax.JSON$Convertor,java.lang.Object)>(r0, r3, r4);

        virtualinvoke r0.<org.mortbay.util.ajax.JSON: void appendJSON(java.lang.StringBuffer,org.mortbay.util.ajax.JSON$Convertible)>(r1, $r2);

        return;
    }

    public void appendJSON(java.lang.StringBuffer, org.mortbay.util.ajax.JSON$Convertible)
    {
        org.mortbay.util.ajax.JSON$Convertible r1;
        char $c0, $c1;
        org.mortbay.util.ajax.JSON r3;
        java.lang.StringBuffer r4;
        int $i2;
        char[] $r0;
        org.mortbay.util.ajax.JSON$2 $r5;

        r3 := @this: org.mortbay.util.ajax.JSON;

        r4 := @parameter0: java.lang.StringBuffer;

        r1 := @parameter1: org.mortbay.util.ajax.JSON$Convertible;

        $r0 = newarray (char)[1];

        $r0[0] = 123;

        $r5 = new org.mortbay.util.ajax.JSON$2;

        specialinvoke $r5.<org.mortbay.util.ajax.JSON$2: void <init>(org.mortbay.util.ajax.JSON,char[],java.lang.StringBuffer)>(r3, $r0, r4);

        interfaceinvoke r1.<org.mortbay.util.ajax.JSON$Convertible: void toJSON(org.mortbay.util.ajax.JSON$Output)>($r5);

        $c0 = $r0[0];

        $i2 = (int) $c0;

        if $i2 != 123 goto label1;

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("{}");

        goto label2;

     label1:
        $c1 = $r0[0];

        if $c1 == 0 goto label2;

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}");

     label2:
        return;
    }

    public void appendJSON(java.lang.StringBuffer, org.mortbay.util.ajax.JSON$Generator)
    {
        org.mortbay.util.ajax.JSON$Generator r0;
        java.lang.StringBuffer r1;
        org.mortbay.util.ajax.JSON r2;

        r2 := @this: org.mortbay.util.ajax.JSON;

        r1 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: org.mortbay.util.ajax.JSON$Generator;

        interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Generator: void addJSON(java.lang.StringBuffer)>(r1);

        return;
    }

    public void appendMap(java.lang.StringBuffer, java.util.Map)
    {
        java.util.Map$Entry r5;
        java.util.Iterator $r3;
        java.util.Set $r2;
        org.mortbay.util.ajax.JSON r8;
        java.lang.StringBuffer r1;
        java.util.Map r0;
        java.lang.Object $r4, $r6, $r9;
        java.lang.String $r7;
        boolean $z0, $z1;

        r8 := @this: org.mortbay.util.ajax.JSON;

        r1 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: java.util.Map;

        if r0 != null goto label1;

        virtualinvoke r8.<org.mortbay.util.ajax.JSON: void appendNull(java.lang.StringBuffer)>(r1);

        return;

     label1:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(123);

        $r2 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r6 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <org.mortbay.util.QuotedStringTokenizer: void quote(java.lang.StringBuffer,java.lang.String)>(r1, $r7);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        $r9 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r8.<org.mortbay.util.ajax.JSON: void append(java.lang.StringBuffer,java.lang.Object)>(r1, $r9);

        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

     label3:
        goto label2;

     label4:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        return;
    }

    public void appendArray(java.lang.StringBuffer, java.util.Collection)
    {
        java.util.Iterator $r2;
        java.lang.StringBuffer r1;
        java.util.Collection r0;
        java.lang.Object $r4;
        boolean $z0, z1;
        org.mortbay.util.ajax.JSON r3;

        r3 := @this: org.mortbay.util.ajax.JSON;

        r1 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: java.util.Collection;

        if r0 != null goto label1;

        virtualinvoke r3.<org.mortbay.util.ajax.JSON: void appendNull(java.lang.StringBuffer)>(r1);

        return;

     label1:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(91);

        $r2 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

        z1 = 1;

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        if z1 != 0 goto label3;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

     label3:
        z1 = 0;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r3.<org.mortbay.util.ajax.JSON: void append(java.lang.StringBuffer,java.lang.Object)>(r1, $r4);

        goto label2;

     label4:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93);

        return;
    }

    public void appendArray(java.lang.StringBuffer, java.lang.Object)
    {
        java.lang.StringBuffer r1;
        int $i0, i1;
        java.lang.Object r0, $r3;
        org.mortbay.util.ajax.JSON r2;

        r2 := @this: org.mortbay.util.ajax.JSON;

        r1 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        virtualinvoke r2.<org.mortbay.util.ajax.JSON: void appendNull(java.lang.StringBuffer)>(r1);

        return;

     label1:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(91);

        $i0 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(r0);

        i1 = 0;

     label2:
        if i1 >= $i0 goto label4;

        if i1 == 0 goto label3;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

     label3:
        $r3 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(r0, i1);

        virtualinvoke r2.<org.mortbay.util.ajax.JSON: void append(java.lang.StringBuffer,java.lang.Object)>(r1, $r3);

        i1 = i1 + 1;

        goto label2;

     label4:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93);

        return;
    }

    public void appendBoolean(java.lang.StringBuffer, java.lang.Boolean)
    {
        java.lang.StringBuffer r1;
        java.lang.Boolean r0;
        java.lang.String $r3;
        boolean $z0;
        org.mortbay.util.ajax.JSON r2;

        r2 := @this: org.mortbay.util.ajax.JSON;

        r1 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: java.lang.Boolean;

        if r0 != null goto label1;

        virtualinvoke r2.<org.mortbay.util.ajax.JSON: void appendNull(java.lang.StringBuffer)>(r1);

        return;

     label1:
        $z0 = virtualinvoke r0.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $r3 = "true";

        goto label3;

     label2:
        $r3 = "false";

     label3:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        return;
    }

    public void appendNumber(java.lang.StringBuffer, java.lang.Number)
    {
        java.lang.Number r0;
        java.lang.StringBuffer r1;
        org.mortbay.util.ajax.JSON r2;

        r2 := @this: org.mortbay.util.ajax.JSON;

        r1 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: java.lang.Number;

        if r0 != null goto label1;

        virtualinvoke r2.<org.mortbay.util.ajax.JSON: void appendNull(java.lang.StringBuffer)>(r1);

        return;

     label1:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        return;
    }

    public void appendString(java.lang.StringBuffer, java.lang.String)
    {
        java.lang.String r0;
        java.lang.StringBuffer r1;
        org.mortbay.util.ajax.JSON r2;

        r2 := @this: org.mortbay.util.ajax.JSON;

        r1 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        virtualinvoke r2.<org.mortbay.util.ajax.JSON: void appendNull(java.lang.StringBuffer)>(r1);

        return;

     label1:
        staticinvoke <org.mortbay.util.QuotedStringTokenizer: void quote(java.lang.StringBuffer,java.lang.String)>(r1, r0);

        return;
    }

    protected java.lang.String toString(char[], int, int)
    {
        int i0, i1;
        char[] r1;
        java.lang.String $r0;
        org.mortbay.util.ajax.JSON r2;

        r2 := @this: org.mortbay.util.ajax.JSON;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(char[],int,int)>(r1, i0, i1);

        return $r0;
    }

    protected java.util.Map newMap()
    {
        java.util.HashMap $r0;
        org.mortbay.util.ajax.JSON r1;

        r1 := @this: org.mortbay.util.ajax.JSON;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        return $r0;
    }

    protected java.lang.Object[] newArray(int)
    {
        int i0;
        java.lang.Object[] $r0;
        org.mortbay.util.ajax.JSON r1;

        r1 := @this: org.mortbay.util.ajax.JSON;

        i0 := @parameter0: int;

        $r0 = newarray (java.lang.Object)[i0];

        return $r0;
    }

    protected org.mortbay.util.ajax.JSON contextForArray()
    {
        org.mortbay.util.ajax.JSON r0;

        r0 := @this: org.mortbay.util.ajax.JSON;

        return r0;
    }

    protected org.mortbay.util.ajax.JSON contextFor(java.lang.String)
    {
        java.lang.String r1;
        org.mortbay.util.ajax.JSON r0;

        r0 := @this: org.mortbay.util.ajax.JSON;

        r1 := @parameter0: java.lang.String;

        return r0;
    }

    protected java.lang.Object convertTo(java.lang.Class, java.util.Map)
    {
        org.mortbay.util.ajax.JSON$Convertible r10;
        org.mortbay.util.ajax.JSON$Convertor $r2;
        java.lang.RuntimeException $r8;
        java.lang.Exception $r7;
        org.mortbay.util.ajax.JSON r1;
        java.util.Map r3;
        java.lang.Class r0, $r5, $r9;
        java.lang.Object $r4, $r6;
        boolean $z0;

        r1 := @this: org.mortbay.util.ajax.JSON;

        r0 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.util.Map;

        if r0 == null goto label6;

        $r5 = <org.mortbay.util.ajax.JSON: java.lang.Class class$org$mortbay$util$ajax$JSON$Convertible>;

        if $r5 != null goto label1;

        $r9 = staticinvoke <org.mortbay.util.ajax.JSON: java.lang.Class class$(java.lang.String)>("org.mortbay.util.ajax.JSON$Convertible");

        <org.mortbay.util.ajax.JSON: java.lang.Class class$org$mortbay$util$ajax$JSON$Convertible> = $r9;

        goto label2;

     label1:
        $r9 = <org.mortbay.util.ajax.JSON: java.lang.Class class$org$mortbay$util$ajax$JSON$Convertible>;

     label2:
        $z0 = virtualinvoke $r9.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 == 0 goto label6;

     label3:
        $r6 = virtualinvoke r0.<java.lang.Class: java.lang.Object newInstance()>();

        r10 = (org.mortbay.util.ajax.JSON$Convertible) $r6;

        interfaceinvoke r10.<org.mortbay.util.ajax.JSON$Convertible: void fromJSON(java.util.Map)>(r3);

     label4:
        return r10;

     label5:
        $r7 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

     label6:
        $r2 = virtualinvoke r1.<org.mortbay.util.ajax.JSON: org.mortbay.util.ajax.JSON$Convertor getConvertor(java.lang.Class)>(r0);

        if $r2 == null goto label7;

        $r4 = interfaceinvoke $r2.<org.mortbay.util.ajax.JSON$Convertor: java.lang.Object fromJSON(java.util.Map)>(r3);

        return $r4;

     label7:
        return r3;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public void addConvertor(java.lang.Class, org.mortbay.util.ajax.JSON$Convertor)
    {
        org.mortbay.util.ajax.JSON$Convertor r4;
        java.util.Map $r2;
        java.lang.Class r1;
        java.lang.String $r3;
        org.mortbay.util.ajax.JSON r0;

        r0 := @this: org.mortbay.util.ajax.JSON;

        r1 := @parameter0: java.lang.Class;

        r4 := @parameter1: org.mortbay.util.ajax.JSON$Convertor;

        $r2 = r0.<org.mortbay.util.ajax.JSON: java.util.Map _convertors>;

        $r3 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r4);

        return;
    }

    protected org.mortbay.util.ajax.JSON$Convertor getConvertor(java.lang.Class)
    {
        org.mortbay.util.ajax.JSON r1, $r16, $r17;
        java.util.Map $r2, $r8, $r12;
        int $i0, $i1, i2;
        java.lang.String $r3, $r9, $r13;
        org.mortbay.util.ajax.JSON$Convertor r19;
        java.lang.Class[] $r6;
        java.lang.Class r0, $r5, $r7, $r11, $r15, r18, $r20;
        java.lang.Object $r4, $r10, $r14;

        r1 := @this: org.mortbay.util.ajax.JSON;

        r0 := @parameter0: java.lang.Class;

        r18 = r0;

        $r2 = r1.<org.mortbay.util.ajax.JSON: java.util.Map _convertors>;

        $r3 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r19 = (org.mortbay.util.ajax.JSON$Convertor) $r4;

        if r19 != null goto label1;

        $r16 = <org.mortbay.util.ajax.JSON: org.mortbay.util.ajax.JSON __default>;

        if r1 == $r16 goto label1;

        $r17 = <org.mortbay.util.ajax.JSON: org.mortbay.util.ajax.JSON __default>;

        r19 = virtualinvoke $r17.<org.mortbay.util.ajax.JSON: org.mortbay.util.ajax.JSON$Convertor getConvertor(java.lang.Class)>(r0);

     label1:
        if r19 != null goto label7;

        if r18 == null goto label7;

        $r15 = r18;

        $r5 = <org.mortbay.util.ajax.JSON: java.lang.Class class$java$lang$Object>;

        if $r5 != null goto label2;

        $r20 = staticinvoke <org.mortbay.util.ajax.JSON: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.mortbay.util.ajax.JSON: java.lang.Class class$java$lang$Object> = $r20;

        goto label3;

     label2:
        $r20 = <org.mortbay.util.ajax.JSON: java.lang.Class class$java$lang$Object>;

     label3:
        if $r15 == $r20 goto label7;

        $r6 = virtualinvoke r18.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        i2 = 0;

     label4:
        if r19 != null goto label5;

        if $r6 == null goto label5;

        $i0 = lengthof $r6;

        if i2 >= $i0 goto label5;

        $r12 = r1.<org.mortbay.util.ajax.JSON: java.util.Map _convertors>;

        $i1 = i2;

        i2 = i2 + 1;

        $r11 = $r6[$i1];

        $r13 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        $r14 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13);

        r19 = (org.mortbay.util.ajax.JSON$Convertor) $r14;

        goto label4;

     label5:
        if r19 != null goto label6;

        $r7 = virtualinvoke r18.<java.lang.Class: java.lang.Class getSuperclass()>();

        r18 = $r7;

        $r8 = r1.<org.mortbay.util.ajax.JSON: java.util.Map _convertors>;

        $r9 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r10 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        r19 = (org.mortbay.util.ajax.JSON$Convertor) $r10;

     label6:
        goto label1;

     label7:
        return r19;
    }

    public void addConvertorFor(java.lang.String, org.mortbay.util.ajax.JSON$Convertor)
    {
        org.mortbay.util.ajax.JSON$Convertor r2;
        java.util.Map $r3;
        java.lang.String r1;
        org.mortbay.util.ajax.JSON r0;

        r0 := @this: org.mortbay.util.ajax.JSON;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.mortbay.util.ajax.JSON$Convertor;

        $r3 = r0.<org.mortbay.util.ajax.JSON: java.util.Map _convertors>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public org.mortbay.util.ajax.JSON$Convertor getConvertorFor(java.lang.String)
    {
        org.mortbay.util.ajax.JSON$Convertor r6;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r0;
        org.mortbay.util.ajax.JSON r1, $r4, $r5;

        r1 := @this: org.mortbay.util.ajax.JSON;

        r0 := @parameter0: java.lang.String;

        $r2 = r1.<org.mortbay.util.ajax.JSON: java.util.Map _convertors>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r6 = (org.mortbay.util.ajax.JSON$Convertor) $r3;

        if r6 != null goto label1;

        $r4 = <org.mortbay.util.ajax.JSON: org.mortbay.util.ajax.JSON __default>;

        if r1 == $r4 goto label1;

        $r5 = <org.mortbay.util.ajax.JSON: org.mortbay.util.ajax.JSON __default>;

        r6 = virtualinvoke $r5.<org.mortbay.util.ajax.JSON: org.mortbay.util.ajax.JSON$Convertor getConvertorFor(java.lang.String)>(r0);

     label1:
        return r6;
    }

    public java.lang.Object parse(org.mortbay.util.ajax.JSON$Source, boolean)
    {
        org.mortbay.util.ajax.JSON r1;
        byte b1, b2, b3, b4, b5, b6, b7, b8;
        int $i9, $i10, $i11, $i12, $i13;
        boolean z0, $z1, $z2;
        char $c0;
        java.lang.Object $r2, r3;
        org.mortbay.util.ajax.JSON$Source r0;

        r1 := @this: org.mortbay.util.ajax.JSON;

        r0 := @parameter0: org.mortbay.util.ajax.JSON$Source;

        z0 := @parameter1: boolean;

        b1 = 0;

        b6 = 0;

        b5 = 0;

        b4 = 0;

        b3 = 0;

        if z0 != 0 goto label01;

        $r2 = virtualinvoke r1.<org.mortbay.util.ajax.JSON: java.lang.Object parse(org.mortbay.util.ajax.JSON$Source)>(r0);

        return $r2;

     label01:
        b2 = 1;

        b8 = 1;

        b7 = 1;

        r3 = null;

     label02:
        $z2 = interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: boolean hasNext()>();

        if $z2 == 0 goto label18;

        $c0 = interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char peek()>();

        if b4 != 1 goto label06;

        $i9 = (int) $c0;

        lookupswitch($i9)
        {
            case 42: goto label04;
            case 47: goto label03;
            default: goto label05;
        };

     label03:
        b1 = -1;

        b6 = -1;

        b5 = -1;

        b4 = -1;

        b3 = -1;

        goto label05;

     label04:
        b1 = 2;

        b6 = 2;

        b5 = 2;

        b4 = 2;

        b3 = 2;

        if b7 != 1 goto label05;

        b1 = 0;

        b6 = 0;

        b5 = 0;

        b4 = 0;

        b3 = 0;

        b2 = 2;

        b8 = 2;

        b7 = 2;

     label05:
        goto label17;

     label06:
        if b3 <= 1 goto label11;

        $i10 = (int) $c0;

        lookupswitch($i10)
        {
            case 42: goto label07;
            case 47: goto label08;
            default: goto label10;
        };

     label07:
        b1 = 3;

        b6 = 3;

        b5 = 3;

        b4 = 3;

        b3 = 3;

        goto label17;

     label08:
        if b5 != 3 goto label09;

        b1 = 0;

        b6 = 0;

        b5 = 0;

        b4 = 0;

        b3 = 0;

        if b8 != 2 goto label17;

        return r3;

     label09:
        b1 = 2;

        b6 = 2;

        b5 = 2;

        b4 = 2;

        b3 = 2;

        goto label17;

     label10:
        b1 = 2;

        b6 = 2;

        b5 = 2;

        b4 = 2;

        b3 = 2;

        goto label17;

     label11:
        if b6 >= 0 goto label14;

        $i11 = (int) $c0;

        lookupswitch($i11)
        {
            case 10: goto label12;
            case 13: goto label12;
            default: goto label13;
        };

     label12:
        b1 = 0;

        b6 = 0;

        b5 = 0;

        b4 = 0;

        b3 = 0;

     label13:
        goto label17;

     label14:
        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c0);

        if $z1 != 0 goto label17;

        $i12 = (int) $c0;

        if $i12 != 47 goto label15;

        b1 = 1;

        b6 = 1;

        b5 = 1;

        b4 = 1;

        b3 = 1;

        goto label17;

     label15:
        $i13 = (int) $c0;

        if $i13 != 42 goto label16;

        b1 = 3;

        b6 = 3;

        b5 = 3;

        b4 = 3;

        b3 = 3;

        goto label17;

     label16:
        if r3 != null goto label17;

        r3 = virtualinvoke r1.<org.mortbay.util.ajax.JSON: java.lang.Object parse(org.mortbay.util.ajax.JSON$Source)>(r0);

        goto label02;

     label17:
        interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char next()>();

        goto label02;

     label18:
        return r3;
    }

    public java.lang.Object parse(org.mortbay.util.ajax.JSON$Source)
    {
        org.mortbay.util.ajax.JSON r1;
        byte b1, b2, b3, b4, b5;
        int $i6, $i7, $i8, $i9;
        java.lang.Boolean $r3, $r4;
        java.lang.String $r7;
        java.lang.Number $r6, $r9;
        boolean $z0, $z1, $z2;
        char $c0;
        java.lang.Object $r2, $r5, $r8;
        org.mortbay.util.ajax.JSON$Source r0;

        r1 := @this: org.mortbay.util.ajax.JSON;

        r0 := @parameter0: org.mortbay.util.ajax.JSON$Source;

        b1 = 0;

        b5 = 0;

        b4 = 0;

        b3 = 0;

        b2 = 0;

     label01:
        $z0 = interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: boolean hasNext()>();

        if $z0 == 0 goto label28;

        $c0 = interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char peek()>();

        if b5 != 1 goto label05;

        $i6 = (int) $c0;

        lookupswitch($i6)
        {
            case 42: goto label03;
            case 47: goto label02;
            default: goto label04;
        };

     label02:
        b1 = -1;

        b5 = -1;

        b4 = -1;

        b3 = -1;

        b2 = -1;

        goto label04;

     label03:
        b1 = 2;

        b5 = 2;

        b4 = 2;

        b3 = 2;

        b2 = 2;

     label04:
        goto label27;

     label05:
        if b3 <= 1 goto label10;

        $i7 = (int) $c0;

        lookupswitch($i7)
        {
            case 42: goto label06;
            case 47: goto label07;
            default: goto label09;
        };

     label06:
        b1 = 3;

        b5 = 3;

        b4 = 3;

        b3 = 3;

        b2 = 3;

        goto label27;

     label07:
        if b2 != 3 goto label08;

        b1 = 0;

        b5 = 0;

        b4 = 0;

        b3 = 0;

        b2 = 0;

        goto label27;

     label08:
        b1 = 2;

        b5 = 2;

        b4 = 2;

        b3 = 2;

        b2 = 2;

        goto label27;

     label09:
        b1 = 2;

        b5 = 2;

        b4 = 2;

        b3 = 2;

        b2 = 2;

        goto label27;

     label10:
        if b4 >= 0 goto label13;

        $i8 = (int) $c0;

        lookupswitch($i8)
        {
            case 10: goto label11;
            case 13: goto label11;
            default: goto label12;
        };

     label11:
        b1 = 0;

        b5 = 0;

        b4 = 0;

        b3 = 0;

        b2 = 0;

        goto label27;

     label12:
        goto label27;

     label13:
        $i9 = (int) $c0;

        lookupswitch($i9)
        {
            case 34: goto label16;
            case 45: goto label17;
            case 47: goto label23;
            case 78: goto label22;
            case 91: goto label15;
            case 102: goto label20;
            case 110: goto label18;
            case 116: goto label19;
            case 117: goto label21;
            case 123: goto label14;
            default: goto label24;
        };

     label14:
        $r2 = virtualinvoke r1.<org.mortbay.util.ajax.JSON: java.lang.Object parseObject(org.mortbay.util.ajax.JSON$Source)>(r0);

        return $r2;

     label15:
        $r5 = virtualinvoke r1.<org.mortbay.util.ajax.JSON: java.lang.Object parseArray(org.mortbay.util.ajax.JSON$Source)>(r0);

        return $r5;

     label16:
        $r7 = virtualinvoke r1.<org.mortbay.util.ajax.JSON: java.lang.String parseString(org.mortbay.util.ajax.JSON$Source)>(r0);

        return $r7;

     label17:
        $r6 = virtualinvoke r1.<org.mortbay.util.ajax.JSON: java.lang.Number parseNumber(org.mortbay.util.ajax.JSON$Source)>(r0);

        return $r6;

     label18:
        staticinvoke <org.mortbay.util.ajax.JSON: void complete(java.lang.String,org.mortbay.util.ajax.JSON$Source)>("null", r0);

        return null;

     label19:
        staticinvoke <org.mortbay.util.ajax.JSON: void complete(java.lang.String,org.mortbay.util.ajax.JSON$Source)>("true", r0);

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r3;

     label20:
        staticinvoke <org.mortbay.util.ajax.JSON: void complete(java.lang.String,org.mortbay.util.ajax.JSON$Source)>("false", r0);

        $r4 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r4;

     label21:
        staticinvoke <org.mortbay.util.ajax.JSON: void complete(java.lang.String,org.mortbay.util.ajax.JSON$Source)>("undefined", r0);

        return null;

     label22:
        staticinvoke <org.mortbay.util.ajax.JSON: void complete(java.lang.String,org.mortbay.util.ajax.JSON$Source)>("NaN", r0);

        return null;

     label23:
        b1 = 1;

        b5 = 1;

        b4 = 1;

        b3 = 1;

        b2 = 1;

        goto label27;

     label24:
        $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c0);

        if $z1 == 0 goto label25;

        $r9 = virtualinvoke r1.<org.mortbay.util.ajax.JSON: java.lang.Number parseNumber(org.mortbay.util.ajax.JSON$Source)>(r0);

        return $r9;

     label25:
        $z2 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c0);

        if $z2 == 0 goto label26;

        goto label27;

     label26:
        $r8 = virtualinvoke r1.<org.mortbay.util.ajax.JSON: java.lang.Object handleUnknown(org.mortbay.util.ajax.JSON$Source,char)>(r0, $c0);

        return $r8;

     label27:
        interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char next()>();

        goto label01;

     label28:
        return null;
    }

    protected java.lang.Object handleUnknown(org.mortbay.util.ajax.JSON$Source, char)
    {
        java.lang.IllegalStateException $r12;
        char c0;
        org.mortbay.util.ajax.JSON r10;
        java.lang.StringBuffer $r2, $r3, $r4, $r5, $r6, $r8, $r11;
        int $i1;
        org.mortbay.util.ajax.JSON$Source r7;
        java.lang.String $r9;

        r10 := @this: org.mortbay.util.ajax.JSON;

        r7 := @parameter0: org.mortbay.util.ajax.JSON$Source;

        c0 := @parameter1: char;

        $r12 = new java.lang.IllegalStateException;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("unknown char \'");

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'(");

        $i1 = (int) c0;

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") in ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r12;
    }

    protected java.lang.Object parseObject(org.mortbay.util.ajax.JSON$Source)
    {
        java.lang.IllegalStateException $r14;
        org.mortbay.util.ajax.JSON r1, $r7;
        java.util.Map $r2;
        int $i3, $i4, $i5;
        java.lang.String $r6, $r12;
        boolean $z0;
        char $c0, $c1, c2;
        java.lang.Class $r3, $r4, $r13;
        java.lang.Object $r5, $r8, $r11;
        java.lang.ClassNotFoundException $r10;
        org.mortbay.util.ajax.JSON$Source r0;

        r1 := @this: org.mortbay.util.ajax.JSON;

        r0 := @parameter0: org.mortbay.util.ajax.JSON$Source;

        $c0 = interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char next()>();

        $i3 = (int) $c0;

        if $i3 == 123 goto label01;

        $r14 = new java.lang.IllegalStateException;

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>()>();

        throw $r14;

     label01:
        $r2 = virtualinvoke r1.<org.mortbay.util.ajax.JSON: java.util.Map newMap()>();

        c2 = virtualinvoke r1.<org.mortbay.util.ajax.JSON: char seekTo(java.lang.String,org.mortbay.util.ajax.JSON$Source)>("\"}", r0);

     label02:
        $z0 = interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $i4 = (int) c2;

        if $i4 != 125 goto label03;

        interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char next()>();

        goto label05;

     label03:
        $r6 = virtualinvoke r1.<org.mortbay.util.ajax.JSON: java.lang.String parseString(org.mortbay.util.ajax.JSON$Source)>(r0);

        virtualinvoke r1.<org.mortbay.util.ajax.JSON: void seekTo(char,org.mortbay.util.ajax.JSON$Source)>(58, r0);

        interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char next()>();

        $r7 = virtualinvoke r1.<org.mortbay.util.ajax.JSON: org.mortbay.util.ajax.JSON contextFor(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<org.mortbay.util.ajax.JSON: java.lang.Object parse(org.mortbay.util.ajax.JSON$Source)>(r0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r8);

        virtualinvoke r1.<org.mortbay.util.ajax.JSON: char seekTo(java.lang.String,org.mortbay.util.ajax.JSON$Source)>(",}", r0);

        $c1 = interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char next()>();

        $i5 = (int) $c1;

        if $i5 != 125 goto label04;

        goto label05;

     label04:
        c2 = virtualinvoke r1.<org.mortbay.util.ajax.JSON: char seekTo(java.lang.String,org.mortbay.util.ajax.JSON$Source)>("\"}", r0);

        goto label02;

     label05:
        $r11 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("class");

        $r12 = (java.lang.String) $r11;

        if $r12 == null goto label11;

     label06:
        $r3 = <org.mortbay.util.ajax.JSON: java.lang.Class class$org$mortbay$util$ajax$JSON>;

        if $r3 != null goto label07;

        $r13 = staticinvoke <org.mortbay.util.ajax.JSON: java.lang.Class class$(java.lang.String)>("org.mortbay.util.ajax.JSON");

        <org.mortbay.util.ajax.JSON: java.lang.Class class$org$mortbay$util$ajax$JSON> = $r13;

        goto label08;

     label07:
        $r13 = <org.mortbay.util.ajax.JSON: java.lang.Class class$org$mortbay$util$ajax$JSON>;

     label08:
        $r4 = staticinvoke <org.mortbay.util.Loader: java.lang.Class loadClass(java.lang.Class,java.lang.String)>($r13, $r12);

        $r5 = virtualinvoke r1.<org.mortbay.util.ajax.JSON: java.lang.Object convertTo(java.lang.Class,java.util.Map)>($r4, $r2);

     label09:
        return $r5;

     label10:
        $r10 := @caughtexception;

        virtualinvoke $r10.<java.lang.ClassNotFoundException: void printStackTrace()>();

     label11:
        return $r2;

        catch java.lang.ClassNotFoundException from label06 to label09 with label10;
    }

    protected java.lang.Object parseArray(org.mortbay.util.ajax.JSON$Source)
    {
        java.lang.IllegalStateException $r17, $r18, $r20;
        java.lang.Object[] $r3, $r4, $r5, $r6;
        org.mortbay.util.ajax.JSON r2, $r8, $r11, $r13;
        java.util.ArrayList r15, $r19;
        int $i2, $i3, i4, $i5, $i6;
        boolean $z0, $z1, z2;
        char $c0, $c1;
        java.lang.Object $r9, $r12, r16;
        org.mortbay.util.ajax.JSON$Source r0;

        r2 := @this: org.mortbay.util.ajax.JSON;

        r0 := @parameter0: org.mortbay.util.ajax.JSON$Source;

        $c0 = interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char next()>();

        $i5 = (int) $c0;

        if $i5 == 91 goto label01;

        $r17 = new java.lang.IllegalStateException;

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>()>();

        throw $r17;

     label01:
        i4 = 0;

        r15 = null;

        r16 = null;

        z2 = 1;

     label02:
        $z0 = interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: boolean hasNext()>();

        if $z0 == 0 goto label14;

        $c1 = interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char peek()>();

        $i6 = (int) $c1;

        lookupswitch($i6)
        {
            case 44: goto label07;
            case 93: goto label03;
            default: goto label09;
        };

     label03:
        interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char next()>();

        lookupswitch(i4)
        {
            case 0: goto label04;
            case 1: goto label05;
            default: goto label06;
        };

     label04:
        $r4 = virtualinvoke r2.<org.mortbay.util.ajax.JSON: java.lang.Object[] newArray(int)>(0);

        return $r4;

     label05:
        $r3 = virtualinvoke r2.<org.mortbay.util.ajax.JSON: java.lang.Object[] newArray(int)>(1);

        staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>($r3, 0, r16);

        return $r3;

     label06:
        $i2 = virtualinvoke r15.<java.util.ArrayList: int size()>();

        $r5 = virtualinvoke r2.<org.mortbay.util.ajax.JSON: java.lang.Object[] newArray(int)>($i2);

        $r6 = virtualinvoke r15.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        return $r6;

     label07:
        if z2 == 0 goto label08;

        $r18 = new java.lang.IllegalStateException;

        specialinvoke $r18.<java.lang.IllegalStateException: void <init>()>();

        throw $r18;

     label08:
        z2 = 1;

        interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char next()>();

        goto label13;

     label09:
        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c1);

        if $z1 == 0 goto label10;

        interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char next()>();

        goto label13;

     label10:
        z2 = 0;

        $i3 = i4;

        i4 = i4 + 1;

        if $i3 != 0 goto label11;

        $r13 = virtualinvoke r2.<org.mortbay.util.ajax.JSON: org.mortbay.util.ajax.JSON contextForArray()>();

        r16 = virtualinvoke $r13.<org.mortbay.util.ajax.JSON: java.lang.Object parse(org.mortbay.util.ajax.JSON$Source)>(r0);

        goto label13;

     label11:
        if r15 != null goto label12;

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        r15 = $r19;

        virtualinvoke $r19.<java.util.ArrayList: boolean add(java.lang.Object)>(r16);

        $r11 = virtualinvoke r2.<org.mortbay.util.ajax.JSON: org.mortbay.util.ajax.JSON contextForArray()>();

        $r12 = virtualinvoke $r11.<org.mortbay.util.ajax.JSON: java.lang.Object parse(org.mortbay.util.ajax.JSON$Source)>(r0);

        virtualinvoke $r19.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

        r16 = null;

        goto label13;

     label12:
        $r8 = virtualinvoke r2.<org.mortbay.util.ajax.JSON: org.mortbay.util.ajax.JSON contextForArray()>();

        $r9 = virtualinvoke $r8.<org.mortbay.util.ajax.JSON: java.lang.Object parse(org.mortbay.util.ajax.JSON$Source)>(r0);

        virtualinvoke r15.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        r16 = null;

     label13:
        goto label02;

     label14:
        $r20 = new java.lang.IllegalStateException;

        specialinvoke $r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>("unexpected end of array");

        throw $r20;
    }

    protected java.lang.String parseString(org.mortbay.util.ajax.JSON$Source)
    {
        byte $b4, $b5, $b8, $b9, $b13, $b14, $b18, $b19, $b25, $b26, $b29, $b30, $b34, $b35, $b39, $b40;
        java.lang.Throwable $r9;
        java.lang.StringBuffer r10, r11, $r13, $r14;
        java.lang.String $r4, $r5, $r6;
        char[] $r1;
        java.lang.IllegalStateException $r12;
        org.mortbay.util.ajax.JSON r3;
        boolean z0, $z1, $z2, z3, z4;
        int $i1, $i6, $i10, $i11, $i15, $i16, $i20, $i21, $i23, $i27, $i31, $i32, $i36, $i37, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, i54, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71;
        char $c0, $c2, $c3, $c7, $c12, $c17, $c22, $c24, $c28, $c33, $c38, c55, c56;
        org.mortbay.util.ajax.JSON$Source r0;

        r3 := @this: org.mortbay.util.ajax.JSON;

        r0 := @parameter0: org.mortbay.util.ajax.JSON$Source;

        $c0 = interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char next()>();

        $i57 = (int) $c0;

        if $i57 == 34 goto label01;

        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>()>();

        throw $r12;

     label01:
        z0 = 0;

        z4 = 0;

        z3 = 0;

        r10 = null;

        $r1 = interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char[] scratchBuffer()>();

        if $r1 == null goto label21;

        i54 = 0;

     label02:
        $z1 = interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: boolean hasNext()>();

        if $z1 == 0 goto label19;

        $i21 = lengthof $r1;

        if i54 < $i21 goto label03;

        $r13 = new java.lang.StringBuffer;

        $i52 = lengthof $r1;

        $i53 = $i52 * 2;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>(int)>($i53);

        r10 = $r13;

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>($r1, 0, i54);

        goto label19;

     label03:
        $c22 = interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char next()>();

        if z3 == 0 goto label15;

        z0 = 0;

        z4 = 0;

        z3 = 0;

        $i58 = (int) $c22;

        lookupswitch($i58)
        {
            case 34: goto label04;
            case 47: goto label06;
            case 92: goto label05;
            case 98: goto label07;
            case 102: goto label08;
            case 110: goto label09;
            case 114: goto label10;
            case 116: goto label11;
            case 117: goto label12;
            default: goto label13;
        };

     label04:
        $i50 = i54;

        i54 = i54 + 1;

        $r1[$i50] = 34;

        goto label14;

     label05:
        $i48 = i54;

        i54 = i54 + 1;

        $r1[$i48] = 92;

        goto label14;

     label06:
        $i49 = i54;

        i54 = i54 + 1;

        $r1[$i49] = 47;

        goto label14;

     label07:
        $i47 = i54;

        i54 = i54 + 1;

        $r1[$i47] = 8;

        goto label14;

     label08:
        $i46 = i54;

        i54 = i54 + 1;

        $r1[$i46] = 12;

        goto label14;

     label09:
        $i45 = i54;

        i54 = i54 + 1;

        $r1[$i45] = 10;

        goto label14;

     label10:
        $i44 = i54;

        i54 = i54 + 1;

        $r1[$i44] = 13;

        goto label14;

     label11:
        $i43 = i54;

        i54 = i54 + 1;

        $r1[$i43] = 9;

        goto label14;

     label12:
        $c24 = interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char next()>();

        $b25 = (byte) $c24;

        $b26 = staticinvoke <org.mortbay.util.TypeUtil: byte convertHexDigit(byte)>($b25);

        $i59 = (int) $b26;

        $i27 = $i59 << 12;

        $c28 = interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char next()>();

        $b29 = (byte) $c28;

        $b30 = staticinvoke <org.mortbay.util.TypeUtil: byte convertHexDigit(byte)>($b29);

        $i60 = (int) $b30;

        $i31 = $i60 << 8;

        $i32 = $i27 + $i31;

        $c33 = interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char next()>();

        $b34 = (byte) $c33;

        $b35 = staticinvoke <org.mortbay.util.TypeUtil: byte convertHexDigit(byte)>($b34);

        $i61 = (int) $b35;

        $i36 = $i61 << 4;

        $i37 = $i32 + $i36;

        $c38 = interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char next()>();

        $b39 = (byte) $c38;

        $b40 = staticinvoke <org.mortbay.util.TypeUtil: byte convertHexDigit(byte)>($b39);

        $i62 = (int) $b40;

        $i41 = $i37 + $i62;

        c55 = (char) $i41;

        $i42 = i54;

        i54 = i54 + 1;

        $r1[$i42] = c55;

        goto label14;

     label13:
        $i51 = i54;

        i54 = i54 + 1;

        $r1[$i51] = $c22;

     label14:
        goto label18;

     label15:
        $i63 = (int) $c22;

        if $i63 != 92 goto label16;

        z0 = 1;

        z4 = 1;

        z3 = 1;

        goto label02;

     label16:
        $i64 = (int) $c22;

        if $i64 != 34 goto label17;

        $r6 = virtualinvoke r3.<org.mortbay.util.ajax.JSON: java.lang.String toString(char[],int,int)>($r1, 0, i54);

        return $r6;

     label17:
        $i23 = i54;

        i54 = i54 + 1;

        $r1[$i23] = $c22;

     label18:
        goto label02;

     label19:
        if r10 != null goto label20;

        $r5 = virtualinvoke r3.<org.mortbay.util.ajax.JSON: java.lang.String toString(char[],int,int)>($r1, 0, i54);

        return $r5;

     label20:
        goto label22;

     label21:
        $r14 = new java.lang.StringBuffer;

        $i1 = virtualinvoke r3.<org.mortbay.util.ajax.JSON: int getStringBufferSize()>();

        specialinvoke $r14.<java.lang.StringBuffer: void <init>(int)>($i1);

        r10 = $r14;

     label22:
        r11 = r10;

        entermonitor r10;

     label23:
        $z2 = interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: boolean hasNext()>();

        if $z2 == 0 goto label39;

        $c2 = interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char next()>();

        if z4 == 0 goto label35;

        z0 = 0;

        z4 = 0;

        $i65 = (int) $c2;

        lookupswitch($i65)
        {
            case 34: goto label24;
            case 47: goto label26;
            case 92: goto label25;
            case 98: goto label27;
            case 102: goto label28;
            case 110: goto label29;
            case 114: goto label30;
            case 116: goto label31;
            case 117: goto label32;
            default: goto label33;
        };

     label24:
        virtualinvoke r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        goto label34;

     label25:
        virtualinvoke r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);

        goto label34;

     label26:
        virtualinvoke r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(47);

        goto label34;

     label27:
        virtualinvoke r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(8);

        goto label34;

     label28:
        virtualinvoke r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(12);

        goto label34;

     label29:
        virtualinvoke r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        goto label34;

     label30:
        virtualinvoke r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(13);

        goto label34;

     label31:
        virtualinvoke r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(9);

        goto label34;

     label32:
        $c3 = interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char next()>();

        $b4 = (byte) $c3;

        $b5 = staticinvoke <org.mortbay.util.TypeUtil: byte convertHexDigit(byte)>($b4);

        $i66 = (int) $b5;

        $i6 = $i66 << 12;

        $c7 = interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char next()>();

        $b8 = (byte) $c7;

        $b9 = staticinvoke <org.mortbay.util.TypeUtil: byte convertHexDigit(byte)>($b8);

        $i67 = (int) $b9;

        $i10 = $i67 << 8;

        $i11 = $i6 + $i10;

        $c12 = interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char next()>();

        $b13 = (byte) $c12;

        $b14 = staticinvoke <org.mortbay.util.TypeUtil: byte convertHexDigit(byte)>($b13);

        $i68 = (int) $b14;

        $i15 = $i68 << 4;

        $i16 = $i11 + $i15;

        $c17 = interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char next()>();

        $b18 = (byte) $c17;

        $b19 = staticinvoke <org.mortbay.util.TypeUtil: byte convertHexDigit(byte)>($b18);

        $i69 = (int) $b19;

        $i20 = $i16 + $i69;

        c56 = (char) $i20;

        virtualinvoke r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c56);

        goto label34;

     label33:
        virtualinvoke r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

     label34:
        goto label38;

     label35:
        $i70 = (int) $c2;

        if $i70 != 92 goto label36;

        z0 = 1;

        z4 = 1;

        goto label23;

     label36:
        $i71 = (int) $c2;

        if $i71 != 34 goto label37;

        goto label39;

     label37:
        virtualinvoke r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

     label38:
        goto label23;

     label39:
        $r4 = virtualinvoke r10.<java.lang.StringBuffer: java.lang.String toString()>();

        exitmonitor r11;

     label40:
        return $r4;

     label41:
        $r9 := @caughtexception;

        exitmonitor r11;

     label42:
        throw $r9;

        catch java.lang.Throwable from label23 to label40 with label41;
        catch java.lang.Throwable from label41 to label42 with label41;
    }

    public java.lang.Number parseNumber(org.mortbay.util.ajax.JSON$Source)
    {
        java.lang.Throwable $r6;
        java.lang.IllegalStateException $r10;
        java.lang.Double $r12;
        long $l3, $l4, l6, $l7;
        org.mortbay.util.ajax.JSON r7;
        byte $b5;
        java.lang.Long $r3;
        java.lang.StringBuffer r8, r9, $r11;
        int $i2, $i8, $i9, $i10;
        java.lang.String $r2;
        boolean $z0, $z1, z2, z3, z4;
        char $c0, $c1;
        org.mortbay.util.ajax.JSON$Source r0;

        r7 := @this: org.mortbay.util.ajax.JSON;

        r0 := @parameter0: org.mortbay.util.ajax.JSON$Source;

        z2 = 0;

        z4 = 0;

        z3 = 0;

        l6 = 0L;

        r8 = null;

     label01:
        $z0 = interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $c1 = interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char peek()>();

        $i8 = (int) $c1;

        tableswitch($i8)
        {
            case 43: goto label03;
            case 44: goto label07;
            case 45: goto label03;
            case 46: goto label05;
            case 47: goto label07;
            case 48: goto label02;
            case 49: goto label02;
            case 50: goto label02;
            case 51: goto label02;
            case 52: goto label02;
            case 53: goto label02;
            case 54: goto label02;
            case 55: goto label02;
            case 56: goto label02;
            case 57: goto label02;
            case 58: goto label07;
            case 59: goto label07;
            case 60: goto label07;
            case 61: goto label07;
            case 62: goto label07;
            case 63: goto label07;
            case 64: goto label07;
            case 65: goto label07;
            case 66: goto label07;
            case 67: goto label07;
            case 68: goto label07;
            case 69: goto label05;
            case 70: goto label07;
            case 71: goto label07;
            case 72: goto label07;
            case 73: goto label07;
            case 74: goto label07;
            case 75: goto label07;
            case 76: goto label07;
            case 77: goto label07;
            case 78: goto label07;
            case 79: goto label07;
            case 80: goto label07;
            case 81: goto label07;
            case 82: goto label07;
            case 83: goto label07;
            case 84: goto label07;
            case 85: goto label07;
            case 86: goto label07;
            case 87: goto label07;
            case 88: goto label07;
            case 89: goto label07;
            case 90: goto label07;
            case 91: goto label07;
            case 92: goto label07;
            case 93: goto label07;
            case 94: goto label07;
            case 95: goto label07;
            case 96: goto label07;
            case 97: goto label07;
            case 98: goto label07;
            case 99: goto label07;
            case 100: goto label07;
            case 101: goto label05;
            default: goto label07;
        };

     label02:
        $l4 = l6 * 10L;

        $i9 = (int) $c1;

        $i2 = $i9 - 48;

        $l3 = (long) $i2;

        l6 = $l4 + $l3;

        interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char next()>();

        goto label08;

     label03:
        $b5 = l6 cmp 0L;

        if $b5 == 0 goto label04;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("bad number");

        throw $r10;

     label04:
        z2 = 1;

        z4 = 1;

        z3 = 1;

        interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char next()>();

        goto label08;

     label05:
        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>(int)>(16);

        r8 = $r11;

        if z3 == 0 goto label06;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(45);

     label06:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>(l6);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char next()>();

        goto label09;

     label07:
        goto label09;

     label08:
        goto label01;

     label09:
        if r8 != null goto label12;

        if z4 == 0 goto label10;

        $l7 = -1L * l6;

        goto label11;

     label10:
        $l7 = l6;

     label11:
        $r3 = staticinvoke <org.mortbay.util.TypeUtil: java.lang.Long newLong(long)>($l7);

        return $r3;

     label12:
        r9 = r8;

        entermonitor r8;

     label13:
        $z1 = interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: boolean hasNext()>();

        if $z1 == 0 goto label17;

        $c0 = interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char peek()>();

        $i10 = (int) $c0;

        tableswitch($i10)
        {
            case 43: goto label14;
            case 44: goto label15;
            case 45: goto label14;
            case 46: goto label14;
            case 47: goto label15;
            case 48: goto label14;
            case 49: goto label14;
            case 50: goto label14;
            case 51: goto label14;
            case 52: goto label14;
            case 53: goto label14;
            case 54: goto label14;
            case 55: goto label14;
            case 56: goto label14;
            case 57: goto label14;
            case 58: goto label15;
            case 59: goto label15;
            case 60: goto label15;
            case 61: goto label15;
            case 62: goto label15;
            case 63: goto label15;
            case 64: goto label15;
            case 65: goto label15;
            case 66: goto label15;
            case 67: goto label15;
            case 68: goto label15;
            case 69: goto label14;
            case 70: goto label15;
            case 71: goto label15;
            case 72: goto label15;
            case 73: goto label15;
            case 74: goto label15;
            case 75: goto label15;
            case 76: goto label15;
            case 77: goto label15;
            case 78: goto label15;
            case 79: goto label15;
            case 80: goto label15;
            case 81: goto label15;
            case 82: goto label15;
            case 83: goto label15;
            case 84: goto label15;
            case 85: goto label15;
            case 86: goto label15;
            case 87: goto label15;
            case 88: goto label15;
            case 89: goto label15;
            case 90: goto label15;
            case 91: goto label15;
            case 92: goto label15;
            case 93: goto label15;
            case 94: goto label15;
            case 95: goto label15;
            case 96: goto label15;
            case 97: goto label15;
            case 98: goto label15;
            case 99: goto label15;
            case 100: goto label15;
            case 101: goto label14;
            default: goto label15;
        };

     label14:
        virtualinvoke r8.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c0);

        interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char next()>();

        goto label16;

     label15:
        goto label17;

     label16:
        goto label13;

     label17:
        $r12 = new java.lang.Double;

        $r2 = virtualinvoke r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.Double: void <init>(java.lang.String)>($r2);

        exitmonitor r9;

     label18:
        return $r12;

     label19:
        $r6 := @caughtexception;

        exitmonitor r9;

     label20:
        throw $r6;

        catch java.lang.Throwable from label13 to label18 with label19;
        catch java.lang.Throwable from label19 to label20 with label19;
    }

    protected void seekTo(char, org.mortbay.util.ajax.JSON$Source)
    {
        java.lang.IllegalStateException $r17, $r19;
        org.mortbay.util.ajax.JSON r15;
        java.lang.StringBuffer $r3, $r4, $r5, $r9, $r10, $r11, $r12, $r13, $r16, $r18;
        int $i2, $i3;
        java.lang.String $r6, $r14;
        boolean $z0, $z1;
        char c0, $c1;
        org.mortbay.util.ajax.JSON$Source r0;

        r15 := @this: org.mortbay.util.ajax.JSON;

        c0 := @parameter0: char;

        r0 := @parameter1: org.mortbay.util.ajax.JSON$Source;

     label1:
        $z0 = interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $c1 = interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char peek()>();

        $i2 = (int) $c1;

        $i3 = (int) c0;

        if $i2 != $i3 goto label2;

        return;

     label2:
        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c1);

        if $z1 != 0 goto label3;

        $r17 = new java.lang.IllegalStateException;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unexpected \'");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" while seeking \'");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14);

        throw $r17;

     label3:
        interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char next()>();

        goto label1;

     label4:
        $r19 = new java.lang.IllegalStateException;

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Expected \'");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r19;
    }

    protected char seekTo(java.lang.String, org.mortbay.util.ajax.JSON$Source)
    {
        java.lang.IllegalStateException $r18, $r20;
        org.mortbay.util.ajax.JSON r16;
        java.lang.StringBuffer $r3, $r5, $r6, $r10, $r11, $r12, $r13, $r14, $r17, $r19;
        int $i1, $i2;
        java.lang.String r4, $r7, $r15;
        boolean $z0, $z1;
        char $c0;
        org.mortbay.util.ajax.JSON$Source r0;

        r16 := @this: org.mortbay.util.ajax.JSON;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: org.mortbay.util.ajax.JSON$Source;

     label1:
        $z0 = interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $c0 = interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char peek()>();

        $i2 = (int) $c0;

        $i1 = virtualinvoke r4.<java.lang.String: int indexOf(int)>($i2);

        if $i1 < 0 goto label2;

        return $c0;

     label2:
        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c0);

        if $z1 != 0 goto label3;

        $r18 = new java.lang.IllegalStateException;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unexpected \'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' while seeking one of \'");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r15);

        throw $r18;

     label3:
        interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char next()>();

        goto label1;

     label4:
        $r20 = new java.lang.IllegalStateException;

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Expected one of \'");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r20;
    }

    protected static void complete(java.lang.String, org.mortbay.util.ajax.JSON$Source)
    {
        java.lang.IllegalStateException $r17, $r19;
        java.lang.StringBuffer $r4, $r5, $r6, $r10, $r11, $r12, $r13, $r14, $r16, $r18;
        int $i0, $i1, $i3, i5, $i6, $i7;
        java.lang.String r1, $r7, $r15;
        boolean $z0;
        char $c2, $c4;
        org.mortbay.util.ajax.JSON$Source r0;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: org.mortbay.util.ajax.JSON$Source;

        i5 = 0;

     label1:
        $z0 = interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if i5 >= $i1 goto label3;

        $c2 = interfaceinvoke r0.<org.mortbay.util.ajax.JSON$Source: char next()>();

        $i3 = i5;

        i5 = i5 + 1;

        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i3);

        $i6 = (int) $c2;

        $i7 = (int) $c4;

        if $i6 == $i7 goto label2;

        $r17 = new java.lang.IllegalStateException;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unexpected \'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" while seeking  \"");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r15);

        throw $r17;

     label2:
        goto label1;

     label3:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i5 >= $i0 goto label4;

        $r19 = new java.lang.IllegalStateException;

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Expected \"");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r19;

     label4:
        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        org.mortbay.util.ajax.JSON $r0;

        $r0 = new org.mortbay.util.ajax.JSON;

        specialinvoke $r0.<org.mortbay.util.ajax.JSON: void <init>()>();

        <org.mortbay.util.ajax.JSON: org.mortbay.util.ajax.JSON __default> = $r0;

        return;
    }
}
