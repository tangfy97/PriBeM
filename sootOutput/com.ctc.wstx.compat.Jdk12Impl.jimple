public class com.ctc.wstx.compat.Jdk12Impl extends com.ctc.wstx.compat.JdkImpl
{
    private final java.util.List mEmptyList;
    private final java.util.Map mEmptyMap;
    private final java.util.Set mEmptySet;

    public void <init>()
    {
        java.util.HashSet $r5;
        java.util.List $r2;
        java.util.Map $r4;
        java.util.Set $r6;
        java.util.HashMap $r3;
        com.ctc.wstx.compat.Jdk12Impl r0;
        java.util.ArrayList $r1;

        r0 := @this: com.ctc.wstx.compat.Jdk12Impl;

        specialinvoke r0.<com.ctc.wstx.compat.JdkImpl: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1);

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        r0.<com.ctc.wstx.compat.Jdk12Impl: java.util.List mEmptyList> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>(int)>(4);

        $r4 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r3);

        r0.<com.ctc.wstx.compat.Jdk12Impl: java.util.Map mEmptyMap> = $r4;

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>(int)>(4);

        $r6 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r5);

        r0.<com.ctc.wstx.compat.Jdk12Impl: java.util.Set mEmptySet> = $r6;

        return;
    }

    protected void <init>(boolean)
    {
        com.ctc.wstx.compat.Jdk12Impl r0;
        boolean z0;

        r0 := @this: com.ctc.wstx.compat.Jdk12Impl;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.ctc.wstx.compat.JdkImpl: void <init>()>();

        r0.<com.ctc.wstx.compat.Jdk12Impl: java.util.List mEmptyList> = null;

        r0.<com.ctc.wstx.compat.Jdk12Impl: java.util.Map mEmptyMap> = null;

        r0.<com.ctc.wstx.compat.Jdk12Impl: java.util.Set mEmptySet> = null;

        return;
    }

    public boolean leakingThreadLocal()
    {
        com.ctc.wstx.compat.Jdk12Impl r0;

        r0 := @this: com.ctc.wstx.compat.Jdk12Impl;

        return 0;
    }

    public java.util.List getEmptyList()
    {
        java.util.List $r1;
        com.ctc.wstx.compat.Jdk12Impl r0;

        r0 := @this: com.ctc.wstx.compat.Jdk12Impl;

        $r1 = r0.<com.ctc.wstx.compat.Jdk12Impl: java.util.List mEmptyList>;

        return $r1;
    }

    public java.util.Map getEmptyMap()
    {
        com.ctc.wstx.compat.Jdk12Impl r0;
        java.util.Map $r1;

        r0 := @this: com.ctc.wstx.compat.Jdk12Impl;

        $r1 = r0.<com.ctc.wstx.compat.Jdk12Impl: java.util.Map mEmptyMap>;

        return $r1;
    }

    public java.util.Set getEmptySet()
    {
        java.util.Set $r1;
        com.ctc.wstx.compat.Jdk12Impl r0;

        r0 := @this: com.ctc.wstx.compat.Jdk12Impl;

        $r1 = r0.<com.ctc.wstx.compat.Jdk12Impl: java.util.Set mEmptySet>;

        return $r1;
    }

    public java.util.HashMap getInsertOrderedMap()
    {
        java.util.HashMap $r0;
        com.ctc.wstx.compat.Jdk12Impl r1;

        r1 := @this: com.ctc.wstx.compat.Jdk12Impl;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        return $r0;
    }

    public java.util.HashMap getInsertOrderedMap(int)
    {
        int i0;
        java.util.HashMap $r0;
        com.ctc.wstx.compat.Jdk12Impl r1;

        r1 := @this: com.ctc.wstx.compat.Jdk12Impl;

        i0 := @parameter0: int;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>(int)>(i0);

        return $r0;
    }

    public java.util.HashMap getLRULimitMap(int)
    {
        int i0, $i1;
        java.util.HashMap $r0;
        com.ctc.wstx.compat.Jdk12Impl r1;

        r1 := @this: com.ctc.wstx.compat.Jdk12Impl;

        i0 := @parameter0: int;

        $r0 = new java.util.HashMap;

        $i1 = 5 + i0;

        specialinvoke $r0.<java.util.HashMap: void <init>(int)>($i1);

        return $r0;
    }

    public boolean setInitCause(java.lang.Throwable, java.lang.Throwable)
    {
        java.lang.Throwable r1, r2;
        com.ctc.wstx.compat.Jdk12Impl r0;

        r0 := @this: com.ctc.wstx.compat.Jdk12Impl;

        r1 := @parameter0: java.lang.Throwable;

        r2 := @parameter1: java.lang.Throwable;

        return 0;
    }
}
