public class org.jdesktop.swingx.renderer.JRendererCheckBox extends javax.swing.JCheckBox implements org.jdesktop.swingx.renderer.PainterAware
{
    protected org.jdesktop.swingx.painter.Painter painter;

    public void <init>()
    {
        org.jdesktop.swingx.renderer.JRendererCheckBox r0;

        r0 := @this: org.jdesktop.swingx.renderer.JRendererCheckBox;

        specialinvoke r0.<javax.swing.JCheckBox: void <init>()>();

        return;
    }

    public org.jdesktop.swingx.painter.Painter getPainter()
    {
        org.jdesktop.swingx.renderer.JRendererCheckBox r0;
        org.jdesktop.swingx.painter.Painter $r1;

        r0 := @this: org.jdesktop.swingx.renderer.JRendererCheckBox;

        $r1 = r0.<org.jdesktop.swingx.renderer.JRendererCheckBox: org.jdesktop.swingx.painter.Painter painter>;

        return $r1;
    }

    public void setPainter(org.jdesktop.swingx.painter.Painter)
    {
        org.jdesktop.swingx.renderer.JRendererCheckBox r0;
        org.jdesktop.swingx.painter.Painter $r1, r2, $r3;

        r0 := @this: org.jdesktop.swingx.renderer.JRendererCheckBox;

        r2 := @parameter0: org.jdesktop.swingx.painter.Painter;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.renderer.JRendererCheckBox: org.jdesktop.swingx.painter.Painter getPainter()>();

        r0.<org.jdesktop.swingx.renderer.JRendererCheckBox: org.jdesktop.swingx.painter.Painter painter> = r2;

        if r2 == null goto label1;

        virtualinvoke r0.<org.jdesktop.swingx.renderer.JRendererCheckBox: void setContentAreaFilled(boolean)>(0);

     label1:
        $r3 = virtualinvoke r0.<org.jdesktop.swingx.renderer.JRendererCheckBox: org.jdesktop.swingx.painter.Painter getPainter()>();

        virtualinvoke r0.<org.jdesktop.swingx.renderer.JRendererCheckBox: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("painter", $r1, $r3);

        return;
    }

    public boolean isOpaque()
    {
        org.jdesktop.swingx.renderer.JRendererCheckBox r0;
        org.jdesktop.swingx.painter.Painter $r1;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.renderer.JRendererCheckBox;

        $r1 = r0.<org.jdesktop.swingx.renderer.JRendererCheckBox: org.jdesktop.swingx.painter.Painter painter>;

        if $r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setToolTipText(java.lang.String)
    {
        org.jdesktop.swingx.renderer.JRendererCheckBox r0;
        java.lang.String r1;

        r0 := @this: org.jdesktop.swingx.renderer.JRendererCheckBox;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.jdesktop.swingx.renderer.JRendererCheckBox: void putClientProperty(java.lang.Object,java.lang.Object)>("ToolTipText", r1);

        return;
    }

    protected void paintComponent(java.awt.Graphics)
    {
        org.jdesktop.swingx.renderer.JRendererCheckBox r0;
        org.jdesktop.swingx.painter.Painter $r1;
        java.awt.Graphics2D $r3;
        java.awt.Graphics r2;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.renderer.JRendererCheckBox;

        r2 := @parameter0: java.awt.Graphics;

        $r1 = r0.<org.jdesktop.swingx.renderer.JRendererCheckBox: org.jdesktop.swingx.painter.Painter painter>;

        if $r1 != null goto label1;

        $z0 = specialinvoke r0.<org.jdesktop.swingx.renderer.JRendererCheckBox: boolean isNimbus()>();

        if $z0 == 0 goto label2;

     label1:
        $r3 = (java.awt.Graphics2D) r2;

        virtualinvoke r0.<org.jdesktop.swingx.renderer.JRendererCheckBox: void paintComponentWithPainter(java.awt.Graphics2D)>($r3);

        goto label3;

     label2:
        specialinvoke r0.<javax.swing.JCheckBox: void paintComponent(java.awt.Graphics)>(r2);

     label3:
        return;
    }

    private boolean isNimbus()
    {
        org.jdesktop.swingx.renderer.JRendererCheckBox r2;
        javax.swing.LookAndFeel $r0;
        java.lang.String $r1;
        boolean $z0;

        r2 := @this: org.jdesktop.swingx.renderer.JRendererCheckBox;

        $r0 = staticinvoke <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>();

        $r1 = virtualinvoke $r0.<javax.swing.LookAndFeel: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("Nimbus");

        return $z0;
    }

    private void paintPainter(java.awt.Graphics)
    {
        java.lang.Throwable $r6;
        org.jdesktop.swingx.renderer.JRendererCheckBox r0;
        org.jdesktop.swingx.painter.Painter $r1, $r5;
        java.awt.Graphics2D r4;
        java.awt.Graphics r2, $r3;
        int $i0, $i1;

        r0 := @this: org.jdesktop.swingx.renderer.JRendererCheckBox;

        r2 := @parameter0: java.awt.Graphics;

        $r1 = r0.<org.jdesktop.swingx.renderer.JRendererCheckBox: org.jdesktop.swingx.painter.Painter painter>;

        if $r1 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r2.<java.awt.Graphics: java.awt.Graphics create()>();

        r4 = (java.awt.Graphics2D) $r3;

     label2:
        $r5 = r0.<org.jdesktop.swingx.renderer.JRendererCheckBox: org.jdesktop.swingx.painter.Painter painter>;

        $i0 = virtualinvoke r0.<org.jdesktop.swingx.renderer.JRendererCheckBox: int getWidth()>();

        $i1 = virtualinvoke r0.<org.jdesktop.swingx.renderer.JRendererCheckBox: int getHeight()>();

        interfaceinvoke $r5.<org.jdesktop.swingx.painter.Painter: void paint(java.awt.Graphics2D,java.lang.Object,int,int)>(r4, r0, $i0, $i1);

     label3:
        virtualinvoke r4.<java.awt.Graphics2D: void dispose()>();

        goto label6;

     label4:
        $r6 := @caughtexception;

     label5:
        virtualinvoke r4.<java.awt.Graphics2D: void dispose()>();

        throw $r6;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected void paintComponentWithPainter(java.awt.Graphics2D)
    {
        java.awt.Color $r4;
        java.lang.Throwable $r6;
        org.jdesktop.swingx.renderer.JRendererCheckBox r0;
        javax.swing.plaf.ComponentUI $r1, $r5;
        java.awt.Graphics2D r2;
        java.awt.Graphics $r3;
        int $i0, $i1;

        r0 := @this: org.jdesktop.swingx.renderer.JRendererCheckBox;

        r2 := @parameter0: java.awt.Graphics2D;

        $r1 = r0.<org.jdesktop.swingx.renderer.JRendererCheckBox: javax.swing.plaf.ComponentUI ui>;

        if $r1 == null goto label5;

        $r3 = virtualinvoke r2.<java.awt.Graphics2D: java.awt.Graphics create()>();

     label1:
        $r4 = virtualinvoke r0.<org.jdesktop.swingx.renderer.JRendererCheckBox: java.awt.Color getBackground()>();

        virtualinvoke $r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r4);

        $i0 = virtualinvoke r0.<org.jdesktop.swingx.renderer.JRendererCheckBox: int getWidth()>();

        $i1 = virtualinvoke r0.<org.jdesktop.swingx.renderer.JRendererCheckBox: int getHeight()>();

        virtualinvoke $r3.<java.awt.Graphics: void fillRect(int,int,int,int)>(0, 0, $i0, $i1);

        specialinvoke r0.<org.jdesktop.swingx.renderer.JRendererCheckBox: void paintPainter(java.awt.Graphics)>(r2);

        $r5 = r0.<org.jdesktop.swingx.renderer.JRendererCheckBox: javax.swing.plaf.ComponentUI ui>;

        virtualinvoke $r5.<javax.swing.plaf.ComponentUI: void paint(java.awt.Graphics,javax.swing.JComponent)>($r3, r0);

     label2:
        virtualinvoke $r3.<java.awt.Graphics: void dispose()>();

        goto label5;

     label3:
        $r6 := @caughtexception;

     label4:
        virtualinvoke $r3.<java.awt.Graphics: void dispose()>();

        throw $r6;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void invalidate()
    {
        org.jdesktop.swingx.renderer.JRendererCheckBox r0;

        r0 := @this: org.jdesktop.swingx.renderer.JRendererCheckBox;

        return;
    }

    public void validate()
    {
        org.jdesktop.swingx.renderer.JRendererCheckBox r0;

        r0 := @this: org.jdesktop.swingx.renderer.JRendererCheckBox;

        return;
    }

    public void revalidate()
    {
        org.jdesktop.swingx.renderer.JRendererCheckBox r0;

        r0 := @this: org.jdesktop.swingx.renderer.JRendererCheckBox;

        return;
    }

    public void repaint(long, int, int, int, int)
    {
        org.jdesktop.swingx.renderer.JRendererCheckBox r0;
        int i1, i2, i3, i4;
        long l0;

        r0 := @this: org.jdesktop.swingx.renderer.JRendererCheckBox;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        return;
    }

    public void repaint(java.awt.Rectangle)
    {
        java.awt.Rectangle r1;
        org.jdesktop.swingx.renderer.JRendererCheckBox r0;

        r0 := @this: org.jdesktop.swingx.renderer.JRendererCheckBox;

        r1 := @parameter0: java.awt.Rectangle;

        return;
    }

    public void repaint()
    {
        org.jdesktop.swingx.renderer.JRendererCheckBox r0;

        r0 := @this: org.jdesktop.swingx.renderer.JRendererCheckBox;

        return;
    }

    protected void firePropertyChange(java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.jdesktop.swingx.renderer.JRendererCheckBox r2;
        java.lang.Object r3, r4;
        java.lang.String r0, $r1;
        boolean $z0;

        r2 := @this: org.jdesktop.swingx.renderer.JRendererCheckBox;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.lang.Object;

        $r1 = "text";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        specialinvoke r2.<javax.swing.JCheckBox: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>(r0, r3, r4);

     label1:
        return;
    }

    public void firePropertyChange(java.lang.String, boolean, boolean)
    {
        org.jdesktop.swingx.renderer.JRendererCheckBox r0;
        java.lang.String r1;
        boolean z0, z1;

        r0 := @this: org.jdesktop.swingx.renderer.JRendererCheckBox;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        return;
    }
}
