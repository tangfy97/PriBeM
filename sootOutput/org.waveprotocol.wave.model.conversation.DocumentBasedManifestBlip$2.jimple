class org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$2 extends java.lang.Object implements org.waveprotocol.wave.model.adt.ObservableElementList$Listener
{
    final org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip this$0;

    void <init>(org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip)
    {
        org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip r1;
        org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$2 r0;

        r0 := @this: org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$2;

        r1 := @parameter0: org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip;

        r0.<org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$2: org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onValueAdded(org.waveprotocol.wave.model.conversation.ObservableManifestThread)
    {
        org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip $r2;
        org.waveprotocol.wave.model.conversation.ObservableManifestThread r1;
        org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$2 r0;

        r0 := @this: org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$2;

        r1 := @parameter0: org.waveprotocol.wave.model.conversation.ObservableManifestThread;

        $r2 = r0.<org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$2: org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip this$0>;

        staticinvoke <org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip: void access$000(org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip,org.waveprotocol.wave.model.conversation.ObservableManifestThread)>($r2, r1);

        return;
    }

    public void onValueRemoved(org.waveprotocol.wave.model.conversation.ObservableManifestThread)
    {
        org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip $r2;
        org.waveprotocol.wave.model.conversation.ObservableManifestThread r0;
        org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$2 r1;

        r1 := @this: org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$2;

        r0 := @parameter0: org.waveprotocol.wave.model.conversation.ObservableManifestThread;

        interfaceinvoke r0.<org.waveprotocol.wave.model.conversation.ObservableManifestThread: void detachListeners()>();

        $r2 = r1.<org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$2: org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip this$0>;

        staticinvoke <org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip: void access$100(org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip,org.waveprotocol.wave.model.conversation.ObservableManifestThread)>($r2, r0);

        return;
    }

    public volatile void onValueRemoved(java.lang.Object)
    {
        java.lang.Object r1;
        org.waveprotocol.wave.model.conversation.ObservableManifestThread $r2;
        org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$2 r0;

        r0 := @this: org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.conversation.ObservableManifestThread) r1;

        virtualinvoke r0.<org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$2: void onValueRemoved(org.waveprotocol.wave.model.conversation.ObservableManifestThread)>($r2);

        return;
    }

    public volatile void onValueAdded(java.lang.Object)
    {
        java.lang.Object r1;
        org.waveprotocol.wave.model.conversation.ObservableManifestThread $r2;
        org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$2 r0;

        r0 := @this: org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.conversation.ObservableManifestThread) r1;

        virtualinvoke r0.<org.waveprotocol.wave.model.conversation.DocumentBasedManifestBlip$2: void onValueAdded(org.waveprotocol.wave.model.conversation.ObservableManifestThread)>($r2);

        return;
    }
}
