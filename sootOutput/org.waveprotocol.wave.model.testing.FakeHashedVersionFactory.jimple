public final class org.waveprotocol.wave.model.testing.FakeHashedVersionFactory extends java.lang.Object implements org.waveprotocol.wave.model.version.HashedVersionFactory
{
    public static final org.waveprotocol.wave.model.version.HashedVersionFactory INSTANCE;

    public void <init>()
    {
        org.waveprotocol.wave.model.testing.FakeHashedVersionFactory r0;

        r0 := @this: org.waveprotocol.wave.model.testing.FakeHashedVersionFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.wave.model.version.HashedVersion createVersionZero(org.waveprotocol.wave.model.id.WaveletName)
    {
        org.waveprotocol.wave.model.version.HashedVersion $r0;
        org.waveprotocol.wave.model.id.WaveletName r2;
        org.waveprotocol.wave.model.testing.FakeHashedVersionFactory r1;

        r1 := @this: org.waveprotocol.wave.model.testing.FakeHashedVersionFactory;

        r2 := @parameter0: org.waveprotocol.wave.model.id.WaveletName;

        $r0 = staticinvoke <org.waveprotocol.wave.model.version.HashedVersion: org.waveprotocol.wave.model.version.HashedVersion unsigned(long)>(0L);

        return $r0;
    }

    public org.waveprotocol.wave.model.version.HashedVersion create(byte[], org.waveprotocol.wave.model.version.HashedVersion, int)
    {
        byte[] r3;
        org.waveprotocol.wave.model.testing.FakeHashedVersionFactory r2;
        long $l0, $l2, $l3;
        org.waveprotocol.wave.model.version.HashedVersion r0, $r1;
        int i1;

        r2 := @this: org.waveprotocol.wave.model.testing.FakeHashedVersionFactory;

        r3 := @parameter0: byte[];

        r0 := @parameter1: org.waveprotocol.wave.model.version.HashedVersion;

        i1 := @parameter2: int;

        $l0 = virtualinvoke r0.<org.waveprotocol.wave.model.version.HashedVersion: long getVersion()>();

        $l2 = (long) i1;

        $l3 = $l0 + $l2;

        $r1 = staticinvoke <org.waveprotocol.wave.model.version.HashedVersion: org.waveprotocol.wave.model.version.HashedVersion unsigned(long)>($l3);

        return $r1;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.model.testing.FakeHashedVersionFactory $r0;

        $r0 = new org.waveprotocol.wave.model.testing.FakeHashedVersionFactory;

        specialinvoke $r0.<org.waveprotocol.wave.model.testing.FakeHashedVersionFactory: void <init>()>();

        <org.waveprotocol.wave.model.testing.FakeHashedVersionFactory: org.waveprotocol.wave.model.version.HashedVersionFactory INSTANCE> = $r0;

        return;
    }
}
