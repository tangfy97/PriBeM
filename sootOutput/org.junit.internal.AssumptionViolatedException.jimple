public class org.junit.internal.AssumptionViolatedException extends java.lang.RuntimeException implements org.hamcrest.SelfDescribing
{
    private static final long serialVersionUID;
    private final java.lang.String fAssumption;
    private final boolean fValueMatcher;
    private final java.lang.Object fValue;
    private final org.hamcrest.Matcher fMatcher;

    public void <init>(java.lang.String, boolean, java.lang.Object, org.hamcrest.Matcher)
    {
        java.lang.Throwable $r4;
        org.hamcrest.Matcher r3;
        java.lang.Object r1;
        org.junit.internal.AssumptionViolatedException r0;
        java.lang.String r2;
        boolean $z0, z1;

        r0 := @this: org.junit.internal.AssumptionViolatedException;

        r2 := @parameter0: java.lang.String;

        z1 := @parameter1: boolean;

        r1 := @parameter2: java.lang.Object;

        r3 := @parameter3: org.hamcrest.Matcher;

        $z0 = r1 instanceof java.lang.Throwable;

        if $z0 == 0 goto label1;

        $r4 = (java.lang.Throwable) r1;

        goto label2;

     label1:
        $r4 = null;

     label2:
        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        r0.<org.junit.internal.AssumptionViolatedException: java.lang.String fAssumption> = r2;

        r0.<org.junit.internal.AssumptionViolatedException: java.lang.Object fValue> = r1;

        r0.<org.junit.internal.AssumptionViolatedException: org.hamcrest.Matcher fMatcher> = r3;

        r0.<org.junit.internal.AssumptionViolatedException: boolean fValueMatcher> = z1;

        return;
    }

    public void <init>(java.lang.Object, org.hamcrest.Matcher)
    {
        java.lang.Object r1;
        org.junit.internal.AssumptionViolatedException r0;
        org.hamcrest.Matcher r2;

        r0 := @this: org.junit.internal.AssumptionViolatedException;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.hamcrest.Matcher;

        specialinvoke r0.<org.junit.internal.AssumptionViolatedException: void <init>(java.lang.String,boolean,java.lang.Object,org.hamcrest.Matcher)>(null, 1, r1, r2);

        return;
    }

    public void <init>(java.lang.String, java.lang.Object, org.hamcrest.Matcher)
    {
        org.hamcrest.Matcher r3;
        java.lang.Object r2;
        org.junit.internal.AssumptionViolatedException r0;
        java.lang.String r1;

        r0 := @this: org.junit.internal.AssumptionViolatedException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: org.hamcrest.Matcher;

        specialinvoke r0.<org.junit.internal.AssumptionViolatedException: void <init>(java.lang.String,boolean,java.lang.Object,org.hamcrest.Matcher)>(r1, 1, r2, r3);

        return;
    }

    public void <init>(java.lang.String)
    {
        org.junit.internal.AssumptionViolatedException r0;
        java.lang.String r1;

        r0 := @this: org.junit.internal.AssumptionViolatedException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.junit.internal.AssumptionViolatedException: void <init>(java.lang.String,boolean,java.lang.Object,org.hamcrest.Matcher)>(r1, 0, null, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        org.junit.internal.AssumptionViolatedException r0;
        java.lang.String r1;

        r0 := @this: org.junit.internal.AssumptionViolatedException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<org.junit.internal.AssumptionViolatedException: void <init>(java.lang.String,boolean,java.lang.Object,org.hamcrest.Matcher)>(r1, 0, r2, null);

        return;
    }

    public java.lang.String getMessage()
    {
        org.junit.internal.AssumptionViolatedException r0;
        java.lang.String $r1;

        r0 := @this: org.junit.internal.AssumptionViolatedException;

        $r1 = staticinvoke <org.hamcrest.StringDescription: java.lang.String asString(org.hamcrest.SelfDescribing)>(r0);

        return $r1;
    }

    public void describeTo(org.hamcrest.Description)
    {
        org.hamcrest.Description r3;
        org.junit.internal.AssumptionViolatedException r0;
        org.hamcrest.Matcher $r5, $r6;
        java.lang.Object $r4;
        java.lang.String $r1, $r2, $r7;
        boolean $z0;

        r0 := @this: org.junit.internal.AssumptionViolatedException;

        r3 := @parameter0: org.hamcrest.Description;

        $r1 = r0.<org.junit.internal.AssumptionViolatedException: java.lang.String fAssumption>;

        if $r1 == null goto label1;

        $r7 = r0.<org.junit.internal.AssumptionViolatedException: java.lang.String fAssumption>;

        interfaceinvoke r3.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>($r7);

     label1:
        $z0 = r0.<org.junit.internal.AssumptionViolatedException: boolean fValueMatcher>;

        if $z0 == 0 goto label3;

        $r2 = r0.<org.junit.internal.AssumptionViolatedException: java.lang.String fAssumption>;

        if $r2 == null goto label2;

        interfaceinvoke r3.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>(": ");

     label2:
        interfaceinvoke r3.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>("got: ");

        $r4 = r0.<org.junit.internal.AssumptionViolatedException: java.lang.Object fValue>;

        interfaceinvoke r3.<org.hamcrest.Description: org.hamcrest.Description appendValue(java.lang.Object)>($r4);

        $r5 = r0.<org.junit.internal.AssumptionViolatedException: org.hamcrest.Matcher fMatcher>;

        if $r5 == null goto label3;

        interfaceinvoke r3.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>(", expected: ");

        $r6 = r0.<org.junit.internal.AssumptionViolatedException: org.hamcrest.Matcher fMatcher>;

        interfaceinvoke r3.<org.hamcrest.Description: org.hamcrest.Description appendDescriptionOf(org.hamcrest.SelfDescribing)>($r6);

     label3:
        return;
    }

    public static void <clinit>()
    {
        <org.junit.internal.AssumptionViolatedException: long serialVersionUID> = 2L;

        return;
    }
}
