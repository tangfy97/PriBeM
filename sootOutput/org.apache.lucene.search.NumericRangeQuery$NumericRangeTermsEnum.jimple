final class org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum extends org.apache.lucene.index.FilteredTermsEnum
{
    private org.apache.lucene.util.BytesRef currentLowerBound;
    private org.apache.lucene.util.BytesRef currentUpperBound;
    private final java.util.LinkedList rangeBounds;
    private final java.util.Comparator termComp;
    static final boolean $assertionsDisabled;
    final org.apache.lucene.search.NumericRangeQuery this$0;

    void <init>(org.apache.lucene.search.NumericRangeQuery, org.apache.lucene.index.TermsEnum)
    {
        byte $b2, $b3;
        org.apache.lucene.index.TermsEnum r2;
        org.apache.lucene.document.FieldType$NumericType $r4, $r6, $r7, $r13, $r14, $r19, $r20, $r24, $r25, $r31, $r32, $r37, $r38, $r43, $r44, $r46, $r47;
        org.apache.lucene.search.NumericRangeQuery r1;
        long $l4, l5, $l6, $l7, l8, $l9;
        java.lang.AssertionError $r51, $r52, $r54, $r55;
        java.lang.Number $r8, $r9, $r10, $r11, $r12, $r16, $r17, $r18, $r22, $r23, $r26, $r27, $r28, $r29, $r30, $r34, $r35, $r36, $r40, $r41;
        int[] $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum r0;
        float $f0, $f1;
        org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum$1 $r53;
        org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum$2 $r56;
        int $i0, $i1, $i10, $i11, i12, $i13, $i14, i15, $i16, $i17, $i19;
        java.util.LinkedList $r50;
        double $d0, $d1;
        java.lang.IllegalArgumentException $r57;
        java.util.Comparator $r49;

        r0 := @this: org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum;

        r1 := @parameter0: org.apache.lucene.search.NumericRangeQuery;

        r2 := @parameter1: org.apache.lucene.index.TermsEnum;

        r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: org.apache.lucene.search.NumericRangeQuery this$0> = r1;

        specialinvoke r0.<org.apache.lucene.index.FilteredTermsEnum: void <init>(org.apache.lucene.index.TermsEnum)>(r2);

        $r50 = new java.util.LinkedList;

        specialinvoke $r50.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: java.util.LinkedList rangeBounds> = $r50;

        $r5 = <org.apache.lucene.search.NumericRangeQuery$1: int[] $SwitchMap$org$apache$lucene$document$FieldType$NumericType>;

        $r4 = r1.<org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.document.FieldType$NumericType dataType>;

        $i0 = virtualinvoke $r4.<org.apache.lucene.document.FieldType$NumericType: int ordinal()>();

        $i1 = $r5[$i0];

        tableswitch($i1)
        {
            case 1: goto label01;
            case 2: goto label01;
            case 3: goto label20;
            case 4: goto label20;
            default: goto label39;
        };

     label01:
        $r25 = r1.<org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.document.FieldType$NumericType dataType>;

        $r24 = <org.apache.lucene.document.FieldType$NumericType: org.apache.lucene.document.FieldType$NumericType LONG>;

        if $r25 != $r24 goto label04;

        $r40 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number min>;

        if $r40 != null goto label02;

        $l4 = -9223372036854775808L;

        goto label03;

     label02:
        $r41 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number min>;

        $l4 = virtualinvoke $r41.<java.lang.Number: long longValue()>();

     label03:
        l5 = $l4;

        goto label08;

     label04:
        $z2 = <org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: boolean $assertionsDisabled>;

        if $z2 != 0 goto label05;

        $r38 = r1.<org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.document.FieldType$NumericType dataType>;

        $r37 = <org.apache.lucene.document.FieldType$NumericType: org.apache.lucene.document.FieldType$NumericType DOUBLE>;

        if $r38 == $r37 goto label05;

        $r51 = new java.lang.AssertionError;

        specialinvoke $r51.<java.lang.AssertionError: void <init>()>();

        throw $r51;

     label05:
        $r26 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number min>;

        if $r26 != null goto label06;

        $l6 = <org.apache.lucene.search.NumericRangeQuery: long LONG_NEGATIVE_INFINITY>;

        goto label07;

     label06:
        $r27 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number min>;

        $d0 = virtualinvoke $r27.<java.lang.Number: double doubleValue()>();

        $l6 = staticinvoke <org.apache.lucene.util.NumericUtils: long doubleToSortableLong(double)>($d0);

     label07:
        l5 = $l6;

     label08:
        $z4 = r1.<org.apache.lucene.search.NumericRangeQuery: boolean minInclusive>;

        if $z4 != 0 goto label10;

        $r36 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number min>;

        if $r36 == null goto label10;

        $b3 = l5 cmp 9223372036854775807L;

        if $b3 != 0 goto label09;

        goto label40;

     label09:
        l5 = l5 + 1L;

     label10:
        $r43 = r1.<org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.document.FieldType$NumericType dataType>;

        $r44 = <org.apache.lucene.document.FieldType$NumericType: org.apache.lucene.document.FieldType$NumericType LONG>;

        if $r43 != $r44 goto label13;

        $r34 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number max>;

        if $r34 != null goto label11;

        $l7 = 9223372036854775807L;

        goto label12;

     label11:
        $r35 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number max>;

        $l7 = virtualinvoke $r35.<java.lang.Number: long longValue()>();

     label12:
        l8 = $l7;

        goto label17;

     label13:
        $z3 = <org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: boolean $assertionsDisabled>;

        if $z3 != 0 goto label14;

        $r32 = r1.<org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.document.FieldType$NumericType dataType>;

        $r31 = <org.apache.lucene.document.FieldType$NumericType: org.apache.lucene.document.FieldType$NumericType DOUBLE>;

        if $r32 == $r31 goto label14;

        $r52 = new java.lang.AssertionError;

        specialinvoke $r52.<java.lang.AssertionError: void <init>()>();

        throw $r52;

     label14:
        $r28 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number max>;

        if $r28 != null goto label15;

        $l9 = <org.apache.lucene.search.NumericRangeQuery: long LONG_POSITIVE_INFINITY>;

        goto label16;

     label15:
        $r29 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number max>;

        $d1 = virtualinvoke $r29.<java.lang.Number: double doubleValue()>();

        $l9 = staticinvoke <org.apache.lucene.util.NumericUtils: long doubleToSortableLong(double)>($d1);

     label16:
        l8 = $l9;

     label17:
        $z5 = r1.<org.apache.lucene.search.NumericRangeQuery: boolean maxInclusive>;

        if $z5 != 0 goto label19;

        $r30 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number max>;

        if $r30 == null goto label19;

        $b2 = l8 cmp -9223372036854775808L;

        if $b2 != 0 goto label18;

        goto label40;

     label18:
        l8 = l8 - 1L;

     label19:
        $r53 = new org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum$1;

        specialinvoke $r53.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum$1: void <init>(org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum,org.apache.lucene.search.NumericRangeQuery)>(r0, r1);

        $i10 = r1.<org.apache.lucene.search.NumericRangeQuery: int precisionStep>;

        staticinvoke <org.apache.lucene.util.NumericUtils: void splitLongRange(org.apache.lucene.util.NumericUtils$LongRangeBuilder,int,long,long)>($r53, $i10, l5, l8);

        goto label40;

     label20:
        $r7 = r1.<org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.document.FieldType$NumericType dataType>;

        $r6 = <org.apache.lucene.document.FieldType$NumericType: org.apache.lucene.document.FieldType$NumericType INT>;

        if $r7 != $r6 goto label23;

        $r22 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number min>;

        if $r22 != null goto label21;

        $i11 = -2147483648;

        goto label22;

     label21:
        $r23 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number min>;

        $i11 = virtualinvoke $r23.<java.lang.Number: int intValue()>();

     label22:
        i12 = $i11;

        goto label27;

     label23:
        $z0 = <org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: boolean $assertionsDisabled>;

        if $z0 != 0 goto label24;

        $r20 = r1.<org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.document.FieldType$NumericType dataType>;

        $r19 = <org.apache.lucene.document.FieldType$NumericType: org.apache.lucene.document.FieldType$NumericType FLOAT>;

        if $r20 == $r19 goto label24;

        $r54 = new java.lang.AssertionError;

        specialinvoke $r54.<java.lang.AssertionError: void <init>()>();

        throw $r54;

     label24:
        $r8 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number min>;

        if $r8 != null goto label25;

        $i13 = <org.apache.lucene.search.NumericRangeQuery: int INT_NEGATIVE_INFINITY>;

        goto label26;

     label25:
        $r9 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number min>;

        $f0 = virtualinvoke $r9.<java.lang.Number: float floatValue()>();

        $i13 = staticinvoke <org.apache.lucene.util.NumericUtils: int floatToSortableInt(float)>($f0);

     label26:
        i12 = $i13;

     label27:
        $z6 = r1.<org.apache.lucene.search.NumericRangeQuery: boolean minInclusive>;

        if $z6 != 0 goto label29;

        $r18 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number min>;

        if $r18 == null goto label29;

        if i12 != 2147483647 goto label28;

        goto label40;

     label28:
        i12 = i12 + 1;

     label29:
        $r46 = r1.<org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.document.FieldType$NumericType dataType>;

        $r47 = <org.apache.lucene.document.FieldType$NumericType: org.apache.lucene.document.FieldType$NumericType INT>;

        if $r46 != $r47 goto label32;

        $r16 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number max>;

        if $r16 != null goto label30;

        $i14 = 2147483647;

        goto label31;

     label30:
        $r17 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number max>;

        $i14 = virtualinvoke $r17.<java.lang.Number: int intValue()>();

     label31:
        i15 = $i14;

        goto label36;

     label32:
        $z1 = <org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: boolean $assertionsDisabled>;

        if $z1 != 0 goto label33;

        $r14 = r1.<org.apache.lucene.search.NumericRangeQuery: org.apache.lucene.document.FieldType$NumericType dataType>;

        $r13 = <org.apache.lucene.document.FieldType$NumericType: org.apache.lucene.document.FieldType$NumericType FLOAT>;

        if $r14 == $r13 goto label33;

        $r55 = new java.lang.AssertionError;

        specialinvoke $r55.<java.lang.AssertionError: void <init>()>();

        throw $r55;

     label33:
        $r10 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number max>;

        if $r10 != null goto label34;

        $i16 = <org.apache.lucene.search.NumericRangeQuery: int INT_POSITIVE_INFINITY>;

        goto label35;

     label34:
        $r11 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number max>;

        $f1 = virtualinvoke $r11.<java.lang.Number: float floatValue()>();

        $i16 = staticinvoke <org.apache.lucene.util.NumericUtils: int floatToSortableInt(float)>($f1);

     label35:
        i15 = $i16;

     label36:
        $z7 = r1.<org.apache.lucene.search.NumericRangeQuery: boolean maxInclusive>;

        if $z7 != 0 goto label38;

        $r12 = r1.<org.apache.lucene.search.NumericRangeQuery: java.lang.Number max>;

        if $r12 == null goto label38;

        if i15 != -2147483648 goto label37;

        goto label40;

     label37:
        $i19 = (int) -1;

        i15 = i15 + $i19;

     label38:
        $r56 = new org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum$2;

        specialinvoke $r56.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum$2: void <init>(org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum,org.apache.lucene.search.NumericRangeQuery)>(r0, r1);

        $i17 = r1.<org.apache.lucene.search.NumericRangeQuery: int precisionStep>;

        staticinvoke <org.apache.lucene.util.NumericUtils: void splitIntRange(org.apache.lucene.util.NumericUtils$IntRangeBuilder,int,int,int)>($r56, $i17, i12, i15);

        goto label40;

     label39:
        $r57 = new java.lang.IllegalArgumentException;

        specialinvoke $r57.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid NumericType");

        throw $r57;

     label40:
        $r49 = virtualinvoke r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: java.util.Comparator getComparator()>();

        r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: java.util.Comparator termComp> = $r49;

        return;
    }

    private void nextRange()
    {
        java.lang.AssertionError $r8, $r10;
        int $i0, $i1, $i2;
        java.util.LinkedList $r1, $r9, $r11;
        boolean $z0, $z1;
        org.apache.lucene.util.BytesRef $r3, $r4, $r5, $r6, $r13;
        org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum r0;
        java.lang.Object $r2, $r12;
        java.util.Comparator $r7;

        r0 := @this: org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum;

        $z0 = <org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r9 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: java.util.LinkedList rangeBounds>;

        $i1 = virtualinvoke $r9.<java.util.LinkedList: int size()>();

        $i2 = $i1 % 2;

        if $i2 == 0 goto label1;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label1:
        $r1 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: java.util.LinkedList rangeBounds>;

        $r2 = virtualinvoke $r1.<java.util.LinkedList: java.lang.Object removeFirst()>();

        $r3 = (org.apache.lucene.util.BytesRef) $r2;

        r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: org.apache.lucene.util.BytesRef currentLowerBound> = $r3;

        $z1 = <org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r4 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: org.apache.lucene.util.BytesRef currentUpperBound>;

        if $r4 == null goto label2;

        $r7 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: java.util.Comparator termComp>;

        $r6 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: org.apache.lucene.util.BytesRef currentUpperBound>;

        $r5 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: org.apache.lucene.util.BytesRef currentLowerBound>;

        $i0 = interfaceinvoke $r7.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $i0 <= 0 goto label2;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>("The current upper bound must be <= the new lower bound");

        throw $r8;

     label2:
        $r11 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: java.util.LinkedList rangeBounds>;

        $r12 = virtualinvoke $r11.<java.util.LinkedList: java.lang.Object removeFirst()>();

        $r13 = (org.apache.lucene.util.BytesRef) $r12;

        r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: org.apache.lucene.util.BytesRef currentUpperBound> = $r13;

        return;
    }

    protected final org.apache.lucene.util.BytesRef nextSeekTerm(org.apache.lucene.util.BytesRef)
    {
        org.apache.lucene.util.BytesRef r4, $r5, $r7, $r9;
        java.lang.AssertionError $r3;
        org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum r0;
        int $i0, $i1, $i2;
        java.util.LinkedList $r1, $r2;
        java.util.Comparator $r6, $r8;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum;

        r4 := @parameter0: org.apache.lucene.util.BytesRef;

     label1:
        $r1 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: java.util.LinkedList rangeBounds>;

        $i0 = virtualinvoke $r1.<java.util.LinkedList: int size()>();

        if $i0 < 2 goto label5;

        specialinvoke r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: void nextRange()>();

        if r4 == null goto label2;

        $r8 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: java.util.Comparator termComp>;

        $r7 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: org.apache.lucene.util.BytesRef currentUpperBound>;

        $i2 = interfaceinvoke $r8.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r4, $r7);

        if $i2 <= 0 goto label2;

        goto label1;

     label2:
        if r4 == null goto label3;

        $r6 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: java.util.Comparator termComp>;

        $r5 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: org.apache.lucene.util.BytesRef currentLowerBound>;

        $i1 = interfaceinvoke $r6.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r4, $r5);

        if $i1 <= 0 goto label3;

        $r9 = r4;

        goto label4;

     label3:
        $r9 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: org.apache.lucene.util.BytesRef currentLowerBound>;

     label4:
        return $r9;

     label5:
        $z0 = <org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: boolean $assertionsDisabled>;

        if $z0 != 0 goto label6;

        $r2 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: java.util.LinkedList rangeBounds>;

        $z1 = virtualinvoke $r2.<java.util.LinkedList: boolean isEmpty()>();

        if $z1 != 0 goto label6;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label6:
        r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: org.apache.lucene.util.BytesRef currentUpperBound> = null;

        r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: org.apache.lucene.util.BytesRef currentLowerBound> = null;

        return null;
    }

    protected final org.apache.lucene.index.FilteredTermsEnum$AcceptStatus accept(org.apache.lucene.util.BytesRef)
    {
        org.apache.lucene.util.BytesRef $r1, r3, $r9;
        org.apache.lucene.index.FilteredTermsEnum$AcceptStatus $r7, $r8, $r11;
        org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum r0;
        int $i0, $i1;
        java.lang.Object $r6;
        java.util.LinkedList $r2, $r4;
        java.util.Comparator $r5, $r10;
        boolean $z0;

        r0 := @this: org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum;

        r3 := @parameter0: org.apache.lucene.util.BytesRef;

     label1:
        $r1 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: org.apache.lucene.util.BytesRef currentUpperBound>;

        if $r1 == null goto label2;

        $r10 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: java.util.Comparator termComp>;

        $r9 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: org.apache.lucene.util.BytesRef currentUpperBound>;

        $i1 = interfaceinvoke $r10.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r3, $r9);

        if $i1 <= 0 goto label5;

     label2:
        $r2 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: java.util.LinkedList rangeBounds>;

        $z0 = virtualinvoke $r2.<java.util.LinkedList: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        $r8 = <org.apache.lucene.index.FilteredTermsEnum$AcceptStatus: org.apache.lucene.index.FilteredTermsEnum$AcceptStatus END>;

        return $r8;

     label3:
        $r5 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: java.util.Comparator termComp>;

        $r4 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: java.util.LinkedList rangeBounds>;

        $r6 = virtualinvoke $r4.<java.util.LinkedList: java.lang.Object getFirst()>();

        $i0 = interfaceinvoke $r5.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r3, $r6);

        if $i0 >= 0 goto label4;

        $r7 = <org.apache.lucene.index.FilteredTermsEnum$AcceptStatus: org.apache.lucene.index.FilteredTermsEnum$AcceptStatus NO_AND_SEEK>;

        return $r7;

     label4:
        specialinvoke r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: void nextRange()>();

        goto label1;

     label5:
        $r11 = <org.apache.lucene.index.FilteredTermsEnum$AcceptStatus: org.apache.lucene.index.FilteredTermsEnum$AcceptStatus YES>;

        return $r11;
    }

    static java.util.LinkedList access$000(org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum)
    {
        org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum r0;
        java.util.LinkedList $r1;

        r0 := @parameter0: org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum;

        $r1 = r0.<org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: java.util.LinkedList rangeBounds>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/search/NumericRangeQuery;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.search.NumericRangeQuery$NumericRangeTermsEnum: boolean $assertionsDisabled> = $z1;

        return;
    }
}
