class com.googlecode.mp4parser.authoring.tracks.AC3TrackImpl$1SampleImpl extends java.lang.Object implements com.googlecode.mp4parser.authoring.Sample
{
    private final long start;
    private final long size;
    private final com.googlecode.mp4parser.DataSource dataSource;
    final com.googlecode.mp4parser.authoring.tracks.AC3TrackImpl this$0;

    public void <init>(com.googlecode.mp4parser.authoring.tracks.AC3TrackImpl, long, long, com.googlecode.mp4parser.DataSource)
    {
        com.googlecode.mp4parser.DataSource r2;
        com.googlecode.mp4parser.authoring.tracks.AC3TrackImpl$1SampleImpl r0;
        long l0, l1;
        com.googlecode.mp4parser.authoring.tracks.AC3TrackImpl r1;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.AC3TrackImpl$1SampleImpl;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.tracks.AC3TrackImpl;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r2 := @parameter3: com.googlecode.mp4parser.DataSource;

        r0.<com.googlecode.mp4parser.authoring.tracks.AC3TrackImpl$1SampleImpl: com.googlecode.mp4parser.authoring.tracks.AC3TrackImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.tracks.AC3TrackImpl$1SampleImpl: long start> = l0;

        r0.<com.googlecode.mp4parser.authoring.tracks.AC3TrackImpl$1SampleImpl: long size> = l1;

        r0.<com.googlecode.mp4parser.authoring.tracks.AC3TrackImpl$1SampleImpl: com.googlecode.mp4parser.DataSource dataSource> = r2;

        return;
    }

    public void writeTo(java.nio.channels.WritableByteChannel) throws java.io.IOException
    {
        com.googlecode.mp4parser.DataSource $r2;
        com.googlecode.mp4parser.authoring.tracks.AC3TrackImpl$1SampleImpl r0;
        java.nio.channels.WritableByteChannel r1;
        long $l0, $l1;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.AC3TrackImpl$1SampleImpl;

        r1 := @parameter0: java.nio.channels.WritableByteChannel;

        $r2 = r0.<com.googlecode.mp4parser.authoring.tracks.AC3TrackImpl$1SampleImpl: com.googlecode.mp4parser.DataSource dataSource>;

        $l1 = r0.<com.googlecode.mp4parser.authoring.tracks.AC3TrackImpl$1SampleImpl: long start>;

        $l0 = r0.<com.googlecode.mp4parser.authoring.tracks.AC3TrackImpl$1SampleImpl: long size>;

        interfaceinvoke $r2.<com.googlecode.mp4parser.DataSource: long transferTo(long,long,java.nio.channels.WritableByteChannel)>($l1, $l0, r1);

        return;
    }

    public long getSize()
    {
        long $l0;
        com.googlecode.mp4parser.authoring.tracks.AC3TrackImpl$1SampleImpl r0;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.AC3TrackImpl$1SampleImpl;

        $l0 = r0.<com.googlecode.mp4parser.authoring.tracks.AC3TrackImpl$1SampleImpl: long size>;

        return $l0;
    }

    public java.nio.ByteBuffer asByteBuffer()
    {
        com.googlecode.mp4parser.DataSource $r1;
        com.googlecode.mp4parser.authoring.tracks.AC3TrackImpl$1SampleImpl r0;
        long $l0, $l1;
        java.io.IOException $r3;
        java.lang.RuntimeException $r4;
        java.nio.ByteBuffer $r2;

        r0 := @this: com.googlecode.mp4parser.authoring.tracks.AC3TrackImpl$1SampleImpl;

     label1:
        $r1 = r0.<com.googlecode.mp4parser.authoring.tracks.AC3TrackImpl$1SampleImpl: com.googlecode.mp4parser.DataSource dataSource>;

        $l1 = r0.<com.googlecode.mp4parser.authoring.tracks.AC3TrackImpl$1SampleImpl: long start>;

        $l0 = r0.<com.googlecode.mp4parser.authoring.tracks.AC3TrackImpl$1SampleImpl: long size>;

        $r2 = interfaceinvoke $r1.<com.googlecode.mp4parser.DataSource: java.nio.ByteBuffer map(long,long)>($l1, $l0);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
