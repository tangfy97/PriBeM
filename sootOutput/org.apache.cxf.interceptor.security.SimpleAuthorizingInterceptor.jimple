public class org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor extends org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor
{
    protected java.util.Map methodRolesMap;
    protected java.util.Map userRolesMap;
    protected java.util.List globalRoles;
    private boolean checkConfiguredRolesOnly;

    public void <init>()
    {
        java.util.List $r3;
        java.util.Map $r2;
        java.util.HashMap $r1;
        org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor r0;

        r0 := @this: org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor;

        specialinvoke r0.<org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor: java.util.Map methodRolesMap> = $r1;

        $r2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        r0.<org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor: java.util.Map userRolesMap> = $r2;

        $r3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor: java.util.List globalRoles> = $r3;

        return;
    }

    protected boolean isUserInRole(org.apache.cxf.security.SecurityContext, java.util.List, boolean)
    {
        java.util.Map $r1, $r3;
        java.lang.String $r5, r11;
        org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor r0;
        boolean $z0, $z1, $z2, $z3, $z4, z5, $z6, $z7;
        org.apache.cxf.security.SecurityContext r2;
        java.util.Iterator $r9;
        java.util.List r7, r8;
        java.security.Principal $r4;
        java.lang.Object $r6, $r10;

        r0 := @this: org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor;

        r2 := @parameter0: org.apache.cxf.security.SecurityContext;

        r8 := @parameter1: java.util.List;

        z5 := @parameter2: boolean;

        $z0 = r0.<org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor: boolean checkConfiguredRolesOnly>;

        if $z0 != 0 goto label1;

        $z6 = specialinvoke r0.<org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor: boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)>(r2, r8, z5);

        if $z6 != 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor: java.util.Map userRolesMap>;

        $z1 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        if $z1 != 0 goto label6;

        $r3 = r0.<org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor: java.util.Map userRolesMap>;

        $r4 = interfaceinvoke r2.<org.apache.cxf.security.SecurityContext: java.security.Principal getUserPrincipal()>();

        $r5 = interfaceinvoke $r4.<java.security.Principal: java.lang.String getName()>();

        $r6 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        r7 = (java.util.List) $r6;

        if r7 != null goto label2;

        return 0;

     label2:
        $r9 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.lang.String) $r10;

        $z4 = interfaceinvoke r7.<java.util.List: boolean contains(java.lang.Object)>(r11);

        if $z4 == 0 goto label4;

        return 1;

     label4:
        goto label3;

     label5:
        return 0;

     label6:
        $z2 = r0.<org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor: boolean checkConfiguredRolesOnly>;

        if $z2 != 0 goto label7;

        $z7 = 1;

        goto label8;

     label7:
        $z7 = 0;

     label8:
        return $z7;
    }

    protected java.lang.String createMethodSig(java.lang.reflect.Method)
    {
        java.lang.Class[] $r7;
        int i0, i1;
        java.lang.StringBuilder $r0, $r4, $r6;
        java.lang.Class $r2, r9;
        java.lang.String $r3, $r5, $r8, $r10;
        java.lang.reflect.Method r1;
        org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor r11;
        boolean z0;

        r11 := @this: org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor;

        r1 := @parameter0: java.lang.reflect.Method;

        $r0 = new java.lang.StringBuilder;

        $r2 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r5 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        z0 = 1;

        $r7 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        i0 = lengthof $r7;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r9 = $r7[i1];

        if z0 != 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        z0 = 0;

     label2:
        $r10 = virtualinvoke r9.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        i1 = i1 + 1;

        goto label1;

     label3:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r8 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    protected java.util.List getExpectedRoles(java.lang.reflect.Method)
    {
        java.util.List $r5, r9;
        java.util.Map $r2, $r6;
        java.lang.Object $r4, $r8;
        java.lang.String $r3, $r7;
        java.lang.reflect.Method r1;
        org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor r0;

        r0 := @this: org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor;

        r1 := @parameter0: java.lang.reflect.Method;

        $r2 = r0.<org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor: java.util.Map methodRolesMap>;

        $r3 = virtualinvoke r0.<org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor: java.lang.String createMethodSig(java.lang.reflect.Method)>(r1);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r9 = (java.util.List) $r4;

        if r9 != null goto label1;

        $r6 = r0.<org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor: java.util.Map methodRolesMap>;

        $r7 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.String getName()>();

        $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        r9 = (java.util.List) $r8;

     label1:
        if r9 == null goto label2;

        return r9;

     label2:
        $r5 = r0.<org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor: java.util.List globalRoles>;

        return $r5;
    }

    public void setMethodRolesMap(java.util.Map)
    {
        java.util.Map r1, $r2, $r3;
        org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor r0;

        r0 := @this: org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor;

        r1 := @parameter0: java.util.Map;

        $r2 = r0.<org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor: java.util.Map methodRolesMap>;

        $r3 = staticinvoke <org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor: java.util.Map parseRolesMap(java.util.Map)>(r1);

        interfaceinvoke $r2.<java.util.Map: void putAll(java.util.Map)>($r3);

        return;
    }

    public void setUserRolesMap(java.util.Map)
    {
        org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor r0;
        java.util.Map r1, $r2;

        r0 := @this: org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor;

        r1 := @parameter0: java.util.Map;

        $r2 = staticinvoke <org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor: java.util.Map parseRolesMap(java.util.Map)>(r1);

        r0.<org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor: java.util.Map userRolesMap> = $r2;

        return;
    }

    public void setGlobalRoles(java.lang.String)
    {
        java.util.List $r3;
        java.lang.String[] $r2;
        java.lang.String r1;
        org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor r0;

        r0 := @this: org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.apache.cxf.common.util.StringUtils: java.lang.String[] split(java.lang.String,java.lang.String)>(r1, " ");

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        r0.<org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor: java.util.List globalRoles> = $r3;

        return;
    }

    public void setCheckConfiguredRolesOnly(boolean)
    {
        org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor r0;
        boolean z0;

        r0 := @this: org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor;

        z0 := @parameter0: boolean;

        r0.<org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor: boolean checkConfiguredRolesOnly> = z0;

        return;
    }

    private static java.util.Map parseRolesMap(java.util.Map)
    {
        java.util.Map$Entry r5;
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.util.HashMap $r0;
        java.lang.String[] $r9;
        java.util.List $r10;
        java.util.Map r1;
        java.lang.Object $r4, $r6, $r7;
        java.lang.String $r8;
        boolean $z0;

        r1 := @parameter0: java.util.Map;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r6 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r8 = (java.lang.String) $r7;

        $r9 = staticinvoke <org.apache.cxf.common.util.StringUtils: java.lang.String[] split(java.lang.String,java.lang.String)>($r8, " ");

        $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r9);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r10);

        goto label1;

     label2:
        return $r0;
    }
}
