public class org.apache.poi.xwpf.usermodel.XWPFParagraph extends java.lang.Object implements org.apache.poi.xwpf.usermodel.IBodyElement, org.apache.poi.xwpf.usermodel.IRunBody, org.apache.poi.xwpf.usermodel.ISDTContents
{
    private final org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph;
    protected org.apache.poi.xwpf.usermodel.IBody part;
    protected org.apache.poi.xwpf.usermodel.XWPFDocument document;
    protected java.util.List runs;
    protected java.util.List iruns;
    private java.lang.StringBuffer footnoteText;

    public void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP, org.apache.poi.xwpf.usermodel.IBody)
    {
        org.apache.poi.xwpf.usermodel.IBody r3;
        org.apache.poi.xwpf.usermodel.XWPFDocument $r4, $r5, $r23, $r33;
        java.lang.NullPointerException $r35;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0, r29;
        java.math.BigInteger $r19, $r24, $r34;
        boolean $z0, $z1, $z2, $z3, z4, $z5;
        org.apache.poi.xwpf.usermodel.XWPFRun r12;
        java.util.List $r9, $r25;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r13;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP r2, $r8;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFtnEdnRef r16;
        org.apache.xmlbeans.XmlCursor $r14;
        java.util.ArrayList $r6, $r7;
        java.lang.StringBuffer $r1, $r17, $r18, $r20, $r27, $r30, $r32;
        org.w3c.dom.Node $r21;
        int $i0, $i1;
        org.apache.xmlbeans.XmlObject $r15;
        java.lang.String $r22, $r31;
        java.util.Iterator $r10, $r26;
        org.apache.poi.xwpf.usermodel.XWPFFootnote $r36;
        java.lang.Object $r11, $r28;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        r2 := @parameter0: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP;

        r3 := @parameter1: org.apache.poi.xwpf.usermodel.IBody;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.lang.StringBuffer footnoteText> = $r1;

        r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph> = r2;

        r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.apache.poi.xwpf.usermodel.IBody part> = r3;

        $r4 = interfaceinvoke r3.<org.apache.poi.xwpf.usermodel.IBody: org.apache.poi.xwpf.usermodel.XWPFDocument getXWPFDocument()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.apache.poi.xwpf.usermodel.XWPFDocument document> = $r4;

        $r5 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.apache.poi.xwpf.usermodel.XWPFDocument document>;

        if $r5 != null goto label01;

        $r35 = new java.lang.NullPointerException;

        specialinvoke $r35.<java.lang.NullPointerException: void <init>()>();

        throw $r35;

     label01:
        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.util.List runs> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.util.List iruns> = $r7;

        $r8 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: void buildRunsInOrderFromXml(org.apache.xmlbeans.XmlObject)>($r8);

        $r9 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.util.List runs>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.apache.poi.xwpf.usermodel.XWPFRun) $r11;

        $r13 = virtualinvoke r12.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR getCTR()>();

        $r14 = interfaceinvoke $r13.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.apache.xmlbeans.XmlCursor newCursor()>();

        interfaceinvoke $r14.<org.apache.xmlbeans.XmlCursor: void selectPath(java.lang.String)>("child::*");

     label03:
        $z1 = interfaceinvoke $r14.<org.apache.xmlbeans.XmlCursor: boolean toNextSelection()>();

        if $z1 == 0 goto label10;

        $r15 = interfaceinvoke $r14.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        $z2 = $r15 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFtnEdnRef;

        if $z2 == 0 goto label09;

        r16 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFtnEdnRef) $r15;

        $r17 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.lang.StringBuffer footnoteText>;

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" [");

        $r19 = interfaceinvoke r16.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFtnEdnRef: java.math.BigInteger getId()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r19);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r21 = interfaceinvoke r16.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFtnEdnRef: org.w3c.dom.Node getDomNode()>();

        $r22 = interfaceinvoke $r21.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $z3 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>("footnoteReference");

        if $z3 == 0 goto label04;

        $r33 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.apache.poi.xwpf.usermodel.XWPFDocument document>;

        $r34 = interfaceinvoke r16.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFtnEdnRef: java.math.BigInteger getId()>();

        $i1 = virtualinvoke $r34.<java.math.BigInteger: int intValue()>();

        $r36 = virtualinvoke $r33.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFFootnote getFootnoteByID(int)>($i1);

        goto label05;

     label04:
        $r23 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.apache.poi.xwpf.usermodel.XWPFDocument document>;

        $r24 = interfaceinvoke r16.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTFtnEdnRef: java.math.BigInteger getId()>();

        $i0 = virtualinvoke $r24.<java.math.BigInteger: int intValue()>();

        $r36 = virtualinvoke $r23.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFFootnote getEndnoteByID(int)>($i0);

     label05:
        z4 = 1;

        $r25 = virtualinvoke $r36.<org.apache.poi.xwpf.usermodel.XWPFFootnote: java.util.List getParagraphs()>();

        $r26 = interfaceinvoke $r25.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z5 = interfaceinvoke $r26.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label08;

        $r28 = interfaceinvoke $r26.<java.util.Iterator: java.lang.Object next()>();

        r29 = (org.apache.poi.xwpf.usermodel.XWPFParagraph) $r28;

        if z4 != 0 goto label07;

        $r32 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.lang.StringBuffer footnoteText>;

        virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        z4 = 0;

     label07:
        $r30 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.lang.StringBuffer footnoteText>;

        $r31 = virtualinvoke r29.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.lang.String getText()>();

        virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r31);

        goto label06;

     label08:
        $r27 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.lang.StringBuffer footnoteText>;

        virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] ");

     label09:
        goto label03;

     label10:
        interfaceinvoke $r14.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        goto label02;

     label11:
        return;
    }

    private void buildRunsInOrderFromXml(org.apache.xmlbeans.XmlObject)
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSimpleField $r4;
        org.apache.poi.xwpf.usermodel.IBody $r19, $r23;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTHyperlink r36;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        org.apache.poi.xwpf.usermodel.XWPFRun $r8, $r15, $r32;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRunTrackChange $r11;
        java.util.List $r5, $r9, $r10, $r12, $r16, $r17, $r21, $r25, $r26, $r30, $r31, $r34, $r35;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r33, r37, r38, r39;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSdtRun $r20;
        org.apache.xmlbeans.XmlCursor $r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSdtBlock $r24;
        org.apache.xmlbeans.XmlObject r0, $r2;
        org.apache.poi.xwpf.usermodel.XWPFSDT $r18, $r22;
        java.util.Iterator $r6, $r13, $r27;
        org.apache.poi.xwpf.usermodel.XWPFHyperlinkRun $r29;
        java.lang.Object $r7, $r14, $r28;

        r3 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        r0 := @parameter0: org.apache.xmlbeans.XmlObject;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlCursor newCursor()>();

        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void selectPath(java.lang.String)>("child::*");

     label01:
        $z0 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: boolean toNextSelection()>();

        if $z0 == 0 goto label12;

        $r2 = interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        $z1 = $r2 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR;

        if $z1 == 0 goto label02;

        $r32 = new org.apache.poi.xwpf.usermodel.XWPFRun;

        $r33 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR) $r2;

        specialinvoke $r32.<org.apache.poi.xwpf.usermodel.XWPFRun: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR,org.apache.poi.xwpf.usermodel.XWPFParagraph)>($r33, r3);

        $r34 = r3.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.util.List runs>;

        interfaceinvoke $r34.<java.util.List: boolean add(java.lang.Object)>($r32);

        $r35 = r3.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.util.List iruns>;

        interfaceinvoke $r35.<java.util.List: boolean add(java.lang.Object)>($r32);

     label02:
        $z2 = $r2 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTHyperlink;

        if $z2 == 0 goto label04;

        r36 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTHyperlink) $r2;

        $r26 = interfaceinvoke r36.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTHyperlink: java.util.List getRList()>();

        $r27 = interfaceinvoke $r26.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z10 = interfaceinvoke $r27.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label04;

        $r28 = interfaceinvoke $r27.<java.util.Iterator: java.lang.Object next()>();

        r37 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR) $r28;

        $r29 = new org.apache.poi.xwpf.usermodel.XWPFHyperlinkRun;

        specialinvoke $r29.<org.apache.poi.xwpf.usermodel.XWPFHyperlinkRun: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTHyperlink,org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR,org.apache.poi.xwpf.usermodel.IRunBody)>(r36, r37, r3);

        $r30 = r3.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.util.List runs>;

        interfaceinvoke $r30.<java.util.List: boolean add(java.lang.Object)>($r29);

        $r31 = r3.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.util.List iruns>;

        interfaceinvoke $r31.<java.util.List: boolean add(java.lang.Object)>($r29);

        goto label03;

     label04:
        $z3 = $r2 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSdtBlock;

        if $z3 == 0 goto label05;

        $r22 = new org.apache.poi.xwpf.usermodel.XWPFSDT;

        $r24 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSdtBlock) $r2;

        $r23 = r3.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.apache.poi.xwpf.usermodel.IBody part>;

        specialinvoke $r22.<org.apache.poi.xwpf.usermodel.XWPFSDT: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSdtBlock,org.apache.poi.xwpf.usermodel.IBody)>($r24, $r23);

        $r25 = r3.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.util.List iruns>;

        interfaceinvoke $r25.<java.util.List: boolean add(java.lang.Object)>($r22);

     label05:
        $z4 = $r2 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSdtRun;

        if $z4 == 0 goto label06;

        $r18 = new org.apache.poi.xwpf.usermodel.XWPFSDT;

        $r20 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSdtRun) $r2;

        $r19 = r3.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.apache.poi.xwpf.usermodel.IBody part>;

        specialinvoke $r18.<org.apache.poi.xwpf.usermodel.XWPFSDT: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSdtRun,org.apache.poi.xwpf.usermodel.IBody)>($r20, $r19);

        $r21 = r3.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.util.List iruns>;

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r18);

     label06:
        $z5 = $r2 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRunTrackChange;

        if $z5 == 0 goto label08;

        $r11 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRunTrackChange) $r2;

        $r12 = interfaceinvoke $r11.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRunTrackChange: java.util.List getRList()>();

        $r13 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z9 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label08;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r38 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR) $r14;

        $r15 = new org.apache.poi.xwpf.usermodel.XWPFRun;

        specialinvoke $r15.<org.apache.poi.xwpf.usermodel.XWPFRun: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR,org.apache.poi.xwpf.usermodel.XWPFParagraph)>(r38, r3);

        $r16 = r3.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.util.List runs>;

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r15);

        $r17 = r3.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.util.List iruns>;

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r15);

        goto label07;

     label08:
        $z6 = $r2 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSimpleField;

        if $z6 == 0 goto label10;

        $r4 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSimpleField) $r2;

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSimpleField: java.util.List getRList()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z8 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label10;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r39 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR) $r7;

        $r8 = new org.apache.poi.xwpf.usermodel.XWPFRun;

        specialinvoke $r8.<org.apache.poi.xwpf.usermodel.XWPFRun: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR,org.apache.poi.xwpf.usermodel.XWPFParagraph)>(r39, r3);

        $r9 = r3.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.util.List runs>;

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r8);

        $r10 = r3.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.util.List iruns>;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label09;

     label10:
        $z7 = $r2 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSmartTagRun;

        if $z7 == 0 goto label11;

        specialinvoke r3.<org.apache.poi.xwpf.usermodel.XWPFParagraph: void buildRunsInOrderFromXml(org.apache.xmlbeans.XmlObject)>($r2);

     label11:
        goto label01;

     label12:
        interfaceinvoke $r1.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        return;
    }

    public org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP getCTP()
    {
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP $r1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        return $r1;
    }

    public java.util.List getRuns()
    {
        java.util.List $r1, $r2;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.util.List runs>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public java.util.List getIRuns()
    {
        java.util.List $r1, $r2;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.util.List iruns>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public boolean isEmpty()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP $r1;
        org.w3c.dom.Node $r2;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.w3c.dom.Node getDomNode()>();

        $z0 = interfaceinvoke $r2.<org.w3c.dom.Node: boolean hasChildNodes()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public org.apache.poi.xwpf.usermodel.XWPFDocument getDocument()
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument $r1;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.apache.poi.xwpf.usermodel.XWPFDocument document>;

        return $r1;
    }

    public java.lang.String getText()
    {
        java.util.Iterator $r3;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r1;
        java.util.List $r2;
        org.apache.poi.xwpf.usermodel.ISDTContent $r10;
        java.lang.StringBuffer $r0, $r4;
        org.apache.poi.xwpf.usermodel.IRunElement r7;
        java.lang.Object $r6;
        java.lang.String $r5, $r8, $r11;
        org.apache.poi.xwpf.usermodel.XWPFSDT $r9;
        boolean $z0, $z1;

        r1 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.util.List iruns>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.poi.xwpf.usermodel.IRunElement) $r6;

        $z1 = r7 instanceof org.apache.poi.xwpf.usermodel.XWPFSDT;

        if $z1 == 0 goto label2;

        $r9 = (org.apache.poi.xwpf.usermodel.XWPFSDT) r7;

        $r10 = virtualinvoke $r9.<org.apache.poi.xwpf.usermodel.XWPFSDT: org.apache.poi.xwpf.usermodel.ISDTContent getContent()>();

        $r11 = interfaceinvoke $r10.<org.apache.poi.xwpf.usermodel.ISDTContent: java.lang.String getText()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        goto label3;

     label2:
        $r8 = virtualinvoke r7.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

     label3:
        goto label1;

     label4:
        $r4 = r1.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.lang.StringBuffer footnoteText>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>($r4);

        $r5 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public java.lang.String getStyleID()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr $r2, $r4, $r7, $r11;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP $r1, $r3, $r6, $r10;
        java.lang.String $r9, $r13;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTString $r5, $r8, $r12;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getPPr()>();

        if $r2 == null goto label1;

        $r3 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getPPr()>();

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTString getPStyle()>();

        if $r5 == null goto label1;

        $r6 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getPPr()>();

        $r8 = interfaceinvoke $r7.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTString getPStyle()>();

        $r9 = interfaceinvoke $r8.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTString: java.lang.String getVal()>();

        if $r9 == null goto label1;

        $r10 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        $r11 = interfaceinvoke $r10.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getPPr()>();

        $r12 = interfaceinvoke $r11.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTString getPStyle()>();

        $r13 = interfaceinvoke $r12.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTString: java.lang.String getVal()>();

        return $r13;

     label1:
        return null;
    }

    public java.math.BigInteger getNumID()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumPr $r5, $r8, $r12;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr $r2, $r4, $r7, $r11;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber $r9, $r13;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP $r1, $r3, $r6, $r10;
        java.math.BigInteger $r14;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getPPr()>();

        if $r2 == null goto label1;

        $r3 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getPPr()>();

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumPr getNumPr()>();

        if $r5 == null goto label1;

        $r6 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getPPr()>();

        $r8 = interfaceinvoke $r7.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumPr getNumPr()>();

        $r9 = interfaceinvoke $r8.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber getNumId()>();

        if $r9 == null goto label1;

        $r10 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        $r11 = interfaceinvoke $r10.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getPPr()>();

        $r12 = interfaceinvoke $r11.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumPr getNumPr()>();

        $r13 = interfaceinvoke $r12.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber getNumId()>();

        $r14 = interfaceinvoke $r13.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber: java.math.BigInteger getVal()>();

        return $r14;

     label1:
        return null;
    }

    public java.math.BigInteger getNumIlvl()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumPr $r5, $r8, $r12;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr $r2, $r4, $r7, $r11;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber $r9, $r13;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP $r1, $r3, $r6, $r10;
        java.math.BigInteger $r14;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getPPr()>();

        if $r2 == null goto label1;

        $r3 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getPPr()>();

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumPr getNumPr()>();

        if $r5 == null goto label1;

        $r6 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getPPr()>();

        $r8 = interfaceinvoke $r7.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumPr getNumPr()>();

        $r9 = interfaceinvoke $r8.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber getIlvl()>();

        if $r9 == null goto label1;

        $r10 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        $r11 = interfaceinvoke $r10.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getPPr()>();

        $r12 = interfaceinvoke $r11.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumPr getNumPr()>();

        $r13 = interfaceinvoke $r12.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber getIlvl()>();

        $r14 = interfaceinvoke $r13.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber: java.math.BigInteger getVal()>();

        return $r14;

     label1:
        return null;
    }

    public java.lang.String getNumFmt()
    {
        org.apache.poi.xwpf.usermodel.XWPFDocument $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumFmt $r11;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        int $i0, i1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum $r12;
        java.math.BigInteger $r1, $r5, $r8, $r15;
        java.lang.String $r13;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTLvl $r14, r16;
        boolean $z0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum $r6;
        org.apache.poi.xwpf.usermodel.XWPFAbstractNum $r9;
        org.apache.poi.xwpf.usermodel.XWPFNum $r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber $r7;
        org.apache.poi.xwpf.usermodel.XWPFNumbering $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTAbstractNum $r10;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r1 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.math.BigInteger getNumID()>();

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.apache.poi.xwpf.usermodel.XWPFDocument document>;

        $r3 = virtualinvoke $r2.<org.apache.poi.xwpf.usermodel.XWPFDocument: org.apache.poi.xwpf.usermodel.XWPFNumbering getNumbering()>();

        if $r1 == null goto label4;

        if $r3 == null goto label4;

        $r4 = virtualinvoke $r3.<org.apache.poi.xwpf.usermodel.XWPFNumbering: org.apache.poi.xwpf.usermodel.XWPFNum getNum(java.math.BigInteger)>($r1);

        if $r4 == null goto label4;

        $r5 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.math.BigInteger getNumIlvl()>();

        $r6 = virtualinvoke $r4.<org.apache.poi.xwpf.usermodel.XWPFNum: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum getCTNum()>();

        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNum: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber getAbstractNumId()>();

        $r8 = interfaceinvoke $r7.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber: java.math.BigInteger getVal()>();

        $r9 = virtualinvoke $r3.<org.apache.poi.xwpf.usermodel.XWPFNumbering: org.apache.poi.xwpf.usermodel.XWPFAbstractNum getAbstractNum(java.math.BigInteger)>($r8);

        $r10 = virtualinvoke $r9.<org.apache.poi.xwpf.usermodel.XWPFAbstractNum: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTAbstractNum getAbstractNum()>();

        r16 = null;

        i1 = 0;

     label1:
        $i0 = interfaceinvoke $r10.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTAbstractNum: int sizeOfLvlArray()>();

        if i1 >= $i0 goto label3;

        $r14 = interfaceinvoke $r10.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTAbstractNum: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTLvl getLvlArray(int)>(i1);

        $r15 = interfaceinvoke $r14.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTLvl: java.math.BigInteger getIlvl()>();

        $z0 = virtualinvoke $r15.<java.math.BigInteger: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        r16 = $r14;

        goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        if r16 == null goto label4;

        $r11 = interfaceinvoke r16.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTLvl: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumFmt getNumFmt()>();

        $r12 = interfaceinvoke $r11.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumFmt: org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum getVal()>();

        $r13 = virtualinvoke $r12.<org.openxmlformats.schemas.wordprocessingml.x2006.main.STNumberFormat$Enum: java.lang.String toString()>();

        return $r13;

     label4:
        return null;
    }

    public void setNumID(java.math.BigInteger)
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumPr $r5, $r8, $r12, $r17;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        java.math.BigInteger r14;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr $r2, $r4, $r7, $r11, $r16, $r19;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber $r9, $r13;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP $r1, $r3, $r6, $r10, $r15, $r18, $r20;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        r14 := @parameter0: java.math.BigInteger;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getPPr()>();

        if $r2 != null goto label1;

        $r20 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        interfaceinvoke $r20.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr addNewPPr()>();

     label1:
        $r3 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getPPr()>();

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumPr getNumPr()>();

        if $r5 != null goto label2;

        $r18 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        $r19 = interfaceinvoke $r18.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getPPr()>();

        interfaceinvoke $r19.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumPr addNewNumPr()>();

     label2:
        $r6 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getPPr()>();

        $r8 = interfaceinvoke $r7.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumPr getNumPr()>();

        $r9 = interfaceinvoke $r8.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber getNumId()>();

        if $r9 != null goto label3;

        $r15 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        $r16 = interfaceinvoke $r15.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getPPr()>();

        $r17 = interfaceinvoke $r16.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumPr getNumPr()>();

        interfaceinvoke $r17.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber addNewNumId()>();

     label3:
        $r10 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        $r11 = interfaceinvoke $r10.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getPPr()>();

        $r12 = interfaceinvoke $r11.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumPr getNumPr()>();

        $r13 = interfaceinvoke $r12.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTNumPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber getNumId()>();

        interfaceinvoke $r13.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTDecimalNumber: void setVal(java.math.BigInteger)>(r14);

        return;
    }

    public java.lang.String getParagraphText()
    {
        java.util.Iterator $r3;
        org.apache.poi.xwpf.usermodel.XWPFRun r6;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r1;
        java.util.List $r2;
        java.lang.StringBuffer $r0;
        java.lang.Object $r5;
        java.lang.String $r4, $r7;
        boolean $z0;

        r1 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.util.List runs>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.poi.xwpf.usermodel.XWPFRun) $r5;

        $r7 = virtualinvoke r6.<org.apache.poi.xwpf.usermodel.XWPFRun: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        goto label1;

     label2:
        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.String getPictureText()
    {
        java.util.Iterator $r3;
        org.apache.poi.xwpf.usermodel.XWPFRun r6;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r1;
        java.util.List $r2;
        java.lang.StringBuffer $r0;
        java.lang.Object $r5;
        java.lang.String $r4, $r7;
        boolean $z0;

        r1 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.util.List runs>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.poi.xwpf.usermodel.XWPFRun) $r5;

        $r7 = virtualinvoke r6.<org.apache.poi.xwpf.usermodel.XWPFRun: java.lang.String getPictureText()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        goto label1;

     label2:
        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.String getFootnoteText()
    {
        java.lang.String $r2;
        java.lang.StringBuffer $r1;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.lang.StringBuffer footnoteText>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public org.apache.poi.xwpf.usermodel.ParagraphAlignment getAlignment()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STJc$Enum $r3;
        int $i0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTJc $r2;
        org.apache.poi.xwpf.usermodel.ParagraphAlignment $r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr $r1;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getCTPPr()>();

        if $r1 == null goto label1;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: boolean isSetJc()>();

        if $z0 != 0 goto label2;

     label1:
        $r4 = <org.apache.poi.xwpf.usermodel.ParagraphAlignment: org.apache.poi.xwpf.usermodel.ParagraphAlignment LEFT>;

        goto label3;

     label2:
        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTJc getJc()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTJc: org.openxmlformats.schemas.wordprocessingml.x2006.main.STJc$Enum getVal()>();

        $i0 = virtualinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.STJc$Enum: int intValue()>();

        $r4 = staticinvoke <org.apache.poi.xwpf.usermodel.ParagraphAlignment: org.apache.poi.xwpf.usermodel.ParagraphAlignment valueOf(int)>($i0);

     label3:
        return $r4;
    }

    public void setAlignment(org.apache.poi.xwpf.usermodel.ParagraphAlignment)
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STJc$Enum $r3;
        int $i0;
        org.apache.poi.xwpf.usermodel.ParagraphAlignment r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTJc $r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr $r1;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        r2 := @parameter0: org.apache.poi.xwpf.usermodel.ParagraphAlignment;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getCTPPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: boolean isSetJc()>();

        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTJc getJc()>();

        goto label2;

     label1:
        $r4 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTJc addNewJc()>();

     label2:
        $i0 = virtualinvoke r2.<org.apache.poi.xwpf.usermodel.ParagraphAlignment: int getValue()>();

        $r3 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STJc$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STJc$Enum forInt(int)>($i0);

        interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTJc: void setVal(org.openxmlformats.schemas.wordprocessingml.x2006.main.STJc$Enum)>($r3);

        return;
    }

    public org.apache.poi.xwpf.usermodel.TextAlignment getVerticalAlignment()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTextAlignment $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STTextAlignment$Enum $r3;
        int $i0;
        org.apache.poi.xwpf.usermodel.TextAlignment $r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr $r1;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getCTPPr()>();

        if $r1 == null goto label1;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: boolean isSetTextAlignment()>();

        if $z0 != 0 goto label2;

     label1:
        $r4 = <org.apache.poi.xwpf.usermodel.TextAlignment: org.apache.poi.xwpf.usermodel.TextAlignment AUTO>;

        goto label3;

     label2:
        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTextAlignment getTextAlignment()>();

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTextAlignment: org.openxmlformats.schemas.wordprocessingml.x2006.main.STTextAlignment$Enum getVal()>();

        $i0 = virtualinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.STTextAlignment$Enum: int intValue()>();

        $r4 = staticinvoke <org.apache.poi.xwpf.usermodel.TextAlignment: org.apache.poi.xwpf.usermodel.TextAlignment valueOf(int)>($i0);

     label3:
        return $r4;
    }

    public void setVerticalAlignment(org.apache.poi.xwpf.usermodel.TextAlignment)
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTextAlignment $r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STTextAlignment$Enum $r3;
        org.apache.poi.xwpf.usermodel.TextAlignment r2;
        int $i0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr $r1;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        r2 := @parameter0: org.apache.poi.xwpf.usermodel.TextAlignment;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getCTPPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: boolean isSetTextAlignment()>();

        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTextAlignment getTextAlignment()>();

        goto label2;

     label1:
        $r4 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTextAlignment addNewTextAlignment()>();

     label2:
        $i0 = virtualinvoke r2.<org.apache.poi.xwpf.usermodel.TextAlignment: int getValue()>();

        $r3 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STTextAlignment$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STTextAlignment$Enum forInt(int)>($i0);

        interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTextAlignment: void setVal(org.openxmlformats.schemas.wordprocessingml.x2006.main.STTextAlignment$Enum)>($r3);

        return;
    }

    public void setBorderTop(org.apache.poi.xwpf.usermodel.Borders)
    {
        org.apache.poi.xwpf.usermodel.Borders r2, $r3;
        java.lang.RuntimeException $r5;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder $r6;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        int $i0, $i1, $i2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr $r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum $r4;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        r2 := @parameter0: org.apache.poi.xwpf.usermodel.Borders;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr getCTPBrd(boolean)>(1);

        if $r1 != null goto label1;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("invalid paragraph state");

        throw $r5;

     label1:
        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr: boolean isSetTop()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder getTop()>();

        goto label3;

     label2:
        $r6 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder addNewTop()>();

     label3:
        $i0 = virtualinvoke r2.<org.apache.poi.xwpf.usermodel.Borders: int getValue()>();

        $r3 = <org.apache.poi.xwpf.usermodel.Borders: org.apache.poi.xwpf.usermodel.Borders NONE>;

        $i1 = virtualinvoke $r3.<org.apache.poi.xwpf.usermodel.Borders: int getValue()>();

        if $i0 != $i1 goto label4;

        interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr: void unsetTop()>();

        goto label5;

     label4:
        $i2 = virtualinvoke r2.<org.apache.poi.xwpf.usermodel.Borders: int getValue()>();

        $r4 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum forInt(int)>($i2);

        interfaceinvoke $r6.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder: void setVal(org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum)>($r4);

     label5:
        return;
    }

    public org.apache.poi.xwpf.usermodel.Borders getBorderTop()
    {
        org.apache.poi.xwpf.usermodel.Borders $r2;
        int $i0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr $r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum $r4;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr getCTPBrd(boolean)>(0);

        r3 = null;

        if $r1 == null goto label1;

        r3 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder getTop()>();

     label1:
        if r3 == null goto label2;

        $r4 = interfaceinvoke r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder: org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum getVal()>();

        goto label3;

     label2:
        $r4 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder: org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum NONE>;

     label3:
        $i0 = virtualinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum: int intValue()>();

        $r2 = staticinvoke <org.apache.poi.xwpf.usermodel.Borders: org.apache.poi.xwpf.usermodel.Borders valueOf(int)>($i0);

        return $r2;
    }

    public void setBorderBottom(org.apache.poi.xwpf.usermodel.Borders)
    {
        org.apache.poi.xwpf.usermodel.Borders r2, $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder $r5;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        int $i0, $i1, $i2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr $r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum $r4;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        r2 := @parameter0: org.apache.poi.xwpf.usermodel.Borders;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr getCTPBrd(boolean)>(1);

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr: boolean isSetBottom()>();

        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder getBottom()>();

        goto label2;

     label1:
        $r5 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder addNewBottom()>();

     label2:
        $i0 = virtualinvoke r2.<org.apache.poi.xwpf.usermodel.Borders: int getValue()>();

        $r3 = <org.apache.poi.xwpf.usermodel.Borders: org.apache.poi.xwpf.usermodel.Borders NONE>;

        $i1 = virtualinvoke $r3.<org.apache.poi.xwpf.usermodel.Borders: int getValue()>();

        if $i0 != $i1 goto label3;

        interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr: void unsetBottom()>();

        goto label4;

     label3:
        $i2 = virtualinvoke r2.<org.apache.poi.xwpf.usermodel.Borders: int getValue()>();

        $r4 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum forInt(int)>($i2);

        interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder: void setVal(org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum)>($r4);

     label4:
        return;
    }

    public org.apache.poi.xwpf.usermodel.Borders getBorderBottom()
    {
        org.apache.poi.xwpf.usermodel.Borders $r2;
        int $i0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr $r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum $r4;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr getCTPBrd(boolean)>(0);

        r3 = null;

        if $r1 == null goto label1;

        r3 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder getBottom()>();

     label1:
        if r3 == null goto label2;

        $r4 = interfaceinvoke r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder: org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum getVal()>();

        goto label3;

     label2:
        $r4 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder: org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum NONE>;

     label3:
        $i0 = virtualinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum: int intValue()>();

        $r2 = staticinvoke <org.apache.poi.xwpf.usermodel.Borders: org.apache.poi.xwpf.usermodel.Borders valueOf(int)>($i0);

        return $r2;
    }

    public void setBorderLeft(org.apache.poi.xwpf.usermodel.Borders)
    {
        org.apache.poi.xwpf.usermodel.Borders r2, $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder $r5;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        int $i0, $i1, $i2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr $r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum $r4;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        r2 := @parameter0: org.apache.poi.xwpf.usermodel.Borders;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr getCTPBrd(boolean)>(1);

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr: boolean isSetLeft()>();

        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder getLeft()>();

        goto label2;

     label1:
        $r5 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder addNewLeft()>();

     label2:
        $i0 = virtualinvoke r2.<org.apache.poi.xwpf.usermodel.Borders: int getValue()>();

        $r3 = <org.apache.poi.xwpf.usermodel.Borders: org.apache.poi.xwpf.usermodel.Borders NONE>;

        $i1 = virtualinvoke $r3.<org.apache.poi.xwpf.usermodel.Borders: int getValue()>();

        if $i0 != $i1 goto label3;

        interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr: void unsetLeft()>();

        goto label4;

     label3:
        $i2 = virtualinvoke r2.<org.apache.poi.xwpf.usermodel.Borders: int getValue()>();

        $r4 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum forInt(int)>($i2);

        interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder: void setVal(org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum)>($r4);

     label4:
        return;
    }

    public org.apache.poi.xwpf.usermodel.Borders getBorderLeft()
    {
        org.apache.poi.xwpf.usermodel.Borders $r2;
        int $i0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr $r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum $r4;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr getCTPBrd(boolean)>(0);

        r3 = null;

        if $r1 == null goto label1;

        r3 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder getLeft()>();

     label1:
        if r3 == null goto label2;

        $r4 = interfaceinvoke r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder: org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum getVal()>();

        goto label3;

     label2:
        $r4 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder: org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum NONE>;

     label3:
        $i0 = virtualinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum: int intValue()>();

        $r2 = staticinvoke <org.apache.poi.xwpf.usermodel.Borders: org.apache.poi.xwpf.usermodel.Borders valueOf(int)>($i0);

        return $r2;
    }

    public void setBorderRight(org.apache.poi.xwpf.usermodel.Borders)
    {
        org.apache.poi.xwpf.usermodel.Borders r2, $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder $r5;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        int $i0, $i1, $i2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr $r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum $r4;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        r2 := @parameter0: org.apache.poi.xwpf.usermodel.Borders;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr getCTPBrd(boolean)>(1);

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr: boolean isSetRight()>();

        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder getRight()>();

        goto label2;

     label1:
        $r5 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder addNewRight()>();

     label2:
        $i0 = virtualinvoke r2.<org.apache.poi.xwpf.usermodel.Borders: int getValue()>();

        $r3 = <org.apache.poi.xwpf.usermodel.Borders: org.apache.poi.xwpf.usermodel.Borders NONE>;

        $i1 = virtualinvoke $r3.<org.apache.poi.xwpf.usermodel.Borders: int getValue()>();

        if $i0 != $i1 goto label3;

        interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr: void unsetRight()>();

        goto label4;

     label3:
        $i2 = virtualinvoke r2.<org.apache.poi.xwpf.usermodel.Borders: int getValue()>();

        $r4 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum forInt(int)>($i2);

        interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder: void setVal(org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum)>($r4);

     label4:
        return;
    }

    public org.apache.poi.xwpf.usermodel.Borders getBorderRight()
    {
        org.apache.poi.xwpf.usermodel.Borders $r2;
        int $i0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr $r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum $r4;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr getCTPBrd(boolean)>(0);

        r3 = null;

        if $r1 == null goto label1;

        r3 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder getRight()>();

     label1:
        if r3 == null goto label2;

        $r4 = interfaceinvoke r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder: org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum getVal()>();

        goto label3;

     label2:
        $r4 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder: org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum NONE>;

     label3:
        $i0 = virtualinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum: int intValue()>();

        $r2 = staticinvoke <org.apache.poi.xwpf.usermodel.Borders: org.apache.poi.xwpf.usermodel.Borders valueOf(int)>($i0);

        return $r2;
    }

    public void setBorderBetween(org.apache.poi.xwpf.usermodel.Borders)
    {
        org.apache.poi.xwpf.usermodel.Borders r2, $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder $r5;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        int $i0, $i1, $i2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr $r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum $r4;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        r2 := @parameter0: org.apache.poi.xwpf.usermodel.Borders;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr getCTPBrd(boolean)>(1);

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr: boolean isSetBetween()>();

        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder getBetween()>();

        goto label2;

     label1:
        $r5 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder addNewBetween()>();

     label2:
        $i0 = virtualinvoke r2.<org.apache.poi.xwpf.usermodel.Borders: int getValue()>();

        $r3 = <org.apache.poi.xwpf.usermodel.Borders: org.apache.poi.xwpf.usermodel.Borders NONE>;

        $i1 = virtualinvoke $r3.<org.apache.poi.xwpf.usermodel.Borders: int getValue()>();

        if $i0 != $i1 goto label3;

        interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr: void unsetBetween()>();

        goto label4;

     label3:
        $i2 = virtualinvoke r2.<org.apache.poi.xwpf.usermodel.Borders: int getValue()>();

        $r4 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum forInt(int)>($i2);

        interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder: void setVal(org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum)>($r4);

     label4:
        return;
    }

    public org.apache.poi.xwpf.usermodel.Borders getBorderBetween()
    {
        org.apache.poi.xwpf.usermodel.Borders $r2;
        int $i0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr $r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum $r4;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr getCTPBrd(boolean)>(0);

        r3 = null;

        if $r1 == null goto label1;

        r3 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder getBetween()>();

     label1:
        if r3 == null goto label2;

        $r4 = interfaceinvoke r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTBorder: org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum getVal()>();

        goto label3;

     label2:
        $r4 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder: org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum NONE>;

     label3:
        $i0 = virtualinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.STBorder$Enum: int intValue()>();

        $r2 = staticinvoke <org.apache.poi.xwpf.usermodel.Borders: org.apache.poi.xwpf.usermodel.Borders valueOf(int)>($i0);

        return $r2;
    }

    public void setPageBreak(boolean)
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum $r2, $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr $r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff $r4;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        boolean $z0, z1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        z1 := @parameter0: boolean;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getCTPPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: boolean isSetPageBreakBefore()>();

        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff getPageBreakBefore()>();

        goto label2;

     label1:
        $r4 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff addNewPageBreakBefore()>();

     label2:
        if z1 == 0 goto label3;

        $r3 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum TRUE>;

        interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff: void setVal(org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum)>($r3);

        goto label4;

     label3:
        $r2 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum FALSE>;

        interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff: void setVal(org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum)>($r2);

     label4:
        return;
    }

    public boolean isPageBreak()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum $r2;
        int $i0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr $r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff $r3;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getCTPPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: boolean isSetPageBreakBefore()>();

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff getPageBreakBefore()>();

        goto label2;

     label1:
        $r3 = null;

     label2:
        if $r3 == null goto label3;

        $r2 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum getVal()>();

        $i0 = virtualinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum: int intValue()>();

        if $i0 != 1 goto label3;

        return 1;

     label3:
        return 0;
    }

    public void setSpacingAfter(int)
    {
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing $r1;
        int i0;
        java.math.BigInteger $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing getCTSpacing(boolean)>(1);

        if $r1 == null goto label1;

        $r2 = new java.math.BigInteger;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.math.BigInteger: void <init>(java.lang.String)>($r6);

        interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing: void setAfter(java.math.BigInteger)>($r2);

     label1:
        return;
    }

    public int getSpacingAfter()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing $r1;
        int $i0, $i2;
        java.math.BigInteger $r2;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing getCTSpacing(boolean)>(0);

        if $r1 == null goto label1;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing: boolean isSetAfter()>();

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing: java.math.BigInteger getAfter()>();

        $i0 = virtualinvoke $r2.<java.math.BigInteger: int intValue()>();

        goto label2;

     label1:
        $i2 = (int) -1;

        $i0 = $i2;

     label2:
        return $i0;
    }

    public void setSpacingAfterLines(int)
    {
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing $r1;
        int i0;
        java.math.BigInteger $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing getCTSpacing(boolean)>(1);

        $r2 = new java.math.BigInteger;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.math.BigInteger: void <init>(java.lang.String)>($r6);

        interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing: void setAfterLines(java.math.BigInteger)>($r2);

        return;
    }

    public int getSpacingAfterLines()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing $r1;
        int $i0, $i2;
        java.math.BigInteger $r2;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing getCTSpacing(boolean)>(0);

        if $r1 == null goto label1;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing: boolean isSetAfterLines()>();

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing: java.math.BigInteger getAfterLines()>();

        $i0 = virtualinvoke $r2.<java.math.BigInteger: int intValue()>();

        goto label2;

     label1:
        $i2 = (int) -1;

        $i0 = $i2;

     label2:
        return $i0;
    }

    public void setSpacingBefore(int)
    {
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing $r1;
        int i0;
        java.math.BigInteger $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing getCTSpacing(boolean)>(1);

        $r2 = new java.math.BigInteger;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.math.BigInteger: void <init>(java.lang.String)>($r6);

        interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing: void setBefore(java.math.BigInteger)>($r2);

        return;
    }

    public int getSpacingBefore()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing $r1;
        int $i0, $i2;
        java.math.BigInteger $r2;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing getCTSpacing(boolean)>(0);

        if $r1 == null goto label1;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing: boolean isSetBefore()>();

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing: java.math.BigInteger getBefore()>();

        $i0 = virtualinvoke $r2.<java.math.BigInteger: int intValue()>();

        goto label2;

     label1:
        $i2 = (int) -1;

        $i0 = $i2;

     label2:
        return $i0;
    }

    public void setSpacingBeforeLines(int)
    {
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing $r1;
        int i0;
        java.math.BigInteger $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing getCTSpacing(boolean)>(1);

        $r2 = new java.math.BigInteger;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.math.BigInteger: void <init>(java.lang.String)>($r6);

        interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing: void setBeforeLines(java.math.BigInteger)>($r2);

        return;
    }

    public int getSpacingBeforeLines()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing $r1;
        int $i0, $i2;
        java.math.BigInteger $r2;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing getCTSpacing(boolean)>(0);

        if $r1 == null goto label1;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing: boolean isSetBeforeLines()>();

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing: java.math.BigInteger getBeforeLines()>();

        $i0 = virtualinvoke $r2.<java.math.BigInteger: int intValue()>();

        goto label2;

     label1:
        $i2 = (int) -1;

        $i0 = $i2;

     label2:
        return $i0;
    }

    public void setSpacingLineRule(org.apache.poi.xwpf.usermodel.LineSpacingRule)
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing $r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STLineSpacingRule$Enum $r3;
        org.apache.poi.xwpf.usermodel.LineSpacingRule r2;
        int $i0;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        r2 := @parameter0: org.apache.poi.xwpf.usermodel.LineSpacingRule;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing getCTSpacing(boolean)>(1);

        $i0 = virtualinvoke r2.<org.apache.poi.xwpf.usermodel.LineSpacingRule: int getValue()>();

        $r3 = staticinvoke <org.openxmlformats.schemas.wordprocessingml.x2006.main.STLineSpacingRule$Enum: org.openxmlformats.schemas.wordprocessingml.x2006.main.STLineSpacingRule$Enum forInt(int)>($i0);

        interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing: void setLineRule(org.openxmlformats.schemas.wordprocessingml.x2006.main.STLineSpacingRule$Enum)>($r3);

        return;
    }

    public org.apache.poi.xwpf.usermodel.LineSpacingRule getSpacingLineRule()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing $r1;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STLineSpacingRule$Enum $r2;
        int $i0;
        org.apache.poi.xwpf.usermodel.LineSpacingRule $r3;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing getCTSpacing(boolean)>(0);

        if $r1 == null goto label1;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing: boolean isSetLineRule()>();

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing: org.openxmlformats.schemas.wordprocessingml.x2006.main.STLineSpacingRule$Enum getLineRule()>();

        $i0 = virtualinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.STLineSpacingRule$Enum: int intValue()>();

        $r3 = staticinvoke <org.apache.poi.xwpf.usermodel.LineSpacingRule: org.apache.poi.xwpf.usermodel.LineSpacingRule valueOf(int)>($i0);

        goto label2;

     label1:
        $r3 = <org.apache.poi.xwpf.usermodel.LineSpacingRule: org.apache.poi.xwpf.usermodel.LineSpacingRule AUTO>;

     label2:
        return $r3;
    }

    public void setIndentationLeft(int)
    {
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        int i0;
        java.math.BigInteger $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTInd $r1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTInd getCTInd(boolean)>(1);

        $r2 = new java.math.BigInteger;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.math.BigInteger: void <init>(java.lang.String)>($r6);

        interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTInd: void setLeft(java.math.BigInteger)>($r2);

        return;
    }

    public int getIndentationLeft()
    {
        int $i0, $i2;
        java.math.BigInteger $r2;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTInd $r1;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTInd getCTInd(boolean)>(0);

        if $r1 == null goto label1;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTInd: boolean isSetLeft()>();

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTInd: java.math.BigInteger getLeft()>();

        $i0 = virtualinvoke $r2.<java.math.BigInteger: int intValue()>();

        goto label2;

     label1:
        $i2 = (int) -1;

        $i0 = $i2;

     label2:
        return $i0;
    }

    public void setIndentationRight(int)
    {
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        int i0;
        java.math.BigInteger $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTInd $r1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTInd getCTInd(boolean)>(1);

        $r2 = new java.math.BigInteger;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.math.BigInteger: void <init>(java.lang.String)>($r6);

        interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTInd: void setRight(java.math.BigInteger)>($r2);

        return;
    }

    public int getIndentationRight()
    {
        int $i0, $i2;
        java.math.BigInteger $r2;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTInd $r1;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTInd getCTInd(boolean)>(0);

        if $r1 == null goto label1;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTInd: boolean isSetRight()>();

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTInd: java.math.BigInteger getRight()>();

        $i0 = virtualinvoke $r2.<java.math.BigInteger: int intValue()>();

        goto label2;

     label1:
        $i2 = (int) -1;

        $i0 = $i2;

     label2:
        return $i0;
    }

    public void setIndentationHanging(int)
    {
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        int i0;
        java.math.BigInteger $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTInd $r1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTInd getCTInd(boolean)>(1);

        $r2 = new java.math.BigInteger;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.math.BigInteger: void <init>(java.lang.String)>($r6);

        interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTInd: void setHanging(java.math.BigInteger)>($r2);

        return;
    }

    public int getIndentationHanging()
    {
        int $i0, $i2;
        java.math.BigInteger $r2;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTInd $r1;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTInd getCTInd(boolean)>(0);

        if $r1 == null goto label1;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTInd: boolean isSetHanging()>();

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTInd: java.math.BigInteger getHanging()>();

        $i0 = virtualinvoke $r2.<java.math.BigInteger: int intValue()>();

        goto label2;

     label1:
        $i2 = (int) -1;

        $i0 = $i2;

     label2:
        return $i0;
    }

    public void setIndentationFirstLine(int)
    {
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        int i0;
        java.math.BigInteger $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTInd $r1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTInd getCTInd(boolean)>(1);

        $r2 = new java.math.BigInteger;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.math.BigInteger: void <init>(java.lang.String)>($r6);

        interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTInd: void setFirstLine(java.math.BigInteger)>($r2);

        return;
    }

    public int getIndentationFirstLine()
    {
        int $i0, $i2;
        java.math.BigInteger $r2;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTInd $r1;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTInd getCTInd(boolean)>(0);

        if $r1 == null goto label1;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTInd: boolean isSetFirstLine()>();

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTInd: java.math.BigInteger getFirstLine()>();

        $i0 = virtualinvoke $r2.<java.math.BigInteger: int intValue()>();

        goto label2;

     label1:
        $i2 = (int) -1;

        $i0 = $i2;

     label2:
        return $i0;
    }

    public void setWordWrap(boolean)
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr $r1, $r2, $r4;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff $r5;
        boolean $z0, z1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        z1 := @parameter0: boolean;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getCTPPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: boolean isSetWordWrap()>();

        if $z0 == 0 goto label1;

        $r4 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getCTPPr()>();

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff getWordWrap()>();

        goto label2;

     label1:
        $r2 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getCTPPr()>();

        $r5 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff addNewWordWrap()>();

     label2:
        if z1 == 0 goto label3;

        $r3 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum TRUE>;

        interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff: void setVal(org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum)>($r3);

        goto label4;

     label3:
        interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff: void unsetVal()>();

     label4:
        return;
    }

    public boolean isWordWrap()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum $r2, $r3, $r4, $r5, $r6, $r7;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr $r1, $r8;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff $r9;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getCTPPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: boolean isSetWordWrap()>();

        if $z0 == 0 goto label1;

        $r8 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getCTPPr()>();

        $r9 = interfaceinvoke $r8.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff getWordWrap()>();

        goto label2;

     label1:
        $r9 = null;

     label2:
        if $r9 == null goto label6;

        $r2 = interfaceinvoke $r9.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum getVal()>();

        $r3 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum ON>;

        if $r2 == $r3 goto label3;

        $r4 = interfaceinvoke $r9.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum getVal()>();

        $r5 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum TRUE>;

        if $r4 == $r5 goto label3;

        $r6 = interfaceinvoke $r9.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum getVal()>();

        $r7 = <org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff: org.openxmlformats.schemas.wordprocessingml.x2006.main.STOnOff$Enum X_1>;

        if $r6 != $r7 goto label4;

     label3:
        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;

     label6:
        return 0;
    }

    public void setStyle(java.lang.String)
    {
        java.lang.String r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr $r1;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTString $r2, $r4;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        r3 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getCTPPr()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTString getPStyle()>();

        if $r2 == null goto label1;

        $r4 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTString getPStyle()>();

        goto label2;

     label1:
        $r4 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTString addNewPStyle()>();

     label2:
        interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTString: void setVal(java.lang.String)>(r3);

        return;
    }

    public java.lang.String getStyle()
    {
        java.lang.String $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr $r1;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        boolean $z0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTString $r2;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getCTPPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: boolean isSetPStyle()>();

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTString getPStyle()>();

        goto label2;

     label1:
        $r2 = null;

     label2:
        if $r2 == null goto label3;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTString: java.lang.String getVal()>();

        goto label4;

     label3:
        $r3 = null;

     label4:
        return $r3;
    }

    private org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr getCTPBrd(boolean)
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr $r2, r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr $r1;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        boolean $z0, z1;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        z1 := @parameter0: boolean;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getCTPPr()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: boolean isSetPBdr()>();

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr getPBdr()>();

        goto label2;

     label1:
        $r2 = null;

     label2:
        r3 = $r2;

        if z1 == 0 goto label3;

        if $r2 != null goto label3;

        r3 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPBdr addNewPBdr()>();

     label3:
        return r3;
    }

    private org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing getCTSpacing(boolean)
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing $r2, $r3, r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr $r1;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        boolean z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        z0 := @parameter0: boolean;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getCTPPr()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing getSpacing()>();

        if $r2 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing getSpacing()>();

     label2:
        r4 = $r3;

        if z0 == 0 goto label3;

        if $r3 != null goto label3;

        r4 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTSpacing addNewSpacing()>();

     label3:
        return r4;
    }

    private org.openxmlformats.schemas.wordprocessingml.x2006.main.CTInd getCTInd(boolean)
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr $r1;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTInd $r2, $r3, r4;
        boolean z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        z0 := @parameter0: boolean;

        $r1 = specialinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getCTPPr()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTInd getInd()>();

        if $r2 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTInd getInd()>();

     label2:
        r4 = $r3;

        if z0 == 0 goto label3;

        if $r3 != null goto label3;

        r4 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTInd addNewInd()>();

     label3:
        return r4;
    }

    private org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getCTPPr()
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP $r1, $r3, $r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr $r2, $r5;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getPPr()>();

        if $r2 != null goto label1;

        $r4 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr addNewPPr()>();

        goto label2;

     label1:
        $r3 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        $r5 = interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTPPr getPPr()>();

     label2:
        return $r5;
    }

    protected void addRun(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR)
    {
        java.util.List $r2;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR r4;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP $r1, $r3, $r5;
        int $i0;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        r4 := @parameter0: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: java.util.List getRList()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r3 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        interfaceinvoke $r3.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR addNewR()>();

        $r5 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: void setRArray(int,org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR)>($i0, r4);

        return;
    }

    public org.apache.poi.xwpf.usermodel.XWPFRun createRun()
    {
        java.util.List $r4, $r5;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r3;
        org.apache.poi.xwpf.usermodel.XWPFRun $r0;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP $r2;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r1;

        r1 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r0 = new org.apache.poi.xwpf.usermodel.XWPFRun;

        $r2 = r1.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR addNewR()>();

        specialinvoke $r0.<org.apache.poi.xwpf.usermodel.XWPFRun: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR,org.apache.poi.xwpf.usermodel.XWPFParagraph)>($r3, r1);

        $r4 = r1.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.util.List runs>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r0);

        $r5 = r1.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.util.List iruns>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r0);

        return $r0;
    }

    public org.apache.poi.xwpf.usermodel.XWPFRun insertNewRun(int)
    {
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        int i0, $i1, $i2, $i3, i4, $i6;
        org.apache.poi.xwpf.usermodel.XWPFRun r9, $r13;
        java.util.List $r5, $r6, $r7, $r10, $r11, $r12;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP $r1, $r2;
        java.lang.Object $r8;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        i0 := @parameter0: int;

        if i0 < 0 goto label2;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        $i1 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: int sizeOfRArray()>();

        if i0 > $i1 goto label2;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR insertNewR(int)>(i0);

        $r13 = new org.apache.poi.xwpf.usermodel.XWPFRun;

        specialinvoke $r13.<org.apache.poi.xwpf.usermodel.XWPFRun: void <init>(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR,org.apache.poi.xwpf.usermodel.XWPFParagraph)>($r3, r0);

        $r5 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.util.List iruns>;

        i4 = interfaceinvoke $r5.<java.util.List: int size()>();

        $r6 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.util.List runs>;

        $i2 = interfaceinvoke $r6.<java.util.List: int size()>();

        if i0 >= $i2 goto label1;

        $r7 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.util.List runs>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i0);

        r9 = (org.apache.poi.xwpf.usermodel.XWPFRun) $r8;

        $r10 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.util.List iruns>;

        $i3 = interfaceinvoke $r10.<java.util.List: int indexOf(java.lang.Object)>(r9);

        $i6 = (int) -1;

        if $i3 == $i6 goto label1;

        i4 = $i3;

     label1:
        $r11 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.util.List iruns>;

        interfaceinvoke $r11.<java.util.List: void add(int,java.lang.Object)>(i4, $r13);

        $r12 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.util.List runs>;

        interfaceinvoke $r12.<java.util.List: void add(int,java.lang.Object)>(i0, $r13);

        return $r13;

     label2:
        return null;
    }

    public org.apache.poi.xwpf.usermodel.TextSegement searchText(java.lang.String, org.apache.poi.xwpf.usermodel.PositionInParagraph)
    {
        org.apache.poi.xwpf.usermodel.XWPFParagraph r1;
        boolean $z0, $z1, $z2, $z3, z4;
        org.apache.poi.xwpf.usermodel.TextSegement $r12;
        java.util.List $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r5;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP $r2, $r4;
        org.apache.poi.xwpf.usermodel.PositionInParagraph r0;
        org.apache.xmlbeans.XmlCursor $r6;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTText $r8;
        int $i0, $i1, $i2, $i3, $i6, $i7, i8, i9, i10, i11, i12, i13, i14, $i15, $i18, $i19, $i20, $i21;
        org.apache.xmlbeans.XmlObject $r7;
        java.lang.String $r9, r10;
        char $c4, $c5, $c16, $c17;

        r1 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        r10 := @parameter0: java.lang.String;

        r0 := @parameter1: org.apache.poi.xwpf.usermodel.PositionInParagraph;

        $i0 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.PositionInParagraph: int getRun()>();

        $i1 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.PositionInParagraph: int getText()>();

        $i2 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.PositionInParagraph: int getChar()>();

        i8 = 0;

        i9 = 0;

        z4 = 0;

        i10 = $i0;

     label01:
        $r2 = r1.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: java.util.List getRList()>();

        $i3 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i10 >= $i3 goto label15;

        i11 = 0;

        i12 = 0;

        i13 = 0;

        $r4 = r1.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR getRArray(int)>(i10);

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.apache.xmlbeans.XmlCursor newCursor()>();

        interfaceinvoke $r6.<org.apache.xmlbeans.XmlCursor: void selectPath(java.lang.String)>("./*");

     label02:
        $z0 = interfaceinvoke $r6.<org.apache.xmlbeans.XmlCursor: boolean toNextSelection()>();

        if $z0 == 0 goto label14;

        $r7 = interfaceinvoke $r6.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        $z1 = $r7 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTText;

        if $z1 == 0 goto label10;

        if i13 < $i1 goto label09;

        $r8 = (org.openxmlformats.schemas.wordprocessingml.x2006.main.CTText) $r7;

        $r9 = interfaceinvoke $r8.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTText: java.lang.String getStringValue()>();

        if i10 != $i0 goto label03;

        i14 = $i2;

        goto label04;

     label03:
        i14 = 0;

     label04:
        $i15 = virtualinvoke $r9.<java.lang.String: int length()>();

        if i14 >= $i15 goto label09;

        $c4 = virtualinvoke $r9.<java.lang.String: char charAt(int)>(i14);

        $c5 = virtualinvoke r10.<java.lang.String: char charAt(int)>(0);

        $i18 = (int) $c4;

        $i19 = (int) $c5;

        if $i18 != $i19 goto label05;

        if i9 != 0 goto label05;

        i11 = i13;

        i12 = i14;

        i8 = i10;

        z4 = 1;

     label05:
        $c16 = virtualinvoke $r9.<java.lang.String: char charAt(int)>(i14);

        $c17 = virtualinvoke r10.<java.lang.String: char charAt(int)>(i9);

        $i20 = (int) $c16;

        $i21 = (int) $c17;

        if $i20 != $i21 goto label07;

        $i6 = i9 + 1;

        $i7 = virtualinvoke r10.<java.lang.String: int length()>();

        if $i6 >= $i7 goto label06;

        i9 = i9 + 1;

        goto label08;

     label06:
        if z4 == 0 goto label08;

        $r12 = new org.apache.poi.xwpf.usermodel.TextSegement;

        specialinvoke $r12.<org.apache.poi.xwpf.usermodel.TextSegement: void <init>()>();

        virtualinvoke $r12.<org.apache.poi.xwpf.usermodel.TextSegement: void setBeginRun(int)>(i8);

        virtualinvoke $r12.<org.apache.poi.xwpf.usermodel.TextSegement: void setBeginText(int)>(i11);

        virtualinvoke $r12.<org.apache.poi.xwpf.usermodel.TextSegement: void setBeginChar(int)>(i12);

        virtualinvoke $r12.<org.apache.poi.xwpf.usermodel.TextSegement: void setEndRun(int)>(i10);

        virtualinvoke $r12.<org.apache.poi.xwpf.usermodel.TextSegement: void setEndText(int)>(i13);

        virtualinvoke $r12.<org.apache.poi.xwpf.usermodel.TextSegement: void setEndChar(int)>(i14);

        return $r12;

     label07:
        i9 = 0;

     label08:
        i14 = i14 + 1;

        goto label04;

     label09:
        i13 = i13 + 1;

        goto label13;

     label10:
        $z2 = $r7 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTProofErr;

        if $z2 == 0 goto label11;

        interfaceinvoke $r6.<org.apache.xmlbeans.XmlCursor: boolean removeXml()>();

        goto label13;

     label11:
        $z3 = $r7 instanceof org.openxmlformats.schemas.wordprocessingml.x2006.main.CTRPr;

        if $z3 == 0 goto label12;

        goto label13;

     label12:
        i9 = 0;

     label13:
        goto label02;

     label14:
        interfaceinvoke $r6.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        i10 = i10 + 1;

        goto label01;

     label15:
        return null;
    }

    public java.lang.String getText(org.apache.poi.xwpf.usermodel.TextSegement)
    {
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTText $r9;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r3;
        java.lang.StringBuffer $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, i12, i13, $i14;
        java.lang.String $r2, $r10, $r11;
        org.apache.poi.xwpf.usermodel.TextSegement r0;
        java.util.List $r6;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r5, $r8;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP $r4, $r7;

        r3 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        r0 := @parameter0: org.apache.poi.xwpf.usermodel.TextSegement;

        $i0 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.TextSegement: int getBeginRun()>();

        $i1 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.TextSegement: int getBeginText()>();

        $i2 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.TextSegement: int getBeginChar()>();

        $i3 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.TextSegement: int getEndRun()>();

        $i4 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.TextSegement: int getEndText()>();

        $i5 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.TextSegement: int getEndChar()>();

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        i8 = $i0;

     label1:
        if i8 > $i3 goto label8;

        i9 = 0;

        $r4 = r3.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR getRArray(int)>(i8);

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: java.util.List getTList()>();

        $i6 = interfaceinvoke $r6.<java.util.List: int size()>();

        i10 = $i6 - 1;

        if i8 != $i0 goto label2;

        i9 = $i1;

     label2:
        if i8 != $i3 goto label3;

        i10 = $i4;

     label3:
        i11 = i9;

     label4:
        if i11 > i10 goto label7;

        $r7 = r3.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        $r8 = interfaceinvoke $r7.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR getRArray(int)>(i8);

        $r9 = interfaceinvoke $r8.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTText getTArray(int)>(i11);

        $r10 = interfaceinvoke $r9.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTText: java.lang.String getStringValue()>();

        i12 = 0;

        $i7 = virtualinvoke $r10.<java.lang.String: int length()>();

        i13 = $i7 - 1;

        if i11 != $i1 goto label5;

        if i8 != $i0 goto label5;

        i12 = $i2;

     label5:
        if i11 != $i4 goto label6;

        if i8 != $i3 goto label6;

        i13 = $i5;

     label6:
        $i14 = i13 + 1;

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int,int)>(i12, $i14);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        i11 = i11 + 1;

        goto label4;

     label7:
        i8 = i8 + 1;

        goto label1;

     label8:
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public boolean removeRun(int)
    {
        java.util.List $r3;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP $r1, $r2;
        int i0, $i1;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP paragraph>;

        $i1 = interfaceinvoke $r1.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: int sizeOfRArray()>();

        if i0 >= $i1 goto label1;

        $r2 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP getCTP()>();

        interfaceinvoke $r2.<org.openxmlformats.schemas.wordprocessingml.x2006.main.CTP: void removeR(int)>(i0);

        $r3 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.util.List runs>;

        interfaceinvoke $r3.<java.util.List: java.lang.Object remove(int)>(i0);

        return 1;

     label1:
        return 0;
    }

    public org.apache.poi.xwpf.usermodel.BodyElementType getElementType()
    {
        org.apache.poi.xwpf.usermodel.BodyElementType $r0;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r1;

        r1 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r0 = <org.apache.poi.xwpf.usermodel.BodyElementType: org.apache.poi.xwpf.usermodel.BodyElementType PARAGRAPH>;

        return $r0;
    }

    public org.apache.poi.xwpf.usermodel.IBody getBody()
    {
        org.apache.poi.xwpf.usermodel.IBody $r1;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.apache.poi.xwpf.usermodel.IBody part>;

        return $r1;
    }

    public org.apache.poi.POIXMLDocumentPart getPart()
    {
        org.apache.poi.xwpf.usermodel.IBody $r1, $r2;
        org.apache.poi.POIXMLDocumentPart $r3;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.apache.poi.xwpf.usermodel.IBody part>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.apache.poi.xwpf.usermodel.IBody part>;

        $r3 = interfaceinvoke $r2.<org.apache.poi.xwpf.usermodel.IBody: org.apache.poi.POIXMLDocumentPart getPart()>();

        return $r3;

     label1:
        return null;
    }

    public org.apache.poi.xwpf.usermodel.BodyType getPartType()
    {
        org.apache.poi.xwpf.usermodel.IBody $r1;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        org.apache.poi.xwpf.usermodel.BodyType $r2;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        $r1 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: org.apache.poi.xwpf.usermodel.IBody part>;

        $r2 = interfaceinvoke $r1.<org.apache.poi.xwpf.usermodel.IBody: org.apache.poi.xwpf.usermodel.BodyType getPartType()>();

        return $r2;
    }

    public void addRun(org.apache.poi.xwpf.usermodel.XWPFRun)
    {
        java.util.List $r2, $r3;
        org.apache.poi.xwpf.usermodel.XWPFRun r1;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        r1 := @parameter0: org.apache.poi.xwpf.usermodel.XWPFRun;

        $r2 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.util.List runs>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.util.List runs>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

     label1:
        return;
    }

    public org.apache.poi.xwpf.usermodel.XWPFRun getRun(org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR)
    {
        org.apache.poi.xwpf.usermodel.XWPFRun $r4, $r9;
        org.apache.poi.xwpf.usermodel.XWPFParagraph r0;
        java.util.List $r1, $r2, $r7;
        org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR $r5, r6;
        int $i0, i1;
        java.lang.Object $r3, $r8;

        r0 := @this: org.apache.poi.xwpf.usermodel.XWPFParagraph;

        r6 := @parameter0: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR;

        i1 = 0;

     label1:
        $r1 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.util.List getRuns()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r2 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.util.List getRuns()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        $r4 = (org.apache.poi.xwpf.usermodel.XWPFRun) $r3;

        $r5 = virtualinvoke $r4.<org.apache.poi.xwpf.usermodel.XWPFRun: org.openxmlformats.schemas.wordprocessingml.x2006.main.CTR getCTR()>();

        if $r5 != r6 goto label2;

        $r7 = virtualinvoke r0.<org.apache.poi.xwpf.usermodel.XWPFParagraph: java.util.List getRuns()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i1);

        $r9 = (org.apache.poi.xwpf.usermodel.XWPFRun) $r8;

        return $r9;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }
}
