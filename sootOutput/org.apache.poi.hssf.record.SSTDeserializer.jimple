class org.apache.poi.hssf.record.SSTDeserializer extends java.lang.Object
{
    private static org.apache.poi.util.POILogger logger;
    private org.apache.poi.util.IntMapper strings;

    public void <init>(org.apache.poi.util.IntMapper)
    {
        org.apache.poi.util.IntMapper r1;
        org.apache.poi.hssf.record.SSTDeserializer r0;

        r0 := @this: org.apache.poi.hssf.record.SSTDeserializer;

        r1 := @parameter0: org.apache.poi.util.IntMapper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.hssf.record.SSTDeserializer: org.apache.poi.util.IntMapper strings> = r1;

        return;
    }

    public void manufactureStrings(int, org.apache.poi.hssf.record.RecordInputStream)
    {
        org.apache.poi.hssf.record.SSTDeserializer r2;
        org.apache.poi.hssf.record.RecordInputStream r0;
        int i0, $i1, i2;
        java.lang.String $r8;
        boolean $z0;
        org.apache.poi.util.POILogger $r4;
        org.apache.poi.util.IntMapper $r11;
        java.lang.StringBuilder $r3, $r5, $r6, $r7;
        org.apache.poi.hssf.record.common.UnicodeString $r1, $r9, r10;

        r2 := @this: org.apache.poi.hssf.record.SSTDeserializer;

        i0 := @parameter0: int;

        r0 := @parameter1: org.apache.poi.hssf.record.RecordInputStream;

        i2 = 0;

     label1:
        if i2 >= i0 goto label4;

        $i1 = virtualinvoke r0.<org.apache.poi.hssf.record.RecordInputStream: int available()>();

        if $i1 != 0 goto label2;

        $z0 = virtualinvoke r0.<org.apache.poi.hssf.record.RecordInputStream: boolean hasNextRecord()>();

        if $z0 != 0 goto label2;

        $r4 = <org.apache.poi.hssf.record.SSTDeserializer: org.apache.poi.util.POILogger logger>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ran out of data before creating all the strings! String at index ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(7, $r8);

        $r9 = new org.apache.poi.hssf.record.common.UnicodeString;

        specialinvoke $r9.<org.apache.poi.hssf.record.common.UnicodeString: void <init>(java.lang.String)>("");

        r10 = $r9;

        goto label3;

     label2:
        $r1 = new org.apache.poi.hssf.record.common.UnicodeString;

        specialinvoke $r1.<org.apache.poi.hssf.record.common.UnicodeString: void <init>(org.apache.poi.hssf.record.RecordInputStream)>(r0);

        r10 = $r1;

     label3:
        $r11 = r2.<org.apache.poi.hssf.record.SSTDeserializer: org.apache.poi.util.IntMapper strings>;

        staticinvoke <org.apache.poi.hssf.record.SSTDeserializer: void addToStringTable(org.apache.poi.util.IntMapper,org.apache.poi.hssf.record.common.UnicodeString)>($r11, r10);

        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }

    public static void addToStringTable(org.apache.poi.util.IntMapper, org.apache.poi.hssf.record.common.UnicodeString)
    {
        org.apache.poi.util.IntMapper r0;
        org.apache.poi.hssf.record.common.UnicodeString r1;

        r0 := @parameter0: org.apache.poi.util.IntMapper;

        r1 := @parameter1: org.apache.poi.hssf.record.common.UnicodeString;

        virtualinvoke r0.<org.apache.poi.util.IntMapper: boolean add(java.lang.Object)>(r1);

        return;
    }

    static void <clinit>()
    {
        org.apache.poi.util.POILogger $r0;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/hssf/record/SSTDeserializer;");

        <org.apache.poi.hssf.record.SSTDeserializer: org.apache.poi.util.POILogger logger> = $r0;

        return;
    }
}
