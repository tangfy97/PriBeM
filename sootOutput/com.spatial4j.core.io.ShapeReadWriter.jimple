public class com.spatial4j.core.io.ShapeReadWriter extends java.lang.Object
{
    protected com.spatial4j.core.context.SpatialContext ctx;

    public void <init>(com.spatial4j.core.context.SpatialContext)
    {
        com.spatial4j.core.context.SpatialContext r1;
        com.spatial4j.core.io.ShapeReadWriter r0;

        r0 := @this: com.spatial4j.core.io.ShapeReadWriter;

        r1 := @parameter0: com.spatial4j.core.context.SpatialContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.spatial4j.core.io.ShapeReadWriter: com.spatial4j.core.context.SpatialContext ctx> = r1;

        return;
    }

    public com.spatial4j.core.shape.Shape readShape(java.lang.String) throws com.spatial4j.core.exception.InvalidShapeException
    {
        com.spatial4j.core.io.ShapeReadWriter r0;
        com.spatial4j.core.exception.InvalidShapeException $r3;
        com.spatial4j.core.shape.Shape $r2;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String r1, $r7;

        r0 := @this: com.spatial4j.core.io.ShapeReadWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.spatial4j.core.io.ShapeReadWriter: com.spatial4j.core.shape.Shape readStandardShape(java.lang.String)>(r1);

        if $r2 != null goto label1;

        $r3 = new com.spatial4j.core.exception.InvalidShapeException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to read: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<com.spatial4j.core.exception.InvalidShapeException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label1:
        return $r2;
    }

    public java.lang.String writeShape(com.spatial4j.core.shape.Shape)
    {
        com.spatial4j.core.shape.Shape r1;
        com.spatial4j.core.io.ShapeReadWriter r0;
        java.lang.String $r3;
        java.text.NumberFormat $r2;

        r0 := @this: com.spatial4j.core.io.ShapeReadWriter;

        r1 := @parameter0: com.spatial4j.core.shape.Shape;

        $r2 = staticinvoke <com.spatial4j.core.io.ShapeReadWriter: java.text.NumberFormat makeNumberFormat(int)>(6);

        $r3 = virtualinvoke r0.<com.spatial4j.core.io.ShapeReadWriter: java.lang.String writeShape(com.spatial4j.core.shape.Shape,java.text.NumberFormat)>(r1, $r2);

        return $r3;
    }

    public java.lang.String writeShape(com.spatial4j.core.shape.Shape, java.text.NumberFormat)
    {
        com.spatial4j.core.shape.Shape r0;
        com.spatial4j.core.shape.Point $r5, $r9, r39;
        boolean $z0, $z1, $z2;
        com.spatial4j.core.shape.Rectangle r40;
        java.lang.StringBuilder $r2, $r3, $r7, $r8, $r11, $r12, $r13, $r15, $r16, $r18, $r20, $r21, $r23, $r24, $r26, $r27, $r29, $r31, $r33, $r34, $r36;
        com.spatial4j.core.io.ShapeReadWriter r38;
        java.text.NumberFormat r4;
        java.lang.String $r1, $r6, $r10, $r14, $r17, $r19, $r22, $r25, $r28, $r30, $r32, $r35, $r37;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        com.spatial4j.core.shape.Circle r41;

        r38 := @this: com.spatial4j.core.io.ShapeReadWriter;

        r0 := @parameter0: com.spatial4j.core.shape.Shape;

        r4 := @parameter1: java.text.NumberFormat;

        $z0 = r0 instanceof com.spatial4j.core.shape.Point;

        if $z0 == 0 goto label1;

        r39 = (com.spatial4j.core.shape.Point) r0;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $d7 = interfaceinvoke r39.<com.spatial4j.core.shape.Point: double getX()>();

        $r32 = virtualinvoke r4.<java.text.NumberFormat: java.lang.String format(double)>($d7);

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $d8 = interfaceinvoke r39.<com.spatial4j.core.shape.Point: double getY()>();

        $r35 = virtualinvoke r4.<java.text.NumberFormat: java.lang.String format(double)>($d8);

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r37;

     label1:
        $z1 = r0 instanceof com.spatial4j.core.shape.Rectangle;

        if $z1 == 0 goto label2;

        r40 = (com.spatial4j.core.shape.Rectangle) r0;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $d3 = interfaceinvoke r40.<com.spatial4j.core.shape.Rectangle: double getMinX()>();

        $r19 = virtualinvoke r4.<java.text.NumberFormat: java.lang.String format(double)>($d3);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $d4 = interfaceinvoke r40.<com.spatial4j.core.shape.Rectangle: double getMinY()>();

        $r22 = virtualinvoke r4.<java.text.NumberFormat: java.lang.String format(double)>($d4);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $d5 = interfaceinvoke r40.<com.spatial4j.core.shape.Rectangle: double getMaxX()>();

        $r25 = virtualinvoke r4.<java.text.NumberFormat: java.lang.String format(double)>($d5);

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $d6 = interfaceinvoke r40.<com.spatial4j.core.shape.Rectangle: double getMaxY()>();

        $r28 = virtualinvoke r4.<java.text.NumberFormat: java.lang.String format(double)>($d6);

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r30;

     label2:
        $z2 = r0 instanceof com.spatial4j.core.shape.Circle;

        if $z2 == 0 goto label3;

        r41 = (com.spatial4j.core.shape.Circle) r0;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Circle(");

        $r5 = interfaceinvoke r41.<com.spatial4j.core.shape.Circle: com.spatial4j.core.shape.Point getCenter()>();

        $d0 = interfaceinvoke $r5.<com.spatial4j.core.shape.Point: double getX()>();

        $r6 = virtualinvoke r4.<java.text.NumberFormat: java.lang.String format(double)>($d0);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r9 = interfaceinvoke r41.<com.spatial4j.core.shape.Circle: com.spatial4j.core.shape.Point getCenter()>();

        $d1 = interfaceinvoke $r9.<com.spatial4j.core.shape.Point: double getY()>();

        $r10 = virtualinvoke r4.<java.text.NumberFormat: java.lang.String format(double)>($d1);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d=");

        $d2 = interfaceinvoke r41.<com.spatial4j.core.shape.Circle: double getRadius()>();

        $r14 = virtualinvoke r4.<java.text.NumberFormat: java.lang.String format(double)>($d2);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r17;

     label3:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    public static java.text.NumberFormat makeNumberFormat(int)
    {
        int i0;
        java.util.Locale $r0;
        java.text.NumberFormat $r1;

        i0 := @parameter0: int;

        $r0 = <java.util.Locale: java.util.Locale ROOT>;

        $r1 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale)>($r0);

        virtualinvoke $r1.<java.text.NumberFormat: void setGroupingUsed(boolean)>(0);

        virtualinvoke $r1.<java.text.NumberFormat: void setMaximumFractionDigits(int)>(i0);

        virtualinvoke $r1.<java.text.NumberFormat: void setMinimumFractionDigits(int)>(i0);

        return $r1;
    }

    protected com.spatial4j.core.shape.Shape readStandardShape(java.lang.String)
    {
        com.spatial4j.core.shape.Point $r7, $r17, r49;
        com.spatial4j.core.context.SpatialContext $r6, $r10, $r23, $r25;
        java.lang.StringBuilder $r14, $r15, $r29, $r30, $r34, $r36, $r37, $r38, $r44, $r45, $r46, $r47, $r53, $r55, $r57, $r60;
        java.lang.Double r50;
        java.util.StringTokenizer $r52, $r59;
        java.lang.String r0, $r3, $r4, $r8, $r9, $r16, $r18, $r19, $r21, $r22, $r24, $r31, $r35, $r39, $r40, $r41, $r48;
        com.spatial4j.core.shape.Circle $r26;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.spatial4j.core.shape.Rectangle $r11;
        com.spatial4j.core.exception.InvalidShapeException $r51, $r54, $r56, $r58, $r61;
        com.spatial4j.core.io.ShapeReadWriter r5;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i11;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        char $c1;

        r5 := @this: com.spatial4j.core.io.ShapeReadWriter;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label01;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label02;

     label01:
        $r51 = new com.spatial4j.core.exception.InvalidShapeException;

        specialinvoke $r51.<com.spatial4j.core.exception.InvalidShapeException: void <init>(java.lang.String)>(r0);

        throw $r51;

     label02:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $z0 = staticinvoke <java.lang.Character: boolean isLetter(char)>($c1);

        if $z0 == 0 goto label14;

        $z3 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("Circle(");

        if $z3 != 0 goto label03;

        $z7 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("CIRCLE(");

        if $z7 == 0 goto label13;

     label03:
        $i3 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(41);

        if $i3 <= 0 goto label13;

        $r18 = "Circle(";

        $i4 = virtualinvoke $r18.<java.lang.String: int length()>();

        $r19 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i4, $i3);

        $r52 = new java.util.StringTokenizer;

        specialinvoke $r52.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r19, " ");

        $r21 = virtualinvoke $r52.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i5 = virtualinvoke $r21.<java.lang.String: int indexOf(int)>(44);

        $i9 = (int) -1;

        if $i5 == $i9 goto label04;

        r49 = specialinvoke r5.<com.spatial4j.core.io.ShapeReadWriter: com.spatial4j.core.shape.Point readLatCommaLonPoint(java.lang.String)>($r21);

        goto label05;

     label04:
        $d4 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r21);

        $r22 = virtualinvoke $r52.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $d5 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r22);

        $r23 = r5.<com.spatial4j.core.io.ShapeReadWriter: com.spatial4j.core.context.SpatialContext ctx>;

        r49 = virtualinvoke $r23.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.shape.Point makePoint(double,double)>($d4, $d5);

     label05:
        $r24 = virtualinvoke $r52.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i6 = virtualinvoke $r24.<java.lang.String: int indexOf(int)>(61);

        if $i6 <= 0 goto label09;

        $r40 = virtualinvoke $r24.<java.lang.String: java.lang.String substring(int,int)>(0, $i6);

        $z5 = virtualinvoke $r40.<java.lang.String: boolean equals(java.lang.Object)>("d");

        if $z5 != 0 goto label06;

        $z6 = virtualinvoke $r40.<java.lang.String: boolean equals(java.lang.Object)>("distance");

        if $z6 == 0 goto label07;

     label06:
        $i7 = $i6 + 1;

        $r41 = virtualinvoke $r24.<java.lang.String: java.lang.String substring(int)>($i7);

        $d8 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r41);

        r50 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d8);

        goto label08;

     label07:
        $r54 = new com.spatial4j.core.exception.InvalidShapeException;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown arg: ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" :: ");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r54.<com.spatial4j.core.exception.InvalidShapeException: void <init>(java.lang.String)>($r48);

        throw $r54;

     label08:
        goto label10;

     label09:
        $d6 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r24);

        r50 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d6);

     label10:
        $z4 = virtualinvoke $r52.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z4 == 0 goto label11;

        $r56 = new com.spatial4j.core.exception.InvalidShapeException;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Extra arguments: ");

        $r35 = virtualinvoke $r52.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" :: ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r56.<com.spatial4j.core.exception.InvalidShapeException: void <init>(java.lang.String)>($r39);

        throw $r56;

     label11:
        if r50 != null goto label12;

        $r58 = new com.spatial4j.core.exception.InvalidShapeException;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing Distance: ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r58.<com.spatial4j.core.exception.InvalidShapeException: void <init>(java.lang.String)>($r31);

        throw $r58;

     label12:
        $r25 = r5.<com.spatial4j.core.io.ShapeReadWriter: com.spatial4j.core.context.SpatialContext ctx>;

        $d7 = virtualinvoke r50.<java.lang.Double: double doubleValue()>();

        $r26 = virtualinvoke $r25.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.shape.Circle makeCircle(com.spatial4j.core.shape.Point,double)>(r49, $d7);

        return $r26;

     label13:
        return null;

     label14:
        $i2 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(44);

        $i11 = (int) -1;

        if $i2 == $i11 goto label15;

        $r17 = specialinvoke r5.<com.spatial4j.core.io.ShapeReadWriter: com.spatial4j.core.shape.Point readLatCommaLonPoint(java.lang.String)>(r0);

        return $r17;

     label15:
        $r59 = new java.util.StringTokenizer;

        specialinvoke $r59.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r0, " ");

        $r3 = virtualinvoke $r59.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r3);

        $r4 = virtualinvoke $r59.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r4);

        $z1 = virtualinvoke $r59.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label17;

        $r8 = virtualinvoke $r59.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $d2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r8);

        $r9 = virtualinvoke $r59.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $d3 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r9);

        $z2 = virtualinvoke $r59.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z2 == 0 goto label16;

        $r61 = new com.spatial4j.core.exception.InvalidShapeException;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Only 4 numbers supported (rect) but found more: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r61.<com.spatial4j.core.exception.InvalidShapeException: void <init>(java.lang.String)>($r16);

        throw $r61;

     label16:
        $r10 = r5.<com.spatial4j.core.io.ShapeReadWriter: com.spatial4j.core.context.SpatialContext ctx>;

        $r11 = virtualinvoke $r10.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.shape.Rectangle makeRectangle(double,double,double,double)>($d0, $d2, $d1, $d3);

        return $r11;

     label17:
        $r6 = r5.<com.spatial4j.core.io.ShapeReadWriter: com.spatial4j.core.context.SpatialContext ctx>;

        $r7 = virtualinvoke $r6.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.shape.Point makePoint(double,double)>($d0, $d1);

        return $r7;
    }

    private com.spatial4j.core.shape.Point readLatCommaLonPoint(java.lang.String) throws com.spatial4j.core.exception.InvalidShapeException
    {
        double[] $r1;
        com.spatial4j.core.context.SpatialContext $r3;
        com.spatial4j.core.shape.Point $r4;
        com.spatial4j.core.io.ShapeReadWriter r2;
        java.lang.String r0;
        double $d0, $d1;

        r2 := @this: com.spatial4j.core.io.ShapeReadWriter;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.spatial4j.core.io.ParseUtils: double[] parseLatitudeLongitude(java.lang.String)>(r0);

        $r3 = r2.<com.spatial4j.core.io.ShapeReadWriter: com.spatial4j.core.context.SpatialContext ctx>;

        $d1 = $r1[1];

        $d0 = $r1[0];

        $r4 = virtualinvoke $r3.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.shape.Point makePoint(double,double)>($d1, $d0);

        return $r4;
    }
}
