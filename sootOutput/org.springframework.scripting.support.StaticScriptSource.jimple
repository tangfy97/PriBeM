public class org.springframework.scripting.support.StaticScriptSource extends java.lang.Object implements org.springframework.scripting.ScriptSource
{
    private java.lang.String script;
    private boolean modified;
    private java.lang.String className;

    public void <init>(java.lang.String)
    {
        org.springframework.scripting.support.StaticScriptSource r0;
        java.lang.String r1;

        r0 := @this: org.springframework.scripting.support.StaticScriptSource;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.springframework.scripting.support.StaticScriptSource: void setScript(java.lang.String)>(r1);

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        org.springframework.scripting.support.StaticScriptSource r0;
        java.lang.String r1, r2;

        r0 := @this: org.springframework.scripting.support.StaticScriptSource;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.springframework.scripting.support.StaticScriptSource: void setScript(java.lang.String)>(r1);

        r0.<org.springframework.scripting.support.StaticScriptSource: java.lang.String className> = r2;

        return;
    }

    public synchronized void setScript(java.lang.String)
    {
        org.springframework.scripting.support.StaticScriptSource r1;
        java.lang.String r0, $r2;
        boolean $z0, $z1;

        r1 := @this: org.springframework.scripting.support.StaticScriptSource;

        r0 := @parameter0: java.lang.String;

        staticinvoke <org.springframework.util.Assert: void hasText(java.lang.String,java.lang.String)>(r0, "Script must not be empty");

        $r2 = r1.<org.springframework.scripting.support.StaticScriptSource: java.lang.String script>;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $z1 = 0;

        goto label2;

     label1:
        $z1 = 1;

     label2:
        r1.<org.springframework.scripting.support.StaticScriptSource: boolean modified> = $z1;

        r1.<org.springframework.scripting.support.StaticScriptSource: java.lang.String script> = r0;

        return;
    }

    public synchronized java.lang.String getScriptAsString()
    {
        org.springframework.scripting.support.StaticScriptSource r0;
        java.lang.String $r1;

        r0 := @this: org.springframework.scripting.support.StaticScriptSource;

        r0.<org.springframework.scripting.support.StaticScriptSource: boolean modified> = 0;

        $r1 = r0.<org.springframework.scripting.support.StaticScriptSource: java.lang.String script>;

        return $r1;
    }

    public synchronized boolean isModified()
    {
        org.springframework.scripting.support.StaticScriptSource r0;
        boolean $z0;

        r0 := @this: org.springframework.scripting.support.StaticScriptSource;

        $z0 = r0.<org.springframework.scripting.support.StaticScriptSource: boolean modified>;

        return $z0;
    }

    public java.lang.String suggestedClassName()
    {
        org.springframework.scripting.support.StaticScriptSource r0;
        java.lang.String $r1;

        r0 := @this: org.springframework.scripting.support.StaticScriptSource;

        $r1 = r0.<org.springframework.scripting.support.StaticScriptSource: java.lang.String className>;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.springframework.scripting.support.StaticScriptSource r1;
        java.lang.StringBuilder $r0, $r3, $r5, $r7, $r8;
        java.lang.String $r2, $r4, $r6, $r9;

        r1 := @this: org.springframework.scripting.support.StaticScriptSource;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("static script");

        $r2 = r1.<org.springframework.scripting.support.StaticScriptSource: java.lang.String className>;

        if $r2 == null goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(" [");

        $r6 = r1.<org.springframework.scripting.support.StaticScriptSource: java.lang.String className>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r9 = "";

     label2:
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
