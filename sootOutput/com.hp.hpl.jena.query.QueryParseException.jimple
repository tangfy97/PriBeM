public class com.hp.hpl.jena.query.QueryParseException extends com.hp.hpl.jena.query.QueryException
{
    private int line;
    private int column;

    public void <init>(int, int)
    {
        int i0, i1;
        com.hp.hpl.jena.query.QueryParseException r0;

        r0 := @this: com.hp.hpl.jena.query.QueryParseException;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<com.hp.hpl.jena.query.QueryParseException: void <init>(java.lang.String,java.lang.Throwable,int,int)>(null, null, i0, i1);

        return;
    }

    public void <init>(java.lang.Throwable, int, int)
    {
        java.lang.Throwable r1;
        int i0, i1;
        com.hp.hpl.jena.query.QueryParseException r0;

        r0 := @this: com.hp.hpl.jena.query.QueryParseException;

        r1 := @parameter0: java.lang.Throwable;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.hp.hpl.jena.query.QueryParseException: void <init>(java.lang.String,java.lang.Throwable,int,int)>(null, r1, i0, i1);

        return;
    }

    public void <init>(java.lang.String, int, int)
    {
        int i0, i1;
        java.lang.String r1;
        com.hp.hpl.jena.query.QueryParseException r0;

        r0 := @this: com.hp.hpl.jena.query.QueryParseException;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.hp.hpl.jena.query.QueryParseException: void <init>(java.lang.String,java.lang.Throwable,int,int)>(r1, null, i0, i1);

        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable, int, int)
    {
        java.lang.Throwable r2;
        int i0, i1;
        java.lang.String r1;
        com.hp.hpl.jena.query.QueryParseException r0;

        r0 := @this: com.hp.hpl.jena.query.QueryParseException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<com.hp.hpl.jena.query.QueryException: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2);

        specialinvoke r0.<com.hp.hpl.jena.query.QueryParseException: void set(int,int)>(i0, i1);

        return;
    }

    private void set(int, int)
    {
        int i0, i1;
        com.hp.hpl.jena.query.QueryParseException r0;

        r0 := @this: com.hp.hpl.jena.query.QueryParseException;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<com.hp.hpl.jena.query.QueryParseException: int line> = i0;

        r0.<com.hp.hpl.jena.query.QueryParseException: int column> = i1;

        return;
    }

    public int getColumn()
    {
        int $i0;
        com.hp.hpl.jena.query.QueryParseException r0;

        r0 := @this: com.hp.hpl.jena.query.QueryParseException;

        $i0 = r0.<com.hp.hpl.jena.query.QueryParseException: int column>;

        return $i0;
    }

    public int getLine()
    {
        int $i0;
        com.hp.hpl.jena.query.QueryParseException r0;

        r0 := @this: com.hp.hpl.jena.query.QueryParseException;

        $i0 = r0.<com.hp.hpl.jena.query.QueryParseException: int line>;

        return $i0;
    }

    public static java.lang.String formatMessage(java.lang.String, int, int)
    {
        java.lang.Object[] $r5;
        java.lang.Integer $r6, $r7;
        int i0, i1, $i3, $i5;
        java.lang.StringBuilder $r2, $r3, $r9;
        java.lang.String r0, $r4, $r8;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i3 = (int) -1;

        if i0 == $i3 goto label1;

        $i5 = (int) -1;

        if i1 != $i5 goto label2;

     label1:
        return r0;

     label2:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[line: %d, col: %d] ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = newarray (java.lang.Object)[2];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5[0] = $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r5[1] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r4, $r5);

        return $r8;
    }
}
