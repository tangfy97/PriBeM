public final class org.apache.poi.hwpf.sprm.SprmIterator extends java.lang.Object
{
    private byte[] _grpprl;
    int _offset;

    public void <init>(byte[], int)
    {
        int i0;
        org.apache.poi.hwpf.sprm.SprmIterator r0;
        byte[] r1;

        r0 := @this: org.apache.poi.hwpf.sprm.SprmIterator;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.hwpf.sprm.SprmIterator: byte[] _grpprl> = r1;

        r0.<org.apache.poi.hwpf.sprm.SprmIterator: int _offset> = i0;

        return;
    }

    public boolean hasNext()
    {
        byte[] $r1;
        int $i0, $i1, $i2;
        org.apache.poi.hwpf.sprm.SprmIterator r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hwpf.sprm.SprmIterator;

        $i2 = r0.<org.apache.poi.hwpf.sprm.SprmIterator: int _offset>;

        $r1 = r0.<org.apache.poi.hwpf.sprm.SprmIterator: byte[] _grpprl>;

        $i0 = lengthof $r1;

        $i1 = $i0 - 1;

        if $i2 >= $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.apache.poi.hwpf.sprm.SprmOperation next()
    {
        byte[] $r2;
        int $i0, $i1, $i2, $i3;
        org.apache.poi.hwpf.sprm.SprmIterator r1;
        org.apache.poi.hwpf.sprm.SprmOperation $r0;

        r1 := @this: org.apache.poi.hwpf.sprm.SprmIterator;

        $r0 = new org.apache.poi.hwpf.sprm.SprmOperation;

        $r2 = r1.<org.apache.poi.hwpf.sprm.SprmIterator: byte[] _grpprl>;

        $i0 = r1.<org.apache.poi.hwpf.sprm.SprmIterator: int _offset>;

        specialinvoke $r0.<org.apache.poi.hwpf.sprm.SprmOperation: void <init>(byte[],int)>($r2, $i0);

        $i1 = r1.<org.apache.poi.hwpf.sprm.SprmIterator: int _offset>;

        $i2 = virtualinvoke $r0.<org.apache.poi.hwpf.sprm.SprmOperation: int size()>();

        $i3 = $i1 + $i2;

        r1.<org.apache.poi.hwpf.sprm.SprmIterator: int _offset> = $i3;

        return $r0;
    }
}
