public class org.codehaus.jettison.badgerfish.BadgerFishConvention extends java.lang.Object implements org.codehaus.jettison.Convention
{

    public void <init>()
    {
        org.codehaus.jettison.badgerfish.BadgerFishConvention r0;

        r0 := @this: org.codehaus.jettison.badgerfish.BadgerFishConvention;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void processAttributesAndNamespaces(org.codehaus.jettison.Node, org.codehaus.jettison.json.JSONObject) throws org.codehaus.jettison.json.JSONException, javax.xml.stream.XMLStreamException
    {
        org.codehaus.jettison.Node r6;
        java.lang.String $r4, $r10, r11, r13, r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.Iterator $r1, $r8;
        org.codehaus.jettison.badgerfish.BadgerFishConvention r7;
        org.codehaus.jettison.json.JSONObject r0, r12;
        java.lang.Object $r2, $r3, $r9;
        javax.xml.namespace.QName $r5, r15;

        r7 := @this: org.codehaus.jettison.badgerfish.BadgerFishConvention;

        r6 := @parameter0: org.codehaus.jettison.Node;

        r0 := @parameter1: org.codehaus.jettison.json.JSONObject;

        $r1 = virtualinvoke r0.<org.codehaus.jettison.json.JSONObject: java.util.Iterator keys()>();

     label01:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.lang.String) $r2;

        $z1 = virtualinvoke r11.<java.lang.String: boolean startsWith(java.lang.String)>("@");

        if $z1 == 0 goto label09;

        $r3 = virtualinvoke r0.<org.codehaus.jettison.json.JSONObject: java.lang.Object opt(java.lang.String)>(r11);

        $r4 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>(1);

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z2 == 0 goto label05;

        $z4 = $r3 instanceof org.codehaus.jettison.json.JSONObject;

        if $z4 == 0 goto label08;

        r12 = (org.codehaus.jettison.json.JSONObject) $r3;

        $r8 = virtualinvoke r12.<org.codehaus.jettison.json.JSONObject: java.util.Iterator keys()>();

     label02:
        $z5 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label04;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.lang.String) $r9;

        $r10 = virtualinvoke r12.<org.codehaus.jettison.json.JSONObject: java.lang.String getString(java.lang.String)>(r13);

        $z6 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("$");

        if $z6 == 0 goto label03;

        r13 = "";

     label03:
        virtualinvoke r6.<org.codehaus.jettison.Node: void setNamespace(java.lang.String,java.lang.String)>(r13, $r10);

        goto label02;

     label04:
        goto label08;

     label05:
        r14 = (java.lang.String) $r3;

        $z3 = virtualinvoke $r4.<java.lang.String: boolean contains(java.lang.CharSequence)>(":");

        if $z3 == 0 goto label06;

        r15 = virtualinvoke r7.<org.codehaus.jettison.badgerfish.BadgerFishConvention: javax.xml.namespace.QName createQName(java.lang.String,org.codehaus.jettison.Node)>($r4, r6);

        goto label07;

     label06:
        $r5 = new javax.xml.namespace.QName;

        specialinvoke $r5.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", $r4);

        r15 = $r5;

     label07:
        virtualinvoke r6.<org.codehaus.jettison.Node: void setAttribute(javax.xml.namespace.QName,java.lang.String)>(r15, r14);

     label08:
        interfaceinvoke $r1.<java.util.Iterator: void remove()>();

     label09:
        goto label01;

     label10:
        return;
    }

    public javax.xml.namespace.QName createQName(java.lang.String, org.codehaus.jettison.Node) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.jettison.Node r1;
        javax.xml.stream.XMLStreamException $r18;
        int $i0, $i1, $i3;
        java.lang.String r0, $r2, $r5, $r6, $r7, $r15;
        org.codehaus.jettison.badgerfish.BadgerFishConvention r16;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r17;
        javax.xml.namespace.QName $r19, $r20, $r21;

        r16 := @this: org.codehaus.jettison.badgerfish.BadgerFishConvention;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.codehaus.jettison.Node;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(58);

        $i3 = (int) -1;

        if $i0 == $i3 goto label2;

        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i1 = $i0 + 1;

        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        $r7 = virtualinvoke r1.<org.codehaus.jettison.Node: java.lang.String getNamespaceURI(java.lang.String)>($r5);

        if $r7 != null goto label1;

        $r18 = new javax.xml.stream.XMLStreamException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid prefix ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on element ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<javax.xml.stream.XMLStreamException: void <init>(java.lang.String)>($r15);

        throw $r18;

     label1:
        $r19 = new javax.xml.namespace.QName;

        specialinvoke $r19.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r7, $r6, $r5);

        return $r19;

     label2:
        $r2 = virtualinvoke r1.<org.codehaus.jettison.Node: java.lang.String getNamespaceURI(java.lang.String)>("");

        if $r2 == null goto label3;

        $r20 = new javax.xml.namespace.QName;

        specialinvoke $r20.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r2, r0);

        return $r20;

     label3:
        $r21 = new javax.xml.namespace.QName;

        specialinvoke $r21.<javax.xml.namespace.QName: void <init>(java.lang.String)>(r0);

        return $r21;
    }
}
