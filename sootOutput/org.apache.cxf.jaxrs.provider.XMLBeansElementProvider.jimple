public class org.apache.cxf.jaxrs.provider.XMLBeansElementProvider extends org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider implements javax.ws.rs.ext.MessageBodyReader, javax.ws.rs.ext.MessageBodyWriter
{

    public void <init>()
    {
        org.apache.cxf.jaxrs.provider.XMLBeansElementProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.XMLBeansElementProvider;

        specialinvoke r0.<org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider: void <init>()>();

        return;
    }

    public org.apache.xmlbeans.XmlObject readFrom(java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.InputStream) throws java.io.IOException
    {
        java.lang.'annotation'.Annotation[] r5;
        javax.ws.rs.core.MultivaluedMap r7;
        javax.ws.rs.core.MediaType r6;
        java.lang.reflect.Type r4;
        org.apache.cxf.jaxrs.provider.XMLBeansElementProvider r0;
        java.lang.Class r1;
        org.apache.xmlbeans.XmlObject $r3;
        java.io.InputStream r2;

        r0 := @this: org.apache.cxf.jaxrs.provider.XMLBeansElementProvider;

        r1 := @parameter0: java.lang.Class;

        r4 := @parameter1: java.lang.reflect.Type;

        r5 := @parameter2: java.lang.'annotation'.Annotation[];

        r6 := @parameter3: javax.ws.rs.core.MediaType;

        r7 := @parameter4: javax.ws.rs.core.MultivaluedMap;

        r2 := @parameter5: java.io.InputStream;

        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.XMLBeansElementProvider: org.apache.xmlbeans.XmlObject parseXmlBean(java.lang.Class,java.io.InputStream)>(r1, r2);

        return $r3;
    }

    public void writeTo(org.apache.xmlbeans.XmlObject, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r1;
        java.lang.'annotation'.Annotation[] r5;
        javax.ws.rs.core.MultivaluedMap r7;
        javax.ws.rs.core.MediaType r6;
        java.lang.reflect.Type r4;
        org.apache.cxf.jaxrs.provider.XMLBeansElementProvider r2;
        java.lang.Class r3;
        org.apache.xmlbeans.XmlObject r0;

        r2 := @this: org.apache.cxf.jaxrs.provider.XMLBeansElementProvider;

        r0 := @parameter0: org.apache.xmlbeans.XmlObject;

        r3 := @parameter1: java.lang.Class;

        r4 := @parameter2: java.lang.reflect.Type;

        r5 := @parameter3: java.lang.'annotation'.Annotation[];

        r6 := @parameter4: javax.ws.rs.core.MediaType;

        r7 := @parameter5: javax.ws.rs.core.MultivaluedMap;

        r1 := @parameter6: java.io.OutputStream;

        interfaceinvoke r0.<org.apache.xmlbeans.XmlObject: void save(java.io.OutputStream)>(r1);

        return;
    }

    public long getSize(org.apache.xmlbeans.XmlObject, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType)
    {
        javax.ws.rs.core.MediaType r5;
        java.lang.reflect.Type r3;
        org.apache.cxf.jaxrs.provider.XMLBeansElementProvider r0;
        java.lang.Class r2;
        org.apache.xmlbeans.XmlObject r1;
        java.lang.'annotation'.Annotation[] r4;

        r0 := @this: org.apache.cxf.jaxrs.provider.XMLBeansElementProvider;

        r1 := @parameter0: org.apache.xmlbeans.XmlObject;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.reflect.Type;

        r4 := @parameter3: java.lang.'annotation'.Annotation[];

        r5 := @parameter4: javax.ws.rs.core.MediaType;

        return -1L;
    }

    public boolean isReadable(java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType)
    {
        javax.ws.rs.core.MediaType r4;
        java.lang.reflect.Type r2;
        org.apache.cxf.jaxrs.provider.XMLBeansElementProvider r0;
        java.lang.Class r1;
        java.lang.'annotation'.Annotation[] r3;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.provider.XMLBeansElementProvider;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.reflect.Type;

        r3 := @parameter2: java.lang.'annotation'.Annotation[];

        r4 := @parameter3: javax.ws.rs.core.MediaType;

        $z0 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.XMLBeansElementProvider: boolean isXmlBean(java.lang.Class)>(r1);

        return $z0;
    }

    public boolean isWriteable(java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType)
    {
        javax.ws.rs.core.MediaType r4;
        java.lang.reflect.Type r2;
        org.apache.cxf.jaxrs.provider.XMLBeansElementProvider r0;
        java.lang.Class r1;
        java.lang.'annotation'.Annotation[] r3;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.provider.XMLBeansElementProvider;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.reflect.Type;

        r3 := @parameter2: java.lang.'annotation'.Annotation[];

        r4 := @parameter3: javax.ws.rs.core.MediaType;

        $z0 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.XMLBeansElementProvider: boolean isXmlBean(java.lang.Class)>(r1);

        return $z0;
    }

    protected org.apache.xmlbeans.XmlObject parseXmlBean(java.lang.Class, javax.xml.stream.XMLStreamReader)
    {
        java.lang.Object[] $r7;
        java.lang.NoSuchMethodException $r13;
        javax.xml.stream.XMLStreamReader r4;
        org.apache.xmlbeans.XmlObject r15;
        java.lang.reflect.Method $r6;
        boolean $z0;
        java.lang.IllegalAccessException $r9;
        java.lang.Class[] $r3;
        java.lang.reflect.InvocationTargetException $r11;
        org.apache.cxf.jaxrs.provider.XMLBeansElementProvider r0;
        javax.ws.rs.WebApplicationException $r10, $r12, $r14;
        java.lang.Class r1, $r2, $r5;
        java.lang.Object $r8;

        r0 := @this: org.apache.cxf.jaxrs.provider.XMLBeansElementProvider;

        r1 := @parameter0: java.lang.Class;

        r4 := @parameter1: javax.xml.stream.XMLStreamReader;

        r15 = null;

        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.XMLBeansElementProvider: java.lang.Class getFactory(java.lang.Class)>(r1);

     label1:
        $r3 = newarray (java.lang.Class)[1];

        $r5 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        $r3[0] = $r5;

        $r6 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("parse", $r3);

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r4;

        $r8 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r7);

        $z0 = $r8 instanceof org.apache.xmlbeans.XmlObject;

        if $z0 == 0 goto label2;

        r15 = (org.apache.xmlbeans.XmlObject) $r8;

     label2:
        goto label6;

     label3:
        $r13 := @caughtexception;

        $r14 = new javax.ws.rs.WebApplicationException;

        specialinvoke $r14.<javax.ws.rs.WebApplicationException: void <init>(int)>(500);

        throw $r14;

     label4:
        $r11 := @caughtexception;

        $r12 = new javax.ws.rs.WebApplicationException;

        specialinvoke $r12.<javax.ws.rs.WebApplicationException: void <init>(int)>(500);

        throw $r12;

     label5:
        $r9 := @caughtexception;

        $r10 = new javax.ws.rs.WebApplicationException;

        specialinvoke $r10.<javax.ws.rs.WebApplicationException: void <init>(int)>(500);

        throw $r10;

     label6:
        return r15;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
        catch java.lang.IllegalAccessException from label1 to label2 with label5;
    }

    protected org.apache.xmlbeans.XmlObject parseXmlBean(java.lang.Class, java.io.InputStream)
    {
        org.apache.cxf.jaxrs.provider.XMLBeansElementProvider r2;
        java.lang.Class r3;
        org.apache.xmlbeans.XmlObject $r4;
        java.io.InputStreamReader $r0;
        java.io.InputStream r1;

        r2 := @this: org.apache.cxf.jaxrs.provider.XMLBeansElementProvider;

        r3 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.io.InputStream;

        $r0 = new java.io.InputStreamReader;

        specialinvoke $r0.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r1);

        $r4 = virtualinvoke r2.<org.apache.cxf.jaxrs.provider.XMLBeansElementProvider: org.apache.xmlbeans.XmlObject parseXmlBean(java.lang.Class,java.io.Reader)>(r3, $r0);

        return $r4;
    }

    protected org.apache.xmlbeans.XmlObject parseXmlBean(java.lang.Class, java.io.Reader)
    {
        java.lang.IllegalAccessException $r8;
        java.lang.Object[] $r5;
        java.lang.NoSuchMethodException $r10;
        java.lang.Class[] $r3;
        java.io.Reader r6;
        java.lang.reflect.InvocationTargetException $r9;
        org.apache.cxf.jaxrs.provider.XMLBeansElementProvider r0;
        java.lang.Class r1, $r2;
        java.lang.Object $r7;
        org.apache.xmlbeans.XmlObject r11;
        java.lang.reflect.Method $r4;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.provider.XMLBeansElementProvider;

        r1 := @parameter0: java.lang.Class;

        r6 := @parameter1: java.io.Reader;

        r11 = null;

        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.XMLBeansElementProvider: java.lang.Class getFactory(java.lang.Class)>(r1);

     label1:
        $r3 = newarray (java.lang.Class)[1];

        $r3[0] = class "Ljava/io/Reader;";

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("parse", $r3);

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r6;

        $r7 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r5);

        $z0 = $r7 instanceof org.apache.xmlbeans.XmlObject;

        if $z0 == 0 goto label2;

        r11 = (org.apache.xmlbeans.XmlObject) $r7;

     label2:
        goto label6;

     label3:
        $r10 := @caughtexception;

        goto label6;

     label4:
        $r9 := @caughtexception;

        goto label6;

     label5:
        $r8 := @caughtexception;

     label6:
        return r11;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
        catch java.lang.IllegalAccessException from label1 to label2 with label5;
    }

    private java.lang.Class getFactory(java.lang.Class)
    {
        java.lang.Class[] $r1, $r3;
        org.apache.cxf.jaxrs.provider.XMLBeansElementProvider r6;
        int i0, i1, i2, i3;
        java.lang.Class r0, r2, r4, r7;
        java.lang.String $r5;
        boolean $z0;

        r6 := @this: org.apache.cxf.jaxrs.provider.XMLBeansElementProvider;

        r0 := @parameter0: java.lang.Class;

        r7 = null;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        i0 = lengthof $r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label5;

        r2 = $r1[i2];

        $r3 = virtualinvoke r2.<java.lang.Class: java.lang.Class[] getDeclaredClasses()>();

        i1 = lengthof $r3;

        i3 = 0;

     label2:
        if i3 >= i1 goto label4;

        r4 = $r3[i3];

        $r5 = virtualinvoke r4.<java.lang.Class: java.lang.String getSimpleName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("Factory");

        if $z0 == 0 goto label3;

        r7 = r4;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        return r7;
    }

    protected boolean isXmlBean(java.lang.Class)
    {
        int i0, $i1, i2, i3;
        java.lang.String $r6;
        boolean $z0, $z1, z2;
        java.lang.Class[] $r0, r2, $r4, r8;
        org.apache.cxf.jaxrs.provider.XMLBeansElementProvider r7;
        java.lang.Class r1, r3, r5;

        r7 := @this: org.apache.cxf.jaxrs.provider.XMLBeansElementProvider;

        r1 := @parameter0: java.lang.Class;

        z2 = 0;

        $r0 = newarray (java.lang.Class)[1];

        $r0[0] = r1;

        r8 = $r0;

        $z0 = virtualinvoke r1.<java.lang.Class: boolean isInterface()>();

        if $z0 != 0 goto label1;

        r8 = virtualinvoke r1.<java.lang.Class: java.lang.Class[] getInterfaces()>();

     label1:
        r2 = r8;

        $i1 = lengthof r8;

        i2 = 0;

     label2:
        if i2 >= $i1 goto label6;

        r3 = r2[i2];

        $r4 = virtualinvoke r3.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        i0 = lengthof $r4;

        i3 = 0;

     label3:
        if i3 >= i0 goto label5;

        r5 = $r4[i3];

        $r6 = virtualinvoke r5.<java.lang.Class: java.lang.String getName()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("org.apache.xmlbeans.XmlObject");

        if $z1 == 0 goto label4;

        z2 = 1;

     label4:
        i3 = i3 + 1;

        goto label3;

     label5:
        i2 = i2 + 1;

        goto label2;

     label6:
        return z2;
    }

    public volatile java.lang.Object readFrom(java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.InputStream) throws java.io.IOException, javax.ws.rs.WebApplicationException
    {
        java.lang.'annotation'.Annotation[] r3;
        javax.ws.rs.core.MultivaluedMap r5;
        javax.ws.rs.core.MediaType r4;
        java.lang.reflect.Type r2;
        org.apache.cxf.jaxrs.provider.XMLBeansElementProvider r0;
        java.lang.Class r1;
        org.apache.xmlbeans.XmlObject $r7;
        java.io.InputStream r6;

        r0 := @this: org.apache.cxf.jaxrs.provider.XMLBeansElementProvider;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.reflect.Type;

        r3 := @parameter2: java.lang.'annotation'.Annotation[];

        r4 := @parameter3: javax.ws.rs.core.MediaType;

        r5 := @parameter4: javax.ws.rs.core.MultivaluedMap;

        r6 := @parameter5: java.io.InputStream;

        $r7 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.XMLBeansElementProvider: org.apache.xmlbeans.XmlObject readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)>(r1, r2, r3, r4, r5, r6);

        return $r7;
    }

    public volatile void writeTo(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream) throws java.io.IOException, javax.ws.rs.WebApplicationException
    {
        java.io.OutputStream r7;
        java.lang.'annotation'.Annotation[] r4;
        javax.ws.rs.core.MultivaluedMap r6;
        javax.ws.rs.core.MediaType r5;
        java.lang.reflect.Type r3;
        org.apache.cxf.jaxrs.provider.XMLBeansElementProvider r0;
        java.lang.Object r1;
        java.lang.Class r2;
        org.apache.xmlbeans.XmlObject $r8;

        r0 := @this: org.apache.cxf.jaxrs.provider.XMLBeansElementProvider;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.reflect.Type;

        r4 := @parameter3: java.lang.'annotation'.Annotation[];

        r5 := @parameter4: javax.ws.rs.core.MediaType;

        r6 := @parameter5: javax.ws.rs.core.MultivaluedMap;

        r7 := @parameter6: java.io.OutputStream;

        $r8 = (org.apache.xmlbeans.XmlObject) r1;

        virtualinvoke r0.<org.apache.cxf.jaxrs.provider.XMLBeansElementProvider: void writeTo(org.apache.xmlbeans.XmlObject,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)>($r8, r2, r3, r4, r5, r6, r7);

        return;
    }

    public volatile long getSize(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType)
    {
        long $l0;
        java.lang.'annotation'.Annotation[] r4;
        javax.ws.rs.core.MediaType r5;
        java.lang.reflect.Type r3;
        org.apache.cxf.jaxrs.provider.XMLBeansElementProvider r0;
        java.lang.Object r1;
        java.lang.Class r2;
        org.apache.xmlbeans.XmlObject $r6;

        r0 := @this: org.apache.cxf.jaxrs.provider.XMLBeansElementProvider;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.reflect.Type;

        r4 := @parameter3: java.lang.'annotation'.Annotation[];

        r5 := @parameter4: javax.ws.rs.core.MediaType;

        $r6 = (org.apache.xmlbeans.XmlObject) r1;

        $l0 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.XMLBeansElementProvider: long getSize(org.apache.xmlbeans.XmlObject,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)>($r6, r2, r3, r4, r5);

        return $l0;
    }
}
