public class org.apache.lucene.analysis.util.CharArraySet extends java.util.AbstractSet
{
    public static final org.apache.lucene.analysis.util.CharArraySet EMPTY_SET;
    private static final java.lang.Object PLACEHOLDER;
    private final org.apache.lucene.analysis.util.CharArrayMap map;

    public void <init>(org.apache.lucene.util.Version, int, boolean)
    {
        int i0;
        org.apache.lucene.analysis.util.CharArraySet r0;
        org.apache.lucene.util.Version r2;
        org.apache.lucene.analysis.util.CharArrayMap $r1;
        boolean z0;

        r0 := @this: org.apache.lucene.analysis.util.CharArraySet;

        r2 := @parameter0: org.apache.lucene.util.Version;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = new org.apache.lucene.analysis.util.CharArrayMap;

        specialinvoke $r1.<org.apache.lucene.analysis.util.CharArrayMap: void <init>(org.apache.lucene.util.Version,int,boolean)>(r2, i0, z0);

        specialinvoke r0.<org.apache.lucene.analysis.util.CharArraySet: void <init>(org.apache.lucene.analysis.util.CharArrayMap)>($r1);

        return;
    }

    public void <init>(org.apache.lucene.util.Version, java.util.Collection, boolean)
    {
        java.util.Collection r2;
        int $i0;
        org.apache.lucene.analysis.util.CharArraySet r0;
        org.apache.lucene.util.Version r1;
        boolean z0;

        r0 := @this: org.apache.lucene.analysis.util.CharArraySet;

        r1 := @parameter0: org.apache.lucene.util.Version;

        r2 := @parameter1: java.util.Collection;

        z0 := @parameter2: boolean;

        $i0 = interfaceinvoke r2.<java.util.Collection: int size()>();

        specialinvoke r0.<org.apache.lucene.analysis.util.CharArraySet: void <init>(org.apache.lucene.util.Version,int,boolean)>(r1, $i0, z0);

        virtualinvoke r0.<org.apache.lucene.analysis.util.CharArraySet: boolean addAll(java.util.Collection)>(r2);

        return;
    }

    void <init>(org.apache.lucene.analysis.util.CharArrayMap)
    {
        org.apache.lucene.analysis.util.CharArraySet r0;
        org.apache.lucene.analysis.util.CharArrayMap r1;

        r0 := @this: org.apache.lucene.analysis.util.CharArraySet;

        r1 := @parameter0: org.apache.lucene.analysis.util.CharArrayMap;

        specialinvoke r0.<java.util.AbstractSet: void <init>()>();

        r0.<org.apache.lucene.analysis.util.CharArraySet: org.apache.lucene.analysis.util.CharArrayMap map> = r1;

        return;
    }

    public void clear()
    {
        org.apache.lucene.analysis.util.CharArraySet r0;
        org.apache.lucene.analysis.util.CharArrayMap $r1;

        r0 := @this: org.apache.lucene.analysis.util.CharArraySet;

        $r1 = r0.<org.apache.lucene.analysis.util.CharArraySet: org.apache.lucene.analysis.util.CharArrayMap map>;

        virtualinvoke $r1.<org.apache.lucene.analysis.util.CharArrayMap: void clear()>();

        return;
    }

    public boolean contains(char[], int, int)
    {
        int i0, i1;
        org.apache.lucene.analysis.util.CharArraySet r0;
        char[] r1;
        org.apache.lucene.analysis.util.CharArrayMap $r2;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.util.CharArraySet;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.lucene.analysis.util.CharArraySet: org.apache.lucene.analysis.util.CharArrayMap map>;

        $z0 = virtualinvoke $r2.<org.apache.lucene.analysis.util.CharArrayMap: boolean containsKey(char[],int,int)>(r1, i0, i1);

        return $z0;
    }

    public boolean contains(java.lang.CharSequence)
    {
        java.lang.CharSequence r1;
        org.apache.lucene.analysis.util.CharArraySet r0;
        org.apache.lucene.analysis.util.CharArrayMap $r2;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.util.CharArraySet;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<org.apache.lucene.analysis.util.CharArraySet: org.apache.lucene.analysis.util.CharArrayMap map>;

        $z0 = virtualinvoke $r2.<org.apache.lucene.analysis.util.CharArrayMap: boolean containsKey(java.lang.CharSequence)>(r1);

        return $z0;
    }

    public boolean contains(java.lang.Object)
    {
        org.apache.lucene.analysis.util.CharArraySet r0;
        java.lang.Object r1;
        org.apache.lucene.analysis.util.CharArrayMap $r2;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.util.CharArraySet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.lucene.analysis.util.CharArraySet: org.apache.lucene.analysis.util.CharArrayMap map>;

        $z0 = virtualinvoke $r2.<org.apache.lucene.analysis.util.CharArrayMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean add(java.lang.Object)
    {
        org.apache.lucene.analysis.util.CharArraySet r0;
        java.lang.Object r1, $r2, $r4;
        org.apache.lucene.analysis.util.CharArrayMap $r3;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.util.CharArraySet;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<org.apache.lucene.analysis.util.CharArraySet: org.apache.lucene.analysis.util.CharArrayMap map>;

        $r2 = <org.apache.lucene.analysis.util.CharArraySet: java.lang.Object PLACEHOLDER>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.analysis.util.CharArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r2);

        if $r4 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean add(java.lang.CharSequence)
    {
        java.lang.CharSequence r1;
        org.apache.lucene.analysis.util.CharArraySet r0;
        java.lang.Object $r2, $r4;
        org.apache.lucene.analysis.util.CharArrayMap $r3;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.util.CharArraySet;

        r1 := @parameter0: java.lang.CharSequence;

        $r3 = r0.<org.apache.lucene.analysis.util.CharArraySet: org.apache.lucene.analysis.util.CharArrayMap map>;

        $r2 = <org.apache.lucene.analysis.util.CharArraySet: java.lang.Object PLACEHOLDER>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.analysis.util.CharArrayMap: java.lang.Object put(java.lang.CharSequence,java.lang.Object)>(r1, $r2);

        if $r4 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean add(java.lang.String)
    {
        org.apache.lucene.analysis.util.CharArraySet r0;
        java.lang.Object $r2, $r4;
        java.lang.String r1;
        org.apache.lucene.analysis.util.CharArrayMap $r3;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.util.CharArraySet;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.lucene.analysis.util.CharArraySet: org.apache.lucene.analysis.util.CharArrayMap map>;

        $r2 = <org.apache.lucene.analysis.util.CharArraySet: java.lang.Object PLACEHOLDER>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.analysis.util.CharArrayMap: java.lang.Object put(java.lang.String,java.lang.Object)>(r1, $r2);

        if $r4 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean add(char[])
    {
        org.apache.lucene.analysis.util.CharArraySet r0;
        char[] r1;
        java.lang.Object $r2, $r4;
        org.apache.lucene.analysis.util.CharArrayMap $r3;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.util.CharArraySet;

        r1 := @parameter0: char[];

        $r3 = r0.<org.apache.lucene.analysis.util.CharArraySet: org.apache.lucene.analysis.util.CharArrayMap map>;

        $r2 = <org.apache.lucene.analysis.util.CharArraySet: java.lang.Object PLACEHOLDER>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.analysis.util.CharArrayMap: java.lang.Object put(char[],java.lang.Object)>(r1, $r2);

        if $r4 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int size()
    {
        int $i0;
        org.apache.lucene.analysis.util.CharArraySet r0;
        org.apache.lucene.analysis.util.CharArrayMap $r1;

        r0 := @this: org.apache.lucene.analysis.util.CharArraySet;

        $r1 = r0.<org.apache.lucene.analysis.util.CharArraySet: org.apache.lucene.analysis.util.CharArrayMap map>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.analysis.util.CharArrayMap: int size()>();

        return $i0;
    }

    public static org.apache.lucene.analysis.util.CharArraySet unmodifiableSet(org.apache.lucene.analysis.util.CharArraySet)
    {
        java.lang.NullPointerException $r7;
        org.apache.lucene.analysis.util.CharArraySet r0, $r1, $r3, $r6;
        org.apache.lucene.analysis.util.CharArrayMap $r2, $r4, $r5;
        boolean $z0;

        r0 := @parameter0: org.apache.lucene.analysis.util.CharArraySet;

        if r0 != null goto label1;

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("Given set is null");

        throw $r7;

     label1:
        $r1 = <org.apache.lucene.analysis.util.CharArraySet: org.apache.lucene.analysis.util.CharArraySet EMPTY_SET>;

        if r0 != $r1 goto label2;

        $r6 = <org.apache.lucene.analysis.util.CharArraySet: org.apache.lucene.analysis.util.CharArraySet EMPTY_SET>;

        return $r6;

     label2:
        $r2 = r0.<org.apache.lucene.analysis.util.CharArraySet: org.apache.lucene.analysis.util.CharArrayMap map>;

        $z0 = $r2 instanceof org.apache.lucene.analysis.util.CharArrayMap$UnmodifiableCharArrayMap;

        if $z0 == 0 goto label3;

        return r0;

     label3:
        $r3 = new org.apache.lucene.analysis.util.CharArraySet;

        $r4 = r0.<org.apache.lucene.analysis.util.CharArraySet: org.apache.lucene.analysis.util.CharArrayMap map>;

        $r5 = staticinvoke <org.apache.lucene.analysis.util.CharArrayMap: org.apache.lucene.analysis.util.CharArrayMap unmodifiableMap(org.apache.lucene.analysis.util.CharArrayMap)>($r4);

        specialinvoke $r3.<org.apache.lucene.analysis.util.CharArraySet: void <init>(org.apache.lucene.analysis.util.CharArrayMap)>($r5);

        return $r3;
    }

    public static org.apache.lucene.analysis.util.CharArraySet copy(org.apache.lucene.util.Version, java.util.Set)
    {
        java.util.Set r0;
        org.apache.lucene.util.Version r3, $r8;
        org.apache.lucene.analysis.util.CharArraySet $r1, $r2, r4, $r5, $r10;
        boolean $z0;
        org.apache.lucene.analysis.util.CharArrayMap $r6, $r7, $r9;

        r3 := @parameter0: org.apache.lucene.util.Version;

        r0 := @parameter1: java.util.Set;

        $r1 = <org.apache.lucene.analysis.util.CharArraySet: org.apache.lucene.analysis.util.CharArraySet EMPTY_SET>;

        if r0 != $r1 goto label1;

        $r10 = <org.apache.lucene.analysis.util.CharArraySet: org.apache.lucene.analysis.util.CharArraySet EMPTY_SET>;

        return $r10;

     label1:
        $z0 = r0 instanceof org.apache.lucene.analysis.util.CharArraySet;

        if $z0 == 0 goto label2;

        r4 = (org.apache.lucene.analysis.util.CharArraySet) r0;

        $r5 = new org.apache.lucene.analysis.util.CharArraySet;

        $r6 = r4.<org.apache.lucene.analysis.util.CharArraySet: org.apache.lucene.analysis.util.CharArrayMap map>;

        $r8 = $r6.<org.apache.lucene.analysis.util.CharArrayMap: org.apache.lucene.util.Version matchVersion>;

        $r7 = r4.<org.apache.lucene.analysis.util.CharArraySet: org.apache.lucene.analysis.util.CharArrayMap map>;

        $r9 = staticinvoke <org.apache.lucene.analysis.util.CharArrayMap: org.apache.lucene.analysis.util.CharArrayMap copy(org.apache.lucene.util.Version,java.util.Map)>($r8, $r7);

        specialinvoke $r5.<org.apache.lucene.analysis.util.CharArraySet: void <init>(org.apache.lucene.analysis.util.CharArrayMap)>($r9);

        return $r5;

     label2:
        $r2 = new org.apache.lucene.analysis.util.CharArraySet;

        specialinvoke $r2.<org.apache.lucene.analysis.util.CharArraySet: void <init>(org.apache.lucene.util.Version,java.util.Collection,boolean)>(r3, r0, 0);

        return $r2;
    }

    public java.util.Iterator iterator()
    {
        java.util.Iterator $r3;
        org.apache.lucene.analysis.util.CharArraySet r0;
        java.util.Set $r2;
        org.apache.lucene.analysis.util.CharArrayMap $r1;

        r0 := @this: org.apache.lucene.analysis.util.CharArraySet;

        $r1 = r0.<org.apache.lucene.analysis.util.CharArraySet: org.apache.lucene.analysis.util.CharArrayMap map>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.analysis.util.CharArrayMap: java.util.Set originalKeySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        return $r3;
    }

    public java.lang.String toString()
    {
        java.util.Iterator $r2;
        int $i0;
        org.apache.lucene.analysis.util.CharArraySet r1;
        char[] $r6, $r7;
        java.lang.StringBuilder $r0, $r3;
        java.lang.Object $r5;
        java.lang.String $r4;
        boolean $z0, $z1;

        r1 := @this: org.apache.lucene.analysis.util.CharArraySet;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("[");

        $r2 = virtualinvoke r1.<org.apache.lucene.analysis.util.CharArraySet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $i0 = virtualinvoke $r0.<java.lang.StringBuilder: int length()>();

        if $i0 <= 1 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label2:
        $z1 = $r5 instanceof char[];

        if $z1 == 0 goto label3;

        $r6 = (char[]) $r5;

        $r7 = (char[]) $r6;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char[])>($r7);

        goto label4;

     label3:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

     label4:
        goto label1;

     label5:
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    static void <clinit>()
    {
        org.apache.lucene.analysis.util.CharArraySet $r0;
        java.lang.Object $r2;
        org.apache.lucene.analysis.util.CharArrayMap $r1;

        $r0 = new org.apache.lucene.analysis.util.CharArraySet;

        $r1 = staticinvoke <org.apache.lucene.analysis.util.CharArrayMap: org.apache.lucene.analysis.util.CharArrayMap emptyMap()>();

        specialinvoke $r0.<org.apache.lucene.analysis.util.CharArraySet: void <init>(org.apache.lucene.analysis.util.CharArrayMap)>($r1);

        <org.apache.lucene.analysis.util.CharArraySet: org.apache.lucene.analysis.util.CharArraySet EMPTY_SET> = $r0;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        <org.apache.lucene.analysis.util.CharArraySet: java.lang.Object PLACEHOLDER> = $r2;

        return;
    }
}
