public class org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument extends org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument implements org.waveprotocol.wave.model.wave.data.ObservableDocumentOperationSink, org.waveprotocol.wave.model.document.ObservableDocument
{
    private final org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$DocumentHandlerManager handlerManager;

    public static org.waveprotocol.wave.model.wave.data.DocumentFactory createFactory(org.waveprotocol.wave.model.schema.SchemaProvider)
    {
        org.waveprotocol.wave.model.schema.SchemaProvider r1;
        org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$1 $r0;

        r1 := @parameter0: org.waveprotocol.wave.model.schema.SchemaProvider;

        $r0 = new org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$1;

        specialinvoke $r0.<org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$1: void <init>(org.waveprotocol.wave.model.schema.SchemaProvider)>(r1);

        return $r0;
    }

    public void <init>(org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema, org.waveprotocol.wave.model.document.operation.DocInitialization)
    {
        org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$DocumentHandlerManager $r3;
        org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema r1;
        org.waveprotocol.wave.model.document.operation.DocInitialization r2;
        org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.DocInitialization;

        $r3 = new org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$DocumentHandlerManager;

        specialinvoke $r3.<org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$DocumentHandlerManager: void <init>(org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$1)>(null);

        specialinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument: void <init>(org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema,org.waveprotocol.wave.model.document.operation.DocInitialization,org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$DocumentHandlerManager)>(r1, r2, $r3);

        return;
    }

    private void <init>(org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema, org.waveprotocol.wave.model.document.operation.DocInitialization, org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$DocumentHandlerManager)
    {
        org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$DocumentHandlerManager r3;
        org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema r2;
        org.waveprotocol.wave.model.document.operation.DocInitialization r1;
        org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument;

        r2 := @parameter0: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema;

        r1 := @parameter1: org.waveprotocol.wave.model.document.operation.DocInitialization;

        r3 := @parameter2: org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$DocumentHandlerManager;

        specialinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument: void <init>(org.waveprotocol.wave.model.document.operation.DocInitialization,org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema,org.waveprotocol.wave.model.document.indexed.DocumentHandler)>(r1, r2, r3);

        r0.<org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument: org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$DocumentHandlerManager handlerManager> = r3;

        return;
    }

    public void 'with'(org.waveprotocol.wave.model.document.ObservableMutableDocument$Action)
    {
        org.waveprotocol.wave.model.document.ObservableMutableDocument$Action r2;
        org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument r0;
        org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$2 $r1;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument;

        r2 := @parameter0: org.waveprotocol.wave.model.document.ObservableMutableDocument$Action;

        $r1 = new org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$2;

        specialinvoke $r1.<org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$2: void <init>(org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument,org.waveprotocol.wave.model.document.ObservableMutableDocument$Action)>(r0, r2);

        specialinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument: void 'with'(org.waveprotocol.wave.model.document.MutableDocument$Action)>($r1);

        return;
    }

    public java.lang.Object 'with'(org.waveprotocol.wave.model.document.ObservableMutableDocument$Method)
    {
        org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$3 $r1;
        java.lang.Object $r3;
        org.waveprotocol.wave.model.document.ObservableMutableDocument$Method r2;
        org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument;

        r2 := @parameter0: org.waveprotocol.wave.model.document.ObservableMutableDocument$Method;

        $r1 = new org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$3;

        specialinvoke $r1.<org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$3: void <init>(org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument,org.waveprotocol.wave.model.document.ObservableMutableDocument$Method)>(r0, r2);

        $r3 = specialinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument: java.lang.Object 'with'(org.waveprotocol.wave.model.document.MutableDocument$Method)>($r1);

        return $r3;
    }

    public void addListener(org.waveprotocol.wave.model.document.indexed.DocumentHandler)
    {
        org.waveprotocol.wave.model.document.indexed.DocumentHandler r1;
        org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument r0;
        org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$DocumentHandlerManager $r2;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument;

        r1 := @parameter0: org.waveprotocol.wave.model.document.indexed.DocumentHandler;

        $r2 = r0.<org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument: org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$DocumentHandlerManager handlerManager>;

        virtualinvoke $r2.<org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$DocumentHandlerManager: void addHandler(org.waveprotocol.wave.model.document.indexed.DocumentHandler)>(r1);

        return;
    }

    public void removeListener(org.waveprotocol.wave.model.document.indexed.DocumentHandler)
    {
        org.waveprotocol.wave.model.document.indexed.DocumentHandler r1;
        org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument r0;
        org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$DocumentHandlerManager $r2;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument;

        r1 := @parameter0: org.waveprotocol.wave.model.document.indexed.DocumentHandler;

        $r2 = r0.<org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument: org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$DocumentHandlerManager handlerManager>;

        virtualinvoke $r2.<org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$DocumentHandlerManager: void removeHandler(org.waveprotocol.wave.model.document.indexed.DocumentHandler)>(r1);

        return;
    }

    protected void createSubstrateDocument() throws org.waveprotocol.wave.model.operation.OperationException
    {
        org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument r0;
        org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$DocumentHandlerManager $r1, $r2;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument;

        $r1 = r0.<org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument: org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$DocumentHandlerManager handlerManager>;

        staticinvoke <org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$DocumentHandlerManager: void access$100(org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$DocumentHandlerManager,boolean)>($r1, 1);

        specialinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.PluggableMutableDocument: void createSubstrateDocument()>();

        $r2 = r0.<org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument: org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$DocumentHandlerManager handlerManager>;

        staticinvoke <org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$DocumentHandlerManager: void access$100(org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument$DocumentHandlerManager,boolean)>($r2, 0);

        return;
    }

    public volatile void removeListener(java.lang.Object)
    {
        java.lang.Object r1;
        org.waveprotocol.wave.model.document.indexed.DocumentHandler $r2;
        org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.document.indexed.DocumentHandler) r1;

        virtualinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument: void removeListener(org.waveprotocol.wave.model.document.indexed.DocumentHandler)>($r2);

        return;
    }

    public volatile void addListener(java.lang.Object)
    {
        java.lang.Object r1;
        org.waveprotocol.wave.model.document.indexed.DocumentHandler $r2;
        org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument r0;

        r0 := @this: org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.document.indexed.DocumentHandler) r1;

        virtualinvoke r0.<org.waveprotocol.wave.model.wave.data.impl.ObservablePluggableMutableDocument: void addListener(org.waveprotocol.wave.model.document.indexed.DocumentHandler)>($r2);

        return;
    }
}
