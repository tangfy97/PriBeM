class com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$1 extends java.lang.Object implements java.util.Comparator
{
    final com.sun.jwt.resources.editor.editors.BaseForm$EditorTable this$0;

    void <init>(com.sun.jwt.resources.editor.editors.BaseForm$EditorTable)
    {
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$1 r0;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable r1;

        r0 := @this: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$1;

        r1 := @parameter0: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable;

        r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$1: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(java.lang.Object, java.lang.Object)
    {
        int $i0, $i2;
        java.lang.Object r0, r2;
        java.lang.Class $r1, $r3;
        java.lang.Comparable $r4;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$1 r5;
        boolean $z0;

        r5 := @this: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$1;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 != $r3 goto label1;

        $z0 = r0 instanceof java.lang.Comparable;

        if $z0 == 0 goto label1;

        $r4 = (java.lang.Comparable) r0;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>(r2);

        return $i0;

     label1:
        $i2 = (int) -1;

        return $i2;
    }
}
