public final class org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl extends java.lang.Object implements org.waveprotocol.wave.diff.WaveletDiffSnapshot, org.waveprotocol.wave.communication.gson.GsonSerializable, org.waveprotocol.wave.communication.proto.ProtoWrapper
{
    private org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot proto;
    private org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder protoBuilder;

    public void <init>()
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot proto> = null;

        $r1 = staticinvoke <org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder newBuilder()>();

        r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder protoBuilder> = $r1;

        return;
    }

    public void <init>(org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot)
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder $r1;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot r2;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        r2 := @parameter0: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot proto> = null;

        $r1 = staticinvoke <org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder newBuilder()>();

        r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder protoBuilder> = $r1;

        r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot proto> = r2;

        return;
    }

    public void <init>(org.waveprotocol.wave.diff.WaveletDiffSnapshot)
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.WaveletDiffSnapshot r2;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        r2 := @parameter0: org.waveprotocol.wave.diff.WaveletDiffSnapshot;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot proto> = null;

        $r1 = staticinvoke <org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder newBuilder()>();

        r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder protoBuilder> = $r1;

        virtualinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void copyFrom(org.waveprotocol.wave.diff.WaveletDiffSnapshot)>(r2);

        return;
    }

    public org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot getPB()
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot proto>;

        return $r1;
    }

    public void setPB(org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot)
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        r1 := @parameter0: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot;

        r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot proto> = r1;

        r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder protoBuilder> = null;

        return;
    }

    public void copyFrom(org.waveprotocol.wave.diff.WaveletDiffSnapshot)
    {
        org.waveprotocol.wave.diff.WaveletDiffSnapshot r1;
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl $r11;
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        java.lang.String $r2, $r13, r19, r20, r21;
        org.waveprotocol.wave.federation.ProtocolHashedVersion $r12;
        boolean $z0, $z1, $z2, $z3;
        double $d0, $d1;
        java.util.Iterator $r4, $r6, $r8, $r10;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl $r15;
        java.util.List $r3, $r5, $r7, $r9;
        org.waveprotocol.wave.diff.DocumentDiffSnapshot r22;
        java.lang.Object $r14, $r16, $r17, $r18;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        r1 := @parameter0: org.waveprotocol.wave.diff.WaveletDiffSnapshot;

        $r2 = interfaceinvoke r1.<org.waveprotocol.wave.diff.WaveletDiffSnapshot: java.lang.String getWaveletId()>();

        virtualinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void setWaveletId(java.lang.String)>($r2);

        virtualinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void clearParticipant()>();

        $r3 = interfaceinvoke r1.<org.waveprotocol.wave.diff.WaveletDiffSnapshot: java.util.List getParticipant()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r18 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r19 = (java.lang.String) $r18;

        virtualinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void addParticipant(java.lang.String)>(r19);

        goto label1;

     label2:
        virtualinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void clearAddedParticipant()>();

        $r5 = interfaceinvoke r1.<org.waveprotocol.wave.diff.WaveletDiffSnapshot: java.util.List getAddedParticipant()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r17 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.lang.String) $r17;

        virtualinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void addAddedParticipant(java.lang.String)>(r20);

        goto label3;

     label4:
        virtualinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void clearRemovedParticipant()>();

        $r7 = interfaceinvoke r1.<org.waveprotocol.wave.diff.WaveletDiffSnapshot: java.util.List getRemovedParticipant()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r16 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r21 = (java.lang.String) $r16;

        virtualinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void addRemovedParticipant(java.lang.String)>(r21);

        goto label5;

     label6:
        virtualinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void clearDocument()>();

        $r9 = interfaceinvoke r1.<org.waveprotocol.wave.diff.WaveletDiffSnapshot: java.util.List getDocument()>();

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label7:
        $z3 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label8;

        $r14 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r22 = (org.waveprotocol.wave.diff.DocumentDiffSnapshot) $r14;

        $r15 = new org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        specialinvoke $r15.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void <init>(org.waveprotocol.wave.diff.DocumentDiffSnapshot)>(r22);

        virtualinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void addDocument(org.waveprotocol.wave.diff.DocumentDiffSnapshot)>($r15);

        goto label7;

     label8:
        $r11 = new org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        $r12 = interfaceinvoke r1.<org.waveprotocol.wave.diff.WaveletDiffSnapshot: org.waveprotocol.wave.federation.ProtocolHashedVersion getVersion()>();

        specialinvoke $r11.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: void <init>(org.waveprotocol.wave.federation.ProtocolHashedVersion)>($r12);

        virtualinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void setVersion(org.waveprotocol.wave.federation.ProtocolHashedVersion)>($r11);

        $d0 = interfaceinvoke r1.<org.waveprotocol.wave.diff.WaveletDiffSnapshot: double getLastModifiedTime()>();

        virtualinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void setLastModifiedTime(double)>($d0);

        $r13 = interfaceinvoke r1.<org.waveprotocol.wave.diff.WaveletDiffSnapshot: java.lang.String getCreator()>();

        virtualinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void setCreator(java.lang.String)>($r13);

        $d1 = interfaceinvoke r1.<org.waveprotocol.wave.diff.WaveletDiffSnapshot: double getCreationTime()>();

        virtualinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void setCreationTime(double)>($d1);

        return;
    }

    public java.lang.String getWaveletId()
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        java.lang.String $r2;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot proto>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot: java.lang.String getWaveletId()>();

        return $r2;
    }

    public void setWaveletId(java.lang.String)
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        java.lang.String r1;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder $r2;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder setWaveletId(java.lang.String)>(r1);

        return;
    }

    public java.util.List getParticipant()
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        java.util.List $r2, $r3;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot proto>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot: java.util.List getParticipantList()>();

        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r3;
    }

    public void addAllParticipant(java.util.List)
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        java.util.List r1;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder $r2;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder addAllParticipant(java.lang.Iterable)>(r1);

        return;
    }

    public java.lang.String getParticipant(int)
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        int i0;
        java.lang.String $r2;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        i0 := @parameter0: int;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot proto>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot: java.lang.String getParticipant(int)>(i0);

        return $r2;
    }

    public void setParticipant(int, java.lang.String)
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        int i0;
        java.lang.String r1;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder $r2;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder setParticipant(int,java.lang.String)>(i0, r1);

        return;
    }

    public int getParticipantSize()
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        int $i0;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot proto>;

        $i0 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot: int getParticipantCount()>();

        return $i0;
    }

    public void addParticipant(java.lang.String)
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        java.lang.String r1;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder $r2;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder addParticipant(java.lang.String)>(r1);

        return;
    }

    public void clearParticipant()
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder protoBuilder>;

        virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder clearParticipant()>();

        return;
    }

    public java.util.List getAddedParticipant()
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        java.util.List $r2, $r3;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot proto>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot: java.util.List getAddedParticipantList()>();

        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r3;
    }

    public void addAllAddedParticipant(java.util.List)
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        java.util.List r1;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder $r2;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder addAllAddedParticipant(java.lang.Iterable)>(r1);

        return;
    }

    public java.lang.String getAddedParticipant(int)
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        int i0;
        java.lang.String $r2;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        i0 := @parameter0: int;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot proto>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot: java.lang.String getAddedParticipant(int)>(i0);

        return $r2;
    }

    public void setAddedParticipant(int, java.lang.String)
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        int i0;
        java.lang.String r1;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder $r2;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder setAddedParticipant(int,java.lang.String)>(i0, r1);

        return;
    }

    public int getAddedParticipantSize()
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        int $i0;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot proto>;

        $i0 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot: int getAddedParticipantCount()>();

        return $i0;
    }

    public void addAddedParticipant(java.lang.String)
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        java.lang.String r1;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder $r2;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder addAddedParticipant(java.lang.String)>(r1);

        return;
    }

    public void clearAddedParticipant()
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder protoBuilder>;

        virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder clearAddedParticipant()>();

        return;
    }

    public java.util.List getRemovedParticipant()
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        java.util.List $r2, $r3;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot proto>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot: java.util.List getRemovedParticipantList()>();

        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r3;
    }

    public void addAllRemovedParticipant(java.util.List)
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        java.util.List r1;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder $r2;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder addAllRemovedParticipant(java.lang.Iterable)>(r1);

        return;
    }

    public java.lang.String getRemovedParticipant(int)
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        int i0;
        java.lang.String $r2;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        i0 := @parameter0: int;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot proto>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot: java.lang.String getRemovedParticipant(int)>(i0);

        return $r2;
    }

    public void setRemovedParticipant(int, java.lang.String)
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        int i0;
        java.lang.String r1;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder $r2;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder setRemovedParticipant(int,java.lang.String)>(i0, r1);

        return;
    }

    public int getRemovedParticipantSize()
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        int $i0;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot proto>;

        $i0 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot: int getRemovedParticipantCount()>();

        return $i0;
    }

    public void addRemovedParticipant(java.lang.String)
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        java.lang.String r1;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder $r2;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder addRemovedParticipant(java.lang.String)>(r1);

        return;
    }

    public void clearRemovedParticipant()
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder protoBuilder>;

        virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder clearRemovedParticipant()>();

        return;
    }

    public java.util.List getDocument()
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r4;
        int $i0, i1;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl $r2;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot $r3;
        java.util.ArrayList $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: int getDocumentSize()>();

        if i1 >= $i0 goto label2;

        $r2 = new org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        $r3 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot proto>;

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot getDocument(int)>(i1);

        specialinvoke $r2.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void <init>(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r4);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public void addAllDocument(java.util.List)
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r4;
        java.util.List r0;
        java.util.Iterator $r1;
        org.waveprotocol.wave.diff.DocumentDiffSnapshot r3;
        java.lang.Object $r2;
        boolean $z0;

        r4 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.waveprotocol.wave.diff.DocumentDiffSnapshot) $r2;

        virtualinvoke r4.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void addDocument(org.waveprotocol.wave.diff.DocumentDiffSnapshot)>(r3);

        goto label1;

     label2:
        return;
    }

    public org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl getDocument(int)
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r3;
        int i0;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl $r1;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot $r2;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        i0 := @parameter0: int;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = new org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        $r2 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot proto>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot getDocument(int)>(i0);

        specialinvoke $r1.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void <init>(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r3);

        return $r1;
    }

    public void setDocument(int, org.waveprotocol.wave.diff.DocumentDiffSnapshot)
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r4;
        int i0;
        org.waveprotocol.wave.diff.DocumentDiffSnapshot r1;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder $r2;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl $r3;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: org.waveprotocol.wave.diff.DocumentDiffSnapshot;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder protoBuilder>;

        $r3 = specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl getOrCreateDocumentDiffSnapshotProtoImpl(org.waveprotocol.wave.diff.DocumentDiffSnapshot)>(r1);

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot getPB()>();

        virtualinvoke $r2.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder setDocument(int,org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>(i0, $r4);

        return;
    }

    public int getDocumentSize()
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        int $i0;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot proto>;

        $i0 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot: int getDocumentCount()>();

        return $i0;
    }

    public void addDocument(org.waveprotocol.wave.diff.DocumentDiffSnapshot)
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot $r4;
        org.waveprotocol.wave.diff.DocumentDiffSnapshot r1;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder $r2;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl $r3;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        r1 := @parameter0: org.waveprotocol.wave.diff.DocumentDiffSnapshot;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder protoBuilder>;

        $r3 = specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl getOrCreateDocumentDiffSnapshotProtoImpl(org.waveprotocol.wave.diff.DocumentDiffSnapshot)>(r1);

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot getPB()>();

        virtualinvoke $r2.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder addDocument(org.waveprotocol.wave.diff.Diff$DocumentDiffSnapshot)>($r4);

        return;
    }

    public void clearDocument()
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder protoBuilder>;

        virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder clearDocument()>();

        return;
    }

    public org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl getVersion()
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl $r1;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion $r3;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot $r2;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = new org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        $r2 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot proto>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion getVersion()>();

        specialinvoke $r1.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: void <init>(org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion)>($r3);

        return $r1;
    }

    public void setVersion(org.waveprotocol.wave.federation.ProtocolHashedVersion)
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl $r4;
        org.waveprotocol.wave.federation.ProtocolHashedVersion r2;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder $r1, $r3;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion $r5;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        r2 := @parameter0: org.waveprotocol.wave.federation.ProtocolHashedVersion;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder protoBuilder>;

        virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder clearVersion()>();

        $r3 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder protoBuilder>;

        $r4 = specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl getOrCreateProtocolHashedVersionProtoImpl(org.waveprotocol.wave.federation.ProtocolHashedVersion)>(r2);

        $r5 = virtualinvoke $r4.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion getPB()>();

        virtualinvoke $r3.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder setVersion(org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion)>($r5);

        return;
    }

    public double getLastModifiedTime()
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        long $l0;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot $r1;
        double $d0;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot proto>;

        $l0 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot: long getLastModifiedTime()>();

        $d0 = (double) $l0;

        return $d0;
    }

    public void setLastModifiedTime(double)
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        long $l0;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder $r1;
        double d0;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        d0 := @parameter0: double;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder protoBuilder>;

        $l0 = staticinvoke <org.waveprotocol.wave.communication.proto.Int52: long int52to64(double)>(d0);

        virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder setLastModifiedTime(long)>($l0);

        return;
    }

    public java.lang.String getCreator()
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        java.lang.String $r2;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot proto>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot: java.lang.String getCreator()>();

        return $r2;
    }

    public void setCreator(java.lang.String)
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        java.lang.String r1;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder $r2;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder setCreator(java.lang.String)>(r1);

        return;
    }

    public double getCreationTime()
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        long $l0;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot $r1;
        double $d0;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot proto>;

        $l0 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot: long getCreationTime()>();

        $d0 = (double) $l0;

        return $d0;
    }

    public void setCreationTime(double)
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        long $l0;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder $r1;
        double d0;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        d0 := @parameter0: double;

        specialinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder protoBuilder>;

        $l0 = staticinvoke <org.waveprotocol.wave.communication.proto.Int52: long int52to64(double)>(d0);

        virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder setCreationTime(long)>($l0);

        return;
    }

    private org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl getOrCreateDocumentDiffSnapshotProtoImpl(org.waveprotocol.wave.diff.DocumentDiffSnapshot)
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r3;
        org.waveprotocol.wave.diff.DocumentDiffSnapshot r0;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl $r1, $r2;
        boolean $z0;

        r3 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        r0 := @parameter0: org.waveprotocol.wave.diff.DocumentDiffSnapshot;

        $z0 = r0 instanceof org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        if $z0 == 0 goto label1;

        $r2 = (org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl) r0;

        return $r2;

     label1:
        $r1 = new org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        specialinvoke $r1.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void <init>()>();

        virtualinvoke $r1.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void copyFrom(org.waveprotocol.wave.diff.DocumentDiffSnapshot)>(r0);

        return $r1;
    }

    private org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl getOrCreateProtocolHashedVersionProtoImpl(org.waveprotocol.wave.federation.ProtocolHashedVersion)
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r3;
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl $r1, $r2;
        org.waveprotocol.wave.federation.ProtocolHashedVersion r0;
        boolean $z0;

        r3 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        r0 := @parameter0: org.waveprotocol.wave.federation.ProtocolHashedVersion;

        $z0 = r0 instanceof org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        if $z0 == 0 goto label1;

        $r2 = (org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl) r0;

        return $r2;

     label1:
        $r1 = new org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        specialinvoke $r1.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: void <init>()>();

        virtualinvoke $r1.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: void copyFrom(org.waveprotocol.wave.federation.ProtocolHashedVersion)>(r0);

        return $r1;
    }

    private void switchToProto()
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder $r2;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot $r1, $r3;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        $r1 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot proto>;

        if $r1 != null goto label1;

        $r2 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder protoBuilder>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot build()>();

        r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot proto> = $r3;

        r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder protoBuilder> = null;

     label1:
        return;
    }

    private void switchToProtoBuilder()
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder $r1, $r4;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot $r2, $r3;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        $r1 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder protoBuilder>;

        if $r1 != null goto label3;

        $r2 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot proto>;

        if $r2 != null goto label1;

        $r4 = staticinvoke <org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder newBuilder()>();

        goto label2;

     label1:
        $r3 = r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot proto>;

        $r4 = staticinvoke <org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder newBuilder(org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot)>($r3);

     label2:
        r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder protoBuilder> = $r4;

        r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot proto> = null;

     label3:
        return;
    }

    private void invalidateAll()
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot proto> = null;

        $r1 = staticinvoke <org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder newBuilder()>();

        r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot$Builder protoBuilder> = $r1;

        return;
    }

    public com.google.gson.JsonElement toGson(org.waveprotocol.wave.communication.json.RawStringData, com.google.gson.Gson)
    {
        com.google.gson.JsonObject $r0;
        com.google.gson.Gson r10;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl $r18;
        com.google.gson.JsonArray $r4, $r5, $r6, $r7;
        java.lang.Double $r13, $r17;
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl $r8;
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r2;
        com.google.gson.JsonElement $r11, $r19;
        int $i0, $i1, $i2, $i3, i4, i5, i6, i7;
        com.google.gson.JsonPrimitive $r1, $r12, $r14, $r16, $r20, $r22, $r24;
        java.lang.String $r3, $r15, $r21, $r23, $r25;
        double $d0, $d1;
        org.waveprotocol.wave.communication.json.RawStringData r9;

        r2 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        r9 := @parameter0: org.waveprotocol.wave.communication.json.RawStringData;

        r10 := @parameter1: com.google.gson.Gson;

        $r0 = new com.google.gson.JsonObject;

        specialinvoke $r0.<com.google.gson.JsonObject: void <init>()>();

        $r1 = new com.google.gson.JsonPrimitive;

        $r3 = virtualinvoke r2.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: java.lang.String getWaveletId()>();

        specialinvoke $r1.<com.google.gson.JsonPrimitive: void <init>(java.lang.String)>($r3);

        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("1", $r1);

        $r4 = new com.google.gson.JsonArray;

        specialinvoke $r4.<com.google.gson.JsonArray: void <init>()>();

        i4 = 0;

     label1:
        $i0 = virtualinvoke r2.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: int getParticipantSize()>();

        if i4 >= $i0 goto label2;

        $r24 = new com.google.gson.JsonPrimitive;

        $r25 = virtualinvoke r2.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: java.lang.String getParticipant(int)>(i4);

        specialinvoke $r24.<com.google.gson.JsonPrimitive: void <init>(java.lang.String)>($r25);

        virtualinvoke $r4.<com.google.gson.JsonArray: void add(com.google.gson.JsonElement)>($r24);

        i4 = i4 + 1;

        goto label1;

     label2:
        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("2", $r4);

        $r5 = new com.google.gson.JsonArray;

        specialinvoke $r5.<com.google.gson.JsonArray: void <init>()>();

        i5 = 0;

     label3:
        $i1 = virtualinvoke r2.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: int getAddedParticipantSize()>();

        if i5 >= $i1 goto label4;

        $r22 = new com.google.gson.JsonPrimitive;

        $r23 = virtualinvoke r2.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: java.lang.String getAddedParticipant(int)>(i5);

        specialinvoke $r22.<com.google.gson.JsonPrimitive: void <init>(java.lang.String)>($r23);

        virtualinvoke $r5.<com.google.gson.JsonArray: void add(com.google.gson.JsonElement)>($r22);

        i5 = i5 + 1;

        goto label3;

     label4:
        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("21", $r5);

        $r6 = new com.google.gson.JsonArray;

        specialinvoke $r6.<com.google.gson.JsonArray: void <init>()>();

        i6 = 0;

     label5:
        $i2 = virtualinvoke r2.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: int getRemovedParticipantSize()>();

        if i6 >= $i2 goto label6;

        $r20 = new com.google.gson.JsonPrimitive;

        $r21 = virtualinvoke r2.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: java.lang.String getRemovedParticipant(int)>(i6);

        specialinvoke $r20.<com.google.gson.JsonPrimitive: void <init>(java.lang.String)>($r21);

        virtualinvoke $r6.<com.google.gson.JsonArray: void add(com.google.gson.JsonElement)>($r20);

        i6 = i6 + 1;

        goto label5;

     label6:
        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("22", $r6);

        $r7 = new com.google.gson.JsonArray;

        specialinvoke $r7.<com.google.gson.JsonArray: void <init>()>();

        i7 = 0;

     label7:
        $i3 = virtualinvoke r2.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: int getDocumentSize()>();

        if i7 >= $i3 goto label8;

        $r18 = virtualinvoke r2.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl getDocument(int)>(i7);

        $r19 = interfaceinvoke $r18.<org.waveprotocol.wave.communication.gson.GsonSerializable: com.google.gson.JsonElement toGson(org.waveprotocol.wave.communication.json.RawStringData,com.google.gson.Gson)>(r9, r10);

        virtualinvoke $r7.<com.google.gson.JsonArray: void add(com.google.gson.JsonElement)>($r19);

        i7 = i7 + 1;

        goto label7;

     label8:
        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("3", $r7);

        $r8 = virtualinvoke r2.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl getVersion()>();

        $r11 = interfaceinvoke $r8.<org.waveprotocol.wave.communication.gson.GsonSerializable: com.google.gson.JsonElement toGson(org.waveprotocol.wave.communication.json.RawStringData,com.google.gson.Gson)>(r9, r10);

        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("4", $r11);

        $r12 = new com.google.gson.JsonPrimitive;

        $d0 = virtualinvoke r2.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: double getLastModifiedTime()>();

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        specialinvoke $r12.<com.google.gson.JsonPrimitive: void <init>(java.lang.Number)>($r13);

        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("5", $r12);

        $r14 = new com.google.gson.JsonPrimitive;

        $r15 = virtualinvoke r2.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: java.lang.String getCreator()>();

        specialinvoke $r14.<com.google.gson.JsonPrimitive: void <init>(java.lang.String)>($r15);

        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("6", $r14);

        $r16 = new com.google.gson.JsonPrimitive;

        $d1 = virtualinvoke r2.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: double getCreationTime()>();

        $r17 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        specialinvoke $r16.<com.google.gson.JsonPrimitive: void <init>(java.lang.Number)>($r17);

        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("7", $r16);

        return $r0;
    }

    public void fromGson(com.google.gson.JsonElement, com.google.gson.Gson, org.waveprotocol.wave.communication.json.RawStringData) throws org.waveprotocol.wave.communication.gson.GsonException
    {
        com.google.gson.JsonObject $r1;
        com.google.gson.Gson r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl $r13;
        com.google.gson.JsonArray $r12, $r16, $r20, $r24;
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl $r8;
        com.google.gson.JsonElement r0, $r3, $r4, $r6, $r7, $r11, $r14, $r15, $r17, $r19, $r21, $r23, $r25, $r27;
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r2;
        int $i0, $i1, $i2, $i3, i4, i5, i6, i7;
        java.lang.String $r5, $r18, $r22, $r26, $r28;
        double $d0, $d1;
        org.waveprotocol.wave.communication.json.RawStringData r10;

        r2 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        r0 := @parameter0: com.google.gson.JsonElement;

        r9 := @parameter1: com.google.gson.Gson;

        r10 := @parameter2: org.waveprotocol.wave.communication.json.RawStringData;

        $r1 = virtualinvoke r0.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>();

        specialinvoke r2.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void invalidateAll()>();

        $z0 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("1");

        if $z0 == 0 goto label01;

        $r27 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("1");

        $r28 = virtualinvoke $r27.<com.google.gson.JsonElement: java.lang.String getAsString()>();

        virtualinvoke r2.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void setWaveletId(java.lang.String)>($r28);

     label01:
        $z1 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("2");

        if $z1 == 0 goto label03;

        $r23 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("2");

        $r24 = virtualinvoke $r23.<com.google.gson.JsonElement: com.google.gson.JsonArray getAsJsonArray()>();

        i4 = 0;

     label02:
        $i3 = virtualinvoke $r24.<com.google.gson.JsonArray: int size()>();

        if i4 >= $i3 goto label03;

        $r25 = virtualinvoke $r24.<com.google.gson.JsonArray: com.google.gson.JsonElement get(int)>(i4);

        $r26 = virtualinvoke $r25.<com.google.gson.JsonElement: java.lang.String getAsString()>();

        virtualinvoke r2.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void addParticipant(java.lang.String)>($r26);

        i4 = i4 + 1;

        goto label02;

     label03:
        $z2 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("21");

        if $z2 == 0 goto label05;

        $r19 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("21");

        $r20 = virtualinvoke $r19.<com.google.gson.JsonElement: com.google.gson.JsonArray getAsJsonArray()>();

        i5 = 0;

     label04:
        $i2 = virtualinvoke $r20.<com.google.gson.JsonArray: int size()>();

        if i5 >= $i2 goto label05;

        $r21 = virtualinvoke $r20.<com.google.gson.JsonArray: com.google.gson.JsonElement get(int)>(i5);

        $r22 = virtualinvoke $r21.<com.google.gson.JsonElement: java.lang.String getAsString()>();

        virtualinvoke r2.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void addAddedParticipant(java.lang.String)>($r22);

        i5 = i5 + 1;

        goto label04;

     label05:
        $z3 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("22");

        if $z3 == 0 goto label07;

        $r15 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("22");

        $r16 = virtualinvoke $r15.<com.google.gson.JsonElement: com.google.gson.JsonArray getAsJsonArray()>();

        i6 = 0;

     label06:
        $i1 = virtualinvoke $r16.<com.google.gson.JsonArray: int size()>();

        if i6 >= $i1 goto label07;

        $r17 = virtualinvoke $r16.<com.google.gson.JsonArray: com.google.gson.JsonElement get(int)>(i6);

        $r18 = virtualinvoke $r17.<com.google.gson.JsonElement: java.lang.String getAsString()>();

        virtualinvoke r2.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void addRemovedParticipant(java.lang.String)>($r18);

        i6 = i6 + 1;

        goto label06;

     label07:
        $z4 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("3");

        if $z4 == 0 goto label09;

        $r11 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("3");

        $r12 = virtualinvoke $r11.<com.google.gson.JsonElement: com.google.gson.JsonArray getAsJsonArray()>();

        i7 = 0;

     label08:
        $i0 = virtualinvoke $r12.<com.google.gson.JsonArray: int size()>();

        if i7 >= $i0 goto label09;

        $r13 = new org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl;

        specialinvoke $r13.<org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl: void <init>()>();

        $r14 = virtualinvoke $r12.<com.google.gson.JsonArray: com.google.gson.JsonElement get(int)>(i7);

        staticinvoke <org.waveprotocol.wave.communication.gson.GsonUtil: void extractJsonObject(org.waveprotocol.wave.communication.gson.GsonSerializable,com.google.gson.JsonElement,com.google.gson.Gson,org.waveprotocol.wave.communication.json.RawStringData)>($r13, $r14, r9, r10);

        virtualinvoke r2.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void addDocument(org.waveprotocol.wave.diff.DocumentDiffSnapshot)>($r13);

        i7 = i7 + 1;

        goto label08;

     label09:
        $z5 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("4");

        if $z5 == 0 goto label10;

        $r7 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("4");

        $r8 = new org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        specialinvoke $r8.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: void <init>()>();

        staticinvoke <org.waveprotocol.wave.communication.gson.GsonUtil: void extractJsonObject(org.waveprotocol.wave.communication.gson.GsonSerializable,com.google.gson.JsonElement,com.google.gson.Gson,org.waveprotocol.wave.communication.json.RawStringData)>($r8, $r7, r9, r10);

        virtualinvoke r2.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void setVersion(org.waveprotocol.wave.federation.ProtocolHashedVersion)>($r8);

     label10:
        $z6 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("5");

        if $z6 == 0 goto label11;

        $r6 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("5");

        $d1 = virtualinvoke $r6.<com.google.gson.JsonElement: double getAsDouble()>();

        virtualinvoke r2.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void setLastModifiedTime(double)>($d1);

     label11:
        $z7 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("6");

        if $z7 == 0 goto label12;

        $r4 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("6");

        $r5 = virtualinvoke $r4.<com.google.gson.JsonElement: java.lang.String getAsString()>();

        virtualinvoke r2.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void setCreator(java.lang.String)>($r5);

     label12:
        $z8 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("7");

        if $z8 == 0 goto label13;

        $r3 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("7");

        $d0 = virtualinvoke $r3.<com.google.gson.JsonElement: double getAsDouble()>();

        virtualinvoke r2.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void setCreationTime(double)>($d0);

     label13:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0, $r3;
        java.lang.Object r1;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot $r2, $r4;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot getPB()>();

        $r3 = (org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl) r1;

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot getPB()>();

        $z1 = virtualinvoke $r2.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot: boolean equals(java.lang.Object)>($r4);

        return $z1;

     label2:
        return 0;
    }

    public boolean isEqualTo(java.lang.Object)
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.WaveletDiffSnapshot $r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = r1 instanceof org.waveprotocol.wave.diff.WaveletDiffSnapshot;

        if $z1 == 0 goto label2;

        $r2 = (org.waveprotocol.wave.diff.WaveletDiffSnapshot) r1;

        $z2 = staticinvoke <org.waveprotocol.wave.diff.WaveletDiffSnapshotUtil: boolean isEqual(org.waveprotocol.wave.diff.WaveletDiffSnapshot,org.waveprotocol.wave.diff.WaveletDiffSnapshot)>(r0, $r2);

        return $z2;

     label2:
        return 0;
    }

    public int hashCode()
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        int $i0;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot getPB()>();

        $i0 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        java.lang.String $r2;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot getPB()>();

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot: java.lang.String toString()>();

        return $r2;
    }

    public volatile org.waveprotocol.wave.federation.ProtocolHashedVersion getVersion()
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl getVersion()>();

        return $r1;
    }

    public volatile org.waveprotocol.wave.diff.DocumentDiffSnapshot getDocument(int)
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        int i0;
        org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.proto.DocumentDiffSnapshotProtoImpl getDocument(int)>(i0);

        return $r1;
    }

    public volatile com.google.protobuf.MessageLite getPB()
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot $r1;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot getPB()>();

        return $r1;
    }

    public volatile void setPB(com.google.protobuf.MessageLite)
    {
        org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl r0;
        com.google.protobuf.MessageLite r1;
        org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot $r2;

        r0 := @this: org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl;

        r1 := @parameter0: com.google.protobuf.MessageLite;

        $r2 = (org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot) r1;

        virtualinvoke r0.<org.waveprotocol.wave.diff.proto.WaveletDiffSnapshotProtoImpl: void setPB(org.waveprotocol.wave.diff.Diff$WaveletDiffSnapshot)>($r2);

        return;
    }
}
