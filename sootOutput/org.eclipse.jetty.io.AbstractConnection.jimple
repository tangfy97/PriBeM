public abstract class org.eclipse.jetty.io.AbstractConnection extends java.lang.Object implements org.eclipse.jetty.io.Connection
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    private final long _timeStamp;
    protected final org.eclipse.jetty.io.EndPoint _endp;

    public void <init>(org.eclipse.jetty.io.EndPoint)
    {
        long $l0;
        org.eclipse.jetty.io.AbstractConnection r0;
        org.eclipse.jetty.io.EndPoint r1;

        r0 := @this: org.eclipse.jetty.io.AbstractConnection;

        r1 := @parameter0: org.eclipse.jetty.io.EndPoint;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.eclipse.jetty.io.AbstractConnection: org.eclipse.jetty.io.EndPoint _endp> = r1;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<org.eclipse.jetty.io.AbstractConnection: long _timeStamp> = $l0;

        return;
    }

    public void <init>(org.eclipse.jetty.io.EndPoint, long)
    {
        long l0;
        org.eclipse.jetty.io.AbstractConnection r0;
        org.eclipse.jetty.io.EndPoint r1;

        r0 := @this: org.eclipse.jetty.io.AbstractConnection;

        r1 := @parameter0: org.eclipse.jetty.io.EndPoint;

        l0 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.eclipse.jetty.io.AbstractConnection: org.eclipse.jetty.io.EndPoint _endp> = r1;

        r0.<org.eclipse.jetty.io.AbstractConnection: long _timeStamp> = l0;

        return;
    }

    public long getTimeStamp()
    {
        long $l0;
        org.eclipse.jetty.io.AbstractConnection r0;

        r0 := @this: org.eclipse.jetty.io.AbstractConnection;

        $l0 = r0.<org.eclipse.jetty.io.AbstractConnection: long _timeStamp>;

        return $l0;
    }

    public org.eclipse.jetty.io.EndPoint getEndPoint()
    {
        org.eclipse.jetty.io.AbstractConnection r0;
        org.eclipse.jetty.io.EndPoint $r1;

        r0 := @this: org.eclipse.jetty.io.AbstractConnection;

        $r1 = r0.<org.eclipse.jetty.io.AbstractConnection: org.eclipse.jetty.io.EndPoint _endp>;

        return $r1;
    }

    public void onIdleExpired(long)
    {
        java.lang.Object[] $r0;
        org.eclipse.jetty.io.EndPoint $r4, $r5, $r6, $r7, $r8, $r13;
        long l0;
        java.lang.Long $r2;
        boolean $z0, $z1;
        java.io.IOException $r9, $r11;
        org.eclipse.jetty.io.AbstractConnection r3;
        org.eclipse.jetty.util.log.Logger $r1, $r10, $r12;

        r3 := @this: org.eclipse.jetty.io.AbstractConnection;

        l0 := @parameter0: long;

     label1:
        $r1 = <org.eclipse.jetty.io.AbstractConnection: org.eclipse.jetty.util.log.Logger LOG>;

        $r0 = newarray (java.lang.Object)[3];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r0[0] = $r2;

        $r0[1] = r3;

        $r4 = r3.<org.eclipse.jetty.io.AbstractConnection: org.eclipse.jetty.io.EndPoint _endp>;

        $r0[2] = $r4;

        interfaceinvoke $r1.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("onIdleExpired {}ms {} {}", $r0);

        $r5 = r3.<org.eclipse.jetty.io.AbstractConnection: org.eclipse.jetty.io.EndPoint _endp>;

        $z0 = interfaceinvoke $r5.<org.eclipse.jetty.io.EndPoint: boolean isInputShutdown()>();

        if $z0 != 0 goto label2;

        $r7 = r3.<org.eclipse.jetty.io.AbstractConnection: org.eclipse.jetty.io.EndPoint _endp>;

        $z1 = interfaceinvoke $r7.<org.eclipse.jetty.io.EndPoint: boolean isOutputShutdown()>();

        if $z1 == 0 goto label3;

     label2:
        $r6 = r3.<org.eclipse.jetty.io.AbstractConnection: org.eclipse.jetty.io.EndPoint _endp>;

        interfaceinvoke $r6.<org.eclipse.jetty.io.EndPoint: void close()>();

        goto label4;

     label3:
        $r8 = r3.<org.eclipse.jetty.io.AbstractConnection: org.eclipse.jetty.io.EndPoint _endp>;

        interfaceinvoke $r8.<org.eclipse.jetty.io.EndPoint: void shutdownOutput()>();

     label4:
        goto label9;

     label5:
        $r11 := @caughtexception;

        $r12 = <org.eclipse.jetty.io.AbstractConnection: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r12.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r11);

     label6:
        $r13 = r3.<org.eclipse.jetty.io.AbstractConnection: org.eclipse.jetty.io.EndPoint _endp>;

        interfaceinvoke $r13.<org.eclipse.jetty.io.EndPoint: void close()>();

     label7:
        goto label9;

     label8:
        $r9 := @caughtexception;

        $r10 = <org.eclipse.jetty.io.AbstractConnection: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r10.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r9);

     label9:
        return;

        catch java.io.IOException from label1 to label4 with label5;
        catch java.io.IOException from label6 to label7 with label8;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r0;
        int $i0;
        java.lang.Class $r2;
        java.lang.String $r3, $r5;
        org.eclipse.jetty.io.AbstractConnection r1;
        java.lang.Integer $r4;

        r1 := @this: org.eclipse.jetty.io.AbstractConnection;

        $r0 = newarray (java.lang.Object)[2];

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        $r0[0] = $r3;

        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r0[1] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s@%x", $r0);

        return $r5;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/io/AbstractConnection;");

        <org.eclipse.jetty.io.AbstractConnection: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
