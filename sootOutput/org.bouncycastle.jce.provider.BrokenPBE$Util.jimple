public class org.bouncycastle.jce.provider.BrokenPBE$Util extends java.lang.Object
{

    public void <init>()
    {
        org.bouncycastle.jce.provider.BrokenPBE$Util r0;

        r0 := @this: org.bouncycastle.jce.provider.BrokenPBE$Util;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void setOddParity(byte[])
    {
        byte[] r0;
        short $s16, $s20;
        byte b1, $b18;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, i19, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28;

        r0 := @parameter0: byte[];

        i19 = 0;

     label1:
        $i0 = lengthof r0;

        if i19 >= $i0 goto label2;

        b1 = r0[i19];

        $s20 = (short) b1;

        $s16 = $s20 & 254;

        $i21 = (int) b1;

        $i3 = $i21 >> 1;

        $i22 = (int) b1;

        $i2 = $i22 >> 2;

        $i5 = $i3 ^ $i2;

        $i23 = (int) b1;

        $i4 = $i23 >> 3;

        $i7 = $i5 ^ $i4;

        $i24 = (int) b1;

        $i6 = $i24 >> 4;

        $i9 = $i7 ^ $i6;

        $i25 = (int) b1;

        $i8 = $i25 >> 5;

        $i11 = $i9 ^ $i8;

        $i26 = (int) b1;

        $i10 = $i26 >> 6;

        $i13 = $i11 ^ $i10;

        $i27 = (int) b1;

        $i12 = $i27 >> 7;

        $i14 = $i13 ^ $i12;

        $i15 = $i14 ^ 1;

        $i28 = (int) $s16;

        $i17 = $i28 | $i15;

        $b18 = (byte) $i17;

        r0[i19] = $b18;

        i19 = i19 + 1;

        goto label1;

     label2:
        return;
    }

    private static org.bouncycastle.crypto.PBEParametersGenerator makePBEGenerator(int, int)
    {
        java.lang.IllegalStateException $r6, $r13, $r19;
        org.bouncycastle.crypto.generators.PKCS5S1ParametersGenerator $r15, $r17;
        org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator $r14;
        int i0, i1;
        org.bouncycastle.crypto.digests.RIPEMD160Digest $r1, $r8;
        org.bouncycastle.crypto.digests.SHA1Digest $r3, $r10, $r16;
        org.bouncycastle.crypto.digests.MD5Digest $r5, $r12, $r18;
        org.bouncycastle.crypto.PBEParametersGenerator r20;
        org.bouncycastle.crypto.generators.PKCS12ParametersGenerator $r0, $r2, $r4;
        org.bouncycastle.jce.provider.OldPKCS12ParametersGenerator $r7, $r9, $r11;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 != 0 goto label04;

        lookupswitch(i1)
        {
            case 0: goto label01;
            case 1: goto label02;
            default: goto label03;
        };

     label01:
        $r17 = new org.bouncycastle.crypto.generators.PKCS5S1ParametersGenerator;

        $r18 = new org.bouncycastle.crypto.digests.MD5Digest;

        specialinvoke $r18.<org.bouncycastle.crypto.digests.MD5Digest: void <init>()>();

        specialinvoke $r17.<org.bouncycastle.crypto.generators.PKCS5S1ParametersGenerator: void <init>(org.bouncycastle.crypto.Digest)>($r18);

        r20 = $r17;

        goto label15;

     label02:
        $r15 = new org.bouncycastle.crypto.generators.PKCS5S1ParametersGenerator;

        $r16 = new org.bouncycastle.crypto.digests.SHA1Digest;

        specialinvoke $r16.<org.bouncycastle.crypto.digests.SHA1Digest: void <init>()>();

        specialinvoke $r15.<org.bouncycastle.crypto.generators.PKCS5S1ParametersGenerator: void <init>(org.bouncycastle.crypto.Digest)>($r16);

        r20 = $r15;

        goto label15;

     label03:
        $r19 = new java.lang.IllegalStateException;

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>("PKCS5 scheme 1 only supports only MD5 and SHA1.");

        throw $r19;

     label04:
        if i0 != 1 goto label05;

        $r14 = new org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator;

        specialinvoke $r14.<org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator: void <init>()>();

        r20 = $r14;

        goto label15;

     label05:
        if i0 != 3 goto label10;

        tableswitch(i1)
        {
            case 0: goto label06;
            case 1: goto label07;
            case 2: goto label08;
            default: goto label09;
        };

     label06:
        $r11 = new org.bouncycastle.jce.provider.OldPKCS12ParametersGenerator;

        $r12 = new org.bouncycastle.crypto.digests.MD5Digest;

        specialinvoke $r12.<org.bouncycastle.crypto.digests.MD5Digest: void <init>()>();

        specialinvoke $r11.<org.bouncycastle.jce.provider.OldPKCS12ParametersGenerator: void <init>(org.bouncycastle.crypto.Digest)>($r12);

        r20 = $r11;

        goto label15;

     label07:
        $r9 = new org.bouncycastle.jce.provider.OldPKCS12ParametersGenerator;

        $r10 = new org.bouncycastle.crypto.digests.SHA1Digest;

        specialinvoke $r10.<org.bouncycastle.crypto.digests.SHA1Digest: void <init>()>();

        specialinvoke $r9.<org.bouncycastle.jce.provider.OldPKCS12ParametersGenerator: void <init>(org.bouncycastle.crypto.Digest)>($r10);

        r20 = $r9;

        goto label15;

     label08:
        $r7 = new org.bouncycastle.jce.provider.OldPKCS12ParametersGenerator;

        $r8 = new org.bouncycastle.crypto.digests.RIPEMD160Digest;

        specialinvoke $r8.<org.bouncycastle.crypto.digests.RIPEMD160Digest: void <init>()>();

        specialinvoke $r7.<org.bouncycastle.jce.provider.OldPKCS12ParametersGenerator: void <init>(org.bouncycastle.crypto.Digest)>($r8);

        r20 = $r7;

        goto label15;

     label09:
        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>("unknown digest scheme for PBE encryption.");

        throw $r13;

     label10:
        tableswitch(i1)
        {
            case 0: goto label11;
            case 1: goto label12;
            case 2: goto label13;
            default: goto label14;
        };

     label11:
        $r4 = new org.bouncycastle.crypto.generators.PKCS12ParametersGenerator;

        $r5 = new org.bouncycastle.crypto.digests.MD5Digest;

        specialinvoke $r5.<org.bouncycastle.crypto.digests.MD5Digest: void <init>()>();

        specialinvoke $r4.<org.bouncycastle.crypto.generators.PKCS12ParametersGenerator: void <init>(org.bouncycastle.crypto.Digest)>($r5);

        r20 = $r4;

        goto label15;

     label12:
        $r2 = new org.bouncycastle.crypto.generators.PKCS12ParametersGenerator;

        $r3 = new org.bouncycastle.crypto.digests.SHA1Digest;

        specialinvoke $r3.<org.bouncycastle.crypto.digests.SHA1Digest: void <init>()>();

        specialinvoke $r2.<org.bouncycastle.crypto.generators.PKCS12ParametersGenerator: void <init>(org.bouncycastle.crypto.Digest)>($r3);

        r20 = $r2;

        goto label15;

     label13:
        $r0 = new org.bouncycastle.crypto.generators.PKCS12ParametersGenerator;

        $r1 = new org.bouncycastle.crypto.digests.RIPEMD160Digest;

        specialinvoke $r1.<org.bouncycastle.crypto.digests.RIPEMD160Digest: void <init>()>();

        specialinvoke $r0.<org.bouncycastle.crypto.generators.PKCS12ParametersGenerator: void <init>(org.bouncycastle.crypto.Digest)>($r1);

        r20 = $r0;

        goto label15;

     label14:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("unknown digest scheme for PBE encryption.");

        throw $r6;

     label15:
        return r20;
    }

    static org.bouncycastle.crypto.CipherParameters makePBEParameters(org.bouncycastle.jce.provider.JCEPBEKey, java.security.spec.AlgorithmParameterSpec, int, int, java.lang.String, int, int)
    {
        byte[] $r5, $r6, $r8, $r11;
        org.bouncycastle.crypto.params.ParametersWithIV $r9;
        int i0, i1, $i2, i3, i4, i5, $i6;
        java.security.spec.AlgorithmParameterSpec r0;
        java.lang.String r7;
        org.bouncycastle.crypto.params.KeyParameter r13, r14;
        boolean $z0, $z1, $z2;
        org.bouncycastle.crypto.CipherParameters $r10, r12;
        org.bouncycastle.crypto.PBEParametersGenerator $r3;
        javax.crypto.spec.PBEParameterSpec r2;
        java.lang.IllegalArgumentException $r1;
        org.bouncycastle.jce.provider.JCEPBEKey r4;

        r4 := @parameter0: org.bouncycastle.jce.provider.JCEPBEKey;

        r0 := @parameter1: java.security.spec.AlgorithmParameterSpec;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r7 := @parameter4: java.lang.String;

        i4 := @parameter5: int;

        i3 := @parameter6: int;

        if r0 == null goto label1;

        $z0 = r0 instanceof javax.crypto.spec.PBEParameterSpec;

        if $z0 != 0 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Need a PBEParameter spec with a PBE key.");

        throw $r1;

     label2:
        r2 = (javax.crypto.spec.PBEParameterSpec) r0;

        $r3 = staticinvoke <org.bouncycastle.jce.provider.BrokenPBE$Util: org.bouncycastle.crypto.PBEParametersGenerator makePBEGenerator(int,int)>(i0, i1);

        $r5 = virtualinvoke r4.<org.bouncycastle.jce.provider.JCEPBEKey: byte[] getEncoded()>();

        $r6 = virtualinvoke r2.<javax.crypto.spec.PBEParameterSpec: byte[] getSalt()>();

        $i2 = virtualinvoke r2.<javax.crypto.spec.PBEParameterSpec: int getIterationCount()>();

        virtualinvoke $r3.<org.bouncycastle.crypto.PBEParametersGenerator: void init(byte[],byte[],int)>($r5, $r6, $i2);

        if i3 == 0 goto label3;

        r12 = virtualinvoke $r3.<org.bouncycastle.crypto.PBEParametersGenerator: org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int,int)>(i4, i3);

        goto label4;

     label3:
        r12 = virtualinvoke $r3.<org.bouncycastle.crypto.PBEParametersGenerator: org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int)>(i4);

     label4:
        $z1 = virtualinvoke r7.<java.lang.String: boolean startsWith(java.lang.String)>("DES");

        if $z1 == 0 goto label6;

        $z2 = r12 instanceof org.bouncycastle.crypto.params.ParametersWithIV;

        if $z2 == 0 goto label5;

        $r9 = (org.bouncycastle.crypto.params.ParametersWithIV) r12;

        $r10 = virtualinvoke $r9.<org.bouncycastle.crypto.params.ParametersWithIV: org.bouncycastle.crypto.CipherParameters getParameters()>();

        r13 = (org.bouncycastle.crypto.params.KeyParameter) $r10;

        $r11 = virtualinvoke r13.<org.bouncycastle.crypto.params.KeyParameter: byte[] getKey()>();

        staticinvoke <org.bouncycastle.jce.provider.BrokenPBE$Util: void setOddParity(byte[])>($r11);

        goto label6;

     label5:
        r14 = (org.bouncycastle.crypto.params.KeyParameter) r12;

        $r8 = virtualinvoke r14.<org.bouncycastle.crypto.params.KeyParameter: byte[] getKey()>();

        staticinvoke <org.bouncycastle.jce.provider.BrokenPBE$Util: void setOddParity(byte[])>($r8);

     label6:
        i5 = 0;

     label7:
        $i6 = lengthof $r5;

        if i5 == $i6 goto label8;

        $r5[i5] = 0;

        i5 = i5 + 1;

        goto label7;

     label8:
        return r12;
    }

    static org.bouncycastle.crypto.CipherParameters makePBEMacParameters(org.bouncycastle.jce.provider.JCEPBEKey, java.security.spec.AlgorithmParameterSpec, int, int, int)
    {
        byte[] $r5, $r6;
        org.bouncycastle.crypto.PBEParametersGenerator $r3;
        javax.crypto.spec.PBEParameterSpec r2;
        java.lang.IllegalArgumentException $r1;
        org.bouncycastle.jce.provider.JCEPBEKey r4;
        int i0, i1, $i2, i3, $i4, i5;
        java.security.spec.AlgorithmParameterSpec r0;
        boolean $z0;
        org.bouncycastle.crypto.CipherParameters $r7;

        r4 := @parameter0: org.bouncycastle.jce.provider.JCEPBEKey;

        r0 := @parameter1: java.security.spec.AlgorithmParameterSpec;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i3 := @parameter4: int;

        if r0 == null goto label1;

        $z0 = r0 instanceof javax.crypto.spec.PBEParameterSpec;

        if $z0 != 0 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Need a PBEParameter spec with a PBE key.");

        throw $r1;

     label2:
        r2 = (javax.crypto.spec.PBEParameterSpec) r0;

        $r3 = staticinvoke <org.bouncycastle.jce.provider.BrokenPBE$Util: org.bouncycastle.crypto.PBEParametersGenerator makePBEGenerator(int,int)>(i0, i1);

        $r5 = virtualinvoke r4.<org.bouncycastle.jce.provider.JCEPBEKey: byte[] getEncoded()>();

        $r6 = virtualinvoke r2.<javax.crypto.spec.PBEParameterSpec: byte[] getSalt()>();

        $i2 = virtualinvoke r2.<javax.crypto.spec.PBEParameterSpec: int getIterationCount()>();

        virtualinvoke $r3.<org.bouncycastle.crypto.PBEParametersGenerator: void init(byte[],byte[],int)>($r5, $r6, $i2);

        $r7 = virtualinvoke $r3.<org.bouncycastle.crypto.PBEParametersGenerator: org.bouncycastle.crypto.CipherParameters generateDerivedMacParameters(int)>(i3);

        i5 = 0;

     label3:
        $i4 = lengthof $r5;

        if i5 == $i4 goto label4;

        $r5[i5] = 0;

        i5 = i5 + 1;

        goto label3;

     label4:
        return $r7;
    }
}
