public class com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox extends com.googlecode.mp4parser.AbstractFullBox
{
    public static final java.lang.String TYPE;
    private long trackId;
    private long baseDataOffset;
    private long sampleDescriptionIndex;
    private long defaultSampleDuration;
    private long defaultSampleSize;
    private com.coremedia.iso.boxes.fragment.SampleFlags defaultSampleFlags;
    private boolean durationIsEmpty;
    private boolean defaultBaseIsMoof;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_1;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_2;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_3;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_4;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_5;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_6;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_7;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_8;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_9;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_10;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_11;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_12;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_13;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_14;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_15;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_16;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_17;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_18;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_19;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_20;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_21;

    public void <init>()
    {
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        specialinvoke r0.<com.googlecode.mp4parser.AbstractFullBox: void <init>(java.lang.String)>("tfhd");

        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long baseDataOffset> = -1L;

        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long defaultSampleDuration> = -1L;

        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long defaultSampleSize> = -1L;

        return;
    }

    protected long getContentSize()
    {
        long l6;
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        l6 = 8L;

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i1 = $i0 & 1;

        if $i1 != 1 goto label1;

        l6 = 16L;

     label1:
        $i2 = $i0 & 2;

        if $i2 != 2 goto label2;

        l6 = l6 + 4L;

     label2:
        $i3 = $i0 & 8;

        if $i3 != 8 goto label3;

        l6 = l6 + 4L;

     label3:
        $i4 = $i0 & 16;

        if $i4 != 16 goto label4;

        l6 = l6 + 4L;

     label4:
        $i5 = $i0 & 32;

        if $i5 != 32 goto label5;

        l6 = l6 + 4L;

     label5:
        return l6;
    }

    protected void getContent(java.nio.ByteBuffer)
    {
        long $l0, $l11, $l12, $l13, $l14;
        java.nio.ByteBuffer r1;
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        com.coremedia.iso.boxes.fragment.SampleFlags $r2;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: void writeVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $l0 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long trackId>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l0);

        $i1 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i2 = $i1 & 1;

        if $i2 != 1 goto label1;

        $l14 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long getBaseDataOffset()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt64(java.nio.ByteBuffer,long)>(r1, $l14);

     label1:
        $i3 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i4 = $i3 & 2;

        if $i4 != 2 goto label2;

        $l13 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long getSampleDescriptionIndex()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l13);

     label2:
        $i5 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i6 = $i5 & 8;

        if $i6 != 8 goto label3;

        $l12 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long getDefaultSampleDuration()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l12);

     label3:
        $i7 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i8 = $i7 & 16;

        if $i8 != 16 goto label4;

        $l11 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long getDefaultSampleSize()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l11);

     label4:
        $i9 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i10 = $i9 & 32;

        if $i10 != 32 goto label5;

        $r2 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: com.coremedia.iso.boxes.fragment.SampleFlags defaultSampleFlags>;

        virtualinvoke $r2.<com.coremedia.iso.boxes.fragment.SampleFlags: void getContent(java.nio.ByteBuffer)>(r1);

     label5:
        return;
    }

    public void _parseDetails(java.nio.ByteBuffer)
    {
        long $l0, $l15, $l16, $l17, $l18;
        java.nio.ByteBuffer r1;
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        com.coremedia.iso.boxes.fragment.SampleFlags $r2;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long parseVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $l0 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long trackId> = $l0;

        $i1 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i2 = $i1 & 1;

        if $i2 != 1 goto label1;

        $l18 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt64(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long baseDataOffset> = $l18;

     label1:
        $i3 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i4 = $i3 & 2;

        if $i4 != 2 goto label2;

        $l17 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long sampleDescriptionIndex> = $l17;

     label2:
        $i5 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i6 = $i5 & 8;

        if $i6 != 8 goto label3;

        $l16 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long defaultSampleDuration> = $l16;

     label3:
        $i7 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i8 = $i7 & 16;

        if $i8 != 16 goto label4;

        $l15 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long defaultSampleSize> = $l15;

     label4:
        $i9 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i10 = $i9 & 32;

        if $i10 != 32 goto label5;

        $r2 = new com.coremedia.iso.boxes.fragment.SampleFlags;

        specialinvoke $r2.<com.coremedia.iso.boxes.fragment.SampleFlags: void <init>(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: com.coremedia.iso.boxes.fragment.SampleFlags defaultSampleFlags> = $r2;

     label5:
        $i11 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i12 = $i11 & 65536;

        if $i12 != 65536 goto label6;

        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: boolean durationIsEmpty> = 1;

     label6:
        $i13 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i14 = $i13 & 131072;

        if $i14 != 131072 goto label7;

        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: boolean defaultBaseIsMoof> = 1;

     label7:
        return;
    }

    public boolean hasBaseDataOffset()
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        int $i0, $i1;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean hasSampleDescriptionIndex()
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        int $i0, $i1;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_1>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i1 = $i0 & 2;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean hasDefaultSampleDuration()
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        int $i0, $i1;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_2>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i1 = $i0 & 8;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean hasDefaultSampleSize()
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        int $i0, $i1;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_3>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i1 = $i0 & 16;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean hasDefaultSampleFlags()
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        int $i0, $i1;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_4>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i1 = $i0 & 32;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public long getTrackId()
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        long $l0;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_5>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $l0 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long trackId>;

        return $l0;
    }

    public long getBaseDataOffset()
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        long $l0;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_6>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $l0 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long baseDataOffset>;

        return $l0;
    }

    public long getSampleDescriptionIndex()
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        long $l0;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_7>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $l0 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long sampleDescriptionIndex>;

        return $l0;
    }

    public long getDefaultSampleDuration()
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        long $l0;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_8>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $l0 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long defaultSampleDuration>;

        return $l0;
    }

    public long getDefaultSampleSize()
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        long $l0;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_9>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $l0 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long defaultSampleSize>;

        return $l0;
    }

    public com.coremedia.iso.boxes.fragment.SampleFlags getDefaultSampleFlags()
    {
        com.coremedia.iso.boxes.fragment.SampleFlags $r4;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_10>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $r4 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: com.coremedia.iso.boxes.fragment.SampleFlags defaultSampleFlags>;

        return $r4;
    }

    public boolean isDurationIsEmpty()
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        org.aspectj.lang.JoinPoint $r2;
        boolean $z0;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_11>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $z0 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: boolean durationIsEmpty>;

        return $z0;
    }

    public boolean isDefaultBaseIsMoof()
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        org.aspectj.lang.JoinPoint $r2;
        boolean $z0;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_12>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $z0 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: boolean defaultBaseIsMoof>;

        return $z0;
    }

    public void setTrackId(long)
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r4;
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        long l0;
        java.lang.Object $r2;
        org.aspectj.lang.JoinPoint $r3;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        l0 := @parameter0: long;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_13>;

        $r2 = staticinvoke <org.aspectj.runtime.internal.Conversions: java.lang.Object longObject(long)>(l0);

        $r3 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object)>($r1, r0, r0, $r2);

        $r4 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r3);

        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long trackId> = l0;

        return;
    }

    public void setBaseDataOffset(long)
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r4;
        long l0;
        byte $b1;
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        int $i2, $i3, $i4, $i5;
        java.lang.Object $r2;
        org.aspectj.lang.JoinPoint $r3;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        l0 := @parameter0: long;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_14>;

        $r2 = staticinvoke <org.aspectj.runtime.internal.Conversions: java.lang.Object longObject(long)>(l0);

        $r3 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object)>($r1, r0, r0, $r2);

        $r4 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r3);

        $b1 = l0 cmp -1L;

        if $b1 != 0 goto label1;

        $i4 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i5 = $i4 & 2147483646;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: void setFlags(int)>($i5);

        goto label2;

     label1:
        $i2 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i3 = $i2 | 1;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: void setFlags(int)>($i3);

     label2:
        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long baseDataOffset> = l0;

        return;
    }

    public void setSampleDescriptionIndex(long)
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r4;
        long l0;
        byte $b1;
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        int $i2, $i3, $i4, $i5;
        java.lang.Object $r2;
        org.aspectj.lang.JoinPoint $r3;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        l0 := @parameter0: long;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_15>;

        $r2 = staticinvoke <org.aspectj.runtime.internal.Conversions: java.lang.Object longObject(long)>(l0);

        $r3 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object)>($r1, r0, r0, $r2);

        $r4 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r3);

        $b1 = l0 cmp -1L;

        if $b1 != 0 goto label1;

        $i4 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i5 = $i4 & 2147483645;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: void setFlags(int)>($i5);

        goto label2;

     label1:
        $i2 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i3 = $i2 | 2;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: void setFlags(int)>($i3);

     label2:
        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long sampleDescriptionIndex> = l0;

        return;
    }

    public void setDefaultSampleDuration(long)
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r4;
        long l0;
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        int $i1, $i2;
        java.lang.Object $r2;
        org.aspectj.lang.JoinPoint $r3;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        l0 := @parameter0: long;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_16>;

        $r2 = staticinvoke <org.aspectj.runtime.internal.Conversions: java.lang.Object longObject(long)>(l0);

        $r3 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object)>($r1, r0, r0, $r2);

        $r4 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r3);

        $i1 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i2 = $i1 | 8;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: void setFlags(int)>($i2);

        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long defaultSampleDuration> = l0;

        return;
    }

    public void setDefaultSampleSize(long)
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r4;
        long l0;
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        int $i1, $i2;
        java.lang.Object $r2;
        org.aspectj.lang.JoinPoint $r3;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        l0 := @parameter0: long;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_17>;

        $r2 = staticinvoke <org.aspectj.runtime.internal.Conversions: java.lang.Object longObject(long)>(l0);

        $r3 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object)>($r1, r0, r0, $r2);

        $r4 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r3);

        $i1 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i2 = $i1 | 16;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: void setFlags(int)>($i2);

        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long defaultSampleSize> = l0;

        return;
    }

    public void setDefaultSampleFlags(com.coremedia.iso.boxes.fragment.SampleFlags)
    {
        com.coremedia.iso.boxes.fragment.SampleFlags r0;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r4;
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r1;
        org.aspectj.lang.JoinPoint$StaticPart $r2;
        int $i0, $i1;
        org.aspectj.lang.JoinPoint $r3;

        r1 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        r0 := @parameter0: com.coremedia.iso.boxes.fragment.SampleFlags;

        $r2 = <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_18>;

        $r3 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object)>($r2, r1, r1, r0);

        $r4 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r3);

        $i0 = virtualinvoke r1.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i1 = $i0 | 32;

        virtualinvoke r1.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: void setFlags(int)>($i1);

        r1.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: com.coremedia.iso.boxes.fragment.SampleFlags defaultSampleFlags> = r0;

        return;
    }

    public void setDurationIsEmpty(boolean)
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r4;
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        org.aspectj.lang.JoinPoint $r3;
        boolean z0;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        z0 := @parameter0: boolean;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_19>;

        $r2 = staticinvoke <org.aspectj.runtime.internal.Conversions: java.lang.Object booleanObject(boolean)>(z0);

        $r3 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object)>($r1, r0, r0, $r2);

        $r4 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r3);

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i1 = $i0 | 65536;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: void setFlags(int)>($i1);

        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: boolean durationIsEmpty> = z0;

        return;
    }

    public void setDefaultBaseIsMoof(boolean)
    {
        com.googlecode.mp4parser.RequiresParseDetailAspect $r4;
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        org.aspectj.lang.JoinPoint $r3;
        boolean z0;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        z0 := @parameter0: boolean;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_20>;

        $r2 = staticinvoke <org.aspectj.runtime.internal.Conversions: java.lang.Object booleanObject(boolean)>(z0);

        $r3 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object)>($r1, r0, r0, $r2);

        $r4 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r3);

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: int getFlags()>();

        $i1 = $i0 | 131072;

        virtualinvoke r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: void setFlags(int)>($i1);

        r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: boolean defaultBaseIsMoof> = z0;

        return;
    }

    public java.lang.String toString()
    {
        long $l0, $l1, $l2, $l3, $l4;
        com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox r0;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        java.lang.String $r14;
        org.aspectj.lang.JoinPoint $r2;
        boolean $z0, $z1;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        com.coremedia.iso.boxes.fragment.SampleFlags $r11;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r13;

        r0 := @this: com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox;

        $r1 = <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_21>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TrackFragmentHeaderBox");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{trackId=");

        $l0 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long trackId>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", baseDataOffset=");

        $l1 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long baseDataOffset>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", sampleDescriptionIndex=");

        $l2 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long sampleDescriptionIndex>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", defaultSampleDuration=");

        $l3 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long defaultSampleDuration>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", defaultSampleSize=");

        $l4 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: long defaultSampleSize>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", defaultSampleFlags=");

        $r11 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: com.coremedia.iso.boxes.fragment.SampleFlags defaultSampleFlags>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r12 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", durationIsEmpty=");

        $z0 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: boolean durationIsEmpty>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r13 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", defaultBaseIsMoof=");

        $z1 = r0.<com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: boolean defaultBaseIsMoof>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r14 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }

    static void <clinit>()
    {
        <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: java.lang.String TYPE> = "tfhd";

        staticinvoke <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: void ajc$preClinit()>();

        return;
    }

    private static void ajc$preClinit()
    {
        org.aspectj.runtime.reflect.Factory $r0;
        org.aspectj.lang.JoinPoint$StaticPart $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r40, $r42, $r44;
        org.aspectj.lang.reflect.MethodSignature $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r41, $r43;

        $r0 = new org.aspectj.runtime.reflect.Factory;

        specialinvoke $r0.<org.aspectj.runtime.reflect.Factory: void <init>(java.lang.String,java.lang.Class)>("TrackFragmentHeaderBox.java", class "Lcom/coremedia/iso/boxes/fragment/TrackFragmentHeaderBox;");

        $r1 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "hasBaseDataOffset", "com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox", "", "", "", "boolean");

        $r2 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r1, 126);

        <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0> = $r2;

        $r3 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "hasSampleDescriptionIndex", "com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox", "", "", "", "boolean");

        $r4 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r3, 130);

        <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_1> = $r4;

        $r5 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "getDefaultSampleFlags", "com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox", "", "", "", "com.coremedia.iso.boxes.fragment.SampleFlags");

        $r6 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r5, 166);

        <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_10> = $r6;

        $r7 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "isDurationIsEmpty", "com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox", "", "", "", "boolean");

        $r8 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r7, 170);

        <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_11> = $r8;

        $r9 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "isDefaultBaseIsMoof", "com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox", "", "", "", "boolean");

        $r10 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r9, 174);

        <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_12> = $r10;

        $r11 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "setTrackId", "com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox", "long", "trackId", "", "void");

        $r12 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r11, 178);

        <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_13> = $r12;

        $r13 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "setBaseDataOffset", "com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox", "long", "baseDataOffset", "", "void");

        $r14 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r13, 182);

        <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_14> = $r14;

        $r15 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "setSampleDescriptionIndex", "com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox", "long", "sampleDescriptionIndex", "", "void");

        $r16 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r15, 191);

        <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_15> = $r16;

        $r17 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "setDefaultSampleDuration", "com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox", "long", "defaultSampleDuration", "", "void");

        $r18 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r17, 200);

        <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_16> = $r18;

        $r19 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "setDefaultSampleSize", "com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox", "long", "defaultSampleSize", "", "void");

        $r20 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r19, 205);

        <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_17> = $r20;

        $r21 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "setDefaultSampleFlags", "com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox", "com.coremedia.iso.boxes.fragment.SampleFlags", "defaultSampleFlags", "", "void");

        $r22 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r21, 210);

        <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_18> = $r22;

        $r23 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "setDurationIsEmpty", "com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox", "boolean", "durationIsEmpty", "", "void");

        $r24 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r23, 215);

        <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_19> = $r24;

        $r25 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "hasDefaultSampleDuration", "com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox", "", "", "", "boolean");

        $r26 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r25, 134);

        <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_2> = $r26;

        $r27 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "setDefaultBaseIsMoof", "com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox", "boolean", "defaultBaseIsMoof", "", "void");

        $r28 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r27, 220);

        <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_20> = $r28;

        $r29 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "toString", "com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox", "", "", "", "java.lang.String");

        $r30 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r29, 226);

        <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_21> = $r30;

        $r31 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "hasDefaultSampleSize", "com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox", "", "", "", "boolean");

        $r32 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r31, 138);

        <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_3> = $r32;

        $r33 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "hasDefaultSampleFlags", "com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox", "", "", "", "boolean");

        $r34 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r33, 142);

        <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_4> = $r34;

        $r35 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "getTrackId", "com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox", "", "", "", "long");

        $r36 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r35, 146);

        <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_5> = $r36;

        $r37 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "getBaseDataOffset", "com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox", "", "", "", "long");

        $r38 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r37, 150);

        <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_6> = $r38;

        $r39 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "getSampleDescriptionIndex", "com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox", "", "", "", "long");

        $r40 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r39, 154);

        <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_7> = $r40;

        $r41 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "getDefaultSampleDuration", "com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox", "", "", "", "long");

        $r42 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r41, 158);

        <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_8> = $r42;

        $r43 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "getDefaultSampleSize", "com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox", "", "", "", "long");

        $r44 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r43, 162);

        <com.coremedia.iso.boxes.fragment.TrackFragmentHeaderBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_9> = $r44;

        return;
    }
}
