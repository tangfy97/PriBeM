public abstract class com.google.gxp.compiler.cpp.BaseCppCodeGenerator extends com.google.gxp.compiler.codegen.BracesCodeGenerator
{

    protected void <init>(com.google.gxp.compiler.base.Tree)
    {
        com.google.gxp.compiler.cpp.BaseCppCodeGenerator r0;
        com.google.gxp.compiler.base.Tree r1;

        r0 := @this: com.google.gxp.compiler.cpp.BaseCppCodeGenerator;

        r1 := @parameter0: com.google.gxp.compiler.base.Tree;

        specialinvoke r0.<com.google.gxp.compiler.codegen.BracesCodeGenerator: void <init>(com.google.gxp.compiler.base.Tree)>(r1);

        return;
    }

    public void generateCode(java.lang.Appendable, com.google.gxp.compiler.alerts.AlertSink) throws java.io.IOException
    {
        com.google.gxp.compiler.cpp.BaseCppCodeGenerator r1;
        com.google.gxp.compiler.base.Root $r6;
        com.google.gxp.compiler.alerts.AlertSink r0;
        java.lang.Appendable r5;
        com.google.gxp.compiler.base.Tree $r2;
        com.google.gxp.compiler.alerts.AlertSet $r3;
        com.google.gxp.compiler.cpp.BaseCppCodeGenerator$1 $r4;

        r1 := @this: com.google.gxp.compiler.cpp.BaseCppCodeGenerator;

        r5 := @parameter0: java.lang.Appendable;

        r0 := @parameter1: com.google.gxp.compiler.alerts.AlertSink;

        $r2 = r1.<com.google.gxp.compiler.cpp.BaseCppCodeGenerator: com.google.gxp.compiler.base.Tree tree>;

        $r3 = virtualinvoke $r2.<com.google.gxp.compiler.base.Tree: com.google.gxp.compiler.alerts.AlertSet getAlerts()>();

        interfaceinvoke r0.<com.google.gxp.compiler.alerts.AlertSink: void addAll(com.google.gxp.compiler.alerts.AlertSet)>($r3);

        $r6 = r1.<com.google.gxp.compiler.cpp.BaseCppCodeGenerator: com.google.gxp.compiler.base.Root root>;

        $r4 = new com.google.gxp.compiler.cpp.BaseCppCodeGenerator$1;

        specialinvoke $r4.<com.google.gxp.compiler.cpp.BaseCppCodeGenerator$1: void <init>(com.google.gxp.compiler.cpp.BaseCppCodeGenerator,java.lang.Appendable,com.google.gxp.compiler.alerts.AlertSink)>(r1, r5, r0);

        interfaceinvoke $r6.<com.google.gxp.compiler.base.Root: java.lang.Object acceptVisitor(com.google.gxp.compiler.base.RootVisitor)>($r4);

        return;
    }

    protected abstract com.google.gxp.compiler.cpp.BaseCppCodeGenerator$InterfaceWorker createInterfaceWorker(java.lang.Appendable, com.google.gxp.compiler.alerts.AlertSink, com.google.gxp.compiler.base.Interface);

    protected abstract com.google.gxp.compiler.cpp.BaseCppCodeGenerator$TemplateWorker createTemplateWorker(java.lang.Appendable, com.google.gxp.compiler.alerts.AlertSink, com.google.gxp.compiler.base.Template);
}
