public interface  org.springframework.context.ConfigurableApplicationContext extends java.lang.Object implements org.springframework.context.ApplicationContext, org.springframework.context.Lifecycle
{
    public static final java.lang.String CONFIG_LOCATION_DELIMITERS;
    public static final java.lang.String CONVERSION_SERVICE_BEAN_NAME;
    public static final java.lang.String LOAD_TIME_WEAVER_BEAN_NAME;
    public static final java.lang.String SYSTEM_PROPERTIES_BEAN_NAME;
    public static final java.lang.String SYSTEM_ENVIRONMENT_BEAN_NAME;

    public abstract void setId(java.lang.String);

    public abstract void setParent(org.springframework.context.ApplicationContext);

    public abstract void addBeanFactoryPostProcessor(org.springframework.beans.factory.config.BeanFactoryPostProcessor);

    public abstract void addApplicationListener(org.springframework.context.ApplicationListener);

    public abstract void refresh() throws org.springframework.beans.BeansException, java.lang.IllegalStateException;

    public abstract void registerShutdownHook();

    public abstract void close();

    public abstract boolean isActive();

    public abstract org.springframework.beans.factory.config.ConfigurableListableBeanFactory getBeanFactory() throws java.lang.IllegalStateException;

    public static void <clinit>()
    {
        <org.springframework.context.ConfigurableApplicationContext: java.lang.String SYSTEM_ENVIRONMENT_BEAN_NAME> = "systemEnvironment";

        <org.springframework.context.ConfigurableApplicationContext: java.lang.String SYSTEM_PROPERTIES_BEAN_NAME> = "systemProperties";

        <org.springframework.context.ConfigurableApplicationContext: java.lang.String LOAD_TIME_WEAVER_BEAN_NAME> = "loadTimeWeaver";

        <org.springframework.context.ConfigurableApplicationContext: java.lang.String CONVERSION_SERVICE_BEAN_NAME> = "conversionService";

        <org.springframework.context.ConfigurableApplicationContext: java.lang.String CONFIG_LOCATION_DELIMITERS> = ",; \t\n";

        return;
    }
}
