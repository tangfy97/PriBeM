public class org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext extends org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext
{
    public int exceptionCount;
    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] thrownExceptions;
    public org.eclipse.jdt.internal.compiler.ast.ASTNode[] exceptionThrowers;
    public org.eclipse.jdt.internal.compiler.flow.FlowInfo[] exceptionThrowerFlowInfos;

    public void <init>(org.eclipse.jdt.internal.compiler.flow.FlowContext, org.eclipse.jdt.internal.compiler.ast.ASTNode, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r3;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo[] $r8;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r2;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r6;
        org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo $r4;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] $r5;
        org.eclipse.jdt.internal.compiler.flow.FlowContext r1;
        org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext r0;
        org.eclipse.jdt.internal.compiler.ast.ASTNode[] $r7;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.flow.FlowContext;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        r3 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $r5 = <org.eclipse.jdt.internal.compiler.lookup.Binding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] NO_EXCEPTIONS>;

        $r4 = <org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo DEAD_END>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext: void <init>(org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[],org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo)>(r1, r2, $r5, r3, $r4);

        $r6 = newarray (org.eclipse.jdt.internal.compiler.lookup.TypeBinding)[5];

        r0.<org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] thrownExceptions> = $r6;

        $r7 = newarray (org.eclipse.jdt.internal.compiler.ast.ASTNode)[5];

        r0.<org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext: org.eclipse.jdt.internal.compiler.ast.ASTNode[] exceptionThrowers> = $r7;

        $r8 = newarray (org.eclipse.jdt.internal.compiler.flow.FlowInfo)[5];

        r0.<org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext: org.eclipse.jdt.internal.compiler.flow.FlowInfo[] exceptionThrowerFlowInfos> = $r8;

        return;
    }

    public void checkInitializerExceptions(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.flow.FlowContext, org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r5;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo[] $r4;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r6, r9;
        org.eclipse.jdt.internal.compiler.ast.ASTNode $r7;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r2;
        org.eclipse.jdt.internal.compiler.flow.FlowContext r1;
        org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext r0;
        int $i0, i1;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r8;
        org.eclipse.jdt.internal.compiler.ast.ASTNode[] $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext;

        r5 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.flow.FlowContext;

        r9 := @parameter2: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        i1 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] thrownExceptions>;

        $r8 = $r2[i1];

        $r3 = r0.<org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext: org.eclipse.jdt.internal.compiler.ast.ASTNode[] exceptionThrowers>;

        $r7 = $r3[i1];

        $r4 = r0.<org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext: org.eclipse.jdt.internal.compiler.flow.FlowInfo[] exceptionThrowerFlowInfos>;

        $r6 = $r4[i1];

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.flow.FlowContext: void checkExceptionHandlers(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.flow.FlowInfo,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>($r8, $r7, $r6, r5);

        i1 = i1 + 1;

     label2:
        $i0 = r0.<org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext: int exceptionCount>;

        if i1 < $i0 goto label1;

        return;
    }

    public java.lang.String individualToString()
    {
        org.eclipse.jdt.internal.compiler.flow.FlowInfo[] $r7;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r8;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r3;
        java.lang.StringBuffer $r0, $r2, $r6, $r10;
        org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext r1;
        int $i0, i1;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r4;
        char[] $r5;
        java.lang.String $r9, $r11;

        r1 := @this: org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>("Initialization flow context");

        i1 = 0;

        goto label2;

     label1:
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(91);

        $r3 = r1.<org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] thrownExceptions>;

        $r4 = $r3[i1];

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] readableName()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r5);

        $r6 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(45);

        $r7 = r1.<org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext: org.eclipse.jdt.internal.compiler.flow.FlowInfo[] exceptionThrowerFlowInfos>;

        $r8 = $r7[i1];

        $r9 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: java.lang.String toString()>();

        $r10 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93);

        i1 = i1 + 1;

     label2:
        $i0 = r1.<org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext: int exceptionCount>;

        if i1 < $i0 goto label1;

        $r11 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r11;
    }

    public void recordHandlingException(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding, org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode, boolean)
    {
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r8;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r4;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r2;
        org.eclipse.jdt.internal.compiler.ast.ASTNode[] $r5, $r11, $r12;
        boolean z0;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo[] $r6, $r13, $r14;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r15;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r1, $r3, $r9, $r10;
        org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo r7;
        org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext;

        r15 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        r7 := @parameter1: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo;

        r2 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r4 := @parameter3: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        z0 := @parameter4: boolean;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] thrownExceptions>;

        i0 = lengthof $r1;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext: int exceptionCount>;

        if $i1 != i0 goto label1;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] thrownExceptions>;

        $i6 = i0 * 2;

        $r9 = newarray (org.eclipse.jdt.internal.compiler.lookup.TypeBinding)[$i6];

        r0.<org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] thrownExceptions> = $r9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, $r9, 0, i0);

        $r12 = r0.<org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext: org.eclipse.jdt.internal.compiler.ast.ASTNode[] exceptionThrowers>;

        $i7 = i0 * 2;

        $r11 = newarray (org.eclipse.jdt.internal.compiler.ast.ASTNode)[$i7];

        r0.<org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext: org.eclipse.jdt.internal.compiler.ast.ASTNode[] exceptionThrowers> = $r11;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r12, 0, $r11, 0, i0);

        $r14 = r0.<org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext: org.eclipse.jdt.internal.compiler.flow.FlowInfo[] exceptionThrowerFlowInfos>;

        $i8 = i0 * 2;

        $r13 = newarray (org.eclipse.jdt.internal.compiler.flow.FlowInfo)[$i8];

        r0.<org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext: org.eclipse.jdt.internal.compiler.flow.FlowInfo[] exceptionThrowerFlowInfos> = $r13;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r14, 0, $r13, 0, i0);

     label1:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] thrownExceptions>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext: int exceptionCount>;

        $r3[$i2] = r2;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext: org.eclipse.jdt.internal.compiler.ast.ASTNode[] exceptionThrowers>;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext: int exceptionCount>;

        $r5[$i3] = r4;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext: org.eclipse.jdt.internal.compiler.flow.FlowInfo[] exceptionThrowerFlowInfos>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext: int exceptionCount>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext: int exceptionCount> = $i5;

        $r8 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo copy()>();

        $r6[$i4] = $r8;

        return;
    }
}
