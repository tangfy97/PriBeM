public final enum class org.waveprotocol.wave.client.editor.EditorInstrumentor$Action extends java.lang.Enum
{
    public static final enum org.waveprotocol.wave.client.editor.EditorInstrumentor$Action FULL_REPAIR;
    public static final enum org.waveprotocol.wave.client.editor.EditorInstrumentor$Action PARTIAL_REPAIR;
    public static final enum org.waveprotocol.wave.client.editor.EditorInstrumentor$Action SHORTCUT_BOLD;
    public static final enum org.waveprotocol.wave.client.editor.EditorInstrumentor$Action SHORTCUT_ITALIC;
    public static final enum org.waveprotocol.wave.client.editor.EditorInstrumentor$Action SHORTCUT_UNDERLINE;
    public static final enum org.waveprotocol.wave.client.editor.EditorInstrumentor$Action SHORTCUT_TABINDENT;
    public static final enum org.waveprotocol.wave.client.editor.EditorInstrumentor$Action SHORTCUT_TABOUTDENT;
    public static final enum org.waveprotocol.wave.client.editor.EditorInstrumentor$Action SHORTCUT_TABFIELDS;
    public static final enum org.waveprotocol.wave.client.editor.EditorInstrumentor$Action SHORTCUT_OPENNEARBYPOPUP;
    public static final enum org.waveprotocol.wave.client.editor.EditorInstrumentor$Action SHORTCUT_HEADINGSTYLE;
    public static final enum org.waveprotocol.wave.client.editor.EditorInstrumentor$Action SHORTCUT_ALIGNMENT;
    public static final enum org.waveprotocol.wave.client.editor.EditorInstrumentor$Action CLIPBOARD_COPY;
    public static final enum org.waveprotocol.wave.client.editor.EditorInstrumentor$Action CLIPBOARD_PASTE_FROM_WAVE;
    public static final enum org.waveprotocol.wave.client.editor.EditorInstrumentor$Action CLIPBOARD_PASTE_FROM_OUTSIDE;
    public static final enum org.waveprotocol.wave.client.editor.EditorInstrumentor$Action CLIPBOARD_CUT;
    public static final enum org.waveprotocol.wave.client.editor.EditorInstrumentor$Action UNDO;
    public static final enum org.waveprotocol.wave.client.editor.EditorInstrumentor$Action REDO;
    private static final org.waveprotocol.wave.client.editor.EditorInstrumentor$Action[] $VALUES;

    public static org.waveprotocol.wave.client.editor.EditorInstrumentor$Action[] values()
    {
        java.lang.Object $r1;
        org.waveprotocol.wave.client.editor.EditorInstrumentor$Action[] $r0, $r2;

        $r0 = <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.waveprotocol.wave.client.editor.EditorInstrumentor$Action[]) $r1;

        return $r2;
    }

    public static org.waveprotocol.wave.client.editor.EditorInstrumentor$Action valueOf(java.lang.String)
    {
        org.waveprotocol.wave.client.editor.EditorInstrumentor$Action $r2;
        java.lang.String r0;
        java.lang.Enum $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/waveprotocol/wave/client/editor/EditorInstrumentor$Action;", r0);

        $r2 = (org.waveprotocol.wave.client.editor.EditorInstrumentor$Action) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        int i0;
        org.waveprotocol.wave.client.editor.EditorInstrumentor$Action r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.client.editor.EditorInstrumentor$Action[] $r17;
        org.waveprotocol.wave.client.editor.EditorInstrumentor$Action $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34;

        $r0 = new org.waveprotocol.wave.client.editor.EditorInstrumentor$Action;

        specialinvoke $r0.<org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: void <init>(java.lang.String,int)>("FULL_REPAIR", 0);

        <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action FULL_REPAIR> = $r0;

        $r1 = new org.waveprotocol.wave.client.editor.EditorInstrumentor$Action;

        specialinvoke $r1.<org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: void <init>(java.lang.String,int)>("PARTIAL_REPAIR", 1);

        <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action PARTIAL_REPAIR> = $r1;

        $r2 = new org.waveprotocol.wave.client.editor.EditorInstrumentor$Action;

        specialinvoke $r2.<org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: void <init>(java.lang.String,int)>("SHORTCUT_BOLD", 2);

        <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action SHORTCUT_BOLD> = $r2;

        $r3 = new org.waveprotocol.wave.client.editor.EditorInstrumentor$Action;

        specialinvoke $r3.<org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: void <init>(java.lang.String,int)>("SHORTCUT_ITALIC", 3);

        <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action SHORTCUT_ITALIC> = $r3;

        $r4 = new org.waveprotocol.wave.client.editor.EditorInstrumentor$Action;

        specialinvoke $r4.<org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: void <init>(java.lang.String,int)>("SHORTCUT_UNDERLINE", 4);

        <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action SHORTCUT_UNDERLINE> = $r4;

        $r5 = new org.waveprotocol.wave.client.editor.EditorInstrumentor$Action;

        specialinvoke $r5.<org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: void <init>(java.lang.String,int)>("SHORTCUT_TABINDENT", 5);

        <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action SHORTCUT_TABINDENT> = $r5;

        $r6 = new org.waveprotocol.wave.client.editor.EditorInstrumentor$Action;

        specialinvoke $r6.<org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: void <init>(java.lang.String,int)>("SHORTCUT_TABOUTDENT", 6);

        <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action SHORTCUT_TABOUTDENT> = $r6;

        $r7 = new org.waveprotocol.wave.client.editor.EditorInstrumentor$Action;

        specialinvoke $r7.<org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: void <init>(java.lang.String,int)>("SHORTCUT_TABFIELDS", 7);

        <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action SHORTCUT_TABFIELDS> = $r7;

        $r8 = new org.waveprotocol.wave.client.editor.EditorInstrumentor$Action;

        specialinvoke $r8.<org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: void <init>(java.lang.String,int)>("SHORTCUT_OPENNEARBYPOPUP", 8);

        <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action SHORTCUT_OPENNEARBYPOPUP> = $r8;

        $r9 = new org.waveprotocol.wave.client.editor.EditorInstrumentor$Action;

        specialinvoke $r9.<org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: void <init>(java.lang.String,int)>("SHORTCUT_HEADINGSTYLE", 9);

        <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action SHORTCUT_HEADINGSTYLE> = $r9;

        $r10 = new org.waveprotocol.wave.client.editor.EditorInstrumentor$Action;

        specialinvoke $r10.<org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: void <init>(java.lang.String,int)>("SHORTCUT_ALIGNMENT", 10);

        <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action SHORTCUT_ALIGNMENT> = $r10;

        $r11 = new org.waveprotocol.wave.client.editor.EditorInstrumentor$Action;

        specialinvoke $r11.<org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: void <init>(java.lang.String,int)>("CLIPBOARD_COPY", 11);

        <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action CLIPBOARD_COPY> = $r11;

        $r12 = new org.waveprotocol.wave.client.editor.EditorInstrumentor$Action;

        specialinvoke $r12.<org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: void <init>(java.lang.String,int)>("CLIPBOARD_PASTE_FROM_WAVE", 12);

        <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action CLIPBOARD_PASTE_FROM_WAVE> = $r12;

        $r13 = new org.waveprotocol.wave.client.editor.EditorInstrumentor$Action;

        specialinvoke $r13.<org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: void <init>(java.lang.String,int)>("CLIPBOARD_PASTE_FROM_OUTSIDE", 13);

        <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action CLIPBOARD_PASTE_FROM_OUTSIDE> = $r13;

        $r14 = new org.waveprotocol.wave.client.editor.EditorInstrumentor$Action;

        specialinvoke $r14.<org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: void <init>(java.lang.String,int)>("CLIPBOARD_CUT", 14);

        <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action CLIPBOARD_CUT> = $r14;

        $r15 = new org.waveprotocol.wave.client.editor.EditorInstrumentor$Action;

        specialinvoke $r15.<org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: void <init>(java.lang.String,int)>("UNDO", 15);

        <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action UNDO> = $r15;

        $r16 = new org.waveprotocol.wave.client.editor.EditorInstrumentor$Action;

        specialinvoke $r16.<org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: void <init>(java.lang.String,int)>("REDO", 16);

        <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action REDO> = $r16;

        $r17 = newarray (org.waveprotocol.wave.client.editor.EditorInstrumentor$Action)[17];

        $r18 = <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action FULL_REPAIR>;

        $r17[0] = $r18;

        $r19 = <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action PARTIAL_REPAIR>;

        $r17[1] = $r19;

        $r20 = <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action SHORTCUT_BOLD>;

        $r17[2] = $r20;

        $r21 = <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action SHORTCUT_ITALIC>;

        $r17[3] = $r21;

        $r22 = <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action SHORTCUT_UNDERLINE>;

        $r17[4] = $r22;

        $r23 = <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action SHORTCUT_TABINDENT>;

        $r17[5] = $r23;

        $r24 = <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action SHORTCUT_TABOUTDENT>;

        $r17[6] = $r24;

        $r25 = <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action SHORTCUT_TABFIELDS>;

        $r17[7] = $r25;

        $r26 = <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action SHORTCUT_OPENNEARBYPOPUP>;

        $r17[8] = $r26;

        $r27 = <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action SHORTCUT_HEADINGSTYLE>;

        $r17[9] = $r27;

        $r28 = <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action SHORTCUT_ALIGNMENT>;

        $r17[10] = $r28;

        $r29 = <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action CLIPBOARD_COPY>;

        $r17[11] = $r29;

        $r30 = <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action CLIPBOARD_PASTE_FROM_WAVE>;

        $r17[12] = $r30;

        $r31 = <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action CLIPBOARD_PASTE_FROM_OUTSIDE>;

        $r17[13] = $r31;

        $r32 = <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action CLIPBOARD_CUT>;

        $r17[14] = $r32;

        $r33 = <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action UNDO>;

        $r17[15] = $r33;

        $r34 = <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action REDO>;

        $r17[16] = $r34;

        <org.waveprotocol.wave.client.editor.EditorInstrumentor$Action: org.waveprotocol.wave.client.editor.EditorInstrumentor$Action[] $VALUES> = $r17;

        return;
    }
}
