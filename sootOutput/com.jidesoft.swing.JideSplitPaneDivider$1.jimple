class com.jidesoft.swing.JideSplitPaneDivider$1 extends javax.swing.JButton
{
    final com.jidesoft.swing.JideSplitPaneDivider this$0;

    void <init>(com.jidesoft.swing.JideSplitPaneDivider)
    {
        com.jidesoft.swing.JideSplitPaneDivider$1 r0;
        com.jidesoft.swing.JideSplitPaneDivider r1;

        r0 := @this: com.jidesoft.swing.JideSplitPaneDivider$1;

        r1 := @parameter0: com.jidesoft.swing.JideSplitPaneDivider;

        r0.<com.jidesoft.swing.JideSplitPaneDivider$1: com.jidesoft.swing.JideSplitPaneDivider this$0> = r1;

        specialinvoke r0.<javax.swing.JButton: void <init>()>();

        return;
    }

    public void setBorder(javax.swing.border.Border)
    {
        com.jidesoft.swing.JideSplitPaneDivider$1 r0;
        javax.swing.border.Border r1;

        r0 := @this: com.jidesoft.swing.JideSplitPaneDivider$1;

        r1 := @parameter0: javax.swing.border.Border;

        return;
    }

    public void paint(java.awt.Graphics)
    {
        java.awt.Color $r5, $r12, $r15;
        boolean $z0;
        java.awt.Graphics r3;
        com.jidesoft.swing.JideSplitPaneDivider$1 r0;
        com.jidesoft.swing.JideSplitPaneDivider $r1, $r4, $r6, $r9, $r10, $r11, $r13, $r14, $r16, $r17;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11;
        javax.swing.ImageIcon $r8, $r19;
        com.jidesoft.swing.JideSplitPane $r2, $r7, $r18;

        r0 := @this: com.jidesoft.swing.JideSplitPaneDivider$1;

        r3 := @parameter0: java.awt.Graphics;

        $r1 = r0.<com.jidesoft.swing.JideSplitPaneDivider$1: com.jidesoft.swing.JideSplitPaneDivider this$0>;

        $r2 = $r1.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        if $r2 == null goto label7;

        $r4 = r0.<com.jidesoft.swing.JideSplitPaneDivider$1: com.jidesoft.swing.JideSplitPaneDivider this$0>;

        $r5 = virtualinvoke $r4.<com.jidesoft.swing.JideSplitPaneDivider: java.awt.Color getBackground()>();

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r5);

        $z0 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider$1: boolean isOpaque()>();

        if $z0 == 0 goto label1;

        $i8 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider$1: int getWidth()>();

        $i9 = virtualinvoke r0.<com.jidesoft.swing.JideSplitPaneDivider$1: int getHeight()>();

        virtualinvoke r3.<java.awt.Graphics: void fillRect(int,int,int,int)>(0, 0, $i8, $i9);

     label1:
        $r6 = r0.<com.jidesoft.swing.JideSplitPaneDivider$1: com.jidesoft.swing.JideSplitPaneDivider this$0>;

        $r7 = $r6.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $r8 = virtualinvoke $r7.<com.jidesoft.swing.JideSplitPane: javax.swing.ImageIcon getLeftOneTouchButtonImageIcon()>();

        if $r8 == null goto label2;

        $r17 = r0.<com.jidesoft.swing.JideSplitPaneDivider$1: com.jidesoft.swing.JideSplitPaneDivider this$0>;

        $r18 = $r17.<com.jidesoft.swing.JideSplitPaneDivider: com.jidesoft.swing.JideSplitPane _jideSplitPane>;

        $r19 = virtualinvoke $r18.<com.jidesoft.swing.JideSplitPane: javax.swing.ImageIcon getLeftOneTouchButtonImageIcon()>();

        virtualinvoke $r19.<javax.swing.ImageIcon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>(r0, r3, 0, 0);

        goto label7;

     label2:
        $r9 = r0.<com.jidesoft.swing.JideSplitPaneDivider$1: com.jidesoft.swing.JideSplitPaneDivider this$0>;

        $i0 = $r9.<com.jidesoft.swing.JideSplitPaneDivider: int _orientation>;

        if $i0 != 1 goto label5;

        $r14 = r0.<com.jidesoft.swing.JideSplitPaneDivider$1: com.jidesoft.swing.JideSplitPaneDivider this$0>;

        $r15 = virtualinvoke $r14.<com.jidesoft.swing.JideSplitPaneDivider: java.awt.Color getDarkShadowColor()>();

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r15);

        $r16 = r0.<com.jidesoft.swing.JideSplitPaneDivider$1: com.jidesoft.swing.JideSplitPaneDivider this$0>;

        $i5 = staticinvoke <com.jidesoft.swing.JideSplitPaneDivider: int access$000(com.jidesoft.swing.JideSplitPaneDivider)>($r16);

        i10 = 0;

     label3:
        if i10 >= $i5 goto label4;

        $i7 = $i5 - i10;

        $i6 = $i5 + i10;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>(i10, $i7, i10, $i6);

        i10 = i10 + 1;

        goto label3;

     label4:
        goto label7;

     label5:
        $r10 = r0.<com.jidesoft.swing.JideSplitPaneDivider$1: com.jidesoft.swing.JideSplitPaneDivider this$0>;

        $i1 = $r10.<com.jidesoft.swing.JideSplitPaneDivider: int _orientation>;

        if $i1 != 0 goto label7;

        $r11 = r0.<com.jidesoft.swing.JideSplitPaneDivider$1: com.jidesoft.swing.JideSplitPaneDivider this$0>;

        $r12 = virtualinvoke $r11.<com.jidesoft.swing.JideSplitPaneDivider: java.awt.Color getDarkShadowColor()>();

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r12);

        $r13 = r0.<com.jidesoft.swing.JideSplitPaneDivider$1: com.jidesoft.swing.JideSplitPaneDivider this$0>;

        $i2 = staticinvoke <com.jidesoft.swing.JideSplitPaneDivider: int access$000(com.jidesoft.swing.JideSplitPaneDivider)>($r13);

        i11 = 0;

     label6:
        if i11 >= $i2 goto label7;

        $i4 = $i2 - i11;

        $i3 = $i2 + i11;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i4, i11, $i3, i11);

        i11 = i11 + 1;

        goto label6;

     label7:
        return;
    }

    public boolean isFocusTraversable()
    {
        com.jidesoft.swing.JideSplitPaneDivider$1 r0;

        r0 := @this: com.jidesoft.swing.JideSplitPaneDivider$1;

        return 0;
    }
}
