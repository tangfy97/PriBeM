public class org.eclipse.jetty.servlet.listener.ELContextCleaner extends java.lang.Object implements javax.servlet.ServletContextListener
{
    private static final org.eclipse.jetty.util.log.Logger LOG;

    public void <init>()
    {
        org.eclipse.jetty.servlet.listener.ELContextCleaner r0;

        r0 := @this: org.eclipse.jetty.servlet.listener.ELContextCleaner;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void contextInitialized(javax.servlet.ServletContextEvent)
    {
        org.eclipse.jetty.servlet.listener.ELContextCleaner r0;
        javax.servlet.ServletContextEvent r1;

        r0 := @this: org.eclipse.jetty.servlet.listener.ELContextCleaner;

        r1 := @parameter0: javax.servlet.ServletContextEvent;

        return;
    }

    public void contextDestroyed(javax.servlet.ServletContextEvent)
    {
        java.lang.Object[] $r4, $r7;
        java.lang.NoSuchFieldException $r6;
        java.lang.SecurityException $r13;
        java.lang.IllegalAccessException $r9;
        java.lang.reflect.Field $r3;
        java.lang.IllegalArgumentException $r11;
        javax.servlet.ServletContextEvent r16;
        java.lang.Class $r1, $r2;
        java.lang.ClassNotFoundException $r15;
        org.eclipse.jetty.servlet.listener.ELContextCleaner r0;
        org.eclipse.jetty.util.log.Logger $r5, $r8, $r10, $r12, $r14;

        r0 := @this: org.eclipse.jetty.servlet.listener.ELContextCleaner;

        r16 := @parameter0: javax.servlet.ServletContextEvent;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.eclipse.jetty.util.Loader: java.lang.Class loadClass(java.lang.Class,java.lang.String)>($r1, "javax.el.BeanELResolver");

        $r3 = virtualinvoke r0.<org.eclipse.jetty.servlet.listener.ELContextCleaner: java.lang.reflect.Field getField(java.lang.Class)>($r2);

        virtualinvoke r0.<org.eclipse.jetty.servlet.listener.ELContextCleaner: void purgeEntries(java.lang.reflect.Field)>($r3);

        $r5 = <org.eclipse.jetty.servlet.listener.ELContextCleaner: org.eclipse.jetty.util.log.Logger LOG>;

        $r4 = newarray (java.lang.Object)[0];

        interfaceinvoke $r5.<org.eclipse.jetty.util.log.Logger: void info(java.lang.String,java.lang.Object[])>("javax.el.BeanELResolver purged", $r4);

     label2:
        goto label8;

     label3:
        $r15 := @caughtexception;

        goto label8;

     label4:
        $r13 := @caughtexception;

        $r14 = <org.eclipse.jetty.servlet.listener.ELContextCleaner: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r14.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>("Cannot purge classes from javax.el.BeanELResolver", $r13);

        goto label8;

     label5:
        $r11 := @caughtexception;

        $r12 = <org.eclipse.jetty.servlet.listener.ELContextCleaner: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r12.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>("Cannot purge classes from javax.el.BeanELResolver", $r11);

        goto label8;

     label6:
        $r9 := @caughtexception;

        $r10 = <org.eclipse.jetty.servlet.listener.ELContextCleaner: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r10.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>("Cannot purge classes from javax.el.BeanELResolver", $r9);

        goto label8;

     label7:
        $r6 := @caughtexception;

        $r8 = <org.eclipse.jetty.servlet.listener.ELContextCleaner: org.eclipse.jetty.util.log.Logger LOG>;

        $r7 = newarray (java.lang.Object)[0];

        interfaceinvoke $r8.<org.eclipse.jetty.util.log.Logger: void info(java.lang.String,java.lang.Object[])>("Not cleaning cached beans: no such field javax.el.BeanELResolver.properties", $r7);

     label8:
        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.SecurityException from label1 to label2 with label4;
        catch java.lang.IllegalArgumentException from label1 to label2 with label5;
        catch java.lang.IllegalAccessException from label1 to label2 with label6;
        catch java.lang.NoSuchFieldException from label1 to label2 with label7;
    }

    protected java.lang.reflect.Field getField(java.lang.Class) throws java.lang.SecurityException, java.lang.NoSuchFieldException
    {
        java.lang.Class r0;
        org.eclipse.jetty.servlet.listener.ELContextCleaner r2;
        java.lang.reflect.Field $r1;

        r2 := @this: org.eclipse.jetty.servlet.listener.ELContextCleaner;

        r0 := @parameter0: java.lang.Class;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("properties");

        return $r1;
    }

    protected void purgeEntries(java.lang.reflect.Field) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException
    {
        java.lang.Thread $r15, $r21;
        boolean $z0, $z1, $z2;
        java.util.concurrent.ConcurrentHashMap $r31;
        java.util.Set $r2;
        java.lang.StringBuilder $r6, $r8, $r9, $r10, $r12, $r18, $r20, $r23, $r24, $r26;
        java.lang.ClassLoader $r11, $r16, $r17, $r22, $r25;
        java.lang.Object[] $r14, $r28, $r29;
        java.lang.String $r13, $r27;
        java.util.Iterator $r3;
        java.lang.reflect.Field r0;
        java.lang.Object $r1, $r4;
        java.lang.Class r5;
        org.eclipse.jetty.util.log.Logger $r7, $r19, $r30;
        org.eclipse.jetty.servlet.listener.ELContextCleaner r32;

        r32 := @this: org.eclipse.jetty.servlet.listener.ELContextCleaner;

        r0 := @parameter0: java.lang.reflect.Field;

        if r0 != null goto label1;

        return;

     label1:
        $z0 = virtualinvoke r0.<java.lang.reflect.Field: boolean isAccessible()>();

        if $z0 != 0 goto label2;

        virtualinvoke r0.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label2:
        $r1 = virtualinvoke r0.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $r31 = (java.util.concurrent.ConcurrentHashMap) $r1;

        if $r31 != null goto label3;

        return;

     label3:
        $r2 = virtualinvoke $r31.<java.util.concurrent.ConcurrentHashMap: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.Class) $r4;

        $r7 = <org.eclipse.jetty.servlet.listener.ELContextCleaner: org.eclipse.jetty.util.log.Logger LOG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Clazz: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" loaded by ");

        $r11 = virtualinvoke r5.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = newarray (java.lang.Object)[0];

        interfaceinvoke $r7.<org.eclipse.jetty.util.log.Logger: void info(java.lang.String,java.lang.Object[])>($r13, $r14);

        $r15 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r16 = virtualinvoke $r15.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        $r17 = virtualinvoke r5.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $z2 = virtualinvoke $r16.<java.lang.Object: boolean equals(java.lang.Object)>($r17);

        if $z2 == 0 goto label5;

        interfaceinvoke $r3.<java.util.Iterator: void remove()>();

        $r30 = <org.eclipse.jetty.servlet.listener.ELContextCleaner: org.eclipse.jetty.util.log.Logger LOG>;

        $r29 = newarray (java.lang.Object)[0];

        interfaceinvoke $r30.<org.eclipse.jetty.util.log.Logger: void info(java.lang.String,java.lang.Object[])>("removed", $r29);

        goto label6;

     label5:
        $r19 = <org.eclipse.jetty.servlet.listener.ELContextCleaner: org.eclipse.jetty.util.log.Logger LOG>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not removed: contextclassloader=");

        $r21 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r22 = virtualinvoke $r21.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("clazz\'s classloader=");

        $r25 = virtualinvoke r5.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = newarray (java.lang.Object)[0];

        interfaceinvoke $r19.<org.eclipse.jetty.util.log.Logger: void info(java.lang.String,java.lang.Object[])>($r27, $r28);

     label6:
        goto label4;

     label7:
        return;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/servlet/listener/ELContextCleaner;");

        <org.eclipse.jetty.servlet.listener.ELContextCleaner: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
