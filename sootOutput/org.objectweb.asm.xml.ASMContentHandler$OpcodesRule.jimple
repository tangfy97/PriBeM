final class org.objectweb.asm.xml.ASMContentHandler$OpcodesRule extends org.objectweb.asm.xml.ASMContentHandler$Rule
{
    final org.objectweb.asm.xml.ASMContentHandler this$0;

    void <init>(org.objectweb.asm.xml.ASMContentHandler)
    {
        org.objectweb.asm.xml.ASMContentHandler r1;
        org.objectweb.asm.xml.ASMContentHandler$OpcodesRule r0;

        r0 := @this: org.objectweb.asm.xml.ASMContentHandler$OpcodesRule;

        r1 := @parameter0: org.objectweb.asm.xml.ASMContentHandler;

        r0.<org.objectweb.asm.xml.ASMContentHandler$OpcodesRule: org.objectweb.asm.xml.ASMContentHandler this$0> = r1;

        specialinvoke r0.<org.objectweb.asm.xml.ASMContentHandler$Rule: void <init>(org.objectweb.asm.xml.ASMContentHandler)>(r1);

        return;
    }

    public final void begin(java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        org.objectweb.asm.MethodVisitor $r5, $r9, $r12, $r16, $r19, $r23, $r27, $r29, $r31, $r33;
        org.objectweb.asm.xml.ASMContentHandler$OpcodesRule r4;
        org.objectweb.asm.xml.ASMContentHandler$Opcode r3;
        org.xml.sax.SAXException $r35;
        java.lang.StringBuilder $r36, $r37, $r38, $r39, $r42;
        org.objectweb.asm.Label $r18;
        java.lang.Error $r34;
        java.util.HashMap $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        org.xml.sax.Attributes r6;
        java.lang.String r0, $r7, $r8, $r10, $r11, $r13, $r14, $r17, $r20, $r21, $r22, $r24, $r25, $r26, $r28, $r30, $r32, $r41, $r43;
        org.objectweb.asm.xml.ASMContentHandler $r40;
        java.lang.Object $r2, $r15;

        r4 := @this: org.objectweb.asm.xml.ASMContentHandler$OpcodesRule;

        r0 := @parameter0: java.lang.String;

        r6 := @parameter1: org.xml.sax.Attributes;

        $r1 = <org.objectweb.asm.xml.ASMContentHandler: java.util.HashMap OPCODES>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        r3 = (org.objectweb.asm.xml.ASMContentHandler$Opcode) $r2;

        if r3 != null goto label01;

        $r35 = new org.xml.sax.SAXException;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid element: ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r40 = r4.<org.objectweb.asm.xml.ASMContentHandler$OpcodesRule: org.objectweb.asm.xml.ASMContentHandler this$0>;

        $r41 = $r40.<org.objectweb.asm.xml.ASMContentHandler: java.lang.String match>;

        $r42 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r35.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r43);

        throw $r35;

     label01:
        $i0 = r3.<org.objectweb.asm.xml.ASMContentHandler$Opcode: int type>;

        tableswitch($i0)
        {
            case 0: goto label02;
            case 1: goto label04;
            case 2: goto label08;
            case 3: goto label07;
            case 4: goto label03;
            case 5: goto label06;
            case 6: goto label05;
            case 7: goto label10;
            case 8: goto label09;
            case 9: goto label11;
            default: goto label12;
        };

     label02:
        $r33 = virtualinvoke r4.<org.objectweb.asm.xml.ASMContentHandler$OpcodesRule: org.objectweb.asm.MethodVisitor getCodeVisitor()>();

        $i12 = r3.<org.objectweb.asm.xml.ASMContentHandler$Opcode: int opcode>;

        virtualinvoke $r33.<org.objectweb.asm.MethodVisitor: void visitInsn(int)>($i12);

        goto label13;

     label03:
        $r23 = virtualinvoke r4.<org.objectweb.asm.xml.ASMContentHandler$OpcodesRule: org.objectweb.asm.MethodVisitor getCodeVisitor()>();

        $i6 = r3.<org.objectweb.asm.xml.ASMContentHandler$Opcode: int opcode>;

        $r24 = interfaceinvoke r6.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("owner");

        $r25 = interfaceinvoke r6.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("name");

        $r26 = interfaceinvoke r6.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("desc");

        virtualinvoke $r23.<org.objectweb.asm.MethodVisitor: void visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)>($i6, $r24, $r25, $r26);

        goto label13;

     label04:
        $r31 = virtualinvoke r4.<org.objectweb.asm.xml.ASMContentHandler$OpcodesRule: org.objectweb.asm.MethodVisitor getCodeVisitor()>();

        $i10 = r3.<org.objectweb.asm.xml.ASMContentHandler$Opcode: int opcode>;

        $r32 = interfaceinvoke r6.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("value");

        $i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r32);

        virtualinvoke $r31.<org.objectweb.asm.MethodVisitor: void visitIntInsn(int,int)>($i10, $i11);

        goto label13;

     label05:
        $r16 = virtualinvoke r4.<org.objectweb.asm.xml.ASMContentHandler$OpcodesRule: org.objectweb.asm.MethodVisitor getCodeVisitor()>();

        $i4 = r3.<org.objectweb.asm.xml.ASMContentHandler$Opcode: int opcode>;

        $r17 = interfaceinvoke r6.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("label");

        $r18 = virtualinvoke r4.<org.objectweb.asm.xml.ASMContentHandler$OpcodesRule: org.objectweb.asm.Label getLabel(java.lang.Object)>($r17);

        virtualinvoke $r16.<org.objectweb.asm.MethodVisitor: void visitJumpInsn(int,org.objectweb.asm.Label)>($i4, $r18);

        goto label13;

     label06:
        $r19 = virtualinvoke r4.<org.objectweb.asm.xml.ASMContentHandler$OpcodesRule: org.objectweb.asm.MethodVisitor getCodeVisitor()>();

        $i5 = r3.<org.objectweb.asm.xml.ASMContentHandler$Opcode: int opcode>;

        $r20 = interfaceinvoke r6.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("owner");

        $r21 = interfaceinvoke r6.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("name");

        $r22 = interfaceinvoke r6.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("desc");

        virtualinvoke $r19.<org.objectweb.asm.MethodVisitor: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)>($i5, $r20, $r21, $r22);

        goto label13;

     label07:
        $r27 = virtualinvoke r4.<org.objectweb.asm.xml.ASMContentHandler$OpcodesRule: org.objectweb.asm.MethodVisitor getCodeVisitor()>();

        $i7 = r3.<org.objectweb.asm.xml.ASMContentHandler$Opcode: int opcode>;

        $r28 = interfaceinvoke r6.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("desc");

        virtualinvoke $r27.<org.objectweb.asm.MethodVisitor: void visitTypeInsn(int,java.lang.String)>($i7, $r28);

        goto label13;

     label08:
        $r29 = virtualinvoke r4.<org.objectweb.asm.xml.ASMContentHandler$OpcodesRule: org.objectweb.asm.MethodVisitor getCodeVisitor()>();

        $i8 = r3.<org.objectweb.asm.xml.ASMContentHandler$Opcode: int opcode>;

        $r30 = interfaceinvoke r6.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("var");

        $i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r30);

        virtualinvoke $r29.<org.objectweb.asm.MethodVisitor: void visitVarInsn(int,int)>($i8, $i9);

        goto label13;

     label09:
        $r9 = virtualinvoke r4.<org.objectweb.asm.xml.ASMContentHandler$OpcodesRule: org.objectweb.asm.MethodVisitor getCodeVisitor()>();

        $r10 = interfaceinvoke r6.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("var");

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r10);

        $r11 = interfaceinvoke r6.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("inc");

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        virtualinvoke $r9.<org.objectweb.asm.MethodVisitor: void visitIincInsn(int,int)>($i2, $i3);

        goto label13;

     label10:
        $r12 = virtualinvoke r4.<org.objectweb.asm.xml.ASMContentHandler$OpcodesRule: org.objectweb.asm.MethodVisitor getCodeVisitor()>();

        $r13 = interfaceinvoke r6.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("desc");

        $r14 = interfaceinvoke r6.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("cst");

        $r15 = virtualinvoke r4.<org.objectweb.asm.xml.ASMContentHandler$OpcodesRule: java.lang.Object getValue(java.lang.String,java.lang.String)>($r13, $r14);

        virtualinvoke $r12.<org.objectweb.asm.MethodVisitor: void visitLdcInsn(java.lang.Object)>($r15);

        goto label13;

     label11:
        $r5 = virtualinvoke r4.<org.objectweb.asm.xml.ASMContentHandler$OpcodesRule: org.objectweb.asm.MethodVisitor getCodeVisitor()>();

        $r7 = interfaceinvoke r6.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("desc");

        $r8 = interfaceinvoke r6.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("dims");

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

        virtualinvoke $r5.<org.objectweb.asm.MethodVisitor: void visitMultiANewArrayInsn(java.lang.String,int)>($r7, $i1);

        goto label13;

     label12:
        $r34 = new java.lang.Error;

        specialinvoke $r34.<java.lang.Error: void <init>(java.lang.String)>("Internal error");

        throw $r34;

     label13:
        return;
    }
}
