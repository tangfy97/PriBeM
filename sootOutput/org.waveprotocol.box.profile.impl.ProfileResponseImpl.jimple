public class org.waveprotocol.box.profile.impl.ProfileResponseImpl extends java.lang.Object implements org.waveprotocol.box.profile.ProfileResponse
{
    private final java.util.List profiles;

    public void <init>()
    {
        org.waveprotocol.box.profile.impl.ProfileResponseImpl r0;
        java.util.ArrayList $r1;

        r0 := @this: org.waveprotocol.box.profile.impl.ProfileResponseImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.waveprotocol.box.profile.impl.ProfileResponseImpl: java.util.List profiles> = $r1;

        return;
    }

    public void <init>(org.waveprotocol.box.profile.ProfileResponse)
    {
        org.waveprotocol.box.profile.ProfileResponse r2;
        org.waveprotocol.box.profile.impl.ProfileResponseImpl r0;
        java.util.ArrayList $r1;

        r0 := @this: org.waveprotocol.box.profile.impl.ProfileResponseImpl;

        r2 := @parameter0: org.waveprotocol.box.profile.ProfileResponse;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.waveprotocol.box.profile.impl.ProfileResponseImpl: java.util.List profiles> = $r1;

        virtualinvoke r0.<org.waveprotocol.box.profile.impl.ProfileResponseImpl: void copyFrom(org.waveprotocol.box.profile.ProfileResponse)>(r2);

        return;
    }

    public void copyFrom(org.waveprotocol.box.profile.ProfileResponse)
    {
        org.waveprotocol.box.profile.ProfileResponse r1;
        java.util.Iterator $r3;
        org.waveprotocol.box.profile.impl.ProfileResponseImpl$FetchedProfileImpl $r6;
        org.waveprotocol.box.profile.impl.ProfileResponseImpl r0;
        java.util.List $r2;
        java.lang.Object $r4;
        org.waveprotocol.box.profile.ProfileResponse$FetchedProfile r5;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.profile.impl.ProfileResponseImpl;

        r1 := @parameter0: org.waveprotocol.box.profile.ProfileResponse;

        virtualinvoke r0.<org.waveprotocol.box.profile.impl.ProfileResponseImpl: void clearProfiles()>();

        $r2 = interfaceinvoke r1.<org.waveprotocol.box.profile.ProfileResponse: java.util.List getProfiles()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.waveprotocol.box.profile.ProfileResponse$FetchedProfile) $r4;

        $r6 = new org.waveprotocol.box.profile.impl.ProfileResponseImpl$FetchedProfileImpl;

        specialinvoke $r6.<org.waveprotocol.box.profile.impl.ProfileResponseImpl$FetchedProfileImpl: void <init>(org.waveprotocol.box.profile.ProfileResponse$FetchedProfile)>(r5);

        virtualinvoke r0.<org.waveprotocol.box.profile.impl.ProfileResponseImpl: void addProfiles(org.waveprotocol.box.profile.ProfileResponse$FetchedProfile)>($r6);

        goto label1;

     label2:
        return;
    }

    public java.util.List getProfiles()
    {
        java.util.List $r1, $r2;
        org.waveprotocol.box.profile.impl.ProfileResponseImpl r0;

        r0 := @this: org.waveprotocol.box.profile.impl.ProfileResponseImpl;

        $r1 = r0.<org.waveprotocol.box.profile.impl.ProfileResponseImpl: java.util.List profiles>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public void addAllProfiles(java.util.List)
    {
        java.util.List r0;
        java.util.Iterator $r1;
        org.waveprotocol.box.profile.impl.ProfileResponseImpl r4;
        java.lang.Object $r2;
        org.waveprotocol.box.profile.ProfileResponse$FetchedProfile r3;
        boolean $z0;

        r4 := @this: org.waveprotocol.box.profile.impl.ProfileResponseImpl;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.waveprotocol.box.profile.ProfileResponse$FetchedProfile) $r2;

        virtualinvoke r4.<org.waveprotocol.box.profile.impl.ProfileResponseImpl: void addProfiles(org.waveprotocol.box.profile.ProfileResponse$FetchedProfile)>(r3);

        goto label1;

     label2:
        return;
    }

    public org.waveprotocol.box.profile.impl.ProfileResponseImpl$FetchedProfileImpl getProfiles(int)
    {
        java.util.List $r2;
        org.waveprotocol.box.profile.impl.ProfileResponseImpl$FetchedProfileImpl $r0;
        org.waveprotocol.box.profile.impl.ProfileResponseImpl r1;
        int i0;
        java.lang.Object $r3;
        org.waveprotocol.box.profile.ProfileResponse$FetchedProfile $r4;

        r1 := @this: org.waveprotocol.box.profile.impl.ProfileResponseImpl;

        i0 := @parameter0: int;

        $r0 = new org.waveprotocol.box.profile.impl.ProfileResponseImpl$FetchedProfileImpl;

        $r2 = r1.<org.waveprotocol.box.profile.impl.ProfileResponseImpl: java.util.List profiles>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r4 = (org.waveprotocol.box.profile.ProfileResponse$FetchedProfile) $r3;

        specialinvoke $r0.<org.waveprotocol.box.profile.impl.ProfileResponseImpl$FetchedProfileImpl: void <init>(org.waveprotocol.box.profile.ProfileResponse$FetchedProfile)>($r4);

        return $r0;
    }

    public void setProfiles(int, org.waveprotocol.box.profile.ProfileResponse$FetchedProfile)
    {
        java.util.List $r3;
        org.waveprotocol.box.profile.impl.ProfileResponseImpl$FetchedProfileImpl $r1;
        org.waveprotocol.box.profile.impl.ProfileResponseImpl r0;
        int i0;
        org.waveprotocol.box.profile.ProfileResponse$FetchedProfile r2;

        r0 := @this: org.waveprotocol.box.profile.impl.ProfileResponseImpl;

        i0 := @parameter0: int;

        r2 := @parameter1: org.waveprotocol.box.profile.ProfileResponse$FetchedProfile;

        $r3 = r0.<org.waveprotocol.box.profile.impl.ProfileResponseImpl: java.util.List profiles>;

        $r1 = new org.waveprotocol.box.profile.impl.ProfileResponseImpl$FetchedProfileImpl;

        specialinvoke $r1.<org.waveprotocol.box.profile.impl.ProfileResponseImpl$FetchedProfileImpl: void <init>(org.waveprotocol.box.profile.ProfileResponse$FetchedProfile)>(r2);

        interfaceinvoke $r3.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, $r1);

        return;
    }

    public int getProfilesSize()
    {
        int $i0;
        java.util.List $r1;
        org.waveprotocol.box.profile.impl.ProfileResponseImpl r0;

        r0 := @this: org.waveprotocol.box.profile.impl.ProfileResponseImpl;

        $r1 = r0.<org.waveprotocol.box.profile.impl.ProfileResponseImpl: java.util.List profiles>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public void addProfiles(org.waveprotocol.box.profile.ProfileResponse$FetchedProfile)
    {
        java.util.List $r3;
        org.waveprotocol.box.profile.impl.ProfileResponseImpl$FetchedProfileImpl $r1;
        org.waveprotocol.box.profile.impl.ProfileResponseImpl r0;
        org.waveprotocol.box.profile.ProfileResponse$FetchedProfile r2;

        r0 := @this: org.waveprotocol.box.profile.impl.ProfileResponseImpl;

        r2 := @parameter0: org.waveprotocol.box.profile.ProfileResponse$FetchedProfile;

        $r3 = r0.<org.waveprotocol.box.profile.impl.ProfileResponseImpl: java.util.List profiles>;

        $r1 = new org.waveprotocol.box.profile.impl.ProfileResponseImpl$FetchedProfileImpl;

        specialinvoke $r1.<org.waveprotocol.box.profile.impl.ProfileResponseImpl$FetchedProfileImpl: void <init>(org.waveprotocol.box.profile.ProfileResponse$FetchedProfile)>(r2);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void clearProfiles()
    {
        java.util.List $r1;
        org.waveprotocol.box.profile.impl.ProfileResponseImpl r0;

        r0 := @this: org.waveprotocol.box.profile.impl.ProfileResponseImpl;

        $r1 = r0.<org.waveprotocol.box.profile.impl.ProfileResponseImpl: java.util.List profiles>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }

    protected void reset()
    {
        java.util.List $r1;
        org.waveprotocol.box.profile.impl.ProfileResponseImpl r0;

        r0 := @this: org.waveprotocol.box.profile.impl.ProfileResponseImpl;

        $r1 = r0.<org.waveprotocol.box.profile.impl.ProfileResponseImpl: java.util.List profiles>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.waveprotocol.box.profile.impl.ProfileResponseImpl r1;
        java.lang.Object r0;
        boolean $z0, $z1, $z2;

        r1 := @this: org.waveprotocol.box.profile.impl.ProfileResponseImpl;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.waveprotocol.box.profile.impl.ProfileResponseImpl;

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r1.<org.waveprotocol.box.profile.impl.ProfileResponseImpl: boolean isEqualTo(java.lang.Object)>(r0);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean isEqualTo(java.lang.Object)
    {
        org.waveprotocol.box.profile.ProfileResponse $r2;
        org.waveprotocol.box.profile.impl.ProfileResponseImpl r1;
        java.lang.Object r0;
        boolean $z0, $z1;

        r1 := @this: org.waveprotocol.box.profile.impl.ProfileResponseImpl;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof org.waveprotocol.box.profile.ProfileResponse;

        if $z0 == 0 goto label2;

        $r2 = (org.waveprotocol.box.profile.ProfileResponse) r0;

        $z1 = staticinvoke <org.waveprotocol.box.profile.ProfileResponseUtil: boolean isEqual(org.waveprotocol.box.profile.ProfileResponse,org.waveprotocol.box.profile.ProfileResponse)>(r1, $r2);

        return $z1;

     label2:
        return 0;
    }

    public int hashCode()
    {
        int $i0;
        org.waveprotocol.box.profile.impl.ProfileResponseImpl r0;

        r0 := @this: org.waveprotocol.box.profile.impl.ProfileResponseImpl;

        $i0 = staticinvoke <org.waveprotocol.box.profile.ProfileResponseUtil: int getHashCode(org.waveprotocol.box.profile.ProfileResponse)>(r0);

        return $i0;
    }

    public volatile org.waveprotocol.box.profile.ProfileResponse$FetchedProfile getProfiles(int)
    {
        int i0;
        org.waveprotocol.box.profile.impl.ProfileResponseImpl$FetchedProfileImpl $r1;
        org.waveprotocol.box.profile.impl.ProfileResponseImpl r0;

        r0 := @this: org.waveprotocol.box.profile.impl.ProfileResponseImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.profile.impl.ProfileResponseImpl: org.waveprotocol.box.profile.impl.ProfileResponseImpl$FetchedProfileImpl getProfiles(int)>(i0);

        return $r1;
    }
}
