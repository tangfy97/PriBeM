public class bsh.Variable extends java.lang.Object implements java.io.Serializable
{
    static final int DECLARATION;
    static final int ASSIGNMENT;
    java.lang.String name;
    java.lang.Class type;
    java.lang.String typeDescriptor;
    java.lang.Object value;
    bsh.Modifiers modifiers;
    bsh.LHS lhs;

    void <init>(java.lang.String, java.lang.Class, bsh.LHS)
    {
        java.lang.Class r3;
        java.lang.String r1;
        bsh.Variable r0;
        bsh.LHS r2;

        r0 := @this: bsh.Variable;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Class;

        r2 := @parameter2: bsh.LHS;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<bsh.Variable: java.lang.Class type> = null;

        r0.<bsh.Variable: java.lang.String name> = r1;

        r0.<bsh.Variable: bsh.LHS lhs> = r2;

        r0.<bsh.Variable: java.lang.Class type> = r3;

        return;
    }

    void <init>(java.lang.String, java.lang.Object, bsh.Modifiers) throws bsh.UtilEvalError
    {
        bsh.Modifiers r3;
        java.lang.Object r2;
        java.lang.String r1;
        bsh.Variable r0;

        r0 := @this: bsh.Variable;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: bsh.Modifiers;

        specialinvoke r0.<bsh.Variable: void <init>(java.lang.String,java.lang.Class,java.lang.Object,bsh.Modifiers)>(r1, null, r2, r3);

        return;
    }

    void <init>(java.lang.String, java.lang.String, java.lang.Object, bsh.Modifiers) throws bsh.UtilEvalError
    {
        bsh.Modifiers r3;
        java.lang.Object r2;
        java.lang.String r1, r4;
        bsh.Variable r0;

        r0 := @this: bsh.Variable;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: bsh.Modifiers;

        specialinvoke r0.<bsh.Variable: void <init>(java.lang.String,java.lang.Class,java.lang.Object,bsh.Modifiers)>(r1, null, r2, r3);

        r0.<bsh.Variable: java.lang.String typeDescriptor> = r4;

        return;
    }

    void <init>(java.lang.String, java.lang.Class, java.lang.Object, bsh.Modifiers) throws bsh.UtilEvalError
    {
        bsh.Modifiers r3;
        java.lang.Class r2;
        java.lang.Object r4;
        java.lang.String r1;
        bsh.Variable r0;

        r0 := @this: bsh.Variable;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        r4 := @parameter2: java.lang.Object;

        r3 := @parameter3: bsh.Modifiers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<bsh.Variable: java.lang.Class type> = null;

        r0.<bsh.Variable: java.lang.String name> = r1;

        r0.<bsh.Variable: java.lang.Class type> = r2;

        r0.<bsh.Variable: bsh.Modifiers modifiers> = r3;

        virtualinvoke r0.<bsh.Variable: void setValue(java.lang.Object,int)>(r4, 0);

        return;
    }

    public void setValue(java.lang.Object, int) throws bsh.UtilEvalError
    {
        bsh.UtilEvalError $r8;
        bsh.Variable r0;
        bsh.LHS $r1, $r5;
        byte $b1;
        int i0;
        java.lang.Class $r2, $r3, $r6;
        java.lang.Object $r4, $r7, r9;
        boolean $z0;

        r0 := @this: bsh.Variable;

        r9 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<bsh.Variable: boolean hasModifier(java.lang.String)>("final");

        if $z0 == 0 goto label1;

        $r7 = r0.<bsh.Variable: java.lang.Object value>;

        if $r7 == null goto label1;

        $r8 = new bsh.UtilEvalError;

        specialinvoke $r8.<bsh.UtilEvalError: void <init>(java.lang.String)>("Final variable, can\'t re-assign.");

        throw $r8;

     label1:
        if r9 != null goto label2;

        $r6 = r0.<bsh.Variable: java.lang.Class type>;

        r9 = staticinvoke <bsh.Primitive: bsh.Primitive getDefaultValue(java.lang.Class)>($r6);

     label2:
        $r1 = r0.<bsh.Variable: bsh.LHS lhs>;

        if $r1 == null goto label3;

        $r5 = r0.<bsh.Variable: bsh.LHS lhs>;

        virtualinvoke $r5.<bsh.LHS: java.lang.Object assign(java.lang.Object,boolean)>(r9, 0);

        return;

     label3:
        $r2 = r0.<bsh.Variable: java.lang.Class type>;

        if $r2 == null goto label6;

        $r4 = r9;

        $r3 = r0.<bsh.Variable: java.lang.Class type>;

        if i0 != 0 goto label4;

        $b1 = 0;

        goto label5;

     label4:
        $b1 = 1;

     label5:
        r9 = staticinvoke <bsh.Types: java.lang.Object castObject(java.lang.Object,java.lang.Class,int)>($r4, $r3, $b1);

     label6:
        r0.<bsh.Variable: java.lang.Object value> = r9;

        return;
    }

    java.lang.Object getValue() throws bsh.UtilEvalError
    {
        java.lang.Object $r2, $r4;
        bsh.Variable r0;
        bsh.LHS $r1, $r3;

        r0 := @this: bsh.Variable;

        $r1 = r0.<bsh.Variable: bsh.LHS lhs>;

        if $r1 == null goto label1;

        $r3 = r0.<bsh.Variable: bsh.LHS lhs>;

        $r4 = virtualinvoke $r3.<bsh.LHS: java.lang.Object getValue()>();

        return $r4;

     label1:
        $r2 = r0.<bsh.Variable: java.lang.Object value>;

        return $r2;
    }

    public java.lang.Class getType()
    {
        java.lang.Class $r1;
        bsh.Variable r0;

        r0 := @this: bsh.Variable;

        $r1 = r0.<bsh.Variable: java.lang.Class type>;

        return $r1;
    }

    public java.lang.String getTypeDescriptor()
    {
        java.lang.String $r1;
        bsh.Variable r0;

        r0 := @this: bsh.Variable;

        $r1 = r0.<bsh.Variable: java.lang.String typeDescriptor>;

        return $r1;
    }

    public bsh.Modifiers getModifiers()
    {
        bsh.Variable r0;
        bsh.Modifiers $r1;

        r0 := @this: bsh.Variable;

        $r1 = r0.<bsh.Variable: bsh.Modifiers modifiers>;

        return $r1;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        bsh.Variable r0;

        r0 := @this: bsh.Variable;

        $r1 = r0.<bsh.Variable: java.lang.String name>;

        return $r1;
    }

    public boolean hasModifier(java.lang.String)
    {
        bsh.Modifiers $r1, $r3;
        java.lang.String r2;
        bsh.Variable r0;
        boolean $z0, $z1;

        r0 := @this: bsh.Variable;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<bsh.Variable: bsh.Modifiers modifiers>;

        if $r1 == null goto label1;

        $r3 = r0.<bsh.Variable: bsh.Modifiers modifiers>;

        $z0 = virtualinvoke $r3.<bsh.Modifiers: boolean hasModifier(java.lang.String)>(r2);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public java.lang.String toString()
    {
        bsh.Variable r2;
        bsh.LHS $r15;
        java.lang.StringBuffer $r0, $r1, $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14, $r16;
        java.lang.String $r3, $r6, $r17;
        java.lang.Class $r9;
        java.lang.Object $r12;

        r2 := @this: bsh.Variable;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Variable: ");

        $r3 = specialinvoke r2.<java.lang.Object: java.lang.String toString()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r6 = r2.<bsh.Variable: java.lang.String name>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", type:");

        $r9 = r2.<bsh.Variable: java.lang.Class type>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", value:");

        $r12 = r2.<bsh.Variable: java.lang.Object value>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", lhs = ");

        $r15 = r2.<bsh.Variable: bsh.LHS lhs>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r17;
    }

    public static void <clinit>()
    {
        <bsh.Variable: int ASSIGNMENT> = 1;

        <bsh.Variable: int DECLARATION> = 0;

        return;
    }
}
