public class groovy.lang.ExpandoMetaClass$ExpandoMetaProperty extends groovy.lang.GroovyObjectSupport
{
    protected java.lang.String propertyName;
    protected boolean isStatic;
    private final groovy.lang.ExpandoMetaClass this$0;

    protected void <init>(groovy.lang.ExpandoMetaClass, java.lang.String)
    {
        groovy.lang.ExpandoMetaClass$ExpandoMetaProperty r0;
        java.lang.String r2;
        groovy.lang.ExpandoMetaClass r1;

        r0 := @this: groovy.lang.ExpandoMetaClass$ExpandoMetaProperty;

        r1 := @parameter0: groovy.lang.ExpandoMetaClass;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<groovy.lang.ExpandoMetaClass$ExpandoMetaProperty: void <init>(groovy.lang.ExpandoMetaClass,java.lang.String,boolean)>(r1, r2, 0);

        return;
    }

    protected void <init>(groovy.lang.ExpandoMetaClass, java.lang.String, boolean)
    {
        groovy.lang.ExpandoMetaClass r1;
        groovy.lang.ExpandoMetaClass$ExpandoMetaProperty r0;
        java.lang.String r2;
        boolean z0;

        r0 := @this: groovy.lang.ExpandoMetaClass$ExpandoMetaProperty;

        r1 := @parameter0: groovy.lang.ExpandoMetaClass;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r0.<groovy.lang.ExpandoMetaClass$ExpandoMetaProperty: groovy.lang.ExpandoMetaClass this$0> = r1;

        specialinvoke r0.<groovy.lang.GroovyObjectSupport: void <init>()>();

        r0.<groovy.lang.ExpandoMetaClass$ExpandoMetaProperty: java.lang.String propertyName> = r2;

        r0.<groovy.lang.ExpandoMetaClass$ExpandoMetaProperty: boolean isStatic> = z0;

        return;
    }

    public java.lang.String getPropertyName()
    {
        groovy.lang.ExpandoMetaClass$ExpandoMetaProperty r0;
        java.lang.String $r1;

        r0 := @this: groovy.lang.ExpandoMetaClass$ExpandoMetaProperty;

        $r1 = r0.<groovy.lang.ExpandoMetaClass$ExpandoMetaProperty: java.lang.String propertyName>;

        return $r1;
    }

    public boolean isStatic()
    {
        groovy.lang.ExpandoMetaClass$ExpandoMetaProperty r0;
        boolean $z0;

        r0 := @this: groovy.lang.ExpandoMetaClass$ExpandoMetaProperty;

        $z0 = r0.<groovy.lang.ExpandoMetaClass$ExpandoMetaProperty: boolean isStatic>;

        return $z0;
    }

    public java.lang.Object leftShift(java.lang.Object)
    {
        java.lang.Object r1;
        groovy.lang.ExpandoMetaClass$ExpandoMetaProperty r0;

        r0 := @this: groovy.lang.ExpandoMetaClass$ExpandoMetaProperty;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<groovy.lang.ExpandoMetaClass$ExpandoMetaProperty: void registerIfClosure(java.lang.Object,boolean)>(r1, 0);

        return r0;
    }

    private void registerIfClosure(java.lang.Object, boolean)
    {
        groovy.lang.Closure r1;
        java.lang.reflect.Method $r7, $r23;
        boolean $z0, $z1, z2;
        groovy.lang.GroovyRuntimeException $r10, $r26;
        groovy.lang.ExpandoMetaClass $r4, $r9, $r20, $r25;
        java.lang.StringBuffer $r11, $r12, $r14, $r15, $r17, $r18, $r27, $r28, $r30, $r31, $r33, $r34;
        java.lang.String $r5, $r8, $r13, $r16, $r19, $r21, $r24, $r29, $r32, $r35;
        java.lang.Class[] $r2, r36;
        java.lang.Object r0;
        java.lang.Class $r6, $r22;
        groovy.lang.ExpandoMetaClass$ExpandoMetaProperty r3;

        r3 := @this: groovy.lang.ExpandoMetaClass$ExpandoMetaProperty;

        r0 := @parameter0: java.lang.Object;

        z2 := @parameter1: boolean;

        $z0 = r0 instanceof groovy.lang.Closure;

        if $z0 == 0 goto label5;

        r1 = (groovy.lang.Closure) r0;

        $r2 = virtualinvoke r1.<groovy.lang.Closure: java.lang.Class[] getParameterTypes()>();

        r36 = $r2;

        if $r2 != null goto label1;

        r36 = staticinvoke <groovy.lang.ExpandoMetaClass: java.lang.Class[] access$300()>();

     label1:
        $z1 = r3.<groovy.lang.ExpandoMetaClass$ExpandoMetaProperty: boolean isStatic>;

        if $z1 != 0 goto label3;

        $r20 = r3.<groovy.lang.ExpandoMetaClass$ExpandoMetaProperty: groovy.lang.ExpandoMetaClass this$0>;

        $r22 = $r20.<groovy.lang.ExpandoMetaClass: java.lang.Class theClass>;

        $r21 = r3.<groovy.lang.ExpandoMetaClass$ExpandoMetaProperty: java.lang.String propertyName>;

        $r23 = specialinvoke r3.<groovy.lang.ExpandoMetaClass$ExpandoMetaProperty: java.lang.reflect.Method checkIfMethodExists(java.lang.Class,java.lang.String,java.lang.Class[],boolean)>($r22, $r21, r36, 0);

        if $r23 == null goto label2;

        if z2 != 0 goto label2;

        $r26 = new groovy.lang.GroovyRuntimeException;

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot add new method [");

        $r29 = r3.<groovy.lang.ExpandoMetaClass$ExpandoMetaProperty: java.lang.String propertyName>;

        $r30 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] for arguments [");

        $r32 = staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: java.lang.String inspect(java.lang.Object)>(r36);

        $r33 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]. It already exists!");

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r26.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String)>($r35);

        throw $r26;

     label2:
        $r25 = r3.<groovy.lang.ExpandoMetaClass$ExpandoMetaProperty: groovy.lang.ExpandoMetaClass this$0>;

        $r24 = r3.<groovy.lang.ExpandoMetaClass$ExpandoMetaProperty: java.lang.String propertyName>;

        virtualinvoke $r25.<groovy.lang.ExpandoMetaClass: void registerInstanceMethod(java.lang.String,groovy.lang.Closure)>($r24, r1);

        goto label5;

     label3:
        $r4 = r3.<groovy.lang.ExpandoMetaClass$ExpandoMetaProperty: groovy.lang.ExpandoMetaClass this$0>;

        $r6 = $r4.<groovy.lang.ExpandoMetaClass: java.lang.Class theClass>;

        $r5 = r3.<groovy.lang.ExpandoMetaClass$ExpandoMetaProperty: java.lang.String propertyName>;

        $r7 = specialinvoke r3.<groovy.lang.ExpandoMetaClass$ExpandoMetaProperty: java.lang.reflect.Method checkIfMethodExists(java.lang.Class,java.lang.String,java.lang.Class[],boolean)>($r6, $r5, r36, 1);

        if $r7 == null goto label4;

        if z2 != 0 goto label4;

        $r10 = new groovy.lang.GroovyRuntimeException;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot add new static method [");

        $r13 = r3.<groovy.lang.ExpandoMetaClass$ExpandoMetaProperty: java.lang.String propertyName>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] for arguments [");

        $r16 = staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: java.lang.String inspect(java.lang.Object)>(r36);

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]. It already exists!");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r10.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String)>($r19);

        throw $r10;

     label4:
        $r9 = r3.<groovy.lang.ExpandoMetaClass$ExpandoMetaProperty: groovy.lang.ExpandoMetaClass this$0>;

        $r8 = r3.<groovy.lang.ExpandoMetaClass$ExpandoMetaProperty: java.lang.String propertyName>;

        virtualinvoke $r9.<groovy.lang.ExpandoMetaClass: void registerStaticMethod(java.lang.String,groovy.lang.Closure)>($r8, r1);

     label5:
        return;
    }

    private java.lang.reflect.Method checkIfMethodExists(java.lang.Class, java.lang.String, java.lang.Class[], boolean)
    {
        java.lang.reflect.Method[] $r1;
        int $i0, $i1, i2;
        java.lang.String $r3, r4;
        java.lang.reflect.Method $r2, $r5, $r7, r10;
        boolean $z0, $z1, z2, $z3;
        java.lang.Class[] r6, $r8;
        java.lang.Class r0;
        groovy.lang.ExpandoMetaClass$ExpandoMetaProperty r9;

        r9 := @this: groovy.lang.ExpandoMetaClass$ExpandoMetaProperty;

        r0 := @parameter0: java.lang.Class;

        r4 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.Class[];

        z2 := @parameter3: boolean;

        r10 = null;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        i2 = 0;

     label1:
        $i0 = lengthof $r1;

        if i2 >= $i0 goto label3;

        $r2 = $r1[i2];

        $r3 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label2;

        $r5 = $r1[i2];

        $i1 = virtualinvoke $r5.<java.lang.reflect.Method: int getModifiers()>();

        $z1 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i1);

        if $z1 != z2 goto label2;

        $r7 = $r1[i2];

        $r8 = virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $z3 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: boolean parametersAreCompatible(java.lang.Class[],java.lang.Class[])>(r6, $r8);

        if $z3 == 0 goto label2;

        r10 = $r1[i2];

        goto label3;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return r10;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        groovy.lang.ExpandoMetaClass$ExpandoMetaProperty r0;
        java.lang.String r1;

        r0 := @this: groovy.lang.ExpandoMetaClass$ExpandoMetaProperty;

        r1 := @parameter0: java.lang.String;

        r0.<groovy.lang.ExpandoMetaClass$ExpandoMetaProperty: java.lang.String propertyName> = r1;

        return r0;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2;
        groovy.lang.ExpandoMetaClass$ExpandoMetaProperty r0;
        java.lang.String r1;

        r0 := @this: groovy.lang.ExpandoMetaClass$ExpandoMetaProperty;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r0.<groovy.lang.ExpandoMetaClass$ExpandoMetaProperty: java.lang.String propertyName> = r1;

        specialinvoke r0.<groovy.lang.ExpandoMetaClass$ExpandoMetaProperty: void registerIfClosure(java.lang.Object,boolean)>(r2, 1);

        return;
    }
}
