public class org.springframework.remoting.jaxrpc.JaxRpcPortProxyFactoryBean extends org.springframework.remoting.jaxrpc.JaxRpcPortClientInterceptor implements org.springframework.beans.factory.FactoryBean, org.springframework.beans.factory.BeanClassLoaderAware
{
    private java.lang.ClassLoader beanClassLoader;
    private java.lang.Object serviceProxy;

    public void <init>()
    {
        java.lang.ClassLoader $r1;
        org.springframework.remoting.jaxrpc.JaxRpcPortProxyFactoryBean r0;

        r0 := @this: org.springframework.remoting.jaxrpc.JaxRpcPortProxyFactoryBean;

        specialinvoke r0.<org.springframework.remoting.jaxrpc.JaxRpcPortClientInterceptor: void <init>()>();

        $r1 = staticinvoke <org.springframework.util.ClassUtils: java.lang.ClassLoader getDefaultClassLoader()>();

        r0.<org.springframework.remoting.jaxrpc.JaxRpcPortProxyFactoryBean: java.lang.ClassLoader beanClassLoader> = $r1;

        return;
    }

    public void setBeanClassLoader(java.lang.ClassLoader)
    {
        java.lang.ClassLoader r1;
        org.springframework.remoting.jaxrpc.JaxRpcPortProxyFactoryBean r0;

        r0 := @this: org.springframework.remoting.jaxrpc.JaxRpcPortProxyFactoryBean;

        r1 := @parameter0: java.lang.ClassLoader;

        r0.<org.springframework.remoting.jaxrpc.JaxRpcPortProxyFactoryBean: java.lang.ClassLoader beanClassLoader> = r1;

        return;
    }

    public void afterPropertiesSet()
    {
        java.lang.IllegalArgumentException $r7;
        org.springframework.remoting.jaxrpc.JaxRpcPortProxyFactoryBean r0;
        org.springframework.aop.framework.ProxyFactory $r2;
        java.lang.Class $r1, $r3, $r6, $r8;
        java.lang.Object $r5;
        java.lang.ClassLoader $r4;

        r0 := @this: org.springframework.remoting.jaxrpc.JaxRpcPortProxyFactoryBean;

        $r1 = virtualinvoke r0.<org.springframework.remoting.jaxrpc.JaxRpcPortProxyFactoryBean: java.lang.Class getServiceInterface()>();

        if $r1 != null goto label2;

        $r6 = virtualinvoke r0.<org.springframework.remoting.jaxrpc.JaxRpcPortProxyFactoryBean: java.lang.Class getPortInterface()>();

        if $r6 == null goto label1;

        $r8 = virtualinvoke r0.<org.springframework.remoting.jaxrpc.JaxRpcPortProxyFactoryBean: java.lang.Class getPortInterface()>();

        virtualinvoke r0.<org.springframework.remoting.jaxrpc.JaxRpcPortProxyFactoryBean: void setServiceInterface(java.lang.Class)>($r8);

        goto label2;

     label1:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Property \'serviceInterface\' is required");

        throw $r7;

     label2:
        specialinvoke r0.<org.springframework.remoting.jaxrpc.JaxRpcPortClientInterceptor: void afterPropertiesSet()>();

        $r2 = new org.springframework.aop.framework.ProxyFactory;

        $r3 = virtualinvoke r0.<org.springframework.remoting.jaxrpc.JaxRpcPortProxyFactoryBean: java.lang.Class getServiceInterface()>();

        specialinvoke $r2.<org.springframework.aop.framework.ProxyFactory: void <init>(java.lang.Class,org.aopalliance.intercept.Interceptor)>($r3, r0);

        $r4 = r0.<org.springframework.remoting.jaxrpc.JaxRpcPortProxyFactoryBean: java.lang.ClassLoader beanClassLoader>;

        $r5 = virtualinvoke $r2.<org.springframework.aop.framework.ProxyFactory: java.lang.Object getProxy(java.lang.ClassLoader)>($r4);

        r0.<org.springframework.remoting.jaxrpc.JaxRpcPortProxyFactoryBean: java.lang.Object serviceProxy> = $r5;

        return;
    }

    public java.lang.Object getObject()
    {
        java.lang.Object $r1;
        org.springframework.remoting.jaxrpc.JaxRpcPortProxyFactoryBean r0;

        r0 := @this: org.springframework.remoting.jaxrpc.JaxRpcPortProxyFactoryBean;

        $r1 = r0.<org.springframework.remoting.jaxrpc.JaxRpcPortProxyFactoryBean: java.lang.Object serviceProxy>;

        return $r1;
    }

    public java.lang.Class getObjectType()
    {
        java.lang.Class $r1;
        org.springframework.remoting.jaxrpc.JaxRpcPortProxyFactoryBean r0;

        r0 := @this: org.springframework.remoting.jaxrpc.JaxRpcPortProxyFactoryBean;

        $r1 = virtualinvoke r0.<org.springframework.remoting.jaxrpc.JaxRpcPortProxyFactoryBean: java.lang.Class getServiceInterface()>();

        return $r1;
    }

    public boolean isSingleton()
    {
        org.springframework.remoting.jaxrpc.JaxRpcPortProxyFactoryBean r0;

        r0 := @this: org.springframework.remoting.jaxrpc.JaxRpcPortProxyFactoryBean;

        return 1;
    }
}
