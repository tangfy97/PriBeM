public final class ucar.nc2.stream.NcStreamProto$Data$Builder extends com.google.protobuf.GeneratedMessage$Builder
{
    private ucar.nc2.stream.NcStreamProto$Data result;

    private void <init>()
    {
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        specialinvoke r0.<com.google.protobuf.GeneratedMessage$Builder: void <init>()>();

        return;
    }

    private static ucar.nc2.stream.NcStreamProto$Data$Builder create()
    {
        ucar.nc2.stream.NcStreamProto$Data $r1;
        ucar.nc2.stream.NcStreamProto$Data$Builder $r0;

        $r0 = new ucar.nc2.stream.NcStreamProto$Data$Builder;

        specialinvoke $r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: void <init>()>();

        $r1 = new ucar.nc2.stream.NcStreamProto$Data;

        specialinvoke $r1.<ucar.nc2.stream.NcStreamProto$Data: void <init>(ucar.nc2.stream.NcStreamProto$1)>(null);

        $r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result> = $r1;

        return $r0;
    }

    protected ucar.nc2.stream.NcStreamProto$Data internalGetResult()
    {
        ucar.nc2.stream.NcStreamProto$Data $r1;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        return $r1;
    }

    public ucar.nc2.stream.NcStreamProto$Data$Builder clear()
    {
        ucar.nc2.stream.NcStreamProto$Data $r1, $r2;
        java.lang.IllegalStateException $r3;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot call clear() after build().");

        throw $r3;

     label1:
        $r2 = new ucar.nc2.stream.NcStreamProto$Data;

        specialinvoke $r2.<ucar.nc2.stream.NcStreamProto$Data: void <init>(ucar.nc2.stream.NcStreamProto$1)>(null);

        r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result> = $r2;

        return r0;
    }

    public ucar.nc2.stream.NcStreamProto$Data$Builder clone()
    {
        ucar.nc2.stream.NcStreamProto$Data $r2;
        ucar.nc2.stream.NcStreamProto$Data$Builder $r0, r1, $r3;

        r1 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r0 = staticinvoke <ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data$Builder create()>();

        $r2 = r1.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        $r3 = virtualinvoke $r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data$Builder mergeFrom(ucar.nc2.stream.NcStreamProto$Data)>($r2);

        return $r3;
    }

    public com.google.protobuf.Descriptors$Descriptor getDescriptorForType()
    {
        com.google.protobuf.Descriptors$Descriptor $r0;
        ucar.nc2.stream.NcStreamProto$Data$Builder r1;

        r1 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r0 = staticinvoke <ucar.nc2.stream.NcStreamProto$Data: com.google.protobuf.Descriptors$Descriptor getDescriptor()>();

        return $r0;
    }

    public ucar.nc2.stream.NcStreamProto$Data getDefaultInstanceForType()
    {
        ucar.nc2.stream.NcStreamProto$Data $r0;
        ucar.nc2.stream.NcStreamProto$Data$Builder r1;

        r1 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r0 = staticinvoke <ucar.nc2.stream.NcStreamProto$Data: ucar.nc2.stream.NcStreamProto$Data getDefaultInstance()>();

        return $r0;
    }

    public boolean isInitialized()
    {
        ucar.nc2.stream.NcStreamProto$Data $r1;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;
        boolean $z0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        $z0 = virtualinvoke $r1.<ucar.nc2.stream.NcStreamProto$Data: boolean isInitialized()>();

        return $z0;
    }

    public ucar.nc2.stream.NcStreamProto$Data build()
    {
        java.lang.Throwable $r6;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;
        ucar.nc2.stream.NcStreamProto$Data $r1, $r2, $r3;
        com.google.protobuf.UninitializedMessageException $r4;
        com.google.protobuf.Message $r5;
        boolean $z0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: boolean isInitialized()>();

        if $z0 != 0 goto label1;

        $r3 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        $r5 = (com.google.protobuf.Message) $r3;

        $r4 = staticinvoke <ucar.nc2.stream.NcStreamProto$Data$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.Message)>($r5);

        $r6 = (java.lang.Throwable) $r4;

        throw $r6;

     label1:
        $r2 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data buildPartial()>();

        return $r2;
    }

    private ucar.nc2.stream.NcStreamProto$Data buildParsed() throws com.google.protobuf.InvalidProtocolBufferException
    {
        java.lang.Throwable $r6;
        com.google.protobuf.InvalidProtocolBufferException $r4;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;
        ucar.nc2.stream.NcStreamProto$Data $r1, $r2;
        com.google.protobuf.UninitializedMessageException $r3;
        com.google.protobuf.Message $r5;
        boolean $z0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $z0 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: boolean isInitialized()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        $r5 = (com.google.protobuf.Message) $r2;

        $r3 = staticinvoke <ucar.nc2.stream.NcStreamProto$Data$Builder: com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.Message)>($r5);

        $r4 = virtualinvoke $r3.<com.google.protobuf.UninitializedMessageException: com.google.protobuf.InvalidProtocolBufferException asInvalidProtocolBufferException()>();

        $r6 = (java.lang.Throwable) $r4;

        throw $r6;

     label1:
        $r1 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data buildPartial()>();

        return $r1;
    }

    public ucar.nc2.stream.NcStreamProto$Data buildPartial()
    {
        ucar.nc2.stream.NcStreamProto$Data $r1, r2;
        java.lang.IllegalStateException $r3;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("build() has already been called on this Builder.");

        throw $r3;

     label1:
        r2 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result> = null;

        return r2;
    }

    public ucar.nc2.stream.NcStreamProto$Data$Builder mergeFrom(com.google.protobuf.Message)
    {
        ucar.nc2.stream.NcStreamProto$Data $r2;
        ucar.nc2.stream.NcStreamProto$Data$Builder r1, $r3;
        com.google.protobuf.Message r0;
        boolean $z0;

        r1 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        r0 := @parameter0: com.google.protobuf.Message;

        $z0 = r0 instanceof ucar.nc2.stream.NcStreamProto$Data;

        if $z0 == 0 goto label1;

        $r2 = (ucar.nc2.stream.NcStreamProto$Data) r0;

        $r3 = virtualinvoke r1.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data$Builder mergeFrom(ucar.nc2.stream.NcStreamProto$Data)>($r2);

        return $r3;

     label1:
        specialinvoke r1.<com.google.protobuf.GeneratedMessage$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)>(r0);

        return r1;
    }

    public ucar.nc2.stream.NcStreamProto$Data$Builder mergeFrom(ucar.nc2.stream.NcStreamProto$Data)
    {
        ucar.nc2.stream.NcStreamProto$Data$Builder r2;
        ucar.nc2.stream.NcStreamProto$Data r0, $r1;
        int $i0, $i1;
        java.lang.String $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.google.protobuf.UnknownFieldSet $r3;
        ucar.nc2.stream.NcStreamProto$DataType $r6;
        ucar.nc2.stream.NcStreamProto$Section $r5;
        ucar.nc2.stream.NcStreamProto$Compress $r4;

        r2 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        r0 := @parameter0: ucar.nc2.stream.NcStreamProto$Data;

        $r1 = staticinvoke <ucar.nc2.stream.NcStreamProto$Data: ucar.nc2.stream.NcStreamProto$Data getDefaultInstance()>();

        if r0 != $r1 goto label1;

        return r2;

     label1:
        $z0 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data: boolean hasVarName()>();

        if $z0 == 0 goto label2;

        $r7 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data: java.lang.String getVarName()>();

        virtualinvoke r2.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data$Builder setVarName(java.lang.String)>($r7);

     label2:
        $z1 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data: boolean hasDataType()>();

        if $z1 == 0 goto label3;

        $r6 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data: ucar.nc2.stream.NcStreamProto$DataType getDataType()>();

        virtualinvoke r2.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data$Builder setDataType(ucar.nc2.stream.NcStreamProto$DataType)>($r6);

     label3:
        $z2 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data: boolean hasSection()>();

        if $z2 == 0 goto label4;

        $r5 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data: ucar.nc2.stream.NcStreamProto$Section getSection()>();

        virtualinvoke r2.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data$Builder mergeSection(ucar.nc2.stream.NcStreamProto$Section)>($r5);

     label4:
        $z3 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data: boolean hasBigend()>();

        if $z3 == 0 goto label5;

        $z7 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data: boolean getBigend()>();

        virtualinvoke r2.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data$Builder setBigend(boolean)>($z7);

     label5:
        $z4 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data: boolean hasVersion()>();

        if $z4 == 0 goto label6;

        $i1 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data: int getVersion()>();

        virtualinvoke r2.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data$Builder setVersion(int)>($i1);

     label6:
        $z5 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data: boolean hasCompress()>();

        if $z5 == 0 goto label7;

        $r4 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data: ucar.nc2.stream.NcStreamProto$Compress getCompress()>();

        virtualinvoke r2.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data$Builder setCompress(ucar.nc2.stream.NcStreamProto$Compress)>($r4);

     label7:
        $z6 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data: boolean hasCrc32()>();

        if $z6 == 0 goto label8;

        $i0 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data: int getCrc32()>();

        virtualinvoke r2.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data$Builder setCrc32(int)>($i0);

     label8:
        $r3 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data: com.google.protobuf.UnknownFieldSet getUnknownFields()>();

        virtualinvoke r2.<ucar.nc2.stream.NcStreamProto$Data$Builder: com.google.protobuf.GeneratedMessage$Builder mergeUnknownFields(com.google.protobuf.UnknownFieldSet)>($r3);

        return r2;
    }

    public ucar.nc2.stream.NcStreamProto$Data$Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite) throws java.io.IOException
    {
        com.google.protobuf.UnknownFieldSet$Builder $r2;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;
        ucar.nc2.stream.NcStreamProto$Section$Builder $r5;
        com.google.protobuf.ExtensionRegistryLite r6;
        com.google.protobuf.MessageLite$Builder $r13;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r10;
        boolean $z0, $z1, $z2;
        com.google.protobuf.UnknownFieldSet $r1, $r11, $r12;
        ucar.nc2.stream.NcStreamProto$DataType $r9;
        ucar.nc2.stream.NcStreamProto$Section $r7, $r8;
        ucar.nc2.stream.NcStreamProto$Compress $r4;
        com.google.protobuf.CodedInputStream r3;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        r3 := @parameter0: com.google.protobuf.CodedInputStream;

        r6 := @parameter1: com.google.protobuf.ExtensionRegistryLite;

        $r1 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: com.google.protobuf.UnknownFieldSet getUnknownFields()>();

        $r2 = staticinvoke <com.google.protobuf.UnknownFieldSet: com.google.protobuf.UnknownFieldSet$Builder newBuilder(com.google.protobuf.UnknownFieldSet)>($r1);

     label01:
        $i0 = virtualinvoke r3.<com.google.protobuf.CodedInputStream: int readTag()>();

        lookupswitch($i0)
        {
            case 0: goto label02;
            case 10: goto label04;
            case 16: goto label05;
            case 26: goto label07;
            case 32: goto label09;
            case 40: goto label10;
            case 48: goto label11;
            case 61: goto label13;
            default: goto label03;
        };

     label02:
        $r11 = virtualinvoke $r2.<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>();

        virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: com.google.protobuf.GeneratedMessage$Builder setUnknownFields(com.google.protobuf.UnknownFieldSet)>($r11);

        return r0;

     label03:
        $z2 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.UnknownFieldSet$Builder,com.google.protobuf.ExtensionRegistryLite,int)>(r3, $r2, r6, $i0);

        if $z2 != 0 goto label14;

        $r12 = virtualinvoke $r2.<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet build()>();

        virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: com.google.protobuf.GeneratedMessage$Builder setUnknownFields(com.google.protobuf.UnknownFieldSet)>($r12);

        return r0;

     label04:
        $r10 = virtualinvoke r3.<com.google.protobuf.CodedInputStream: java.lang.String readString()>();

        virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data$Builder setVarName(java.lang.String)>($r10);

        goto label14;

     label05:
        $i4 = virtualinvoke r3.<com.google.protobuf.CodedInputStream: int readEnum()>();

        $r9 = staticinvoke <ucar.nc2.stream.NcStreamProto$DataType: ucar.nc2.stream.NcStreamProto$DataType valueOf(int)>($i4);

        if $r9 != null goto label06;

        virtualinvoke $r2.<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet$Builder mergeVarintField(int,int)>(2, $i4);

        goto label14;

     label06:
        virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data$Builder setDataType(ucar.nc2.stream.NcStreamProto$DataType)>($r9);

        goto label14;

     label07:
        $r5 = staticinvoke <ucar.nc2.stream.NcStreamProto$Section: ucar.nc2.stream.NcStreamProto$Section$Builder newBuilder()>();

        $z1 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: boolean hasSection()>();

        if $z1 == 0 goto label08;

        $r8 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Section getSection()>();

        virtualinvoke $r5.<ucar.nc2.stream.NcStreamProto$Section$Builder: ucar.nc2.stream.NcStreamProto$Section$Builder mergeFrom(ucar.nc2.stream.NcStreamProto$Section)>($r8);

     label08:
        $r13 = (com.google.protobuf.MessageLite$Builder) $r5;

        virtualinvoke r3.<com.google.protobuf.CodedInputStream: void readMessage(com.google.protobuf.MessageLite$Builder,com.google.protobuf.ExtensionRegistryLite)>($r13, r6);

        $r7 = virtualinvoke $r5.<ucar.nc2.stream.NcStreamProto$Section$Builder: ucar.nc2.stream.NcStreamProto$Section buildPartial()>();

        virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data$Builder setSection(ucar.nc2.stream.NcStreamProto$Section)>($r7);

        goto label14;

     label09:
        $z0 = virtualinvoke r3.<com.google.protobuf.CodedInputStream: boolean readBool()>();

        virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data$Builder setBigend(boolean)>($z0);

        goto label14;

     label10:
        $i3 = virtualinvoke r3.<com.google.protobuf.CodedInputStream: int readUInt32()>();

        virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data$Builder setVersion(int)>($i3);

        goto label14;

     label11:
        $i2 = virtualinvoke r3.<com.google.protobuf.CodedInputStream: int readEnum()>();

        $r4 = staticinvoke <ucar.nc2.stream.NcStreamProto$Compress: ucar.nc2.stream.NcStreamProto$Compress valueOf(int)>($i2);

        if $r4 != null goto label12;

        virtualinvoke $r2.<com.google.protobuf.UnknownFieldSet$Builder: com.google.protobuf.UnknownFieldSet$Builder mergeVarintField(int,int)>(6, $i2);

        goto label14;

     label12:
        virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data$Builder setCompress(ucar.nc2.stream.NcStreamProto$Compress)>($r4);

        goto label14;

     label13:
        $i1 = virtualinvoke r3.<com.google.protobuf.CodedInputStream: int readFixed32()>();

        virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data$Builder setCrc32(int)>($i1);

     label14:
        goto label01;
    }

    public boolean hasVarName()
    {
        ucar.nc2.stream.NcStreamProto$Data $r1;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;
        boolean $z0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        $z0 = virtualinvoke $r1.<ucar.nc2.stream.NcStreamProto$Data: boolean hasVarName()>();

        return $z0;
    }

    public java.lang.String getVarName()
    {
        ucar.nc2.stream.NcStreamProto$Data $r1;
        java.lang.String $r2;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        $r2 = virtualinvoke $r1.<ucar.nc2.stream.NcStreamProto$Data: java.lang.String getVarName()>();

        return $r2;
    }

    public ucar.nc2.stream.NcStreamProto$Data$Builder setVarName(java.lang.String)
    {
        ucar.nc2.stream.NcStreamProto$Data $r2, $r3;
        ucar.nc2.stream.NcStreamProto$Data$Builder r1;
        java.lang.String r0;
        java.lang.NullPointerException $r4;

        r1 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>()>();

        throw $r4;

     label1:
        $r2 = r1.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        staticinvoke <ucar.nc2.stream.NcStreamProto$Data: boolean access$11002(ucar.nc2.stream.NcStreamProto$Data,boolean)>($r2, 1);

        $r3 = r1.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        staticinvoke <ucar.nc2.stream.NcStreamProto$Data: java.lang.String access$11102(ucar.nc2.stream.NcStreamProto$Data,java.lang.String)>($r3, r0);

        return r1;
    }

    public ucar.nc2.stream.NcStreamProto$Data$Builder clearVarName()
    {
        ucar.nc2.stream.NcStreamProto$Data $r1, $r2, $r3;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;
        java.lang.String $r4;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        staticinvoke <ucar.nc2.stream.NcStreamProto$Data: boolean access$11002(ucar.nc2.stream.NcStreamProto$Data,boolean)>($r1, 0);

        $r2 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        $r3 = staticinvoke <ucar.nc2.stream.NcStreamProto$Data: ucar.nc2.stream.NcStreamProto$Data getDefaultInstance()>();

        $r4 = virtualinvoke $r3.<ucar.nc2.stream.NcStreamProto$Data: java.lang.String getVarName()>();

        staticinvoke <ucar.nc2.stream.NcStreamProto$Data: java.lang.String access$11102(ucar.nc2.stream.NcStreamProto$Data,java.lang.String)>($r2, $r4);

        return r0;
    }

    public boolean hasDataType()
    {
        ucar.nc2.stream.NcStreamProto$Data $r1;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;
        boolean $z0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        $z0 = virtualinvoke $r1.<ucar.nc2.stream.NcStreamProto$Data: boolean hasDataType()>();

        return $z0;
    }

    public ucar.nc2.stream.NcStreamProto$DataType getDataType()
    {
        ucar.nc2.stream.NcStreamProto$Data $r1;
        ucar.nc2.stream.NcStreamProto$DataType $r2;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        $r2 = virtualinvoke $r1.<ucar.nc2.stream.NcStreamProto$Data: ucar.nc2.stream.NcStreamProto$DataType getDataType()>();

        return $r2;
    }

    public ucar.nc2.stream.NcStreamProto$Data$Builder setDataType(ucar.nc2.stream.NcStreamProto$DataType)
    {
        ucar.nc2.stream.NcStreamProto$Data $r2, $r3;
        ucar.nc2.stream.NcStreamProto$DataType r0;
        ucar.nc2.stream.NcStreamProto$Data$Builder r1;
        java.lang.NullPointerException $r4;

        r1 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        r0 := @parameter0: ucar.nc2.stream.NcStreamProto$DataType;

        if r0 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>()>();

        throw $r4;

     label1:
        $r2 = r1.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        staticinvoke <ucar.nc2.stream.NcStreamProto$Data: boolean access$11202(ucar.nc2.stream.NcStreamProto$Data,boolean)>($r2, 1);

        $r3 = r1.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        staticinvoke <ucar.nc2.stream.NcStreamProto$Data: ucar.nc2.stream.NcStreamProto$DataType access$11302(ucar.nc2.stream.NcStreamProto$Data,ucar.nc2.stream.NcStreamProto$DataType)>($r3, r0);

        return r1;
    }

    public ucar.nc2.stream.NcStreamProto$Data$Builder clearDataType()
    {
        ucar.nc2.stream.NcStreamProto$Data $r1, $r3;
        ucar.nc2.stream.NcStreamProto$DataType $r2;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        staticinvoke <ucar.nc2.stream.NcStreamProto$Data: boolean access$11202(ucar.nc2.stream.NcStreamProto$Data,boolean)>($r1, 0);

        $r3 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        $r2 = <ucar.nc2.stream.NcStreamProto$DataType: ucar.nc2.stream.NcStreamProto$DataType CHAR>;

        staticinvoke <ucar.nc2.stream.NcStreamProto$Data: ucar.nc2.stream.NcStreamProto$DataType access$11302(ucar.nc2.stream.NcStreamProto$Data,ucar.nc2.stream.NcStreamProto$DataType)>($r3, $r2);

        return r0;
    }

    public boolean hasSection()
    {
        ucar.nc2.stream.NcStreamProto$Data $r1;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;
        boolean $z0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        $z0 = virtualinvoke $r1.<ucar.nc2.stream.NcStreamProto$Data: boolean hasSection()>();

        return $z0;
    }

    public ucar.nc2.stream.NcStreamProto$Section getSection()
    {
        ucar.nc2.stream.NcStreamProto$Data $r1;
        ucar.nc2.stream.NcStreamProto$Section $r2;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        $r2 = virtualinvoke $r1.<ucar.nc2.stream.NcStreamProto$Data: ucar.nc2.stream.NcStreamProto$Section getSection()>();

        return $r2;
    }

    public ucar.nc2.stream.NcStreamProto$Data$Builder setSection(ucar.nc2.stream.NcStreamProto$Section)
    {
        ucar.nc2.stream.NcStreamProto$Data $r2, $r3;
        ucar.nc2.stream.NcStreamProto$Section r0;
        ucar.nc2.stream.NcStreamProto$Data$Builder r1;
        java.lang.NullPointerException $r4;

        r1 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        r0 := @parameter0: ucar.nc2.stream.NcStreamProto$Section;

        if r0 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>()>();

        throw $r4;

     label1:
        $r2 = r1.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        staticinvoke <ucar.nc2.stream.NcStreamProto$Data: boolean access$11402(ucar.nc2.stream.NcStreamProto$Data,boolean)>($r2, 1);

        $r3 = r1.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        staticinvoke <ucar.nc2.stream.NcStreamProto$Data: ucar.nc2.stream.NcStreamProto$Section access$11502(ucar.nc2.stream.NcStreamProto$Data,ucar.nc2.stream.NcStreamProto$Section)>($r3, r0);

        return r1;
    }

    public ucar.nc2.stream.NcStreamProto$Data$Builder setSection(ucar.nc2.stream.NcStreamProto$Section$Builder)
    {
        ucar.nc2.stream.NcStreamProto$Data $r1, $r3;
        ucar.nc2.stream.NcStreamProto$Section$Builder r2;
        ucar.nc2.stream.NcStreamProto$Section $r4;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        r2 := @parameter0: ucar.nc2.stream.NcStreamProto$Section$Builder;

        $r1 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        staticinvoke <ucar.nc2.stream.NcStreamProto$Data: boolean access$11402(ucar.nc2.stream.NcStreamProto$Data,boolean)>($r1, 1);

        $r3 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        $r4 = virtualinvoke r2.<ucar.nc2.stream.NcStreamProto$Section$Builder: ucar.nc2.stream.NcStreamProto$Section build()>();

        staticinvoke <ucar.nc2.stream.NcStreamProto$Data: ucar.nc2.stream.NcStreamProto$Section access$11502(ucar.nc2.stream.NcStreamProto$Data,ucar.nc2.stream.NcStreamProto$Section)>($r3, $r4);

        return r0;
    }

    public ucar.nc2.stream.NcStreamProto$Data$Builder mergeSection(ucar.nc2.stream.NcStreamProto$Section)
    {
        ucar.nc2.stream.NcStreamProto$Section r2, $r5, $r6, $r9, $r12;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;
        ucar.nc2.stream.NcStreamProto$Data $r1, $r3, $r4, $r7, $r8, $r13;
        ucar.nc2.stream.NcStreamProto$Section$Builder $r10, $r11;
        boolean $z0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        r2 := @parameter0: ucar.nc2.stream.NcStreamProto$Section;

        $r1 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        $z0 = virtualinvoke $r1.<ucar.nc2.stream.NcStreamProto$Data: boolean hasSection()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        $r5 = staticinvoke <ucar.nc2.stream.NcStreamProto$Data: ucar.nc2.stream.NcStreamProto$Section access$11500(ucar.nc2.stream.NcStreamProto$Data)>($r4);

        $r6 = staticinvoke <ucar.nc2.stream.NcStreamProto$Section: ucar.nc2.stream.NcStreamProto$Section getDefaultInstance()>();

        if $r5 == $r6 goto label1;

        $r8 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        $r7 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        $r9 = staticinvoke <ucar.nc2.stream.NcStreamProto$Data: ucar.nc2.stream.NcStreamProto$Section access$11500(ucar.nc2.stream.NcStreamProto$Data)>($r7);

        $r10 = staticinvoke <ucar.nc2.stream.NcStreamProto$Section: ucar.nc2.stream.NcStreamProto$Section$Builder newBuilder(ucar.nc2.stream.NcStreamProto$Section)>($r9);

        $r11 = virtualinvoke $r10.<ucar.nc2.stream.NcStreamProto$Section$Builder: ucar.nc2.stream.NcStreamProto$Section$Builder mergeFrom(ucar.nc2.stream.NcStreamProto$Section)>(r2);

        $r12 = virtualinvoke $r11.<ucar.nc2.stream.NcStreamProto$Section$Builder: ucar.nc2.stream.NcStreamProto$Section buildPartial()>();

        staticinvoke <ucar.nc2.stream.NcStreamProto$Data: ucar.nc2.stream.NcStreamProto$Section access$11502(ucar.nc2.stream.NcStreamProto$Data,ucar.nc2.stream.NcStreamProto$Section)>($r8, $r12);

        goto label2;

     label1:
        $r3 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        staticinvoke <ucar.nc2.stream.NcStreamProto$Data: ucar.nc2.stream.NcStreamProto$Section access$11502(ucar.nc2.stream.NcStreamProto$Data,ucar.nc2.stream.NcStreamProto$Section)>($r3, r2);

     label2:
        $r13 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        staticinvoke <ucar.nc2.stream.NcStreamProto$Data: boolean access$11402(ucar.nc2.stream.NcStreamProto$Data,boolean)>($r13, 1);

        return r0;
    }

    public ucar.nc2.stream.NcStreamProto$Data$Builder clearSection()
    {
        ucar.nc2.stream.NcStreamProto$Data $r1, $r2;
        ucar.nc2.stream.NcStreamProto$Section $r3;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        staticinvoke <ucar.nc2.stream.NcStreamProto$Data: boolean access$11402(ucar.nc2.stream.NcStreamProto$Data,boolean)>($r1, 0);

        $r2 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        $r3 = staticinvoke <ucar.nc2.stream.NcStreamProto$Section: ucar.nc2.stream.NcStreamProto$Section getDefaultInstance()>();

        staticinvoke <ucar.nc2.stream.NcStreamProto$Data: ucar.nc2.stream.NcStreamProto$Section access$11502(ucar.nc2.stream.NcStreamProto$Data,ucar.nc2.stream.NcStreamProto$Section)>($r2, $r3);

        return r0;
    }

    public boolean hasBigend()
    {
        ucar.nc2.stream.NcStreamProto$Data $r1;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;
        boolean $z0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        $z0 = virtualinvoke $r1.<ucar.nc2.stream.NcStreamProto$Data: boolean hasBigend()>();

        return $z0;
    }

    public boolean getBigend()
    {
        ucar.nc2.stream.NcStreamProto$Data $r1;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;
        boolean $z0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        $z0 = virtualinvoke $r1.<ucar.nc2.stream.NcStreamProto$Data: boolean getBigend()>();

        return $z0;
    }

    public ucar.nc2.stream.NcStreamProto$Data$Builder setBigend(boolean)
    {
        ucar.nc2.stream.NcStreamProto$Data $r1, $r2;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;
        boolean z0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        z0 := @parameter0: boolean;

        $r1 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        staticinvoke <ucar.nc2.stream.NcStreamProto$Data: boolean access$11602(ucar.nc2.stream.NcStreamProto$Data,boolean)>($r1, 1);

        $r2 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        staticinvoke <ucar.nc2.stream.NcStreamProto$Data: boolean access$11702(ucar.nc2.stream.NcStreamProto$Data,boolean)>($r2, z0);

        return r0;
    }

    public ucar.nc2.stream.NcStreamProto$Data$Builder clearBigend()
    {
        ucar.nc2.stream.NcStreamProto$Data $r1, $r2;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        staticinvoke <ucar.nc2.stream.NcStreamProto$Data: boolean access$11602(ucar.nc2.stream.NcStreamProto$Data,boolean)>($r1, 0);

        $r2 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        staticinvoke <ucar.nc2.stream.NcStreamProto$Data: boolean access$11702(ucar.nc2.stream.NcStreamProto$Data,boolean)>($r2, 1);

        return r0;
    }

    public boolean hasVersion()
    {
        ucar.nc2.stream.NcStreamProto$Data $r1;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;
        boolean $z0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        $z0 = virtualinvoke $r1.<ucar.nc2.stream.NcStreamProto$Data: boolean hasVersion()>();

        return $z0;
    }

    public int getVersion()
    {
        ucar.nc2.stream.NcStreamProto$Data $r1;
        int $i0;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        $i0 = virtualinvoke $r1.<ucar.nc2.stream.NcStreamProto$Data: int getVersion()>();

        return $i0;
    }

    public ucar.nc2.stream.NcStreamProto$Data$Builder setVersion(int)
    {
        ucar.nc2.stream.NcStreamProto$Data $r1, $r2;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;
        int i0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        staticinvoke <ucar.nc2.stream.NcStreamProto$Data: boolean access$11802(ucar.nc2.stream.NcStreamProto$Data,boolean)>($r1, 1);

        $r2 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        staticinvoke <ucar.nc2.stream.NcStreamProto$Data: int access$11902(ucar.nc2.stream.NcStreamProto$Data,int)>($r2, i0);

        return r0;
    }

    public ucar.nc2.stream.NcStreamProto$Data$Builder clearVersion()
    {
        ucar.nc2.stream.NcStreamProto$Data $r1, $r2;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        staticinvoke <ucar.nc2.stream.NcStreamProto$Data: boolean access$11802(ucar.nc2.stream.NcStreamProto$Data,boolean)>($r1, 0);

        $r2 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        staticinvoke <ucar.nc2.stream.NcStreamProto$Data: int access$11902(ucar.nc2.stream.NcStreamProto$Data,int)>($r2, 0);

        return r0;
    }

    public boolean hasCompress()
    {
        ucar.nc2.stream.NcStreamProto$Data $r1;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;
        boolean $z0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        $z0 = virtualinvoke $r1.<ucar.nc2.stream.NcStreamProto$Data: boolean hasCompress()>();

        return $z0;
    }

    public ucar.nc2.stream.NcStreamProto$Compress getCompress()
    {
        ucar.nc2.stream.NcStreamProto$Data $r1;
        ucar.nc2.stream.NcStreamProto$Compress $r2;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        $r2 = virtualinvoke $r1.<ucar.nc2.stream.NcStreamProto$Data: ucar.nc2.stream.NcStreamProto$Compress getCompress()>();

        return $r2;
    }

    public ucar.nc2.stream.NcStreamProto$Data$Builder setCompress(ucar.nc2.stream.NcStreamProto$Compress)
    {
        ucar.nc2.stream.NcStreamProto$Data $r2, $r3;
        ucar.nc2.stream.NcStreamProto$Data$Builder r1;
        ucar.nc2.stream.NcStreamProto$Compress r0;
        java.lang.NullPointerException $r4;

        r1 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        r0 := @parameter0: ucar.nc2.stream.NcStreamProto$Compress;

        if r0 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>()>();

        throw $r4;

     label1:
        $r2 = r1.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        staticinvoke <ucar.nc2.stream.NcStreamProto$Data: boolean access$12002(ucar.nc2.stream.NcStreamProto$Data,boolean)>($r2, 1);

        $r3 = r1.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        staticinvoke <ucar.nc2.stream.NcStreamProto$Data: ucar.nc2.stream.NcStreamProto$Compress access$12102(ucar.nc2.stream.NcStreamProto$Data,ucar.nc2.stream.NcStreamProto$Compress)>($r3, r0);

        return r1;
    }

    public ucar.nc2.stream.NcStreamProto$Data$Builder clearCompress()
    {
        ucar.nc2.stream.NcStreamProto$Data $r1, $r3;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;
        ucar.nc2.stream.NcStreamProto$Compress $r2;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        staticinvoke <ucar.nc2.stream.NcStreamProto$Data: boolean access$12002(ucar.nc2.stream.NcStreamProto$Data,boolean)>($r1, 0);

        $r3 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        $r2 = <ucar.nc2.stream.NcStreamProto$Compress: ucar.nc2.stream.NcStreamProto$Compress NONE>;

        staticinvoke <ucar.nc2.stream.NcStreamProto$Data: ucar.nc2.stream.NcStreamProto$Compress access$12102(ucar.nc2.stream.NcStreamProto$Data,ucar.nc2.stream.NcStreamProto$Compress)>($r3, $r2);

        return r0;
    }

    public boolean hasCrc32()
    {
        ucar.nc2.stream.NcStreamProto$Data $r1;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;
        boolean $z0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        $z0 = virtualinvoke $r1.<ucar.nc2.stream.NcStreamProto$Data: boolean hasCrc32()>();

        return $z0;
    }

    public int getCrc32()
    {
        ucar.nc2.stream.NcStreamProto$Data $r1;
        int $i0;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        $i0 = virtualinvoke $r1.<ucar.nc2.stream.NcStreamProto$Data: int getCrc32()>();

        return $i0;
    }

    public ucar.nc2.stream.NcStreamProto$Data$Builder setCrc32(int)
    {
        ucar.nc2.stream.NcStreamProto$Data $r1, $r2;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;
        int i0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        staticinvoke <ucar.nc2.stream.NcStreamProto$Data: boolean access$12202(ucar.nc2.stream.NcStreamProto$Data,boolean)>($r1, 1);

        $r2 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        staticinvoke <ucar.nc2.stream.NcStreamProto$Data: int access$12302(ucar.nc2.stream.NcStreamProto$Data,int)>($r2, i0);

        return r0;
    }

    public ucar.nc2.stream.NcStreamProto$Data$Builder clearCrc32()
    {
        ucar.nc2.stream.NcStreamProto$Data $r1, $r2;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        staticinvoke <ucar.nc2.stream.NcStreamProto$Data: boolean access$12202(ucar.nc2.stream.NcStreamProto$Data,boolean)>($r1, 0);

        $r2 = r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data result>;

        staticinvoke <ucar.nc2.stream.NcStreamProto$Data: int access$12302(ucar.nc2.stream.NcStreamProto$Data,int)>($r2, 0);

        return r0;
    }

    protected volatile com.google.protobuf.GeneratedMessage internalGetResult()
    {
        ucar.nc2.stream.NcStreamProto$Data $r1;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data internalGetResult()>();

        return $r1;
    }

    public volatile com.google.protobuf.GeneratedMessage$Builder clone()
    {
        ucar.nc2.stream.NcStreamProto$Data$Builder r0, $r1;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data$Builder clone()>();

        return $r1;
    }

    public volatile com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite) throws java.io.IOException
    {
        com.google.protobuf.CodedInputStream r1;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0, $r3;
        com.google.protobuf.ExtensionRegistryLite r2;
        com.google.protobuf.AbstractMessage$Builder $r4;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        r1 := @parameter0: com.google.protobuf.CodedInputStream;

        r2 := @parameter1: com.google.protobuf.ExtensionRegistryLite;

        $r3 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>(r1, r2);

        $r4 = (com.google.protobuf.AbstractMessage$Builder) $r3;

        return $r4;
    }

    public volatile com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.Message)
    {
        ucar.nc2.stream.NcStreamProto$Data$Builder r0, $r2;
        com.google.protobuf.Message r1;
        com.google.protobuf.AbstractMessage$Builder $r3;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        r1 := @parameter0: com.google.protobuf.Message;

        $r2 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data$Builder mergeFrom(com.google.protobuf.Message)>(r1);

        $r3 = (com.google.protobuf.AbstractMessage$Builder) $r2;

        return $r3;
    }

    public volatile com.google.protobuf.AbstractMessage$Builder clear()
    {
        com.google.protobuf.AbstractMessage$Builder $r2;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0, $r1;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data$Builder clear()>();

        $r2 = (com.google.protobuf.AbstractMessage$Builder) $r1;

        return $r2;
    }

    public volatile com.google.protobuf.AbstractMessage$Builder clone()
    {
        com.google.protobuf.AbstractMessage$Builder $r2;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0, $r1;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data$Builder clone()>();

        $r2 = (com.google.protobuf.AbstractMessage$Builder) $r1;

        return $r2;
    }

    public volatile com.google.protobuf.Message getDefaultInstanceForType()
    {
        ucar.nc2.stream.NcStreamProto$Data $r1;
        com.google.protobuf.Message $r2;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data getDefaultInstanceForType()>();

        $r2 = (com.google.protobuf.Message) $r1;

        return $r2;
    }

    public volatile com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite) throws java.io.IOException
    {
        com.google.protobuf.CodedInputStream r1;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0, $r3;
        com.google.protobuf.ExtensionRegistryLite r2;
        com.google.protobuf.Message$Builder $r4;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        r1 := @parameter0: com.google.protobuf.CodedInputStream;

        r2 := @parameter1: com.google.protobuf.ExtensionRegistryLite;

        $r3 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>(r1, r2);

        $r4 = (com.google.protobuf.Message$Builder) $r3;

        return $r4;
    }

    public volatile com.google.protobuf.Message$Builder clone()
    {
        com.google.protobuf.Message$Builder $r2;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0, $r1;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data$Builder clone()>();

        $r2 = (com.google.protobuf.Message$Builder) $r1;

        return $r2;
    }

    public volatile com.google.protobuf.Message buildPartial()
    {
        ucar.nc2.stream.NcStreamProto$Data $r1;
        com.google.protobuf.Message $r2;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data buildPartial()>();

        $r2 = (com.google.protobuf.Message) $r1;

        return $r2;
    }

    public volatile com.google.protobuf.Message build()
    {
        ucar.nc2.stream.NcStreamProto$Data $r1;
        com.google.protobuf.Message $r2;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data build()>();

        $r2 = (com.google.protobuf.Message) $r1;

        return $r2;
    }

    public volatile com.google.protobuf.Message$Builder mergeFrom(com.google.protobuf.Message)
    {
        ucar.nc2.stream.NcStreamProto$Data$Builder r0, $r2;
        com.google.protobuf.Message r1;
        com.google.protobuf.Message$Builder $r3;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        r1 := @parameter0: com.google.protobuf.Message;

        $r2 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data$Builder mergeFrom(com.google.protobuf.Message)>(r1);

        $r3 = (com.google.protobuf.Message$Builder) $r2;

        return $r3;
    }

    public volatile com.google.protobuf.Message$Builder clear()
    {
        com.google.protobuf.Message$Builder $r2;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0, $r1;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data$Builder clear()>();

        $r2 = (com.google.protobuf.Message$Builder) $r1;

        return $r2;
    }

    public volatile com.google.protobuf.MessageLite getDefaultInstanceForType()
    {
        ucar.nc2.stream.NcStreamProto$Data $r1;
        com.google.protobuf.MessageLite $r2;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data getDefaultInstanceForType()>();

        $r2 = (com.google.protobuf.MessageLite) $r1;

        return $r2;
    }

    public volatile com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite) throws java.io.IOException
    {
        com.google.protobuf.CodedInputStream r1;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0, $r3;
        com.google.protobuf.ExtensionRegistryLite r2;
        com.google.protobuf.MessageLite$Builder $r4;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        r1 := @parameter0: com.google.protobuf.CodedInputStream;

        r2 := @parameter1: com.google.protobuf.ExtensionRegistryLite;

        $r3 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>(r1, r2);

        $r4 = (com.google.protobuf.MessageLite$Builder) $r3;

        return $r4;
    }

    public volatile com.google.protobuf.MessageLite$Builder clone()
    {
        ucar.nc2.stream.NcStreamProto$Data$Builder r0, $r1;
        com.google.protobuf.MessageLite$Builder $r2;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data$Builder clone()>();

        $r2 = (com.google.protobuf.MessageLite$Builder) $r1;

        return $r2;
    }

    public volatile com.google.protobuf.MessageLite buildPartial()
    {
        ucar.nc2.stream.NcStreamProto$Data $r1;
        com.google.protobuf.MessageLite $r2;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data buildPartial()>();

        $r2 = (com.google.protobuf.MessageLite) $r1;

        return $r2;
    }

    public volatile com.google.protobuf.MessageLite build()
    {
        ucar.nc2.stream.NcStreamProto$Data $r1;
        com.google.protobuf.MessageLite $r2;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data build()>();

        $r2 = (com.google.protobuf.MessageLite) $r1;

        return $r2;
    }

    public volatile com.google.protobuf.MessageLite$Builder clear()
    {
        ucar.nc2.stream.NcStreamProto$Data$Builder r0, $r1;
        com.google.protobuf.MessageLite$Builder $r2;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data$Builder clear()>();

        $r2 = (com.google.protobuf.MessageLite$Builder) $r1;

        return $r2;
    }

    public volatile com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite) throws java.io.IOException
    {
        com.google.protobuf.CodedInputStream r1;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0, $r3;
        com.google.protobuf.ExtensionRegistryLite r2;
        com.google.protobuf.AbstractMessageLite$Builder $r4;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        r1 := @parameter0: com.google.protobuf.CodedInputStream;

        r2 := @parameter1: com.google.protobuf.ExtensionRegistryLite;

        $r3 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite)>(r1, r2);

        $r4 = (com.google.protobuf.AbstractMessageLite$Builder) $r3;

        return $r4;
    }

    public volatile com.google.protobuf.AbstractMessageLite$Builder clone()
    {
        com.google.protobuf.AbstractMessageLite$Builder $r2;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0, $r1;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data$Builder clone()>();

        $r2 = (com.google.protobuf.AbstractMessageLite$Builder) $r1;

        return $r2;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        ucar.nc2.stream.NcStreamProto$Data$Builder r0, $r1;

        r0 := @this: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = virtualinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data$Builder clone()>();

        return $r1;
    }

    static ucar.nc2.stream.NcStreamProto$Data access$10700(ucar.nc2.stream.NcStreamProto$Data$Builder) throws com.google.protobuf.InvalidProtocolBufferException
    {
        ucar.nc2.stream.NcStreamProto$Data $r1;
        ucar.nc2.stream.NcStreamProto$Data$Builder r0;

        r0 := @parameter0: ucar.nc2.stream.NcStreamProto$Data$Builder;

        $r1 = specialinvoke r0.<ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data buildParsed()>();

        return $r1;
    }

    static ucar.nc2.stream.NcStreamProto$Data$Builder access$10800()
    {
        ucar.nc2.stream.NcStreamProto$Data$Builder $r0;

        $r0 = staticinvoke <ucar.nc2.stream.NcStreamProto$Data$Builder: ucar.nc2.stream.NcStreamProto$Data$Builder create()>();

        return $r0;
    }
}
