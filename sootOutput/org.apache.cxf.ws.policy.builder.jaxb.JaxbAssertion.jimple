public class org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion extends org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion
{
    private javax.xml.bind.JAXBContext context;
    private java.util.Set classes;
    private java.lang.Object data;

    public void <init>()
    {
        org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion r0;

        r0 := @this: org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion;

        specialinvoke r0.<org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion: void <init>()>();

        return;
    }

    public void <init>(javax.xml.namespace.QName, boolean)
    {
        org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion r0;
        javax.xml.namespace.QName r1;
        boolean z0;

        r0 := @this: org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion;

        r1 := @parameter0: javax.xml.namespace.QName;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion: void <init>(javax.xml.namespace.QName,boolean)>(r1, z0);

        return;
    }

    public void <init>(javax.xml.namespace.QName, boolean, boolean)
    {
        org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion r0;
        javax.xml.namespace.QName r1;
        boolean z0, z1;

        r0 := @this: org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion;

        r1 := @parameter0: javax.xml.namespace.QName;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        specialinvoke r0.<org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion: void <init>(javax.xml.namespace.QName,boolean,boolean)>(r1, z0, z1);

        return;
    }

    public boolean equal(org.apache.neethi.PolicyComponent)
    {
        org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion r0, r2;
        org.apache.neethi.PolicyComponent r1;
        java.lang.Object $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion;

        r1 := @parameter0: org.apache.neethi.PolicyComponent;

        $z0 = specialinvoke r0.<org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion: boolean equal(org.apache.neethi.PolicyComponent)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion) r1;

        $r3 = r0.<org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion: java.lang.Object data>;

        $r4 = virtualinvoke r2.<org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion: java.lang.Object getData()>();

        $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        return $z1;
    }

    public void setData(java.lang.Object)
    {
        org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion r0;
        java.lang.Object r1;

        r0 := @this: org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion;

        r1 := @parameter0: java.lang.Object;

        r0.<org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion: java.lang.Object data> = r1;

        return;
    }

    public java.lang.Object getData()
    {
        org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion;

        $r1 = r0.<org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion: java.lang.Object data>;

        return $r1;
    }

    protected org.apache.neethi.Assertion clone(boolean)
    {
        org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion $r0, r1;
        java.lang.Object $r3;
        javax.xml.namespace.QName $r2;
        boolean z0, $z1;

        r1 := @this: org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion;

        z0 := @parameter0: boolean;

        $r0 = new org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion;

        $r2 = virtualinvoke r1.<org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion: javax.xml.namespace.QName getName()>();

        $z1 = r1.<org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion: boolean ignorable>;

        specialinvoke $r0.<org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion: void <init>(javax.xml.namespace.QName,boolean,boolean)>($r2, z0, $z1);

        $r3 = r1.<org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion: java.lang.Object data>;

        virtualinvoke $r0.<org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion: void setData(java.lang.Object)>($r3);

        return $r0;
    }

    public static org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion cast(org.apache.neethi.Assertion)
    {
        org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion $r1;
        org.apache.neethi.Assertion r0;

        r0 := @parameter0: org.apache.neethi.Assertion;

        $r1 = (org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion) r0;

        return $r1;
    }

    public static org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion cast(org.apache.neethi.Assertion, java.lang.Class)
    {
        org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion $r1;
        java.lang.Class r2;
        org.apache.neethi.Assertion r0;

        r0 := @parameter0: org.apache.neethi.Assertion;

        r2 := @parameter1: java.lang.Class;

        $r1 = (org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion) r0;

        return $r1;
    }

    private synchronized javax.xml.bind.JAXBContext getContext() throws javax.xml.bind.JAXBException
    {
        org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion r0;
        java.util.Set $r5, $r7;
        org.apache.cxf.jaxb.JAXBContextCache$CachedContextAndSchemas $r4;
        java.lang.Object $r2;
        java.lang.Class $r3;
        javax.xml.bind.JAXBContext $r1, $r6, $r8;

        r0 := @this: org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion;

        $r1 = r0.<org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion: javax.xml.bind.JAXBContext context>;

        if $r1 == null goto label1;

        $r7 = r0.<org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion: java.util.Set classes>;

        if $r7 != null goto label2;

     label1:
        $r2 = r0.<org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion: java.lang.Object data>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = staticinvoke <org.apache.cxf.jaxb.JAXBContextCache: org.apache.cxf.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.lang.Class)>($r3);

        $r5 = virtualinvoke $r4.<org.apache.cxf.jaxb.JAXBContextCache$CachedContextAndSchemas: java.util.Set getClasses()>();

        r0.<org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion: java.util.Set classes> = $r5;

        $r6 = virtualinvoke $r4.<org.apache.cxf.jaxb.JAXBContextCache$CachedContextAndSchemas: javax.xml.bind.JAXBContext getContext()>();

        r0.<org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion: javax.xml.bind.JAXBContext context> = $r6;

     label2:
        $r8 = r0.<org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion: javax.xml.bind.JAXBContext context>;

        return $r8;
    }

    public void serialize(javax.xml.stream.XMLStreamWriter) throws javax.xml.stream.XMLStreamException
    {
        org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion r0;
        javax.xml.bind.Marshaller $r2;
        java.lang.RuntimeException $r7;
        javax.xml.bind.JAXBException $r6;
        java.lang.Boolean $r3;
        javax.xml.stream.XMLStreamWriter r4;
        java.lang.Object $r5;
        javax.xml.bind.JAXBContext $r1;

        r0 := @this: org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion;

        r4 := @parameter0: javax.xml.stream.XMLStreamWriter;

     label1:
        $r1 = specialinvoke r0.<org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion: javax.xml.bind.JAXBContext getContext()>();

        $r2 = virtualinvoke $r1.<javax.xml.bind.JAXBContext: javax.xml.bind.Marshaller createMarshaller()>();

        $r3 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke $r2.<javax.xml.bind.Marshaller: void setProperty(java.lang.String,java.lang.Object)>("jaxb.fragment", $r3);

        $r5 = r0.<org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion: java.lang.Object data>;

        interfaceinvoke $r2.<javax.xml.bind.Marshaller: void marshal(java.lang.Object,javax.xml.stream.XMLStreamWriter)>($r5, r4);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

     label4:
        return;

        catch javax.xml.bind.JAXBException from label1 to label2 with label3;
    }
}
