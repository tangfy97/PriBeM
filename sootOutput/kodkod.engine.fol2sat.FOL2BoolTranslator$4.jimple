class kodkod.engine.fol2sat.FOL2BoolTranslator$4 extends java.lang.Object
{
    static final int[] $SwitchMap$kodkod$ast$operator$ExprOperator;
    static final int[] $SwitchMap$kodkod$ast$operator$IntCastOperator;
    static final int[] $SwitchMap$kodkod$ast$operator$Quantifier;
    static final int[] $SwitchMap$kodkod$ast$operator$FormulaOperator;
    static final int[] $SwitchMap$kodkod$ast$operator$ExprCompOperator;
    static final int[] $SwitchMap$kodkod$ast$operator$Multiplicity;
    static final int[] $SwitchMap$kodkod$ast$operator$ExprCastOperator;
    static final int[] $SwitchMap$kodkod$ast$operator$IntOperator;
    static final int[] $SwitchMap$kodkod$ast$operator$IntCompOperator;

    static void <clinit>()
    {
        kodkod.ast.operator.FormulaOperator $r68, $r70, $r72, $r74;
        kodkod.ast.operator.IntOperator $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r40, $r42;
        kodkod.ast.operator.IntCompOperator $r2, $r4, $r6, $r8, $r10;
        kodkod.ast.operator.IntCastOperator[] $r82;
        kodkod.ast.operator.Multiplicity[] $r50;
        kodkod.ast.operator.Quantifier $r78, $r80;
        java.lang.NoSuchFieldError $r108, $r109, $r110, $r111, $r112, $r113, $r114, $r115, $r116, $r117, $r118, $r119, $r120, $r121, $r122, $r123, $r124, $r125, $r126, $r127, $r128, $r129, $r130, $r131, $r132, $r133, $r134, $r135, $r136, $r137, $r138, $r139, $r140, $r141, $r142, $r143, $r144, $r145, $r146, $r147, $r148, $r149, $r150, $r151, $r152;
        int[] $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r41, $r43, $r45, $r47, $r49, $r51, $r53, $r55, $r57, $r59, $r61, $r63, $r65, $r67, $r69, $r71, $r73, $r75, $r77, $r79, $r81, $r83, $r85, $r87, $r89, $r91, $r93, $r95, $r97, $r99, $r101, $r103, $r105, $r107;
        kodkod.ast.operator.IntOperator[] $r12;
        kodkod.ast.operator.IntCompOperator[] $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53;
        kodkod.ast.operator.IntCastOperator $r84, $r86;
        kodkod.ast.operator.ExprCastOperator $r46, $r48;
        kodkod.ast.operator.ExprCompOperator $r62, $r64;
        kodkod.ast.operator.ExprCompOperator[] $r60;
        kodkod.ast.operator.ExprCastOperator[] $r44;
        kodkod.ast.operator.Multiplicity $r52, $r54, $r56, $r58;
        kodkod.ast.operator.ExprOperator[] $r88;
        kodkod.ast.operator.ExprOperator $r90, $r92, $r94, $r96, $r98, $r100, $r102, $r104, $r106;
        kodkod.ast.operator.FormulaOperator[] $r66;
        kodkod.ast.operator.Quantifier[] $r76;

        $r0 = staticinvoke <kodkod.ast.operator.IntCompOperator: kodkod.ast.operator.IntCompOperator[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$IntCompOperator> = $r1;

     label001:
        $r3 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$IntCompOperator>;

        $r2 = <kodkod.ast.operator.IntCompOperator: kodkod.ast.operator.IntCompOperator EQ>;

        $i1 = virtualinvoke $r2.<kodkod.ast.operator.IntCompOperator: int ordinal()>();

        $r3[$i1] = 1;

     label002:
        goto label004;

     label003:
        $r152 := @caughtexception;

     label004:
        $r5 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$IntCompOperator>;

        $r4 = <kodkod.ast.operator.IntCompOperator: kodkod.ast.operator.IntCompOperator LT>;

        $i2 = virtualinvoke $r4.<kodkod.ast.operator.IntCompOperator: int ordinal()>();

        $r5[$i2] = 2;

     label005:
        goto label007;

     label006:
        $r151 := @caughtexception;

     label007:
        $r7 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$IntCompOperator>;

        $r6 = <kodkod.ast.operator.IntCompOperator: kodkod.ast.operator.IntCompOperator LTE>;

        $i3 = virtualinvoke $r6.<kodkod.ast.operator.IntCompOperator: int ordinal()>();

        $r7[$i3] = 3;

     label008:
        goto label010;

     label009:
        $r150 := @caughtexception;

     label010:
        $r9 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$IntCompOperator>;

        $r8 = <kodkod.ast.operator.IntCompOperator: kodkod.ast.operator.IntCompOperator GT>;

        $i4 = virtualinvoke $r8.<kodkod.ast.operator.IntCompOperator: int ordinal()>();

        $r9[$i4] = 4;

     label011:
        goto label013;

     label012:
        $r149 := @caughtexception;

     label013:
        $r11 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$IntCompOperator>;

        $r10 = <kodkod.ast.operator.IntCompOperator: kodkod.ast.operator.IntCompOperator GTE>;

        $i5 = virtualinvoke $r10.<kodkod.ast.operator.IntCompOperator: int ordinal()>();

        $r11[$i5] = 5;

     label014:
        goto label016;

     label015:
        $r148 := @caughtexception;

     label016:
        $r12 = staticinvoke <kodkod.ast.operator.IntOperator: kodkod.ast.operator.IntOperator[] values()>();

        $i6 = lengthof $r12;

        $r13 = newarray (int)[$i6];

        <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$IntOperator> = $r13;

     label017:
        $r15 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$IntOperator>;

        $r14 = <kodkod.ast.operator.IntOperator: kodkod.ast.operator.IntOperator PLUS>;

        $i7 = virtualinvoke $r14.<kodkod.ast.operator.IntOperator: int ordinal()>();

        $r15[$i7] = 1;

     label018:
        goto label020;

     label019:
        $r147 := @caughtexception;

     label020:
        $r17 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$IntOperator>;

        $r16 = <kodkod.ast.operator.IntOperator: kodkod.ast.operator.IntOperator MINUS>;

        $i8 = virtualinvoke $r16.<kodkod.ast.operator.IntOperator: int ordinal()>();

        $r17[$i8] = 2;

     label021:
        goto label023;

     label022:
        $r146 := @caughtexception;

     label023:
        $r19 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$IntOperator>;

        $r18 = <kodkod.ast.operator.IntOperator: kodkod.ast.operator.IntOperator MULTIPLY>;

        $i9 = virtualinvoke $r18.<kodkod.ast.operator.IntOperator: int ordinal()>();

        $r19[$i9] = 3;

     label024:
        goto label026;

     label025:
        $r145 := @caughtexception;

     label026:
        $r21 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$IntOperator>;

        $r20 = <kodkod.ast.operator.IntOperator: kodkod.ast.operator.IntOperator DIVIDE>;

        $i10 = virtualinvoke $r20.<kodkod.ast.operator.IntOperator: int ordinal()>();

        $r21[$i10] = 4;

     label027:
        goto label029;

     label028:
        $r144 := @caughtexception;

     label029:
        $r23 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$IntOperator>;

        $r22 = <kodkod.ast.operator.IntOperator: kodkod.ast.operator.IntOperator MODULO>;

        $i11 = virtualinvoke $r22.<kodkod.ast.operator.IntOperator: int ordinal()>();

        $r23[$i11] = 5;

     label030:
        goto label032;

     label031:
        $r143 := @caughtexception;

     label032:
        $r25 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$IntOperator>;

        $r24 = <kodkod.ast.operator.IntOperator: kodkod.ast.operator.IntOperator AND>;

        $i12 = virtualinvoke $r24.<kodkod.ast.operator.IntOperator: int ordinal()>();

        $r25[$i12] = 6;

     label033:
        goto label035;

     label034:
        $r142 := @caughtexception;

     label035:
        $r27 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$IntOperator>;

        $r26 = <kodkod.ast.operator.IntOperator: kodkod.ast.operator.IntOperator OR>;

        $i13 = virtualinvoke $r26.<kodkod.ast.operator.IntOperator: int ordinal()>();

        $r27[$i13] = 7;

     label036:
        goto label038;

     label037:
        $r141 := @caughtexception;

     label038:
        $r29 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$IntOperator>;

        $r28 = <kodkod.ast.operator.IntOperator: kodkod.ast.operator.IntOperator XOR>;

        $i14 = virtualinvoke $r28.<kodkod.ast.operator.IntOperator: int ordinal()>();

        $r29[$i14] = 8;

     label039:
        goto label041;

     label040:
        $r140 := @caughtexception;

     label041:
        $r31 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$IntOperator>;

        $r30 = <kodkod.ast.operator.IntOperator: kodkod.ast.operator.IntOperator SHL>;

        $i15 = virtualinvoke $r30.<kodkod.ast.operator.IntOperator: int ordinal()>();

        $r31[$i15] = 9;

     label042:
        goto label044;

     label043:
        $r139 := @caughtexception;

     label044:
        $r33 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$IntOperator>;

        $r32 = <kodkod.ast.operator.IntOperator: kodkod.ast.operator.IntOperator SHR>;

        $i16 = virtualinvoke $r32.<kodkod.ast.operator.IntOperator: int ordinal()>();

        $r33[$i16] = 10;

     label045:
        goto label047;

     label046:
        $r138 := @caughtexception;

     label047:
        $r35 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$IntOperator>;

        $r34 = <kodkod.ast.operator.IntOperator: kodkod.ast.operator.IntOperator SHA>;

        $i17 = virtualinvoke $r34.<kodkod.ast.operator.IntOperator: int ordinal()>();

        $r35[$i17] = 11;

     label048:
        goto label050;

     label049:
        $r137 := @caughtexception;

     label050:
        $r37 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$IntOperator>;

        $r36 = <kodkod.ast.operator.IntOperator: kodkod.ast.operator.IntOperator NEG>;

        $i18 = virtualinvoke $r36.<kodkod.ast.operator.IntOperator: int ordinal()>();

        $r37[$i18] = 12;

     label051:
        goto label053;

     label052:
        $r136 := @caughtexception;

     label053:
        $r39 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$IntOperator>;

        $r38 = <kodkod.ast.operator.IntOperator: kodkod.ast.operator.IntOperator NOT>;

        $i19 = virtualinvoke $r38.<kodkod.ast.operator.IntOperator: int ordinal()>();

        $r39[$i19] = 13;

     label054:
        goto label056;

     label055:
        $r135 := @caughtexception;

     label056:
        $r41 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$IntOperator>;

        $r40 = <kodkod.ast.operator.IntOperator: kodkod.ast.operator.IntOperator ABS>;

        $i20 = virtualinvoke $r40.<kodkod.ast.operator.IntOperator: int ordinal()>();

        $r41[$i20] = 14;

     label057:
        goto label059;

     label058:
        $r134 := @caughtexception;

     label059:
        $r43 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$IntOperator>;

        $r42 = <kodkod.ast.operator.IntOperator: kodkod.ast.operator.IntOperator SGN>;

        $i21 = virtualinvoke $r42.<kodkod.ast.operator.IntOperator: int ordinal()>();

        $r43[$i21] = 15;

     label060:
        goto label062;

     label061:
        $r133 := @caughtexception;

     label062:
        $r44 = staticinvoke <kodkod.ast.operator.ExprCastOperator: kodkod.ast.operator.ExprCastOperator[] values()>();

        $i22 = lengthof $r44;

        $r45 = newarray (int)[$i22];

        <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$ExprCastOperator> = $r45;

     label063:
        $r47 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$ExprCastOperator>;

        $r46 = <kodkod.ast.operator.ExprCastOperator: kodkod.ast.operator.ExprCastOperator CARDINALITY>;

        $i23 = virtualinvoke $r46.<kodkod.ast.operator.ExprCastOperator: int ordinal()>();

        $r47[$i23] = 1;

     label064:
        goto label066;

     label065:
        $r132 := @caughtexception;

     label066:
        $r49 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$ExprCastOperator>;

        $r48 = <kodkod.ast.operator.ExprCastOperator: kodkod.ast.operator.ExprCastOperator SUM>;

        $i24 = virtualinvoke $r48.<kodkod.ast.operator.ExprCastOperator: int ordinal()>();

        $r49[$i24] = 2;

     label067:
        goto label069;

     label068:
        $r131 := @caughtexception;

     label069:
        $r50 = staticinvoke <kodkod.ast.operator.Multiplicity: kodkod.ast.operator.Multiplicity[] values()>();

        $i25 = lengthof $r50;

        $r51 = newarray (int)[$i25];

        <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$Multiplicity> = $r51;

     label070:
        $r53 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$Multiplicity>;

        $r52 = <kodkod.ast.operator.Multiplicity: kodkod.ast.operator.Multiplicity NO>;

        $i26 = virtualinvoke $r52.<kodkod.ast.operator.Multiplicity: int ordinal()>();

        $r53[$i26] = 1;

     label071:
        goto label073;

     label072:
        $r130 := @caughtexception;

     label073:
        $r55 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$Multiplicity>;

        $r54 = <kodkod.ast.operator.Multiplicity: kodkod.ast.operator.Multiplicity SOME>;

        $i27 = virtualinvoke $r54.<kodkod.ast.operator.Multiplicity: int ordinal()>();

        $r55[$i27] = 2;

     label074:
        goto label076;

     label075:
        $r129 := @caughtexception;

     label076:
        $r57 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$Multiplicity>;

        $r56 = <kodkod.ast.operator.Multiplicity: kodkod.ast.operator.Multiplicity ONE>;

        $i28 = virtualinvoke $r56.<kodkod.ast.operator.Multiplicity: int ordinal()>();

        $r57[$i28] = 3;

     label077:
        goto label079;

     label078:
        $r128 := @caughtexception;

     label079:
        $r59 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$Multiplicity>;

        $r58 = <kodkod.ast.operator.Multiplicity: kodkod.ast.operator.Multiplicity LONE>;

        $i29 = virtualinvoke $r58.<kodkod.ast.operator.Multiplicity: int ordinal()>();

        $r59[$i29] = 4;

     label080:
        goto label082;

     label081:
        $r127 := @caughtexception;

     label082:
        $r60 = staticinvoke <kodkod.ast.operator.ExprCompOperator: kodkod.ast.operator.ExprCompOperator[] values()>();

        $i30 = lengthof $r60;

        $r61 = newarray (int)[$i30];

        <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$ExprCompOperator> = $r61;

     label083:
        $r63 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$ExprCompOperator>;

        $r62 = <kodkod.ast.operator.ExprCompOperator: kodkod.ast.operator.ExprCompOperator SUBSET>;

        $i31 = virtualinvoke $r62.<kodkod.ast.operator.ExprCompOperator: int ordinal()>();

        $r63[$i31] = 1;

     label084:
        goto label086;

     label085:
        $r126 := @caughtexception;

     label086:
        $r65 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$ExprCompOperator>;

        $r64 = <kodkod.ast.operator.ExprCompOperator: kodkod.ast.operator.ExprCompOperator EQUALS>;

        $i32 = virtualinvoke $r64.<kodkod.ast.operator.ExprCompOperator: int ordinal()>();

        $r65[$i32] = 2;

     label087:
        goto label089;

     label088:
        $r125 := @caughtexception;

     label089:
        $r66 = staticinvoke <kodkod.ast.operator.FormulaOperator: kodkod.ast.operator.FormulaOperator[] values()>();

        $i33 = lengthof $r66;

        $r67 = newarray (int)[$i33];

        <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$FormulaOperator> = $r67;

     label090:
        $r69 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$FormulaOperator>;

        $r68 = <kodkod.ast.operator.FormulaOperator: kodkod.ast.operator.FormulaOperator AND>;

        $i34 = virtualinvoke $r68.<kodkod.ast.operator.FormulaOperator: int ordinal()>();

        $r69[$i34] = 1;

     label091:
        goto label093;

     label092:
        $r124 := @caughtexception;

     label093:
        $r71 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$FormulaOperator>;

        $r70 = <kodkod.ast.operator.FormulaOperator: kodkod.ast.operator.FormulaOperator OR>;

        $i35 = virtualinvoke $r70.<kodkod.ast.operator.FormulaOperator: int ordinal()>();

        $r71[$i35] = 2;

     label094:
        goto label096;

     label095:
        $r123 := @caughtexception;

     label096:
        $r73 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$FormulaOperator>;

        $r72 = <kodkod.ast.operator.FormulaOperator: kodkod.ast.operator.FormulaOperator IMPLIES>;

        $i36 = virtualinvoke $r72.<kodkod.ast.operator.FormulaOperator: int ordinal()>();

        $r73[$i36] = 3;

     label097:
        goto label099;

     label098:
        $r122 := @caughtexception;

     label099:
        $r75 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$FormulaOperator>;

        $r74 = <kodkod.ast.operator.FormulaOperator: kodkod.ast.operator.FormulaOperator IFF>;

        $i37 = virtualinvoke $r74.<kodkod.ast.operator.FormulaOperator: int ordinal()>();

        $r75[$i37] = 4;

     label100:
        goto label102;

     label101:
        $r121 := @caughtexception;

     label102:
        $r76 = staticinvoke <kodkod.ast.operator.Quantifier: kodkod.ast.operator.Quantifier[] values()>();

        $i38 = lengthof $r76;

        $r77 = newarray (int)[$i38];

        <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$Quantifier> = $r77;

     label103:
        $r79 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$Quantifier>;

        $r78 = <kodkod.ast.operator.Quantifier: kodkod.ast.operator.Quantifier ALL>;

        $i39 = virtualinvoke $r78.<kodkod.ast.operator.Quantifier: int ordinal()>();

        $r79[$i39] = 1;

     label104:
        goto label106;

     label105:
        $r120 := @caughtexception;

     label106:
        $r81 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$Quantifier>;

        $r80 = <kodkod.ast.operator.Quantifier: kodkod.ast.operator.Quantifier SOME>;

        $i40 = virtualinvoke $r80.<kodkod.ast.operator.Quantifier: int ordinal()>();

        $r81[$i40] = 2;

     label107:
        goto label109;

     label108:
        $r119 := @caughtexception;

     label109:
        $r82 = staticinvoke <kodkod.ast.operator.IntCastOperator: kodkod.ast.operator.IntCastOperator[] values()>();

        $i41 = lengthof $r82;

        $r83 = newarray (int)[$i41];

        <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$IntCastOperator> = $r83;

     label110:
        $r85 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$IntCastOperator>;

        $r84 = <kodkod.ast.operator.IntCastOperator: kodkod.ast.operator.IntCastOperator INTCAST>;

        $i42 = virtualinvoke $r84.<kodkod.ast.operator.IntCastOperator: int ordinal()>();

        $r85[$i42] = 1;

     label111:
        goto label113;

     label112:
        $r118 := @caughtexception;

     label113:
        $r87 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$IntCastOperator>;

        $r86 = <kodkod.ast.operator.IntCastOperator: kodkod.ast.operator.IntCastOperator BITSETCAST>;

        $i43 = virtualinvoke $r86.<kodkod.ast.operator.IntCastOperator: int ordinal()>();

        $r87[$i43] = 2;

     label114:
        goto label116;

     label115:
        $r117 := @caughtexception;

     label116:
        $r88 = staticinvoke <kodkod.ast.operator.ExprOperator: kodkod.ast.operator.ExprOperator[] values()>();

        $i44 = lengthof $r88;

        $r89 = newarray (int)[$i44];

        <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$ExprOperator> = $r89;

     label117:
        $r91 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$ExprOperator>;

        $r90 = <kodkod.ast.operator.ExprOperator: kodkod.ast.operator.ExprOperator DIFFERENCE>;

        $i45 = virtualinvoke $r90.<kodkod.ast.operator.ExprOperator: int ordinal()>();

        $r91[$i45] = 1;

     label118:
        goto label120;

     label119:
        $r116 := @caughtexception;

     label120:
        $r93 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$ExprOperator>;

        $r92 = <kodkod.ast.operator.ExprOperator: kodkod.ast.operator.ExprOperator OVERRIDE>;

        $i46 = virtualinvoke $r92.<kodkod.ast.operator.ExprOperator: int ordinal()>();

        $r93[$i46] = 2;

     label121:
        goto label123;

     label122:
        $r115 := @caughtexception;

     label123:
        $r95 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$ExprOperator>;

        $r94 = <kodkod.ast.operator.ExprOperator: kodkod.ast.operator.ExprOperator UNION>;

        $i47 = virtualinvoke $r94.<kodkod.ast.operator.ExprOperator: int ordinal()>();

        $r95[$i47] = 3;

     label124:
        goto label126;

     label125:
        $r114 := @caughtexception;

     label126:
        $r97 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$ExprOperator>;

        $r96 = <kodkod.ast.operator.ExprOperator: kodkod.ast.operator.ExprOperator INTERSECTION>;

        $i48 = virtualinvoke $r96.<kodkod.ast.operator.ExprOperator: int ordinal()>();

        $r97[$i48] = 4;

     label127:
        goto label129;

     label128:
        $r113 := @caughtexception;

     label129:
        $r99 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$ExprOperator>;

        $r98 = <kodkod.ast.operator.ExprOperator: kodkod.ast.operator.ExprOperator JOIN>;

        $i49 = virtualinvoke $r98.<kodkod.ast.operator.ExprOperator: int ordinal()>();

        $r99[$i49] = 5;

     label130:
        goto label132;

     label131:
        $r112 := @caughtexception;

     label132:
        $r101 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$ExprOperator>;

        $r100 = <kodkod.ast.operator.ExprOperator: kodkod.ast.operator.ExprOperator PRODUCT>;

        $i50 = virtualinvoke $r100.<kodkod.ast.operator.ExprOperator: int ordinal()>();

        $r101[$i50] = 6;

     label133:
        goto label135;

     label134:
        $r111 := @caughtexception;

     label135:
        $r103 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$ExprOperator>;

        $r102 = <kodkod.ast.operator.ExprOperator: kodkod.ast.operator.ExprOperator TRANSPOSE>;

        $i51 = virtualinvoke $r102.<kodkod.ast.operator.ExprOperator: int ordinal()>();

        $r103[$i51] = 7;

     label136:
        goto label138;

     label137:
        $r110 := @caughtexception;

     label138:
        $r105 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$ExprOperator>;

        $r104 = <kodkod.ast.operator.ExprOperator: kodkod.ast.operator.ExprOperator CLOSURE>;

        $i52 = virtualinvoke $r104.<kodkod.ast.operator.ExprOperator: int ordinal()>();

        $r105[$i52] = 8;

     label139:
        goto label141;

     label140:
        $r109 := @caughtexception;

     label141:
        $r107 = <kodkod.engine.fol2sat.FOL2BoolTranslator$4: int[] $SwitchMap$kodkod$ast$operator$ExprOperator>;

        $r106 = <kodkod.ast.operator.ExprOperator: kodkod.ast.operator.ExprOperator REFLEXIVE_CLOSURE>;

        $i53 = virtualinvoke $r106.<kodkod.ast.operator.ExprOperator: int ordinal()>();

        $r107[$i53] = 9;

     label142:
        goto label144;

     label143:
        $r108 := @caughtexception;

     label144:
        return;

        catch java.lang.NoSuchFieldError from label001 to label002 with label003;
        catch java.lang.NoSuchFieldError from label004 to label005 with label006;
        catch java.lang.NoSuchFieldError from label007 to label008 with label009;
        catch java.lang.NoSuchFieldError from label010 to label011 with label012;
        catch java.lang.NoSuchFieldError from label013 to label014 with label015;
        catch java.lang.NoSuchFieldError from label017 to label018 with label019;
        catch java.lang.NoSuchFieldError from label020 to label021 with label022;
        catch java.lang.NoSuchFieldError from label023 to label024 with label025;
        catch java.lang.NoSuchFieldError from label026 to label027 with label028;
        catch java.lang.NoSuchFieldError from label029 to label030 with label031;
        catch java.lang.NoSuchFieldError from label032 to label033 with label034;
        catch java.lang.NoSuchFieldError from label035 to label036 with label037;
        catch java.lang.NoSuchFieldError from label038 to label039 with label040;
        catch java.lang.NoSuchFieldError from label041 to label042 with label043;
        catch java.lang.NoSuchFieldError from label044 to label045 with label046;
        catch java.lang.NoSuchFieldError from label047 to label048 with label049;
        catch java.lang.NoSuchFieldError from label050 to label051 with label052;
        catch java.lang.NoSuchFieldError from label053 to label054 with label055;
        catch java.lang.NoSuchFieldError from label056 to label057 with label058;
        catch java.lang.NoSuchFieldError from label059 to label060 with label061;
        catch java.lang.NoSuchFieldError from label063 to label064 with label065;
        catch java.lang.NoSuchFieldError from label066 to label067 with label068;
        catch java.lang.NoSuchFieldError from label070 to label071 with label072;
        catch java.lang.NoSuchFieldError from label073 to label074 with label075;
        catch java.lang.NoSuchFieldError from label076 to label077 with label078;
        catch java.lang.NoSuchFieldError from label079 to label080 with label081;
        catch java.lang.NoSuchFieldError from label083 to label084 with label085;
        catch java.lang.NoSuchFieldError from label086 to label087 with label088;
        catch java.lang.NoSuchFieldError from label090 to label091 with label092;
        catch java.lang.NoSuchFieldError from label093 to label094 with label095;
        catch java.lang.NoSuchFieldError from label096 to label097 with label098;
        catch java.lang.NoSuchFieldError from label099 to label100 with label101;
        catch java.lang.NoSuchFieldError from label103 to label104 with label105;
        catch java.lang.NoSuchFieldError from label106 to label107 with label108;
        catch java.lang.NoSuchFieldError from label110 to label111 with label112;
        catch java.lang.NoSuchFieldError from label113 to label114 with label115;
        catch java.lang.NoSuchFieldError from label117 to label118 with label119;
        catch java.lang.NoSuchFieldError from label120 to label121 with label122;
        catch java.lang.NoSuchFieldError from label123 to label124 with label125;
        catch java.lang.NoSuchFieldError from label126 to label127 with label128;
        catch java.lang.NoSuchFieldError from label129 to label130 with label131;
        catch java.lang.NoSuchFieldError from label132 to label133 with label134;
        catch java.lang.NoSuchFieldError from label135 to label136 with label137;
        catch java.lang.NoSuchFieldError from label138 to label139 with label140;
        catch java.lang.NoSuchFieldError from label141 to label142 with label143;
    }
}
