abstract class org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase extends org.apache.lucene.index.DocsEnum
{
    protected final int[] docs;
    protected final int[] freqs;
    final org.apache.lucene.store.IndexInput freqIn;
    final org.apache.lucene.store.IndexInput startFreqIn;
    org.apache.lucene.codecs.lucene40.Lucene40SkipListReader skipper;
    protected boolean indexOmitsTF;
    protected boolean storePayloads;
    protected boolean storeOffsets;
    protected int limit;
    protected int ord;
    protected int doc;
    protected int accum;
    protected int freq;
    protected int maxBufferedDocId;
    protected int start;
    protected int count;
    protected long freqOffset;
    protected long skipOffset;
    protected boolean skipped;
    protected final org.apache.lucene.util.Bits liveDocs;
    static final boolean $assertionsDisabled;
    final org.apache.lucene.codecs.lucene40.Lucene40PostingsReader this$0;

    void <init>(org.apache.lucene.codecs.lucene40.Lucene40PostingsReader, org.apache.lucene.store.IndexInput, org.apache.lucene.util.Bits)
    {
        org.apache.lucene.store.IndexInput r4, $r5;
        org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase r0;
        int[] $r2, $r3;
        org.apache.lucene.codecs.lucene40.Lucene40PostingsReader r1;
        org.apache.lucene.util.Bits r6;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase;

        r1 := @parameter0: org.apache.lucene.codecs.lucene40.Lucene40PostingsReader;

        r4 := @parameter1: org.apache.lucene.store.IndexInput;

        r6 := @parameter2: org.apache.lucene.util.Bits;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: org.apache.lucene.codecs.lucene40.Lucene40PostingsReader this$0> = r1;

        specialinvoke r0.<org.apache.lucene.index.DocsEnum: void <init>()>();

        $r2 = newarray (int)[64];

        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int[] docs> = $r2;

        $r3 = newarray (int)[64];

        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int[] freqs> = $r3;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: org.apache.lucene.store.IndexInput startFreqIn> = r4;

        $r5 = virtualinvoke r4.<org.apache.lucene.store.IndexInput: org.apache.lucene.store.IndexInput clone()>();

        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: org.apache.lucene.store.IndexInput freqIn> = $r5;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: org.apache.lucene.util.Bits liveDocs> = r6;

        return;
    }

    org.apache.lucene.index.DocsEnum reset(org.apache.lucene.index.FieldInfo, org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState) throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState r6;
        long $l1, $l2, $l3;
        java.lang.AssertionError $r10;
        org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase r0;
        int[] $r8;
        int $i0, $i4, $i5, $i7, $i9, $i11;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.lucene.index.FieldInfo$IndexOptions $r2, $r3, $r4, $r5;
        org.apache.lucene.store.IndexInput $r7;
        org.apache.lucene.index.FieldInfo r1;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase;

        r1 := @parameter0: org.apache.lucene.index.FieldInfo;

        r6 := @parameter1: org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState;

        $r2 = virtualinvoke r1.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$IndexOptions getIndexOptions()>();

        $r3 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_ONLY>;

        if $r2 != $r3 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: boolean indexOmitsTF> = $z3;

        $z0 = virtualinvoke r1.<org.apache.lucene.index.FieldInfo: boolean hasPayloads()>();

        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: boolean storePayloads> = $z0;

        $r4 = virtualinvoke r1.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$IndexOptions getIndexOptions()>();

        $r5 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS>;

        $i0 = virtualinvoke $r4.<org.apache.lucene.index.FieldInfo$IndexOptions: int compareTo(java.lang.Enum)>($r5);

        if $i0 < 0 goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: boolean storeOffsets> = $z4;

        $l1 = r6.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState: long freqOffset>;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: long freqOffset> = $l1;

        $l2 = r6.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState: long skipOffset>;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: long skipOffset> = $l2;

        $r7 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: org.apache.lucene.store.IndexInput freqIn>;

        $l3 = r6.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState: long freqOffset>;

        virtualinvoke $r7.<org.apache.lucene.store.IndexInput: void seek(long)>($l3);

        $i4 = r6.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$StandardTermState: int docFreq>;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int limit> = $i4;

        $z1 = <org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: boolean $assertionsDisabled>;

        if $z1 != 0 goto label5;

        $i5 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int limit>;

        if $i5 > 0 goto label5;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label5:
        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int ord> = 0;

        $i7 = (int) -1;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int doc> = $i7;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int accum> = 0;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: boolean skipped> = 0;

        $i9 = (int) -1;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int start> = $i9;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int count> = 0;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int freq> = 1;

        $z2 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: boolean indexOmitsTF>;

        if $z2 == 0 goto label6;

        $r8 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int[] freqs>;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r8, 1);

     label6:
        $i11 = (int) -1;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int maxBufferedDocId> = $i11;

        return r0;
    }

    public final int freq()
    {
        int $i0;
        org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase r0;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase;

        $i0 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int freq>;

        return $i0;
    }

    public final int docID()
    {
        int $i0;
        org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase r0;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase;

        $i0 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int doc>;

        return $i0;
    }

    public final int advance(int) throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase;

        i4 := @parameter0: int;

        $i0 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int start>;

        $i1 = $i0 + 1;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int start> = $i1;

        $i2 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int count>;

        if $i1 >= $i2 goto label2;

        $i6 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int maxBufferedDocId>;

        if $i6 < i4 goto label2;

        $i8 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int count>;

        $i7 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int start>;

        $i9 = $i8 - $i7;

        if $i9 <= 32 goto label1;

        $i11 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int count>;

        $i13 = $i11 - 1;

        $i12 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int start>;

        $r1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int[] docs>;

        $i14 = specialinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int binarySearch(int,int,int,int[])>($i13, $i12, i4, $r1);

        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int start> = $i14;

        $i15 = virtualinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int nextDoc()>();

        return $i15;

     label1:
        $i10 = virtualinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int linearScan(int)>(i4);

        return $i10;

     label2:
        $i3 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int count>;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int start> = $i3;

        $i5 = specialinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int skipTo(int)>(i4);

        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int doc> = $i5;

        return $i5;
    }

    private final int binarySearch(int, int, int, int[])
    {
        int[] r0;
        org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase r1;
        int $i0, $i1, i2, i3, i4, i5, i6;

        r1 := @this: org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase;

        i5 := @parameter0: int;

        i6 := @parameter1: int;

        i4 := @parameter2: int;

        r0 := @parameter3: int[];

     label1:
        if i6 > i5 goto label5;

        $i1 = i5 + i6;

        i2 = $i1 >>> 1;

        i3 = r0[i2];

        if i3 >= i4 goto label2;

        i6 = i2 + 1;

        goto label4;

     label2:
        if i3 <= i4 goto label3;

        i5 = i2 - 1;

        goto label4;

     label3:
        i6 = i2;

        goto label5;

     label4:
        goto label1;

     label5:
        $i0 = i6 - 1;

        return $i0;
    }

    final int readFreq(org.apache.lucene.store.IndexInput, int) throws java.io.IOException
    {
        org.apache.lucene.store.IndexInput r0;
        org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase r1;
        int i0, $i1, $i2;

        r1 := @this: org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase;

        r0 := @parameter0: org.apache.lucene.store.IndexInput;

        i0 := @parameter1: int;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        $i2 = virtualinvoke r0.<org.apache.lucene.store.IndexInput: int readVInt()>();

        return $i2;
    }

    protected abstract int linearScan(int) throws java.io.IOException;

    protected abstract int scanTo(int) throws java.io.IOException;

    protected final int refill() throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase r0;
        int[] $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15;
        boolean $z0;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase;

        $i0 = virtualinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int nextUnreadDoc()>();

        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int count> = 0;

        $i15 = (int) -1;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int start> = $i15;

        if $i0 != 2147483647 goto label1;

        return 2147483647;

     label1:
        $r1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int[] docs>;

        $i4 = lengthof $r1;

        $i2 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int limit>;

        $i1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int ord>;

        $i3 = $i2 - $i1;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i3);

        $i6 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int ord>;

        $i7 = $i6 + $i5;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int ord> = $i7;

        $z0 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: boolean indexOmitsTF>;

        if $z0 == 0 goto label2;

        $i12 = specialinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int fillDocs(int)>($i5);

        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int count> = $i12;

        goto label3;

     label2:
        $i8 = specialinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int fillDocsAndFreqs(int)>($i5);

        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int count> = $i8;

     label3:
        $i9 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int count>;

        if $i9 <= 0 goto label4;

        $r2 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int[] docs>;

        $i10 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int count>;

        $i11 = $i10 - 1;

        $i13 = $r2[$i11];

        goto label5;

     label4:
        $i13 = 2147483647;

     label5:
        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int maxBufferedDocId> = $i13;

        return $i0;
    }

    protected abstract int nextUnreadDoc() throws java.io.IOException;

    private final int fillDocs(int) throws java.io.IOException
    {
        org.apache.lucene.store.IndexInput r1;
        org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase r0;
        int[] r2;
        int i0, $i1, i2, i3;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase;

        i0 := @parameter0: int;

        r1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: org.apache.lucene.store.IndexInput freqIn>;

        r2 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int[] docs>;

        i2 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int accum>;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $i1 = virtualinvoke r1.<org.apache.lucene.store.IndexInput: int readVInt()>();

        i2 = i2 + $i1;

        r2[i3] = i2;

        i3 = i3 + 1;

        goto label1;

     label2:
        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int accum> = i2;

        return i0;
    }

    private final int fillDocsAndFreqs(int) throws java.io.IOException
    {
        org.apache.lucene.store.IndexInput r1;
        org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase r0;
        int[] r2, r3;
        int i0, $i1, $i2, $i3, i4, i5;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase;

        i0 := @parameter0: int;

        r1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: org.apache.lucene.store.IndexInput freqIn>;

        r2 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int[] docs>;

        r3 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int[] freqs>;

        i4 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int accum>;

        i5 = 0;

     label1:
        if i5 >= i0 goto label2;

        $i1 = virtualinvoke r1.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $i2 = $i1 >>> 1;

        i4 = i4 + $i2;

        $i3 = virtualinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int readFreq(org.apache.lucene.store.IndexInput,int)>(r1, $i1);

        r3[i5] = $i3;

        r2[i5] = i4;

        i5 = i5 + 1;

        goto label1;

     label2:
        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int accum> = i4;

        return i0;
    }

    private final int skipTo(int) throws java.io.IOException
    {
        boolean $z0, $z1, $z2;
        long $l9, $l10, $l11, $l13, $l14;
        org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i12, $i15, $i16, $i17;
        org.apache.lucene.codecs.lucene40.Lucene40SkipListReader $r3, $r4, $r5, $r6, $r8, $r9;
        org.apache.lucene.store.IndexInput $r7, $r10, $r11;
        org.apache.lucene.codecs.lucene40.Lucene40PostingsReader $r1, $r2, $r12, $r13;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: org.apache.lucene.codecs.lucene40.Lucene40PostingsReader this$0>;

        $i1 = $r1.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader: int skipInterval>;

        $i3 = i0 - $i1;

        $i2 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int accum>;

        if $i3 < $i2 goto label3;

        $i5 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int limit>;

        $r2 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: org.apache.lucene.codecs.lucene40.Lucene40PostingsReader this$0>;

        $i4 = $r2.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader: int skipMinimum>;

        if $i5 < $i4 goto label3;

        $r3 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: org.apache.lucene.codecs.lucene40.Lucene40SkipListReader skipper>;

        if $r3 != null goto label1;

        $r9 = new org.apache.lucene.codecs.lucene40.Lucene40SkipListReader;

        $r10 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: org.apache.lucene.store.IndexInput freqIn>;

        $r11 = virtualinvoke $r10.<org.apache.lucene.store.IndexInput: org.apache.lucene.store.IndexInput clone()>();

        $r12 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: org.apache.lucene.codecs.lucene40.Lucene40PostingsReader this$0>;

        $i16 = $r12.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader: int maxSkipLevels>;

        $r13 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: org.apache.lucene.codecs.lucene40.Lucene40PostingsReader this$0>;

        $i15 = $r13.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader: int skipInterval>;

        specialinvoke $r9.<org.apache.lucene.codecs.lucene40.Lucene40SkipListReader: void <init>(org.apache.lucene.store.IndexInput,int,int)>($r11, $i16, $i15);

        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: org.apache.lucene.codecs.lucene40.Lucene40SkipListReader skipper> = $r9;

     label1:
        $z0 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: boolean skipped>;

        if $z0 != 0 goto label2;

        $r8 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: org.apache.lucene.codecs.lucene40.Lucene40SkipListReader skipper>;

        $l11 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: long freqOffset>;

        $l10 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: long skipOffset>;

        $l14 = $l11 + $l10;

        $l13 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: long freqOffset>;

        $i12 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int limit>;

        $z2 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: boolean storePayloads>;

        $z1 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: boolean storeOffsets>;

        virtualinvoke $r8.<org.apache.lucene.codecs.lucene40.Lucene40SkipListReader: void init(long,long,long,int,boolean,boolean)>($l14, $l13, 0L, $i12, $z2, $z1);

        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: boolean skipped> = 1;

     label2:
        $r4 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: org.apache.lucene.codecs.lucene40.Lucene40SkipListReader skipper>;

        $i6 = virtualinvoke $r4.<org.apache.lucene.codecs.lucene40.Lucene40SkipListReader: int skipTo(int)>(i0);

        $i7 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int ord>;

        if $i6 <= $i7 goto label3;

        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int ord> = $i6;

        $r5 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: org.apache.lucene.codecs.lucene40.Lucene40SkipListReader skipper>;

        $i8 = virtualinvoke $r5.<org.apache.lucene.codecs.lucene40.Lucene40SkipListReader: int getDoc()>();

        r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int accum> = $i8;

        $r7 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: org.apache.lucene.store.IndexInput freqIn>;

        $r6 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: org.apache.lucene.codecs.lucene40.Lucene40SkipListReader skipper>;

        $l9 = virtualinvoke $r6.<org.apache.lucene.codecs.lucene40.Lucene40SkipListReader: long getFreqPointer()>();

        virtualinvoke $r7.<org.apache.lucene.store.IndexInput: void seek(long)>($l9);

     label3:
        $i17 = virtualinvoke r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int scanTo(int)>(i0);

        return $i17;
    }

    public long cost()
    {
        int $i0;
        long $l1;
        org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase r0;

        r0 := @this: org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase;

        $i0 = r0.<org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: int limit>;

        $l1 = (long) $i0;

        return $l1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/codecs/lucene40/Lucene40PostingsReader;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.lucene40.Lucene40PostingsReader$SegmentDocsEnumBase: boolean $assertionsDisabled> = $z1;

        return;
    }
}
