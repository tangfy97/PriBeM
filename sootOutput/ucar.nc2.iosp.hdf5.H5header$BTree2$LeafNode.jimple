class ucar.nc2.iosp.hdf5.H5header$BTree2$LeafNode extends java.lang.Object
{
    ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2[] entries;
    final ucar.nc2.iosp.hdf5.H5header$BTree2 this$1;

    void <init>(ucar.nc2.iosp.hdf5.H5header$BTree2, long, short) throws java.io.IOException
    {
        byte[] $r44;
        byte $b2, $b3, $b4, $b6;
        ucar.nc2.iosp.hdf5.H5header $r2, $r4, $r5, $r8, $r10, $r13, $r20, $r36, $r40;
        java.lang.StringBuilder $r23, $r24, $r25, $r26, $r27, $r28, $r33, $r34, $r39, $r42, $r45, $r47, $r50;
        ucar.nc2.iosp.hdf5.H5header$BTree2$LeafNode r0;
        long l0, $l1, $l7;
        short s5;
        java.lang.String $r29, $r35, $r43, $r46;
        ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2 $r18, $r51;
        java.lang.IllegalStateException $r48, $r49;
        ucar.unidata.io.RandomAccessFile $r3, $r6, $r9, $r11, $r14, $r41;
        boolean $z0, $z1, $z2;
        int i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        java.io.PrintStream $r21, $r37;
        ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2[] $r12, $r16, $r17;
        ucar.nc2.iosp.hdf5.H5header$BTree2 r1;
        java.lang.Object $r19;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$BTree2$LeafNode;

        r1 := @parameter0: ucar.nc2.iosp.hdf5.H5header$BTree2;

        l0 := @parameter1: long;

        s5 := @parameter2: short;

        r0.<ucar.nc2.iosp.hdf5.H5header$BTree2$LeafNode: ucar.nc2.iosp.hdf5.H5header$BTree2 this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r1.<ucar.nc2.iosp.hdf5.H5header$BTree2: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r3 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r2);

        $r4 = r1.<ucar.nc2.iosp.hdf5.H5header$BTree2: ucar.nc2.iosp.hdf5.H5header this$0>;

        $l1 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$100(ucar.nc2.iosp.hdf5.H5header,long)>($r4, l0);

        virtualinvoke $r3.<ucar.unidata.io.RandomAccessFile: void seek(long)>($l1);

        $z0 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$1300()>();

        if $z0 == 0 goto label1;

        $r36 = r1.<ucar.nc2.iosp.hdf5.H5header$BTree2: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r37 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>($r36);

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--Btree2 InternalNode position=");

        $r40 = r1.<ucar.nc2.iosp.hdf5.H5header$BTree2: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r41 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r40);

        $l7 = virtualinvoke $r41.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        $r42 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r37.<java.io.PrintStream: void println(java.lang.String)>($r43);

     label1:
        $r44 = newarray (byte)[4];

        $r5 = r1.<ucar.nc2.iosp.hdf5.H5header$BTree2: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r6 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r5);

        virtualinvoke $r6.<ucar.unidata.io.RandomAccessFile: int read(byte[])>($r44);

        $r46 = new java.lang.String;

        specialinvoke $r46.<java.lang.String: void <init>(byte[])>($r44);

        $z1 = virtualinvoke $r46.<java.lang.String: boolean equals(java.lang.Object)>("BTLF");

        if $z1 != 0 goto label2;

        $r48 = new java.lang.IllegalStateException;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should equal BTLF");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r48.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r35);

        throw $r48;

     label2:
        $r8 = r1.<ucar.nc2.iosp.hdf5.H5header$BTree2: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r9 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r8);

        $b2 = virtualinvoke $r9.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        $r10 = r1.<ucar.nc2.iosp.hdf5.H5header$BTree2: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r11 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r10);

        $b3 = virtualinvoke $r11.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        $b4 = staticinvoke <ucar.nc2.iosp.hdf5.H5header$BTree2: byte access$2100(ucar.nc2.iosp.hdf5.H5header$BTree2)>(r1);

        $i9 = (int) $b3;

        $i10 = (int) $b4;

        if $i9 == $i10 goto label3;

        $r49 = new java.lang.IllegalStateException;

        specialinvoke $r49.<java.lang.IllegalStateException: void <init>()>();

        throw $r49;

     label3:
        $z2 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$2200()>();

        if $z2 == 0 goto label4;

        $r20 = r1.<ucar.nc2.iosp.hdf5.H5header$BTree2: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r21 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>($r20);

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   BTree2 LeafNode version=");

        $i11 = (int) $b2;

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type=");

        $i12 = (int) $b3;

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nrecords=");

        $i13 = (int) s5;

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r29);

     label4:
        $i14 = (int) s5;

        $r12 = newarray (ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2)[$i14];

        r0.<ucar.nc2.iosp.hdf5.H5header$BTree2$LeafNode: ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2[] entries> = $r12;

        i8 = 0;

     label5:
        $i15 = (int) s5;

        if i8 >= $i15 goto label6;

        $r16 = r0.<ucar.nc2.iosp.hdf5.H5header$BTree2$LeafNode: ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2[] entries>;

        $r51 = new ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2;

        specialinvoke $r51.<ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2: void <init>(ucar.nc2.iosp.hdf5.H5header$BTree2)>(r1);

        $r16[i8] = $r51;

        $r17 = r0.<ucar.nc2.iosp.hdf5.H5header$BTree2$LeafNode: ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2[] entries>;

        $r18 = $r17[i8];

        $b6 = staticinvoke <ucar.nc2.iosp.hdf5.H5header$BTree2: byte access$2100(ucar.nc2.iosp.hdf5.H5header$BTree2)>(r1);

        $i16 = (int) $b6;

        $r19 = virtualinvoke r1.<ucar.nc2.iosp.hdf5.H5header$BTree2: java.lang.Object readRecord(int)>($i16);

        $r18.<ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2: java.lang.Object record> = $r19;

        i8 = i8 + 1;

        goto label5;

     label6:
        $r13 = r1.<ucar.nc2.iosp.hdf5.H5header$BTree2: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r14 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r13);

        virtualinvoke $r14.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        return;
    }

    void addEntries(java.util.List)
    {
        java.util.List r2;
        ucar.nc2.iosp.hdf5.H5header$BTree2$LeafNode r0;
        int $i0, i1;
        ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2[] $r1, $r3;
        ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2 $r4;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$BTree2$LeafNode;

        r2 := @parameter0: java.util.List;

        i1 = 0;

     label1:
        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header$BTree2$LeafNode: ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2[] entries>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r3 = r0.<ucar.nc2.iosp.hdf5.H5header$BTree2$LeafNode: ucar.nc2.iosp.hdf5.H5header$BTree2$Entry2[] entries>;

        $r4 = $r3[i1];

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
}
