final class org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor extends org.springframework.core.type.classreading.ClassMetadataReadingVisitor implements org.springframework.core.type.AnnotationMetadata
{
    private final java.lang.ClassLoader classLoader;
    private final java.util.Set annotationSet;
    private final java.util.Map metaAnnotationMap;
    private final java.util.Map attributeMap;
    private final org.springframework.util.MultiValueMap methodMetadataMap;

    public void <init>(java.lang.ClassLoader)
    {
        java.util.LinkedHashMap $r2, $r3;
        java.lang.ClassLoader r5;
        org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor r0;
        java.util.LinkedHashSet $r1;
        org.springframework.util.LinkedMultiValueMap $r4;

        r0 := @this: org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor;

        r5 := @parameter0: java.lang.ClassLoader;

        specialinvoke r0.<org.springframework.core.type.classreading.ClassMetadataReadingVisitor: void <init>()>();

        $r1 = new java.util.LinkedHashSet;

        specialinvoke $r1.<java.util.LinkedHashSet: void <init>()>();

        r0.<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.util.Set annotationSet> = $r1;

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>(int)>(4);

        r0.<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.util.Map metaAnnotationMap> = $r2;

        $r3 = new java.util.LinkedHashMap;

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>(int)>(4);

        r0.<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.util.Map attributeMap> = $r3;

        $r4 = new org.springframework.util.LinkedMultiValueMap;

        specialinvoke $r4.<org.springframework.util.LinkedMultiValueMap: void <init>()>();

        r0.<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: org.springframework.util.MultiValueMap methodMetadataMap> = $r4;

        r0.<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.lang.ClassLoader classLoader> = r5;

        return;
    }

    public org.springframework.asm.MethodVisitor visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        org.springframework.util.MultiValueMap $r4;
        java.lang.String[] r8;
        org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor r2;
        org.springframework.core.type.classreading.MethodMetadataReadingVisitor $r0;
        int i0;
        java.lang.String r1, $r3, r6, r7;
        java.lang.ClassLoader $r5;

        r2 := @this: org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.String;

        r7 := @parameter3: java.lang.String;

        r8 := @parameter4: java.lang.String[];

        $r0 = new org.springframework.core.type.classreading.MethodMetadataReadingVisitor;

        $r3 = virtualinvoke r2.<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.lang.String getClassName()>();

        $r5 = r2.<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.lang.ClassLoader classLoader>;

        $r4 = r2.<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: org.springframework.util.MultiValueMap methodMetadataMap>;

        specialinvoke $r0.<org.springframework.core.type.classreading.MethodMetadataReadingVisitor: void <init>(java.lang.String,int,java.lang.String,java.lang.ClassLoader,org.springframework.util.MultiValueMap)>(r1, i0, $r3, $r5, $r4);

        return $r0;
    }

    public org.springframework.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean)
    {
        org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor $r5;
        java.util.Set $r4;
        org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor r3;
        java.util.Map $r7, $r8;
        java.lang.String r0, $r2;
        java.lang.ClassLoader $r6;
        org.springframework.asm.Type $r1;
        boolean z0;

        r3 := @this: org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r1 = staticinvoke <org.springframework.asm.Type: org.springframework.asm.Type getType(java.lang.String)>(r0);

        $r2 = virtualinvoke $r1.<org.springframework.asm.Type: java.lang.String getClassName()>();

        $r4 = r3.<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.util.Set annotationSet>;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r2);

        $r5 = new org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor;

        $r8 = r3.<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.util.Map attributeMap>;

        $r7 = r3.<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.util.Map metaAnnotationMap>;

        $r6 = r3.<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.lang.ClassLoader classLoader>;

        specialinvoke $r5.<org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor: void <init>(java.lang.String,java.util.Map,java.util.Map,java.lang.ClassLoader)>($r2, $r8, $r7, $r6);

        return $r5;
    }

    public java.util.Set getAnnotationTypes()
    {
        java.util.Set $r1;
        org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor r0;

        r0 := @this: org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor;

        $r1 = r0.<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.util.Set annotationSet>;

        return $r1;
    }

    public java.util.Set getMetaAnnotationTypes(java.lang.String)
    {
        java.util.Map $r2;
        java.util.Set $r4;
        java.lang.Object $r3;
        java.lang.String r1;
        org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor r0;

        r0 := @this: org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.util.Map metaAnnotationMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.util.Set) $r3;

        return $r4;
    }

    public boolean hasAnnotation(java.lang.String)
    {
        java.util.Set $r2;
        java.lang.String r1;
        org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor r0;
        boolean $z0;

        r0 := @this: org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.util.Set annotationSet>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean hasMetaAnnotation(java.lang.String)
    {
        java.util.Iterator $r3;
        java.util.Collection $r2;
        java.util.Set r5;
        org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor r0;
        java.util.Map $r1;
        java.lang.Object $r4;
        java.lang.String r6;
        boolean $z0, $z1;

        r0 := @this: org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor;

        r6 := @parameter0: java.lang.String;

        $r1 = r0.<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.util.Map metaAnnotationMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Set) $r4;

        $z1 = interfaceinvoke r5.<java.util.Set: boolean contains(java.lang.Object)>(r6);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return 0;
    }

    public boolean isAnnotated(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.String r1;
        org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor r0;
        boolean $z0;

        r0 := @this: org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.util.Map attributeMap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public java.util.Map getAnnotationAttributes(java.lang.String)
    {
        java.lang.String r1;
        org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor r0;
        java.util.Map $r2;

        r0 := @this: org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.util.Map getAnnotationAttributes(java.lang.String,boolean)>(r1, 0);

        return $r2;
    }

    public java.util.Map getAnnotationAttributes(java.lang.String, boolean)
    {
        java.util.Map $r2, r4;
        boolean $z0, $z1, z2, $z3;
        java.util.Set $r6;
        java.lang.Exception $r21;
        java.io.Serializable $r23, $r25;
        java.lang.ClassLoader $r14, $r18;
        java.io.Serializable[] r12, $r24;
        org.springframework.asm.Type $r13, $r16, $r17, $r20;
        org.springframework.asm.Type[] r11;
        java.util.LinkedHashMap $r5;
        int $i0, $i1, $i2, $i3, i4, $i5;
        java.lang.String r1, $r15, $r19, $r27;
        java.util.Map$Entry r9;
        java.util.Iterator $r7;
        org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor r0;
        java.lang.Object $r3, $r8, $r10, r22, $r26;

        r0 := @this: org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor;

        r1 := @parameter0: java.lang.String;

        z2 := @parameter1: boolean;

        $r2 = r0.<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.util.Map attributeMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.Map) $r3;

        if r4 != null goto label01;

        return null;

     label01:
        $r5 = new java.util.LinkedHashMap;

        $i0 = interfaceinvoke r4.<java.util.Map: int size()>();

        specialinvoke $r5.<java.util.LinkedHashMap: void <init>(int)>($i0);

        $r6 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

        goto label16;

     label02:
        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.util.Map$Entry) $r8;

     label03:
        $r10 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        r22 = $r10;

        $z0 = $r10 instanceof org.springframework.asm.Type;

        if $z0 == 0 goto label06;

        if z2 == 0 goto label04;

        $r20 = (org.springframework.asm.Type) $r10;

        $r23 = virtualinvoke $r20.<org.springframework.asm.Type: java.lang.String getClassName()>();

        goto label05;

     label04:
        $r18 = r0.<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.lang.ClassLoader classLoader>;

        $r17 = (org.springframework.asm.Type) $r10;

        $r19 = virtualinvoke $r17.<org.springframework.asm.Type: java.lang.String getClassName()>();

        $r23 = virtualinvoke $r18.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r19);

     label05:
        r22 = $r23;

        goto label13;

     label06:
        $z1 = $r10 instanceof org.springframework.asm.Type[];

        if $z1 == 0 goto label13;

        r11 = (org.springframework.asm.Type[]) $r10;

        if z2 == 0 goto label07;

        $i3 = lengthof r11;

        $r24 = newarray (java.lang.String)[$i3];

        goto label08;

     label07:
        $i1 = lengthof r11;

        $r24 = newarray (java.lang.Class)[$i1];

     label08:
        r12 = $r24;

        i4 = 0;

        goto label12;

     label09:
        $i2 = i4;

        if z2 == 0 goto label10;

        $r16 = r11[i4];

        $r25 = virtualinvoke $r16.<org.springframework.asm.Type: java.lang.String getClassName()>();

        goto label11;

     label10:
        $r14 = r0.<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.lang.ClassLoader classLoader>;

        $r13 = r11[i4];

        $r15 = virtualinvoke $r13.<org.springframework.asm.Type: java.lang.String getClassName()>();

        $r25 = virtualinvoke $r14.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r15);

     label11:
        r12[$i2] = $r25;

        i4 = i4 + 1;

     label12:
        $i5 = lengthof r11;

        if i4 < $i5 goto label09;

        r22 = r12;

     label13:
        $r26 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r27 = (java.lang.String) $r26;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, r22);

     label14:
        goto label16;

     label15:
        $r21 := @caughtexception;

     label16:
        $z3 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label02;

        return $r5;

        catch java.lang.Exception from label03 to label14 with label15;
    }

    public boolean hasAnnotatedMethods(java.lang.String)
    {
        org.springframework.util.MultiValueMap $r2;
        java.lang.String r1;
        org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor r0;
        boolean $z0;

        r0 := @this: org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: org.springframework.util.MultiValueMap methodMetadataMap>;

        $z0 = interfaceinvoke $r2.<org.springframework.util.MultiValueMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public java.util.Set getAnnotatedMethods(java.lang.String)
    {
        org.springframework.util.MultiValueMap $r2;
        org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor r0;
        java.util.List r4;
        int $i0;
        java.lang.Object $r3;
        java.lang.String r1;
        java.util.LinkedHashSet $r5, $r6;
        boolean $z0;

        r0 := @this: org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: org.springframework.util.MultiValueMap methodMetadataMap>;

        $r3 = interfaceinvoke $r2.<org.springframework.util.MultiValueMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.List) $r3;

        $z0 = staticinvoke <org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>(r4);

        if $z0 == 0 goto label1;

        $r6 = new java.util.LinkedHashSet;

        specialinvoke $r6.<java.util.LinkedHashSet: void <init>(int)>(0);

        return $r6;

     label1:
        $r5 = new java.util.LinkedHashSet;

        $i0 = interfaceinvoke r4.<java.util.List: int size()>();

        specialinvoke $r5.<java.util.LinkedHashSet: void <init>(int)>($i0);

        interfaceinvoke $r5.<java.util.Set: boolean addAll(java.util.Collection)>(r4);

        return $r5;
    }
}
