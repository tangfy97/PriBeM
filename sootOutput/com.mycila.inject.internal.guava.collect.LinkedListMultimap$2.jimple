class com.mycila.inject.internal.guava.collect.LinkedListMultimap$2 extends java.util.AbstractSet
{
    final com.mycila.inject.internal.guava.collect.LinkedListMultimap this$0;

    void <init>(com.mycila.inject.internal.guava.collect.LinkedListMultimap)
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r1;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$2 r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap$2;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$2: com.mycila.inject.internal.guava.collect.LinkedListMultimap this$0> = r1;

        specialinvoke r0.<java.util.AbstractSet: void <init>()>();

        return;
    }

    public int size()
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$2 r0;
        com.mycila.inject.internal.guava.collect.Multiset $r2;
        int $i0;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap $r1;
        java.util.Set $r3;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap$2;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$2: com.mycila.inject.internal.guava.collect.LinkedListMultimap this$0>;

        $r2 = staticinvoke <com.mycila.inject.internal.guava.collect.LinkedListMultimap: com.mycila.inject.internal.guava.collect.Multiset access$600(com.mycila.inject.internal.guava.collect.LinkedListMultimap)>($r1);

        $r3 = interfaceinvoke $r2.<com.mycila.inject.internal.guava.collect.Multiset: java.util.Set elementSet()>();

        $i0 = interfaceinvoke $r3.<java.util.Set: int size()>();

        return $i0;
    }

    public java.util.Iterator iterator()
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap $r2;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$2 r1;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$DistinctKeyIterator $r0;

        r1 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap$2;

        $r0 = new com.mycila.inject.internal.guava.collect.LinkedListMultimap$DistinctKeyIterator;

        $r2 = r1.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$2: com.mycila.inject.internal.guava.collect.LinkedListMultimap this$0>;

        specialinvoke $r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$DistinctKeyIterator: void <init>(com.mycila.inject.internal.guava.collect.LinkedListMultimap,com.mycila.inject.internal.guava.collect.LinkedListMultimap$1)>($r2, null);

        return $r0;
    }

    public boolean contains(java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$2 r0;
        com.mycila.inject.internal.guava.collect.Multiset $r2;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap $r1;
        java.lang.Object r3;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap$2;

        r3 := @parameter0: java.lang.Object;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$2: com.mycila.inject.internal.guava.collect.LinkedListMultimap this$0>;

        $r2 = staticinvoke <com.mycila.inject.internal.guava.collect.LinkedListMultimap: com.mycila.inject.internal.guava.collect.Multiset access$600(com.mycila.inject.internal.guava.collect.LinkedListMultimap)>($r1);

        $z0 = interfaceinvoke $r2.<com.mycila.inject.internal.guava.collect.Multiset: boolean contains(java.lang.Object)>(r3);

        return $z0;
    }

    public boolean removeAll(java.util.Collection)
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$2 r1;
        java.util.Collection r0;
        boolean $z0;

        r1 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap$2;

        r0 := @parameter0: java.util.Collection;

        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $z0 = specialinvoke r1.<java.util.AbstractSet: boolean removeAll(java.util.Collection)>(r0);

        return $z0;
    }
}
