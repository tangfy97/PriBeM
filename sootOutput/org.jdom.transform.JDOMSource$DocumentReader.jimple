class org.jdom.transform.JDOMSource$DocumentReader extends org.jdom.output.SAXOutputter implements org.xml.sax.XMLReader
{

    public void <init>()
    {
        org.jdom.transform.JDOMSource$DocumentReader r0;

        r0 := @this: org.jdom.transform.JDOMSource$DocumentReader;

        specialinvoke r0.<org.jdom.output.SAXOutputter: void <init>()>();

        return;
    }

    public void parse(java.lang.String) throws org.xml.sax.SAXNotSupportedException
    {
        org.xml.sax.SAXNotSupportedException $r0;
        org.jdom.transform.JDOMSource$DocumentReader r1;
        java.lang.String r2;

        r1 := @this: org.jdom.transform.JDOMSource$DocumentReader;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.xml.sax.SAXNotSupportedException;

        specialinvoke $r0.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>("Only JDOM Documents are supported as input");

        throw $r0;
    }

    public void parse(org.xml.sax.InputSource) throws org.xml.sax.SAXException
    {
        org.xml.sax.InputSource r0;
        org.xml.sax.SAXNotSupportedException $r1;
        org.jdom.transform.JDOMSource$JDOMInputSource $r2;
        java.util.List $r5;
        org.jdom.Document $r6;
        org.jdom.JDOMException $r7;
        org.xml.sax.SAXException $r8;
        java.lang.Object $r3;
        org.jdom.transform.JDOMSource$DocumentReader r4;
        java.lang.String $r9;
        boolean $z0, $z1;

        r4 := @this: org.jdom.transform.JDOMSource$DocumentReader;

        r0 := @parameter0: org.xml.sax.InputSource;

        $z0 = r0 instanceof org.jdom.transform.JDOMSource$JDOMInputSource;

        if $z0 == 0 goto label5;

     label1:
        $r2 = (org.jdom.transform.JDOMSource$JDOMInputSource) r0;

        $r3 = virtualinvoke $r2.<org.jdom.transform.JDOMSource$JDOMInputSource: java.lang.Object getSource()>();

        $z1 = $r3 instanceof org.jdom.Document;

        if $z1 == 0 goto label2;

        $r6 = (org.jdom.Document) $r3;

        virtualinvoke r4.<org.jdom.output.SAXOutputter: void output(org.jdom.Document)>($r6);

        goto label6;

     label2:
        $r5 = (java.util.List) $r3;

        virtualinvoke r4.<org.jdom.output.SAXOutputter: void output(java.util.List)>($r5);

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        $r8 = new org.xml.sax.SAXException;

        $r9 = virtualinvoke $r7.<org.jdom.JDOMException: java.lang.String getMessage()>();

        specialinvoke $r8.<org.xml.sax.SAXException: void <init>(java.lang.String,java.lang.Exception)>($r9, $r7);

        throw $r8;

     label5:
        $r1 = new org.xml.sax.SAXNotSupportedException;

        specialinvoke $r1.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>("Only JDOM Documents are supported as input");

        throw $r1;

     label6:
        return;

        catch org.jdom.JDOMException from label1 to label3 with label4;
    }
}
