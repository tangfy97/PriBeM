public final class org.eclipse.jdt.internal.compiler.util.HashtableOfLong extends java.lang.Object
{
    public long[] keyTable;
    public java.lang.Object[] valueTable;
    public int elementSize;
    int threshold;

    public void <init>()
    {
        org.eclipse.jdt.internal.compiler.util.HashtableOfLong r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfLong;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: void <init>(int)>(13);

        return;
    }

    public void <init>(int)
    {
        java.lang.Object[] $r2;
        long[] $r1;
        org.eclipse.jdt.internal.compiler.util.HashtableOfLong r0;
        int i0, $i1, i2;
        float $f0, $f1;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfLong;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: int elementSize> = 0;

        r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: int threshold> = i0;

        $f0 = (float) i0;

        $f1 = $f0 * 1.75F;

        i2 = (int) $f1;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: int threshold>;

        if $i1 != i2 goto label1;

        i2 = i2 + 1;

     label1:
        $r1 = newarray (long)[i2];

        r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: long[] keyTable> = $r1;

        $r2 = newarray (java.lang.Object)[i2];

        r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: java.lang.Object[] valueTable> = $r2;

        return;
    }

    public boolean containsKey(long)
    {
        long l1, $l2, $l6;
        long[] $r1, $r2;
        byte $b4, $b7;
        org.eclipse.jdt.internal.compiler.util.HashtableOfLong r0;
        int i0, $i3, i5;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfLong;

        l1 := @parameter0: long;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: long[] keyTable>;

        i0 = lengthof $r1;

        $l2 = l1 >>> 32;

        $i3 = (int) $l2;

        i5 = $i3 % i0;

        goto label3;

     label1:
        $b4 = $l6 cmp l1;

        if $b4 != 0 goto label2;

        return 1;

     label2:
        i5 = i5 + 1;

        if i5 != i0 goto label3;

        i5 = 0;

     label3:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: long[] keyTable>;

        $l6 = $r2[i5];

        $b7 = $l6 cmp 0L;

        if $b7 != 0 goto label1;

        return 0;
    }

    public java.lang.Object get(long)
    {
        java.lang.Object[] $r2;
        long l1, $l2, $l6;
        long[] $r1, $r4;
        byte $b4, $b7;
        org.eclipse.jdt.internal.compiler.util.HashtableOfLong r0;
        int i0, $i3, i5;
        java.lang.Object $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfLong;

        l1 := @parameter0: long;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: long[] keyTable>;

        i0 = lengthof $r1;

        $l2 = l1 >>> 32;

        $i3 = (int) $l2;

        i5 = $i3 % i0;

        goto label3;

     label1:
        $b4 = $l6 cmp l1;

        if $b4 != 0 goto label2;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: java.lang.Object[] valueTable>;

        $r3 = $r2[i5];

        return $r3;

     label2:
        i5 = i5 + 1;

        if i5 != i0 goto label3;

        i5 = 0;

     label3:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: long[] keyTable>;

        $l6 = $r4[i5];

        $b7 = $l6 cmp 0L;

        if $b7 != 0 goto label1;

        return null;
    }

    public java.lang.Object put(long, java.lang.Object)
    {
        java.lang.Object[] $r3, $r5;
        long l1, $l2, $l9;
        long[] $r1, $r4, $r6;
        byte $b4, $b10;
        org.eclipse.jdt.internal.compiler.util.HashtableOfLong r0;
        int i0, $i3, $i5, $i6, $i7, i8;
        java.lang.Object r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfLong;

        l1 := @parameter0: long;

        r2 := @parameter1: java.lang.Object;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: long[] keyTable>;

        i0 = lengthof $r1;

        $l2 = l1 >>> 32;

        $i3 = (int) $l2;

        i8 = $i3 % i0;

        goto label3;

     label1:
        $b4 = $l9 cmp l1;

        if $b4 != 0 goto label2;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: java.lang.Object[] valueTable>;

        $r3[i8] = r2;

        return r2;

     label2:
        i8 = i8 + 1;

        if i8 != i0 goto label3;

        i8 = 0;

     label3:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: long[] keyTable>;

        $l9 = $r6[i8];

        $b10 = $l9 cmp 0L;

        if $b10 != 0 goto label1;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: long[] keyTable>;

        $r4[i8] = l1;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: java.lang.Object[] valueTable>;

        $r5[i8] = r2;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: int elementSize>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: int elementSize> = $i6;

        $i7 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: int threshold>;

        if $i6 <= $i7 goto label4;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: void rehash()>();

     label4:
        return r2;
    }

    private void rehash()
    {
        java.lang.Object[] $r4, $r7;
        long $l2;
        long[] $r2, $r3, $r6;
        byte $b3;
        org.eclipse.jdt.internal.compiler.util.HashtableOfLong r1, $r8;
        int $i0, $i1, $i4, i5, $i7;
        java.lang.Object $r5;

        r1 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfLong;

        $r8 = new org.eclipse.jdt.internal.compiler.util.HashtableOfLong;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: int elementSize>;

        $i1 = $i0 * 2;

        specialinvoke $r8.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: void <init>(int)>($i1);

        $r2 = r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: long[] keyTable>;

        i5 = lengthof $r2;

        goto label2;

     label1:
        $r3 = r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: long[] keyTable>;

        $l2 = $r3[i5];

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label2;

        $r4 = r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: java.lang.Object[] valueTable>;

        $r5 = $r4[i5];

        virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: java.lang.Object put(long,java.lang.Object)>($l2, $r5);

     label2:
        $i7 = (int) -1;

        i5 = i5 + $i7;

        if i5 >= 0 goto label1;

        $r6 = $r8.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: long[] keyTable>;

        r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: long[] keyTable> = $r6;

        $r7 = $r8.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: java.lang.Object[] valueTable>;

        r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: java.lang.Object[] valueTable> = $r7;

        $i4 = $r8.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: int threshold>;

        r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: int threshold> = $i4;

        return;
    }

    public int size()
    {
        int $i0;
        org.eclipse.jdt.internal.compiler.util.HashtableOfLong r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfLong;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: int elementSize>;

        return $i0;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r1, $r2;
        long $l1;
        long[] $r6;
        org.eclipse.jdt.internal.compiler.util.HashtableOfLong r0;
        java.lang.StringBuffer $r4, $r7, $r8, $r10, $r11;
        int i0, i2;
        java.lang.String $r5, $r9, r12;
        java.lang.Object $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.HashtableOfLong;

        r12 = "";

        i2 = 0;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: java.lang.Object[] valueTable>;

        i0 = lengthof $r1;

        goto label3;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: java.lang.Object[] valueTable>;

        $r3 = $r2[i2];

        if $r3 == null goto label2;

        $r4 = new java.lang.StringBuffer;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r12);

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>($r5);

        $r6 = r0.<org.eclipse.jdt.internal.compiler.util.HashtableOfLong: long[] keyTable>;

        $l1 = $r6[i2];

        $r7 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" -> ");

        $r9 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        i2 = i2 + 1;

     label3:
        if i2 < i0 goto label1;

        return r12;
    }
}
