public class com.hp.hpl.jena.reasoner.rulesys.impl.SafeGraph extends com.hp.hpl.jena.graph.impl.WrappedGraph implements com.hp.hpl.jena.graph.Graph
{

    public void <init>(com.hp.hpl.jena.graph.Graph)
    {
        com.hp.hpl.jena.reasoner.rulesys.impl.SafeGraph r0;
        com.hp.hpl.jena.graph.Graph r1;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.SafeGraph;

        r1 := @parameter0: com.hp.hpl.jena.graph.Graph;

        specialinvoke r0.<com.hp.hpl.jena.graph.impl.WrappedGraph: void <init>(com.hp.hpl.jena.graph.Graph)>(r1);

        return;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator find(com.hp.hpl.jena.graph.TripleMatch)
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r5;
        com.hp.hpl.jena.reasoner.rulesys.impl.SafeGraph r0;
        com.hp.hpl.jena.graph.Node $r2, $r3, $r4;
        com.hp.hpl.jena.graph.TripleMatch r1;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.SafeGraph;

        r1 := @parameter0: com.hp.hpl.jena.graph.TripleMatch;

        $r2 = interfaceinvoke r1.<com.hp.hpl.jena.graph.TripleMatch: com.hp.hpl.jena.graph.Node getMatchSubject()>();

        $r3 = interfaceinvoke r1.<com.hp.hpl.jena.graph.TripleMatch: com.hp.hpl.jena.graph.Node getMatchPredicate()>();

        $r4 = interfaceinvoke r1.<com.hp.hpl.jena.graph.TripleMatch: com.hp.hpl.jena.graph.Node getMatchObject()>();

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.rulesys.impl.SafeGraph: com.hp.hpl.jena.util.iterator.ExtendedIterator find(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r2, $r3, $r4);

        return $r5;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator find(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.reasoner.rulesys.impl.SafeGraph r0;
        com.hp.hpl.jena.graph.Node r1, r2, r3;
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r5, $r7, $r8;
        com.hp.hpl.jena.reasoner.rulesys.impl.SafeGraph$1 $r6;
        com.hp.hpl.jena.graph.Graph $r4;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.SafeGraph;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        r3 := @parameter2: com.hp.hpl.jena.graph.Node;

        $r4 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.SafeGraph: com.hp.hpl.jena.graph.Graph base>;

        $r5 = interfaceinvoke $r4.<com.hp.hpl.jena.graph.Graph: com.hp.hpl.jena.util.iterator.ExtendedIterator find(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r1, r2, r3);

        $r6 = new com.hp.hpl.jena.reasoner.rulesys.impl.SafeGraph$1;

        specialinvoke $r6.<com.hp.hpl.jena.reasoner.rulesys.impl.SafeGraph$1: void <init>(com.hp.hpl.jena.reasoner.rulesys.impl.SafeGraph)>(r0);

        $r7 = interfaceinvoke $r5.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator filterDrop(com.hp.hpl.jena.util.iterator.Filter)>($r6);

        $r8 = staticinvoke <com.hp.hpl.jena.graph.impl.SimpleEventManager: com.hp.hpl.jena.util.iterator.ExtendedIterator notifyingRemove(com.hp.hpl.jena.graph.Graph,java.util.Iterator)>(r0, $r7);

        return $r8;
    }

    public com.hp.hpl.jena.graph.Graph getRawGraph()
    {
        com.hp.hpl.jena.reasoner.rulesys.impl.SafeGraph r0;
        com.hp.hpl.jena.graph.Graph $r1;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.SafeGraph;

        $r1 = r0.<com.hp.hpl.jena.reasoner.rulesys.impl.SafeGraph: com.hp.hpl.jena.graph.Graph base>;

        return $r1;
    }
}
