public class org.bouncycastle.asn1.DERBitString extends org.bouncycastle.asn1.ASN1Object implements org.bouncycastle.asn1.DERString
{
    private static final char[] table;
    protected byte[] data;
    protected int padBits;

    protected static int getPadBits(int)
    {
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, i8, i9, i10, $i12;

        i3 := @parameter0: int;

        i8 = 0;

        i9 = 3;

     label1:
        if i9 < 0 goto label4;

        if i9 == 0 goto label2;

        $i4 = i9 * 8;

        $i5 = i3 >> $i4;

        if $i5 == 0 goto label3;

        $i6 = i9 * 8;

        $i7 = i3 >> $i6;

        i8 = $i7 & 255;

        goto label4;

     label2:
        if i3 == 0 goto label3;

        i8 = i3 & 255;

        goto label4;

     label3:
        $i12 = (int) -1;

        i9 = i9 + $i12;

        goto label1;

     label4:
        if i8 != 0 goto label5;

        return 7;

     label5:
        i10 = 1;

     label6:
        $i0 = i8 << 1;

        i8 = $i0;

        $i1 = $i0 & 255;

        if $i1 == 0 goto label7;

        i10 = i10 + 1;

        goto label6;

     label7:
        $i2 = 8 - i10;

        return $i2;
    }

    protected static byte[] getBytes(int)
    {
        byte[] $r0;
        byte $b4;
        int i0, $i1, $i2, $i3, $i5, $i6, $i7, i8, i9, i10, $i12, $i14;

        i0 := @parameter0: int;

        i8 = 4;

        i9 = 3;

     label1:
        if i9 < 1 goto label3;

        $i5 = i9 * 8;

        $i6 = 255 << $i5;

        $i7 = i0 & $i6;

        if $i7 == 0 goto label2;

        goto label3;

     label2:
        $i12 = (int) -1;

        i8 = i8 + $i12;

        $i14 = (int) -1;

        i9 = i9 + $i14;

        goto label1;

     label3:
        $r0 = newarray (byte)[i8];

        i10 = 0;

     label4:
        if i10 >= i8 goto label5;

        $i1 = i10 * 8;

        $i2 = i0 >> $i1;

        $i3 = $i2 & 255;

        $b4 = (byte) $i3;

        $r0[i10] = $b4;

        i10 = i10 + 1;

        goto label4;

     label5:
        return $r0;
    }

    public static org.bouncycastle.asn1.DERBitString getInstance(java.lang.Object)
    {
        byte[] $r13, r14;
        org.bouncycastle.asn1.DERObject $r10;
        org.bouncycastle.asn1.DERBitString $r1, $r11, $r16;
        org.bouncycastle.asn1.ASN1OctetString $r12;
        byte b0;
        int $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r6, $r8;
        boolean $z0, $z1, $z2;
        org.bouncycastle.asn1.ASN1TaggedObject $r9;
        java.lang.IllegalArgumentException $r18;
        java.lang.Object r0;
        java.lang.StringBuilder $r4, $r7, $r17;
        java.lang.Class $r5;

        r0 := @parameter0: java.lang.Object;

        if r0 == null goto label1;

        $z0 = r0 instanceof org.bouncycastle.asn1.DERBitString;

        if $z0 == 0 goto label2;

     label1:
        $r1 = (org.bouncycastle.asn1.DERBitString) r0;

        return $r1;

     label2:
        $z1 = r0 instanceof org.bouncycastle.asn1.ASN1OctetString;

        if $z1 == 0 goto label3;

        $r12 = (org.bouncycastle.asn1.ASN1OctetString) r0;

        $r13 = virtualinvoke $r12.<org.bouncycastle.asn1.ASN1OctetString: byte[] getOctets()>();

        b0 = $r13[0];

        $i1 = lengthof $r13;

        $i2 = $i1 - 1;

        r14 = newarray (byte)[$i2];

        $i3 = lengthof $r13;

        $i4 = $i3 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r13, 1, r14, 0, $i4);

        $r16 = new org.bouncycastle.asn1.DERBitString;

        $i5 = (int) b0;

        specialinvoke $r16.<org.bouncycastle.asn1.DERBitString: void <init>(byte[],int)>(r14, $i5);

        return $r16;

     label3:
        $z2 = r0 instanceof org.bouncycastle.asn1.ASN1TaggedObject;

        if $z2 == 0 goto label4;

        $r9 = (org.bouncycastle.asn1.ASN1TaggedObject) r0;

        $r10 = virtualinvoke $r9.<org.bouncycastle.asn1.ASN1TaggedObject: org.bouncycastle.asn1.DERObject getObject()>();

        $r11 = staticinvoke <org.bouncycastle.asn1.DERBitString: org.bouncycastle.asn1.DERBitString getInstance(java.lang.Object)>($r10);

        return $r11;

     label4:
        $r18 = new java.lang.IllegalArgumentException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal object in getInstance: ");

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r18;
    }

    public static org.bouncycastle.asn1.DERBitString getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean)
    {
        org.bouncycastle.asn1.ASN1TaggedObject r0;
        org.bouncycastle.asn1.DERObject $r1;
        org.bouncycastle.asn1.DERBitString $r2;
        boolean z0;

        r0 := @parameter0: org.bouncycastle.asn1.ASN1TaggedObject;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<org.bouncycastle.asn1.ASN1TaggedObject: org.bouncycastle.asn1.DERObject getObject()>();

        $r2 = staticinvoke <org.bouncycastle.asn1.DERBitString: org.bouncycastle.asn1.DERBitString getInstance(java.lang.Object)>($r1);

        return $r2;
    }

    protected void <init>(byte, int)
    {
        byte[] $r1, $r2;
        byte b0;
        int i1;
        org.bouncycastle.asn1.DERBitString r0;

        r0 := @this: org.bouncycastle.asn1.DERBitString;

        b0 := @parameter0: byte;

        i1 := @parameter1: int;

        specialinvoke r0.<org.bouncycastle.asn1.ASN1Object: void <init>()>();

        $r1 = newarray (byte)[1];

        r0.<org.bouncycastle.asn1.DERBitString: byte[] data> = $r1;

        $r2 = r0.<org.bouncycastle.asn1.DERBitString: byte[] data>;

        $r2[0] = b0;

        r0.<org.bouncycastle.asn1.DERBitString: int padBits> = i1;

        return;
    }

    public void <init>(byte[], int)
    {
        int i0;
        org.bouncycastle.asn1.DERBitString r0;
        byte[] r1;

        r0 := @this: org.bouncycastle.asn1.DERBitString;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        specialinvoke r0.<org.bouncycastle.asn1.ASN1Object: void <init>()>();

        r0.<org.bouncycastle.asn1.DERBitString: byte[] data> = r1;

        r0.<org.bouncycastle.asn1.DERBitString: int padBits> = i0;

        return;
    }

    public void <init>(byte[])
    {
        org.bouncycastle.asn1.DERBitString r0;
        byte[] r1;

        r0 := @this: org.bouncycastle.asn1.DERBitString;

        r1 := @parameter0: byte[];

        specialinvoke r0.<org.bouncycastle.asn1.DERBitString: void <init>(byte[],int)>(r1, 0);

        return;
    }

    public void <init>(org.bouncycastle.asn1.DEREncodable)
    {
        byte[] $r3;
        org.bouncycastle.asn1.DERObject $r2;
        org.bouncycastle.asn1.DEREncodable r1;
        org.bouncycastle.asn1.DERBitString r0;
        java.io.IOException $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.String $r8, $r10;

        r0 := @this: org.bouncycastle.asn1.DERBitString;

        r1 := @parameter0: org.bouncycastle.asn1.DEREncodable;

        specialinvoke r0.<org.bouncycastle.asn1.ASN1Object: void <init>()>();

     label1:
        $r2 = interfaceinvoke r1.<org.bouncycastle.asn1.DEREncodable: org.bouncycastle.asn1.DERObject getDERObject()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.DERObject: byte[] getEncoded(java.lang.String)>("DER");

        r0.<org.bouncycastle.asn1.DERBitString: byte[] data> = $r3;

        r0.<org.bouncycastle.asn1.DERBitString: int padBits> = 0;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error processing object : ");

        $r8 = virtualinvoke $r4.<java.io.IOException: java.lang.String toString()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public byte[] getBytes()
    {
        org.bouncycastle.asn1.DERBitString r0;
        byte[] $r1;

        r0 := @this: org.bouncycastle.asn1.DERBitString;

        $r1 = r0.<org.bouncycastle.asn1.DERBitString: byte[] data>;

        return $r1;
    }

    public int getPadBits()
    {
        int $i0;
        org.bouncycastle.asn1.DERBitString r0;

        r0 := @this: org.bouncycastle.asn1.DERBitString;

        $i0 = r0.<org.bouncycastle.asn1.DERBitString: int padBits>;

        return $i0;
    }

    public int intValue()
    {
        byte[] $r1, $r2;
        org.bouncycastle.asn1.DERBitString r0;
        short $s3, $s7;
        byte $b1;
        int $i0, $i2, $i4, i5, i6, $i8;

        r0 := @this: org.bouncycastle.asn1.DERBitString;

        i5 = 0;

        i6 = 0;

     label1:
        $r1 = r0.<org.bouncycastle.asn1.DERBitString: byte[] data>;

        $i0 = lengthof $r1;

        if i6 == $i0 goto label2;

        if i6 == 4 goto label2;

        $r2 = r0.<org.bouncycastle.asn1.DERBitString: byte[] data>;

        $b1 = $r2[i6];

        $s7 = (short) $b1;

        $s3 = $s7 & 255;

        $i2 = 8 * i6;

        $i8 = (int) $s3;

        $i4 = $i8 << $i2;

        i5 = i5 | $i4;

        i6 = i6 + 1;

        goto label1;

     label2:
        return i5;
    }

    void encode(org.bouncycastle.asn1.DEROutputStream) throws java.io.IOException
    {
        byte[] $r1, r2, $r3;
        org.bouncycastle.asn1.DERBitString r0;
        byte $b3;
        int $i0, $i1, $i2, $i4, $i5;
        org.bouncycastle.asn1.DEROutputStream r4;

        r0 := @this: org.bouncycastle.asn1.DERBitString;

        r4 := @parameter0: org.bouncycastle.asn1.DEROutputStream;

        $r1 = virtualinvoke r0.<org.bouncycastle.asn1.DERBitString: byte[] getBytes()>();

        $i0 = lengthof $r1;

        $i1 = $i0 + 1;

        r2 = newarray (byte)[$i1];

        $i2 = virtualinvoke r0.<org.bouncycastle.asn1.DERBitString: int getPadBits()>();

        $b3 = (byte) $i2;

        r2[0] = $b3;

        $r3 = virtualinvoke r0.<org.bouncycastle.asn1.DERBitString: byte[] getBytes()>();

        $i4 = lengthof r2;

        $i5 = $i4 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r2, 1, $i5);

        virtualinvoke r4.<org.bouncycastle.asn1.DEROutputStream: void writeEncoded(int,byte[])>(3, r2);

        return;
    }

    public int hashCode()
    {
        byte[] $r1;
        int $i0, $i1, $i2;
        org.bouncycastle.asn1.DERBitString r0;

        r0 := @this: org.bouncycastle.asn1.DERBitString;

        $i0 = r0.<org.bouncycastle.asn1.DERBitString: int padBits>;

        $r1 = r0.<org.bouncycastle.asn1.DERBitString: byte[] data>;

        $i1 = staticinvoke <org.bouncycastle.util.Arrays: int hashCode(byte[])>($r1);

        $i2 = $i0 ^ $i1;

        return $i2;
    }

    protected boolean asn1Equals(org.bouncycastle.asn1.DERObject)
    {
        byte[] $r3, $r4;
        org.bouncycastle.asn1.DERObject r0;
        org.bouncycastle.asn1.DERBitString r1, r2;
        int $i0, $i1;
        boolean $z0, $z1, $z2;

        r2 := @this: org.bouncycastle.asn1.DERBitString;

        r0 := @parameter0: org.bouncycastle.asn1.DERObject;

        $z0 = r0 instanceof org.bouncycastle.asn1.DERBitString;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (org.bouncycastle.asn1.DERBitString) r0;

        $i1 = r2.<org.bouncycastle.asn1.DERBitString: int padBits>;

        $i0 = r1.<org.bouncycastle.asn1.DERBitString: int padBits>;

        if $i1 != $i0 goto label2;

        $r4 = r2.<org.bouncycastle.asn1.DERBitString: byte[] data>;

        $r3 = r1.<org.bouncycastle.asn1.DERBitString: byte[] data>;

        $z1 = staticinvoke <org.bouncycastle.util.Arrays: boolean areEqual(byte[],byte[])>($r4, $r3);

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public java.lang.String getString()
    {
        byte[] $r4;
        java.io.ByteArrayOutputStream $r11;
        org.bouncycastle.asn1.DERBitString r3;
        byte $b1, $b5, $b6;
        java.lang.StringBuffer $r10;
        int $i0, $i2, $i3, i8, $i9, $i10;
        java.lang.String $r5;
        org.bouncycastle.asn1.ASN1OutputStream $r12;
        char $c4, $c7;
        java.io.IOException $r8;
        java.lang.RuntimeException $r13;
        char[] $r6, $r7;

        r3 := @this: org.bouncycastle.asn1.DERBitString;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>(java.lang.String)>("#");

        $r11 = new java.io.ByteArrayOutputStream;

        specialinvoke $r11.<java.io.ByteArrayOutputStream: void <init>()>();

        $r12 = new org.bouncycastle.asn1.ASN1OutputStream;

        specialinvoke $r12.<org.bouncycastle.asn1.ASN1OutputStream: void <init>(java.io.OutputStream)>($r11);

     label1:
        virtualinvoke $r12.<org.bouncycastle.asn1.ASN1OutputStream: void writeObject(java.lang.Object)>(r3);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>("internal error encoding BitString");

        throw $r13;

     label4:
        $r4 = virtualinvoke $r11.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        i8 = 0;

     label5:
        $i0 = lengthof $r4;

        if i8 == $i0 goto label6;

        $r6 = <org.bouncycastle.asn1.DERBitString: char[] table>;

        $b1 = $r4[i8];

        $i9 = (int) $b1;

        $i2 = $i9 >>> 4;

        $i3 = $i2 & 15;

        $c4 = $r6[$i3];

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c4);

        $r7 = <org.bouncycastle.asn1.DERBitString: char[] table>;

        $b5 = $r4[i8];

        $b6 = $b5 & 15;

        $i10 = (int) $b6;

        $c7 = $r7[$i10];

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c7);

        i8 = i8 + 1;

        goto label5;

     label6:
        $r5 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        org.bouncycastle.asn1.DERBitString r0;
        java.lang.String $r1;

        r0 := @this: org.bouncycastle.asn1.DERBitString;

        $r1 = virtualinvoke r0.<org.bouncycastle.asn1.DERBitString: java.lang.String getString()>();

        return $r1;
    }

    static void <clinit>()
    {
        char[] $r0;

        $r0 = newarray (char)[16];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 65;

        $r0[11] = 66;

        $r0[12] = 67;

        $r0[13] = 68;

        $r0[14] = 69;

        $r0[15] = 70;

        <org.bouncycastle.asn1.DERBitString: char[] table> = $r0;

        return;
    }
}
