class org.apache.tika.parser.rtf.RTFEmbObjHandler extends java.lang.Object
{
    private static final java.lang.String EMPTY_STRING;
    private int hi;
    private int thumbCount;
    private java.util.concurrent.atomic.AtomicInteger unknownFilenameCount;
    private boolean inObject;
    private java.lang.String sv;
    private java.lang.String sn;
    private java.lang.StringBuilder sb;
    private final org.xml.sax.ContentHandler handler;
    private org.apache.tika.metadata.Metadata metadata;
    private final org.apache.tika.parser.ParseContext context;
    private final java.io.ByteArrayOutputStream os;
    private org.apache.tika.parser.rtf.RTFEmbObjHandler$EMB_STATE state;

    protected void <init>(org.xml.sax.ContentHandler, org.apache.tika.metadata.Metadata, org.apache.tika.parser.ParseContext)
    {
        java.io.ByteArrayOutputStream $r10;
        org.apache.tika.parser.rtf.RTFEmbObjHandler r0;
        org.apache.tika.metadata.Metadata r7;
        java.util.concurrent.atomic.AtomicInteger $r8;
        org.apache.tika.parser.ParseContext r5;
        int $i1;
        java.lang.StringBuilder $r9;
        org.xml.sax.ContentHandler r4;
        org.apache.tika.parser.rtf.RTFEmbObjHandler$EMB_STATE $r3;

        r0 := @this: org.apache.tika.parser.rtf.RTFEmbObjHandler;

        r4 := @parameter0: org.xml.sax.ContentHandler;

        r7 := @parameter1: org.apache.tika.metadata.Metadata;

        r5 := @parameter2: org.apache.tika.parser.ParseContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = (int) -1;

        r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: int hi> = $i1;

        r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: int thumbCount> = 0;

        $r8 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r8.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: java.util.concurrent.atomic.AtomicInteger unknownFilenameCount> = $r8;

        r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: boolean inObject> = 0;

        r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: java.lang.String sv> = "";

        r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: java.lang.String sn> = "";

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: java.lang.StringBuilder sb> = $r9;

        $r3 = <org.apache.tika.parser.rtf.RTFEmbObjHandler$EMB_STATE: org.apache.tika.parser.rtf.RTFEmbObjHandler$EMB_STATE NADA>;

        r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: org.apache.tika.parser.rtf.RTFEmbObjHandler$EMB_STATE state> = $r3;

        r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: org.xml.sax.ContentHandler handler> = r4;

        r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: org.apache.tika.parser.ParseContext context> = r5;

        $r10 = new java.io.ByteArrayOutputStream;

        specialinvoke $r10.<java.io.ByteArrayOutputStream: void <init>()>();

        r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: java.io.ByteArrayOutputStream os> = $r10;

        return;
    }

    protected void startPict()
    {
        org.apache.tika.parser.rtf.RTFEmbObjHandler r0;
        org.apache.tika.metadata.Metadata $r2;
        org.apache.tika.parser.rtf.RTFEmbObjHandler$EMB_STATE $r1;

        r0 := @this: org.apache.tika.parser.rtf.RTFEmbObjHandler;

        $r1 = <org.apache.tika.parser.rtf.RTFEmbObjHandler$EMB_STATE: org.apache.tika.parser.rtf.RTFEmbObjHandler$EMB_STATE PICT>;

        r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: org.apache.tika.parser.rtf.RTFEmbObjHandler$EMB_STATE state> = $r1;

        $r2 = new org.apache.tika.metadata.Metadata;

        specialinvoke $r2.<org.apache.tika.metadata.Metadata: void <init>()>();

        r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: org.apache.tika.metadata.Metadata metadata> = $r2;

        return;
    }

    protected void startObjData()
    {
        org.apache.tika.parser.rtf.RTFEmbObjHandler r0;
        org.apache.tika.metadata.Metadata $r2;
        org.apache.tika.parser.rtf.RTFEmbObjHandler$EMB_STATE $r1;

        r0 := @this: org.apache.tika.parser.rtf.RTFEmbObjHandler;

        $r1 = <org.apache.tika.parser.rtf.RTFEmbObjHandler$EMB_STATE: org.apache.tika.parser.rtf.RTFEmbObjHandler$EMB_STATE OBJDATA>;

        r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: org.apache.tika.parser.rtf.RTFEmbObjHandler$EMB_STATE state> = $r1;

        $r2 = new org.apache.tika.metadata.Metadata;

        specialinvoke $r2.<org.apache.tika.metadata.Metadata: void <init>()>();

        r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: org.apache.tika.metadata.Metadata metadata> = $r2;

        return;
    }

    protected void startSN()
    {
        org.apache.tika.parser.rtf.RTFEmbObjHandler r0;
        java.lang.StringBuilder $r1, $r2;

        r0 := @this: org.apache.tika.parser.rtf.RTFEmbObjHandler;

        $r1 = r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: java.lang.StringBuilder sb>;

        virtualinvoke $r1.<java.lang.StringBuilder: void setLength(int)>(0);

        $r2 = r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: java.lang.StringBuilder sb>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rtf_pict:");

        return;
    }

    protected void endSN()
    {
        org.apache.tika.parser.rtf.RTFEmbObjHandler r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.tika.parser.rtf.RTFEmbObjHandler;

        $r1 = r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: java.lang.StringBuilder sb>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: java.lang.String sn> = $r2;

        return;
    }

    protected void startSV()
    {
        org.apache.tika.parser.rtf.RTFEmbObjHandler r0;
        java.lang.StringBuilder $r1;

        r0 := @this: org.apache.tika.parser.rtf.RTFEmbObjHandler;

        $r1 = r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: java.lang.StringBuilder sb>;

        virtualinvoke $r1.<java.lang.StringBuilder: void setLength(int)>(0);

        return;
    }

    protected void endSV()
    {
        org.apache.tika.parser.rtf.RTFEmbObjHandler r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.tika.parser.rtf.RTFEmbObjHandler;

        $r1 = r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: java.lang.StringBuilder sb>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: java.lang.String sv> = $r2;

        return;
    }

    protected void endSP()
    {
        org.apache.tika.parser.rtf.RTFEmbObjHandler r0;
        org.apache.tika.metadata.Metadata $r3;
        java.lang.String $r1, $r2;

        r0 := @this: org.apache.tika.parser.rtf.RTFEmbObjHandler;

        $r3 = r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: org.apache.tika.metadata.Metadata metadata>;

        $r2 = r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: java.lang.String sn>;

        $r1 = r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: java.lang.String sv>;

        virtualinvoke $r3.<org.apache.tika.metadata.Metadata: void add(java.lang.String,java.lang.String)>($r2, $r1);

        return;
    }

    protected void setInObject(boolean)
    {
        org.apache.tika.parser.rtf.RTFEmbObjHandler r0;
        boolean z0;

        r0 := @this: org.apache.tika.parser.rtf.RTFEmbObjHandler;

        z0 := @parameter0: boolean;

        r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: boolean inObject> = z0;

        return;
    }

    protected boolean getInObject()
    {
        org.apache.tika.parser.rtf.RTFEmbObjHandler r0;
        boolean $z0;

        r0 := @this: org.apache.tika.parser.rtf.RTFEmbObjHandler;

        $z0 = r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: boolean inObject>;

        return $z0;
    }

    protected void writeMetadataChar(char)
    {
        org.apache.tika.parser.rtf.RTFEmbObjHandler r0;
        char c0;
        java.lang.StringBuilder $r1;

        r0 := @this: org.apache.tika.parser.rtf.RTFEmbObjHandler;

        c0 := @parameter0: char;

        $r1 = r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: java.lang.StringBuilder sb>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        return;
    }

    protected void writeHexChar(int) throws java.io.IOException, org.apache.tika.exception.TikaException
    {
        java.io.ByteArrayOutputStream $r3;
        long l5;
        byte $b6, $b7;
        org.apache.tika.exception.TikaException $r5;
        int i0, $i1, $i2, $i3, $i4, $i8, $i9, $i10, $i12, $i13, $i14, $i16, $i18;
        boolean $z0;
        java.io.IOException $r4;
        org.apache.tika.parser.rtf.RTFEmbObjHandler r1;

        r1 := @this: org.apache.tika.parser.rtf.RTFEmbObjHandler;

        i0 := @parameter0: int;

        $z0 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: boolean isHexChar(int)>(i0);

        if $z0 == 0 goto label5;

        $i1 = r1.<org.apache.tika.parser.rtf.RTFEmbObjHandler: int hi>;

        $i12 = (int) -1;

        if $i1 != $i12 goto label1;

        $i9 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: int hexValue(int)>(i0);

        $i10 = 16 * $i9;

        r1.<org.apache.tika.parser.rtf.RTFEmbObjHandler: int hi> = $i10;

        goto label4;

     label1:
        $i2 = r1.<org.apache.tika.parser.rtf.RTFEmbObjHandler: int hi>;

        $i3 = staticinvoke <org.apache.tika.parser.rtf.TextExtractor: int hexValue(int)>(i0);

        $i4 = $i2 + $i3;

        l5 = (long) $i4;

        $b6 = l5 cmp 2147483647L;

        $i13 = (int) $b6;

        if $i13 > 0 goto label2;

        $b7 = l5 cmp 0L;

        $i14 = (int) $b7;

        if $i14 >= 0 goto label3;

     label2:
        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("hex char to byte overflow");

        throw $r4;

     label3:
        $r3 = r1.<org.apache.tika.parser.rtf.RTFEmbObjHandler: java.io.ByteArrayOutputStream os>;

        $i8 = (int) l5;

        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(int)>($i8);

        $i16 = (int) -1;

        r1.<org.apache.tika.parser.rtf.RTFEmbObjHandler: int hi> = $i16;

     label4:
        return;

     label5:
        $i18 = (int) -1;

        if i0 != $i18 goto label6;

        $r5 = new org.apache.tika.exception.TikaException;

        specialinvoke $r5.<org.apache.tika.exception.TikaException: void <init>(java.lang.String)>("hit end of stream before finishing byte pair");

        throw $r5;

     label6:
        return;
    }

    protected void writeBytes(java.io.InputStream, int) throws java.io.IOException, org.apache.tika.exception.TikaException
    {
        byte[] r5;
        java.io.ByteArrayOutputStream $r8;
        org.apache.tika.exception.TikaException $r9;
        int i0, $i1, $i2, $i3;
        java.lang.String $r4, $r15;
        java.io.IOException $r0;
        org.apache.tika.parser.rtf.RTFEmbObjHandler r7;
        java.lang.StringBuilder $r1, $r2, $r3, $r10, $r11, $r12, $r13, $r14;
        java.io.InputStream r6;

        r7 := @this: org.apache.tika.parser.rtf.RTFEmbObjHandler;

        r6 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        if i0 < 0 goto label1;

        $i1 = staticinvoke <org.apache.tika.parser.rtf.RTFParser: int getMaxBytesForEmbeddedObject()>();

        if i0 <= $i1 goto label2;

     label1:
        $r0 = new java.io.IOException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("length of bytes to read out of bounds: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.io.IOException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label2:
        r5 = newarray (byte)[i0];

        $i2 = virtualinvoke r6.<java.io.InputStream: int read(byte[])>(r5);

        if $i2 >= i0 goto label3;

        $r9 = new org.apache.tika.exception.TikaException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected end of file: need ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes of binary data, found ");

        $i3 = i0 - $i2;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.apache.tika.exception.TikaException: void <init>(java.lang.String)>($r15);

        throw $r9;

     label3:
        $r8 = r7.<org.apache.tika.parser.rtf.RTFEmbObjHandler: java.io.ByteArrayOutputStream os>;

        virtualinvoke $r8.<java.io.ByteArrayOutputStream: void write(byte[])>(r5);

        return;
    }

    protected void handleCompletedObject() throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        byte[] $r4, $r19;
        org.apache.tika.metadata.Metadata $r11, $r13, $r14, $r18, $r20, $r26, $r30;
        org.apache.tika.metadata.Property $r27;
        java.util.concurrent.atomic.AtomicInteger $r17;
        org.apache.tika.parser.rtf.RTFObjDataParser $r16;
        boolean $z0;
        org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor $r22;
        org.apache.tika.parser.rtf.RTFEmbObjHandler r0;
        org.apache.tika.parser.ParseContext $r1, $r23;
        java.io.ByteArrayOutputStream $r3;
        org.apache.tika.extractor.EmbeddedDocumentExtractor r25;
        int $i0;
        java.lang.String $r12, $r15, $r28;
        org.xml.sax.ContentHandler $r21, $r29;
        org.apache.tika.parser.rtf.RTFEmbObjHandler$EMB_STATE $r5, $r6, $r7, $r8, $r9, $r10;
        java.io.IOException $r24;
        java.lang.Object $r2;

        r0 := @this: org.apache.tika.parser.rtf.RTFEmbObjHandler;

        $r1 = r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: org.apache.tika.parser.ParseContext context>;

        $r2 = virtualinvoke $r1.<org.apache.tika.parser.ParseContext: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/tika/extractor/EmbeddedDocumentExtractor;");

        r25 = (org.apache.tika.extractor.EmbeddedDocumentExtractor) $r2;

        if r25 != null goto label1;

        $r22 = new org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor;

        $r23 = r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: org.apache.tika.parser.ParseContext context>;

        specialinvoke $r22.<org.apache.tika.extractor.ParsingEmbeddedDocumentExtractor: void <init>(org.apache.tika.parser.ParseContext)>($r23);

        r25 = $r22;

     label1:
        $r3 = r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: java.io.ByteArrayOutputStream os>;

        $r4 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r6 = r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: org.apache.tika.parser.rtf.RTFEmbObjHandler$EMB_STATE state>;

        $r5 = <org.apache.tika.parser.rtf.RTFEmbObjHandler$EMB_STATE: org.apache.tika.parser.rtf.RTFEmbObjHandler$EMB_STATE OBJDATA>;

        if $r6 != $r5 goto label6;

        $r16 = new org.apache.tika.parser.rtf.RTFObjDataParser;

        specialinvoke $r16.<org.apache.tika.parser.rtf.RTFObjDataParser: void <init>()>();

     label2:
        $r18 = r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: org.apache.tika.metadata.Metadata metadata>;

        $r17 = r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: java.util.concurrent.atomic.AtomicInteger unknownFilenameCount>;

        $r19 = virtualinvoke $r16.<org.apache.tika.parser.rtf.RTFObjDataParser: byte[] parse(byte[],org.apache.tika.metadata.Metadata,java.util.concurrent.atomic.AtomicInteger)>($r4, $r18, $r17);

        $r21 = r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: org.xml.sax.ContentHandler handler>;

        $r20 = r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: org.apache.tika.metadata.Metadata metadata>;

        specialinvoke r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: void extractObj(byte[],org.xml.sax.ContentHandler,org.apache.tika.extractor.EmbeddedDocumentExtractor,org.apache.tika.metadata.Metadata)>($r19, $r21, r25, $r20);

     label3:
        goto label5;

     label4:
        $r24 := @caughtexception;

     label5:
        goto label9;

     label6:
        $r8 = r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: org.apache.tika.parser.rtf.RTFEmbObjHandler$EMB_STATE state>;

        $r7 = <org.apache.tika.parser.rtf.RTFEmbObjHandler$EMB_STATE: org.apache.tika.parser.rtf.RTFEmbObjHandler$EMB_STATE PICT>;

        if $r8 != $r7 goto label8;

        $r11 = r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: org.apache.tika.metadata.Metadata metadata>;

        $r12 = virtualinvoke $r11.<org.apache.tika.metadata.Metadata: java.lang.String get(java.lang.String)>("rtf_pict:wzDescription");

        if $r12 == null goto label7;

        $i0 = virtualinvoke $r12.<java.lang.String: int length()>();

        if $i0 <= 0 goto label7;

        $r13 = r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: org.apache.tika.metadata.Metadata metadata>;

        virtualinvoke $r13.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("embeddedRelationshipId", $r12);

        $r14 = r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: org.apache.tika.metadata.Metadata metadata>;

        $r15 = staticinvoke <org.apache.tika.io.FilenameUtils: java.lang.String getName(java.lang.String)>($r12);

        virtualinvoke $r14.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("resourceName", $r15);

     label7:
        $r26 = r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: org.apache.tika.metadata.Metadata metadata>;

        $r27 = <org.apache.tika.metadata.RTFMetadata: org.apache.tika.metadata.Property THUMBNAIL>;

        $z0 = r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: boolean inObject>;

        $r28 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z0);

        virtualinvoke $r26.<org.apache.tika.metadata.Metadata: void set(org.apache.tika.metadata.Property,java.lang.String)>($r27, $r28);

        $r29 = r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: org.xml.sax.ContentHandler handler>;

        $r30 = r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: org.apache.tika.metadata.Metadata metadata>;

        specialinvoke r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: void extractObj(byte[],org.xml.sax.ContentHandler,org.apache.tika.extractor.EmbeddedDocumentExtractor,org.apache.tika.metadata.Metadata)>($r4, $r29, r25, $r30);

        goto label9;

     label8:
        $r10 = r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: org.apache.tika.parser.rtf.RTFEmbObjHandler$EMB_STATE state>;

        $r9 = <org.apache.tika.parser.rtf.RTFEmbObjHandler$EMB_STATE: org.apache.tika.parser.rtf.RTFEmbObjHandler$EMB_STATE NADA>;

        if $r10 != $r9 goto label9;

     label9:
        virtualinvoke r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: void reset()>();

        return;

        catch java.io.IOException from label2 to label3 with label4;
    }

    private void extractObj(byte[], org.xml.sax.ContentHandler, org.apache.tika.extractor.EmbeddedDocumentExtractor, org.apache.tika.metadata.Metadata) throws org.xml.sax.SAXException, java.io.IOException, org.apache.tika.exception.TikaException
    {
        java.lang.Throwable $r23;
        byte[] r0;
        org.apache.tika.extractor.EmbeddedDocumentExtractor r3;
        org.apache.tika.metadata.Metadata r1;
        org.apache.tika.metadata.Property $r22;
        java.util.concurrent.atomic.AtomicInteger $r11;
        int $i0, $i1, $i2, $i3;
        org.apache.tika.io.TikaInputStream $r4;
        java.lang.String $r2, $r5, $r8, $r14, $r21;
        org.xml.sax.ContentHandler r6;
        org.apache.tika.sax.EmbeddedContentHandler $r24;
        org.apache.tika.parser.rtf.RTFEmbObjHandler$EMB_STATE $r15, $r16;
        boolean $z0, $z1;
        org.apache.tika.parser.rtf.RTFEmbObjHandler r7;
        java.lang.StringBuilder $r9, $r10, $r12, $r13, $r17, $r18, $r19, $r20;

        r7 := @this: org.apache.tika.parser.rtf.RTFEmbObjHandler;

        r0 := @parameter0: byte[];

        r6 := @parameter1: org.xml.sax.ContentHandler;

        r3 := @parameter2: org.apache.tika.extractor.EmbeddedDocumentExtractor;

        r1 := @parameter3: org.apache.tika.metadata.Metadata;

        if r0 != null goto label1;

        return;

     label1:
        $i0 = lengthof r0;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke r1.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("Content-Length", $r2);

        $z0 = interfaceinvoke r3.<org.apache.tika.extractor.EmbeddedDocumentExtractor: boolean shouldParseEmbedded(org.apache.tika.metadata.Metadata)>(r1);

        if $z0 == 0 goto label7;

        $r4 = staticinvoke <org.apache.tika.io.TikaInputStream: org.apache.tika.io.TikaInputStream get(byte[])>(r0);

        $r5 = virtualinvoke r1.<org.apache.tika.metadata.Metadata: java.lang.String get(java.lang.String)>("resourceName");

        if $r5 != null goto label3;

        $r8 = specialinvoke r7.<org.apache.tika.parser.rtf.RTFEmbObjHandler: java.lang.String getExtension(org.apache.tika.io.TikaInputStream,org.apache.tika.metadata.Metadata)>($r4, r1);

        virtualinvoke $r4.<org.apache.tika.io.TikaInputStream: void reset()>();

        $z1 = r7.<org.apache.tika.parser.rtf.RTFEmbObjHandler: boolean inObject>;

        if $z1 == 0 goto label2;

        $r16 = r7.<org.apache.tika.parser.rtf.RTFEmbObjHandler: org.apache.tika.parser.rtf.RTFEmbObjHandler$EMB_STATE state>;

        $r15 = <org.apache.tika.parser.rtf.RTFEmbObjHandler$EMB_STATE: org.apache.tika.parser.rtf.RTFEmbObjHandler$EMB_STATE PICT>;

        if $r16 != $r15 goto label2;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("thumbnail_");

        $i2 = r7.<org.apache.tika.parser.rtf.RTFEmbObjHandler: int thumbCount>;

        $i3 = $i2 + 1;

        r7.<org.apache.tika.parser.rtf.RTFEmbObjHandler: int thumbCount> = $i3;

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("resourceName", $r21);

        $r22 = <org.apache.tika.metadata.RTFMetadata: org.apache.tika.metadata.Property THUMBNAIL>;

        virtualinvoke r1.<org.apache.tika.metadata.Metadata: void set(org.apache.tika.metadata.Property,java.lang.String)>($r22, "true");

        goto label3;

     label2:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file_");

        $r11 = r7.<org.apache.tika.parser.rtf.RTFEmbObjHandler: java.util.concurrent.atomic.AtomicInteger unknownFilenameCount>;

        $i1 = virtualinvoke $r11.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("resourceName", $r14);

     label3:
        $r24 = new org.apache.tika.sax.EmbeddedContentHandler;

        specialinvoke $r24.<org.apache.tika.sax.EmbeddedContentHandler: void <init>(org.xml.sax.ContentHandler)>(r6);

        interfaceinvoke r3.<org.apache.tika.extractor.EmbeddedDocumentExtractor: void parseEmbedded(java.io.InputStream,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,boolean)>($r4, $r24, r1, 0);

     label4:
        virtualinvoke $r4.<org.apache.tika.io.TikaInputStream: void close()>();

        goto label7;

     label5:
        $r23 := @caughtexception;

     label6:
        virtualinvoke $r4.<org.apache.tika.io.TikaInputStream: void close()>();

        throw $r23;

     label7:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private java.lang.String getExtension(org.apache.tika.io.TikaInputStream, org.apache.tika.metadata.Metadata)
    {
        org.apache.tika.config.TikaConfig $r3;
        java.io.IOException $r13;
        org.apache.tika.detect.Detector $r4;
        org.apache.tika.mime.MediaType $r6;
        org.apache.tika.metadata.Metadata r0;
        org.apache.tika.parser.rtf.RTFEmbObjHandler r2;
        org.apache.tika.mime.MimeTypes $r7;
        org.apache.tika.io.TikaInputStream r5;
        java.lang.String $r1, $r8, $r10, $r11;
        org.apache.tika.mime.MimeTypeException $r12;
        org.apache.tika.mime.MimeType $r9;

        r2 := @this: org.apache.tika.parser.rtf.RTFEmbObjHandler;

        r5 := @parameter0: org.apache.tika.io.TikaInputStream;

        r0 := @parameter1: org.apache.tika.metadata.Metadata;

        $r1 = virtualinvoke r0.<org.apache.tika.metadata.Metadata: java.lang.String get(java.lang.String)>("Content-Type");

        $r3 = specialinvoke r2.<org.apache.tika.parser.rtf.RTFEmbObjHandler: org.apache.tika.config.TikaConfig getConfig()>();

        if $r1 != null goto label5;

        $r4 = virtualinvoke $r3.<org.apache.tika.config.TikaConfig: org.apache.tika.detect.Detector getDetector()>();

     label1:
        $r6 = interfaceinvoke $r4.<org.apache.tika.detect.Detector: org.apache.tika.mime.MediaType detect(java.io.InputStream,org.apache.tika.metadata.Metadata)>(r5, r0);

        $r7 = virtualinvoke $r3.<org.apache.tika.config.TikaConfig: org.apache.tika.mime.MimeTypes getMimeRepository()>();

        $r8 = virtualinvoke $r6.<org.apache.tika.mime.MediaType: java.lang.String toString()>();

        $r9 = virtualinvoke $r7.<org.apache.tika.mime.MimeTypes: org.apache.tika.mime.MimeType forName(java.lang.String)>($r8);

        $r10 = virtualinvoke $r6.<org.apache.tika.mime.MediaType: java.lang.String getSubtype()>();

        virtualinvoke r0.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("Content-Type", $r10);

        $r11 = virtualinvoke $r9.<org.apache.tika.mime.MimeType: java.lang.String getExtension()>();

     label2:
        return $r11;

     label3:
        $r13 := @caughtexception;

        goto label5;

     label4:
        $r12 := @caughtexception;

     label5:
        return ".bin";

        catch java.io.IOException from label1 to label2 with label3;
        catch org.apache.tika.mime.MimeTypeException from label1 to label2 with label4;
    }

    private org.apache.tika.config.TikaConfig getConfig()
    {
        org.apache.tika.parser.rtf.RTFEmbObjHandler r0;
        org.apache.tika.parser.ParseContext $r1;
        java.lang.Object $r2;
        org.apache.tika.config.TikaConfig r3;

        r0 := @this: org.apache.tika.parser.rtf.RTFEmbObjHandler;

        $r1 = r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: org.apache.tika.parser.ParseContext context>;

        $r2 = virtualinvoke $r1.<org.apache.tika.parser.ParseContext: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/tika/config/TikaConfig;");

        r3 = (org.apache.tika.config.TikaConfig) $r2;

        if r3 != null goto label1;

        r3 = staticinvoke <org.apache.tika.config.TikaConfig: org.apache.tika.config.TikaConfig getDefaultConfig()>();

     label1:
        return r3;
    }

    protected void reset()
    {
        org.apache.tika.parser.rtf.RTFEmbObjHandler r0;
        org.apache.tika.metadata.Metadata $r5;
        java.io.ByteArrayOutputStream $r2;
        int $i1;
        java.lang.StringBuilder $r4;
        org.apache.tika.parser.rtf.RTFEmbObjHandler$EMB_STATE $r1;

        r0 := @this: org.apache.tika.parser.rtf.RTFEmbObjHandler;

        $r1 = <org.apache.tika.parser.rtf.RTFEmbObjHandler$EMB_STATE: org.apache.tika.parser.rtf.RTFEmbObjHandler$EMB_STATE NADA>;

        r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: org.apache.tika.parser.rtf.RTFEmbObjHandler$EMB_STATE state> = $r1;

        $r2 = r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: java.io.ByteArrayOutputStream os>;

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void reset()>();

        $r5 = new org.apache.tika.metadata.Metadata;

        specialinvoke $r5.<org.apache.tika.metadata.Metadata: void <init>()>();

        r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: org.apache.tika.metadata.Metadata metadata> = $r5;

        $i1 = (int) -1;

        r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: int hi> = $i1;

        r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: java.lang.String sv> = "";

        r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: java.lang.String sn> = "";

        $r4 = r0.<org.apache.tika.parser.rtf.RTFEmbObjHandler: java.lang.StringBuilder sb>;

        virtualinvoke $r4.<java.lang.StringBuilder: void setLength(int)>(0);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.tika.parser.rtf.RTFEmbObjHandler: java.lang.String EMPTY_STRING> = "";

        return;
    }
}
