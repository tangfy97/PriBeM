public class javax.servlet.ServletRequestWrapper extends java.lang.Object implements javax.servlet.ServletRequest
{
    private javax.servlet.ServletRequest request;

    public void <init>(javax.servlet.ServletRequest)
    {
        javax.servlet.ServletRequest r1;
        java.lang.IllegalArgumentException $r2;
        javax.servlet.ServletRequestWrapper r0;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        r1 := @parameter0: javax.servlet.ServletRequest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Request cannot be null");

        throw $r2;

     label1:
        r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request> = r1;

        return;
    }

    public javax.servlet.ServletRequest getRequest()
    {
        javax.servlet.ServletRequest $r1;
        javax.servlet.ServletRequestWrapper r0;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        $r1 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        return $r1;
    }

    public void setRequest(javax.servlet.ServletRequest)
    {
        javax.servlet.ServletRequest r0;
        java.lang.IllegalArgumentException $r2;
        javax.servlet.ServletRequestWrapper r1;

        r1 := @this: javax.servlet.ServletRequestWrapper;

        r0 := @parameter0: javax.servlet.ServletRequest;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Request cannot be null");

        throw $r2;

     label1:
        r1.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request> = r0;

        return;
    }

    public java.lang.Object getAttribute(java.lang.String)
    {
        javax.servlet.ServletRequest $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        javax.servlet.ServletRequestWrapper r0;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $r3 = interfaceinvoke $r2.<javax.servlet.ServletRequest: java.lang.Object getAttribute(java.lang.String)>(r1);

        return $r3;
    }

    public java.util.Enumeration getAttributeNames()
    {
        javax.servlet.ServletRequest $r1;
        javax.servlet.ServletRequestWrapper r0;
        java.util.Enumeration $r2;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        $r1 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $r2 = interfaceinvoke $r1.<javax.servlet.ServletRequest: java.util.Enumeration getAttributeNames()>();

        return $r2;
    }

    public java.lang.String getCharacterEncoding()
    {
        javax.servlet.ServletRequest $r1;
        java.lang.String $r2;
        javax.servlet.ServletRequestWrapper r0;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        $r1 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $r2 = interfaceinvoke $r1.<javax.servlet.ServletRequest: java.lang.String getCharacterEncoding()>();

        return $r2;
    }

    public void setCharacterEncoding(java.lang.String) throws java.io.UnsupportedEncodingException
    {
        javax.servlet.ServletRequest $r2;
        java.lang.String r1;
        javax.servlet.ServletRequestWrapper r0;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        interfaceinvoke $r2.<javax.servlet.ServletRequest: void setCharacterEncoding(java.lang.String)>(r1);

        return;
    }

    public int getContentLength()
    {
        int $i0;
        javax.servlet.ServletRequest $r1;
        javax.servlet.ServletRequestWrapper r0;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        $r1 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $i0 = interfaceinvoke $r1.<javax.servlet.ServletRequest: int getContentLength()>();

        return $i0;
    }

    public java.lang.String getContentType()
    {
        javax.servlet.ServletRequest $r1;
        java.lang.String $r2;
        javax.servlet.ServletRequestWrapper r0;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        $r1 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $r2 = interfaceinvoke $r1.<javax.servlet.ServletRequest: java.lang.String getContentType()>();

        return $r2;
    }

    public javax.servlet.ServletInputStream getInputStream() throws java.io.IOException
    {
        javax.servlet.ServletRequest $r1;
        javax.servlet.ServletRequestWrapper r0;
        javax.servlet.ServletInputStream $r2;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        $r1 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $r2 = interfaceinvoke $r1.<javax.servlet.ServletRequest: javax.servlet.ServletInputStream getInputStream()>();

        return $r2;
    }

    public java.lang.String getParameter(java.lang.String)
    {
        javax.servlet.ServletRequest $r2;
        java.lang.String r1, $r3;
        javax.servlet.ServletRequestWrapper r0;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $r3 = interfaceinvoke $r2.<javax.servlet.ServletRequest: java.lang.String getParameter(java.lang.String)>(r1);

        return $r3;
    }

    public java.util.Map getParameterMap()
    {
        javax.servlet.ServletRequest $r1;
        javax.servlet.ServletRequestWrapper r0;
        java.util.Map $r2;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        $r1 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $r2 = interfaceinvoke $r1.<javax.servlet.ServletRequest: java.util.Map getParameterMap()>();

        return $r2;
    }

    public java.util.Enumeration getParameterNames()
    {
        javax.servlet.ServletRequest $r1;
        javax.servlet.ServletRequestWrapper r0;
        java.util.Enumeration $r2;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        $r1 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $r2 = interfaceinvoke $r1.<javax.servlet.ServletRequest: java.util.Enumeration getParameterNames()>();

        return $r2;
    }

    public java.lang.String[] getParameterValues(java.lang.String)
    {
        javax.servlet.ServletRequest $r2;
        java.lang.String[] $r3;
        java.lang.String r1;
        javax.servlet.ServletRequestWrapper r0;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $r3 = interfaceinvoke $r2.<javax.servlet.ServletRequest: java.lang.String[] getParameterValues(java.lang.String)>(r1);

        return $r3;
    }

    public java.lang.String getProtocol()
    {
        javax.servlet.ServletRequest $r1;
        java.lang.String $r2;
        javax.servlet.ServletRequestWrapper r0;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        $r1 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $r2 = interfaceinvoke $r1.<javax.servlet.ServletRequest: java.lang.String getProtocol()>();

        return $r2;
    }

    public java.lang.String getScheme()
    {
        javax.servlet.ServletRequest $r1;
        java.lang.String $r2;
        javax.servlet.ServletRequestWrapper r0;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        $r1 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $r2 = interfaceinvoke $r1.<javax.servlet.ServletRequest: java.lang.String getScheme()>();

        return $r2;
    }

    public java.lang.String getServerName()
    {
        javax.servlet.ServletRequest $r1;
        java.lang.String $r2;
        javax.servlet.ServletRequestWrapper r0;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        $r1 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $r2 = interfaceinvoke $r1.<javax.servlet.ServletRequest: java.lang.String getServerName()>();

        return $r2;
    }

    public int getServerPort()
    {
        int $i0;
        javax.servlet.ServletRequest $r1;
        javax.servlet.ServletRequestWrapper r0;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        $r1 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $i0 = interfaceinvoke $r1.<javax.servlet.ServletRequest: int getServerPort()>();

        return $i0;
    }

    public java.io.BufferedReader getReader() throws java.io.IOException
    {
        javax.servlet.ServletRequest $r1;
        java.io.BufferedReader $r2;
        javax.servlet.ServletRequestWrapper r0;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        $r1 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $r2 = interfaceinvoke $r1.<javax.servlet.ServletRequest: java.io.BufferedReader getReader()>();

        return $r2;
    }

    public java.lang.String getRemoteAddr()
    {
        javax.servlet.ServletRequest $r1;
        java.lang.String $r2;
        javax.servlet.ServletRequestWrapper r0;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        $r1 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $r2 = interfaceinvoke $r1.<javax.servlet.ServletRequest: java.lang.String getRemoteAddr()>();

        return $r2;
    }

    public java.lang.String getRemoteHost()
    {
        javax.servlet.ServletRequest $r1;
        java.lang.String $r2;
        javax.servlet.ServletRequestWrapper r0;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        $r1 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $r2 = interfaceinvoke $r1.<javax.servlet.ServletRequest: java.lang.String getRemoteHost()>();

        return $r2;
    }

    public void setAttribute(java.lang.String, java.lang.Object)
    {
        javax.servlet.ServletRequest $r3;
        java.lang.Object r2;
        java.lang.String r1;
        javax.servlet.ServletRequestWrapper r0;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        interfaceinvoke $r3.<javax.servlet.ServletRequest: void setAttribute(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    public void removeAttribute(java.lang.String)
    {
        javax.servlet.ServletRequest $r2;
        java.lang.String r1;
        javax.servlet.ServletRequestWrapper r0;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        interfaceinvoke $r2.<javax.servlet.ServletRequest: void removeAttribute(java.lang.String)>(r1);

        return;
    }

    public java.util.Locale getLocale()
    {
        javax.servlet.ServletRequest $r1;
        javax.servlet.ServletRequestWrapper r0;
        java.util.Locale $r2;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        $r1 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $r2 = interfaceinvoke $r1.<javax.servlet.ServletRequest: java.util.Locale getLocale()>();

        return $r2;
    }

    public java.util.Enumeration getLocales()
    {
        javax.servlet.ServletRequest $r1;
        javax.servlet.ServletRequestWrapper r0;
        java.util.Enumeration $r2;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        $r1 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $r2 = interfaceinvoke $r1.<javax.servlet.ServletRequest: java.util.Enumeration getLocales()>();

        return $r2;
    }

    public boolean isSecure()
    {
        javax.servlet.ServletRequest $r1;
        javax.servlet.ServletRequestWrapper r0;
        boolean $z0;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        $r1 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $z0 = interfaceinvoke $r1.<javax.servlet.ServletRequest: boolean isSecure()>();

        return $z0;
    }

    public javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)
    {
        javax.servlet.ServletRequest $r2;
        javax.servlet.RequestDispatcher $r3;
        java.lang.String r1;
        javax.servlet.ServletRequestWrapper r0;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $r3 = interfaceinvoke $r2.<javax.servlet.ServletRequest: javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)>(r1);

        return $r3;
    }

    public java.lang.String getRealPath(java.lang.String)
    {
        javax.servlet.ServletRequest $r2;
        java.lang.String r1, $r3;
        javax.servlet.ServletRequestWrapper r0;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $r3 = interfaceinvoke $r2.<javax.servlet.ServletRequest: java.lang.String getRealPath(java.lang.String)>(r1);

        return $r3;
    }

    public int getRemotePort()
    {
        int $i0;
        javax.servlet.ServletRequest $r1;
        javax.servlet.ServletRequestWrapper r0;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        $r1 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $i0 = interfaceinvoke $r1.<javax.servlet.ServletRequest: int getRemotePort()>();

        return $i0;
    }

    public java.lang.String getLocalName()
    {
        javax.servlet.ServletRequest $r1;
        java.lang.String $r2;
        javax.servlet.ServletRequestWrapper r0;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        $r1 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $r2 = interfaceinvoke $r1.<javax.servlet.ServletRequest: java.lang.String getLocalName()>();

        return $r2;
    }

    public java.lang.String getLocalAddr()
    {
        javax.servlet.ServletRequest $r1;
        java.lang.String $r2;
        javax.servlet.ServletRequestWrapper r0;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        $r1 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $r2 = interfaceinvoke $r1.<javax.servlet.ServletRequest: java.lang.String getLocalAddr()>();

        return $r2;
    }

    public int getLocalPort()
    {
        int $i0;
        javax.servlet.ServletRequest $r1;
        javax.servlet.ServletRequestWrapper r0;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        $r1 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $i0 = interfaceinvoke $r1.<javax.servlet.ServletRequest: int getLocalPort()>();

        return $i0;
    }

    public javax.servlet.ServletContext getServletContext()
    {
        javax.servlet.ServletRequest $r1;
        javax.servlet.ServletContext $r2;
        javax.servlet.ServletRequestWrapper r0;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        $r1 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $r2 = interfaceinvoke $r1.<javax.servlet.ServletRequest: javax.servlet.ServletContext getServletContext()>();

        return $r2;
    }

    public javax.servlet.AsyncContext startAsync() throws java.lang.IllegalStateException
    {
        javax.servlet.AsyncContext $r2;
        javax.servlet.ServletRequest $r1;
        javax.servlet.ServletRequestWrapper r0;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        $r1 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $r2 = interfaceinvoke $r1.<javax.servlet.ServletRequest: javax.servlet.AsyncContext startAsync()>();

        return $r2;
    }

    public javax.servlet.AsyncContext startAsync(javax.servlet.ServletRequest, javax.servlet.ServletResponse) throws java.lang.IllegalStateException
    {
        javax.servlet.AsyncContext $r4;
        javax.servlet.ServletRequest r1, $r3;
        javax.servlet.ServletResponse r2;
        javax.servlet.ServletRequestWrapper r0;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        r1 := @parameter0: javax.servlet.ServletRequest;

        r2 := @parameter1: javax.servlet.ServletResponse;

        $r3 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $r4 = interfaceinvoke $r3.<javax.servlet.ServletRequest: javax.servlet.AsyncContext startAsync(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r1, r2);

        return $r4;
    }

    public boolean isAsyncStarted()
    {
        javax.servlet.ServletRequest $r1;
        javax.servlet.ServletRequestWrapper r0;
        boolean $z0;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        $r1 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $z0 = interfaceinvoke $r1.<javax.servlet.ServletRequest: boolean isAsyncStarted()>();

        return $z0;
    }

    public boolean isAsyncSupported()
    {
        javax.servlet.ServletRequest $r1;
        javax.servlet.ServletRequestWrapper r0;
        boolean $z0;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        $r1 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $z0 = interfaceinvoke $r1.<javax.servlet.ServletRequest: boolean isAsyncSupported()>();

        return $z0;
    }

    public javax.servlet.AsyncContext getAsyncContext()
    {
        javax.servlet.AsyncContext $r2;
        javax.servlet.ServletRequest $r1;
        javax.servlet.ServletRequestWrapper r0;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        $r1 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $r2 = interfaceinvoke $r1.<javax.servlet.ServletRequest: javax.servlet.AsyncContext getAsyncContext()>();

        return $r2;
    }

    public boolean isWrapperFor(javax.servlet.ServletRequest)
    {
        javax.servlet.ServletRequest r1, $r2, $r3, $r4;
        javax.servlet.ServletRequestWrapper r0, $r5;
        boolean $z0, $z1;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        r1 := @parameter0: javax.servlet.ServletRequest;

        $r2 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        if $r2 != r1 goto label1;

        return 1;

     label1:
        $r3 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $z0 = $r3 instanceof javax.servlet.ServletRequestWrapper;

        if $z0 == 0 goto label2;

        $r4 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $r5 = (javax.servlet.ServletRequestWrapper) $r4;

        $z1 = virtualinvoke $r5.<javax.servlet.ServletRequestWrapper: boolean isWrapperFor(javax.servlet.ServletRequest)>(r1);

        return $z1;

     label2:
        return 0;
    }

    public boolean isWrapperFor(java.lang.Class)
    {
        java.lang.String $r11, $r15, $r17;
        boolean $z0, $z1, $z2, $z3;
        javax.servlet.ServletRequest $r3, $r5, $r6;
        java.lang.IllegalArgumentException $r8;
        java.lang.Class r0, $r1, $r4, $r14;
        java.lang.StringBuilder $r9, $r10, $r12, $r13, $r16;
        javax.servlet.ServletRequestWrapper r2, $r7;

        r2 := @this: javax.servlet.ServletRequestWrapper;

        r0 := @parameter0: java.lang.Class;

        $r1 = class "Ljavax/servlet/ServletRequest;";

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 != 0 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Given class ");

        $r11 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not a subinterface of ");

        $r14 = class "Ljavax/servlet/ServletRequest;";

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r8;

     label1:
        $r3 = r2.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke r0.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r4);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $r5 = r2.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $z2 = $r5 instanceof javax.servlet.ServletRequestWrapper;

        if $z2 == 0 goto label3;

        $r6 = r2.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $r7 = (javax.servlet.ServletRequestWrapper) $r6;

        $z3 = virtualinvoke $r7.<javax.servlet.ServletRequestWrapper: boolean isWrapperFor(java.lang.Class)>(r0);

        return $z3;

     label3:
        return 0;
    }

    public javax.servlet.DispatcherType getDispatcherType()
    {
        javax.servlet.DispatcherType $r2;
        javax.servlet.ServletRequest $r1;
        javax.servlet.ServletRequestWrapper r0;

        r0 := @this: javax.servlet.ServletRequestWrapper;

        $r1 = r0.<javax.servlet.ServletRequestWrapper: javax.servlet.ServletRequest request>;

        $r2 = interfaceinvoke $r1.<javax.servlet.ServletRequest: javax.servlet.DispatcherType getDispatcherType()>();

        return $r2;
    }
}
