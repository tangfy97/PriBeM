public class org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter extends javax.swing.plaf.basic.BasicTextUI$BasicHighlighter
{
    private org.fife.ui.rtextarea.RTextArea textArea;
    private java.util.List markedOccurrences;
    private java.util.List parserHighlights;
    private static final java.awt.Color DEFAULT_PARSER_NOTICE_COLOR;

    public void <init>()
    {
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter;

        specialinvoke r0.<javax.swing.plaf.basic.BasicTextUI$BasicHighlighter: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: java.util.List markedOccurrences> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(0);

        r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: java.util.List parserHighlights> = $r2;

        return;
    }

    java.lang.Object addMarkedOccurrenceHighlight(int, int, org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter) throws javax.swing.text.BadLocationException
    {
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo $r5;
        org.fife.ui.rtextarea.RTextArea $r1, $r3, $r10;
        javax.swing.text.Position $r7, $r8;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter r0;
        org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter r6;
        java.util.List $r9;
        javax.swing.plaf.TextUI $r4;
        int i0, i1, $i2;
        javax.swing.text.Document $r2;

        r0 := @this: org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r6 := @parameter2: org.fife.ui.rsyntaxtextarea.MarkOccurrencesHighlightPainter;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: org.fife.ui.rtextarea.RTextArea textArea>;

        $r2 = virtualinvoke $r1.<org.fife.ui.rtextarea.RTextArea: javax.swing.text.Document getDocument()>();

        $r3 = r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: org.fife.ui.rtextarea.RTextArea textArea>;

        $r4 = virtualinvoke $r3.<org.fife.ui.rtextarea.RTextArea: javax.swing.plaf.TextUI getUI()>();

        $r5 = new org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo;

        specialinvoke $r5.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo: void <init>(org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$1)>(null);

        $r5.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$HighlightInfo: javax.swing.text.Highlighter$HighlightPainter painter> = r6;

        $r7 = interfaceinvoke $r2.<javax.swing.text.Document: javax.swing.text.Position createPosition(int)>(i0);

        staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$HighlightInfo: javax.swing.text.Position access$102(org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$HighlightInfo,javax.swing.text.Position)>($r5, $r7);

        $i2 = i1 - 1;

        $r8 = interfaceinvoke $r2.<javax.swing.text.Document: javax.swing.text.Position createPosition(int)>($i2);

        staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$HighlightInfo: javax.swing.text.Position access$202(org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$HighlightInfo,javax.swing.text.Position)>($r5, $r8);

        $r9 = r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: java.util.List markedOccurrences>;

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r10 = r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: org.fife.ui.rtextarea.RTextArea textArea>;

        virtualinvoke $r4.<javax.swing.plaf.TextUI: void damageRange(javax.swing.text.JTextComponent,int,int)>($r10, i0, i1);

        return $r5;
    }

    java.lang.Object addParserHighlight(org.fife.ui.rsyntaxtextarea.parser.ParserNotice, javax.swing.text.Highlighter$HighlightPainter) throws javax.swing.text.BadLocationException
    {
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo $r14;
        javax.swing.text.Position $r8, $r9;
        javax.swing.text.Highlighter$HighlightPainter r7;
        javax.swing.plaf.TextUI $r4;
        int $i0, $i1, $i2, $i3, i4, i5, $i7;
        org.fife.ui.rtextarea.RTextArea $r1, $r3, $r11;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter r0;
        org.fife.ui.rsyntaxtextarea.parser.ParserNotice r5;
        java.util.List $r10;
        javax.swing.text.Document $r2;
        javax.swing.text.Element $r12, $r13;

        r0 := @this: org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter;

        r5 := @parameter0: org.fife.ui.rsyntaxtextarea.parser.ParserNotice;

        r7 := @parameter1: javax.swing.text.Highlighter$HighlightPainter;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: org.fife.ui.rtextarea.RTextArea textArea>;

        $r2 = virtualinvoke $r1.<org.fife.ui.rtextarea.RTextArea: javax.swing.text.Document getDocument()>();

        $r3 = r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: org.fife.ui.rtextarea.RTextArea textArea>;

        $r4 = virtualinvoke $r3.<org.fife.ui.rtextarea.RTextArea: javax.swing.plaf.TextUI getUI()>();

        $i0 = interfaceinvoke r5.<org.fife.ui.rsyntaxtextarea.parser.ParserNotice: int getOffset()>();

        i4 = $i0;

        i5 = 0;

        $i7 = (int) -1;

        if $i0 != $i7 goto label2;

        $i2 = interfaceinvoke r5.<org.fife.ui.rsyntaxtextarea.parser.ParserNotice: int getLine()>();

        $r12 = interfaceinvoke $r2.<javax.swing.text.Document: javax.swing.text.Element getDefaultRootElement()>();

        if $i2 < 0 goto label1;

        $i3 = interfaceinvoke $r12.<javax.swing.text.Element: int getElementCount()>();

        if $i2 >= $i3 goto label1;

        $r13 = interfaceinvoke $r12.<javax.swing.text.Element: javax.swing.text.Element getElement(int)>($i2);

        i4 = interfaceinvoke $r13.<javax.swing.text.Element: int getStartOffset()>();

        i5 = interfaceinvoke $r13.<javax.swing.text.Element: int getEndOffset()>();

     label1:
        goto label3;

     label2:
        $i1 = interfaceinvoke r5.<org.fife.ui.rsyntaxtextarea.parser.ParserNotice: int getLength()>();

        i5 = $i0 + $i1;

     label3:
        $r14 = new org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo;

        specialinvoke $r14.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo: void <init>(org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$1)>(null);

        $r14.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$HighlightInfo: javax.swing.text.Highlighter$HighlightPainter painter> = r7;

        $r8 = interfaceinvoke $r2.<javax.swing.text.Document: javax.swing.text.Position createPosition(int)>(i4);

        staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$HighlightInfo: javax.swing.text.Position access$102(org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$HighlightInfo,javax.swing.text.Position)>($r14, $r8);

        $r9 = interfaceinvoke $r2.<javax.swing.text.Document: javax.swing.text.Position createPosition(int)>(i5);

        staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$HighlightInfo: javax.swing.text.Position access$202(org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$HighlightInfo,javax.swing.text.Position)>($r14, $r9);

        staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$HighlightInfo: org.fife.ui.rsyntaxtextarea.parser.ParserNotice access$302(org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$HighlightInfo,org.fife.ui.rsyntaxtextarea.parser.ParserNotice)>($r14, r5);

        $r10 = r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: java.util.List parserHighlights>;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r11 = r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: org.fife.ui.rtextarea.RTextArea textArea>;

        virtualinvoke $r4.<javax.swing.plaf.TextUI: void damageRange(javax.swing.text.JTextComponent,int,int)>($r11, i4, i5);

        return $r14;
    }

    void clearMarkOccurrencesHighlights()
    {
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter r0;
        java.util.List $r1, $r3;
        java.util.Iterator $r2;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: java.util.List markedOccurrences>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: void repaintListHighlight(java.lang.Object)>($r4);

        goto label1;

     label2:
        $r3 = r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: java.util.List markedOccurrences>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        return;
    }

    void clearParserHighlights()
    {
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter r0;
        java.util.List $r1, $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;

        r0 := @this: org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter;

        i1 = 0;

     label1:
        $r1 = r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: java.util.List parserHighlights>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r3 = r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: java.util.List parserHighlights>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1);

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: void repaintListHighlight(java.lang.Object)>($r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: java.util.List parserHighlights>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        return;
    }

    public void clearParserHighlights(org.fife.ui.rsyntaxtextarea.parser.Parser)
    {
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo r12;
        org.fife.ui.rsyntaxtextarea.parser.Parser $r6, r7;
        javax.swing.plaf.TextUI $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0, $z1;
        java.util.Iterator $r2;
        org.fife.ui.rtextarea.RTextArea $r8, $r10, $r11;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter r0;
        java.util.List $r1;
        org.fife.ui.rsyntaxtextarea.parser.ParserNotice $r5;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$HighlightInfo r4;
        java.lang.Object $r3;

        r0 := @this: org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter;

        r7 := @parameter0: org.fife.ui.rsyntaxtextarea.parser.Parser;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: java.util.List parserHighlights>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$HighlightInfo) $r3;

        $r5 = staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$HighlightInfo: org.fife.ui.rsyntaxtextarea.parser.ParserNotice access$300(org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$HighlightInfo)>(r4);

        $r6 = interfaceinvoke $r5.<org.fife.ui.rsyntaxtextarea.parser.ParserNotice: org.fife.ui.rsyntaxtextarea.parser.Parser getParser()>();

        if $r6 != r7 goto label5;

        $z1 = r4 instanceof org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo;

        if $z1 == 0 goto label3;

        r12 = (org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo) r4;

        $i2 = staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo: int access$400(org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo)>(r12);

        if $i2 <= 0 goto label2;

        $i3 = staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo: int access$500(org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo)>(r12);

        if $i3 <= 0 goto label2;

        $r11 = r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: org.fife.ui.rtextarea.RTextArea textArea>;

        $i4 = staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo: int access$600(org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo)>(r12);

        $i5 = staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo: int access$700(org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo)>(r12);

        $i6 = staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo: int access$400(org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo)>(r12);

        $i7 = staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo: int access$500(org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo)>(r12);

        virtualinvoke $r11.<org.fife.ui.rtextarea.RTextArea: void repaint(int,int,int,int)>($i4, $i5, $i6, $i7);

     label2:
        goto label4;

     label3:
        $r8 = r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: org.fife.ui.rtextarea.RTextArea textArea>;

        $r9 = virtualinvoke $r8.<org.fife.ui.rtextarea.RTextArea: javax.swing.plaf.TextUI getUI()>();

        $r10 = r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: org.fife.ui.rtextarea.RTextArea textArea>;

        $i0 = virtualinvoke r4.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$HighlightInfo: int getStartOffset()>();

        $i1 = virtualinvoke r4.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$HighlightInfo: int getEndOffset()>();

        virtualinvoke $r9.<javax.swing.plaf.TextUI: void damageRange(javax.swing.text.JTextComponent,int,int)>($r10, $i0, $i1);

     label4:
        interfaceinvoke $r2.<java.util.Iterator: void remove()>();

     label5:
        goto label1;

     label6:
        return;
    }

    public void deinstall(javax.swing.text.JTextComponent)
    {
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter r0;
        java.util.List $r1, $r2;
        javax.swing.text.JTextComponent r3;

        r0 := @this: org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter;

        r3 := @parameter0: javax.swing.text.JTextComponent;

        r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: org.fife.ui.rtextarea.RTextArea textArea> = null;

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: java.util.List markedOccurrences>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: java.util.List parserHighlights>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        return;
    }

    public java.util.List getMarkedOccurrences()
    {
        java.util.Iterator $r4;
        org.fife.ui.rsyntaxtextarea.DocumentRange $r7;
        java.util.ArrayList $r0;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter r1;
        java.util.List $r2, $r3;
        int $i0, $i1, $i2, i3;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$HighlightInfo r6;
        java.lang.Object $r5;
        boolean $z0;

        r1 := @this: org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: java.util.List markedOccurrences>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        $r3 = r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: java.util.List markedOccurrences>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$HighlightInfo) $r5;

        $i1 = virtualinvoke r6.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$HighlightInfo: int getStartOffset()>();

        $i2 = virtualinvoke r6.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$HighlightInfo: int getEndOffset()>();

        i3 = $i2 + 1;

        $r7 = new org.fife.ui.rsyntaxtextarea.DocumentRange;

        specialinvoke $r7.<org.fife.ui.rsyntaxtextarea.DocumentRange: void <init>(int,int)>($i1, i3);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label1;

     label2:
        return $r0;
    }

    public void install(javax.swing.text.JTextComponent)
    {
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter r0;
        javax.swing.text.JTextComponent r1;
        org.fife.ui.rtextarea.RTextArea $r2;

        r0 := @this: org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter;

        r1 := @parameter0: javax.swing.text.JTextComponent;

        specialinvoke r0.<javax.swing.plaf.basic.BasicTextUI$BasicHighlighter: void install(javax.swing.text.JTextComponent)>(r1);

        $r2 = (org.fife.ui.rtextarea.RTextArea) r1;

        r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: org.fife.ui.rtextarea.RTextArea textArea> = $r2;

        return;
    }

    public void paint(java.awt.Graphics)
    {
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter r0;
        java.util.List $r2, $r3;
        java.awt.Graphics r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter;

        r1 := @parameter0: java.awt.Graphics;

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: java.util.List markedOccurrences>;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: void paintList(java.awt.Graphics,java.util.List)>(r1, $r2);

        specialinvoke r0.<javax.swing.plaf.basic.BasicTextUI$BasicHighlighter: void paint(java.awt.Graphics)>(r1);

        $r3 = r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: java.util.List parserHighlights>;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: void paintList(java.awt.Graphics,java.util.List)>(r1, $r3);

        return;
    }

    private void paintList(java.awt.Graphics, java.util.List)
    {
        java.awt.Color $r9;
        boolean $z0, $z1, $z2;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter r2;
        java.util.List r0, $r7;
        java.awt.Graphics r11;
        java.awt.Rectangle $r4;
        java.awt.Insets $r6;
        org.fife.ui.rsyntaxtextarea.ChangeableColorHighlightPainter $r12;
        javax.swing.text.Highlighter$HighlightPainter $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, $i14, $i15;
        org.fife.ui.rtextarea.RTextArea $r3, $r5, $r15;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$HighlightInfo r13, r14;
        java.lang.Object $r1, $r8;

        r2 := @this: org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter;

        r11 := @parameter0: java.awt.Graphics;

        r0 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        i13 = 0;

     label1:
        if i13 >= $i0 goto label6;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i13);

        r13 = (org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$HighlightInfo) $r1;

        $z0 = r13 instanceof org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo;

        if $z0 != 0 goto label5;

        $r3 = r2.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: org.fife.ui.rtextarea.RTextArea textArea>;

        $r4 = virtualinvoke $r3.<org.fife.ui.rtextarea.RTextArea: java.awt.Rectangle getBounds()>();

        $r5 = r2.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: org.fife.ui.rtextarea.RTextArea textArea>;

        $r6 = virtualinvoke $r5.<org.fife.ui.rtextarea.RTextArea: java.awt.Insets getInsets()>();

        $i1 = $r6.<java.awt.Insets: int left>;

        $r4.<java.awt.Rectangle: int x> = $i1;

        $i2 = $r6.<java.awt.Insets: int top>;

        $r4.<java.awt.Rectangle: int y> = $i2;

        $i6 = $r4.<java.awt.Rectangle: int width>;

        $i4 = $r6.<java.awt.Insets: int left>;

        $i3 = $r6.<java.awt.Insets: int right>;

        $i5 = $i4 + $i3;

        $i7 = $i6 - $i5;

        $r4.<java.awt.Rectangle: int width> = $i7;

        $i11 = $r4.<java.awt.Rectangle: int height>;

        $i9 = $r6.<java.awt.Insets: int top>;

        $i8 = $r6.<java.awt.Insets: int bottom>;

        $i10 = $i9 + $i8;

        $i12 = $i11 - $i10;

        $r4.<java.awt.Rectangle: int height> = $i12;

     label2:
        if i13 >= $i0 goto label5;

        $r7 = r2.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: java.util.List markedOccurrences>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i13);

        r14 = (org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$HighlightInfo) $r8;

        $z1 = r14 instanceof org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo;

        if $z1 != 0 goto label4;

        $r9 = virtualinvoke r14.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$HighlightInfo: java.awt.Color getColor()>();

        $r10 = virtualinvoke r14.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$HighlightInfo: javax.swing.text.Highlighter$HighlightPainter getPainter()>();

        if $r9 == null goto label3;

        $z2 = $r10 instanceof org.fife.ui.rsyntaxtextarea.ChangeableColorHighlightPainter;

        if $z2 == 0 goto label3;

        $r12 = (org.fife.ui.rsyntaxtextarea.ChangeableColorHighlightPainter) $r10;

        virtualinvoke $r12.<org.fife.ui.rsyntaxtextarea.ChangeableColorHighlightPainter: void setColor(java.awt.Color)>($r9);

     label3:
        $i14 = virtualinvoke r14.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$HighlightInfo: int getStartOffset()>();

        $i15 = virtualinvoke r14.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$HighlightInfo: int getEndOffset()>();

        $r15 = r2.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: org.fife.ui.rtextarea.RTextArea textArea>;

        interfaceinvoke $r10.<javax.swing.text.Highlighter$HighlightPainter: void paint(java.awt.Graphics,int,int,java.awt.Shape,javax.swing.text.JTextComponent)>(r11, $i14, $i15, $r4, $r15);

     label4:
        i13 = i13 + 1;

        goto label2;

     label5:
        i13 = i13 + 1;

        goto label1;

     label6:
        return;
    }

    public void paintLayeredHighlights(java.awt.Graphics, int, int, java.awt.Shape, javax.swing.text.JTextComponent, javax.swing.text.View)
    {
        java.awt.Shape r2;
        javax.swing.text.JTextComponent r3;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter r0;
        java.util.List $r5, $r6;
        java.awt.Graphics r1;
        int i0, i1;
        javax.swing.text.View r4;

        r0 := @this: org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter;

        r1 := @parameter0: java.awt.Graphics;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.awt.Shape;

        r3 := @parameter4: javax.swing.text.JTextComponent;

        r4 := @parameter5: javax.swing.text.View;

        $r5 = r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: java.util.List markedOccurrences>;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: void paintListLayered(java.awt.Graphics,int,int,java.awt.Shape,javax.swing.text.JTextComponent,javax.swing.text.View,java.util.List)>(r1, i0, i1, r2, r3, r4, $r5);

        specialinvoke r0.<javax.swing.plaf.basic.BasicTextUI$BasicHighlighter: void paintLayeredHighlights(java.awt.Graphics,int,int,java.awt.Shape,javax.swing.text.JTextComponent,javax.swing.text.View)>(r1, i0, i1, r2, r3, r4);

        $r6 = r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: java.util.List parserHighlights>;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: void paintListLayered(java.awt.Graphics,int,int,java.awt.Shape,javax.swing.text.JTextComponent,javax.swing.text.View,java.util.List)>(r1, i0, i1, r2, r3, r4, $r6);

        return;
    }

    private void paintListLayered(java.awt.Graphics, int, int, java.awt.Shape, javax.swing.text.JTextComponent, javax.swing.text.View, java.util.List)
    {
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo r2;
        int $i0, $i1, $i2, i3, i4, i5, $i7;
        boolean $z0;
        java.awt.Shape r4;
        javax.swing.text.JTextComponent r5;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter r7;
        java.util.List r0;
        java.awt.Graphics r3;
        javax.swing.text.View r6;
        java.lang.Object $r1;

        r7 := @this: org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter;

        r3 := @parameter0: java.awt.Graphics;

        i3 := @parameter1: int;

        i4 := @parameter2: int;

        r4 := @parameter3: java.awt.Shape;

        r5 := @parameter4: javax.swing.text.JTextComponent;

        r6 := @parameter5: javax.swing.text.View;

        r0 := @parameter6: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        i5 = $i0 - 1;

     label1:
        if i5 < 0 goto label5;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i5);

        $z0 = $r1 instanceof org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo;

        if $z0 == 0 goto label4;

        r2 = (org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo) $r1;

        $i1 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo: int getStartOffset()>();

        $i2 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo: int getEndOffset()>();

        if i3 >= $i1 goto label2;

        if i4 > $i1 goto label3;

     label2:
        if i3 < $i1 goto label4;

        if i3 >= $i2 goto label4;

     label3:
        virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo: void paintLayeredHighlights(java.awt.Graphics,int,int,java.awt.Shape,javax.swing.text.JTextComponent,javax.swing.text.View)>(r3, i3, i4, r4, r5, r6);

     label4:
        $i7 = (int) -1;

        i5 = i5 + $i7;

        goto label1;

     label5:
        return;
    }

    private void repaintListHighlight(java.lang.Object)
    {
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo r6;
        javax.swing.plaf.TextUI $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;
        org.fife.ui.rtextarea.RTextArea $r2, $r4, $r5;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter r1;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$HighlightInfo r7;
        java.lang.Object r0;

        r1 := @this: org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo;

        if $z0 == 0 goto label2;

        r6 = (org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo) r0;

        $i2 = staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo: int access$400(org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo)>(r6);

        if $i2 <= 0 goto label1;

        $i3 = staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo: int access$500(org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo)>(r6);

        if $i3 <= 0 goto label1;

        $r5 = r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: org.fife.ui.rtextarea.RTextArea textArea>;

        $i4 = staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo: int access$600(org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo)>(r6);

        $i5 = staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo: int access$700(org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo)>(r6);

        $i6 = staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo: int access$400(org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo)>(r6);

        $i7 = staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo: int access$500(org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$LayeredHighlightInfo)>(r6);

        virtualinvoke $r5.<org.fife.ui.rtextarea.RTextArea: void repaint(int,int,int,int)>($i4, $i5, $i6, $i7);

     label1:
        goto label3;

     label2:
        r7 = (org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$HighlightInfo) r0;

        $r2 = r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: org.fife.ui.rtextarea.RTextArea textArea>;

        $r3 = virtualinvoke $r2.<org.fife.ui.rtextarea.RTextArea: javax.swing.plaf.TextUI getUI()>();

        $r4 = r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: org.fife.ui.rtextarea.RTextArea textArea>;

        $i0 = virtualinvoke r7.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$HighlightInfo: int getStartOffset()>();

        $i1 = virtualinvoke r7.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter$HighlightInfo: int getEndOffset()>();

        virtualinvoke $r3.<javax.swing.plaf.TextUI: void damageRange(javax.swing.text.JTextComponent,int,int)>($r4, $i0, $i1);

     label3:
        return;
    }

    void removeParserHighlight(java.lang.Object)
    {
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter r0;
        java.lang.Object r1;
        java.util.List $r2;

        r0 := @this: org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: void repaintListHighlight(java.lang.Object)>(r1);

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: java.util.List parserHighlights>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return;
    }

    static java.awt.Color access$800()
    {
        java.awt.Color $r0;

        $r0 = <org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: java.awt.Color DEFAULT_PARSER_NOTICE_COLOR>;

        return $r0;
    }

    static void <clinit>()
    {
        java.awt.Color $r0;

        $r0 = <java.awt.Color: java.awt.Color RED>;

        <org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: java.awt.Color DEFAULT_PARSER_NOTICE_COLOR> = $r0;

        return;
    }
}
