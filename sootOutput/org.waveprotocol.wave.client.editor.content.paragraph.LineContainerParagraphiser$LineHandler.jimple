public class org.waveprotocol.wave.client.editor.content.paragraph.LineContainerParagraphiser$LineHandler extends org.waveprotocol.wave.client.editor.RenderingMutationHandler implements org.waveprotocol.wave.client.editor.content.ContentDocument$PermanentMutationHandler
{
    final org.waveprotocol.wave.client.editor.content.paragraph.LineContainerParagraphiser this$0;

    public void <init>(org.waveprotocol.wave.client.editor.content.paragraph.LineContainerParagraphiser)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.LineContainerParagraphiser$LineHandler r0;
        org.waveprotocol.wave.client.editor.content.paragraph.LineContainerParagraphiser r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.LineContainerParagraphiser$LineHandler;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.paragraph.LineContainerParagraphiser;

        r0.<org.waveprotocol.wave.client.editor.content.paragraph.LineContainerParagraphiser$LineHandler: org.waveprotocol.wave.client.editor.content.paragraph.LineContainerParagraphiser this$0> = r1;

        specialinvoke r0.<org.waveprotocol.wave.client.editor.RenderingMutationHandler: void <init>()>();

        return;
    }

    public com.google.gwt.dom.client.Element createDomImpl(org.waveprotocol.wave.client.editor.content.Renderer$Renderable)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.LineContainerParagraphiser$LineHandler r0;
        org.waveprotocol.wave.client.editor.content.Renderer$Renderable r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.LineContainerParagraphiser$LineHandler;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.Renderer$Renderable;

        return null;
    }

    public void onActivationStart(org.waveprotocol.wave.client.editor.content.ContentElement)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.LineContainerParagraphiser$LineHandler r0;
        org.waveprotocol.wave.client.editor.content.ContentElement r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.LineContainerParagraphiser$LineHandler;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.LineContainerParagraphiser$LineHandler: void fanoutAttrs(org.waveprotocol.wave.client.editor.content.ContentElement)>(r1);

        return;
    }

    public void onAttributeModified(org.waveprotocol.wave.client.editor.content.ContentElement, java.lang.String, java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.model.document.util.LocalDocument $r3;
        org.waveprotocol.wave.client.editor.content.paragraph.LineContainerParagraphiser$LineHandler r8;
        org.waveprotocol.wave.client.editor.content.ClientDocumentContext $r2;
        org.waveprotocol.wave.client.editor.content.ContentElement r0, $r5;
        org.waveprotocol.wave.client.editor.content.paragraph.Line $r1, $r4;
        java.lang.String r6, r7, r9;

        r8 := @this: org.waveprotocol.wave.client.editor.content.paragraph.LineContainerParagraphiser$LineHandler;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        r6 := @parameter1: java.lang.String;

        r9 := @parameter2: java.lang.String;

        r7 := @parameter3: java.lang.String;

        $r1 = staticinvoke <org.waveprotocol.wave.client.editor.content.paragraph.Line: org.waveprotocol.wave.client.editor.content.paragraph.Line fromLineElement(org.waveprotocol.wave.client.editor.content.ContentElement)>(r0);

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentElement: org.waveprotocol.wave.client.editor.content.ClientDocumentContext getContext()>();

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.client.editor.content.ClientDocumentContext: org.waveprotocol.wave.model.document.util.LocalDocument annotatableContent()>();

        $r4 = staticinvoke <org.waveprotocol.wave.client.editor.content.paragraph.Line: org.waveprotocol.wave.client.editor.content.paragraph.Line fromLineElement(org.waveprotocol.wave.client.editor.content.ContentElement)>(r0);

        $r5 = virtualinvoke $r4.<org.waveprotocol.wave.client.editor.content.paragraph.Line: org.waveprotocol.wave.client.editor.content.ContentElement getParagraph()>();

        interfaceinvoke $r3.<org.waveprotocol.wave.model.document.util.LocalDocument: void transparentSetAttribute(java.lang.Object,java.lang.String,java.lang.String)>($r5, r6, r7);

        return;
    }

    public void onAddedToParent(org.waveprotocol.wave.client.editor.content.ContentElement, org.waveprotocol.wave.client.editor.content.ContentElement)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.LineContainerParagraphiser$LineHandler r0;
        org.waveprotocol.wave.client.editor.content.paragraph.LineContainerParagraphiser $r2;
        org.waveprotocol.wave.client.editor.content.ContentElement r1, $r5, r6;
        java.lang.Object $r4;
        org.waveprotocol.wave.client.editor.content.CMutableDocument $r3;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.LineContainerParagraphiser$LineHandler;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        r6 := @parameter1: org.waveprotocol.wave.client.editor.content.ContentElement;

        $r2 = r0.<org.waveprotocol.wave.client.editor.content.paragraph.LineContainerParagraphiser$LineHandler: org.waveprotocol.wave.client.editor.content.paragraph.LineContainerParagraphiser this$0>;

        $r3 = virtualinvoke r1.<org.waveprotocol.wave.client.editor.content.ContentElement: org.waveprotocol.wave.client.editor.content.CMutableDocument getMutableDoc()>();

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.client.editor.content.CMutableDocument: java.lang.Object getParentElement(java.lang.Object)>(r1);

        $r5 = (org.waveprotocol.wave.client.editor.content.ContentElement) $r4;

        virtualinvoke $r2.<org.waveprotocol.wave.client.editor.content.paragraph.LineContainerParagraphiser: void handleNewChild(org.waveprotocol.wave.client.editor.content.ContentElement,org.waveprotocol.wave.client.editor.content.ContentNode)>($r5, r1);

        return;
    }

    public volatile void onAttributeModified(java.lang.Object, java.lang.String, java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.LineContainerParagraphiser$LineHandler r0;
        java.lang.Object r1;
        org.waveprotocol.wave.client.editor.content.ContentElement $r5;
        java.lang.String r2, r3, r4;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.LineContainerParagraphiser$LineHandler;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r5 = (org.waveprotocol.wave.client.editor.content.ContentElement) r1;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.LineContainerParagraphiser$LineHandler: void onAttributeModified(org.waveprotocol.wave.client.editor.content.ContentElement,java.lang.String,java.lang.String,java.lang.String)>($r5, r2, r3, r4);

        return;
    }

    public volatile void onAddedToParent(java.lang.Object, java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.LineContainerParagraphiser$LineHandler r0;
        java.lang.Object r1, r2;
        org.waveprotocol.wave.client.editor.content.ContentElement $r3, $r4;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.LineContainerParagraphiser$LineHandler;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.waveprotocol.wave.client.editor.content.ContentElement) r1;

        $r3 = (org.waveprotocol.wave.client.editor.content.ContentElement) r2;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.LineContainerParagraphiser$LineHandler: void onAddedToParent(org.waveprotocol.wave.client.editor.content.ContentElement,org.waveprotocol.wave.client.editor.content.ContentElement)>($r4, $r3);

        return;
    }

    public volatile void onActivationStart(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.LineContainerParagraphiser$LineHandler r0;
        java.lang.Object r1;
        org.waveprotocol.wave.client.editor.content.ContentElement $r2;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.LineContainerParagraphiser$LineHandler;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.client.editor.content.ContentElement) r1;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.LineContainerParagraphiser$LineHandler: void onActivationStart(org.waveprotocol.wave.client.editor.content.ContentElement)>($r2);

        return;
    }
}
