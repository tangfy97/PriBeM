class org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorChildren extends org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase
{

    public void <init>(org.apache.commons.jxpath.ri.model.NodePointer, org.apache.commons.jxpath.ri.compiler.NodeTest, boolean, org.apache.commons.jxpath.ri.model.NodePointer)
    {
        org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorChildren r0;
        org.apache.commons.configuration.tree.ConfigurationNode r3, $r8;
        org.apache.commons.jxpath.ri.compiler.NodeTest r4;
        java.util.List $r5;
        org.apache.commons.jxpath.ri.model.NodePointer r1, r6;
        int $i0;
        java.lang.Object $r2, $r7;
        boolean z0;

        r0 := @this: org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorChildren;

        r1 := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer;

        r4 := @parameter1: org.apache.commons.jxpath.ri.compiler.NodeTest;

        z0 := @parameter2: boolean;

        r6 := @parameter3: org.apache.commons.jxpath.ri.model.NodePointer;

        specialinvoke r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorBase: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,boolean)>(r1, z0);

        $r2 = virtualinvoke r1.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getNode()>();

        r3 = (org.apache.commons.configuration.tree.ConfigurationNode) $r2;

        $r5 = virtualinvoke r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorChildren: java.util.List createSubNodeList(org.apache.commons.configuration.tree.ConfigurationNode,org.apache.commons.jxpath.ri.compiler.NodeTest)>(r3, r4);

        virtualinvoke r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorChildren: void initSubNodeList(java.util.List)>($r5);

        if r6 == null goto label1;

        $r7 = virtualinvoke r6.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getNode()>();

        $r8 = (org.apache.commons.configuration.tree.ConfigurationNode) $r7;

        $i0 = virtualinvoke r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorChildren: int findStartIndex(org.apache.commons.configuration.tree.ConfigurationNode,org.apache.commons.configuration.tree.ConfigurationNode)>(r3, $r8);

        virtualinvoke r0.<org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorChildren: void setStartOffset(int)>($i0);

     label1:
        return;
    }

    protected java.util.List createSubNodeList(org.apache.commons.configuration.tree.ConfigurationNode, org.apache.commons.jxpath.ri.compiler.NodeTest)
    {
        org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorChildren r11;
        java.util.ArrayList $r5;
        org.apache.commons.jxpath.ri.compiler.NodeTest r2;
        int $i0, $i1;
        java.lang.String $r4, $r9, $r10;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Iterator $r6;
        org.apache.commons.jxpath.ri.QName $r3;
        org.apache.commons.jxpath.ri.compiler.NodeNameTest r12;
        org.apache.commons.configuration.tree.ConfigurationNode r0, r8;
        org.apache.commons.jxpath.ri.compiler.NodeTypeTest r13;
        java.util.List $r1, $r14;
        java.lang.Object $r7;

        r11 := @this: org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorChildren;

        r0 := @parameter0: org.apache.commons.configuration.tree.ConfigurationNode;

        r2 := @parameter1: org.apache.commons.jxpath.ri.compiler.NodeTest;

        $r1 = interfaceinvoke r0.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren()>();

        if r2 != null goto label1;

        return $r1;

     label1:
        $z0 = r2 instanceof org.apache.commons.jxpath.ri.compiler.NodeNameTest;

        if $z0 == 0 goto label7;

        r12 = (org.apache.commons.jxpath.ri.compiler.NodeNameTest) r2;

        $r3 = virtualinvoke r12.<org.apache.commons.jxpath.ri.compiler.NodeNameTest: org.apache.commons.jxpath.ri.QName getNodeName()>();

        $r4 = virtualinvoke $r3.<org.apache.commons.jxpath.ri.QName: java.lang.String getPrefix()>();

        if $r4 != null goto label6;

        $z2 = virtualinvoke r12.<org.apache.commons.jxpath.ri.compiler.NodeNameTest: boolean isWildcard()>();

        if $z2 == 0 goto label2;

        return $r1;

     label2:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.commons.configuration.tree.ConfigurationNode) $r7;

        $r9 = virtualinvoke $r3.<org.apache.commons.jxpath.ri.QName: java.lang.String getName()>();

        $r10 = interfaceinvoke r8.<org.apache.commons.configuration.tree.ConfigurationNode: java.lang.String getName()>();

        $z4 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equals(java.lang.String,java.lang.String)>($r9, $r10);

        if $z4 == 0 goto label4;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r8);

     label4:
        goto label3;

     label5:
        return $r5;

     label6:
        goto label9;

     label7:
        $z1 = r2 instanceof org.apache.commons.jxpath.ri.compiler.NodeTypeTest;

        if $z1 == 0 goto label9;

        r13 = (org.apache.commons.jxpath.ri.compiler.NodeTypeTest) r2;

        $i0 = virtualinvoke r13.<org.apache.commons.jxpath.ri.compiler.NodeTypeTest: int getNodeType()>();

        if $i0 == 1 goto label8;

        $i1 = virtualinvoke r13.<org.apache.commons.jxpath.ri.compiler.NodeTypeTest: int getNodeType()>();

        if $i1 != 2 goto label9;

     label8:
        return $r1;

     label9:
        $r14 = <java.util.Collections: java.util.List EMPTY_LIST>;

        return $r14;
    }

    protected int findStartIndex(org.apache.commons.configuration.tree.ConfigurationNode, org.apache.commons.configuration.tree.ConfigurationNode)
    {
        org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorChildren r3;
        int $i0, i1, $i3;
        org.apache.commons.configuration.tree.ConfigurationNode r0, $r1, r2;

        r3 := @this: org.apache.commons.configuration.tree.xpath.ConfigurationNodeIteratorChildren;

        r0 := @parameter0: org.apache.commons.configuration.tree.ConfigurationNode;

        r2 := @parameter1: org.apache.commons.configuration.tree.ConfigurationNode;

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r0.<org.apache.commons.configuration.tree.ConfigurationNode: int getChildrenCount()>();

        if i1 >= $i0 goto label3;

        $r1 = interfaceinvoke r0.<org.apache.commons.configuration.tree.ConfigurationNode: org.apache.commons.configuration.tree.ConfigurationNode getChild(int)>(i1);

        if $r1 != r2 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $i3 = (int) -1;

        return $i3;
    }
}
