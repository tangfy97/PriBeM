public abstract class org.apache.http.impl.cookie.CookieSpecBase extends org.apache.http.impl.cookie.AbstractCookieSpec
{

    public void <init>()
    {
        org.apache.http.impl.cookie.CookieSpecBase r0;

        r0 := @this: org.apache.http.impl.cookie.CookieSpecBase;

        specialinvoke r0.<org.apache.http.impl.cookie.AbstractCookieSpec: void <init>()>();

        return;
    }

    protected static java.lang.String getDefaultPath(org.apache.http.cookie.CookieOrigin)
    {
        org.apache.http.cookie.CookieOrigin r0;
        int $i0, i1;
        java.lang.String $r1, r2;

        r0 := @parameter0: org.apache.http.cookie.CookieOrigin;

        $r1 = virtualinvoke r0.<org.apache.http.cookie.CookieOrigin: java.lang.String getPath()>();

        r2 = $r1;

        $i0 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int)>(47);

        i1 = $i0;

        if $i0 < 0 goto label2;

        if $i0 != 0 goto label1;

        i1 = 1;

     label1:
        r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

     label2:
        return r2;
    }

    protected static java.lang.String getDefaultDomain(org.apache.http.cookie.CookieOrigin)
    {
        java.lang.String $r1;
        org.apache.http.cookie.CookieOrigin r0;

        r0 := @parameter0: org.apache.http.cookie.CookieOrigin;

        $r1 = virtualinvoke r0.<org.apache.http.cookie.CookieOrigin: java.lang.String getHost()>();

        return $r1;
    }

    protected java.util.List parse(org.apache.http.HeaderElement[], org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.HeaderElement[] r1;
        org.apache.http.NameValuePair[] $r10;
        java.util.ArrayList $r19;
        org.apache.http.impl.cookie.CookieSpecBase r16;
        org.apache.http.cookie.MalformedCookieException $r20;
        java.util.Locale $r13;
        int $i0, i1, $i2, $i3, i4, i5, $i7;
        java.lang.String $r3, $r4, $r8, $r9, $r12, $r14, $r15, $r18;
        org.apache.http.impl.cookie.BasicClientCookie $r21;
        org.apache.http.cookie.CookieOrigin r7;
        org.apache.http.HeaderElement r2;
        org.apache.http.cookie.CookieAttributeHandler $r17;
        org.apache.http.NameValuePair r11;

        r16 := @this: org.apache.http.impl.cookie.CookieSpecBase;

        r1 := @parameter0: org.apache.http.HeaderElement[];

        r7 := @parameter1: org.apache.http.cookie.CookieOrigin;

        $r19 = new java.util.ArrayList;

        $i0 = lengthof r1;

        specialinvoke $r19.<java.util.ArrayList: void <init>(int)>($i0);

        i1 = lengthof r1;

        i4 = 0;

     label1:
        if i4 >= i1 goto label7;

        r2 = r1[i4];

        $r3 = interfaceinvoke r2.<org.apache.http.HeaderElement: java.lang.String getName()>();

        $r4 = interfaceinvoke r2.<org.apache.http.HeaderElement: java.lang.String getValue()>();

        if $r3 == null goto label2;

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i2 != 0 goto label3;

     label2:
        $r20 = new org.apache.http.cookie.MalformedCookieException;

        specialinvoke $r20.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>("Cookie name may not be empty");

        throw $r20;

     label3:
        $r21 = new org.apache.http.impl.cookie.BasicClientCookie;

        specialinvoke $r21.<org.apache.http.impl.cookie.BasicClientCookie: void <init>(java.lang.String,java.lang.String)>($r3, $r4);

        $r8 = staticinvoke <org.apache.http.impl.cookie.CookieSpecBase: java.lang.String getDefaultPath(org.apache.http.cookie.CookieOrigin)>(r7);

        virtualinvoke $r21.<org.apache.http.impl.cookie.BasicClientCookie: void setPath(java.lang.String)>($r8);

        $r9 = staticinvoke <org.apache.http.impl.cookie.CookieSpecBase: java.lang.String getDefaultDomain(org.apache.http.cookie.CookieOrigin)>(r7);

        virtualinvoke $r21.<org.apache.http.impl.cookie.BasicClientCookie: void setDomain(java.lang.String)>($r9);

        $r10 = interfaceinvoke r2.<org.apache.http.HeaderElement: org.apache.http.NameValuePair[] getParameters()>();

        $i3 = lengthof $r10;

        i5 = $i3 - 1;

     label4:
        if i5 < 0 goto label6;

        r11 = $r10[i5];

        $r12 = interfaceinvoke r11.<org.apache.http.NameValuePair: java.lang.String getName()>();

        $r13 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r14 = virtualinvoke $r12.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r13);

        $r15 = interfaceinvoke r11.<org.apache.http.NameValuePair: java.lang.String getValue()>();

        virtualinvoke $r21.<org.apache.http.impl.cookie.BasicClientCookie: void setAttribute(java.lang.String,java.lang.String)>($r14, $r15);

        $r17 = virtualinvoke r16.<org.apache.http.impl.cookie.CookieSpecBase: org.apache.http.cookie.CookieAttributeHandler findAttribHandler(java.lang.String)>($r14);

        if $r17 == null goto label5;

        $r18 = interfaceinvoke r11.<org.apache.http.NameValuePair: java.lang.String getValue()>();

        interfaceinvoke $r17.<org.apache.http.cookie.CookieAttributeHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)>($r21, $r18);

     label5:
        $i7 = (int) -1;

        i5 = i5 + $i7;

        goto label4;

     label6:
        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>($r21);

        i4 = i4 + 1;

        goto label1;

     label7:
        return $r19;
    }

    public void validate(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException
    {
        java.util.Iterator $r4;
        org.apache.http.cookie.CookieOrigin r1;
        java.util.Collection $r3;
        java.lang.IllegalArgumentException $r7, $r8;
        org.apache.http.cookie.CookieAttributeHandler r6;
        org.apache.http.impl.cookie.CookieSpecBase r2;
        org.apache.http.cookie.Cookie r0;
        java.lang.Object $r5;
        boolean $z0;

        r2 := @this: org.apache.http.impl.cookie.CookieSpecBase;

        r0 := @parameter0: org.apache.http.cookie.Cookie;

        r1 := @parameter1: org.apache.http.cookie.CookieOrigin;

        if r0 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r8;

     label1:
        if r1 != null goto label2;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r7;

     label2:
        $r3 = virtualinvoke r2.<org.apache.http.impl.cookie.CookieSpecBase: java.util.Collection getAttribHandlers()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.http.cookie.CookieAttributeHandler) $r5;

        interfaceinvoke r6.<org.apache.http.cookie.CookieAttributeHandler: void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>(r0, r1);

        goto label3;

     label4:
        return;
    }

    public boolean match(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)
    {
        java.util.Iterator $r4;
        org.apache.http.cookie.CookieOrigin r1;
        java.util.Collection $r3;
        java.lang.IllegalArgumentException $r7, $r8;
        org.apache.http.cookie.CookieAttributeHandler r6;
        org.apache.http.impl.cookie.CookieSpecBase r2;
        org.apache.http.cookie.Cookie r0;
        java.lang.Object $r5;
        boolean $z0, $z1;

        r2 := @this: org.apache.http.impl.cookie.CookieSpecBase;

        r0 := @parameter0: org.apache.http.cookie.Cookie;

        r1 := @parameter1: org.apache.http.cookie.CookieOrigin;

        if r0 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r8;

     label1:
        if r1 != null goto label2;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r7;

     label2:
        $r3 = virtualinvoke r2.<org.apache.http.impl.cookie.CookieSpecBase: java.util.Collection getAttribHandlers()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.http.cookie.CookieAttributeHandler) $r5;

        $z1 = interfaceinvoke r6.<org.apache.http.cookie.CookieAttributeHandler: boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>(r0, r1);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        goto label3;

     label5:
        return 1;
    }
}
