public class groovyjarjarasm.asm.tree.TableSwitchInsnNode extends groovyjarjarasm.asm.tree.AbstractInsnNode
{
    public int min;
    public int max;
    public groovyjarjarasm.asm.Label dflt;
    public final java.util.List labels;

    public void <init>(int, int, groovyjarjarasm.asm.Label, groovyjarjarasm.asm.Label[])
    {
        groovyjarjarasm.asm.Label[] r3;
        java.util.ArrayList $r2;
        java.util.List $r4, $r5;
        int i0, i1;
        groovyjarjarasm.asm.tree.TableSwitchInsnNode r0;
        groovyjarjarasm.asm.Label r1;

        r0 := @this: groovyjarjarasm.asm.tree.TableSwitchInsnNode;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: groovyjarjarasm.asm.Label;

        r3 := @parameter3: groovyjarjarasm.asm.Label[];

        specialinvoke r0.<groovyjarjarasm.asm.tree.AbstractInsnNode: void <init>(int)>(170);

        r0.<groovyjarjarasm.asm.tree.TableSwitchInsnNode: int min> = i0;

        r0.<groovyjarjarasm.asm.tree.TableSwitchInsnNode: int max> = i1;

        r0.<groovyjarjarasm.asm.tree.TableSwitchInsnNode: groovyjarjarasm.asm.Label dflt> = r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<groovyjarjarasm.asm.tree.TableSwitchInsnNode: java.util.List labels> = $r2;

        if r3 == null goto label1;

        $r4 = r0.<groovyjarjarasm.asm.tree.TableSwitchInsnNode: java.util.List labels>;

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r3);

        interfaceinvoke $r4.<java.util.List: boolean addAll(java.util.Collection)>($r5);

     label1:
        return;
    }

    public void accept(groovyjarjarasm.asm.MethodVisitor)
    {
        groovyjarjarasm.asm.Label[] r2;
        groovyjarjarasm.asm.MethodVisitor r4;
        java.util.List $r1, $r3;
        int $i0, $i1, $i2;
        groovyjarjarasm.asm.tree.TableSwitchInsnNode r0;
        groovyjarjarasm.asm.Label $r5;

        r0 := @this: groovyjarjarasm.asm.tree.TableSwitchInsnNode;

        r4 := @parameter0: groovyjarjarasm.asm.MethodVisitor;

        $r1 = r0.<groovyjarjarasm.asm.tree.TableSwitchInsnNode: java.util.List labels>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        r2 = newarray (groovyjarjarasm.asm.Label)[$i0];

        $r3 = r0.<groovyjarjarasm.asm.tree.TableSwitchInsnNode: java.util.List labels>;

        interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r2);

        $i2 = r0.<groovyjarjarasm.asm.tree.TableSwitchInsnNode: int min>;

        $i1 = r0.<groovyjarjarasm.asm.tree.TableSwitchInsnNode: int max>;

        $r5 = r0.<groovyjarjarasm.asm.tree.TableSwitchInsnNode: groovyjarjarasm.asm.Label dflt>;

        interfaceinvoke r4.<groovyjarjarasm.asm.MethodVisitor: void visitTableSwitchInsn(int,int,groovyjarjarasm.asm.Label,groovyjarjarasm.asm.Label[])>($i2, $i1, $r5, r2);

        return;
    }

    public int getType()
    {
        groovyjarjarasm.asm.tree.TableSwitchInsnNode r0;

        r0 := @this: groovyjarjarasm.asm.tree.TableSwitchInsnNode;

        return 10;
    }
}
