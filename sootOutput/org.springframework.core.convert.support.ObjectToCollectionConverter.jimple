final class org.springframework.core.convert.support.ObjectToCollectionConverter extends java.lang.Object implements org.springframework.core.convert.converter.ConditionalGenericConverter
{
    private final org.springframework.core.convert.ConversionService conversionService;

    public void <init>(org.springframework.core.convert.ConversionService)
    {
        org.springframework.core.convert.support.ObjectToCollectionConverter r0;
        org.springframework.core.convert.ConversionService r1;

        r0 := @this: org.springframework.core.convert.support.ObjectToCollectionConverter;

        r1 := @parameter0: org.springframework.core.convert.ConversionService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.core.convert.support.ObjectToCollectionConverter: org.springframework.core.convert.ConversionService conversionService> = r1;

        return;
    }

    public java.util.Set getConvertibleTypes()
    {
        org.springframework.core.convert.converter.GenericConverter$ConvertiblePair $r0;
        java.util.Set $r1;
        org.springframework.core.convert.support.ObjectToCollectionConverter r2;

        r2 := @this: org.springframework.core.convert.support.ObjectToCollectionConverter;

        $r0 = new org.springframework.core.convert.converter.GenericConverter$ConvertiblePair;

        specialinvoke $r0.<org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: void <init>(java.lang.Class,java.lang.Class)>(class "Ljava/lang/Object;", class "Ljava/util/Collection;");

        $r1 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r0);

        return $r1;
    }

    public boolean matches(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)
    {
        org.springframework.core.convert.TypeDescriptor r0, r1, $r2;
        org.springframework.core.convert.support.ObjectToCollectionConverter r3;
        org.springframework.core.convert.ConversionService $r4;
        boolean $z0;

        r3 := @this: org.springframework.core.convert.support.ObjectToCollectionConverter;

        r0 := @parameter0: org.springframework.core.convert.TypeDescriptor;

        r1 := @parameter1: org.springframework.core.convert.TypeDescriptor;

        $r2 = virtualinvoke r1.<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor getElementTypeDescriptor()>();

        $r4 = r3.<org.springframework.core.convert.support.ObjectToCollectionConverter: org.springframework.core.convert.ConversionService conversionService>;

        $z0 = staticinvoke <org.springframework.core.convert.support.ConversionUtils: boolean canConvertElements(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.ConversionService)>(r0, $r2, $r4);

        return $z0;
    }

    public java.lang.Object convert(java.lang.Object, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)
    {
        java.util.Collection $r3;
        org.springframework.core.convert.support.ObjectToCollectionConverter r7;
        org.springframework.core.convert.TypeDescriptor r1, $r4, r8;
        java.lang.Object r0, $r10;
        java.lang.Class $r2, $r5, $r6;
        org.springframework.core.convert.ConversionService $r9;
        boolean $z0;

        r7 := @this: org.springframework.core.convert.support.ObjectToCollectionConverter;

        r0 := @parameter0: java.lang.Object;

        r8 := @parameter1: org.springframework.core.convert.TypeDescriptor;

        r1 := @parameter2: org.springframework.core.convert.TypeDescriptor;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r1.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>();

        $r3 = staticinvoke <org.springframework.core.CollectionFactory: java.util.Collection createCollection(java.lang.Class,int)>($r2, 1);

        $r4 = virtualinvoke r1.<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor getElementTypeDescriptor(java.lang.Object)>(r0);

        $r5 = class "Ljava/util/Collection;";

        $r6 = virtualinvoke $r4.<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()>();

        $z0 = virtualinvoke $r5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r6);

        if $z0 != 0 goto label2;

        $r9 = r7.<org.springframework.core.convert.support.ObjectToCollectionConverter: org.springframework.core.convert.ConversionService conversionService>;

        $r10 = interfaceinvoke $r9.<org.springframework.core.convert.ConversionService: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>(r0, r8, $r4);

        interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>($r10);

        goto label3;

     label2:
        interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>(r0);

     label3:
        return $r3;
    }
}
