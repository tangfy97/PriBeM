class org.wiztools.restclient.ui.resbody.ResBodyTextPanel$1 extends java.lang.Object implements java.awt.event.ActionListener
{
    final org.wiztools.restclient.ui.resbody.ResBodyTextPanel this$0;

    void <init>(org.wiztools.restclient.ui.resbody.ResBodyTextPanel)
    {
        org.wiztools.restclient.ui.resbody.ResBodyTextPanel r1;
        org.wiztools.restclient.ui.resbody.ResBodyTextPanel$1 r0;

        r0 := @this: org.wiztools.restclient.ui.resbody.ResBodyTextPanel$1;

        r1 := @parameter0: org.wiztools.restclient.ui.resbody.ResBodyTextPanel;

        r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel$1: org.wiztools.restclient.ui.resbody.ResBodyTextPanel this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void actionPerformed(java.awt.event.ActionEvent)
    {
        org.wiztools.restclient.ui.RESTView $r9, $r19, $r21;
        org.wiztools.restclient.ui.ScriptEditor $r2;
        java.util.concurrent.Future $r7, $r15, $r17;
        java.lang.String $r3, $r4, $r5;
        java.util.concurrent.ExecutorService $r13;
        boolean $z0, $z1;
        org.wiztools.restclient.ui.resbody.ResBodyTextPanel $r1, $r6, $r8, $r11, $r12, $r16, $r18, $r20;
        org.wiztools.restclient.ui.resbody.ResBodyTextPanel$1$1 $r10;
        org.wiztools.restclient.ui.resbody.ResBodyTextPanel$1$2 $r14;
        java.awt.event.ActionEvent r22;
        org.wiztools.restclient.ui.resbody.ResBodyTextPanel$1 r0;

        r0 := @this: org.wiztools.restclient.ui.resbody.ResBodyTextPanel$1;

        r22 := @parameter0: java.awt.event.ActionEvent;

        $r1 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel$1: org.wiztools.restclient.ui.resbody.ResBodyTextPanel this$0>;

        $r2 = staticinvoke <org.wiztools.restclient.ui.resbody.ResBodyTextPanel: org.wiztools.restclient.ui.ScriptEditor access$000(org.wiztools.restclient.ui.resbody.ResBodyTextPanel)>($r1);

        $r3 = interfaceinvoke $r2.<org.wiztools.restclient.ui.ScriptEditor: java.lang.String getText()>();

        $r4 = "";

        $r5 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        $r20 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel$1: org.wiztools.restclient.ui.resbody.ResBodyTextPanel this$0>;

        $r21 = $r20.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: org.wiztools.restclient.ui.RESTView view>;

        interfaceinvoke $r21.<org.wiztools.restclient.ui.RESTView: void setStatusMessage(java.lang.String)>("No response body!");

        return;

     label1:
        $r6 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel$1: org.wiztools.restclient.ui.resbody.ResBodyTextPanel this$0>;

        $r7 = staticinvoke <org.wiztools.restclient.ui.resbody.ResBodyTextPanel: java.util.concurrent.Future access$100(org.wiztools.restclient.ui.resbody.ResBodyTextPanel)>($r6);

        if $r7 == null goto label2;

        $r16 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel$1: org.wiztools.restclient.ui.resbody.ResBodyTextPanel this$0>;

        $r17 = staticinvoke <org.wiztools.restclient.ui.resbody.ResBodyTextPanel: java.util.concurrent.Future access$100(org.wiztools.restclient.ui.resbody.ResBodyTextPanel)>($r16);

        $z1 = interfaceinvoke $r17.<java.util.concurrent.Future: boolean isDone()>();

        if $z1 != 0 goto label2;

        $r18 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel$1: org.wiztools.restclient.ui.resbody.ResBodyTextPanel this$0>;

        $r19 = $r18.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: org.wiztools.restclient.ui.RESTView view>;

        interfaceinvoke $r19.<org.wiztools.restclient.ui.RESTView: void setStatusMessage(java.lang.String)>("Last XML indentation task running!");

        return;

     label2:
        $r8 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel$1: org.wiztools.restclient.ui.resbody.ResBodyTextPanel this$0>;

        $r9 = $r8.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel: org.wiztools.restclient.ui.RESTView view>;

        interfaceinvoke $r9.<org.wiztools.restclient.ui.RESTView: void setStatusMessage(java.lang.String)>("Starting XML indentation job...");

        $r10 = new org.wiztools.restclient.ui.resbody.ResBodyTextPanel$1$1;

        specialinvoke $r10.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel$1$1: void <init>(org.wiztools.restclient.ui.resbody.ResBodyTextPanel$1)>(r0);

        virtualinvoke $r10.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel$1$1: void start()>();

        $r12 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel$1: org.wiztools.restclient.ui.resbody.ResBodyTextPanel this$0>;

        $r11 = r0.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel$1: org.wiztools.restclient.ui.resbody.ResBodyTextPanel this$0>;

        $r13 = staticinvoke <org.wiztools.restclient.ui.resbody.ResBodyTextPanel: java.util.concurrent.ExecutorService access$200(org.wiztools.restclient.ui.resbody.ResBodyTextPanel)>($r11);

        $r14 = new org.wiztools.restclient.ui.resbody.ResBodyTextPanel$1$2;

        specialinvoke $r14.<org.wiztools.restclient.ui.resbody.ResBodyTextPanel$1$2: void <init>(org.wiztools.restclient.ui.resbody.ResBodyTextPanel$1,java.lang.String)>(r0, $r3);

        $r15 = interfaceinvoke $r13.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r14);

        staticinvoke <org.wiztools.restclient.ui.resbody.ResBodyTextPanel: java.util.concurrent.Future access$102(org.wiztools.restclient.ui.resbody.ResBodyTextPanel,java.util.concurrent.Future)>($r12, $r15);

        return;
    }
}
