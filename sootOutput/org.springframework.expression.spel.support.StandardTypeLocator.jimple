public class org.springframework.expression.spel.support.StandardTypeLocator extends java.lang.Object implements org.springframework.expression.TypeLocator
{
    private java.lang.ClassLoader loader;
    private final java.util.List knownPackagePrefixes;

    public void <init>()
    {
        org.springframework.expression.spel.support.StandardTypeLocator r0;
        java.lang.ClassLoader $r1;

        r0 := @this: org.springframework.expression.spel.support.StandardTypeLocator;

        $r1 = staticinvoke <org.springframework.util.ClassUtils: java.lang.ClassLoader getDefaultClassLoader()>();

        specialinvoke r0.<org.springframework.expression.spel.support.StandardTypeLocator: void <init>(java.lang.ClassLoader)>($r1);

        return;
    }

    public void <init>(java.lang.ClassLoader)
    {
        org.springframework.expression.spel.support.StandardTypeLocator r0;
        java.lang.ClassLoader r2;
        java.util.ArrayList $r1;

        r0 := @this: org.springframework.expression.spel.support.StandardTypeLocator;

        r2 := @parameter0: java.lang.ClassLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.springframework.expression.spel.support.StandardTypeLocator: java.util.List knownPackagePrefixes> = $r1;

        r0.<org.springframework.expression.spel.support.StandardTypeLocator: java.lang.ClassLoader loader> = r2;

        virtualinvoke r0.<org.springframework.expression.spel.support.StandardTypeLocator: void registerImport(java.lang.String)>("java.lang");

        return;
    }

    public java.lang.Class findType(java.lang.String) throws org.springframework.expression.EvaluationException
    {
        org.springframework.expression.spel.SpelEvaluationException $r14;
        java.lang.Object[] $r15;
        java.lang.String r0, r6, $r11;
        boolean $z0;
        org.springframework.expression.spel.SpelMessage $r16;
        org.springframework.expression.spel.support.StandardTypeLocator r1;
        java.util.Iterator $r19;
        java.util.List $r18;
        java.lang.Class $r3, $r13;
        java.lang.ClassNotFoundException $r4, $r17;
        java.lang.Object $r5;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;
        java.lang.ClassLoader $r2, $r12;

        r1 := @this: org.springframework.expression.spel.support.StandardTypeLocator;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = r1.<org.springframework.expression.spel.support.StandardTypeLocator: java.lang.ClassLoader loader>;

        $r3 = virtualinvoke $r2.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r0);

     label2:
        return $r3;

     label3:
        $r17 := @caughtexception;

        $r18 = r1.<org.springframework.expression.spel.support.StandardTypeLocator: java.util.List knownPackagePrefixes>;

        $r19 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>();

        goto label8;

     label4:
        $r5 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

     label5:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = r1.<org.springframework.expression.spel.support.StandardTypeLocator: java.lang.ClassLoader loader>;

        $r13 = virtualinvoke $r12.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r11);

     label6:
        return $r13;

     label7:
        $r4 := @caughtexception;

     label8:
        $z0 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label4;

        $r14 = new org.springframework.expression.spel.SpelEvaluationException;

        $r16 = <org.springframework.expression.spel.SpelMessage: org.springframework.expression.spel.SpelMessage TYPE_NOT_FOUND>;

        $r15 = newarray (java.lang.Object)[1];

        $r15[0] = r0;

        specialinvoke $r14.<org.springframework.expression.spel.SpelEvaluationException: void <init>(org.springframework.expression.spel.SpelMessage,java.lang.Object[])>($r16, $r15);

        throw $r14;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.ClassNotFoundException from label5 to label6 with label7;
    }

    public void registerImport(java.lang.String)
    {
        java.util.List $r2;
        org.springframework.expression.spel.support.StandardTypeLocator r0;
        java.lang.String r1;

        r0 := @this: org.springframework.expression.spel.support.StandardTypeLocator;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.expression.spel.support.StandardTypeLocator: java.util.List knownPackagePrefixes>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public java.util.List getImportPrefixes()
    {
        java.util.List $r1, $r2;
        org.springframework.expression.spel.support.StandardTypeLocator r0;

        r0 := @this: org.springframework.expression.spel.support.StandardTypeLocator;

        $r1 = r0.<org.springframework.expression.spel.support.StandardTypeLocator: java.util.List knownPackagePrefixes>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public void removeImport(java.lang.String)
    {
        java.util.List $r2;
        org.springframework.expression.spel.support.StandardTypeLocator r0;
        java.lang.String r1;

        r0 := @this: org.springframework.expression.spel.support.StandardTypeLocator;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.expression.spel.support.StandardTypeLocator: java.util.List knownPackagePrefixes>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return;
    }
}
