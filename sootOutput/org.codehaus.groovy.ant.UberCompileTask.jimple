public class org.codehaus.groovy.ant.UberCompileTask extends org.apache.tools.ant.Task
{
    private final org.codehaus.groovy.ant.LoggingHelper log;
    private org.apache.tools.ant.types.Path src;
    private java.io.File destdir;
    private org.apache.tools.ant.types.Path classpath;
    private org.codehaus.groovy.ant.UberCompileTask$GenStubsAdapter genStubsTask;
    private org.codehaus.groovy.ant.UberCompileTask$GroovycAdapter groovycTask;
    private org.codehaus.groovy.ant.UberCompileTask$JavacAdapter javacTask;
    static final boolean $assertionsDisabled;
    static java.lang.Class class$org$codehaus$groovy$ant$UberCompileTask;

    public void <init>()
    {
        org.codehaus.groovy.ant.LoggingHelper $r1;
        org.codehaus.groovy.ant.UberCompileTask r0;

        r0 := @this: org.codehaus.groovy.ant.UberCompileTask;

        specialinvoke r0.<org.apache.tools.ant.Task: void <init>()>();

        $r1 = new org.codehaus.groovy.ant.LoggingHelper;

        specialinvoke $r1.<org.codehaus.groovy.ant.LoggingHelper: void <init>(org.apache.tools.ant.Task)>(r0);

        r0.<org.codehaus.groovy.ant.UberCompileTask: org.codehaus.groovy.ant.LoggingHelper log> = $r1;

        return;
    }

    public org.apache.tools.ant.types.Path createSrc()
    {
        org.codehaus.groovy.ant.UberCompileTask r0;
        org.apache.tools.ant.Project $r5;
        org.apache.tools.ant.types.Path $r1, $r2, $r3, $r4;

        r0 := @this: org.codehaus.groovy.ant.UberCompileTask;

        $r1 = r0.<org.codehaus.groovy.ant.UberCompileTask: org.apache.tools.ant.types.Path src>;

        if $r1 != null goto label1;

        $r4 = new org.apache.tools.ant.types.Path;

        $r5 = virtualinvoke r0.<org.codehaus.groovy.ant.UberCompileTask: org.apache.tools.ant.Project getProject()>();

        specialinvoke $r4.<org.apache.tools.ant.types.Path: void <init>(org.apache.tools.ant.Project)>($r5);

        r0.<org.codehaus.groovy.ant.UberCompileTask: org.apache.tools.ant.types.Path src> = $r4;

     label1:
        $r2 = r0.<org.codehaus.groovy.ant.UberCompileTask: org.apache.tools.ant.types.Path src>;

        $r3 = virtualinvoke $r2.<org.apache.tools.ant.types.Path: org.apache.tools.ant.types.Path createPath()>();

        return $r3;
    }

    public void setSrcdir(org.apache.tools.ant.types.Path)
    {
        org.codehaus.groovy.ant.UberCompileTask r0;
        java.lang.AssertionError $r4;
        boolean $z0;
        org.apache.tools.ant.types.Path $r1, r2, $r3;

        r0 := @this: org.codehaus.groovy.ant.UberCompileTask;

        r2 := @parameter0: org.apache.tools.ant.types.Path;

        $z0 = <org.codehaus.groovy.ant.UberCompileTask: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r2 != null goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $r1 = r0.<org.codehaus.groovy.ant.UberCompileTask: org.apache.tools.ant.types.Path src>;

        if $r1 != null goto label2;

        r0.<org.codehaus.groovy.ant.UberCompileTask: org.apache.tools.ant.types.Path src> = r2;

        goto label3;

     label2:
        $r3 = r0.<org.codehaus.groovy.ant.UberCompileTask: org.apache.tools.ant.types.Path src>;

        virtualinvoke $r3.<org.apache.tools.ant.types.Path: void append(org.apache.tools.ant.types.Path)>(r2);

     label3:
        return;
    }

    public org.apache.tools.ant.types.Path getSrcdir()
    {
        org.codehaus.groovy.ant.UberCompileTask r0;
        org.apache.tools.ant.types.Path $r1;

        r0 := @this: org.codehaus.groovy.ant.UberCompileTask;

        $r1 = r0.<org.codehaus.groovy.ant.UberCompileTask: org.apache.tools.ant.types.Path src>;

        return $r1;
    }

    public void setDestdir(java.io.File)
    {
        org.codehaus.groovy.ant.UberCompileTask r0;
        java.lang.AssertionError $r2;
        java.io.File r1;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.ant.UberCompileTask;

        r1 := @parameter0: java.io.File;

        $z0 = <org.codehaus.groovy.ant.UberCompileTask: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r1 != null goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        r0.<org.codehaus.groovy.ant.UberCompileTask: java.io.File destdir> = r1;

        return;
    }

    public void setClasspath(org.apache.tools.ant.types.Path)
    {
        org.codehaus.groovy.ant.UberCompileTask r0;
        java.lang.AssertionError $r4;
        boolean $z0;
        org.apache.tools.ant.types.Path $r1, r2, $r3;

        r0 := @this: org.codehaus.groovy.ant.UberCompileTask;

        r2 := @parameter0: org.apache.tools.ant.types.Path;

        $z0 = <org.codehaus.groovy.ant.UberCompileTask: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r2 != null goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $r1 = r0.<org.codehaus.groovy.ant.UberCompileTask: org.apache.tools.ant.types.Path classpath>;

        if $r1 != null goto label2;

        r0.<org.codehaus.groovy.ant.UberCompileTask: org.apache.tools.ant.types.Path classpath> = r2;

        goto label3;

     label2:
        $r3 = r0.<org.codehaus.groovy.ant.UberCompileTask: org.apache.tools.ant.types.Path classpath>;

        virtualinvoke $r3.<org.apache.tools.ant.types.Path: void append(org.apache.tools.ant.types.Path)>(r2);

     label3:
        return;
    }

    public org.apache.tools.ant.types.Path getClasspath()
    {
        org.codehaus.groovy.ant.UberCompileTask r0;
        org.apache.tools.ant.types.Path $r1;

        r0 := @this: org.codehaus.groovy.ant.UberCompileTask;

        $r1 = r0.<org.codehaus.groovy.ant.UberCompileTask: org.apache.tools.ant.types.Path classpath>;

        return $r1;
    }

    public org.apache.tools.ant.types.Path createClasspath()
    {
        org.codehaus.groovy.ant.UberCompileTask r0;
        org.apache.tools.ant.Project $r5;
        org.apache.tools.ant.types.Path $r1, $r2, $r3, $r4;

        r0 := @this: org.codehaus.groovy.ant.UberCompileTask;

        $r1 = r0.<org.codehaus.groovy.ant.UberCompileTask: org.apache.tools.ant.types.Path classpath>;

        if $r1 != null goto label1;

        $r4 = new org.apache.tools.ant.types.Path;

        $r5 = virtualinvoke r0.<org.codehaus.groovy.ant.UberCompileTask: org.apache.tools.ant.Project getProject()>();

        specialinvoke $r4.<org.apache.tools.ant.types.Path: void <init>(org.apache.tools.ant.Project)>($r5);

        r0.<org.codehaus.groovy.ant.UberCompileTask: org.apache.tools.ant.types.Path classpath> = $r4;

     label1:
        $r2 = r0.<org.codehaus.groovy.ant.UberCompileTask: org.apache.tools.ant.types.Path classpath>;

        $r3 = virtualinvoke $r2.<org.apache.tools.ant.types.Path: org.apache.tools.ant.types.Path createPath()>();

        return $r3;
    }

    public void setClasspathRef(org.apache.tools.ant.types.Reference)
    {
        org.codehaus.groovy.ant.UberCompileTask r0;
        java.lang.AssertionError $r3;
        boolean $z0;
        org.apache.tools.ant.types.Path $r1;
        org.apache.tools.ant.types.Reference r2;

        r0 := @this: org.codehaus.groovy.ant.UberCompileTask;

        r2 := @parameter0: org.apache.tools.ant.types.Reference;

        $z0 = <org.codehaus.groovy.ant.UberCompileTask: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r2 != null goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r1 = virtualinvoke r0.<org.codehaus.groovy.ant.UberCompileTask: org.apache.tools.ant.types.Path createClasspath()>();

        virtualinvoke $r1.<org.apache.tools.ant.types.Path: void setRefid(org.apache.tools.ant.types.Reference)>(r2);

        return;
    }

    public org.codehaus.groovy.ant.UberCompileTask$GenStubsAdapter createGeneratestubs()
    {
        org.codehaus.groovy.ant.UberCompileTask r0;
        org.codehaus.groovy.ant.UberCompileTask$GenStubsAdapter $r1, $r2, $r3, $r4;
        org.apache.tools.ant.Project $r5;

        r0 := @this: org.codehaus.groovy.ant.UberCompileTask;

        $r1 = r0.<org.codehaus.groovy.ant.UberCompileTask: org.codehaus.groovy.ant.UberCompileTask$GenStubsAdapter genStubsTask>;

        if $r1 != null goto label1;

        $r3 = new org.codehaus.groovy.ant.UberCompileTask$GenStubsAdapter;

        specialinvoke $r3.<org.codehaus.groovy.ant.UberCompileTask$GenStubsAdapter: void <init>(org.codehaus.groovy.ant.UberCompileTask,org.codehaus.groovy.ant.UberCompileTask$1)>(r0, null);

        r0.<org.codehaus.groovy.ant.UberCompileTask: org.codehaus.groovy.ant.UberCompileTask$GenStubsAdapter genStubsTask> = $r3;

        $r4 = r0.<org.codehaus.groovy.ant.UberCompileTask: org.codehaus.groovy.ant.UberCompileTask$GenStubsAdapter genStubsTask>;

        $r5 = virtualinvoke r0.<org.codehaus.groovy.ant.UberCompileTask: org.apache.tools.ant.Project getProject()>();

        virtualinvoke $r4.<org.codehaus.groovy.ant.UberCompileTask$GenStubsAdapter: void setProject(org.apache.tools.ant.Project)>($r5);

     label1:
        $r2 = r0.<org.codehaus.groovy.ant.UberCompileTask: org.codehaus.groovy.ant.UberCompileTask$GenStubsAdapter genStubsTask>;

        return $r2;
    }

    public org.codehaus.groovy.ant.UberCompileTask$GroovycAdapter createGroovyc()
    {
        org.codehaus.groovy.ant.UberCompileTask r0;
        org.apache.tools.ant.Project $r5;
        org.codehaus.groovy.ant.UberCompileTask$GroovycAdapter $r1, $r2, $r3, $r4;

        r0 := @this: org.codehaus.groovy.ant.UberCompileTask;

        $r1 = r0.<org.codehaus.groovy.ant.UberCompileTask: org.codehaus.groovy.ant.UberCompileTask$GroovycAdapter groovycTask>;

        if $r1 != null goto label1;

        $r3 = new org.codehaus.groovy.ant.UberCompileTask$GroovycAdapter;

        specialinvoke $r3.<org.codehaus.groovy.ant.UberCompileTask$GroovycAdapter: void <init>(org.codehaus.groovy.ant.UberCompileTask,org.codehaus.groovy.ant.UberCompileTask$1)>(r0, null);

        r0.<org.codehaus.groovy.ant.UberCompileTask: org.codehaus.groovy.ant.UberCompileTask$GroovycAdapter groovycTask> = $r3;

        $r4 = r0.<org.codehaus.groovy.ant.UberCompileTask: org.codehaus.groovy.ant.UberCompileTask$GroovycAdapter groovycTask>;

        $r5 = virtualinvoke r0.<org.codehaus.groovy.ant.UberCompileTask: org.apache.tools.ant.Project getProject()>();

        virtualinvoke $r4.<org.codehaus.groovy.ant.UberCompileTask$GroovycAdapter: void setProject(org.apache.tools.ant.Project)>($r5);

     label1:
        $r2 = r0.<org.codehaus.groovy.ant.UberCompileTask: org.codehaus.groovy.ant.UberCompileTask$GroovycAdapter groovycTask>;

        return $r2;
    }

    public org.codehaus.groovy.ant.UberCompileTask$JavacAdapter createJavac()
    {
        org.codehaus.groovy.ant.UberCompileTask r0;
        org.apache.tools.ant.Project $r5;
        org.codehaus.groovy.ant.UberCompileTask$JavacAdapter $r1, $r2, $r3, $r4;

        r0 := @this: org.codehaus.groovy.ant.UberCompileTask;

        $r1 = r0.<org.codehaus.groovy.ant.UberCompileTask: org.codehaus.groovy.ant.UberCompileTask$JavacAdapter javacTask>;

        if $r1 != null goto label1;

        $r3 = new org.codehaus.groovy.ant.UberCompileTask$JavacAdapter;

        specialinvoke $r3.<org.codehaus.groovy.ant.UberCompileTask$JavacAdapter: void <init>(org.codehaus.groovy.ant.UberCompileTask,org.codehaus.groovy.ant.UberCompileTask$1)>(r0, null);

        r0.<org.codehaus.groovy.ant.UberCompileTask: org.codehaus.groovy.ant.UberCompileTask$JavacAdapter javacTask> = $r3;

        $r4 = r0.<org.codehaus.groovy.ant.UberCompileTask: org.codehaus.groovy.ant.UberCompileTask$JavacAdapter javacTask>;

        $r5 = virtualinvoke r0.<org.codehaus.groovy.ant.UberCompileTask: org.apache.tools.ant.Project getProject()>();

        virtualinvoke $r4.<org.codehaus.groovy.ant.UberCompileTask$JavacAdapter: void setProject(org.apache.tools.ant.Project)>($r5);

     label1:
        $r2 = r0.<org.codehaus.groovy.ant.UberCompileTask: org.codehaus.groovy.ant.UberCompileTask$JavacAdapter javacTask>;

        return $r2;
    }

    protected void validate() throws org.apache.tools.ant.BuildException
    {
        java.lang.Throwable $r19, $r20, $r21;
        org.apache.tools.ant.Location $r10, $r12, $r14;
        org.apache.tools.ant.types.Path $r1;
        java.lang.StringBuffer $r6, $r8, $r17;
        java.lang.String $r9;
        boolean $z0;
        org.apache.tools.ant.BuildException $r15, $r16, $r18;
        java.io.File $r2, $r3, $r7;
        org.codehaus.groovy.ant.UberCompileTask r0;

        r0 := @this: org.codehaus.groovy.ant.UberCompileTask;

        $r1 = r0.<org.codehaus.groovy.ant.UberCompileTask: org.apache.tools.ant.types.Path src>;

        if $r1 != null goto label1;

        $r15 = new org.apache.tools.ant.BuildException;

        $r14 = virtualinvoke r0.<org.codehaus.groovy.ant.UberCompileTask: org.apache.tools.ant.Location getLocation()>();

        specialinvoke $r15.<org.apache.tools.ant.BuildException: void <init>(java.lang.String,org.apache.tools.ant.Location)>("Missing attribute: srcdir (or one or more nested <src> elements).", $r14);

        $r19 = (java.lang.Throwable) $r15;

        throw $r19;

     label1:
        $r2 = r0.<org.codehaus.groovy.ant.UberCompileTask: java.io.File destdir>;

        if $r2 != null goto label2;

        $r16 = new org.apache.tools.ant.BuildException;

        $r12 = virtualinvoke r0.<org.codehaus.groovy.ant.UberCompileTask: org.apache.tools.ant.Location getLocation()>();

        specialinvoke $r16.<org.apache.tools.ant.BuildException: void <init>(java.lang.String,org.apache.tools.ant.Location)>("Missing attribute: destdir", $r12);

        $r20 = (java.lang.Throwable) $r16;

        throw $r20;

     label2:
        $r3 = r0.<org.codehaus.groovy.ant.UberCompileTask: java.io.File destdir>;

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label3;

        $r18 = new org.apache.tools.ant.BuildException;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Destination directory does not exist: ");

        $r7 = r0.<org.codehaus.groovy.ant.UberCompileTask: java.io.File destdir>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        $r10 = virtualinvoke r0.<org.codehaus.groovy.ant.UberCompileTask: org.apache.tools.ant.Location getLocation()>();

        specialinvoke $r18.<org.apache.tools.ant.BuildException: void <init>(java.lang.String,org.apache.tools.ant.Location)>($r9, $r10);

        $r21 = (java.lang.Throwable) $r18;

        throw $r21;

     label3:
        return;
    }

    public void execute() throws org.apache.tools.ant.BuildException
    {
        org.apache.tools.ant.types.PatternSet$NameEntry $r19, $r20, $r21, $r22;
        org.apache.tools.ant.types.Path $r2, $r3, $r7, $r9, $r11, $r15, $r16;
        org.codehaus.groovy.ant.UberCompileTask$GenStubsAdapter $r1;
        org.apache.tools.ant.types.FileSet $r5, $r10, $r18;
        boolean $z0, $z1, $z2;
        org.apache.tools.ant.types.Path$PathElement $r12;
        java.io.File $r4, $r8, $r13, $r17, $r23;
        org.codehaus.groovy.ant.UberCompileTask r0;
        org.codehaus.groovy.ant.UberCompileTask$JavacAdapter $r6;
        org.codehaus.groovy.ant.UberCompileTask$GroovycAdapter $r14;

        r0 := @this: org.codehaus.groovy.ant.UberCompileTask;

        virtualinvoke r0.<org.codehaus.groovy.ant.UberCompileTask: void validate()>();

        $r1 = virtualinvoke r0.<org.codehaus.groovy.ant.UberCompileTask: org.codehaus.groovy.ant.UberCompileTask$GenStubsAdapter createGeneratestubs()>();

        $r2 = r0.<org.codehaus.groovy.ant.UberCompileTask: org.apache.tools.ant.types.Path classpath>;

        $r1.<org.codehaus.groovy.ant.UberCompileTask$GenStubsAdapter: org.apache.tools.ant.types.Path classpath> = $r2;

        $r3 = r0.<org.codehaus.groovy.ant.UberCompileTask: org.apache.tools.ant.types.Path src>;

        $r1.<org.codehaus.groovy.ant.UberCompileTask$GenStubsAdapter: org.apache.tools.ant.types.Path src> = $r3;

        $r4 = $r1.<org.codehaus.groovy.ant.UberCompileTask$GenStubsAdapter: java.io.File destdir>;

        if $r4 != null goto label1;

        $r23 = specialinvoke r0.<org.codehaus.groovy.ant.UberCompileTask: java.io.File createTempDir()>();

        $r1.<org.codehaus.groovy.ant.UberCompileTask$GenStubsAdapter: java.io.File destdir> = $r23;

     label1:
        $r5 = virtualinvoke $r1.<org.codehaus.groovy.ant.UberCompileTask$GenStubsAdapter: org.apache.tools.ant.types.FileSet getFileSet()>();

        $z0 = virtualinvoke $r5.<org.apache.tools.ant.types.FileSet: boolean hasPatterns()>();

        if $z0 != 0 goto label2;

        $r21 = virtualinvoke $r1.<org.codehaus.groovy.ant.UberCompileTask$GenStubsAdapter: org.apache.tools.ant.types.PatternSet$NameEntry createInclude()>();

        virtualinvoke $r21.<org.apache.tools.ant.types.PatternSet$NameEntry: void setName(java.lang.String)>("**/*.java");

        $r22 = virtualinvoke $r1.<org.codehaus.groovy.ant.UberCompileTask$GenStubsAdapter: org.apache.tools.ant.types.PatternSet$NameEntry createInclude()>();

        virtualinvoke $r22.<org.apache.tools.ant.types.PatternSet$NameEntry: void setName(java.lang.String)>("**/*.groovy");

     label2:
        $r6 = virtualinvoke r0.<org.codehaus.groovy.ant.UberCompileTask: org.codehaus.groovy.ant.UberCompileTask$JavacAdapter createJavac()>();

        $r7 = r0.<org.codehaus.groovy.ant.UberCompileTask: org.apache.tools.ant.types.Path src>;

        virtualinvoke $r6.<org.codehaus.groovy.ant.UberCompileTask$JavacAdapter: void setSrcdir(org.apache.tools.ant.types.Path)>($r7);

        $r8 = r0.<org.codehaus.groovy.ant.UberCompileTask: java.io.File destdir>;

        virtualinvoke $r6.<org.codehaus.groovy.ant.UberCompileTask$JavacAdapter: void setDestdir(java.io.File)>($r8);

        $r9 = r0.<org.codehaus.groovy.ant.UberCompileTask: org.apache.tools.ant.types.Path classpath>;

        virtualinvoke $r6.<org.codehaus.groovy.ant.UberCompileTask$JavacAdapter: void setClasspath(org.apache.tools.ant.types.Path)>($r9);

        $r10 = virtualinvoke $r6.<org.codehaus.groovy.ant.UberCompileTask$JavacAdapter: org.apache.tools.ant.types.FileSet getFileSet()>();

        $z1 = virtualinvoke $r10.<org.apache.tools.ant.types.FileSet: boolean hasPatterns()>();

        if $z1 != 0 goto label3;

        $r20 = virtualinvoke $r6.<org.codehaus.groovy.ant.UberCompileTask$JavacAdapter: org.apache.tools.ant.types.PatternSet$NameEntry createInclude()>();

        virtualinvoke $r20.<org.apache.tools.ant.types.PatternSet$NameEntry: void setName(java.lang.String)>("**/*.java");

     label3:
        $r11 = virtualinvoke $r6.<org.codehaus.groovy.ant.UberCompileTask$JavacAdapter: org.apache.tools.ant.types.Path createSrc()>();

        $r12 = virtualinvoke $r11.<org.apache.tools.ant.types.Path: org.apache.tools.ant.types.Path$PathElement createPathElement()>();

        $r13 = $r1.<org.codehaus.groovy.ant.UberCompileTask$GenStubsAdapter: java.io.File destdir>;

        virtualinvoke $r12.<org.apache.tools.ant.types.Path$PathElement: void setLocation(java.io.File)>($r13);

        $r14 = virtualinvoke r0.<org.codehaus.groovy.ant.UberCompileTask: org.codehaus.groovy.ant.UberCompileTask$GroovycAdapter createGroovyc()>();

        $r15 = r0.<org.codehaus.groovy.ant.UberCompileTask: org.apache.tools.ant.types.Path classpath>;

        $r14.<org.codehaus.groovy.ant.UberCompileTask$GroovycAdapter: org.apache.tools.ant.types.Path classpath> = $r15;

        $r16 = r0.<org.codehaus.groovy.ant.UberCompileTask: org.apache.tools.ant.types.Path src>;

        $r14.<org.codehaus.groovy.ant.UberCompileTask$GroovycAdapter: org.apache.tools.ant.types.Path src> = $r16;

        $r17 = r0.<org.codehaus.groovy.ant.UberCompileTask: java.io.File destdir>;

        $r14.<org.codehaus.groovy.ant.UberCompileTask$GroovycAdapter: java.io.File destdir> = $r17;

        $r14.<org.codehaus.groovy.ant.UberCompileTask$GroovycAdapter: boolean force> = 1;

        $r18 = virtualinvoke $r14.<org.codehaus.groovy.ant.UberCompileTask$GroovycAdapter: org.apache.tools.ant.types.FileSet getFileSet()>();

        $z2 = virtualinvoke $r18.<org.apache.tools.ant.types.FileSet: boolean hasPatterns()>();

        if $z2 != 0 goto label4;

        $r19 = virtualinvoke $r14.<org.codehaus.groovy.ant.UberCompileTask$GroovycAdapter: org.apache.tools.ant.types.PatternSet$NameEntry createInclude()>();

        virtualinvoke $r19.<org.apache.tools.ant.types.PatternSet$NameEntry: void setName(java.lang.String)>("**/*.groovy");

     label4:
        virtualinvoke $r1.<org.codehaus.groovy.ant.UberCompileTask$GenStubsAdapter: void execute()>();

        virtualinvoke $r6.<org.codehaus.groovy.ant.UberCompileTask$JavacAdapter: void execute()>();

        virtualinvoke $r14.<org.codehaus.groovy.ant.UberCompileTask$GroovycAdapter: void execute()>();

        return;
    }

    private java.io.File createTempDir()
    {
        java.lang.Throwable $r6;
        org.codehaus.groovy.ant.UberCompileTask r3;
        org.apache.tools.ant.Location $r4;
        java.io.IOException $r1;
        org.apache.tools.ant.BuildException $r5;
        java.io.File $r0;

        r3 := @this: org.codehaus.groovy.ant.UberCompileTask;

     label1:
        $r0 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>("groovy-", "stubs");

        virtualinvoke $r0.<java.io.File: boolean delete()>();

        virtualinvoke $r0.<java.io.File: boolean mkdirs()>();

     label2:
        return $r0;

     label3:
        $r1 := @caughtexception;

        $r5 = new org.apache.tools.ant.BuildException;

        $r4 = virtualinvoke r3.<org.codehaus.groovy.ant.UberCompileTask: org.apache.tools.ant.Location getLocation()>();

        specialinvoke $r5.<org.apache.tools.ant.BuildException: void <init>(java.lang.Throwable,org.apache.tools.ant.Location)>($r1, $r4);

        $r6 = (java.lang.Throwable) $r5;

        throw $r6;

        catch java.io.IOException from label1 to label2 with label3;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        boolean $z0, $z1;

        $r0 = <org.codehaus.groovy.ant.UberCompileTask: java.lang.Class class$org$codehaus$groovy$ant$UberCompileTask>;

        if $r0 != null goto label1;

        $r1 = staticinvoke <org.codehaus.groovy.ant.UberCompileTask: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.ant.UberCompileTask");

        <org.codehaus.groovy.ant.UberCompileTask: java.lang.Class class$org$codehaus$groovy$ant$UberCompileTask> = $r1;

        goto label2;

     label1:
        $r1 = <org.codehaus.groovy.ant.UberCompileTask: java.lang.Class class$org$codehaus$groovy$ant$UberCompileTask>;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.codehaus.groovy.ant.UberCompileTask: boolean $assertionsDisabled> = $z1;

        return;
    }
}
