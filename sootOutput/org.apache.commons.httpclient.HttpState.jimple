public class org.apache.commons.httpclient.HttpState extends java.lang.Object
{
    protected java.util.HashMap credMap;
    protected java.util.HashMap proxyCred;
    protected java.util.ArrayList cookies;
    private boolean preemptive;
    private int cookiePolicy;
    public static final java.lang.String PREEMPTIVE_PROPERTY;
    public static final java.lang.String PREEMPTIVE_DEFAULT;
    private static final org.apache.commons.logging.Log LOG;
    static java.lang.Class class$org$apache$commons$httpclient$HttpState;

    public void <init>()
    {
        org.apache.commons.httpclient.HttpState r0;
        int $i1;
        java.util.HashMap $r4, $r5;
        java.util.ArrayList $r6;

        r0 := @this: org.apache.commons.httpclient.HttpState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<org.apache.commons.httpclient.HttpState: java.util.HashMap credMap> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<org.apache.commons.httpclient.HttpState: java.util.HashMap proxyCred> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.httpclient.HttpState: java.util.ArrayList cookies> = $r6;

        r0.<org.apache.commons.httpclient.HttpState: boolean preemptive> = 0;

        $i1 = (int) -1;

        r0.<org.apache.commons.httpclient.HttpState: int cookiePolicy> = $i1;

        return;
    }

    public synchronized void addCookie(org.apache.commons.httpclient.Cookie)
    {
        java.util.Iterator $r4;
        org.apache.commons.httpclient.Cookie r1, r7;
        java.util.ArrayList $r3, $r5;
        org.apache.commons.httpclient.HttpState r2;
        org.apache.commons.logging.Log $r0;
        java.lang.Object $r6;
        boolean $z0, $z1, $z2;

        r2 := @this: org.apache.commons.httpclient.HttpState;

        r1 := @parameter0: org.apache.commons.httpclient.Cookie;

        $r0 = <org.apache.commons.httpclient.HttpState: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter HttpState.addCookie(Cookie)");

        if r1 == null goto label4;

        $r3 = r2.<org.apache.commons.httpclient.HttpState: java.util.ArrayList cookies>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.commons.httpclient.Cookie) $r6;

        $z2 = virtualinvoke r1.<org.apache.commons.httpclient.Cookie: boolean equals(java.lang.Object)>(r7);

        if $z2 == 0 goto label2;

        interfaceinvoke $r4.<java.util.Iterator: void remove()>();

        goto label3;

     label2:
        goto label1;

     label3:
        $z1 = virtualinvoke r1.<org.apache.commons.httpclient.Cookie: boolean isExpired()>();

        if $z1 != 0 goto label4;

        $r5 = r2.<org.apache.commons.httpclient.HttpState: java.util.ArrayList cookies>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label4:
        return;
    }

    public synchronized void addCookies(org.apache.commons.httpclient.Cookie[])
    {
        org.apache.commons.httpclient.HttpState r2;
        int $i0, i1;
        org.apache.commons.logging.Log $r0;
        org.apache.commons.httpclient.Cookie $r3;
        org.apache.commons.httpclient.Cookie[] r1;

        r2 := @this: org.apache.commons.httpclient.HttpState;

        r1 := @parameter0: org.apache.commons.httpclient.Cookie[];

        $r0 = <org.apache.commons.httpclient.HttpState: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter HttpState.addCookies(Cookie[])");

        if r1 == null goto label2;

        i1 = 0;

     label1:
        $i0 = lengthof r1;

        if i1 >= $i0 goto label2;

        $r3 = r1[i1];

        virtualinvoke r2.<org.apache.commons.httpclient.HttpState: void addCookie(org.apache.commons.httpclient.Cookie)>($r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public synchronized org.apache.commons.httpclient.Cookie[] getCookies()
    {
        java.lang.Object[] $r5;
        java.util.ArrayList $r2, $r3;
        org.apache.commons.httpclient.HttpState r1;
        int $i0;
        org.apache.commons.logging.Log $r0;
        org.apache.commons.httpclient.Cookie[] $r4, $r6, $r7;

        r1 := @this: org.apache.commons.httpclient.HttpState;

        $r0 = <org.apache.commons.httpclient.HttpState: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter HttpState.getCookies()");

        $r3 = r1.<org.apache.commons.httpclient.HttpState: java.util.ArrayList cookies>;

        $r2 = r1.<org.apache.commons.httpclient.HttpState: java.util.ArrayList cookies>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $r4 = newarray (org.apache.commons.httpclient.Cookie)[$i0];

        $r5 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (org.apache.commons.httpclient.Cookie[]) $r5;

        $r7 = (org.apache.commons.httpclient.Cookie[]) $r6;

        return $r7;
    }

    public synchronized org.apache.commons.httpclient.Cookie[] getCookies(java.lang.String, int, java.lang.String, boolean)
    {
        java.lang.Object[] $r7;
        java.util.ArrayList $r2, $r4, $r5, $r10;
        org.apache.commons.httpclient.HttpState r3;
        int $i0, $i1, $i2, i3, i4;
        java.lang.String r14, r15;
        org.apache.commons.httpclient.Cookie[] $r6, $r8, $r9;
        boolean z0, $z1;
        org.apache.commons.httpclient.cookie.CookieSpec $r1;
        org.apache.commons.httpclient.Cookie $r12, r13;
        org.apache.commons.logging.Log $r0;
        java.lang.Object $r11;

        r3 := @this: org.apache.commons.httpclient.HttpState;

        r14 := @parameter0: java.lang.String;

        i3 := @parameter1: int;

        r15 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $r0 = <org.apache.commons.httpclient.HttpState: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter HttpState.getCookies(String, int, String, boolean)");

        $r1 = staticinvoke <org.apache.commons.httpclient.cookie.CookiePolicy: org.apache.commons.httpclient.cookie.CookieSpec getDefaultSpec()>();

        $r2 = new java.util.ArrayList;

        $r4 = r3.<org.apache.commons.httpclient.HttpState: java.util.ArrayList cookies>;

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i0);

        i4 = 0;

        $r5 = r3.<org.apache.commons.httpclient.HttpState: java.util.ArrayList cookies>;

        $i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

     label1:
        if i4 >= $i1 goto label3;

        $r10 = r3.<org.apache.commons.httpclient.HttpState: java.util.ArrayList cookies>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r12 = (org.apache.commons.httpclient.Cookie) $r11;

        r13 = (org.apache.commons.httpclient.Cookie) $r12;

        $z1 = interfaceinvoke $r1.<org.apache.commons.httpclient.cookie.CookieSpec: boolean match(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie)>(r14, i3, r15, z0, r13);

        if $z1 == 0 goto label2;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r13);

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $r6 = newarray (org.apache.commons.httpclient.Cookie)[$i2];

        $r7 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r8 = (org.apache.commons.httpclient.Cookie[]) $r7;

        $r9 = (org.apache.commons.httpclient.Cookie[]) $r8;

        return $r9;
    }

    public synchronized boolean purgeExpiredCookies()
    {
        org.apache.commons.httpclient.HttpState r1;
        java.util.Date $r2;
        org.apache.commons.logging.Log $r0;
        boolean $z0;

        r1 := @this: org.apache.commons.httpclient.HttpState;

        $r0 = <org.apache.commons.httpclient.HttpState: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter HttpState.purgeExpiredCookies()");

        $r2 = new java.util.Date;

        specialinvoke $r2.<java.util.Date: void <init>()>();

        $z0 = virtualinvoke r1.<org.apache.commons.httpclient.HttpState: boolean purgeExpiredCookies(java.util.Date)>($r2);

        return $z0;
    }

    public synchronized boolean purgeExpiredCookies(java.util.Date)
    {
        java.util.Iterator $r3;
        java.util.Date r6;
        org.apache.commons.httpclient.Cookie $r5, $r7;
        java.util.ArrayList $r2;
        org.apache.commons.httpclient.HttpState r1;
        org.apache.commons.logging.Log $r0;
        java.lang.Object $r4;
        boolean $z0, z1, $z2;

        r1 := @this: org.apache.commons.httpclient.HttpState;

        r6 := @parameter0: java.util.Date;

        $r0 = <org.apache.commons.httpclient.HttpState: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter HttpState.purgeExpiredCookies(Date)");

        z1 = 0;

        $r2 = r1.<org.apache.commons.httpclient.HttpState: java.util.ArrayList cookies>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (org.apache.commons.httpclient.Cookie) $r4;

        $r7 = (org.apache.commons.httpclient.Cookie) $r5;

        $z0 = virtualinvoke $r7.<org.apache.commons.httpclient.Cookie: boolean isExpired(java.util.Date)>(r6);

        if $z0 == 0 goto label1;

        interfaceinvoke $r3.<java.util.Iterator: void remove()>();

        z1 = 1;

        goto label1;

     label2:
        return z1;
    }

    public int getCookiePolicy()
    {
        int $i0;
        org.apache.commons.httpclient.HttpState r0;

        r0 := @this: org.apache.commons.httpclient.HttpState;

        $i0 = r0.<org.apache.commons.httpclient.HttpState: int cookiePolicy>;

        return $i0;
    }

    public void setAuthenticationPreemptive(boolean)
    {
        org.apache.commons.httpclient.HttpState r0;
        boolean z0;

        r0 := @this: org.apache.commons.httpclient.HttpState;

        z0 := @parameter0: boolean;

        r0.<org.apache.commons.httpclient.HttpState: boolean preemptive> = z0;

        return;
    }

    public boolean isAuthenticationPreemptive()
    {
        org.apache.commons.httpclient.HttpState r0;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.HttpState;

        $z0 = r0.<org.apache.commons.httpclient.HttpState: boolean preemptive>;

        return $z0;
    }

    public void setCookiePolicy(int)
    {
        int i0;
        org.apache.commons.httpclient.HttpState r0;

        r0 := @this: org.apache.commons.httpclient.HttpState;

        i0 := @parameter0: int;

        r0.<org.apache.commons.httpclient.HttpState: int cookiePolicy> = i0;

        return;
    }

    public synchronized void setCredentials(java.lang.String, java.lang.String, org.apache.commons.httpclient.Credentials)
    {
        java.util.HashMap $r6;
        org.apache.commons.httpclient.Credentials r7;
        org.apache.commons.httpclient.auth.AuthScope $r8;
        org.apache.commons.httpclient.HttpState r1;
        int $i1;
        org.apache.commons.logging.Log $r0;
        java.lang.String r3, r4, $r5;

        r1 := @this: org.apache.commons.httpclient.HttpState;

        r4 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r7 := @parameter2: org.apache.commons.httpclient.Credentials;

        $r0 = <org.apache.commons.httpclient.HttpState: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter HttpState.setCredentials(String, String, Credentials)");

        $r6 = r1.<org.apache.commons.httpclient.HttpState: java.util.HashMap credMap>;

        $r8 = new org.apache.commons.httpclient.auth.AuthScope;

        $r5 = <org.apache.commons.httpclient.auth.AuthScope: java.lang.String ANY_SCHEME>;

        $i1 = (int) -1;

        specialinvoke $r8.<org.apache.commons.httpclient.auth.AuthScope: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>(r3, $i1, r4, $r5);

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r7);

        return;
    }

    public synchronized void setCredentials(org.apache.commons.httpclient.auth.AuthScope, org.apache.commons.httpclient.Credentials)
    {
        org.apache.commons.httpclient.Credentials r3;
        org.apache.commons.httpclient.auth.AuthScope r0;
        org.apache.commons.httpclient.HttpState r2;
        org.apache.commons.logging.Log $r1;
        java.util.HashMap $r4;
        java.lang.IllegalArgumentException $r5;

        r2 := @this: org.apache.commons.httpclient.HttpState;

        r0 := @parameter0: org.apache.commons.httpclient.auth.AuthScope;

        r3 := @parameter1: org.apache.commons.httpclient.Credentials;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Authentication scope may not be null");

        throw $r5;

     label1:
        $r1 = <org.apache.commons.httpclient.HttpState: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r1.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter HttpState.setCredentials(AuthScope, Credentials)");

        $r4 = r2.<org.apache.commons.httpclient.HttpState: java.util.HashMap credMap>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r3);

        return;
    }

    private static org.apache.commons.httpclient.Credentials matchCredentials(java.util.HashMap, org.apache.commons.httpclient.auth.AuthScope)
    {
        java.util.Iterator $r4;
        java.util.Set $r3;
        java.util.HashMap r0;
        org.apache.commons.httpclient.Credentials r8;
        org.apache.commons.httpclient.auth.AuthScope r1, r7, r9;
        int $i0, i1, $i3;
        java.lang.Object $r2, $r5, $r6;
        boolean $z0;

        r0 := @parameter0: java.util.HashMap;

        r1 := @parameter1: org.apache.commons.httpclient.auth.AuthScope;

        $r2 = virtualinvoke r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r8 = (org.apache.commons.httpclient.Credentials) $r2;

        if r8 != null goto label4;

        $i3 = (int) -1;

        i1 = $i3;

        r9 = null;

        $r3 = virtualinvoke r0.<java.util.HashMap: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.commons.httpclient.auth.AuthScope) $r6;

        $i0 = virtualinvoke r1.<org.apache.commons.httpclient.auth.AuthScope: int match(org.apache.commons.httpclient.auth.AuthScope)>(r7);

        if $i0 <= i1 goto label2;

        i1 = $i0;

        r9 = r7;

     label2:
        goto label1;

     label3:
        if r9 == null goto label4;

        $r5 = virtualinvoke r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r9);

        r8 = (org.apache.commons.httpclient.Credentials) $r5;

     label4:
        return r8;
    }

    public synchronized org.apache.commons.httpclient.Credentials getCredentials(java.lang.String, java.lang.String)
    {
        java.util.HashMap $r6;
        org.apache.commons.httpclient.Credentials $r7;
        org.apache.commons.httpclient.auth.AuthScope $r8;
        org.apache.commons.httpclient.HttpState r1;
        int $i1;
        org.apache.commons.logging.Log $r0;
        java.lang.String r3, r4, $r5;

        r1 := @this: org.apache.commons.httpclient.HttpState;

        r4 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r0 = <org.apache.commons.httpclient.HttpState: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter HttpState.getCredentials(String, String");

        $r6 = r1.<org.apache.commons.httpclient.HttpState: java.util.HashMap credMap>;

        $r8 = new org.apache.commons.httpclient.auth.AuthScope;

        $r5 = <org.apache.commons.httpclient.auth.AuthScope: java.lang.String ANY_SCHEME>;

        $i1 = (int) -1;

        specialinvoke $r8.<org.apache.commons.httpclient.auth.AuthScope: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>(r3, $i1, r4, $r5);

        $r7 = staticinvoke <org.apache.commons.httpclient.HttpState: org.apache.commons.httpclient.Credentials matchCredentials(java.util.HashMap,org.apache.commons.httpclient.auth.AuthScope)>($r6, $r8);

        return $r7;
    }

    public synchronized org.apache.commons.httpclient.Credentials getCredentials(org.apache.commons.httpclient.auth.AuthScope)
    {
        org.apache.commons.httpclient.Credentials $r4;
        org.apache.commons.httpclient.auth.AuthScope r0;
        org.apache.commons.httpclient.HttpState r2;
        org.apache.commons.logging.Log $r1;
        java.util.HashMap $r3;
        java.lang.IllegalArgumentException $r5;

        r2 := @this: org.apache.commons.httpclient.HttpState;

        r0 := @parameter0: org.apache.commons.httpclient.auth.AuthScope;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Authentication scope may not be null");

        throw $r5;

     label1:
        $r1 = <org.apache.commons.httpclient.HttpState: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r1.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter HttpState.getCredentials(AuthScope)");

        $r3 = r2.<org.apache.commons.httpclient.HttpState: java.util.HashMap credMap>;

        $r4 = staticinvoke <org.apache.commons.httpclient.HttpState: org.apache.commons.httpclient.Credentials matchCredentials(java.util.HashMap,org.apache.commons.httpclient.auth.AuthScope)>($r3, r0);

        return $r4;
    }

    public synchronized void setProxyCredentials(java.lang.String, java.lang.String, org.apache.commons.httpclient.Credentials)
    {
        java.util.HashMap $r6;
        org.apache.commons.httpclient.Credentials r7;
        org.apache.commons.httpclient.auth.AuthScope $r8;
        org.apache.commons.httpclient.HttpState r1;
        int $i1;
        org.apache.commons.logging.Log $r0;
        java.lang.String r3, r4, $r5;

        r1 := @this: org.apache.commons.httpclient.HttpState;

        r4 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r7 := @parameter2: org.apache.commons.httpclient.Credentials;

        $r0 = <org.apache.commons.httpclient.HttpState: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter HttpState.setProxyCredentials(String, String, Credentials");

        $r6 = r1.<org.apache.commons.httpclient.HttpState: java.util.HashMap proxyCred>;

        $r8 = new org.apache.commons.httpclient.auth.AuthScope;

        $r5 = <org.apache.commons.httpclient.auth.AuthScope: java.lang.String ANY_SCHEME>;

        $i1 = (int) -1;

        specialinvoke $r8.<org.apache.commons.httpclient.auth.AuthScope: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>(r3, $i1, r4, $r5);

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r7);

        return;
    }

    public synchronized void setProxyCredentials(org.apache.commons.httpclient.auth.AuthScope, org.apache.commons.httpclient.Credentials)
    {
        org.apache.commons.httpclient.Credentials r3;
        org.apache.commons.httpclient.auth.AuthScope r0;
        org.apache.commons.httpclient.HttpState r2;
        org.apache.commons.logging.Log $r1;
        java.util.HashMap $r4;
        java.lang.IllegalArgumentException $r5;

        r2 := @this: org.apache.commons.httpclient.HttpState;

        r0 := @parameter0: org.apache.commons.httpclient.auth.AuthScope;

        r3 := @parameter1: org.apache.commons.httpclient.Credentials;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Authentication scope may not be null");

        throw $r5;

     label1:
        $r1 = <org.apache.commons.httpclient.HttpState: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r1.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter HttpState.setProxyCredentials(AuthScope, Credentials)");

        $r4 = r2.<org.apache.commons.httpclient.HttpState: java.util.HashMap proxyCred>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r3);

        return;
    }

    public synchronized org.apache.commons.httpclient.Credentials getProxyCredentials(java.lang.String, java.lang.String)
    {
        java.util.HashMap $r6;
        org.apache.commons.httpclient.Credentials $r7;
        org.apache.commons.httpclient.auth.AuthScope $r8;
        org.apache.commons.httpclient.HttpState r1;
        int $i1;
        org.apache.commons.logging.Log $r0;
        java.lang.String r3, r4, $r5;

        r1 := @this: org.apache.commons.httpclient.HttpState;

        r4 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r0 = <org.apache.commons.httpclient.HttpState: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter HttpState.getCredentials(String, String");

        $r6 = r1.<org.apache.commons.httpclient.HttpState: java.util.HashMap proxyCred>;

        $r8 = new org.apache.commons.httpclient.auth.AuthScope;

        $r5 = <org.apache.commons.httpclient.auth.AuthScope: java.lang.String ANY_SCHEME>;

        $i1 = (int) -1;

        specialinvoke $r8.<org.apache.commons.httpclient.auth.AuthScope: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>(r3, $i1, r4, $r5);

        $r7 = staticinvoke <org.apache.commons.httpclient.HttpState: org.apache.commons.httpclient.Credentials matchCredentials(java.util.HashMap,org.apache.commons.httpclient.auth.AuthScope)>($r6, $r8);

        return $r7;
    }

    public synchronized org.apache.commons.httpclient.Credentials getProxyCredentials(org.apache.commons.httpclient.auth.AuthScope)
    {
        org.apache.commons.httpclient.Credentials $r4;
        org.apache.commons.httpclient.auth.AuthScope r0;
        org.apache.commons.httpclient.HttpState r2;
        org.apache.commons.logging.Log $r1;
        java.util.HashMap $r3;
        java.lang.IllegalArgumentException $r5;

        r2 := @this: org.apache.commons.httpclient.HttpState;

        r0 := @parameter0: org.apache.commons.httpclient.auth.AuthScope;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Authentication scope may not be null");

        throw $r5;

     label1:
        $r1 = <org.apache.commons.httpclient.HttpState: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r1.<org.apache.commons.logging.Log: void trace(java.lang.Object)>("enter HttpState.getProxyCredentials(AuthScope)");

        $r3 = r2.<org.apache.commons.httpclient.HttpState: java.util.HashMap proxyCred>;

        $r4 = staticinvoke <org.apache.commons.httpclient.HttpState: org.apache.commons.httpclient.Credentials matchCredentials(java.util.HashMap,org.apache.commons.httpclient.auth.AuthScope)>($r3, r0);

        return $r4;
    }

    public synchronized java.lang.String toString()
    {
        java.util.HashMap $r2, $r4;
        java.util.ArrayList $r6;
        java.lang.StringBuffer $r0;
        org.apache.commons.httpclient.HttpState r1;
        java.lang.String $r3, $r5, $r7, $r8;

        r1 := @this: org.apache.commons.httpclient.HttpState;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $r2 = r1.<org.apache.commons.httpclient.HttpState: java.util.HashMap proxyCred>;

        $r3 = staticinvoke <org.apache.commons.httpclient.HttpState: java.lang.String getCredentialsStringRepresentation(java.util.Map)>($r2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" | ");

        $r4 = r1.<org.apache.commons.httpclient.HttpState: java.util.HashMap credMap>;

        $r5 = staticinvoke <org.apache.commons.httpclient.HttpState: java.lang.String getCredentialsStringRepresentation(java.util.Map)>($r4);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" | ");

        $r6 = r1.<org.apache.commons.httpclient.HttpState: java.util.ArrayList cookies>;

        $r7 = staticinvoke <org.apache.commons.httpclient.HttpState: java.lang.String getCookiesStringRepresentation(java.util.List)>($r6);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r8 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }

    private static java.lang.String getCredentialsStringRepresentation(java.util.Map)
    {
        java.util.Iterator $r3;
        java.util.Set $r2;
        org.apache.commons.httpclient.Credentials r7;
        java.lang.StringBuffer $r0;
        java.util.Map r1;
        int $i0;
        java.lang.Object $r5, $r6;
        java.lang.String $r4, $r8;
        boolean $z0;

        r1 := @parameter0: java.util.Map;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r6 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        r7 = (org.apache.commons.httpclient.Credentials) $r6;

        $i0 = virtualinvoke $r0.<java.lang.StringBuffer: int length()>();

        if $i0 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label2:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r5);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#");

        $r8 = virtualinvoke r7.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        goto label1;

     label3:
        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    private static java.lang.String getCookiesStringRepresentation(java.util.List)
    {
        java.util.Iterator $r2;
        org.apache.commons.httpclient.Cookie r5;
        java.util.List r1;
        java.lang.StringBuffer $r0;
        int $i0;
        java.lang.Object $r4;
        java.lang.String $r3, $r6;
        boolean $z0;

        r1 := @parameter0: java.util.List;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.commons.httpclient.Cookie) $r4;

        $i0 = virtualinvoke $r0.<java.lang.StringBuffer: int length()>();

        if $i0 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#");

     label2:
        $r6 = virtualinvoke r5.<org.apache.commons.httpclient.Cookie: java.lang.String toExternalForm()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        goto label1;

     label3:
        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public void clearCredentials()
    {
        java.util.HashMap $r1;
        org.apache.commons.httpclient.HttpState r0;

        r0 := @this: org.apache.commons.httpclient.HttpState;

        $r1 = r0.<org.apache.commons.httpclient.HttpState: java.util.HashMap credMap>;

        virtualinvoke $r1.<java.util.HashMap: void clear()>();

        return;
    }

    public void clearProxyCredentials()
    {
        java.util.HashMap $r1;
        org.apache.commons.httpclient.HttpState r0;

        r0 := @this: org.apache.commons.httpclient.HttpState;

        $r1 = r0.<org.apache.commons.httpclient.HttpState: java.util.HashMap proxyCred>;

        virtualinvoke $r1.<java.util.HashMap: void clear()>();

        return;
    }

    public synchronized void clearCookies()
    {
        org.apache.commons.httpclient.HttpState r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.commons.httpclient.HttpState;

        $r1 = r0.<org.apache.commons.httpclient.HttpState: java.util.ArrayList cookies>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        return;
    }

    public void clear()
    {
        org.apache.commons.httpclient.HttpState r0;

        r0 := @this: org.apache.commons.httpclient.HttpState;

        virtualinvoke r0.<org.apache.commons.httpclient.HttpState: void clearCookies()>();

        virtualinvoke r0.<org.apache.commons.httpclient.HttpState: void clearCredentials()>();

        virtualinvoke r0.<org.apache.commons.httpclient.HttpState: void clearProxyCredentials()>();

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r2;
        org.apache.commons.logging.Log $r1;

        <org.apache.commons.httpclient.HttpState: java.lang.String PREEMPTIVE_DEFAULT> = "false";

        <org.apache.commons.httpclient.HttpState: java.lang.String PREEMPTIVE_PROPERTY> = "httpclient.authentication.preemptive";

        $r0 = <org.apache.commons.httpclient.HttpState: java.lang.Class class$org$apache$commons$httpclient$HttpState>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <org.apache.commons.httpclient.HttpState: java.lang.Class class$(java.lang.String)>("org.apache.commons.httpclient.HttpState");

        <org.apache.commons.httpclient.HttpState: java.lang.Class class$org$apache$commons$httpclient$HttpState> = $r2;

        goto label2;

     label1:
        $r2 = <org.apache.commons.httpclient.HttpState: java.lang.Class class$org$apache$commons$httpclient$HttpState>;

     label2:
        $r1 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r2);

        <org.apache.commons.httpclient.HttpState: org.apache.commons.logging.Log LOG> = $r1;

        return;
    }
}
