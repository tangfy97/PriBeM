public class groovy.lang.Sequence extends java.util.ArrayList implements groovy.lang.GroovyObject
{
    private groovy.lang.MetaClass metaClass;
    private java.lang.Class type;
    private int hashCode;

    public void <init>()
    {
        groovy.lang.Sequence r0;

        r0 := @this: groovy.lang.Sequence;

        specialinvoke r0.<groovy.lang.Sequence: void <init>(java.lang.Class)>(null);

        return;
    }

    public void <init>(java.lang.Class)
    {
        groovy.lang.MetaClass $r1;
        java.lang.Class r2;
        groovy.lang.Sequence r0;

        r0 := @this: groovy.lang.Sequence;

        r2 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.util.ArrayList: void <init>()>();

        $r1 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: groovy.lang.MetaClass getMetaClass(java.lang.Object)>(r0);

        r0.<groovy.lang.Sequence: groovy.lang.MetaClass metaClass> = $r1;

        r0.<groovy.lang.Sequence: java.lang.Class type> = r2;

        return;
    }

    public void <init>(java.lang.Class, java.util.List)
    {
        groovy.lang.MetaClass $r2;
        java.util.List r1;
        int $i0;
        java.lang.Class r3;
        groovy.lang.Sequence r0;

        r0 := @this: groovy.lang.Sequence;

        r3 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        specialinvoke r0.<java.util.ArrayList: void <init>(int)>($i0);

        $r2 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: groovy.lang.MetaClass getMetaClass(java.lang.Object)>(r0);

        r0.<groovy.lang.Sequence: groovy.lang.MetaClass metaClass> = $r2;

        r0.<groovy.lang.Sequence: java.lang.Class type> = r3;

        virtualinvoke r0.<groovy.lang.Sequence: boolean addAll(java.util.Collection)>(r1);

        return;
    }

    public void set(java.util.Collection)
    {
        groovy.lang.Sequence r0;
        java.util.Collection r1;

        r0 := @this: groovy.lang.Sequence;

        r1 := @parameter0: java.util.Collection;

        virtualinvoke r0.<groovy.lang.Sequence: void checkCollectionType(java.util.Collection)>(r1);

        virtualinvoke r0.<groovy.lang.Sequence: void clear()>();

        virtualinvoke r0.<groovy.lang.Sequence: boolean addAll(java.util.Collection)>(r1);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        groovy.lang.Sequence r1, $r2;
        boolean $z0, $z1;

        r1 := @this: groovy.lang.Sequence;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof groovy.lang.Sequence;

        if $z0 == 0 goto label1;

        $r2 = (groovy.lang.Sequence) r0;

        $z1 = virtualinvoke r1.<groovy.lang.Sequence: boolean equals(groovy.lang.Sequence)>($r2);

        return $z1;

     label1:
        return 0;
    }

    public boolean equals(groovy.lang.Sequence)
    {
        groovy.lang.Sequence r0, r1;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r2, $r3;
        boolean $z0;

        r0 := @this: groovy.lang.Sequence;

        r1 := @parameter0: groovy.lang.Sequence;

        $i0 = virtualinvoke r0.<groovy.lang.Sequence: int size()>();

        $i1 = virtualinvoke r1.<groovy.lang.Sequence: int size()>();

        if $i0 != $i1 goto label4;

        i3 = 0;

     label1:
        $i2 = virtualinvoke r0.<groovy.lang.Sequence: int size()>();

        if i3 >= $i2 goto label3;

        $r2 = virtualinvoke r0.<groovy.lang.Sequence: java.lang.Object get(int)>(i3);

        $r3 = virtualinvoke r1.<groovy.lang.Sequence: java.lang.Object get(int)>(i3);

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean compareEqual(java.lang.Object,java.lang.Object)>($r2, $r3);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 1;

     label4:
        return 0;
    }

    public int hashCode()
    {
        groovy.lang.Sequence r0;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i9, $i11;
        java.lang.Object $r1;

        r0 := @this: groovy.lang.Sequence;

        $i0 = r0.<groovy.lang.Sequence: int hashCode>;

        if $i0 != 0 goto label5;

        i5 = 0;

     label1:
        $i1 = virtualinvoke r0.<groovy.lang.Sequence: int size()>();

        if i5 >= $i1 goto label4;

        $r1 = virtualinvoke r0.<groovy.lang.Sequence: java.lang.Object get(int)>(i5);

        if $r1 == null goto label2;

        $i6 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        goto label3;

     label2:
        $i9 = (int) 47806;

        $i6 = $i9;

     label3:
        $i3 = r0.<groovy.lang.Sequence: int hashCode>;

        $i4 = $i3 ^ $i6;

        r0.<groovy.lang.Sequence: int hashCode> = $i4;

        i5 = i5 + 1;

        goto label1;

     label4:
        $i2 = r0.<groovy.lang.Sequence: int hashCode>;

        if $i2 != 0 goto label5;

        $i11 = (int) 47806;

        r0.<groovy.lang.Sequence: int hashCode> = $i11;

     label5:
        $i7 = r0.<groovy.lang.Sequence: int hashCode>;

        return $i7;
    }

    public int minimumSize()
    {
        groovy.lang.Sequence r0;

        r0 := @this: groovy.lang.Sequence;

        return 0;
    }

    public java.lang.Class type()
    {
        java.lang.Class $r1;
        groovy.lang.Sequence r0;

        r0 := @this: groovy.lang.Sequence;

        $r1 = r0.<groovy.lang.Sequence: java.lang.Class type>;

        return $r1;
    }

    public void add(int, java.lang.Object)
    {
        int i0;
        java.lang.Object r1;
        groovy.lang.Sequence r0;

        r0 := @this: groovy.lang.Sequence;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        virtualinvoke r0.<groovy.lang.Sequence: void checkType(java.lang.Object)>(r1);

        r0.<groovy.lang.Sequence: int hashCode> = 0;

        specialinvoke r0.<java.util.ArrayList: void add(int,java.lang.Object)>(i0, r1);

        return;
    }

    public boolean add(java.lang.Object)
    {
        java.lang.Object r1;
        groovy.lang.Sequence r0;
        boolean $z0;

        r0 := @this: groovy.lang.Sequence;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<groovy.lang.Sequence: void checkType(java.lang.Object)>(r1);

        r0.<groovy.lang.Sequence: int hashCode> = 0;

        $z0 = specialinvoke r0.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean addAll(java.util.Collection)
    {
        groovy.lang.Sequence r0;
        java.util.Collection r1;
        boolean $z0;

        r0 := @this: groovy.lang.Sequence;

        r1 := @parameter0: java.util.Collection;

        virtualinvoke r0.<groovy.lang.Sequence: void checkCollectionType(java.util.Collection)>(r1);

        r0.<groovy.lang.Sequence: int hashCode> = 0;

        $z0 = specialinvoke r0.<java.util.ArrayList: boolean addAll(java.util.Collection)>(r1);

        return $z0;
    }

    public boolean addAll(int, java.util.Collection)
    {
        java.util.Collection r1;
        int i0;
        groovy.lang.Sequence r0;
        boolean $z0;

        r0 := @this: groovy.lang.Sequence;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Collection;

        virtualinvoke r0.<groovy.lang.Sequence: void checkCollectionType(java.util.Collection)>(r1);

        r0.<groovy.lang.Sequence: int hashCode> = 0;

        $z0 = specialinvoke r0.<java.util.ArrayList: boolean addAll(int,java.util.Collection)>(i0, r1);

        return $z0;
    }

    public void clear()
    {
        groovy.lang.Sequence r0;

        r0 := @this: groovy.lang.Sequence;

        r0.<groovy.lang.Sequence: int hashCode> = 0;

        specialinvoke r0.<java.util.ArrayList: void clear()>();

        return;
    }

    public java.lang.Object remove(int)
    {
        int i0;
        java.lang.Object $r1;
        groovy.lang.Sequence r0;

        r0 := @this: groovy.lang.Sequence;

        i0 := @parameter0: int;

        r0.<groovy.lang.Sequence: int hashCode> = 0;

        $r1 = specialinvoke r0.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        return $r1;
    }

    protected void removeRange(int, int)
    {
        int i0, i1;
        groovy.lang.Sequence r0;

        r0 := @this: groovy.lang.Sequence;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<groovy.lang.Sequence: int hashCode> = 0;

        specialinvoke r0.<java.util.ArrayList: void removeRange(int,int)>(i0, i1);

        return;
    }

    public java.lang.Object set(int, java.lang.Object)
    {
        int i0;
        java.lang.Object r1, $r2;
        groovy.lang.Sequence r0;

        r0 := @this: groovy.lang.Sequence;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r0.<groovy.lang.Sequence: int hashCode> = 0;

        $r2 = specialinvoke r0.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        return $r2;
    }

    public java.lang.Object invokeMethod(java.lang.String, java.lang.Object)
    {
        groovy.lang.MetaClass $r1;
        java.util.Iterator $r7;
        groovy.lang.MissingMethodException $r5;
        groovy.lang.Sequence r0;
        java.util.ArrayList $r6;
        int $i0;
        java.lang.Object r3, $r4, $r8, $r9;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: groovy.lang.Sequence;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

     label1:
        $r1 = virtualinvoke r0.<groovy.lang.Sequence: groovy.lang.MetaClass getMetaClass()>();

        $r4 = interfaceinvoke $r1.<groovy.lang.MetaClass: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>(r0, r2, r3);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.util.ArrayList;

        $i0 = virtualinvoke r0.<groovy.lang.Sequence: int size()>();

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i0);

        $r7 = virtualinvoke r0.<groovy.lang.Sequence: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object)>($r8, r2, r3);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r9);

        goto label4;

     label5:
        return $r6;

        catch groovy.lang.MissingMethodException from label1 to label2 with label3;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        groovy.lang.MetaClass $r1;
        java.lang.Object $r3;
        java.lang.String r2;
        groovy.lang.Sequence r0;

        r0 := @this: groovy.lang.Sequence;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<groovy.lang.Sequence: groovy.lang.MetaClass getMetaClass()>();

        $r3 = interfaceinvoke $r1.<groovy.lang.MetaClass: java.lang.Object getProperty(java.lang.Object,java.lang.String)>(r0, r2);

        return $r3;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        groovy.lang.MetaClass $r1;
        java.lang.Object r3;
        java.lang.String r2;
        groovy.lang.Sequence r0;

        r0 := @this: groovy.lang.Sequence;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        $r1 = virtualinvoke r0.<groovy.lang.Sequence: groovy.lang.MetaClass getMetaClass()>();

        interfaceinvoke $r1.<groovy.lang.MetaClass: void setProperty(java.lang.Object,java.lang.String,java.lang.Object)>(r0, r2, r3);

        return;
    }

    public groovy.lang.MetaClass getMetaClass()
    {
        groovy.lang.MetaClass $r1;
        groovy.lang.Sequence r0;

        r0 := @this: groovy.lang.Sequence;

        $r1 = r0.<groovy.lang.Sequence: groovy.lang.MetaClass metaClass>;

        return $r1;
    }

    public void setMetaClass(groovy.lang.MetaClass)
    {
        groovy.lang.MetaClass r1;
        groovy.lang.Sequence r0;

        r0 := @this: groovy.lang.Sequence;

        r1 := @parameter0: groovy.lang.MetaClass;

        r0.<groovy.lang.Sequence: groovy.lang.MetaClass metaClass> = r1;

        return;
    }

    protected void checkCollectionType(java.util.Collection)
    {
        java.util.Iterator $r3;
        java.util.Collection r2;
        java.lang.Class $r1;
        java.lang.Object $r4;
        groovy.lang.Sequence r0;
        boolean $z0;

        r0 := @this: groovy.lang.Sequence;

        r2 := @parameter0: java.util.Collection;

        $r1 = r0.<groovy.lang.Sequence: java.lang.Class type>;

        if $r1 == null goto label2;

        $r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r0.<groovy.lang.Sequence: void checkType(java.lang.Object)>($r4);

        goto label1;

     label2:
        return;
    }

    protected void checkType(java.lang.Object)
    {
        java.lang.IllegalArgumentException $r4;
        groovy.lang.Sequence r1;
        java.lang.NullPointerException $r13;
        java.lang.StringBuffer $r5, $r6, $r9, $r10, $r11;
        java.lang.Object r0;
        java.lang.Class $r2, $r3, $r7;
        java.lang.String $r8, $r12;
        boolean $z0;

        r1 := @this: groovy.lang.Sequence;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $r13 = new java.lang.NullPointerException;

        specialinvoke $r13.<java.lang.NullPointerException: void <init>(java.lang.String)>("Sequences cannot contain null, use a List instead");

        throw $r13;

     label1:
        $r2 = r1.<groovy.lang.Sequence: java.lang.Class type>;

        if $r2 == null goto label2;

        $r3 = r1.<groovy.lang.Sequence: java.lang.Class type>;

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isInstance(java.lang.Object)>(r0);

        if $z0 != 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid type of argument for sequence of type: ");

        $r7 = r1.<groovy.lang.Sequence: java.lang.Class type>;

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" cannot add object: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r4;

     label2:
        return;
    }
}
