public class org.waveprotocol.wave.client.editor.testing.ContentSerialisationUtil extends java.lang.Object
{

    private void <init>()
    {
        org.waveprotocol.wave.client.editor.testing.ContentSerialisationUtil r0;

        r0 := @this: org.waveprotocol.wave.client.editor.testing.ContentSerialisationUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getContentString(org.waveprotocol.wave.client.editor.Editor)
    {
        org.waveprotocol.wave.client.editor.Editor r0;
        org.waveprotocol.wave.client.editor.content.ContentView $r1;
        org.waveprotocol.wave.model.document.util.XmlStringBuilderDoc $r2;
        java.lang.String $r3;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.Editor;

        $r1 = interfaceinvoke r0.<org.waveprotocol.wave.client.editor.Editor: org.waveprotocol.wave.client.editor.content.ContentView getPersistentDocument()>();

        $r2 = staticinvoke <org.waveprotocol.wave.model.document.util.XmlStringBuilder: org.waveprotocol.wave.model.document.util.XmlStringBuilderDoc innerXml(org.waveprotocol.wave.model.document.ReadableDocument)>($r1);

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.model.document.util.XmlStringBuilderDoc: java.lang.String toString()>();

        return $r3;
    }

    public static void setContentString(org.waveprotocol.wave.client.editor.Editor, java.lang.String)
    {
        org.waveprotocol.wave.model.document.indexed.IndexedDocument $r3;
        org.waveprotocol.wave.client.editor.Editor r0;
        org.waveprotocol.wave.model.document.indexed.IndexedDocProvider $r2;
        org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema $r5;
        org.waveprotocol.wave.model.document.operation.DocInitialization $r4;
        java.lang.String r1;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.Editor;

        r1 := @parameter1: java.lang.String;

        $r2 = <org.waveprotocol.wave.model.document.util.DocProviders: org.waveprotocol.wave.model.document.indexed.IndexedDocProvider POJO>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.model.document.indexed.IndexedDocProvider: org.waveprotocol.wave.model.document.indexed.IndexedDocument parse(java.lang.String)>(r1);

        $r4 = interfaceinvoke $r3.<org.waveprotocol.wave.model.document.indexed.IndexedDocument: org.waveprotocol.wave.model.document.operation.DocInitialization asOperation()>();

        $r5 = <org.waveprotocol.wave.model.schema.conversation.ConversationSchemas: org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema BLIP_SCHEMA_CONSTRAINTS>;

        interfaceinvoke r0.<org.waveprotocol.wave.client.editor.Editor: void setContent(org.waveprotocol.wave.model.document.operation.DocInitialization,org.waveprotocol.wave.model.document.operation.automaton.DocumentSchema)>($r4, $r5);

        return;
    }
}
