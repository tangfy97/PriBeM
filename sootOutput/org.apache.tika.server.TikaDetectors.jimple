public class org.apache.tika.server.TikaDetectors extends java.lang.Object
{
    private org.apache.tika.config.TikaConfig tika;
    private org.apache.tika.server.HTMLHelper html;

    public void <init>(org.apache.tika.config.TikaConfig)
    {
        org.apache.tika.server.TikaDetectors r0;
        org.apache.tika.server.HTMLHelper $r2;
        org.apache.tika.config.TikaConfig r1;

        r0 := @this: org.apache.tika.server.TikaDetectors;

        r1 := @parameter0: org.apache.tika.config.TikaConfig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.tika.server.TikaDetectors: org.apache.tika.config.TikaConfig tika> = r1;

        $r2 = new org.apache.tika.server.HTMLHelper;

        specialinvoke $r2.<org.apache.tika.server.HTMLHelper: void <init>()>();

        r0.<org.apache.tika.server.TikaDetectors: org.apache.tika.server.HTMLHelper html> = $r2;

        return;
    }

    public java.lang.String getDectorsHTML()
    {
        org.apache.tika.server.TikaDetectors r1;
        org.apache.tika.server.HTMLHelper $r2, $r5;
        java.lang.StringBuffer $r0;
        org.apache.tika.config.TikaConfig $r3;
        java.lang.String $r6;
        org.apache.tika.detect.Detector $r4;

        r1 := @this: org.apache.tika.server.TikaDetectors;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.apache.tika.server.TikaDetectors: org.apache.tika.server.HTMLHelper html>;

        virtualinvoke $r2.<org.apache.tika.server.HTMLHelper: void generateHeader(java.lang.StringBuffer,java.lang.String)>($r0, "Detectors available to Apache Tika");

        $r3 = r1.<org.apache.tika.server.TikaDetectors: org.apache.tika.config.TikaConfig tika>;

        $r4 = virtualinvoke $r3.<org.apache.tika.config.TikaConfig: org.apache.tika.detect.Detector getDetector()>();

        specialinvoke r1.<org.apache.tika.server.TikaDetectors: void detectorAsHTML(org.apache.tika.detect.Detector,java.lang.StringBuffer,int)>($r4, $r0, 2);

        $r5 = r1.<org.apache.tika.server.TikaDetectors: org.apache.tika.server.HTMLHelper html>;

        virtualinvoke $r5.<org.apache.tika.server.HTMLHelper: void generateFooter(java.lang.StringBuffer)>($r0);

        $r6 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    private void detectorAsHTML(org.apache.tika.detect.Detector, java.lang.StringBuffer, int)
    {
        org.apache.tika.detect.CompositeDetector $r5;
        java.lang.StringBuffer r0;
        int i0, $i1, $i2, $i3;
        java.lang.String $r3, $r4;
        boolean $z0, $z1;
        java.util.Iterator $r7;
        org.apache.tika.detect.Detector r1, r9;
        org.apache.tika.server.TikaDetectors r10;
        java.util.List $r6;
        java.lang.Class $r2;
        java.lang.Object $r8;

        r10 := @this: org.apache.tika.server.TikaDetectors;

        r1 := @parameter0: org.apache.tika.detect.Detector;

        r0 := @parameter1: java.lang.StringBuffer;

        i0 := @parameter2: int;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<h");

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">");

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $i1 = virtualinvoke $r3.<java.lang.String: int lastIndexOf(int)>(46);

        $i2 = $i1 + 1;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i2);

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</h");

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">");

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<p>Class: ");

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</p>");

        $z0 = r1 instanceof org.apache.tika.detect.CompositeDetector;

        if $z0 == 0 goto label2;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<p>Composite Detector</p>");

        $r5 = (org.apache.tika.detect.CompositeDetector) r1;

        $r6 = virtualinvoke $r5.<org.apache.tika.detect.CompositeDetector: java.util.List getDetectors()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.apache.tika.detect.Detector) $r8;

        $i3 = i0 + 1;

        specialinvoke r10.<org.apache.tika.server.TikaDetectors: void detectorAsHTML(org.apache.tika.detect.Detector,java.lang.StringBuffer,int)>(r9, r0, $i3);

        goto label1;

     label2:
        return;
    }

    public java.lang.String getDetectorsJSON()
    {
        org.apache.tika.server.TikaDetectors r1;
        java.util.HashMap $r0;
        org.apache.tika.config.TikaConfig $r2;
        java.lang.String $r4;
        org.apache.tika.detect.Detector $r3;

        r1 := @this: org.apache.tika.server.TikaDetectors;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r2 = r1.<org.apache.tika.server.TikaDetectors: org.apache.tika.config.TikaConfig tika>;

        $r3 = virtualinvoke $r2.<org.apache.tika.config.TikaConfig: org.apache.tika.detect.Detector getDetector()>();

        specialinvoke r1.<org.apache.tika.server.TikaDetectors: void detectorAsMap(org.apache.tika.detect.Detector,java.util.Map)>($r3, $r0);

        $r4 = staticinvoke <org.eclipse.jetty.util.ajax.JSON: java.lang.String toString(java.util.Map)>($r0);

        return $r4;
    }

    private void detectorAsMap(org.apache.tika.detect.Detector, java.util.Map)
    {
        org.apache.tika.detect.CompositeDetector $r6;
        java.util.Iterator $r8;
        java.util.HashMap $r11;
        org.apache.tika.detect.Detector r1, r10;
        java.util.ArrayList $r5;
        org.apache.tika.server.TikaDetectors r12;
        java.util.List $r7;
        java.util.Map r0;
        java.lang.Boolean $r4;
        java.lang.Class $r2;
        java.lang.Object $r9;
        java.lang.String $r3;
        boolean z0, $z1;

        r12 := @this: org.apache.tika.server.TikaDetectors;

        r1 := @parameter0: org.apache.tika.detect.Detector;

        r0 := @parameter1: java.util.Map;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("name", $r3);

        z0 = r1 instanceof org.apache.tika.detect.CompositeDetector;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("composite", $r4);

        if z0 == 0 goto label3;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = (org.apache.tika.detect.CompositeDetector) r1;

        $r7 = virtualinvoke $r6.<org.apache.tika.detect.CompositeDetector: java.util.List getDetectors()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.apache.tika.detect.Detector) $r9;

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        specialinvoke r12.<org.apache.tika.server.TikaDetectors: void detectorAsMap(org.apache.tika.detect.Detector,java.util.Map)>(r10, $r11);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r11);

        goto label1;

     label2:
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("children", $r5);

     label3:
        return;
    }

    public java.lang.String getDetectorsPlain()
    {
        org.apache.tika.server.TikaDetectors r1;
        java.lang.StringBuffer $r0;
        org.apache.tika.config.TikaConfig $r2;
        java.lang.String $r4;
        org.apache.tika.detect.Detector $r3;

        r1 := @this: org.apache.tika.server.TikaDetectors;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.apache.tika.server.TikaDetectors: org.apache.tika.config.TikaConfig tika>;

        $r3 = virtualinvoke $r2.<org.apache.tika.config.TikaConfig: org.apache.tika.detect.Detector getDetector()>();

        specialinvoke r1.<org.apache.tika.server.TikaDetectors: void renderDetector(org.apache.tika.detect.Detector,java.lang.StringBuffer,int)>($r3, $r0, 0);

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    private void renderDetector(org.apache.tika.detect.Detector, java.lang.StringBuffer, int)
    {
        org.apache.tika.detect.CompositeDetector $r4;
        java.util.Iterator $r6;
        org.apache.tika.detect.Detector r0, r8;
        org.apache.tika.server.TikaDetectors r9;
        java.util.List $r5;
        java.lang.StringBuffer r3;
        int i0, $i1, i2;
        java.lang.Class $r1;
        java.lang.Object $r7;
        java.lang.String $r2;
        boolean z0, $z1;

        r9 := @this: org.apache.tika.server.TikaDetectors;

        r0 := @parameter0: org.apache.tika.detect.Detector;

        r3 := @parameter1: java.lang.StringBuffer;

        i0 := @parameter2: int;

        z0 = r0 instanceof org.apache.tika.detect.CompositeDetector;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  ");

        i2 = i2 + 1;

        goto label1;

     label2:
        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        if z0 == 0 goto label5;

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (Composite Detector):\n");

        $r4 = (org.apache.tika.detect.CompositeDetector) r0;

        $r5 = virtualinvoke $r4.<org.apache.tika.detect.CompositeDetector: java.util.List getDetectors()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.tika.detect.Detector) $r7;

        $i1 = i0 + 1;

        specialinvoke r9.<org.apache.tika.server.TikaDetectors: void renderDetector(org.apache.tika.detect.Detector,java.lang.StringBuffer,int)>(r8, r3, $i1);

        goto label3;

     label4:
        goto label6;

     label5:
        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

     label6:
        return;
    }
}
