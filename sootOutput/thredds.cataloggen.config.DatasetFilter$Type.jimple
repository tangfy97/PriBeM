final enum class thredds.cataloggen.config.DatasetFilter$Type extends java.lang.Enum
{
    public static final enum thredds.cataloggen.config.DatasetFilter$Type REGULAR_EXPRESSION;
    private java.lang.String altId;
    private static final thredds.cataloggen.config.DatasetFilter$Type[] $VALUES;

    public static thredds.cataloggen.config.DatasetFilter$Type[] values()
    {
        java.lang.Object $r1;
        thredds.cataloggen.config.DatasetFilter$Type[] $r0, $r2;

        $r0 = <thredds.cataloggen.config.DatasetFilter$Type: thredds.cataloggen.config.DatasetFilter$Type[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (thredds.cataloggen.config.DatasetFilter$Type[]) $r1;

        return $r2;
    }

    public static thredds.cataloggen.config.DatasetFilter$Type valueOf(java.lang.String)
    {
        thredds.cataloggen.config.DatasetFilter$Type $r2;
        java.lang.String r0;
        java.lang.Enum $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lthredds/cataloggen/config/DatasetFilter$Type;", r0);

        $r2 = (thredds.cataloggen.config.DatasetFilter$Type) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, java.lang.String)
    {
        int i0;
        thredds.cataloggen.config.DatasetFilter$Type r0;
        java.lang.String r1, r2;

        r0 := @this: thredds.cataloggen.config.DatasetFilter$Type;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<thredds.cataloggen.config.DatasetFilter$Type: java.lang.String altId> = r2;

        return;
    }

    public java.lang.String toString()
    {
        thredds.cataloggen.config.DatasetFilter$Type r0;
        java.lang.String $r1;

        r0 := @this: thredds.cataloggen.config.DatasetFilter$Type;

        $r1 = r0.<thredds.cataloggen.config.DatasetFilter$Type: java.lang.String altId>;

        return $r1;
    }

    public static thredds.cataloggen.config.DatasetFilter$Type getType(java.lang.String)
    {
        int i0, i1;
        thredds.cataloggen.config.DatasetFilter$Type r2;
        java.lang.String r0, $r3;
        thredds.cataloggen.config.DatasetFilter$Type[] $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = staticinvoke <thredds.cataloggen.config.DatasetFilter$Type: thredds.cataloggen.config.DatasetFilter$Type[] values()>();

        i0 = lengthof $r1;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        r2 = $r1[i1];

        $r3 = r2.<thredds.cataloggen.config.DatasetFilter$Type: java.lang.String altId>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label3;

        return r2;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return null;
    }

    static void <clinit>()
    {
        thredds.cataloggen.config.DatasetFilter$Type $r0, $r2;
        thredds.cataloggen.config.DatasetFilter$Type[] $r1;

        $r0 = new thredds.cataloggen.config.DatasetFilter$Type;

        specialinvoke $r0.<thredds.cataloggen.config.DatasetFilter$Type: void <init>(java.lang.String,int,java.lang.String)>("REGULAR_EXPRESSION", 0, "RegExp");

        <thredds.cataloggen.config.DatasetFilter$Type: thredds.cataloggen.config.DatasetFilter$Type REGULAR_EXPRESSION> = $r0;

        $r1 = newarray (thredds.cataloggen.config.DatasetFilter$Type)[1];

        $r2 = <thredds.cataloggen.config.DatasetFilter$Type: thredds.cataloggen.config.DatasetFilter$Type REGULAR_EXPRESSION>;

        $r1[0] = $r2;

        <thredds.cataloggen.config.DatasetFilter$Type: thredds.cataloggen.config.DatasetFilter$Type[] $VALUES> = $r1;

        return;
    }
}
