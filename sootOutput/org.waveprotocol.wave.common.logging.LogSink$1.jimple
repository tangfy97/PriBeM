class org.waveprotocol.wave.common.logging.LogSink$1 extends java.lang.Object
{
    final java.lang.Throwable val$t;
    final org.waveprotocol.wave.common.logging.LogSink this$0;

    void <init>(org.waveprotocol.wave.common.logging.LogSink, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        org.waveprotocol.wave.common.logging.LogSink$1 r0;
        org.waveprotocol.wave.common.logging.LogSink r1;

        r0 := @this: org.waveprotocol.wave.common.logging.LogSink$1;

        r1 := @parameter0: org.waveprotocol.wave.common.logging.LogSink;

        r2 := @parameter1: java.lang.Throwable;

        r0.<org.waveprotocol.wave.common.logging.LogSink$1: org.waveprotocol.wave.common.logging.LogSink this$0> = r1;

        r0.<org.waveprotocol.wave.common.logging.LogSink$1: java.lang.Throwable val$t> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String toString()
    {
        java.lang.Throwable $r2, $r7;
        org.waveprotocol.wave.common.logging.LogSink$1 r1;
        java.lang.StringBuilder $r0, $r5, $r6, $r9;
        java.lang.String $r3, $r4, $r8, $r10;

        r1 := @this: org.waveprotocol.wave.common.logging.LogSink$1;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.waveprotocol.wave.common.logging.LogSink$1: java.lang.Throwable val$t>;

        $r3 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String toString()>();

        $r4 = staticinvoke <org.waveprotocol.wave.common.logging.LogUtils: java.lang.String xmlEscape(java.lang.String)>($r3);

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<br/>");

        $r7 = r1.<org.waveprotocol.wave.common.logging.LogSink$1: java.lang.Throwable val$t>;

        $r8 = staticinvoke <org.waveprotocol.wave.common.logging.LogUtils: java.lang.String printStackTraceAsHtml(java.lang.Throwable)>($r7);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }
}
