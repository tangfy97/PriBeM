public class org.waveprotocol.wave.model.operation.core.CoreTransform extends java.lang.Object
{

    public void <init>()
    {
        org.waveprotocol.wave.model.operation.core.CoreTransform r0;

        r0 := @this: org.waveprotocol.wave.model.operation.core.CoreTransform;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.waveprotocol.wave.model.operation.OperationPair transform(org.waveprotocol.wave.model.operation.core.CoreWaveletOperation, org.waveprotocol.wave.model.wave.ParticipantId, org.waveprotocol.wave.model.operation.core.CoreWaveletOperation, org.waveprotocol.wave.model.wave.ParticipantId) throws org.waveprotocol.wave.model.operation.TransformException
    {
        org.waveprotocol.wave.model.document.operation.DocOp $r12, $r13, $r18, $r22;
        org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant $r0, r28, r29;
        org.waveprotocol.wave.model.wave.ParticipantId $r1, $r2, $r3, r4, $r6, $r7, r23;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation $r15, $r19, r26, r27;
        org.waveprotocol.wave.model.operation.core.CoreAddParticipant $r5, r30, r31;
        org.waveprotocol.wave.model.operation.RemovedAuthorException $r8;
        org.waveprotocol.wave.model.operation.core.CoreWaveletOperation r24, r25;
        java.lang.String $r9, $r10, $r11, $r16, $r20;
        org.waveprotocol.wave.model.operation.OperationPair $r14, $r32;
        java.lang.Object $r17, $r21;

        r24 := @parameter0: org.waveprotocol.wave.model.operation.core.CoreWaveletOperation;

        r4 := @parameter1: org.waveprotocol.wave.model.wave.ParticipantId;

        r25 := @parameter2: org.waveprotocol.wave.model.operation.core.CoreWaveletOperation;

        r23 := @parameter3: org.waveprotocol.wave.model.wave.ParticipantId;

        $z0 = r24 instanceof org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation;

        if $z0 == 0 goto label02;

        $z10 = r25 instanceof org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation;

        if $z10 == 0 goto label02;

        r26 = (org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation) r24;

        r27 = (org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation) r25;

        $r10 = virtualinvoke r26.<org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation: java.lang.String getDocumentId()>();

        $r11 = virtualinvoke r27.<org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation: java.lang.String getDocumentId()>();

        $z11 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z11 == 0 goto label01;

        $r12 = virtualinvoke r26.<org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation: org.waveprotocol.wave.model.document.operation.DocOp getOperation()>();

        $r13 = virtualinvoke r27.<org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation: org.waveprotocol.wave.model.document.operation.DocOp getOperation()>();

        $r14 = staticinvoke <org.waveprotocol.wave.model.document.operation.algorithm.Transformer: org.waveprotocol.wave.model.operation.OperationPair transform(org.waveprotocol.wave.model.document.operation.DocOp,org.waveprotocol.wave.model.document.operation.DocOp)>($r12, $r13);

        $r15 = new org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation;

        $r16 = virtualinvoke r26.<org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation: java.lang.String getDocumentId()>();

        $r17 = virtualinvoke $r14.<org.waveprotocol.wave.model.operation.OperationPair: java.lang.Object clientOp()>();

        $r18 = (org.waveprotocol.wave.model.document.operation.DocOp) $r17;

        specialinvoke $r15.<org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation: void <init>(java.lang.String,org.waveprotocol.wave.model.document.operation.DocOp)>($r16, $r18);

        r24 = $r15;

        $r19 = new org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation;

        $r20 = virtualinvoke r27.<org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation: java.lang.String getDocumentId()>();

        $r21 = virtualinvoke $r14.<org.waveprotocol.wave.model.operation.OperationPair: java.lang.Object serverOp()>();

        $r22 = (org.waveprotocol.wave.model.document.operation.DocOp) $r21;

        specialinvoke $r19.<org.waveprotocol.wave.model.operation.core.CoreWaveletDocumentOperation: void <init>(java.lang.String,org.waveprotocol.wave.model.document.operation.DocOp)>($r20, $r22);

        r25 = $r19;

     label01:
        goto label10;

     label02:
        $z1 = r25 instanceof org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant;

        if $z1 == 0 goto label07;

        r28 = (org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant) r25;

        $r3 = virtualinvoke r28.<org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant: org.waveprotocol.wave.model.wave.ParticipantId getParticipantId()>();

        $z6 = virtualinvoke $r3.<org.waveprotocol.wave.model.wave.ParticipantId: boolean equals(java.lang.Object)>(r4);

        if $z6 == 0 goto label03;

        $r8 = new org.waveprotocol.wave.model.operation.RemovedAuthorException;

        $r9 = virtualinvoke r4.<org.waveprotocol.wave.model.wave.ParticipantId: java.lang.String getAddress()>();

        specialinvoke $r8.<org.waveprotocol.wave.model.operation.RemovedAuthorException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label03:
        $z7 = r24 instanceof org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant;

        if $z7 == 0 goto label05;

        r29 = (org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant) r24;

        $r6 = virtualinvoke r29.<org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant: org.waveprotocol.wave.model.wave.ParticipantId getParticipantId()>();

        $r7 = virtualinvoke r28.<org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant: org.waveprotocol.wave.model.wave.ParticipantId getParticipantId()>();

        $z9 = virtualinvoke $r6.<org.waveprotocol.wave.model.wave.ParticipantId: boolean equals(java.lang.Object)>($r7);

        if $z9 == 0 goto label04;

        r24 = <org.waveprotocol.wave.model.operation.core.CoreNoOp: org.waveprotocol.wave.model.operation.core.CoreNoOp INSTANCE>;

        r25 = <org.waveprotocol.wave.model.operation.core.CoreNoOp: org.waveprotocol.wave.model.operation.core.CoreNoOp INSTANCE>;

     label04:
        goto label06;

     label05:
        $z8 = r24 instanceof org.waveprotocol.wave.model.operation.core.CoreAddParticipant;

        if $z8 == 0 goto label06;

        $r5 = (org.waveprotocol.wave.model.operation.core.CoreAddParticipant) r24;

        staticinvoke <org.waveprotocol.wave.model.operation.core.CoreTransform: void checkParticipantRemovalAndAddition(org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant,org.waveprotocol.wave.model.operation.core.CoreAddParticipant)>(r28, $r5);

     label06:
        goto label10;

     label07:
        $z2 = r25 instanceof org.waveprotocol.wave.model.operation.core.CoreAddParticipant;

        if $z2 == 0 goto label10;

        r30 = (org.waveprotocol.wave.model.operation.core.CoreAddParticipant) r25;

        $z3 = r24 instanceof org.waveprotocol.wave.model.operation.core.CoreAddParticipant;

        if $z3 == 0 goto label09;

        r31 = (org.waveprotocol.wave.model.operation.core.CoreAddParticipant) r24;

        $r1 = virtualinvoke r31.<org.waveprotocol.wave.model.operation.core.CoreAddParticipant: org.waveprotocol.wave.model.wave.ParticipantId getParticipantId()>();

        $r2 = virtualinvoke r30.<org.waveprotocol.wave.model.operation.core.CoreAddParticipant: org.waveprotocol.wave.model.wave.ParticipantId getParticipantId()>();

        $z5 = virtualinvoke $r1.<org.waveprotocol.wave.model.wave.ParticipantId: boolean equals(java.lang.Object)>($r2);

        if $z5 == 0 goto label08;

        r24 = <org.waveprotocol.wave.model.operation.core.CoreNoOp: org.waveprotocol.wave.model.operation.core.CoreNoOp INSTANCE>;

        r25 = <org.waveprotocol.wave.model.operation.core.CoreNoOp: org.waveprotocol.wave.model.operation.core.CoreNoOp INSTANCE>;

     label08:
        goto label10;

     label09:
        $z4 = r24 instanceof org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant;

        if $z4 == 0 goto label10;

        $r0 = (org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant) r24;

        staticinvoke <org.waveprotocol.wave.model.operation.core.CoreTransform: void checkParticipantRemovalAndAddition(org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant,org.waveprotocol.wave.model.operation.core.CoreAddParticipant)>($r0, r30);

     label10:
        $r32 = new org.waveprotocol.wave.model.operation.OperationPair;

        specialinvoke $r32.<org.waveprotocol.wave.model.operation.OperationPair: void <init>(java.lang.Object,java.lang.Object)>(r24, r25);

        return $r32;
    }

    private static void checkParticipantRemovalAndAddition(org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant, org.waveprotocol.wave.model.operation.core.CoreAddParticipant) throws org.waveprotocol.wave.model.operation.TransformException
    {
        org.waveprotocol.wave.model.operation.TransformException $r4;
        org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant r0;
        org.waveprotocol.wave.model.wave.ParticipantId $r1, $r3;
        org.waveprotocol.wave.model.operation.core.CoreAddParticipant r2;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r7, $r9;
        boolean $z0;

        r0 := @parameter0: org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant;

        r2 := @parameter1: org.waveprotocol.wave.model.operation.core.CoreAddParticipant;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.operation.core.CoreRemoveParticipant: org.waveprotocol.wave.model.wave.ParticipantId getParticipantId()>();

        $r3 = virtualinvoke r2.<org.waveprotocol.wave.model.operation.core.CoreAddParticipant: org.waveprotocol.wave.model.wave.ParticipantId getParticipantId()>();

        $z0 = virtualinvoke $r1.<org.waveprotocol.wave.model.wave.ParticipantId: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r4 = new org.waveprotocol.wave.model.operation.TransformException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Transform error involving participant: ");

        $r7 = virtualinvoke $r1.<org.waveprotocol.wave.model.wave.ParticipantId: java.lang.String getAddress()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.waveprotocol.wave.model.operation.TransformException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label1:
        return;
    }
}
