public final class com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader extends com.sun.xml.bind.v2.model.'annotation'.AbstractInlineAnnotationReaderImpl implements com.sun.xml.bind.v2.model.'annotation'.RuntimeAnnotationReader
{
    private final java.util.Map packageCache;

    public void <init>()
    {
        java.util.HashMap $r1;
        com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader r0;

        r0 := @this: com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader;

        specialinvoke r0.<com.sun.xml.bind.v2.model.'annotation'.AbstractInlineAnnotationReaderImpl: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader: java.util.Map packageCache> = $r1;

        return;
    }

    public java.lang.'annotation'.Annotation getFieldAnnotation(java.lang.Class, java.lang.reflect.Field, com.sun.xml.bind.v2.model.'annotation'.Locatable)
    {
        com.sun.xml.bind.v2.model.'annotation'.Locatable r3;
        com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader r5;
        java.lang.'annotation'.Annotation $r2, $r4;
        java.lang.Class r1;
        java.lang.reflect.Field r0;

        r5 := @this: com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader;

        r1 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.reflect.Field;

        r3 := @parameter2: com.sun.xml.bind.v2.model.'annotation'.Locatable;

        $r2 = virtualinvoke r0.<java.lang.reflect.Field: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(r1);

        $r4 = staticinvoke <com.sun.xml.bind.v2.model.'annotation'.LocatableAnnotation: java.lang.'annotation'.Annotation create(java.lang.'annotation'.Annotation,com.sun.xml.bind.v2.model.'annotation'.Locatable)>($r2, r3);

        return $r4;
    }

    public boolean hasFieldAnnotation(java.lang.Class, java.lang.reflect.Field)
    {
        com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader r2;
        java.lang.Class r1;
        java.lang.reflect.Field r0;
        boolean $z0;

        r2 := @this: com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader;

        r1 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.reflect.Field;

        $z0 = virtualinvoke r0.<java.lang.reflect.Field: boolean isAnnotationPresent(java.lang.Class)>(r1);

        return $z0;
    }

    public boolean hasClassAnnotation(java.lang.Class, java.lang.Class)
    {
        com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader r2;
        java.lang.Class r0, r1;
        boolean $z0;

        r2 := @this: com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Class;

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>(r1);

        return $z0;
    }

    public java.lang.'annotation'.Annotation[] getAllFieldAnnotations(java.lang.reflect.Field, com.sun.xml.bind.v2.model.'annotation'.Locatable)
    {
        com.sun.xml.bind.v2.model.'annotation'.Locatable r2;
        java.lang.'annotation'.Annotation[] $r1;
        java.lang.reflect.Field r0;
        com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader r5;
        int $i0, i1;
        java.lang.'annotation'.Annotation $r3, $r4;

        r5 := @this: com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader;

        r0 := @parameter0: java.lang.reflect.Field;

        r2 := @parameter1: com.sun.xml.bind.v2.model.'annotation'.Locatable;

        $r1 = virtualinvoke r0.<java.lang.reflect.Field: java.lang.'annotation'.Annotation[] getAnnotations()>();

        i1 = 0;

     label1:
        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r3 = $r1[i1];

        $r4 = staticinvoke <com.sun.xml.bind.v2.model.'annotation'.LocatableAnnotation: java.lang.'annotation'.Annotation create(java.lang.'annotation'.Annotation,com.sun.xml.bind.v2.model.'annotation'.Locatable)>($r3, r2);

        $r1[i1] = $r4;

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public java.lang.'annotation'.Annotation getMethodAnnotation(java.lang.Class, java.lang.reflect.Method, com.sun.xml.bind.v2.model.'annotation'.Locatable)
    {
        com.sun.xml.bind.v2.model.'annotation'.Locatable r3;
        com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader r5;
        java.lang.'annotation'.Annotation $r2, $r4;
        java.lang.Class r1;
        java.lang.reflect.Method r0;

        r5 := @this: com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader;

        r1 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.reflect.Method;

        r3 := @parameter2: com.sun.xml.bind.v2.model.'annotation'.Locatable;

        $r2 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(r1);

        $r4 = staticinvoke <com.sun.xml.bind.v2.model.'annotation'.LocatableAnnotation: java.lang.'annotation'.Annotation create(java.lang.'annotation'.Annotation,com.sun.xml.bind.v2.model.'annotation'.Locatable)>($r2, r3);

        return $r4;
    }

    public boolean hasMethodAnnotation(java.lang.Class, java.lang.reflect.Method)
    {
        com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader r2;
        java.lang.Class r1;
        java.lang.reflect.Method r0;
        boolean $z0;

        r2 := @this: com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader;

        r1 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.reflect.Method;

        $z0 = virtualinvoke r0.<java.lang.reflect.Method: boolean isAnnotationPresent(java.lang.Class)>(r1);

        return $z0;
    }

    public java.lang.'annotation'.Annotation[] getAllMethodAnnotations(java.lang.reflect.Method, com.sun.xml.bind.v2.model.'annotation'.Locatable)
    {
        com.sun.xml.bind.v2.model.'annotation'.Locatable r2;
        java.lang.'annotation'.Annotation[] $r1;
        com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader r5;
        int $i0, i1;
        java.lang.'annotation'.Annotation $r3, $r4;
        java.lang.reflect.Method r0;

        r5 := @this: com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader;

        r0 := @parameter0: java.lang.reflect.Method;

        r2 := @parameter1: com.sun.xml.bind.v2.model.'annotation'.Locatable;

        $r1 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.'annotation'.Annotation[] getAnnotations()>();

        i1 = 0;

     label1:
        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r3 = $r1[i1];

        $r4 = staticinvoke <com.sun.xml.bind.v2.model.'annotation'.LocatableAnnotation: java.lang.'annotation'.Annotation create(java.lang.'annotation'.Annotation,com.sun.xml.bind.v2.model.'annotation'.Locatable)>($r3, r2);

        $r1[i1] = $r4;

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public java.lang.'annotation'.Annotation getMethodParameterAnnotation(java.lang.Class, java.lang.reflect.Method, int, com.sun.xml.bind.v2.model.'annotation'.Locatable)
    {
        java.lang.'annotation'.Annotation[][] $r1;
        com.sun.xml.bind.v2.model.'annotation'.Locatable r6;
        java.lang.'annotation'.Annotation[] r2;
        com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader r8;
        int i0, i1, i2;
        java.lang.'annotation'.Annotation r3, $r7;
        java.lang.Class $r4, r5;
        java.lang.reflect.Method r0;

        r8 := @this: com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader;

        r5 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.reflect.Method;

        i0 := @parameter2: int;

        r6 := @parameter3: com.sun.xml.bind.v2.model.'annotation'.Locatable;

        $r1 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.'annotation'.Annotation[][] getParameterAnnotations()>();

        r2 = $r1[i0];

        i1 = lengthof r2;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        r3 = r2[i2];

        $r4 = interfaceinvoke r3.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        if $r4 != r5 goto label2;

        $r7 = staticinvoke <com.sun.xml.bind.v2.model.'annotation'.LocatableAnnotation: java.lang.'annotation'.Annotation create(java.lang.'annotation'.Annotation,com.sun.xml.bind.v2.model.'annotation'.Locatable)>(r3, r6);

        return $r7;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return null;
    }

    public java.lang.'annotation'.Annotation getClassAnnotation(java.lang.Class, java.lang.Class, com.sun.xml.bind.v2.model.'annotation'.Locatable)
    {
        com.sun.xml.bind.v2.model.'annotation'.Locatable r3;
        com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader r5;
        java.lang.'annotation'.Annotation $r2, $r4;
        java.lang.Class r0, r1;

        r5 := @this: com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader;

        r1 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.Class;

        r3 := @parameter2: com.sun.xml.bind.v2.model.'annotation'.Locatable;

        $r2 = virtualinvoke r0.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(r1);

        $r4 = staticinvoke <com.sun.xml.bind.v2.model.'annotation'.LocatableAnnotation: java.lang.'annotation'.Annotation create(java.lang.'annotation'.Annotation,com.sun.xml.bind.v2.model.'annotation'.Locatable)>($r2, r3);

        return $r4;
    }

    public java.lang.'annotation'.Annotation getPackageAnnotation(java.lang.Class, java.lang.Class, com.sun.xml.bind.v2.model.'annotation'.Locatable)
    {
        java.lang.Package $r1;
        com.sun.xml.bind.v2.model.'annotation'.Locatable r7;
        java.util.HashMap $r11;
        com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader r2;
        java.util.Map $r4, $r12, r13;
        java.lang.'annotation'.Annotation $r6, $r8, $r10;
        java.lang.Class r0, r3;
        java.lang.Object $r5, $r9;
        boolean $z0;

        r2 := @this: com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader;

        r3 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.Class;

        r7 := @parameter2: com.sun.xml.bind.v2.model.'annotation'.Locatable;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.Package getPackage()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r4 = r2.<com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader: java.util.Map packageCache>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r13 = (java.util.Map) $r5;

        if r13 != null goto label2;

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        r13 = $r11;

        $r12 = r2.<com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader: java.util.Map packageCache>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r11);

     label2:
        $z0 = interfaceinvoke r13.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke r13.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r10 = (java.lang.'annotation'.Annotation) $r9;

        return $r10;

     label3:
        $r6 = virtualinvoke $r1.<java.lang.Package: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(r3);

        $r8 = staticinvoke <com.sun.xml.bind.v2.model.'annotation'.LocatableAnnotation: java.lang.'annotation'.Annotation create(java.lang.'annotation'.Annotation,com.sun.xml.bind.v2.model.'annotation'.Locatable)>($r6, r7);

        interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r8);

        return $r8;
    }

    public java.lang.Class getClassValue(java.lang.'annotation'.Annotation, java.lang.String)
    {
        java.lang.Object[] $r5, $r13;
        java.lang.NoSuchMethodException $r8;
        java.lang.InternalError $r12;
        java.lang.String r2, $r10, $r16, $r17, $r20;
        java.lang.reflect.Method $r4;
        java.lang.IllegalAccessException $r18;
        java.lang.NoSuchMethodError $r9;
        java.lang.Class[] $r3;
        java.lang.reflect.InvocationTargetException $r11;
        java.lang.IllegalAccessError $r19;
        com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader r21;
        java.lang.'annotation'.Annotation r0;
        java.lang.Class $r1, $r7, $r15;
        java.lang.Object $r6;
        com.sun.xml.bind.v2.model.'annotation'.Messages $r14;

        r21 := @this: com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader;

        r0 := @parameter0: java.lang.'annotation'.Annotation;

        r2 := @parameter1: java.lang.String;

     label1:
        $r1 = interfaceinvoke r0.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $r3 = newarray (java.lang.Class)[0];

        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r2, $r3);

        $r5 = newarray (java.lang.Object)[0];

        $r6 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r5);

        $r7 = (java.lang.Class) $r6;

     label2:
        return $r7;

     label3:
        $r18 := @caughtexception;

        $r19 = new java.lang.IllegalAccessError;

        $r20 = virtualinvoke $r18.<java.lang.IllegalAccessException: java.lang.String getMessage()>();

        specialinvoke $r19.<java.lang.IllegalAccessError: void <init>(java.lang.String)>($r20);

        throw $r19;

     label4:
        $r11 := @caughtexception;

        $r12 = new java.lang.InternalError;

        $r14 = <com.sun.xml.bind.v2.model.'annotation'.Messages: com.sun.xml.bind.v2.model.'annotation'.Messages CLASS_NOT_FOUND>;

        $r13 = newarray (java.lang.Object)[2];

        $r15 = interfaceinvoke r0.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $r13[0] = $r15;

        $r16 = virtualinvoke $r11.<java.lang.reflect.InvocationTargetException: java.lang.String getMessage()>();

        $r13[1] = $r16;

        $r17 = virtualinvoke $r14.<com.sun.xml.bind.v2.model.'annotation'.Messages: java.lang.String format(java.lang.Object[])>($r13);

        specialinvoke $r12.<java.lang.InternalError: void <init>(java.lang.String)>($r17);

        throw $r12;

     label5:
        $r8 := @caughtexception;

        $r9 = new java.lang.NoSuchMethodError;

        $r10 = virtualinvoke $r8.<java.lang.NoSuchMethodException: java.lang.String getMessage()>();

        specialinvoke $r9.<java.lang.NoSuchMethodError: void <init>(java.lang.String)>($r10);

        throw $r9;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
        catch java.lang.NoSuchMethodException from label1 to label2 with label5;
    }

    public java.lang.Class[] getClassArrayValue(java.lang.'annotation'.Annotation, java.lang.String)
    {
        java.lang.Object[] $r5;
        java.lang.NoSuchMethodException $r9;
        java.lang.InternalError $r13;
        java.lang.String r2, $r11, $r14, $r17;
        java.lang.reflect.Method $r4;
        java.lang.IllegalAccessException $r15;
        java.lang.NoSuchMethodError $r10;
        java.lang.Class[] $r3, $r7, $r8;
        java.lang.reflect.InvocationTargetException $r12;
        java.lang.IllegalAccessError $r16;
        com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader r18;
        java.lang.'annotation'.Annotation r0;
        java.lang.Class $r1;
        java.lang.Object $r6;

        r18 := @this: com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader;

        r0 := @parameter0: java.lang.'annotation'.Annotation;

        r2 := @parameter1: java.lang.String;

     label1:
        $r1 = interfaceinvoke r0.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $r3 = newarray (java.lang.Class)[0];

        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r2, $r3);

        $r5 = newarray (java.lang.Object)[0];

        $r6 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r5);

        $r7 = (java.lang.Class[]) $r6;

        $r8 = (java.lang.Class[]) $r7;

     label2:
        return $r8;

     label3:
        $r15 := @caughtexception;

        $r16 = new java.lang.IllegalAccessError;

        $r17 = virtualinvoke $r15.<java.lang.IllegalAccessException: java.lang.String getMessage()>();

        specialinvoke $r16.<java.lang.IllegalAccessError: void <init>(java.lang.String)>($r17);

        throw $r16;

     label4:
        $r12 := @caughtexception;

        $r13 = new java.lang.InternalError;

        $r14 = virtualinvoke $r12.<java.lang.reflect.InvocationTargetException: java.lang.String getMessage()>();

        specialinvoke $r13.<java.lang.InternalError: void <init>(java.lang.String)>($r14);

        throw $r13;

     label5:
        $r9 := @caughtexception;

        $r10 = new java.lang.NoSuchMethodError;

        $r11 = virtualinvoke $r9.<java.lang.NoSuchMethodException: java.lang.String getMessage()>();

        specialinvoke $r10.<java.lang.NoSuchMethodError: void <init>(java.lang.String)>($r11);

        throw $r10;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
        catch java.lang.NoSuchMethodException from label1 to label2 with label5;
    }

    protected java.lang.String fullName(java.lang.reflect.Method)
    {
        com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader r9;
        java.lang.StringBuilder $r0, $r4, $r5, $r7;
        java.lang.Class $r2;
        java.lang.String $r3, $r6, $r8;
        java.lang.reflect.Method r1;

        r9 := @this: com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader;

        r1 := @parameter0: java.lang.reflect.Method;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(35);

        $r6 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.String getName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    protected volatile java.lang.String fullName(java.lang.Object)
    {
        com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader r0;
        java.lang.Object r1;
        java.lang.String $r3;
        java.lang.reflect.Method $r2;

        r0 := @this: com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.reflect.Method) r1;

        $r3 = virtualinvoke r0.<com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader: java.lang.String fullName(java.lang.reflect.Method)>($r2);

        return $r3;
    }

    public volatile java.lang.Object[] getClassArrayValue(java.lang.'annotation'.Annotation, java.lang.String)
    {
        com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader r0;
        java.lang.'annotation'.Annotation r1;
        java.lang.Class[] $r3;
        java.lang.String r2;

        r0 := @this: com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader;

        r1 := @parameter0: java.lang.'annotation'.Annotation;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader: java.lang.Class[] getClassArrayValue(java.lang.'annotation'.Annotation,java.lang.String)>(r1, r2);

        return $r3;
    }

    public volatile java.lang.Object getClassValue(java.lang.'annotation'.Annotation, java.lang.String)
    {
        com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader r0;
        java.lang.'annotation'.Annotation r1;
        java.lang.Class $r3;
        java.lang.String r2;

        r0 := @this: com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader;

        r1 := @parameter0: java.lang.'annotation'.Annotation;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader: java.lang.Class getClassValue(java.lang.'annotation'.Annotation,java.lang.String)>(r1, r2);

        return $r3;
    }

    public volatile java.lang.'annotation'.Annotation getPackageAnnotation(java.lang.Class, java.lang.Object, com.sun.xml.bind.v2.model.'annotation'.Locatable)
    {
        com.sun.xml.bind.v2.model.'annotation'.Locatable r3;
        com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader r0;
        java.lang.'annotation'.Annotation $r5;
        java.lang.Class r1, $r4;
        java.lang.Object r2;

        r0 := @this: com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: com.sun.xml.bind.v2.model.'annotation'.Locatable;

        $r4 = (java.lang.Class) r2;

        $r5 = virtualinvoke r0.<com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader: java.lang.'annotation'.Annotation getPackageAnnotation(java.lang.Class,java.lang.Class,com.sun.xml.bind.v2.model.'annotation'.Locatable)>(r1, $r4, r3);

        return $r5;
    }

    public volatile java.lang.'annotation'.Annotation getClassAnnotation(java.lang.Class, java.lang.Object, com.sun.xml.bind.v2.model.'annotation'.Locatable)
    {
        com.sun.xml.bind.v2.model.'annotation'.Locatable r3;
        com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader r0;
        java.lang.'annotation'.Annotation $r5;
        java.lang.Class r1, $r4;
        java.lang.Object r2;

        r0 := @this: com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: com.sun.xml.bind.v2.model.'annotation'.Locatable;

        $r4 = (java.lang.Class) r2;

        $r5 = virtualinvoke r0.<com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader: java.lang.'annotation'.Annotation getClassAnnotation(java.lang.Class,java.lang.Class,com.sun.xml.bind.v2.model.'annotation'.Locatable)>(r1, $r4, r3);

        return $r5;
    }

    public volatile java.lang.'annotation'.Annotation getMethodParameterAnnotation(java.lang.Class, java.lang.Object, int, com.sun.xml.bind.v2.model.'annotation'.Locatable)
    {
        com.sun.xml.bind.v2.model.'annotation'.Locatable r3;
        com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader r0;
        int i0;
        java.lang.'annotation'.Annotation $r5;
        java.lang.Class r1;
        java.lang.Object r2;
        java.lang.reflect.Method $r4;

        r0 := @this: com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        r3 := @parameter3: com.sun.xml.bind.v2.model.'annotation'.Locatable;

        $r4 = (java.lang.reflect.Method) r2;

        $r5 = virtualinvoke r0.<com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader: java.lang.'annotation'.Annotation getMethodParameterAnnotation(java.lang.Class,java.lang.reflect.Method,int,com.sun.xml.bind.v2.model.'annotation'.Locatable)>(r1, $r4, i0, r3);

        return $r5;
    }

    public volatile boolean hasMethodAnnotation(java.lang.Class, java.lang.Object)
    {
        com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader r0;
        java.lang.Class r1;
        java.lang.Object r2;
        java.lang.reflect.Method $r3;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.reflect.Method) r2;

        $z0 = virtualinvoke r0.<com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader: boolean hasMethodAnnotation(java.lang.Class,java.lang.reflect.Method)>(r1, $r3);

        return $z0;
    }

    public volatile java.lang.'annotation'.Annotation getMethodAnnotation(java.lang.Class, java.lang.Object, com.sun.xml.bind.v2.model.'annotation'.Locatable)
    {
        com.sun.xml.bind.v2.model.'annotation'.Locatable r3;
        com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader r0;
        java.lang.'annotation'.Annotation $r5;
        java.lang.Class r1;
        java.lang.Object r2;
        java.lang.reflect.Method $r4;

        r0 := @this: com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: com.sun.xml.bind.v2.model.'annotation'.Locatable;

        $r4 = (java.lang.reflect.Method) r2;

        $r5 = virtualinvoke r0.<com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader: java.lang.'annotation'.Annotation getMethodAnnotation(java.lang.Class,java.lang.reflect.Method,com.sun.xml.bind.v2.model.'annotation'.Locatable)>(r1, $r4, r3);

        return $r5;
    }

    public volatile java.lang.'annotation'.Annotation[] getAllMethodAnnotations(java.lang.Object, com.sun.xml.bind.v2.model.'annotation'.Locatable)
    {
        com.sun.xml.bind.v2.model.'annotation'.Locatable r2;
        com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader r0;
        java.lang.Object r1;
        java.lang.'annotation'.Annotation[] $r4;
        java.lang.reflect.Method $r3;

        r0 := @this: com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: com.sun.xml.bind.v2.model.'annotation'.Locatable;

        $r3 = (java.lang.reflect.Method) r1;

        $r4 = virtualinvoke r0.<com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader: java.lang.'annotation'.Annotation[] getAllMethodAnnotations(java.lang.reflect.Method,com.sun.xml.bind.v2.model.'annotation'.Locatable)>($r3, r2);

        return $r4;
    }

    public volatile java.lang.'annotation'.Annotation[] getAllFieldAnnotations(java.lang.Object, com.sun.xml.bind.v2.model.'annotation'.Locatable)
    {
        com.sun.xml.bind.v2.model.'annotation'.Locatable r2;
        com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader r0;
        java.lang.Object r1;
        java.lang.'annotation'.Annotation[] $r4;
        java.lang.reflect.Field $r3;

        r0 := @this: com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: com.sun.xml.bind.v2.model.'annotation'.Locatable;

        $r3 = (java.lang.reflect.Field) r1;

        $r4 = virtualinvoke r0.<com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader: java.lang.'annotation'.Annotation[] getAllFieldAnnotations(java.lang.reflect.Field,com.sun.xml.bind.v2.model.'annotation'.Locatable)>($r3, r2);

        return $r4;
    }

    public volatile boolean hasClassAnnotation(java.lang.Object, java.lang.Class)
    {
        com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader r0;
        java.lang.Object r1;
        java.lang.Class r2, $r3;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        $r3 = (java.lang.Class) r1;

        $z0 = virtualinvoke r0.<com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader: boolean hasClassAnnotation(java.lang.Class,java.lang.Class)>($r3, r2);

        return $z0;
    }

    public volatile boolean hasFieldAnnotation(java.lang.Class, java.lang.Object)
    {
        com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader r0;
        java.lang.Class r1;
        java.lang.Object r2;
        java.lang.reflect.Field $r3;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.reflect.Field) r2;

        $z0 = virtualinvoke r0.<com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader: boolean hasFieldAnnotation(java.lang.Class,java.lang.reflect.Field)>(r1, $r3);

        return $z0;
    }

    public volatile java.lang.'annotation'.Annotation getFieldAnnotation(java.lang.Class, java.lang.Object, com.sun.xml.bind.v2.model.'annotation'.Locatable)
    {
        com.sun.xml.bind.v2.model.'annotation'.Locatable r3;
        com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader r0;
        java.lang.'annotation'.Annotation $r5;
        java.lang.Class r1;
        java.lang.Object r2;
        java.lang.reflect.Field $r4;

        r0 := @this: com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: com.sun.xml.bind.v2.model.'annotation'.Locatable;

        $r4 = (java.lang.reflect.Field) r2;

        $r5 = virtualinvoke r0.<com.sun.xml.bind.v2.model.'annotation'.RuntimeInlineAnnotationReader: java.lang.'annotation'.Annotation getFieldAnnotation(java.lang.Class,java.lang.reflect.Field,com.sun.xml.bind.v2.model.'annotation'.Locatable)>(r1, $r4, r3);

        return $r5;
    }
}
