public final class org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl extends org.apache.xmlbeans.impl.jam.internal.elements.BuiltinClassImpl
{
    private int mDimensions;
    private org.apache.xmlbeans.impl.jam.JClass mComponentType;

    public static org.apache.xmlbeans.impl.jam.JClass createClassForFD(java.lang.String, org.apache.xmlbeans.impl.jam.JamClassLoader)
    {
        org.apache.xmlbeans.impl.jam.JamClassLoader r2;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.jam.JClass $r3, $r19;
        java.lang.StringBuffer $r7, $r8, $r9, $r13, $r14, $r15, $r22, $r23, $r25, $r28, $r30;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i10;
        java.lang.String r0, $r1, $r10, $r16, $r17, $r24;
        java.lang.IllegalArgumentException $r26, $r29, $r31;
        org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl $r27, $r32;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.xmlbeans.impl.jam.JamClassLoader;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("[");

        if $z0 != 0 goto label1;

        $r26 = new java.lang.IllegalArgumentException;

        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        $r22 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("must be an array type fd: ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r24);

        throw $r26;

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(";");

        if $z1 == 0 goto label3;

        $i2 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("L");

        $i10 = (int) -1;

        if $i2 == $i10 goto label2;

        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        $i4 = $i3 - 2;

        if $i2 >= $i4 goto label2;

        $i5 = $i2 + 1;

        $i6 = virtualinvoke r0.<java.lang.String: int length()>();

        $i7 = $i6 - 1;

        $r17 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i5, $i7);

        $r27 = new org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl;

        $r19 = interfaceinvoke r2.<org.apache.xmlbeans.impl.jam.JamClassLoader: org.apache.xmlbeans.impl.jam.JClass loadClass(java.lang.String)>($r17);

        specialinvoke $r27.<org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl: void <init>(org.apache.xmlbeans.impl.jam.JClass,int)>($r19, $i2);

        return $r27;

     label2:
        $r29 = new java.lang.IllegalArgumentException;

        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("array type field descriptor \'");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' is malformed");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r29.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r29;

     label3:
        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>("[");

        i8 = $i0 + 1;

        $i1 = i8 + 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i8, $i1);

        $r3 = interfaceinvoke r2.<org.apache.xmlbeans.impl.jam.JamClassLoader: org.apache.xmlbeans.impl.jam.JClass loadClass(java.lang.String)>($r1);

        if $r3 != null goto label4;

        $r31 = new java.lang.IllegalArgumentException;

        $r30 = new java.lang.StringBuffer;

        specialinvoke $r30.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("array type field descriptor \'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' is malformed");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r31.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r31;

     label4:
        $r32 = new org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl;

        specialinvoke $r32.<org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl: void <init>(org.apache.xmlbeans.impl.jam.JClass,int)>($r3, i8);

        return $r32;
    }

    public static java.lang.String normalizeArrayName(java.lang.String)
    {
        java.lang.StringBuffer $r3, $r4, $r5, $r12, $r13, $r14, $r16, $r18;
        int $i0, i1, $i2, $i3, $i5, $i7;
        java.lang.String r0, $r6, $r7, $r8, $r10, r15;
        boolean $z0, $z1;
        java.io.StringWriter $r17;
        java.lang.IllegalArgumentException $r19;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("[");

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("]");

        if $z1 == 0 goto label4;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(91);

        i1 = $i0;

        $i5 = (int) -1;

        if $i0 == $i5 goto label4;

        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r8 = staticinvoke <org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl: java.lang.String getPrimitiveClassForName(java.lang.String)>($r7);

        r15 = $r8;

        if $r8 != null goto label2;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(76);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(59);

        r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        $r17 = new java.io.StringWriter;

        specialinvoke $r17.<java.io.StringWriter: void <init>()>();

     label3:
        virtualinvoke $r17.<java.io.StringWriter: void write(int)>(91);

        $i2 = i1 + 1;

        $i3 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(91, $i2);

        i1 = $i3;

        $i7 = (int) -1;

        if $i3 != $i7 goto label3;

        virtualinvoke $r17.<java.io.StringWriter: void write(java.lang.String)>(r15);

        $r10 = virtualinvoke $r17.<java.io.StringWriter: java.lang.String toString()>();

        return $r10;

     label4:
        $r19 = new java.lang.IllegalArgumentException;

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' does not name an array");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r19;
    }

    private void <init>(org.apache.xmlbeans.impl.jam.JClass, int)
    {
        org.apache.xmlbeans.impl.jam.JClass r1;
        java.lang.IllegalArgumentException $r4, $r5;
        org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl r0;
        java.lang.StringBuffer $r6, $r7, $r8;
        int i0;
        org.apache.xmlbeans.impl.jam.internal.elements.ElementImpl $r2;
        java.lang.String $r9;
        org.apache.xmlbeans.impl.jam.internal.elements.ElementContext $r3;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.JClass;

        i0 := @parameter1: int;

        $r2 = (org.apache.xmlbeans.impl.jam.internal.elements.ElementImpl) r1;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.jam.internal.elements.ElementImpl: org.apache.xmlbeans.impl.jam.internal.elements.ElementContext getContext()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.BuiltinClassImpl: void <init>(org.apache.xmlbeans.impl.jam.internal.elements.ElementContext)>($r3);

        if i0 >= 1 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("dimensions=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        if r1 != null goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null componentType");

        throw $r4;

     label2:
        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl: org.apache.xmlbeans.impl.jam.JClass mComponentType> = r1;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl: int mDimensions> = i0;

        return;
    }

    public java.lang.String getSimpleName()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl r0;
        int $i0, $i1, $i3;
        java.lang.String $r1, $r2;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl: java.lang.String getQualifiedName()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int)>(46);

        $i3 = (int) -1;

        if $i0 != $i3 goto label1;

        $r2 = $r1;

        goto label2;

     label1:
        $i1 = $i0 + 1;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i1);

     label2:
        return $r2;
    }

    public java.lang.String getQualifiedName()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl r1;
        java.io.StringWriter $r0;
        int $i0, i1;
        java.lang.String $r3, $r4;
        org.apache.xmlbeans.impl.jam.JClass $r2;

        r1 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl;

        $r0 = new java.io.StringWriter;

        specialinvoke $r0.<java.io.StringWriter: void <init>()>();

        $r2 = r1.<org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl: org.apache.xmlbeans.impl.jam.JClass mComponentType>;

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.jam.JClass: java.lang.String getQualifiedName()>();

        virtualinvoke $r0.<java.io.StringWriter: void write(java.lang.String)>($r3);

        i1 = 0;

     label1:
        $i0 = r1.<org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl: int mDimensions>;

        if i1 >= $i0 goto label2;

        virtualinvoke $r0.<java.io.StringWriter: void write(java.lang.String)>("[]");

        i1 = i1 + 1;

        goto label1;

     label2:
        $r4 = virtualinvoke $r0.<java.io.StringWriter: java.lang.String toString()>();

        return $r4;
    }

    public boolean isArrayType()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl;

        return 1;
    }

    public org.apache.xmlbeans.impl.jam.JClass getArrayComponentType()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl r0;
        org.apache.xmlbeans.impl.jam.JClass $r1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl: org.apache.xmlbeans.impl.jam.JClass mComponentType>;

        return $r1;
    }

    public int getArrayDimensions()
    {
        int $i0;
        org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl;

        $i0 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl: int mDimensions>;

        return $i0;
    }

    public org.apache.xmlbeans.impl.jam.JClass getSuperclass()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl r0;
        org.apache.xmlbeans.impl.jam.JClass $r2;
        org.apache.xmlbeans.impl.jam.JamClassLoader $r1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl: org.apache.xmlbeans.impl.jam.JamClassLoader getClassLoader()>();

        $r2 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.jam.JamClassLoader: org.apache.xmlbeans.impl.jam.JClass loadClass(java.lang.String)>("java.lang.Object");

        return $r2;
    }

    public boolean isAssignableFrom(org.apache.xmlbeans.impl.jam.JClass)
    {
        org.apache.xmlbeans.impl.jam.JClass r0, $r2, $r3;
        org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl r1;
        int $i0, $i1;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.JClass;

        $z0 = interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.JClass: boolean isArrayType()>();

        if $z0 == 0 goto label1;

        $i0 = interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.JClass: int getArrayDimensions()>();

        $i1 = r1.<org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl: int mDimensions>;

        if $i0 != $i1 goto label1;

        $r2 = r1.<org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl: org.apache.xmlbeans.impl.jam.JClass mComponentType>;

        $r3 = interfaceinvoke r0.<org.apache.xmlbeans.impl.jam.JClass: org.apache.xmlbeans.impl.jam.JClass getArrayComponentType()>();

        $z1 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.jam.JClass: boolean isAssignableFrom(org.apache.xmlbeans.impl.jam.JClass)>($r3);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public java.lang.String getFieldDescriptor()
    {
        java.io.StringWriter $r0;
        org.apache.xmlbeans.impl.jam.JClass $r2, $r3, $r6;
        org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl r1;
        int $i0, i1;
        java.lang.String $r4, $r5, $r7;
        boolean $z0;

        r1 := @this: org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl;

        $r0 = new java.io.StringWriter;

        specialinvoke $r0.<java.io.StringWriter: void <init>()>();

        i1 = 0;

     label1:
        $i0 = r1.<org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl: int mDimensions>;

        if i1 >= $i0 goto label2;

        virtualinvoke $r0.<java.io.StringWriter: void write(java.lang.String)>("[");

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = r1.<org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl: org.apache.xmlbeans.impl.jam.JClass mComponentType>;

        $z0 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.jam.JClass: boolean isPrimitiveType()>();

        if $z0 == 0 goto label3;

        $r6 = r1.<org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl: org.apache.xmlbeans.impl.jam.JClass mComponentType>;

        $r7 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.jam.JClass: java.lang.String getFieldDescriptor()>();

        virtualinvoke $r0.<java.io.StringWriter: void write(java.lang.String)>($r7);

        goto label4;

     label3:
        virtualinvoke $r0.<java.io.StringWriter: void write(java.lang.String)>("L");

        $r3 = r1.<org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl: org.apache.xmlbeans.impl.jam.JClass mComponentType>;

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.impl.jam.JClass: java.lang.String getQualifiedName()>();

        virtualinvoke $r0.<java.io.StringWriter: void write(java.lang.String)>($r4);

        virtualinvoke $r0.<java.io.StringWriter: void write(java.lang.String)>(";");

     label4:
        $r5 = virtualinvoke $r0.<java.io.StringWriter: java.lang.String toString()>();

        return $r5;
    }
}
