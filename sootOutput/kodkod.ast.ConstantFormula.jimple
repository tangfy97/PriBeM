public abstract class kodkod.ast.ConstantFormula extends kodkod.ast.Formula
{
    private final boolean value;

    void <init>(boolean)
    {
        kodkod.ast.ConstantFormula r0;
        boolean z0;

        r0 := @this: kodkod.ast.ConstantFormula;

        z0 := @parameter0: boolean;

        specialinvoke r0.<kodkod.ast.Formula: void <init>()>();

        r0.<kodkod.ast.ConstantFormula: boolean value> = z0;

        return;
    }

    public final boolean booleanValue()
    {
        kodkod.ast.ConstantFormula r0;
        boolean $z0;

        r0 := @this: kodkod.ast.ConstantFormula;

        $z0 = r0.<kodkod.ast.ConstantFormula: boolean value>;

        return $z0;
    }

    public java.lang.Object accept(kodkod.ast.visitor.ReturnVisitor)
    {
        kodkod.ast.ConstantFormula r1;
        java.lang.Object $r2;
        kodkod.ast.visitor.ReturnVisitor r0;

        r1 := @this: kodkod.ast.ConstantFormula;

        r0 := @parameter0: kodkod.ast.visitor.ReturnVisitor;

        $r2 = interfaceinvoke r0.<kodkod.ast.visitor.ReturnVisitor: java.lang.Object visit(kodkod.ast.ConstantFormula)>(r1);

        return $r2;
    }

    public void accept(kodkod.ast.visitor.VoidVisitor)
    {
        kodkod.ast.ConstantFormula r1;
        kodkod.ast.visitor.VoidVisitor r0;

        r1 := @this: kodkod.ast.ConstantFormula;

        r0 := @parameter0: kodkod.ast.visitor.VoidVisitor;

        interfaceinvoke r0.<kodkod.ast.visitor.VoidVisitor: void visit(kodkod.ast.ConstantFormula)>(r1);

        return;
    }

    public java.lang.String toString()
    {
        kodkod.ast.ConstantFormula r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: kodkod.ast.ConstantFormula;

        $z0 = virtualinvoke r0.<kodkod.ast.ConstantFormula: boolean booleanValue()>();

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z0);

        return $r1;
    }
}
