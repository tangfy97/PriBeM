public class org.xmlpull.v1.builder.xpath.impl.DocumentNavigator extends org.xmlpull.v1.builder.xpath.jaxen.DefaultNavigator
{
    private static org.xmlpull.v1.builder.xpath.impl.DocumentNavigator instance;

    public void <init>()
    {
        org.xmlpull.v1.builder.xpath.impl.DocumentNavigator r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.impl.DocumentNavigator;

        specialinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.DefaultNavigator: void <init>()>();

        return;
    }

    public static org.xmlpull.v1.builder.xpath.impl.DocumentNavigator getInstance()
    {
        org.xmlpull.v1.builder.xpath.impl.DocumentNavigator $r0;

        $r0 = <org.xmlpull.v1.builder.xpath.impl.DocumentNavigator: org.xmlpull.v1.builder.xpath.impl.DocumentNavigator instance>;

        return $r0;
    }

    public boolean isElement(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0;
        org.xmlpull.v1.builder.xpath.impl.DocumentNavigator r1;

        r1 := @this: org.xmlpull.v1.builder.xpath.impl.DocumentNavigator;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.xmlpull.v1.builder.XmlElement;

        return $z0;
    }

    public boolean isComment(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0;
        org.xmlpull.v1.builder.xpath.impl.DocumentNavigator r1;

        r1 := @this: org.xmlpull.v1.builder.xpath.impl.DocumentNavigator;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.xmlpull.v1.builder.XmlComment;

        return $z0;
    }

    public boolean isText(java.lang.Object)
    {
        org.xmlpull.v1.builder.xpath.impl.DocumentNavigator r1;
        java.lang.Object r0;
        boolean $z0, $z1, $z2;

        r1 := @this: org.xmlpull.v1.builder.xpath.impl.DocumentNavigator;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.String;

        if $z0 != 0 goto label1;

        $z1 = r0 instanceof org.xmlpull.v1.builder.XmlCharacters;

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean isAttribute(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0;
        org.xmlpull.v1.builder.xpath.impl.DocumentNavigator r1;

        r1 := @this: org.xmlpull.v1.builder.xpath.impl.DocumentNavigator;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.xmlpull.v1.builder.XmlAttribute;

        return $z0;
    }

    public boolean isProcessingInstruction(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0;
        org.xmlpull.v1.builder.xpath.impl.DocumentNavigator r1;

        r1 := @this: org.xmlpull.v1.builder.xpath.impl.DocumentNavigator;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.xmlpull.v1.builder.XmlProcessingInstruction;

        return $z0;
    }

    public boolean isDocument(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0;
        org.xmlpull.v1.builder.xpath.impl.DocumentNavigator r1;

        r1 := @this: org.xmlpull.v1.builder.xpath.impl.DocumentNavigator;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.xmlpull.v1.builder.XmlDocument;

        return $z0;
    }

    public boolean isNamespace(java.lang.Object)
    {
        org.xmlpull.v1.builder.xpath.impl.DocumentNavigator r1;
        java.lang.Object r0;
        boolean $z0, $z1, $z2;

        r1 := @this: org.xmlpull.v1.builder.xpath.impl.DocumentNavigator;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.xmlpull.v1.builder.XmlNamespace;

        if $z0 != 0 goto label1;

        $z1 = r0 instanceof org.xmlpull.v1.builder.xpath.impl.XPathNamespace;

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public java.lang.String getElementName(java.lang.Object)
    {
        org.xmlpull.v1.builder.XmlElement r1;
        org.xmlpull.v1.builder.xpath.impl.DocumentNavigator r3;
        java.lang.Object r0;
        java.lang.String $r2;

        r3 := @this: org.xmlpull.v1.builder.xpath.impl.DocumentNavigator;

        r0 := @parameter0: java.lang.Object;

        r1 = (org.xmlpull.v1.builder.XmlElement) r0;

        $r2 = interfaceinvoke r1.<org.xmlpull.v1.builder.XmlElement: java.lang.String getName()>();

        return $r2;
    }

    public java.lang.String getElementNamespaceUri(java.lang.Object)
    {
        org.xmlpull.v1.builder.XmlElement r1;
        org.xmlpull.v1.builder.xpath.impl.DocumentNavigator r3;
        int $i0;
        java.lang.Object r0;
        java.lang.String $r2;

        r3 := @this: org.xmlpull.v1.builder.xpath.impl.DocumentNavigator;

        r0 := @parameter0: java.lang.Object;

        r1 = (org.xmlpull.v1.builder.XmlElement) r0;

        $r2 = interfaceinvoke r1.<org.xmlpull.v1.builder.XmlElement: java.lang.String getNamespaceName()>();

        if $r2 == null goto label1;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        return $r2;
    }

    public java.lang.String getAttributeName(java.lang.Object)
    {
        org.xmlpull.v1.builder.XmlAttribute r1;
        org.xmlpull.v1.builder.xpath.impl.DocumentNavigator r3;
        java.lang.Object r0;
        java.lang.String $r2;

        r3 := @this: org.xmlpull.v1.builder.xpath.impl.DocumentNavigator;

        r0 := @parameter0: java.lang.Object;

        r1 = (org.xmlpull.v1.builder.XmlAttribute) r0;

        $r2 = interfaceinvoke r1.<org.xmlpull.v1.builder.XmlAttribute: java.lang.String getName()>();

        return $r2;
    }

    public java.lang.String getAttributeNamespaceUri(java.lang.Object)
    {
        org.xmlpull.v1.builder.XmlAttribute r1;
        org.xmlpull.v1.builder.xpath.impl.DocumentNavigator r3;
        int $i0;
        java.lang.Object r0;
        java.lang.String $r2;

        r3 := @this: org.xmlpull.v1.builder.xpath.impl.DocumentNavigator;

        r0 := @parameter0: java.lang.Object;

        r1 = (org.xmlpull.v1.builder.XmlAttribute) r0;

        $r2 = interfaceinvoke r1.<org.xmlpull.v1.builder.XmlAttribute: java.lang.String getNamespaceName()>();

        if $r2 == null goto label1;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        return $r2;
    }

    public java.util.Iterator getChildAxisIterator(java.lang.Object)
    {
        org.xmlpull.v1.builder.Iterable $r2;
        java.util.Iterator $r3, $r5;
        org.xmlpull.v1.builder.xpath.impl.DocumentNavigator r6;
        org.xmlpull.v1.builder.XmlDocument $r1;
        org.xmlpull.v1.builder.XmlElement $r4;
        java.lang.Object r0;
        boolean $z0, $z1;

        r6 := @this: org.xmlpull.v1.builder.xpath.impl.DocumentNavigator;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.xmlpull.v1.builder.XmlElement;

        if $z0 == 0 goto label1;

        $r4 = (org.xmlpull.v1.builder.XmlElement) r0;

        $r5 = interfaceinvoke $r4.<org.xmlpull.v1.builder.XmlElement: java.util.Iterator children()>();

        return $r5;

     label1:
        $z1 = r0 instanceof org.xmlpull.v1.builder.XmlDocument;

        if $z1 == 0 goto label2;

        $r1 = (org.xmlpull.v1.builder.XmlDocument) r0;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.builder.XmlDocument: org.xmlpull.v1.builder.Iterable children()>();

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.builder.Iterable: java.util.Iterator iterator()>();

        return $r3;

     label2:
        return null;
    }

    public java.util.Iterator getNamespaceAxisIterator(java.lang.Object)
    {
        org.xmlpull.v1.builder.xpath.impl.DocumentNavigator r16;
        java.util.HashMap $r2;
        java.lang.String $r9, $r10, $r12, $r13, $r14;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Iterator $r4, $r18;
        java.util.Collection $r3;
        org.xmlpull.v1.builder.XmlNamespace $r5, r19;
        org.xmlpull.v1.builder.XmlElement r1, r17;
        org.xmlpull.v1.builder.XmlContainer $r6, $r7;
        java.lang.Object r0, $r8;
        org.xmlpull.v1.builder.xpath.impl.XPathNamespace $r11, $r15;

        r16 := @this: org.xmlpull.v1.builder.xpath.impl.DocumentNavigator;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.xmlpull.v1.builder.XmlElement;

        if $z0 != 0 goto label1;

        return null;

     label1:
        r1 = (org.xmlpull.v1.builder.XmlElement) r0;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r17 = r1;

     label2:
        if r17 == null goto label8;

        $r5 = interfaceinvoke r17.<org.xmlpull.v1.builder.XmlElement: org.xmlpull.v1.builder.XmlNamespace getNamespace()>();

        if $r5 == null goto label3;

        $r12 = interfaceinvoke $r5.<org.xmlpull.v1.builder.XmlNamespace: java.lang.String getPrefix()>();

        if $r12 == null goto label3;

        $r13 = interfaceinvoke $r5.<org.xmlpull.v1.builder.XmlNamespace: java.lang.String getPrefix()>();

        $z3 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r13);

        if $z3 != 0 goto label3;

        $r14 = interfaceinvoke $r5.<org.xmlpull.v1.builder.XmlNamespace: java.lang.String getPrefix()>();

        $r15 = new org.xmlpull.v1.builder.xpath.impl.XPathNamespace;

        specialinvoke $r15.<org.xmlpull.v1.builder.xpath.impl.XPathNamespace: void <init>(org.xmlpull.v1.builder.XmlElement,org.xmlpull.v1.builder.XmlNamespace)>(r1, $r5);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r15);

     label3:
        $r18 = interfaceinvoke r17.<org.xmlpull.v1.builder.XmlElement: java.util.Iterator namespaces()>();

     label4:
        $z4 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label5;

        $r8 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r19 = (org.xmlpull.v1.builder.XmlNamespace) $r8;

        $r9 = interfaceinvoke r19.<org.xmlpull.v1.builder.XmlNamespace: java.lang.String getPrefix()>();

        $z2 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r9);

        if $z2 != 0 goto label4;

        $r10 = interfaceinvoke r19.<org.xmlpull.v1.builder.XmlNamespace: java.lang.String getPrefix()>();

        $r11 = new org.xmlpull.v1.builder.xpath.impl.XPathNamespace;

        specialinvoke $r11.<org.xmlpull.v1.builder.xpath.impl.XPathNamespace: void <init>(org.xmlpull.v1.builder.XmlElement,org.xmlpull.v1.builder.XmlNamespace)>(r1, r19);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11);

        goto label4;

     label5:
        $r6 = interfaceinvoke r17.<org.xmlpull.v1.builder.XmlElement: org.xmlpull.v1.builder.XmlContainer getParent()>();

        $z1 = $r6 instanceof org.xmlpull.v1.builder.XmlElement;

        if $z1 == 0 goto label6;

        $r7 = interfaceinvoke r17.<org.xmlpull.v1.builder.XmlElement: org.xmlpull.v1.builder.XmlContainer getParent()>();

        r17 = (org.xmlpull.v1.builder.XmlElement) $r7;

        goto label7;

     label6:
        r17 = null;

     label7:
        goto label2;

     label8:
        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

        return $r4;
    }

    public java.util.Iterator getParentAxisIterator(java.lang.Object)
    {
        java.lang.IllegalStateException $r2;
        org.xmlpull.v1.builder.XmlAttribute $r7;
        org.xmlpull.v1.builder.xpath.impl.DocumentNavigator r9;
        org.xmlpull.v1.builder.xpath.jaxen.util.SingleObjectIterator $r1;
        org.xmlpull.v1.builder.XmlProcessingInstruction $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.xmlpull.v1.builder.XmlCharacters $r3;
        org.xmlpull.v1.builder.XmlElement $r8;
        org.xmlpull.v1.builder.XmlComment $r4;
        java.lang.Object r0, r10;
        org.xmlpull.v1.builder.xpath.impl.XPathNamespace $r6;

        r9 := @this: org.xmlpull.v1.builder.xpath.impl.DocumentNavigator;

        r0 := @parameter0: java.lang.Object;

        r10 = null;

        $z0 = r0 instanceof org.xmlpull.v1.builder.XmlDocument;

        if $z0 == 0 goto label1;

        r10 = r0;

        goto label8;

     label1:
        $z1 = r0 instanceof org.xmlpull.v1.builder.XmlElement;

        if $z1 == 0 goto label2;

        $r8 = (org.xmlpull.v1.builder.XmlElement) r0;

        r10 = interfaceinvoke $r8.<org.xmlpull.v1.builder.XmlElement: org.xmlpull.v1.builder.XmlContainer getParent()>();

        goto label8;

     label2:
        $z2 = r0 instanceof org.xmlpull.v1.builder.XmlAttribute;

        if $z2 == 0 goto label3;

        $r7 = (org.xmlpull.v1.builder.XmlAttribute) r0;

        r10 = interfaceinvoke $r7.<org.xmlpull.v1.builder.XmlAttribute: org.xmlpull.v1.builder.XmlElement getOwner()>();

        goto label8;

     label3:
        $z3 = r0 instanceof org.xmlpull.v1.builder.xpath.impl.XPathNamespace;

        if $z3 == 0 goto label4;

        $r6 = (org.xmlpull.v1.builder.xpath.impl.XPathNamespace) r0;

        r10 = virtualinvoke $r6.<org.xmlpull.v1.builder.xpath.impl.XPathNamespace: org.xmlpull.v1.builder.XmlElement getElement()>();

        goto label8;

     label4:
        $z4 = r0 instanceof org.xmlpull.v1.builder.XmlProcessingInstruction;

        if $z4 == 0 goto label5;

        $r5 = (org.xmlpull.v1.builder.XmlProcessingInstruction) r0;

        r10 = interfaceinvoke $r5.<org.xmlpull.v1.builder.XmlProcessingInstruction: org.xmlpull.v1.builder.XmlContainer getParent()>();

        goto label8;

     label5:
        $z5 = r0 instanceof org.xmlpull.v1.builder.XmlComment;

        if $z5 == 0 goto label6;

        $r4 = (org.xmlpull.v1.builder.XmlComment) r0;

        r10 = interfaceinvoke $r4.<org.xmlpull.v1.builder.XmlComment: org.xmlpull.v1.builder.XmlContainer getParent()>();

        goto label8;

     label6:
        $z6 = r0 instanceof org.xmlpull.v1.builder.XmlCharacters;

        if $z6 == 0 goto label7;

        $r3 = (org.xmlpull.v1.builder.XmlCharacters) r0;

        r10 = interfaceinvoke $r3.<org.xmlpull.v1.builder.XmlContained: org.xmlpull.v1.builder.XmlContainer getParent()>();

        goto label8;

     label7:
        $z7 = r0 instanceof java.lang.String;

        if $z7 == 0 goto label8;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("XB1 XML tree shoul dnot contain Strings directly");

        throw $r2;

     label8:
        if r10 == null goto label9;

        $r1 = new org.xmlpull.v1.builder.xpath.jaxen.util.SingleObjectIterator;

        specialinvoke $r1.<org.xmlpull.v1.builder.xpath.jaxen.util.SingleObjectIterator: void <init>(java.lang.Object)>(r10);

        return $r1;

     label9:
        return null;
    }

    public java.util.Iterator getAttributeAxisIterator(java.lang.Object)
    {
        org.xmlpull.v1.builder.XmlElement r1;
        java.util.Iterator $r2;
        org.xmlpull.v1.builder.xpath.impl.DocumentNavigator r3;
        java.lang.Object r0;
        boolean $z0;

        r3 := @this: org.xmlpull.v1.builder.xpath.impl.DocumentNavigator;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.xmlpull.v1.builder.XmlElement;

        if $z0 != 0 goto label1;

        return null;

     label1:
        r1 = (org.xmlpull.v1.builder.XmlElement) r0;

        $r2 = interfaceinvoke r1.<org.xmlpull.v1.builder.XmlElement: java.util.Iterator attributes()>();

        return $r2;
    }

    public org.xmlpull.v1.builder.xpath.jaxen.XPath parseXPath(java.lang.String) throws org.xmlpull.v1.builder.xpath.saxpath.SAXPathException
    {
        java.lang.String r1;
        org.xmlpull.v1.builder.xpath.Xb1XPath $r0;
        org.xmlpull.v1.builder.xpath.impl.DocumentNavigator r2;

        r2 := @this: org.xmlpull.v1.builder.xpath.impl.DocumentNavigator;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.xmlpull.v1.builder.xpath.Xb1XPath;

        specialinvoke $r0.<org.xmlpull.v1.builder.xpath.Xb1XPath: void <init>(java.lang.String)>(r1);

        return $r0;
    }

    private static org.xmlpull.v1.builder.XmlDocument getDocument(org.xmlpull.v1.builder.XmlElement)
    {
        org.xmlpull.v1.builder.XmlElement r0, r5;
        org.xmlpull.v1.builder.XmlContainer $r1, $r2, $r4;
        org.xmlpull.v1.builder.XmlDocument $r3;
        boolean $z0;

        r0 := @parameter0: org.xmlpull.v1.builder.XmlElement;

        r5 = r0;

     label1:
        $r1 = interfaceinvoke r5.<org.xmlpull.v1.builder.XmlElement: org.xmlpull.v1.builder.XmlContainer getParent()>();

        $z0 = $r1 instanceof org.xmlpull.v1.builder.XmlElement;

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r5.<org.xmlpull.v1.builder.XmlElement: org.xmlpull.v1.builder.XmlContainer getParent()>();

        r5 = (org.xmlpull.v1.builder.XmlElement) $r4;

        goto label1;

     label2:
        $r2 = interfaceinvoke r5.<org.xmlpull.v1.builder.XmlElement: org.xmlpull.v1.builder.XmlContainer getParent()>();

        $r3 = (org.xmlpull.v1.builder.XmlDocument) $r2;

        return $r3;
    }

    public java.lang.Object getDocumentNode(java.lang.Object)
    {
        org.xmlpull.v1.builder.XmlElement r1;
        org.xmlpull.v1.builder.xpath.impl.DocumentNavigator r3;
        java.lang.Object r0;
        org.xmlpull.v1.builder.XmlDocument $r2;
        boolean $z0;

        r3 := @this: org.xmlpull.v1.builder.xpath.impl.DocumentNavigator;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.xmlpull.v1.builder.XmlDocument;

        if $z0 == 0 goto label1;

        return r0;

     label1:
        r1 = (org.xmlpull.v1.builder.XmlElement) r0;

        $r2 = staticinvoke <org.xmlpull.v1.builder.xpath.impl.DocumentNavigator: org.xmlpull.v1.builder.XmlDocument getDocument(org.xmlpull.v1.builder.XmlElement)>(r1);

        return $r2;
    }

    public java.lang.String getElementQName(java.lang.Object)
    {
        org.xmlpull.v1.builder.xpath.impl.DocumentNavigator r12;
        org.xmlpull.v1.builder.XmlNamespace $r2, $r11;
        org.xmlpull.v1.builder.XmlElement r1;
        java.lang.StringBuffer $r5, $r6, $r7, $r9;
        java.lang.Object r0;
        java.lang.String $r3, $r4, $r8, $r10, r13;
        boolean $z0;

        r12 := @this: org.xmlpull.v1.builder.xpath.impl.DocumentNavigator;

        r0 := @parameter0: java.lang.Object;

        r1 = (org.xmlpull.v1.builder.XmlElement) r0;

        r13 = null;

        $r2 = interfaceinvoke r1.<org.xmlpull.v1.builder.XmlElement: org.xmlpull.v1.builder.XmlNamespace getNamespace()>();

        if $r2 == null goto label1;

        $r11 = interfaceinvoke r1.<org.xmlpull.v1.builder.XmlElement: org.xmlpull.v1.builder.XmlNamespace getNamespace()>();

        r13 = interfaceinvoke $r11.<org.xmlpull.v1.builder.XmlNamespace: java.lang.String getPrefix()>();

     label1:
        if r13 == null goto label2;

        $r4 = "";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r13);

        if $z0 == 0 goto label3;

     label2:
        $r3 = interfaceinvoke r1.<org.xmlpull.v1.builder.XmlElement: java.lang.String getName()>();

        return $r3;

     label3:
        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r13);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r8 = interfaceinvoke r1.<org.xmlpull.v1.builder.XmlElement: java.lang.String getName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r10;
    }

    public java.lang.String getAttributeQName(java.lang.Object)
    {
        org.xmlpull.v1.builder.XmlAttribute r1;
        org.xmlpull.v1.builder.xpath.impl.DocumentNavigator r12;
        org.xmlpull.v1.builder.XmlNamespace $r2, $r11;
        java.lang.StringBuffer $r5, $r6, $r7, $r9;
        java.lang.Object r0;
        java.lang.String $r3, $r4, $r8, $r10, r13;
        boolean $z0;

        r12 := @this: org.xmlpull.v1.builder.xpath.impl.DocumentNavigator;

        r0 := @parameter0: java.lang.Object;

        r1 = (org.xmlpull.v1.builder.XmlAttribute) r0;

        r13 = null;

        $r2 = interfaceinvoke r1.<org.xmlpull.v1.builder.XmlAttribute: org.xmlpull.v1.builder.XmlNamespace getNamespace()>();

        if $r2 == null goto label1;

        $r11 = interfaceinvoke r1.<org.xmlpull.v1.builder.XmlAttribute: org.xmlpull.v1.builder.XmlNamespace getNamespace()>();

        r13 = interfaceinvoke $r11.<org.xmlpull.v1.builder.XmlNamespace: java.lang.String getPrefix()>();

     label1:
        if r13 == null goto label2;

        $r4 = "";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r13);

        if $z0 == 0 goto label3;

     label2:
        $r3 = interfaceinvoke r1.<org.xmlpull.v1.builder.XmlAttribute: java.lang.String getName()>();

        return $r3;

     label3:
        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r13);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r8 = interfaceinvoke r1.<org.xmlpull.v1.builder.XmlAttribute: java.lang.String getName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r10;
    }

    public java.lang.String getNamespaceStringValue(java.lang.Object)
    {
        org.xmlpull.v1.builder.xpath.impl.DocumentNavigator r4;
        org.xmlpull.v1.builder.XmlNamespace $r1, r5;
        java.lang.Object r0;
        java.lang.String $r2, $r3;
        org.xmlpull.v1.builder.xpath.impl.XPathNamespace r6;
        boolean $z0;

        r4 := @this: org.xmlpull.v1.builder.xpath.impl.DocumentNavigator;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.xmlpull.v1.builder.XmlNamespace;

        if $z0 == 0 goto label1;

        r5 = (org.xmlpull.v1.builder.XmlNamespace) r0;

        $r3 = interfaceinvoke r5.<org.xmlpull.v1.builder.XmlNamespace: java.lang.String getNamespaceName()>();

        return $r3;

     label1:
        r6 = (org.xmlpull.v1.builder.xpath.impl.XPathNamespace) r0;

        $r1 = virtualinvoke r6.<org.xmlpull.v1.builder.xpath.impl.XPathNamespace: org.xmlpull.v1.builder.XmlNamespace getNamespace()>();

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.builder.XmlNamespace: java.lang.String getNamespaceName()>();

        return $r2;
    }

    public java.lang.String getNamespacePrefix(java.lang.Object)
    {
        org.xmlpull.v1.builder.xpath.impl.DocumentNavigator r4;
        org.xmlpull.v1.builder.XmlNamespace $r1, r5;
        java.lang.Object r0;
        java.lang.String $r2, $r3;
        org.xmlpull.v1.builder.xpath.impl.XPathNamespace r6;
        boolean $z0;

        r4 := @this: org.xmlpull.v1.builder.xpath.impl.DocumentNavigator;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.xmlpull.v1.builder.XmlNamespace;

        if $z0 == 0 goto label1;

        r5 = (org.xmlpull.v1.builder.XmlNamespace) r0;

        $r3 = interfaceinvoke r5.<org.xmlpull.v1.builder.XmlNamespace: java.lang.String getPrefix()>();

        return $r3;

     label1:
        r6 = (org.xmlpull.v1.builder.xpath.impl.XPathNamespace) r0;

        $r1 = virtualinvoke r6.<org.xmlpull.v1.builder.xpath.impl.XPathNamespace: org.xmlpull.v1.builder.XmlNamespace getNamespace()>();

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.builder.XmlNamespace: java.lang.String getPrefix()>();

        return $r2;
    }

    public java.lang.String getTextStringValue(java.lang.Object)
    {
        org.xmlpull.v1.builder.XmlCharacters $r2;
        org.xmlpull.v1.builder.xpath.impl.DocumentNavigator r4;
        java.lang.Object r0;
        java.lang.String $r1, $r3;
        boolean $z0, $z1;

        r4 := @this: org.xmlpull.v1.builder.xpath.impl.DocumentNavigator;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.xmlpull.v1.builder.XmlCharacters;

        if $z0 == 0 goto label1;

        $r2 = (org.xmlpull.v1.builder.XmlCharacters) r0;

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.builder.XmlCharacters: java.lang.String getText()>();

        return $r3;

     label1:
        $z1 = r0 instanceof java.lang.String;

        if $z1 == 0 goto label2;

        $r1 = (java.lang.String) r0;

        return $r1;

     label2:
        return "";
    }

    public java.lang.String getAttributeStringValue(java.lang.Object)
    {
        org.xmlpull.v1.builder.XmlAttribute r1;
        org.xmlpull.v1.builder.xpath.impl.DocumentNavigator r3;
        java.lang.Object r0;
        java.lang.String $r2;

        r3 := @this: org.xmlpull.v1.builder.xpath.impl.DocumentNavigator;

        r0 := @parameter0: java.lang.Object;

        r1 = (org.xmlpull.v1.builder.XmlAttribute) r0;

        $r2 = interfaceinvoke r1.<org.xmlpull.v1.builder.XmlAttribute: java.lang.String getValue()>();

        return $r2;
    }

    public java.lang.String getElementStringValue(java.lang.Object)
    {
        org.xmlpull.v1.builder.XmlCharacters $r8;
        java.util.Iterator $r3;
        org.xmlpull.v1.builder.xpath.impl.DocumentNavigator r6;
        org.xmlpull.v1.builder.XmlElement r1;
        java.lang.StringBuffer $r2;
        java.lang.Object r0, $r5;
        java.lang.String $r4, $r7, $r9, $r10;
        boolean $z0, $z1, $z2, $z3;

        r6 := @this: org.xmlpull.v1.builder.xpath.impl.DocumentNavigator;

        r0 := @parameter0: java.lang.Object;

        r1 = (org.xmlpull.v1.builder.XmlElement) r0;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = interfaceinvoke r1.<org.xmlpull.v1.builder.XmlElement: java.util.Iterator children()>();

     label1:
        $z3 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label4;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $z0 = $r5 instanceof java.lang.String;

        if $z0 == 0 goto label2;

        $r10 = (java.lang.String) $r5;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        goto label1;

     label2:
        $z1 = $r5 instanceof org.xmlpull.v1.builder.XmlCharacters;

        if $z1 == 0 goto label3;

        $r8 = (org.xmlpull.v1.builder.XmlCharacters) $r5;

        $r9 = interfaceinvoke $r8.<org.xmlpull.v1.builder.XmlCharacters: java.lang.String getText()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        goto label1;

     label3:
        $z2 = $r5 instanceof org.xmlpull.v1.builder.XmlElement;

        if $z2 == 0 goto label1;

        $r7 = virtualinvoke r6.<org.xmlpull.v1.builder.xpath.impl.DocumentNavigator: java.lang.String getElementStringValue(java.lang.Object)>($r5);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        goto label1;

     label4:
        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.String getProcessingInstructionTarget(java.lang.Object)
    {
        org.xmlpull.v1.builder.xpath.impl.DocumentNavigator r3;
        java.lang.Object r0;
        java.lang.String $r2;
        org.xmlpull.v1.builder.XmlProcessingInstruction r1;

        r3 := @this: org.xmlpull.v1.builder.xpath.impl.DocumentNavigator;

        r0 := @parameter0: java.lang.Object;

        r1 = (org.xmlpull.v1.builder.XmlProcessingInstruction) r0;

        $r2 = interfaceinvoke r1.<org.xmlpull.v1.builder.XmlProcessingInstruction: java.lang.String getTarget()>();

        return $r2;
    }

    public java.lang.String getProcessingInstructionData(java.lang.Object)
    {
        org.xmlpull.v1.builder.xpath.impl.DocumentNavigator r3;
        java.lang.Object r0;
        java.lang.String $r2;
        org.xmlpull.v1.builder.XmlProcessingInstruction r1;

        r3 := @this: org.xmlpull.v1.builder.xpath.impl.DocumentNavigator;

        r0 := @parameter0: java.lang.Object;

        r1 = (org.xmlpull.v1.builder.XmlProcessingInstruction) r0;

        $r2 = interfaceinvoke r1.<org.xmlpull.v1.builder.XmlProcessingInstruction: java.lang.String getContent()>();

        return $r2;
    }

    public java.lang.String getCommentStringValue(java.lang.Object)
    {
        org.xmlpull.v1.builder.XmlComment r1;
        org.xmlpull.v1.builder.xpath.impl.DocumentNavigator r3;
        java.lang.Object r0;
        java.lang.String $r2;

        r3 := @this: org.xmlpull.v1.builder.xpath.impl.DocumentNavigator;

        r0 := @parameter0: java.lang.Object;

        r1 = (org.xmlpull.v1.builder.XmlComment) r0;

        $r2 = interfaceinvoke r1.<org.xmlpull.v1.builder.XmlComment: java.lang.String getContent()>();

        return $r2;
    }

    public java.lang.String translateNamespacePrefixToUri(java.lang.String, java.lang.Object)
    {
        org.xmlpull.v1.builder.XmlAttribute $r14;
        org.xmlpull.v1.builder.xpath.impl.DocumentNavigator r17;
        java.lang.StringBuffer $r5, $r6, $r7;
        java.lang.String r1, $r3, $r8;
        org.xmlpull.v1.builder.XmlProcessingInstruction $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.xmlpull.v1.builder.XmlCharacters $r15;
        org.xmlpull.v1.builder.XmlNamespace $r2;
        java.lang.IllegalArgumentException $r4;
        org.xmlpull.v1.builder.XmlContainer $r10, $r12, $r16;
        org.xmlpull.v1.builder.XmlElement r18;
        org.xmlpull.v1.builder.XmlComment $r11;
        java.lang.Object r0;
        org.xmlpull.v1.builder.xpath.impl.XPathNamespace $r13;

        r17 := @this: org.xmlpull.v1.builder.xpath.impl.DocumentNavigator;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        r18 = null;

        $z0 = r0 instanceof org.xmlpull.v1.builder.XmlElement;

        if $z0 == 0 goto label01;

        r18 = (org.xmlpull.v1.builder.XmlElement) r0;

        goto label09;

     label01:
        $z1 = r0 instanceof org.xmlpull.v1.builder.XmlCharacters;

        if $z1 == 0 goto label02;

        $r15 = (org.xmlpull.v1.builder.XmlCharacters) r0;

        $r16 = interfaceinvoke $r15.<org.xmlpull.v1.builder.XmlContained: org.xmlpull.v1.builder.XmlContainer getParent()>();

        r18 = (org.xmlpull.v1.builder.XmlElement) $r16;

        goto label09;

     label02:
        $z2 = r0 instanceof org.xmlpull.v1.builder.XmlAttribute;

        if $z2 == 0 goto label03;

        $r14 = (org.xmlpull.v1.builder.XmlAttribute) r0;

        r18 = interfaceinvoke $r14.<org.xmlpull.v1.builder.XmlAttribute: org.xmlpull.v1.builder.XmlElement getOwner()>();

        goto label09;

     label03:
        $z3 = r0 instanceof org.xmlpull.v1.builder.xpath.impl.XPathNamespace;

        if $z3 == 0 goto label04;

        $r13 = (org.xmlpull.v1.builder.xpath.impl.XPathNamespace) r0;

        r18 = virtualinvoke $r13.<org.xmlpull.v1.builder.xpath.impl.XPathNamespace: org.xmlpull.v1.builder.XmlElement getElement()>();

        goto label09;

     label04:
        $z4 = r0 instanceof org.xmlpull.v1.builder.XmlComment;

        if $z4 == 0 goto label06;

        $r11 = (org.xmlpull.v1.builder.XmlComment) r0;

        $r12 = interfaceinvoke $r11.<org.xmlpull.v1.builder.XmlComment: org.xmlpull.v1.builder.XmlContainer getParent()>();

        $z8 = $r12 instanceof org.xmlpull.v1.builder.XmlElement;

        if $z8 == 0 goto label05;

        r18 = (org.xmlpull.v1.builder.XmlElement) $r12;

     label05:
        goto label09;

     label06:
        $z5 = r0 instanceof org.xmlpull.v1.builder.XmlProcessingInstruction;

        if $z5 == 0 goto label08;

        $r9 = (org.xmlpull.v1.builder.XmlProcessingInstruction) r0;

        $r10 = interfaceinvoke $r9.<org.xmlpull.v1.builder.XmlProcessingInstruction: org.xmlpull.v1.builder.XmlContainer getParent()>();

        $z7 = $r10 instanceof org.xmlpull.v1.builder.XmlElement;

        if $z7 == 0 goto label07;

        r18 = (org.xmlpull.v1.builder.XmlElement) $r10;

     label07:
        goto label09;

     label08:
        $z6 = r0 instanceof java.lang.String;

        if $z6 == 0 goto label09;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("could not determine parent string in ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label09:
        if r18 == null goto label10;

        $r2 = interfaceinvoke r18.<org.xmlpull.v1.builder.XmlElement: org.xmlpull.v1.builder.XmlNamespace lookupNamespaceByPrefix(java.lang.String)>(r1);

        if $r2 == null goto label10;

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.builder.XmlNamespace: java.lang.String getNamespaceName()>();

        return $r3;

     label10:
        return null;
    }

    public java.lang.Object getDocument(java.lang.String) throws org.xmlpull.v1.builder.xpath.jaxen.FunctionCallException
    {
        org.xmlpull.v1.builder.xpath.jaxen.FunctionCallException $r4;
        org.xmlpull.v1.builder.xpath.impl.DocumentNavigator r6;
        java.lang.String r1, $r5;
        org.xmlpull.v1.builder.XmlDocument $r2;
        org.xmlpull.v1.builder.XmlInfosetBuilder $r0;
        java.lang.Exception $r3;

        r6 := @this: org.xmlpull.v1.builder.xpath.impl.DocumentNavigator;

        r1 := @parameter0: java.lang.String;

     label1:
        $r0 = staticinvoke <org.xmlpull.v1.builder.XmlInfosetBuilder: org.xmlpull.v1.builder.XmlInfosetBuilder newInstance()>();

        $r2 = virtualinvoke $r0.<org.xmlpull.v1.builder.XmlInfosetBuilder: org.xmlpull.v1.builder.XmlDocument parseLocation(java.lang.String)>(r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.xmlpull.v1.builder.xpath.jaxen.FunctionCallException;

        $r5 = virtualinvoke $r3.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r4.<org.xmlpull.v1.builder.xpath.jaxen.FunctionCallException: void <init>(java.lang.String)>($r5);

        throw $r4;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        org.xmlpull.v1.builder.xpath.impl.DocumentNavigator $r0;

        $r0 = new org.xmlpull.v1.builder.xpath.impl.DocumentNavigator;

        specialinvoke $r0.<org.xmlpull.v1.builder.xpath.impl.DocumentNavigator: void <init>()>();

        <org.xmlpull.v1.builder.xpath.impl.DocumentNavigator: org.xmlpull.v1.builder.xpath.impl.DocumentNavigator instance> = $r0;

        return;
    }
}
