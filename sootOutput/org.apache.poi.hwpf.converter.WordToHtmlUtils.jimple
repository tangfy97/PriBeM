public class org.apache.poi.hwpf.converter.WordToHtmlUtils extends org.apache.poi.hwpf.converter.AbstractWordUtils
{

    public void <init>()
    {
        org.apache.poi.hwpf.converter.WordToHtmlUtils r0;

        r0 := @this: org.apache.poi.hwpf.converter.WordToHtmlUtils;

        specialinvoke r0.<org.apache.poi.hwpf.converter.AbstractWordUtils: void <init>()>();

        return;
    }

    public static void addBold(boolean, java.lang.StringBuilder)
    {
        java.lang.StringBuilder r0, $r1, $r2, $r3, $r4;
        java.lang.String $r5, $r6;
        boolean z0;

        z0 := @parameter0: boolean;

        r0 := @parameter1: java.lang.StringBuilder;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("font-weight:");

        if z0 == 0 goto label1;

        $r6 = "bold";

        goto label2;

     label1:
        $r6 = "normal";

     label2:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        return;
    }

    public static void addBorder(org.apache.poi.hwpf.usermodel.BorderCode, java.lang.String, java.lang.StringBuilder)
    {
        org.apache.poi.hwpf.usermodel.BorderCode r0;
        short $s1;
        int $i0, $i2;
        java.lang.StringBuilder r2;
        java.lang.String r1, $r3, $r4, $r5;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.poi.hwpf.usermodel.BorderCode;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.StringBuilder;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.BorderCode: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        return;

     label2:
        $z1 = staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: boolean isEmpty(java.lang.String)>(r1);

        if $z1 == 0 goto label3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("border:");

        goto label4;

     label3:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("border-");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

     label4:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i0 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.BorderCode: int getLineWidth()>();

        if $i0 >= 8 goto label5;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("thin");

        goto label6;

     label5:
        $r3 = staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: java.lang.String getBorderWidth(org.apache.poi.hwpf.usermodel.BorderCode)>(r0);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label6:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r4 = staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: java.lang.String getBorderType(org.apache.poi.hwpf.usermodel.BorderCode)>(r0);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $s1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.BorderCode: short getColor()>();

        $i2 = (int) $s1;

        $r5 = staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: java.lang.String getColor(int)>($i2);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(59);

        return;
    }

    public static void addCharactersProperties(org.apache.poi.hwpf.usermodel.CharacterRun, java.lang.StringBuilder)
    {
        org.apache.poi.hwpf.usermodel.BorderCode $r1;
        byte $b6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder r2, $r4, $r5, $r6, $r9, $r11, $r12, $r15, $r17, $r18, $r20, $r21, $r22;
        org.apache.poi.hwpf.usermodel.CharacterRun r0;
        short $s1, $s2;
        int $i0, $i3, $i4, $i5, $i7, $i9, $i10, $i11;
        java.lang.String $r7, $r10, $r13, $r16, $r19;

        r0 := @parameter0: org.apache.poi.hwpf.usermodel.CharacterRun;

        r2 := @parameter1: java.lang.StringBuilder;

        $r1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: org.apache.poi.hwpf.usermodel.BorderCode getBorder()>();

        staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: void addBorder(org.apache.poi.hwpf.usermodel.BorderCode,java.lang.String,java.lang.StringBuilder)>($r1, "", r2);

        $z0 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: boolean isCapitalized()>();

        if $z0 == 0 goto label01;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("text-transform:uppercase;");

     label01:
        $i0 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: int getIco24()>();

        $i9 = (int) -1;

        if $i0 == $i9 goto label02;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("color:");

        $i7 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: int getIco24()>();

        $r16 = staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: java.lang.String getColor24(int)>($i7);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

     label02:
        $z1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: boolean isHighlighted()>();

        if $z1 == 0 goto label03;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("background-color:");

        $b6 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: byte getHighlightedColor()>();

        $i10 = (int) $b6;

        $r10 = staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: java.lang.String getColor(int)>($i10);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

     label03:
        $z2 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: boolean isStrikeThrough()>();

        if $z2 == 0 goto label04;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("text-decoration:line-through;");

     label04:
        $z3 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: boolean isShadowed()>();

        if $z3 == 0 goto label05;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("text-shadow:");

        $i4 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: int getFontSize()>();

        $i5 = $i4 / 24;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pt;");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

     label05:
        $z4 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: boolean isSmallCaps()>();

        if $z4 == 0 goto label06;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("font-variant:small-caps;");

     label06:
        $s1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: short getSubSuperScriptIndex()>();

        if $s1 != 1 goto label07;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vertical-align:super;");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("font-size:smaller;");

     label07:
        $s2 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: short getSubSuperScriptIndex()>();

        $i11 = (int) $s2;

        if $i11 != 2 goto label08;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vertical-align:sub;");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("font-size:smaller;");

     label08:
        $i3 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: int getUnderlineCode()>();

        if $i3 <= 0 goto label09;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("text-decoration:underline;");

     label09:
        $z5 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.CharacterRun: boolean isVanished()>();

        if $z5 == 0 goto label10;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("visibility:hidden;");

     label10:
        return;
    }

    public static void addFontFamily(java.lang.String, java.lang.StringBuilder)
    {
        java.lang.StringBuilder r1, $r2, $r3, $r4, $r5;
        java.lang.String r0, $r6;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.StringBuilder;

        $z0 = staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: boolean isEmpty(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("font-family:");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        return;
    }

    public static void addFontSize(int, java.lang.StringBuilder)
    {
        int i0;
        java.lang.StringBuilder r0, $r1, $r2, $r3, $r4;
        java.lang.String $r5;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.StringBuilder;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("font-size:");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pt;");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        return;
    }

    public static void addIndent(org.apache.poi.hwpf.usermodel.Paragraph, java.lang.StringBuilder)
    {
        org.apache.poi.hwpf.usermodel.Paragraph r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.StringBuilder r0;

        r1 := @parameter0: org.apache.poi.hwpf.usermodel.Paragraph;

        r0 := @parameter1: java.lang.StringBuilder;

        $i0 = virtualinvoke r1.<org.apache.poi.hwpf.usermodel.Paragraph: int getFirstLineIndent()>();

        staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: void addIndent(java.lang.StringBuilder,java.lang.String,int)>(r0, "text-indent", $i0);

        $i1 = virtualinvoke r1.<org.apache.poi.hwpf.usermodel.Paragraph: int getIndentFromLeft()>();

        staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: void addIndent(java.lang.StringBuilder,java.lang.String,int)>(r0, "margin-left", $i1);

        $i2 = virtualinvoke r1.<org.apache.poi.hwpf.usermodel.Paragraph: int getIndentFromRight()>();

        staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: void addIndent(java.lang.StringBuilder,java.lang.String,int)>(r0, "margin-right", $i2);

        $i3 = virtualinvoke r1.<org.apache.poi.hwpf.usermodel.Paragraph: int getSpacingBefore()>();

        staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: void addIndent(java.lang.StringBuilder,java.lang.String,int)>(r0, "margin-top", $i3);

        $i4 = virtualinvoke r1.<org.apache.poi.hwpf.usermodel.Paragraph: int getSpacingAfter()>();

        staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: void addIndent(java.lang.StringBuilder,java.lang.String,int)>(r0, "margin-bottom", $i4);

        return;
    }

    private static void addIndent(java.lang.StringBuilder, java.lang.String, int)
    {
        int i0;
        float $f0, $f1;
        java.lang.StringBuilder r0, $r1, $r3, $r4, $r5, $r6;
        java.lang.String r2, $r7;

        r0 := @parameter0: java.lang.StringBuilder;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        if i0 != 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $f0 = (float) i0;

        $f1 = $f0 / 1440.0F;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in;");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        return;
    }

    public static void addJustification(org.apache.poi.hwpf.usermodel.Paragraph, java.lang.StringBuilder)
    {
        org.apache.poi.hwpf.usermodel.Paragraph r0;
        int $i0;
        java.lang.StringBuilder r2, $r3, $r4, $r5, $r6;
        java.lang.String $r1, $r7;
        boolean $z0;

        r0 := @parameter0: org.apache.poi.hwpf.usermodel.Paragraph;

        r2 := @parameter1: java.lang.StringBuilder;

        $i0 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Paragraph: int getJustification()>();

        $r1 = staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: java.lang.String getJustification(int)>($i0);

        $z0 = staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: boolean isNotEmpty(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("text-align:");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

     label1:
        return;
    }

    public static void addParagraphProperties(org.apache.poi.hwpf.usermodel.Paragraph, java.lang.StringBuilder)
    {
        org.apache.poi.hwpf.usermodel.BorderCode $r2, $r3, $r4, $r5;
        org.apache.poi.hwpf.usermodel.Paragraph r0;
        java.lang.String $r10, $r11;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder r1, $r6, $r7, $r8, $r9;

        r0 := @parameter0: org.apache.poi.hwpf.usermodel.Paragraph;

        r1 := @parameter1: java.lang.StringBuilder;

        staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: void addIndent(org.apache.poi.hwpf.usermodel.Paragraph,java.lang.StringBuilder)>(r0, r1);

        staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: void addJustification(org.apache.poi.hwpf.usermodel.Paragraph,java.lang.StringBuilder)>(r0, r1);

        $r2 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Paragraph: org.apache.poi.hwpf.usermodel.BorderCode getBottomBorder()>();

        staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: void addBorder(org.apache.poi.hwpf.usermodel.BorderCode,java.lang.String,java.lang.StringBuilder)>($r2, "bottom", r1);

        $r3 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Paragraph: org.apache.poi.hwpf.usermodel.BorderCode getLeftBorder()>();

        staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: void addBorder(org.apache.poi.hwpf.usermodel.BorderCode,java.lang.String,java.lang.StringBuilder)>($r3, "left", r1);

        $r4 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Paragraph: org.apache.poi.hwpf.usermodel.BorderCode getRightBorder()>();

        staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: void addBorder(org.apache.poi.hwpf.usermodel.BorderCode,java.lang.String,java.lang.StringBuilder)>($r4, "right", r1);

        $r5 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Paragraph: org.apache.poi.hwpf.usermodel.BorderCode getTopBorder()>();

        staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: void addBorder(org.apache.poi.hwpf.usermodel.BorderCode,java.lang.String,java.lang.StringBuilder)>($r5, "top", r1);

        $z0 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Paragraph: boolean pageBreakBefore()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("break-before:page;");

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hyphenate:");

        $z1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Paragraph: boolean isAutoHyphenated()>();

        if $z1 == 0 goto label2;

        $r11 = "auto";

        goto label3;

     label2:
        $r11 = "none";

     label3:
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $z2 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Paragraph: boolean keepOnPage()>();

        if $z2 == 0 goto label4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("keep-together.within-page:always;");

     label4:
        $z3 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.Paragraph: boolean keepWithNext()>();

        if $z3 == 0 goto label5;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("keep-with-next.within-page:always;");

     label5:
        return;
    }

    public static void addTableCellProperties(org.apache.poi.hwpf.usermodel.TableRow, org.apache.poi.hwpf.usermodel.TableCell, boolean, boolean, boolean, boolean, java.lang.StringBuilder)
    {
        org.apache.poi.hwpf.usermodel.BorderCode $r18, r19, r20, r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32;
        org.apache.poi.hwpf.usermodel.TableCell r3;
        org.apache.poi.hwpf.usermodel.TableRow r9;
        boolean z0, z1, z2, z3;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        java.lang.StringBuilder r0, $r1, $r2, $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14, $r15, $r16;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r6, $r12, $r17;

        r9 := @parameter0: org.apache.poi.hwpf.usermodel.TableRow;

        r3 := @parameter1: org.apache.poi.hwpf.usermodel.TableCell;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        z3 := @parameter5: boolean;

        r0 := @parameter6: java.lang.StringBuilder;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("width:");

        $i0 = virtualinvoke r3.<org.apache.poi.hwpf.usermodel.TableCell: int getWidth()>();

        $f0 = (float) $i0;

        $f1 = $f0 / 1440.0F;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in;");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("padding-start:");

        $i1 = virtualinvoke r9.<org.apache.poi.hwpf.usermodel.TableRow: int getGapHalf()>();

        $f2 = (float) $i1;

        $f3 = $f2 / 1440.0F;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in;");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("padding-end:");

        $i2 = virtualinvoke r9.<org.apache.poi.hwpf.usermodel.TableRow: int getGapHalf()>();

        $f4 = (float) $i2;

        $f5 = $f4 / 1440.0F;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f5);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in;");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r18 = virtualinvoke r3.<org.apache.poi.hwpf.usermodel.TableCell: org.apache.poi.hwpf.usermodel.BorderCode getBrcTop()>();

        if $r18 == null goto label01;

        $r25 = virtualinvoke r3.<org.apache.poi.hwpf.usermodel.TableCell: org.apache.poi.hwpf.usermodel.BorderCode getBrcTop()>();

        $i6 = virtualinvoke $r25.<org.apache.poi.hwpf.usermodel.BorderCode: int getBorderType()>();

        if $i6 == 0 goto label01;

        $r26 = virtualinvoke r3.<org.apache.poi.hwpf.usermodel.TableCell: org.apache.poi.hwpf.usermodel.BorderCode getBrcTop()>();

        goto label03;

     label01:
        if z0 == 0 goto label02;

        $r26 = virtualinvoke r9.<org.apache.poi.hwpf.usermodel.TableRow: org.apache.poi.hwpf.usermodel.BorderCode getTopBorder()>();

        goto label03;

     label02:
        $r26 = virtualinvoke r9.<org.apache.poi.hwpf.usermodel.TableRow: org.apache.poi.hwpf.usermodel.BorderCode getHorizontalBorder()>();

     label03:
        r19 = $r26;

        $r27 = virtualinvoke r3.<org.apache.poi.hwpf.usermodel.TableCell: org.apache.poi.hwpf.usermodel.BorderCode getBrcBottom()>();

        if $r27 == null goto label04;

        $r24 = virtualinvoke r3.<org.apache.poi.hwpf.usermodel.TableCell: org.apache.poi.hwpf.usermodel.BorderCode getBrcBottom()>();

        $i5 = virtualinvoke $r24.<org.apache.poi.hwpf.usermodel.BorderCode: int getBorderType()>();

        if $i5 == 0 goto label04;

        $r28 = virtualinvoke r3.<org.apache.poi.hwpf.usermodel.TableCell: org.apache.poi.hwpf.usermodel.BorderCode getBrcBottom()>();

        goto label06;

     label04:
        if z1 == 0 goto label05;

        $r28 = virtualinvoke r9.<org.apache.poi.hwpf.usermodel.TableRow: org.apache.poi.hwpf.usermodel.BorderCode getBottomBorder()>();

        goto label06;

     label05:
        $r28 = virtualinvoke r9.<org.apache.poi.hwpf.usermodel.TableRow: org.apache.poi.hwpf.usermodel.BorderCode getHorizontalBorder()>();

     label06:
        r20 = $r28;

        $r29 = virtualinvoke r3.<org.apache.poi.hwpf.usermodel.TableCell: org.apache.poi.hwpf.usermodel.BorderCode getBrcLeft()>();

        if $r29 == null goto label07;

        $r23 = virtualinvoke r3.<org.apache.poi.hwpf.usermodel.TableCell: org.apache.poi.hwpf.usermodel.BorderCode getBrcLeft()>();

        $i4 = virtualinvoke $r23.<org.apache.poi.hwpf.usermodel.BorderCode: int getBorderType()>();

        if $i4 == 0 goto label07;

        $r30 = virtualinvoke r3.<org.apache.poi.hwpf.usermodel.TableCell: org.apache.poi.hwpf.usermodel.BorderCode getBrcLeft()>();

        goto label09;

     label07:
        if z2 == 0 goto label08;

        $r30 = virtualinvoke r9.<org.apache.poi.hwpf.usermodel.TableRow: org.apache.poi.hwpf.usermodel.BorderCode getLeftBorder()>();

        goto label09;

     label08:
        $r30 = virtualinvoke r9.<org.apache.poi.hwpf.usermodel.TableRow: org.apache.poi.hwpf.usermodel.BorderCode getVerticalBorder()>();

     label09:
        r21 = $r30;

        $r31 = virtualinvoke r3.<org.apache.poi.hwpf.usermodel.TableCell: org.apache.poi.hwpf.usermodel.BorderCode getBrcRight()>();

        if $r31 == null goto label10;

        $r22 = virtualinvoke r3.<org.apache.poi.hwpf.usermodel.TableCell: org.apache.poi.hwpf.usermodel.BorderCode getBrcRight()>();

        $i3 = virtualinvoke $r22.<org.apache.poi.hwpf.usermodel.BorderCode: int getBorderType()>();

        if $i3 == 0 goto label10;

        $r32 = virtualinvoke r3.<org.apache.poi.hwpf.usermodel.TableCell: org.apache.poi.hwpf.usermodel.BorderCode getBrcRight()>();

        goto label12;

     label10:
        if z3 == 0 goto label11;

        $r32 = virtualinvoke r9.<org.apache.poi.hwpf.usermodel.TableRow: org.apache.poi.hwpf.usermodel.BorderCode getRightBorder()>();

        goto label12;

     label11:
        $r32 = virtualinvoke r9.<org.apache.poi.hwpf.usermodel.TableRow: org.apache.poi.hwpf.usermodel.BorderCode getVerticalBorder()>();

     label12:
        staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: void addBorder(org.apache.poi.hwpf.usermodel.BorderCode,java.lang.String,java.lang.StringBuilder)>(r20, "bottom", r0);

        staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: void addBorder(org.apache.poi.hwpf.usermodel.BorderCode,java.lang.String,java.lang.StringBuilder)>(r21, "left", r0);

        staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: void addBorder(org.apache.poi.hwpf.usermodel.BorderCode,java.lang.String,java.lang.StringBuilder)>($r32, "right", r0);

        staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: void addBorder(org.apache.poi.hwpf.usermodel.BorderCode,java.lang.String,java.lang.StringBuilder)>(r19, "top", r0);

        return;
    }

    public static void addTableRowProperties(org.apache.poi.hwpf.usermodel.TableRow, java.lang.StringBuilder)
    {
        org.apache.poi.hwpf.usermodel.TableRow r0;
        int $i0, $i1;
        float $f0, $f1;
        java.lang.StringBuilder r1, $r2, $r3, $r4, $r5;
        java.lang.String $r6;
        boolean $z0;

        r0 := @parameter0: org.apache.poi.hwpf.usermodel.TableRow;

        r1 := @parameter1: java.lang.StringBuilder;

        $i0 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.TableRow: int getRowHeight()>();

        if $i0 <= 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("height:");

        $i1 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.TableRow: int getRowHeight()>();

        $f0 = (float) $i1;

        $f1 = $f0 / 1440.0F;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in;");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label1:
        $z0 = virtualinvoke r0.<org.apache.poi.hwpf.usermodel.TableRow: boolean cantSplit()>();

        if $z0 != 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("keep-together:always;");

     label2:
        return;
    }

    static void compactSpans(org.w3c.dom.Element)
    {
        org.w3c.dom.Element r0;

        r0 := @parameter0: org.w3c.dom.Element;

        staticinvoke <org.apache.poi.hwpf.converter.WordToHtmlUtils: void compactChildNodesR(org.w3c.dom.Element,java.lang.String)>(r0, "span");

        return;
    }
}
