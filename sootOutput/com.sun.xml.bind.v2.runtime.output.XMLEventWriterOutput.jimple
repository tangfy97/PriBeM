public class com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput extends com.sun.xml.bind.v2.runtime.output.XmlOutputAbstractImpl
{
    private final javax.xml.stream.XMLEventWriter out;
    private final javax.xml.stream.XMLEventFactory ef;
    private final javax.xml.stream.events.Characters sp;

    public void <init>(javax.xml.stream.XMLEventWriter)
    {
        com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput r0;
        javax.xml.stream.XMLEventWriter r1;
        javax.xml.stream.events.Characters $r4;
        javax.xml.stream.XMLEventFactory $r2, $r3;

        r0 := @this: com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput;

        r1 := @parameter0: javax.xml.stream.XMLEventWriter;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.output.XmlOutputAbstractImpl: void <init>()>();

        r0.<com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput: javax.xml.stream.XMLEventWriter out> = r1;

        $r2 = staticinvoke <javax.xml.stream.XMLEventFactory: javax.xml.stream.XMLEventFactory newInstance()>();

        r0.<com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput: javax.xml.stream.XMLEventFactory ef> = $r2;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput: javax.xml.stream.XMLEventFactory ef>;

        $r4 = virtualinvoke $r3.<javax.xml.stream.XMLEventFactory: javax.xml.stream.events.Characters createCharacters(java.lang.String)>(" ");

        r0.<com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput: javax.xml.stream.events.Characters sp> = $r4;

        return;
    }

    public void startDocument(com.sun.xml.bind.v2.runtime.XMLSerializer, boolean, int[], com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl) throws java.io.IOException, org.xml.sax.SAXException, javax.xml.stream.XMLStreamException
    {
        com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput r0;
        javax.xml.stream.XMLEventWriter $r5;
        com.sun.xml.bind.v2.runtime.XMLSerializer r1;
        int[] r2;
        javax.xml.stream.events.StartDocument $r6;
        com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl r3;
        javax.xml.stream.XMLEventFactory $r4;
        boolean z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.XMLSerializer;

        z0 := @parameter1: boolean;

        r2 := @parameter2: int[];

        r3 := @parameter3: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl;

        specialinvoke r0.<com.sun.xml.bind.v2.runtime.output.XmlOutputAbstractImpl: void startDocument(com.sun.xml.bind.v2.runtime.XMLSerializer,boolean,int[],com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl)>(r1, z0, r2, r3);

        if z0 != 0 goto label1;

        $r5 = r0.<com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput: javax.xml.stream.XMLEventWriter out>;

        $r4 = r0.<com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput: javax.xml.stream.XMLEventFactory ef>;

        $r6 = virtualinvoke $r4.<javax.xml.stream.XMLEventFactory: javax.xml.stream.events.StartDocument createStartDocument()>();

        interfaceinvoke $r5.<javax.xml.stream.XMLEventWriter: void add(javax.xml.stream.events.XMLEvent)>($r6);

     label1:
        return;
    }

    public void endDocument(boolean) throws java.io.IOException, org.xml.sax.SAXException, javax.xml.stream.XMLStreamException
    {
        com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput r0;
        javax.xml.stream.XMLEventWriter $r2, $r4;
        javax.xml.stream.XMLEventFactory $r1;
        boolean z0;
        javax.xml.stream.events.EndDocument $r3;

        r0 := @this: com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput: javax.xml.stream.XMLEventWriter out>;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput: javax.xml.stream.XMLEventFactory ef>;

        $r3 = virtualinvoke $r1.<javax.xml.stream.XMLEventFactory: javax.xml.stream.events.EndDocument createEndDocument()>();

        interfaceinvoke $r2.<javax.xml.stream.XMLEventWriter: void add(javax.xml.stream.events.XMLEvent)>($r3);

        $r4 = r0.<com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput: javax.xml.stream.XMLEventWriter out>;

        interfaceinvoke $r4.<javax.xml.stream.XMLEventWriter: void flush()>();

     label1:
        specialinvoke r0.<com.sun.xml.bind.v2.runtime.output.XmlOutputAbstractImpl: void endDocument(boolean)>(z0);

        return;
    }

    public void beginStartTag(int, java.lang.String) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput r0;
        javax.xml.stream.XMLEventWriter $r2, $r12;
        int i0, $i1, $i2, $i3, $i4, i5, $i7;
        com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl $r1, $r5, $r9;
        java.lang.String $r4, $r6, r7, $r11, $r14;
        javax.xml.stream.events.StartElement $r8;
        com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element $r10;
        javax.xml.stream.events.Namespace $r15;
        javax.xml.stream.XMLEventFactory $r3, $r13;

        r0 := @this: com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput: javax.xml.stream.XMLEventWriter out>;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput: javax.xml.stream.XMLEventFactory ef>;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl nsContext>;

        $r4 = virtualinvoke $r1.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl: java.lang.String getPrefix(int)>(i0);

        $r5 = r0.<com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl nsContext>;

        $r6 = virtualinvoke $r5.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl: java.lang.String getNamespaceURI(int)>(i0);

        $r8 = virtualinvoke $r3.<javax.xml.stream.XMLEventFactory: javax.xml.stream.events.StartElement createStartElement(java.lang.String,java.lang.String,java.lang.String)>($r4, $r6, r7);

        interfaceinvoke $r2.<javax.xml.stream.XMLEventWriter: void add(javax.xml.stream.events.XMLEvent)>($r8);

        $r9 = r0.<com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl nsContext>;

        $r10 = virtualinvoke $r9.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element getCurrent()>();

        $i1 = virtualinvoke $r10.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element: int count()>();

        if $i1 <= 0 goto label4;

        $i2 = virtualinvoke $r10.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element: int count()>();

        i5 = $i2 - 1;

     label1:
        if i5 < 0 goto label4;

        $r11 = virtualinvoke $r10.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element: java.lang.String getNsUri(int)>(i5);

        $i3 = virtualinvoke $r11.<java.lang.String: int length()>();

        if $i3 != 0 goto label2;

        $i4 = virtualinvoke $r10.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element: int getBase()>();

        if $i4 != 1 goto label2;

        goto label3;

     label2:
        $r12 = r0.<com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput: javax.xml.stream.XMLEventWriter out>;

        $r13 = r0.<com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput: javax.xml.stream.XMLEventFactory ef>;

        $r14 = virtualinvoke $r10.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl$Element: java.lang.String getPrefix(int)>(i5);

        $r15 = virtualinvoke $r13.<javax.xml.stream.XMLEventFactory: javax.xml.stream.events.Namespace createNamespace(java.lang.String,java.lang.String)>($r14, $r11);

        interfaceinvoke $r12.<javax.xml.stream.XMLEventWriter: void add(javax.xml.stream.events.XMLEvent)>($r15);

     label3:
        $i7 = (int) -1;

        i5 = i5 + $i7;

        goto label1;

     label4:
        return;
    }

    public void attribute(int, java.lang.String, java.lang.String) throws java.io.IOException, javax.xml.stream.XMLStreamException
    {
        com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput r0;
        javax.xml.stream.XMLEventWriter $r8;
        javax.xml.stream.events.Attribute r10;
        int i0, $i2;
        com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl $r1, $r4;
        java.lang.String $r3, $r5, r6, r7;
        javax.xml.stream.XMLEventFactory $r2, $r9;

        r0 := @this: com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput;

        i0 := @parameter0: int;

        r6 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        $i2 = (int) -1;

        if i0 != $i2 goto label1;

        $r9 = r0.<com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput: javax.xml.stream.XMLEventFactory ef>;

        r10 = virtualinvoke $r9.<javax.xml.stream.XMLEventFactory: javax.xml.stream.events.Attribute createAttribute(java.lang.String,java.lang.String)>(r6, r7);

        goto label2;

     label1:
        $r2 = r0.<com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput: javax.xml.stream.XMLEventFactory ef>;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl nsContext>;

        $r3 = virtualinvoke $r1.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl: java.lang.String getPrefix(int)>(i0);

        $r4 = r0.<com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl nsContext>;

        $r5 = virtualinvoke $r4.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl: java.lang.String getNamespaceURI(int)>(i0);

        r10 = virtualinvoke $r2.<javax.xml.stream.XMLEventFactory: javax.xml.stream.events.Attribute createAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r3, $r5, r6, r7);

     label2:
        $r8 = r0.<com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput: javax.xml.stream.XMLEventWriter out>;

        interfaceinvoke $r8.<javax.xml.stream.XMLEventWriter: void add(javax.xml.stream.events.XMLEvent)>(r10);

        return;
    }

    public void endStartTag() throws java.io.IOException, org.xml.sax.SAXException
    {
        com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput;

        return;
    }

    public void endTag(int, java.lang.String) throws java.io.IOException, org.xml.sax.SAXException, javax.xml.stream.XMLStreamException
    {
        com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput r0;
        javax.xml.stream.XMLEventWriter $r2;
        int i0;
        com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl $r1, $r5;
        javax.xml.stream.events.EndElement $r8;
        java.lang.String $r4, $r6, r7;
        javax.xml.stream.XMLEventFactory $r3;

        r0 := @this: com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput;

        i0 := @parameter0: int;

        r7 := @parameter1: java.lang.String;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput: javax.xml.stream.XMLEventWriter out>;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput: javax.xml.stream.XMLEventFactory ef>;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl nsContext>;

        $r4 = virtualinvoke $r1.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl: java.lang.String getPrefix(int)>(i0);

        $r5 = r0.<com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput: com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl nsContext>;

        $r6 = virtualinvoke $r5.<com.sun.xml.bind.v2.runtime.output.NamespaceContextImpl: java.lang.String getNamespaceURI(int)>(i0);

        $r8 = virtualinvoke $r3.<javax.xml.stream.XMLEventFactory: javax.xml.stream.events.EndElement createEndElement(java.lang.String,java.lang.String,java.lang.String)>($r4, $r6, r7);

        interfaceinvoke $r2.<javax.xml.stream.XMLEventWriter: void add(javax.xml.stream.events.XMLEvent)>($r8);

        return;
    }

    public void text(java.lang.String, boolean) throws java.io.IOException, org.xml.sax.SAXException, javax.xml.stream.XMLStreamException
    {
        com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput r0;
        javax.xml.stream.XMLEventWriter $r3, $r6;
        javax.xml.stream.events.Characters $r4, $r5;
        java.lang.String r1;
        javax.xml.stream.XMLEventFactory $r2;
        boolean z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r6 = r0.<com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput: javax.xml.stream.XMLEventWriter out>;

        $r5 = r0.<com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput: javax.xml.stream.events.Characters sp>;

        interfaceinvoke $r6.<javax.xml.stream.XMLEventWriter: void add(javax.xml.stream.events.XMLEvent)>($r5);

     label1:
        $r3 = r0.<com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput: javax.xml.stream.XMLEventWriter out>;

        $r2 = r0.<com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput: javax.xml.stream.XMLEventFactory ef>;

        $r4 = virtualinvoke $r2.<javax.xml.stream.XMLEventFactory: javax.xml.stream.events.Characters createCharacters(java.lang.String)>(r1);

        interfaceinvoke $r3.<javax.xml.stream.XMLEventWriter: void add(javax.xml.stream.events.XMLEvent)>($r4);

        return;
    }

    public void text(com.sun.xml.bind.v2.runtime.output.Pcdata, boolean) throws java.io.IOException, org.xml.sax.SAXException, javax.xml.stream.XMLStreamException
    {
        com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput r0;
        com.sun.xml.bind.v2.runtime.output.Pcdata r1;
        java.lang.String $r2;
        boolean z0;

        r0 := @this: com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput;

        r1 := @parameter0: com.sun.xml.bind.v2.runtime.output.Pcdata;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r1.<com.sun.xml.bind.v2.runtime.output.Pcdata: java.lang.String toString()>();

        virtualinvoke r0.<com.sun.xml.bind.v2.runtime.output.XMLEventWriterOutput: void text(java.lang.String,boolean)>($r2, z0);

        return;
    }
}
