public class org.apache.cxf.jaxrs.provider.SourceProvider extends org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider implements javax.ws.rs.ext.MessageBodyReader, javax.ws.rs.ext.MessageBodyWriter
{
    private static final java.lang.String PREFERRED_FORMAT;
    private org.apache.cxf.jaxrs.ext.MessageContext context;

    public void <init>()
    {
        org.apache.cxf.jaxrs.provider.SourceProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.SourceProvider;

        specialinvoke r0.<org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider: void <init>()>();

        return;
    }

    public boolean isWriteable(java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType)
    {
        java.lang.'annotation'.Annotation[] r5;
        javax.ws.rs.core.MediaType r6;
        java.lang.reflect.Type r4;
        java.lang.Class r0, $r1, $r2;
        org.apache.cxf.jaxrs.provider.SourceProvider r3;
        boolean $z0, $z1, $z2;

        r3 := @this: org.apache.cxf.jaxrs.provider.SourceProvider;

        r0 := @parameter0: java.lang.Class;

        r4 := @parameter1: java.lang.reflect.Type;

        r5 := @parameter2: java.lang.'annotation'.Annotation[];

        r6 := @parameter3: javax.ws.rs.core.MediaType;

        $r1 = class "Ljavax/xml/transform/Source;";

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 != 0 goto label1;

        $r2 = class "Lorg/w3c/dom/Document;";

        $z1 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean isReadable(java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType)
    {
        java.lang.'annotation'.Annotation[] r6;
        javax.ws.rs.core.MediaType r7;
        java.lang.reflect.Type r5;
        java.lang.Class r0, $r1, $r2, $r3;
        org.apache.cxf.jaxrs.provider.SourceProvider r4;
        boolean $z0, $z1, $z2, $z3;

        r4 := @this: org.apache.cxf.jaxrs.provider.SourceProvider;

        r0 := @parameter0: java.lang.Class;

        r5 := @parameter1: java.lang.reflect.Type;

        r6 := @parameter2: java.lang.'annotation'.Annotation[];

        r7 := @parameter3: javax.ws.rs.core.MediaType;

        $r1 = class "Ljavax/xml/transform/Source;";

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 != 0 goto label1;

        $r2 = class "Lorg/apache/cxf/jaxrs/ext/xml/XMLSource;";

        $z1 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z1 != 0 goto label1;

        $r3 = class "Lorg/w3c/dom/Document;";

        $z2 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z2 == 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    public java.lang.Object readFrom(java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.InputStream) throws java.io.IOException
    {
        javax.ws.rs.core.MediaType r36;
        javax.xml.stream.XMLStreamReader $r4, $r10;
        org.w3c.dom.Document $r5;
        javax.xml.stream.XMLStreamException $r26, $r33;
        org.apache.cxf.jaxrs.ext.xml.XMLSource $r46;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.lang.Exception $r28;
        java.lang.StackTraceElement[] $r30;
        java.lang.reflect.Type r34;
        javax.ws.rs.WebApplicationException $r42;
        java.lang.Throwable $r27;
        javax.xml.transform.dom.DOMSource $r41;
        org.apache.cxf.staxutils.StaxSource $r44;
        javax.xml.transform.stream.StreamSource $r45;
        java.lang.'annotation'.Annotation[] r35;
        java.lang.String $r23, $r24, $r25;
        org.apache.cxf.jaxrs.provider.SourceProvider r2;
        java.io.IOException $r43, $r47;
        javax.ws.rs.core.MultivaluedMap r37;
        java.lang.Class r0, $r1, $r7, $r8, $r12, $r13, $r17, $r18, r38, $r39;
        java.lang.Object $r6, $r11, $r16, $r22, $r40;
        org.apache.cxf.staxutils.DepthExceededStaxException $r31;
        java.io.InputStream r3, $r15, $r21;

        r2 := @this: org.apache.cxf.jaxrs.provider.SourceProvider;

        r0 := @parameter0: java.lang.Class;

        r34 := @parameter1: java.lang.reflect.Type;

        r35 := @parameter2: java.lang.'annotation'.Annotation[];

        r36 := @parameter3: javax.ws.rs.core.MediaType;

        r37 := @parameter4: javax.ws.rs.core.MultivaluedMap;

        r3 := @parameter5: java.io.InputStream;

        r38 = r0;

        if r0 != class "Ljavax/xml/transform/Source;" goto label02;

        $r23 = virtualinvoke r2.<org.apache.cxf.jaxrs.provider.SourceProvider: java.lang.String getPreferredSource()>();

        $r24 = "sax";

        $z7 = virtualinvoke $r24.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r23);

        if $z7 != 0 goto label01;

        $r25 = "cxf.stax";

        $z8 = virtualinvoke $r25.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r23);

        if $z8 == 0 goto label02;

     label01:
        r38 = class "Ljavax/xml/transform/sax/SAXSource;";

     label02:
        $r39 = class "Ljavax/xml/transform/dom/DOMSource;";

        $z9 = virtualinvoke $r39.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r38);

        if $z9 != 0 goto label03;

        $r7 = class "Lorg/w3c/dom/Document;";

        $z1 = virtualinvoke $r7.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r38);

        if $z1 == 0 goto label18;

     label03:
        $r1 = class "Lorg/w3c/dom/Document;";

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r38);

        $r4 = virtualinvoke r2.<org.apache.cxf.jaxrs.provider.SourceProvider: javax.xml.stream.XMLStreamReader getReader(java.io.InputStream)>(r3);

     label04:
        $r5 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: org.w3c.dom.Document read(javax.xml.stream.XMLStreamReader)>($r4);

        if $z0 == 0 goto label05;

        $r40 = $r5;

        goto label06;

     label05:
        $r41 = new javax.xml.transform.dom.DOMSource;

        $r40 = $r41;

        specialinvoke $r41.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>($r5);

     label06:
        $r6 = virtualinvoke r0.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r40);

     label07:
        interfaceinvoke $r4.<javax.xml.stream.XMLStreamReader: void close()>();

     label08:
        goto label10;

     label09:
        $r33 := @caughtexception;

     label10:
        return $r6;

     label11:
        $r31 := @caughtexception;

        $r42 = new javax.ws.rs.WebApplicationException;

        specialinvoke $r42.<javax.ws.rs.WebApplicationException: void <init>(int)>(413);

        throw $r42;

     label12:
        $r28 := @caughtexception;

        $r43 = new java.io.IOException;

        specialinvoke $r43.<java.io.IOException: void <init>(java.lang.String)>("Problem creating a Source object");

        $r30 = virtualinvoke $r28.<java.lang.Exception: java.lang.StackTraceElement[] getStackTrace()>();

        virtualinvoke $r43.<java.io.IOException: void setStackTrace(java.lang.StackTraceElement[])>($r30);

        throw $r43;

     label13:
        $r27 := @caughtexception;

     label14:
        interfaceinvoke $r4.<javax.xml.stream.XMLStreamReader: void close()>();

     label15:
        goto label17;

     label16:
        $r26 := @caughtexception;

     label17:
        throw $r27;

     label18:
        $r8 = class "Ljavax/xml/transform/sax/SAXSource;";

        $z2 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r38);

        if $z2 != 0 goto label19;

        $r12 = class "Lorg/apache/cxf/staxutils/StaxSource;";

        $z3 = virtualinvoke $r12.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r38);

        if $z3 == 0 goto label20;

     label19:
        $r44 = new org.apache.cxf.staxutils.StaxSource;

        $r10 = virtualinvoke r2.<org.apache.cxf.jaxrs.provider.SourceProvider: javax.xml.stream.XMLStreamReader getReader(java.io.InputStream)>(r3);

        specialinvoke $r44.<org.apache.cxf.staxutils.StaxSource: void <init>(javax.xml.stream.XMLStreamReader)>($r10);

        $r11 = virtualinvoke r0.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r44);

        return $r11;

     label20:
        $r13 = class "Ljavax/xml/transform/stream/StreamSource;";

        $z4 = virtualinvoke $r13.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r38);

        if $z4 != 0 goto label21;

        $r17 = class "Ljavax/xml/transform/Source;";

        $z5 = virtualinvoke $r17.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r38);

        if $z5 == 0 goto label22;

     label21:
        $r45 = new javax.xml.transform.stream.StreamSource;

        $r15 = virtualinvoke r2.<org.apache.cxf.jaxrs.provider.SourceProvider: java.io.InputStream getRealStream(java.io.InputStream)>(r3);

        specialinvoke $r45.<javax.xml.transform.stream.StreamSource: void <init>(java.io.InputStream)>($r15);

        $r16 = virtualinvoke r0.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r45);

        return $r16;

     label22:
        $r18 = class "Lorg/apache/cxf/jaxrs/ext/xml/XMLSource;";

        $z6 = virtualinvoke $r18.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r38);

        if $z6 == 0 goto label23;

        $r46 = new org.apache.cxf.jaxrs.ext.xml.XMLSource;

        $r21 = virtualinvoke r2.<org.apache.cxf.jaxrs.provider.SourceProvider: java.io.InputStream getRealStream(java.io.InputStream)>(r3);

        specialinvoke $r46.<org.apache.cxf.jaxrs.ext.xml.XMLSource: void <init>(java.io.InputStream)>($r21);

        $r22 = virtualinvoke r0.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r46);

        return $r22;

     label23:
        $r47 = new java.io.IOException;

        specialinvoke $r47.<java.io.IOException: void <init>(java.lang.String)>("Unrecognized source");

        throw $r47;

        catch javax.xml.stream.XMLStreamException from label07 to label08 with label09;
        catch org.apache.cxf.staxutils.DepthExceededStaxException from label04 to label07 with label11;
        catch java.lang.Exception from label04 to label07 with label12;
        catch java.lang.Throwable from label04 to label07 with label13;
        catch javax.xml.stream.XMLStreamException from label14 to label15 with label16;
        catch java.lang.Throwable from label11 to label14 with label13;
    }

    protected javax.xml.stream.XMLStreamReader getReader(java.io.InputStream)
    {
        javax.xml.stream.XMLStreamReader $r1, $r3;
        org.apache.cxf.jaxrs.provider.SourceProvider r0;
        java.io.InputStream r2;

        r0 := @this: org.apache.cxf.jaxrs.provider.SourceProvider;

        r2 := @parameter0: java.io.InputStream;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.SourceProvider: javax.xml.stream.XMLStreamReader getReaderFromMessage()>();

        if $r1 != null goto label1;

        $r3 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream)>(r2);

        goto label2;

     label1:
        $r3 = $r1;

     label2:
        return $r3;
    }

    protected java.io.InputStream getRealStream(java.io.InputStream) throws java.io.IOException
    {
        javax.xml.stream.XMLStreamReader $r1;
        org.apache.cxf.jaxrs.provider.SourceProvider r0;
        java.io.InputStream r2, $r3;

        r0 := @this: org.apache.cxf.jaxrs.provider.SourceProvider;

        r2 := @parameter0: java.io.InputStream;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.SourceProvider: javax.xml.stream.XMLStreamReader getReaderFromMessage()>();

        if $r1 != null goto label1;

        $r3 = r2;

        goto label2;

     label1:
        $r3 = specialinvoke r0.<org.apache.cxf.jaxrs.provider.SourceProvider: java.io.InputStream getStreamFromReader(javax.xml.stream.XMLStreamReader)>($r1);

     label2:
        return $r3;
    }

    private java.io.InputStream getStreamFromReader(javax.xml.stream.XMLStreamReader) throws java.io.IOException
    {
        java.lang.Throwable $r3;
        java.io.IOException $r5;
        javax.xml.stream.XMLStreamReader r1;
        javax.xml.stream.XMLStreamException $r4;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.String $r8, $r10;
        org.apache.cxf.jaxrs.provider.SourceProvider r11;
        org.apache.cxf.io.CachedOutputStream $r0;
        java.io.InputStream $r2;

        r11 := @this: org.apache.cxf.jaxrs.provider.SourceProvider;

        r1 := @parameter0: javax.xml.stream.XMLStreamReader;

        $r0 = new org.apache.cxf.io.CachedOutputStream;

        specialinvoke $r0.<org.apache.cxf.io.CachedOutputStream: void <init>()>();

     label1:
        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void copy(javax.xml.stream.XMLStreamReader,java.io.OutputStream)>(r1, $r0);

        $r2 = virtualinvoke $r0.<org.apache.cxf.io.CachedOutputStream: java.io.InputStream getInputStream()>();

     label2:
        virtualinvoke $r0.<org.apache.cxf.io.CachedOutputStream: void close()>();

        return $r2;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.io.IOException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XMLStreamException:");

        $r8 = virtualinvoke $r4.<javax.xml.stream.XMLStreamException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label4:
        $r3 := @caughtexception;

     label5:
        virtualinvoke $r0.<org.apache.cxf.io.CachedOutputStream: void close()>();

        throw $r3;

        catch javax.xml.stream.XMLStreamException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label5 with label4;
    }

    protected javax.xml.stream.XMLStreamReader getReaderFromMessage()
    {
        org.apache.cxf.jaxrs.ext.MessageContext $r1;
        javax.xml.stream.XMLStreamReader $r3;
        java.lang.Object $r2;
        org.apache.cxf.jaxrs.provider.SourceProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.SourceProvider;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.SourceProvider: org.apache.cxf.jaxrs.ext.MessageContext getContext()>();

        if $r1 == null goto label1;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.jaxrs.ext.MessageContext: java.lang.Object getContent(java.lang.Class)>(class "Ljavax/xml/stream/XMLStreamReader;");

        $r3 = (javax.xml.stream.XMLStreamReader) $r2;

        return $r3;

     label1:
        return null;
    }

    public void writeTo(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream) throws java.io.IOException
    {
        java.lang.Throwable $r11;
        javax.xml.transform.Source $r8;
        java.lang.'annotation'.Annotation[] r19;
        javax.ws.rs.core.MediaType r0;
        javax.xml.stream.XMLStreamReader r5, $r20;
        org.w3c.dom.Document $r4;
        javax.xml.stream.XMLStreamException $r9, $r10, $r12, $r14, $r15;
        javax.xml.stream.XMLStreamWriter $r7;
        java.lang.String $r2;
        org.apache.cxf.jaxrs.provider.SourceProvider r16;
        boolean $z0;
        java.io.OutputStream r6;
        javax.ws.rs.InternalServerErrorException $r13;
        javax.ws.rs.core.MultivaluedMap r1;
        java.lang.reflect.Type r18;
        java.lang.Object r3;
        java.lang.Class r17;

        r16 := @this: org.apache.cxf.jaxrs.provider.SourceProvider;

        r3 := @parameter0: java.lang.Object;

        r17 := @parameter1: java.lang.Class;

        r18 := @parameter2: java.lang.reflect.Type;

        r19 := @parameter3: java.lang.'annotation'.Annotation[];

        r0 := @parameter4: javax.ws.rs.core.MediaType;

        r1 := @parameter5: javax.ws.rs.core.MultivaluedMap;

        r6 := @parameter6: java.io.OutputStream;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String getSetEncoding(javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.lang.String)>(r0, r1, "UTF-8");

        $z0 = r3 instanceof javax.xml.transform.Source;

        if $z0 == 0 goto label01;

        $r8 = (javax.xml.transform.Source) r3;

        $r20 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: javax.xml.stream.XMLStreamReader createXMLStreamReader(javax.xml.transform.Source)>($r8);

        goto label02;

     label01:
        $r4 = (org.w3c.dom.Document) r3;

        $r20 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: javax.xml.stream.XMLStreamReader createXMLStreamReader(org.w3c.dom.Document)>($r4);

     label02:
        r5 = $r20;

        $r7 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream,java.lang.String)>(r6, $r2);

     label03:
        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)>($r20, $r7);

     label04:
        interfaceinvoke $r20.<javax.xml.stream.XMLStreamReader: void close()>();

     label05:
        goto label07;

     label06:
        $r15 := @caughtexception;

     label07:
        interfaceinvoke $r7.<javax.xml.stream.XMLStreamWriter: void flush()>();

        interfaceinvoke $r7.<javax.xml.stream.XMLStreamWriter: void close()>();

     label08:
        goto label19;

     label09:
        $r14 := @caughtexception;

        goto label19;

     label10:
        $r12 := @caughtexception;

        $r13 = new javax.ws.rs.InternalServerErrorException;

        specialinvoke $r13.<javax.ws.rs.InternalServerErrorException: void <init>(java.lang.Throwable)>($r12);

        throw $r13;

     label11:
        $r11 := @caughtexception;

     label12:
        interfaceinvoke r5.<javax.xml.stream.XMLStreamReader: void close()>();

     label13:
        goto label15;

     label14:
        $r10 := @caughtexception;

     label15:
        interfaceinvoke $r7.<javax.xml.stream.XMLStreamWriter: void flush()>();

        interfaceinvoke $r7.<javax.xml.stream.XMLStreamWriter: void close()>();

     label16:
        goto label18;

     label17:
        $r9 := @caughtexception;

     label18:
        throw $r11;

     label19:
        return;

        catch javax.xml.stream.XMLStreamException from label04 to label05 with label06;
        catch javax.xml.stream.XMLStreamException from label07 to label08 with label09;
        catch javax.xml.stream.XMLStreamException from label03 to label04 with label10;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch javax.xml.stream.XMLStreamException from label12 to label13 with label14;
        catch javax.xml.stream.XMLStreamException from label15 to label16 with label17;
        catch java.lang.Throwable from label10 to label12 with label11;
    }

    public long getSize(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.'annotation'.Annotation[], javax.ws.rs.core.MediaType)
    {
        javax.ws.rs.core.MediaType r5;
        java.lang.reflect.Type r3;
        java.lang.Object r1;
        java.lang.Class r2;
        java.lang.'annotation'.Annotation[] r4;
        org.apache.cxf.jaxrs.provider.SourceProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.SourceProvider;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.reflect.Type;

        r4 := @parameter3: java.lang.'annotation'.Annotation[];

        r5 := @parameter4: javax.ws.rs.core.MediaType;

        return -1L;
    }

    protected java.lang.String getPreferredSource()
    {
        org.apache.cxf.jaxrs.ext.MessageContext $r1;
        java.lang.Object $r2;
        java.lang.String r3, $r4;
        org.apache.cxf.jaxrs.provider.SourceProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.SourceProvider;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.provider.SourceProvider: org.apache.cxf.jaxrs.ext.MessageContext getContext()>();

        r3 = null;

        if $r1 == null goto label1;

        $r2 = interfaceinvoke $r1.<org.apache.cxf.jaxrs.ext.MessageContext: java.lang.Object getContextualProperty(java.lang.Object)>("source-preferred-format");

        r3 = (java.lang.String) $r2;

     label1:
        if r3 == null goto label2;

        $r4 = r3;

        goto label3;

     label2:
        $r4 = "sax";

     label3:
        return $r4;
    }

    protected org.apache.cxf.jaxrs.ext.MessageContext getContext()
    {
        org.apache.cxf.jaxrs.provider.SourceProvider r0;
        org.apache.cxf.jaxrs.ext.MessageContext $r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.SourceProvider;

        $r1 = r0.<org.apache.cxf.jaxrs.provider.SourceProvider: org.apache.cxf.jaxrs.ext.MessageContext context>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.cxf.jaxrs.provider.SourceProvider: java.lang.String PREFERRED_FORMAT> = "source-preferred-format";

        return;
    }
}
