public class com.hp.hpl.jena.assembler.assemblers.ContentAssembler extends com.hp.hpl.jena.assembler.assemblers.AssemblerBase implements com.hp.hpl.jena.assembler.Assembler
{
    protected final com.hp.hpl.jena.util.FileManager defaultFileManager;
    public static final java.util.Set contentProperties;
    static final java.lang.String preamble;

    public void <init>()
    {
        com.hp.hpl.jena.assembler.assemblers.ContentAssembler r0;

        r0 := @this: com.hp.hpl.jena.assembler.assemblers.ContentAssembler;

        specialinvoke r0.<com.hp.hpl.jena.assembler.assemblers.ContentAssembler: void <init>(com.hp.hpl.jena.util.FileManager)>(null);

        return;
    }

    public void <init>(com.hp.hpl.jena.util.FileManager)
    {
        com.hp.hpl.jena.util.FileManager r1;
        com.hp.hpl.jena.assembler.assemblers.ContentAssembler r0;

        r0 := @this: com.hp.hpl.jena.assembler.assemblers.ContentAssembler;

        r1 := @parameter0: com.hp.hpl.jena.util.FileManager;

        specialinvoke r0.<com.hp.hpl.jena.assembler.assemblers.AssemblerBase: void <init>()>();

        r0.<com.hp.hpl.jena.assembler.assemblers.ContentAssembler: com.hp.hpl.jena.util.FileManager defaultFileManager> = r1;

        return;
    }

    public java.lang.Object open(com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource, com.hp.hpl.jena.assembler.Mode)
    {
        com.hp.hpl.jena.assembler.Assembler r5;
        com.hp.hpl.jena.assembler.assemblers.ContentAssembler r0;
        com.hp.hpl.jena.assembler.Mode r7;
        com.hp.hpl.jena.rdf.model.Resource r1, $r2;
        java.util.ArrayList $r4;
        java.util.List $r6;
        com.hp.hpl.jena.assembler.Content $r3;

        r0 := @this: com.hp.hpl.jena.assembler.assemblers.ContentAssembler;

        r5 := @parameter0: com.hp.hpl.jena.assembler.Assembler;

        r1 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        r7 := @parameter2: com.hp.hpl.jena.assembler.Mode;

        $r2 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Resource Content>;

        virtualinvoke r0.<com.hp.hpl.jena.assembler.assemblers.ContentAssembler: void checkType(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Resource)>(r1, $r2);

        $r3 = new com.hp.hpl.jena.assembler.Content;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.assembler.assemblers.ContentAssembler: java.util.List loadContent(java.util.List,com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.rdf.model.Resource)>($r4, r5, r1);

        specialinvoke $r3.<com.hp.hpl.jena.assembler.Content: void <init>(java.util.List)>($r6);

        return $r3;
    }

    public java.util.List loadContent(java.util.List, com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.assembler.Assembler r1;
        com.hp.hpl.jena.assembler.assemblers.ContentAssembler r0;
        java.util.List r4;
        com.hp.hpl.jena.util.FileManager $r3;
        com.hp.hpl.jena.rdf.model.Resource r2;

        r0 := @this: com.hp.hpl.jena.assembler.assemblers.ContentAssembler;

        r4 := @parameter0: java.util.List;

        r1 := @parameter1: com.hp.hpl.jena.assembler.Assembler;

        r2 := @parameter2: com.hp.hpl.jena.rdf.model.Resource;

        $r3 = specialinvoke r0.<com.hp.hpl.jena.assembler.assemblers.ContentAssembler: com.hp.hpl.jena.util.FileManager getFileManager(com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.rdf.model.Resource)>(r1, r2);

        staticinvoke <com.hp.hpl.jena.assembler.assemblers.ContentAssembler: void addLiteralContent(java.util.List,com.hp.hpl.jena.rdf.model.Resource)>(r4, r2);

        staticinvoke <com.hp.hpl.jena.assembler.assemblers.ContentAssembler: void addQuotedContent(java.util.List,com.hp.hpl.jena.rdf.model.Resource)>(r4, r2);

        virtualinvoke r0.<com.hp.hpl.jena.assembler.assemblers.ContentAssembler: void addExternalContents(java.util.List,com.hp.hpl.jena.util.FileManager,com.hp.hpl.jena.rdf.model.Resource)>(r4, $r3, r2);

        staticinvoke <com.hp.hpl.jena.assembler.assemblers.ContentAssembler: void addIndirectContent(java.util.List,com.hp.hpl.jena.assembler.Assembler,com.hp.hpl.jena.rdf.model.Resource)>(r4, r1, r2);

        return r4;
    }

    private static void addIndirectContent(java.util.List, com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.assembler.Assembler r4;
        com.hp.hpl.jena.rdf.model.Statement $r5;
        com.hp.hpl.jena.rdf.model.Resource r0, $r6;
        java.util.List r3;
        com.hp.hpl.jena.rdf.model.StmtIterator $r2;
        com.hp.hpl.jena.rdf.model.Property $r1;
        java.lang.Object $r7;
        com.hp.hpl.jena.assembler.Content $r8;
        boolean $z0;

        r3 := @parameter0: java.util.List;

        r4 := @parameter1: com.hp.hpl.jena.assembler.Assembler;

        r0 := @parameter2: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Property content>;

        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.StmtIterator listProperties(com.hp.hpl.jena.rdf.model.Property)>($r1);

     label1:
        $z0 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.rdf.model.Statement nextStatement()>();

        $r6 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.ContentAssembler: com.hp.hpl.jena.rdf.model.Resource getResource(com.hp.hpl.jena.rdf.model.Statement)>($r5);

        $r7 = interfaceinvoke r4.<com.hp.hpl.jena.assembler.Assembler: java.lang.Object open(com.hp.hpl.jena.rdf.model.Resource)>($r6);

        $r8 = (com.hp.hpl.jena.assembler.Content) $r7;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label1;

     label2:
        return;
    }

    protected void addExternalContents(java.util.List, com.hp.hpl.jena.util.FileManager, com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.assembler.assemblers.ContentAssembler r4;
        com.hp.hpl.jena.rdf.model.Statement $r6;
        com.hp.hpl.jena.rdf.model.Resource r0;
        java.util.List r3;
        com.hp.hpl.jena.rdf.model.StmtIterator $r2;
        com.hp.hpl.jena.rdf.model.Property $r1;
        com.hp.hpl.jena.util.FileManager r5;
        com.hp.hpl.jena.assembler.Content $r7;
        boolean $z0;

        r4 := @this: com.hp.hpl.jena.assembler.assemblers.ContentAssembler;

        r3 := @parameter0: java.util.List;

        r5 := @parameter1: com.hp.hpl.jena.util.FileManager;

        r0 := @parameter2: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Property externalContent>;

        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.StmtIterator listProperties(com.hp.hpl.jena.rdf.model.Property)>($r1);

     label1:
        $z0 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.rdf.model.Statement nextStatement()>();

        $r7 = virtualinvoke r4.<com.hp.hpl.jena.assembler.assemblers.ContentAssembler: com.hp.hpl.jena.assembler.Content objectAsContent(com.hp.hpl.jena.util.FileManager,com.hp.hpl.jena.rdf.model.Statement)>(r5, $r6);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label1;

     label2:
        return;
    }

    private static void addQuotedContent(java.util.List, com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Statement $r3;
        com.hp.hpl.jena.rdf.model.Resource r0, $r4;
        java.util.List r6;
        com.hp.hpl.jena.rdf.model.StmtIterator $r2;
        com.hp.hpl.jena.rdf.model.Property $r1;
        com.hp.hpl.jena.rdf.model.Model $r5;
        com.hp.hpl.jena.assembler.Content $r7;
        boolean $z0;

        r6 := @parameter0: java.util.List;

        r0 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Property quotedContent>;

        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.StmtIterator listProperties(com.hp.hpl.jena.rdf.model.Property)>($r1);

     label1:
        $z0 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.rdf.model.Statement nextStatement()>();

        $r4 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.ContentAssembler: com.hp.hpl.jena.rdf.model.Resource getResource(com.hp.hpl.jena.rdf.model.Statement)>($r3);

        $r5 = staticinvoke <com.hp.hpl.jena.util.ResourceUtils: com.hp.hpl.jena.rdf.model.Model reachableClosure(com.hp.hpl.jena.rdf.model.Resource)>($r4);

        $r7 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.ContentAssembler: com.hp.hpl.jena.assembler.Content newModelContent(com.hp.hpl.jena.rdf.model.Model)>($r5);

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label1;

     label2:
        return;
    }

    protected static void addLiteralContent(java.util.List, com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Statement $r4;
        com.hp.hpl.jena.rdf.model.Resource r0;
        java.util.List r7;
        com.hp.hpl.jena.rdf.model.StmtIterator $r3;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.rdf.model.Model $r6;
        java.lang.String $r1, $r5;
        com.hp.hpl.jena.assembler.Content $r8;
        boolean $z0;

        r7 := @parameter0: java.util.List;

        r0 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.ContentAssembler: java.lang.String getEncoding(com.hp.hpl.jena.rdf.model.Resource)>(r0);

        $r2 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Property literalContent>;

        $r3 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.StmtIterator listProperties(com.hp.hpl.jena.rdf.model.Property)>($r2);

     label1:
        $z0 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.StmtIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.StmtIterator: com.hp.hpl.jena.rdf.model.Statement nextStatement()>();

        $r5 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.ContentAssembler: java.lang.String getString(com.hp.hpl.jena.rdf.model.Statement)>($r4);

        $r6 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.ContentAssembler: com.hp.hpl.jena.rdf.model.Model parseAs(com.hp.hpl.jena.rdf.model.Resource,java.lang.String,java.lang.String)>(r0, $r1, $r5);

        $r8 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.ContentAssembler: com.hp.hpl.jena.assembler.Content newModelContent(com.hp.hpl.jena.rdf.model.Model)>($r6);

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label1;

     label2:
        return;
    }

    private static com.hp.hpl.jena.rdf.model.Model parseAs(com.hp.hpl.jena.rdf.model.Resource, java.lang.String, java.lang.String)
    {
        com.hp.hpl.jena.assembler.exceptions.UnknownEncodingException $r1;
        com.hp.hpl.jena.rdf.model.Resource r2;
        com.hp.hpl.jena.rdf.model.Model $r4, $r5;
        java.lang.String r0, r3, $r6;
        boolean $z0, $z1;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        r0 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        if r0 != null goto label1;

        $r6 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.ContentAssembler: java.lang.String guessFrom(java.lang.String)>(r3);

        goto label2;

     label1:
        $r6 = r0;

     label2:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("N3");

        if $z0 == 0 goto label3;

        $r5 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.ContentAssembler: com.hp.hpl.jena.rdf.model.Model parseAsN3(java.lang.String)>(r3);

        return $r5;

     label3:
        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("RDF/XML");

        if $z1 == 0 goto label4;

        $r4 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.ContentAssembler: com.hp.hpl.jena.rdf.model.Model parseAsXML(java.lang.String)>(r3);

        return $r4;

     label4:
        $r1 = new com.hp.hpl.jena.assembler.exceptions.UnknownEncodingException;

        specialinvoke $r1.<com.hp.hpl.jena.assembler.exceptions.UnknownEncodingException: void <init>(com.hp.hpl.jena.rdf.model.Resource,java.lang.String)>(r2, r0);

        throw $r1;
    }

    private static com.hp.hpl.jena.rdf.model.Model parseAsXML(java.lang.String)
    {
        java.io.StringReader $r0;
        com.hp.hpl.jena.rdf.model.Model $r7, $r8;
        java.lang.StringBuilder $r1, $r2, $r4, $r5;
        java.lang.String r3, $r6;

        r3 := @parameter0: java.lang.String;

        $r0 = new java.io.StringReader;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<?xml version=\'1.0\'?><rdf:RDF xmlns:rdf=\'http://www.w3.org/1999/02/22-rdf-syntax-ns#\' xmlns:rdfs=\'http://www.w3.org/2000/01/rdf-schema#\' xmlns:xsd=\'http://www.w3.org/2001/XMLSchema#\' xmlns:owl=\'http://www.w3.org/2002/07/owl#\' xmlns:dc=\'http://purl.org/dc/elements/1.1/\'>");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</rdf:RDF>");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.io.StringReader: void <init>(java.lang.String)>($r6);

        $r7 = staticinvoke <com.hp.hpl.jena.rdf.model.ModelFactory: com.hp.hpl.jena.rdf.model.Model createDefaultModel()>();

        $r8 = interfaceinvoke $r7.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model read(java.io.Reader,java.lang.String,java.lang.String)>($r0, "", "RDF/XML");

        return $r8;
    }

    private static java.lang.String guessFrom(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        return "N3";
    }

    private static java.lang.String getEncoding(com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.rdf.model.Property $r1;
        java.lang.String $r3;
        com.hp.hpl.jena.rdf.model.Literal $r2;
        com.hp.hpl.jena.rdf.model.Resource r0;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Property contentEncoding>;

        $r2 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.ContentAssembler: com.hp.hpl.jena.rdf.model.Literal getUniqueLiteral(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r0, $r1);

        if $r2 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Literal: java.lang.String getLexicalForm()>();

     label2:
        return $r3;
    }

    protected static com.hp.hpl.jena.assembler.Content newModelContent(com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.assembler.assemblers.ContentAssembler$1 $r0;
        com.hp.hpl.jena.rdf.model.Model r1;

        r1 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        $r0 = new com.hp.hpl.jena.assembler.assemblers.ContentAssembler$1;

        specialinvoke $r0.<com.hp.hpl.jena.assembler.assemblers.ContentAssembler$1: void <init>(com.hp.hpl.jena.rdf.model.Model)>(r1);

        return $r0;
    }

    protected com.hp.hpl.jena.assembler.Content objectAsContent(com.hp.hpl.jena.util.FileManager, com.hp.hpl.jena.rdf.model.Statement)
    {
        com.hp.hpl.jena.assembler.assemblers.ContentAssembler r1;
        com.hp.hpl.jena.util.FileManager r0;
        com.hp.hpl.jena.rdf.model.Model $r4;
        java.lang.String $r3;
        com.hp.hpl.jena.rdf.model.Statement r2;
        com.hp.hpl.jena.assembler.Content $r5;

        r1 := @this: com.hp.hpl.jena.assembler.assemblers.ContentAssembler;

        r0 := @parameter0: com.hp.hpl.jena.util.FileManager;

        r2 := @parameter1: com.hp.hpl.jena.rdf.model.Statement;

        $r3 = specialinvoke r1.<com.hp.hpl.jena.assembler.assemblers.ContentAssembler: java.lang.String getModelName(com.hp.hpl.jena.rdf.model.Statement)>(r2);

        $r4 = virtualinvoke r0.<com.hp.hpl.jena.util.FileManager: com.hp.hpl.jena.rdf.model.Model loadModel(java.lang.String)>($r3);

        $r5 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.ContentAssembler: com.hp.hpl.jena.assembler.Content newModelContent(com.hp.hpl.jena.rdf.model.Model)>($r4);

        return $r5;
    }

    private java.lang.String getModelName(com.hp.hpl.jena.rdf.model.Statement)
    {
        com.hp.hpl.jena.assembler.assemblers.ContentAssembler r3;
        com.hp.hpl.jena.rdf.model.RDFNode $r1;
        com.hp.hpl.jena.graph.Node $r2;
        java.lang.String $r4;
        com.hp.hpl.jena.rdf.model.Statement r0;
        boolean $z0;

        r3 := @this: com.hp.hpl.jena.assembler.assemblers.ContentAssembler;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Statement;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.RDFNode getObject()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.RDFNode: com.hp.hpl.jena.graph.Node asNode()>();

        $z0 = virtualinvoke $r2.<com.hp.hpl.jena.graph.Node: boolean isLiteral()>();

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke $r2.<com.hp.hpl.jena.graph.Node: java.lang.String getLiteralLexicalForm()>();

        goto label2;

     label1:
        $r4 = virtualinvoke $r2.<com.hp.hpl.jena.graph.Node: java.lang.String getURI()>();

     label2:
        return $r4;
    }

    private com.hp.hpl.jena.util.FileManager getFileManager(com.hp.hpl.jena.assembler.Assembler, com.hp.hpl.jena.rdf.model.Resource)
    {
        com.hp.hpl.jena.assembler.Assembler r5;
        com.hp.hpl.jena.assembler.assemblers.ContentAssembler r3;
        com.hp.hpl.jena.rdf.model.Resource r0, $r2;
        com.hp.hpl.jena.rdf.model.Property $r1;
        com.hp.hpl.jena.util.FileManager $r4, $r7;
        java.lang.Object $r6;

        r3 := @this: com.hp.hpl.jena.assembler.assemblers.ContentAssembler;

        r5 := @parameter0: com.hp.hpl.jena.assembler.Assembler;

        r0 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        $r1 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Property fileManager>;

        $r2 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.ContentAssembler: com.hp.hpl.jena.rdf.model.Resource getUniqueResource(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property)>(r0, $r1);

        if $r2 == null goto label1;

        $r6 = interfaceinvoke r5.<com.hp.hpl.jena.assembler.Assembler: java.lang.Object open(com.hp.hpl.jena.rdf.model.Resource)>($r2);

        $r7 = (com.hp.hpl.jena.util.FileManager) $r6;

        goto label3;

     label1:
        $r4 = r3.<com.hp.hpl.jena.assembler.assemblers.ContentAssembler: com.hp.hpl.jena.util.FileManager defaultFileManager>;

        if $r4 != null goto label2;

        $r7 = staticinvoke <com.hp.hpl.jena.util.FileManager: com.hp.hpl.jena.util.FileManager get()>();

        goto label3;

     label2:
        $r7 = r3.<com.hp.hpl.jena.assembler.assemblers.ContentAssembler: com.hp.hpl.jena.util.FileManager defaultFileManager>;

     label3:
        return $r7;
    }

    protected static com.hp.hpl.jena.rdf.model.Model parseAsN3(java.lang.String)
    {
        java.io.StringReader $r1;
        com.hp.hpl.jena.rdf.model.Model $r0;
        java.lang.StringBuilder $r2, $r4, $r5, $r7;
        java.lang.String $r3, r6, $r8;

        r6 := @parameter0: java.lang.String;

        $r0 = staticinvoke <com.hp.hpl.jena.rdf.model.ModelFactory: com.hp.hpl.jena.rdf.model.Model createDefaultModel()>();

        $r1 = new java.io.StringReader;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = <com.hp.hpl.jena.assembler.assemblers.ContentAssembler: java.lang.String preamble>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.StringReader: void <init>(java.lang.String)>($r8);

        interfaceinvoke $r0.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model read(java.io.Reader,java.lang.String,java.lang.String)>($r1, "", "N3");

        return $r0;
    }

    public java.lang.Object getFileManager()
    {
        com.hp.hpl.jena.util.FileManager $r1;
        com.hp.hpl.jena.assembler.assemblers.ContentAssembler r0;

        r0 := @this: com.hp.hpl.jena.assembler.assemblers.ContentAssembler;

        $r1 = r0.<com.hp.hpl.jena.assembler.assemblers.ContentAssembler: com.hp.hpl.jena.util.FileManager defaultFileManager>;

        return $r1;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.assembler.assemblers.ContentAssembler$HashSetWith $r0, $r2, $r4, $r6, $r8;
        com.hp.hpl.jena.rdf.model.Property $r1, $r3, $r5, $r7;
        java.lang.String $r11, $r15, $r19, $r24, $r27;
        java.lang.StringBuilder $r9, $r10, $r12, $r13, $r14, $r16, $r17, $r18, $r20, $r21, $r22, $r23, $r25, $r26;

        $r0 = new com.hp.hpl.jena.assembler.assemblers.ContentAssembler$HashSetWith;

        specialinvoke $r0.<com.hp.hpl.jena.assembler.assemblers.ContentAssembler$HashSetWith: void <init>()>();

        $r1 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Property content>;

        $r2 = virtualinvoke $r0.<com.hp.hpl.jena.assembler.assemblers.ContentAssembler$HashSetWith: com.hp.hpl.jena.assembler.assemblers.ContentAssembler$HashSetWith 'with'(java.lang.Object)>($r1);

        $r3 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Property literalContent>;

        $r4 = virtualinvoke $r2.<com.hp.hpl.jena.assembler.assemblers.ContentAssembler$HashSetWith: com.hp.hpl.jena.assembler.assemblers.ContentAssembler$HashSetWith 'with'(java.lang.Object)>($r3);

        $r5 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Property externalContent>;

        $r6 = virtualinvoke $r4.<com.hp.hpl.jena.assembler.assemblers.ContentAssembler$HashSetWith: com.hp.hpl.jena.assembler.assemblers.ContentAssembler$HashSetWith 'with'(java.lang.Object)>($r5);

        $r7 = <com.hp.hpl.jena.assembler.JA: com.hp.hpl.jena.rdf.model.Property quotedContent>;

        $r8 = virtualinvoke $r6.<com.hp.hpl.jena.assembler.assemblers.ContentAssembler$HashSetWith: com.hp.hpl.jena.assembler.assemblers.ContentAssembler$HashSetWith 'with'(java.lang.Object)>($r7);

        <com.hp.hpl.jena.assembler.assemblers.ContentAssembler: java.util.Set contentProperties> = $r8;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@prefix rdf: <");

        $r11 = staticinvoke <com.hp.hpl.jena.vocabulary.RDF: java.lang.String getURI()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> .");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n@prefix rdfs: <");

        $r15 = staticinvoke <com.hp.hpl.jena.vocabulary.RDFS: java.lang.String getURI()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> .");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n@prefix owl: <");

        $r19 = staticinvoke <com.hp.hpl.jena.vocabulary.OWL: java.lang.String getURI()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> .");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n@prefix dc: <");

        $r24 = staticinvoke <com.hp.hpl.jena.vocabulary.DC_11: java.lang.String getURI()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> .");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.hp.hpl.jena.assembler.assemblers.ContentAssembler: java.lang.String preamble> = $r27;

        return;
    }
}
