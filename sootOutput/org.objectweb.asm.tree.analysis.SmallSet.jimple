class org.objectweb.asm.tree.analysis.SmallSet extends java.util.AbstractSet implements java.util.Iterator
{
    java.lang.Object e1;
    java.lang.Object e2;

    static final java.util.Set emptySet()
    {
        org.objectweb.asm.tree.analysis.SmallSet $r0;

        $r0 = new org.objectweb.asm.tree.analysis.SmallSet;

        specialinvoke $r0.<org.objectweb.asm.tree.analysis.SmallSet: void <init>(java.lang.Object,java.lang.Object)>(null, null);

        return $r0;
    }

    void <init>(java.lang.Object, java.lang.Object)
    {
        org.objectweb.asm.tree.analysis.SmallSet r0;
        java.lang.Object r1, r2;

        r0 := @this: org.objectweb.asm.tree.analysis.SmallSet;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.util.AbstractSet: void <init>()>();

        r0.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e1> = r1;

        r0.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e2> = r2;

        return;
    }

    public java.util.Iterator iterator()
    {
        org.objectweb.asm.tree.analysis.SmallSet $r0, r1;
        java.lang.Object $r2, $r3;

        r1 := @this: org.objectweb.asm.tree.analysis.SmallSet;

        $r0 = new org.objectweb.asm.tree.analysis.SmallSet;

        $r3 = r1.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e1>;

        $r2 = r1.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e2>;

        specialinvoke $r0.<org.objectweb.asm.tree.analysis.SmallSet: void <init>(java.lang.Object,java.lang.Object)>($r3, $r2);

        return $r0;
    }

    public int size()
    {
        byte $b0;
        org.objectweb.asm.tree.analysis.SmallSet r0;
        java.lang.Object $r1, $r2;

        r0 := @this: org.objectweb.asm.tree.analysis.SmallSet;

        $r1 = r0.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e1>;

        if $r1 != null goto label1;

        $b0 = 0;

        goto label3;

     label1:
        $r2 = r0.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e2>;

        if $r2 != null goto label2;

        $b0 = 1;

        goto label3;

     label2:
        $b0 = 2;

     label3:
        return $b0;
    }

    public boolean hasNext()
    {
        org.objectweb.asm.tree.analysis.SmallSet r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: org.objectweb.asm.tree.analysis.SmallSet;

        $r1 = r0.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e1>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object next()
    {
        org.objectweb.asm.tree.analysis.SmallSet r0;
        java.lang.Object $r1, r2, $r3;
        java.util.NoSuchElementException $r4;

        r0 := @this: org.objectweb.asm.tree.analysis.SmallSet;

        $r1 = r0.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e1>;

        if $r1 != null goto label1;

        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>()>();

        throw $r4;

     label1:
        r2 = r0.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e1>;

        $r3 = r0.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e2>;

        r0.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e1> = $r3;

        r0.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e2> = null;

        return r2;
    }

    public void remove()
    {
        org.objectweb.asm.tree.analysis.SmallSet r0;

        r0 := @this: org.objectweb.asm.tree.analysis.SmallSet;

        return;
    }

    java.util.Set union(org.objectweb.asm.tree.analysis.SmallSet)
    {
        org.objectweb.asm.tree.analysis.SmallSet r0, r1, $r26;
        java.util.HashSet $r10;
        java.lang.Object $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r27, $r28, $r29, $r30, $r31, $r32;

        r1 := @this: org.objectweb.asm.tree.analysis.SmallSet;

        r0 := @parameter0: org.objectweb.asm.tree.analysis.SmallSet;

        $r3 = r0.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e1>;

        $r2 = r1.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e1>;

        if $r3 != $r2 goto label01;

        $r32 = r0.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e2>;

        $r31 = r1.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e2>;

        if $r32 == $r31 goto label02;

     label01:
        $r5 = r0.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e1>;

        $r4 = r1.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e2>;

        if $r5 != $r4 goto label03;

        $r30 = r0.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e2>;

        $r29 = r1.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e1>;

        if $r30 != $r29 goto label03;

     label02:
        return r1;

     label03:
        $r6 = r0.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e1>;

        if $r6 != null goto label04;

        return r1;

     label04:
        $r7 = r1.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e1>;

        if $r7 != null goto label05;

        return r0;

     label05:
        $r8 = r0.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e2>;

        if $r8 != null goto label08;

        $r21 = r1.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e2>;

        if $r21 != null goto label06;

        $r26 = new org.objectweb.asm.tree.analysis.SmallSet;

        $r28 = r1.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e1>;

        $r27 = r0.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e1>;

        specialinvoke $r26.<org.objectweb.asm.tree.analysis.SmallSet: void <init>(java.lang.Object,java.lang.Object)>($r28, $r27);

        return $r26;

     label06:
        $r23 = r0.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e1>;

        $r22 = r1.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e1>;

        if $r23 == $r22 goto label07;

        $r25 = r0.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e1>;

        $r24 = r1.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e2>;

        if $r25 != $r24 goto label08;

     label07:
        return r1;

     label08:
        $r9 = r1.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e2>;

        if $r9 != null goto label10;

        $r18 = r1.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e1>;

        $r17 = r0.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e1>;

        if $r18 == $r17 goto label09;

        $r20 = r1.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e1>;

        $r19 = r0.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e2>;

        if $r20 != $r19 goto label10;

     label09:
        return r0;

     label10:
        $r10 = new java.util.HashSet;

        specialinvoke $r10.<java.util.HashSet: void <init>(int)>(4);

        $r11 = r1.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e1>;

        virtualinvoke $r10.<java.util.HashSet: boolean add(java.lang.Object)>($r11);

        $r12 = r1.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e2>;

        if $r12 == null goto label11;

        $r16 = r1.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e2>;

        virtualinvoke $r10.<java.util.HashSet: boolean add(java.lang.Object)>($r16);

     label11:
        $r13 = r0.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e1>;

        virtualinvoke $r10.<java.util.HashSet: boolean add(java.lang.Object)>($r13);

        $r14 = r0.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e2>;

        if $r14 == null goto label12;

        $r15 = r0.<org.objectweb.asm.tree.analysis.SmallSet: java.lang.Object e2>;

        virtualinvoke $r10.<java.util.HashSet: boolean add(java.lang.Object)>($r15);

     label12:
        return $r10;
    }
}
