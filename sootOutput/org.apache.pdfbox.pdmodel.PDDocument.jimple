public class org.apache.pdfbox.pdmodel.PDDocument extends java.lang.Object implements java.awt.print.Pageable, java.io.Closeable
{
    private org.apache.pdfbox.cos.COSDocument document;
    private org.apache.pdfbox.pdmodel.PDDocumentInformation documentInformation;
    private org.apache.pdfbox.pdmodel.PDDocumentCatalog documentCatalog;
    private org.apache.pdfbox.pdmodel.encryption.PDEncryptionDictionary encParameters;
    private org.apache.pdfbox.pdmodel.encryption.SecurityHandler securityHandler;
    private java.util.Map pageMap;
    private boolean allSecurityToBeRemoved;
    private java.lang.Long documentId;
    private org.apache.pdfbox.pdfparser.BaseParser parser;

    public void <init>()
    {
        org.apache.pdfbox.cos.COSArray $r14;
        org.apache.pdfbox.cos.COSInteger $r16;
        org.apache.pdfbox.cos.COSName $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r15, $r17;
        org.apache.pdfbox.cos.COSDocument $r1, $r3;
        org.apache.pdfbox.pdmodel.PDDocument r0;
        org.apache.pdfbox.cos.COSDictionary $r2, $r4, $r10;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.encryption.PDEncryptionDictionary encParameters> = null;

        r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.encryption.SecurityHandler securityHandler> = null;

        r0.<org.apache.pdfbox.pdmodel.PDDocument: java.util.Map pageMap> = null;

        r0.<org.apache.pdfbox.pdmodel.PDDocument: boolean allSecurityToBeRemoved> = 0;

        $r1 = new org.apache.pdfbox.cos.COSDocument;

        specialinvoke $r1.<org.apache.pdfbox.cos.COSDocument: void <init>()>();

        r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document> = $r1;

        $r2 = new org.apache.pdfbox.cos.COSDictionary;

        specialinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void <init>()>();

        $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document>;

        virtualinvoke $r3.<org.apache.pdfbox.cos.COSDocument: void setTrailer(org.apache.pdfbox.cos.COSDictionary)>($r2);

        $r4 = new org.apache.pdfbox.cos.COSDictionary;

        specialinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: void <init>()>();

        $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ROOT>;

        virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r5, $r4);

        $r7 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE>;

        $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CATALOG>;

        virtualinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r7, $r6);

        $r8 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName VERSION>;

        $r9 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>("1.4");

        virtualinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r8, $r9);

        $r10 = new org.apache.pdfbox.cos.COSDictionary;

        specialinvoke $r10.<org.apache.pdfbox.cos.COSDictionary: void <init>()>();

        $r11 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PAGES>;

        virtualinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r11, $r10);

        $r13 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE>;

        $r12 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PAGES>;

        virtualinvoke $r10.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r13, $r12);

        $r14 = new org.apache.pdfbox.cos.COSArray;

        specialinvoke $r14.<org.apache.pdfbox.cos.COSArray: void <init>()>();

        $r15 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName KIDS>;

        virtualinvoke $r10.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r15, $r14);

        $r17 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COUNT>;

        $r16 = <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger ZERO>;

        virtualinvoke $r10.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r17, $r16);

        return;
    }

    private void generatePageMap()
    {
        org.apache.pdfbox.pdmodel.PDDocumentCatalog $r2;
        org.apache.pdfbox.pdmodel.PDPageNode $r3;
        java.util.List $r4;
        org.apache.pdfbox.pdmodel.PDDocument r0;
        java.util.HashMap $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.pdfbox.pdmodel.PDDocument: java.util.Map pageMap> = $r1;

        $r2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>();

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDPageNode getPages()>();

        $r4 = virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDPageNode: java.util.List getKids()>();

        specialinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: void processListOfPageReferences(java.util.List)>($r4);

        return;
    }

    private void processListOfPageReferences(java.util.List)
    {
        org.apache.pdfbox.cos.COSArray $r9;
        org.apache.pdfbox.cos.COSObject $r11;
        org.apache.pdfbox.pdmodel.common.COSArrayList $r8;
        int $i0, i1;
        boolean $z0, $z1;
        org.apache.pdfbox.pdmodel.PDPageNode $r3, $r6;
        org.apache.pdfbox.pdmodel.PDDocument r2;
        java.util.List r0, $r4, $r7;
        org.apache.pdfbox.cos.COSBase $r10;
        java.lang.Object $r1;
        org.apache.pdfbox.pdmodel.PDPage $r5;

        r2 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label4;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        $z0 = $r1 instanceof org.apache.pdfbox.pdmodel.PDPage;

        if $z0 == 0 goto label2;

        $r5 = (org.apache.pdfbox.pdmodel.PDPage) $r1;

        $r6 = virtualinvoke $r5.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.PDPageNode getParent()>();

        $r7 = virtualinvoke $r6.<org.apache.pdfbox.pdmodel.PDPageNode: java.util.List getKids()>();

        $r8 = (org.apache.pdfbox.pdmodel.common.COSArrayList) $r7;

        $r9 = virtualinvoke $r8.<org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray toList()>();

        $r10 = virtualinvoke $r9.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(i1);

        $r11 = (org.apache.pdfbox.cos.COSObject) $r10;

        specialinvoke r2.<org.apache.pdfbox.pdmodel.PDDocument: void parseCatalogObject(org.apache.pdfbox.cos.COSObject)>($r11);

        goto label3;

     label2:
        $z1 = $r1 instanceof org.apache.pdfbox.pdmodel.PDPageNode;

        if $z1 == 0 goto label3;

        $r3 = (org.apache.pdfbox.pdmodel.PDPageNode) $r1;

        $r4 = virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDPageNode: java.util.List getKids()>();

        specialinvoke r2.<org.apache.pdfbox.pdmodel.PDDocument: void processListOfPageReferences(java.util.List)>($r4);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    private void parseCatalogObject(org.apache.pdfbox.cos.COSObject)
    {
        java.lang.Integer $r39, $r41;
        java.util.Map $r10, $r17, $r26, $r33;
        boolean $z0, $z1, $z2;
        org.apache.pdfbox.pdmodel.PDDocument r9;
        org.apache.pdfbox.cos.COSBase $r2, $r4, $r18, $r20;
        java.lang.StringBuilder $r12, $r13, $r14, $r28, $r29, $r30, $r38, $r40;
        org.apache.pdfbox.cos.COSArray $r34, r36, r37;
        org.apache.pdfbox.cos.COSObject r0, $r19, r21;
        org.apache.pdfbox.cos.COSInteger $r5, $r7, $r22, $r24, $r35;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13, $i15, $i17, $i19, $i21;
        java.lang.String $r6, $r8, $r15, $r23, $r25, $r31;
        org.apache.pdfbox.cos.COSName $r1, $r3;

        r9 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        r0 := @parameter0: org.apache.pdfbox.cos.COSObject;

        $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName COUNT>;

        $r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName)>($r1);

        $i15 = (int) -1;

        i10 = $i15;

        $z0 = $r2 instanceof org.apache.pdfbox.cos.COSInteger;

        if $z0 == 0 goto label01;

        $r35 = (org.apache.pdfbox.cos.COSInteger) $r2;

        i10 = virtualinvoke $r35.<org.apache.pdfbox.cos.COSInteger: int intValue()>();

     label01:
        $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName KIDS>;

        $r4 = virtualinvoke r0.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName)>($r3);

        $i17 = (int) -1;

        i11 = $i17;

        $z1 = $r4 instanceof org.apache.pdfbox.cos.COSArray;

        if $z1 == 0 goto label02;

        $r34 = (org.apache.pdfbox.cos.COSArray) $r4;

        i11 = virtualinvoke $r34.<org.apache.pdfbox.cos.COSArray: int size()>();

     label02:
        $i19 = (int) -1;

        if i10 == $i19 goto label03;

        $i21 = (int) -1;

        if i11 != $i21 goto label04;

     label03:
        $r5 = virtualinvoke r0.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSInteger getObjectNumber()>();

        $i0 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSInteger: int intValue()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        $r7 = virtualinvoke r0.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSInteger getGenerationNumber()>();

        $i1 = virtualinvoke $r7.<org.apache.pdfbox.cos.COSInteger: int intValue()>();

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        $r10 = virtualinvoke r9.<org.apache.pdfbox.pdmodel.PDDocument: java.util.Map getPageMap()>();

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r39 = new java.lang.Integer;

        $r17 = virtualinvoke r9.<org.apache.pdfbox.pdmodel.PDDocument: java.util.Map getPageMap()>();

        $i2 = interfaceinvoke $r17.<java.util.Map: int size()>();

        $i3 = $i2 + 1;

        specialinvoke $r39.<java.lang.Integer: void <init>(int)>($i3);

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r39);

        goto label10;

     label04:
        if i10 != i11 goto label07;

        r36 = (org.apache.pdfbox.cos.COSArray) $r4;

        i12 = 0;

     label05:
        $i5 = virtualinvoke r36.<org.apache.pdfbox.cos.COSArray: int size()>();

        if i12 >= $i5 goto label06;

        $r20 = virtualinvoke r36.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(i12);

        r21 = (org.apache.pdfbox.cos.COSObject) $r20;

        $r22 = virtualinvoke r21.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSInteger getObjectNumber()>();

        $i6 = virtualinvoke $r22.<org.apache.pdfbox.cos.COSInteger: int intValue()>();

        $r23 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i6);

        $r24 = virtualinvoke r21.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSInteger getGenerationNumber()>();

        $i7 = virtualinvoke $r24.<org.apache.pdfbox.cos.COSInteger: int intValue()>();

        $r25 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i7);

        $r26 = virtualinvoke r9.<org.apache.pdfbox.pdmodel.PDDocument: java.util.Map getPageMap()>();

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        $r41 = new java.lang.Integer;

        $r33 = virtualinvoke r9.<org.apache.pdfbox.pdmodel.PDDocument: java.util.Map getPageMap()>();

        $i8 = interfaceinvoke $r33.<java.util.Map: int size()>();

        $i9 = $i8 + 1;

        specialinvoke $r41.<java.lang.Integer: void <init>(int)>($i9);

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r31, $r41);

        i12 = i12 + 1;

        goto label05;

     label06:
        goto label10;

     label07:
        r37 = null;

        $z2 = $r4 instanceof org.apache.pdfbox.cos.COSArray;

        if $z2 == 0 goto label08;

        r37 = (org.apache.pdfbox.cos.COSArray) $r4;

     label08:
        if r37 == null goto label10;

        i13 = 0;

     label09:
        $i4 = virtualinvoke r37.<org.apache.pdfbox.cos.COSArray: int size()>();

        if i13 >= $i4 goto label10;

        $r18 = virtualinvoke r37.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(i13);

        $r19 = (org.apache.pdfbox.cos.COSObject) $r18;

        specialinvoke r9.<org.apache.pdfbox.pdmodel.PDDocument: void parseCatalogObject(org.apache.pdfbox.cos.COSObject)>($r19);

        i13 = i13 + 1;

        goto label09;

     label10:
        return;
    }

    public final java.util.Map getPageMap()
    {
        org.apache.pdfbox.pdmodel.PDDocument r0;
        java.util.Map $r1, $r2;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        $r1 = r0.<org.apache.pdfbox.pdmodel.PDDocument: java.util.Map pageMap>;

        if $r1 != null goto label1;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: void generatePageMap()>();

     label1:
        $r2 = r0.<org.apache.pdfbox.pdmodel.PDDocument: java.util.Map pageMap>;

        return $r2;
    }

    public void addPage(org.apache.pdfbox.pdmodel.PDPage)
    {
        org.apache.pdfbox.pdmodel.PDDocumentCatalog $r1;
        org.apache.pdfbox.pdmodel.PDPageNode $r2;
        java.util.List $r3;
        org.apache.pdfbox.pdmodel.PDDocument r0;
        org.apache.pdfbox.pdmodel.PDPage r4;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        r4 := @parameter0: org.apache.pdfbox.pdmodel.PDPage;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>();

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDPageNode getPages()>();

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.pdmodel.PDPageNode: java.util.List getKids()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r4);

        virtualinvoke r4.<org.apache.pdfbox.pdmodel.PDPage: void setParent(org.apache.pdfbox.pdmodel.PDPageNode)>($r2);

        virtualinvoke $r2.<org.apache.pdfbox.pdmodel.PDPageNode: long updateCount()>();

        return;
    }

    public void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature, org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface) throws java.io.IOException, org.apache.pdfbox.exceptions.SignatureException
    {
        org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions $r0;
        org.apache.pdfbox.pdmodel.PDDocument r1;
        org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface r3;
        org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature r2;

        r1 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        r2 := @parameter0: org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature;

        r3 := @parameter1: org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface;

        $r0 = new org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions;

        specialinvoke $r0.<org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions: void <init>()>();

        virtualinvoke $r0.<org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions: void setPage(int)>(1);

        virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDDocument: void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)>(r2, r3, $r0);

        return;
    }

    public void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature, org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface, org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions) throws java.io.IOException, org.apache.pdfbox.exceptions.SignatureException
    {
        byte[] $r2, $r87;
        org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream $r62;
        org.apache.pdfbox.pdmodel.PDDocument r4;
        org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget $r23, $r47, $r55, $r56, $r69, $r76;
        org.apache.pdfbox.cos.COSBase $r11, $r31, $r34, $r37, $r40, $r44, $r49, $r53, $r63, $r72, $r73, $r74, $r91, $r101;
        long $l1;
        org.apache.pdfbox.cos.COSDocument $r5, $r19, $r60;
        int[] $r3;
        org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary $r42, $r59;
        org.apache.pdfbox.cos.COSDictionary $r16, $r33, $r36, $r39, $r45, $r46, $r68, $r80, $r81, r97, r98, r100;
        org.apache.pdfbox.cos.COSArray $r25, $r27, r99;
        org.apache.pdfbox.cos.COSObject r30;
        org.apache.pdfbox.pdmodel.common.COSArrayList $r24, $r26, $r28;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7;
        org.apache.pdfbox.cos.COSStream $r61;
        org.apache.pdfbox.cos.COSName $r17, $r32, $r35, $r38, $r41, $r43, $r48, $r50, $r51, $r52, $r58, $r64, $r65, $r67;
        org.apache.pdfbox.pdmodel.PDPageNode $r8;
        java.lang.Object $r10, $r29, $r70, $r77, $r84, $r85;
        org.apache.pdfbox.pdmodel.interactive.form.PDField r95, r96;
        org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField $r71, $r75, $r78, r94;
        org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions r0;
        org.apache.pdfbox.pdmodel.PDPage r88;
        java.util.ArrayList $r9, $r82;
        org.apache.pdfbox.pdmodel.PDDocumentCatalog $r7;
        org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature r1, $r79;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, z12, $z13, z14, z15, z16, z17, z18, z19, z20, z21, z22, z23;
        org.apache.pdfbox.exceptions.SignatureException $r22, $r86;
        java.util.List $r12, $r13, $r15, $r20, r92, r93;
        java.util.Iterator $r14, $r18, $r21;
        org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface r6;
        org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm $r83, $r89, r90;
        org.apache.pdfbox.pdmodel.common.PDRectangle $r54, $r57, $r66;

        r4 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature;

        r6 := @parameter1: org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface;

        r0 := @parameter2: org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions;

        $i0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions: int getPreferedSignatureSize()>();

        if $i0 <= 0 goto label01;

        $r87 = newarray (byte)[$i0];

        virtualinvoke r1.<org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature: void setContents(byte[])>($r87);

        goto label02;

     label01:
        $r2 = newarray (byte)[9472];

        virtualinvoke r1.<org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature: void setContents(byte[])>($r2);

     label02:
        $r3 = newarray (int)[4];

        $r3[0] = 0;

        $r3[1] = 1000000000;

        $r3[2] = 1000000000;

        $r3[3] = 1000000000;

        virtualinvoke r1.<org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature: void setByteRange(int[])>($r3);

        $r5 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>();

        virtualinvoke $r5.<org.apache.pdfbox.cos.COSDocument: void setSignatureInterface(org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)>(r6);

        $r7 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>();

        $r8 = virtualinvoke $r7.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDPageNode getPages()>();

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        virtualinvoke $r8.<org.apache.pdfbox.pdmodel.PDPageNode: void getAllKids(java.util.List)>($r9);

        $l1 = virtualinvoke $r8.<org.apache.pdfbox.pdmodel.PDPageNode: long getCount()>();

        $i7 = (int) $l1;

        if $i7 != 0 goto label03;

        $r86 = new org.apache.pdfbox.exceptions.SignatureException;

        specialinvoke $r86.<org.apache.pdfbox.exceptions.SignatureException: void <init>(int,java.lang.String)>(5, "The PDF file has no pages");

        throw $r86;

     label03:
        $i2 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions: int getPage()>();

        if $i2 <= $i7 goto label04;

        $i6 = $i7 - 1;

        $r85 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i6);

        r88 = (org.apache.pdfbox.pdmodel.PDPage) $r85;

        goto label06;

     label04:
        $i3 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions: int getPage()>();

        if $i3 > 0 goto label05;

        $r84 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0);

        r88 = (org.apache.pdfbox.pdmodel.PDPage) $r84;

        goto label06;

     label05:
        $i4 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions: int getPage()>();

        $i5 = $i4 - 1;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i5);

        r88 = (org.apache.pdfbox.pdmodel.PDPage) $r10;

     label06:
        $r89 = virtualinvoke $r7.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm getAcroForm()>();

        r90 = $r89;

        $r91 = virtualinvoke $r7.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSBase getCOSObject()>();

        virtualinvoke $r91.<org.apache.pdfbox.cos.COSBase: void setNeedToBeUpdate(boolean)>(1);

        if $r89 != null goto label07;

        $r83 = new org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm;

        specialinvoke $r83.<org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm: void <init>(org.apache.pdfbox.pdmodel.PDDocument)>(r4);

        r90 = $r83;

        virtualinvoke $r7.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: void setAcroForm(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)>($r83);

        goto label08;

     label07:
        $r11 = virtualinvoke $r89.<org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm: org.apache.pdfbox.cos.COSBase getCOSObject()>();

        virtualinvoke $r11.<org.apache.pdfbox.cos.COSBase: void setNeedToBeUpdate(boolean)>(1);

     label08:
        $r12 = virtualinvoke r88.<org.apache.pdfbox.pdmodel.PDPage: java.util.List getAnnotations()>();

        r92 = $r12;

        $r13 = virtualinvoke r90.<org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm: java.util.List getFields()>();

        r93 = $r13;

        r94 = null;

        if $r13 != null goto label09;

        $r82 = new java.util.ArrayList;

        specialinvoke $r82.<java.util.ArrayList: void <init>()>();

        r93 = $r82;

        virtualinvoke r90.<org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm: void setFields(java.util.List)>($r82);

     label09:
        $r14 = interfaceinvoke r93.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z11 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label12;

        $r77 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r95 = (org.apache.pdfbox.pdmodel.interactive.form.PDField) $r77;

        $z9 = r95 instanceof org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField;

        if $z9 == 0 goto label11;

        $r78 = (org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField) r95;

        $r79 = virtualinvoke $r78.<org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField: org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature getSignature()>();

        if $r79 == null goto label11;

        $r80 = virtualinvoke $r79.<org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature: org.apache.pdfbox.cos.COSDictionary getDictionary()>();

        $r81 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature: org.apache.pdfbox.cos.COSDictionary getDictionary()>();

        $z10 = virtualinvoke $r80.<java.lang.Object: boolean equals(java.lang.Object)>($r81);

        if $z10 == 0 goto label11;

        r94 = (org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField) r95;

     label11:
        goto label10;

     label12:
        if r94 != null goto label13;

        $r75 = new org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField;

        specialinvoke $r75.<org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField: void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)>(r90);

        r94 = $r75;

        virtualinvoke $r75.<org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField: void setSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature)>(r1);

        $r76 = virtualinvoke $r75.<org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget getWidget()>();

        virtualinvoke $r76.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget: void setPage(org.apache.pdfbox.pdmodel.PDPage)>(r88);

     label13:
        $r15 = virtualinvoke r90.<org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm: java.util.List getFields()>();

        $r16 = virtualinvoke r90.<org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm: org.apache.pdfbox.cos.COSDictionary getDictionary()>();

        virtualinvoke $r16.<org.apache.pdfbox.cos.COSDictionary: void setDirect(boolean)>(1);

        $r17 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SIG_FLAGS>;

        virtualinvoke $r16.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r17, 3);

        z12 = 0;

        z23 = 0;

        z22 = 0;

        $r18 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $z13 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label16;

        $r70 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r96 = (org.apache.pdfbox.pdmodel.interactive.form.PDField) $r70;

        $z7 = r96 instanceof org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField;

        if $z7 == 0 goto label15;

        $r71 = (org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField) r96;

        $r72 = virtualinvoke $r71.<org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField: org.apache.pdfbox.cos.COSBase getCOSObject()>();

        $r73 = virtualinvoke r94.<org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField: org.apache.pdfbox.cos.COSBase getCOSObject()>();

        $z8 = virtualinvoke $r72.<java.lang.Object: boolean equals(java.lang.Object)>($r73);

        if $z8 == 0 goto label15;

        z12 = 1;

        z23 = 1;

        z22 = 1;

        $r74 = virtualinvoke r94.<org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField: org.apache.pdfbox.cos.COSBase getCOSObject()>();

        virtualinvoke $r74.<org.apache.pdfbox.cos.COSBase: void setNeedToBeUpdate(boolean)>(1);

        goto label16;

     label15:
        goto label14;

     label16:
        if z22 != 0 goto label17;

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(r94);

     label17:
        $r19 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions: org.apache.pdfbox.cos.COSDocument getVisualSignature()>();

        if $r19 != null goto label18;

        $r56 = virtualinvoke r94.<org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget getWidget()>();

        $r57 = new org.apache.pdfbox.pdmodel.common.PDRectangle;

        specialinvoke $r57.<org.apache.pdfbox.pdmodel.common.PDRectangle: void <init>()>();

        virtualinvoke $r56.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget: void setRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle)>($r57);

        $r58 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DR>;

        virtualinvoke $r16.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r58, null);

        $r59 = new org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary;

        specialinvoke $r59.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary: void <init>()>();

        $r60 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>();

        $r61 = virtualinvoke $r60.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSStream createCOSStream()>();

        virtualinvoke $r61.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createUnfilteredStream()>();

        $r62 = new org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream;

        specialinvoke $r62.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream: void <init>(org.apache.pdfbox.cos.COSStream)>($r61);

        $r63 = virtualinvoke $r62.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream: org.apache.pdfbox.cos.COSBase getCOSObject()>();

        r97 = (org.apache.pdfbox.cos.COSDictionary) $r63;

        $r65 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SUBTYPE>;

        $r64 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FORM>;

        virtualinvoke r97.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r65, $r64);

        $r67 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BBOX>;

        $r66 = new org.apache.pdfbox.pdmodel.common.PDRectangle;

        specialinvoke $r66.<org.apache.pdfbox.pdmodel.common.PDRectangle: void <init>()>();

        virtualinvoke r97.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)>($r67, $r66);

        virtualinvoke $r59.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary: void setNormalAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)>($r62);

        $r68 = virtualinvoke $r59.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary: org.apache.pdfbox.cos.COSDictionary getDictionary()>();

        virtualinvoke $r68.<org.apache.pdfbox.cos.COSDictionary: void setDirect(boolean)>(1);

        $r69 = virtualinvoke r94.<org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget getWidget()>();

        virtualinvoke $r69.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget: void setAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary)>($r59);

        goto label25;

     label18:
        $r20 = virtualinvoke $r19.<org.apache.pdfbox.cos.COSDocument: java.util.List getObjects()>();

        z14 = 1;

        z18 = 1;

        z17 = 1;

        z16 = 1;

        z15 = 1;

        z21 = 1;

        z20 = 1;

        z19 = 1;

        $r21 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();

     label19:
        $z0 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label23;

        $r29 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r30 = (org.apache.pdfbox.cos.COSObject) $r29;

        if z16 != 0 goto label20;

        if z19 != 0 goto label20;

        goto label23;

     label20:
        $r31 = virtualinvoke r30.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase getObject()>();

        if $r31 == null goto label22;

        $z4 = $r31 instanceof org.apache.pdfbox.cos.COSDictionary;

        if $z4 == 0 goto label22;

        $r33 = (org.apache.pdfbox.cos.COSDictionary) $r31;

        $r32 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FT>;

        $r34 = virtualinvoke $r33.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName)>($r32);

        $r36 = (org.apache.pdfbox.cos.COSDictionary) $r31;

        $r35 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE>;

        $r37 = virtualinvoke $r36.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName)>($r35);

        $r39 = (org.apache.pdfbox.cos.COSDictionary) $r31;

        $r38 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName AP>;

        $r40 = virtualinvoke $r39.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName)>($r38);

        if z18 == 0 goto label21;

        $r51 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ANNOT>;

        $z6 = virtualinvoke $r51.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r37);

        if $z6 == 0 goto label21;

        r98 = (org.apache.pdfbox.cos.COSDictionary) $r31;

        $r52 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RECT>;

        $r53 = virtualinvoke r98.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName)>($r52);

        r99 = (org.apache.pdfbox.cos.COSArray) $r53;

        $r54 = new org.apache.pdfbox.pdmodel.common.PDRectangle;

        specialinvoke $r54.<org.apache.pdfbox.pdmodel.common.PDRectangle: void <init>(org.apache.pdfbox.cos.COSArray)>(r99);

        $r55 = virtualinvoke r94.<org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget getWidget()>();

        virtualinvoke $r55.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget: void setRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle)>($r54);

        z14 = 0;

        z18 = 0;

        z17 = 0;

        z16 = 0;

     label21:
        if z21 == 0 goto label22;

        $r41 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SIG>;

        $z5 = virtualinvoke $r41.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r34);

        if $z5 == 0 goto label22;

        if $r40 == null goto label22;

        r100 = (org.apache.pdfbox.cos.COSDictionary) $r31;

        $r42 = new org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary;

        $r43 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName AP>;

        $r44 = virtualinvoke r100.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName)>($r43);

        $r45 = (org.apache.pdfbox.cos.COSDictionary) $r44;

        specialinvoke $r42.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary: void <init>(org.apache.pdfbox.cos.COSDictionary)>($r45);

        $r46 = virtualinvoke $r42.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary: org.apache.pdfbox.cos.COSDictionary getDictionary()>();

        virtualinvoke $r46.<org.apache.pdfbox.cos.COSDictionary: void setDirect(boolean)>(1);

        $r47 = virtualinvoke r94.<org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget getWidget()>();

        virtualinvoke $r47.<org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget: void setAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceDictionary)>($r42);

        $r48 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DR>;

        $r49 = virtualinvoke r100.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getItem(org.apache.pdfbox.cos.COSName)>($r48);

        virtualinvoke $r49.<org.apache.pdfbox.cos.COSBase: void setDirect(boolean)>(1);

        virtualinvoke $r49.<org.apache.pdfbox.cos.COSBase: void setNeedToBeUpdate(boolean)>(1);

        $r50 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DR>;

        virtualinvoke $r16.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r50, $r49);

        z15 = 0;

        z21 = 0;

        z20 = 0;

        z19 = 0;

     label22:
        goto label19;

     label23:
        if z17 != 0 goto label24;

        if z20 == 0 goto label25;

     label24:
        $r22 = new org.apache.pdfbox.exceptions.SignatureException;

        specialinvoke $r22.<org.apache.pdfbox.exceptions.SignatureException: void <init>(int,java.lang.String)>(6, "Could not read all needed objects from template");

        throw $r22;

     label25:
        if $r12 != null goto label26;

        $r28 = new org.apache.pdfbox.pdmodel.common.COSArrayList;

        specialinvoke $r28.<org.apache.pdfbox.pdmodel.common.COSArrayList: void <init>()>();

        r92 = $r28;

        virtualinvoke r88.<org.apache.pdfbox.pdmodel.PDPage: void setAnnotations(java.util.List)>($r28);

     label26:
        $z1 = r92 instanceof org.apache.pdfbox.pdmodel.common.COSArrayList;

        if $z1 == 0 goto label27;

        $z2 = $r15 instanceof org.apache.pdfbox.pdmodel.common.COSArrayList;

        if $z2 == 0 goto label27;

        $r24 = (org.apache.pdfbox.pdmodel.common.COSArrayList) r92;

        $r25 = virtualinvoke $r24.<org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray toList()>();

        $r26 = (org.apache.pdfbox.pdmodel.common.COSArrayList) $r15;

        $r27 = virtualinvoke $r26.<org.apache.pdfbox.pdmodel.common.COSArrayList: org.apache.pdfbox.cos.COSArray toList()>();

        $z3 = virtualinvoke $r25.<java.lang.Object: boolean equals(java.lang.Object)>($r27);

        if $z3 != 0 goto label28;

     label27:
        if z23 != 0 goto label28;

        $r23 = virtualinvoke r94.<org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField: org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget getWidget()>();

        interfaceinvoke r92.<java.util.List: boolean add(java.lang.Object)>($r23);

     label28:
        $r101 = virtualinvoke r88.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSBase getCOSObject()>();

        virtualinvoke $r101.<org.apache.pdfbox.cos.COSBase: void setNeedToBeUpdate(boolean)>(1);

        return;
    }

    public void addSignatureField(java.util.List, org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface, org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions) throws java.io.IOException, org.apache.pdfbox.exceptions.SignatureException
    {
        org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature $r14, $r17;
        org.apache.pdfbox.pdmodel.interactive.form.PDField r20;
        org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField r11, $r21;
        org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions r16;
        boolean $z0, $z1, $z2, $z3, z4;
        org.apache.pdfbox.pdmodel.PDDocument r0;
        org.apache.pdfbox.cos.COSDictionary $r5;
        java.util.List $r7, r8;
        org.apache.pdfbox.cos.COSBase $r2, $r4, $r12, $r15, $r22, $r23, $r24;
        int $i0;
        org.apache.pdfbox.pdmodel.PDDocumentCatalog $r1;
        org.apache.pdfbox.cos.COSName $r6, $r25;
        java.util.Iterator $r9, $r13;
        org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface r18;
        org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm $r3, $r26, r27;
        java.lang.Object $r10, $r19;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        r8 := @parameter0: java.util.List;

        r18 := @parameter1: org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface;

        r16 := @parameter2: org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>();

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.cos.COSBase getCOSObject()>();

        virtualinvoke $r2.<org.apache.pdfbox.cos.COSBase: void setNeedToBeUpdate(boolean)>(1);

        $r3 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm getAcroForm()>();

        r27 = $r3;

        if $r3 != null goto label01;

        $r26 = new org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm;

        specialinvoke $r26.<org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm: void <init>(org.apache.pdfbox.pdmodel.PDDocument)>(r0);

        r27 = $r26;

        virtualinvoke $r1.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: void setAcroForm(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)>($r26);

        goto label02;

     label01:
        $r4 = virtualinvoke $r3.<org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm: org.apache.pdfbox.cos.COSBase getCOSObject()>();

        virtualinvoke $r4.<org.apache.pdfbox.cos.COSBase: void setNeedToBeUpdate(boolean)>(1);

     label02:
        $r5 = virtualinvoke r27.<org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm: org.apache.pdfbox.cos.COSDictionary getDictionary()>();

        virtualinvoke $r5.<org.apache.pdfbox.cos.COSDictionary: void setDirect(boolean)>(1);

        virtualinvoke $r5.<org.apache.pdfbox.cos.COSDictionary: void setNeedToBeUpdate(boolean)>(1);

        $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SIG_FLAGS>;

        $i0 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSDictionary: int getInt(org.apache.pdfbox.cos.COSName)>($r6);

        if $i0 >= 1 goto label03;

        $r25 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SIG_FLAGS>;

        virtualinvoke $r5.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r25, 1);

     label03:
        $r7 = virtualinvoke r27.<org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm: java.util.List getFields()>();

        $r9 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z3 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label11;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField) $r10;

        virtualinvoke r11.<org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField: org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature getSignature()>();

        $r12 = virtualinvoke r11.<org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField: org.apache.pdfbox.cos.COSBase getCOSObject()>();

        virtualinvoke $r12.<org.apache.pdfbox.cos.COSBase: void setNeedToBeUpdate(boolean)>(1);

        z4 = 0;

        $r13 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r19 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r20 = (org.apache.pdfbox.pdmodel.interactive.form.PDField) $r19;

        $z1 = r20 instanceof org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField;

        if $z1 == 0 goto label06;

        $r21 = (org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField) r20;

        $r22 = virtualinvoke $r21.<org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField: org.apache.pdfbox.cos.COSBase getCOSObject()>();

        $r23 = virtualinvoke r11.<org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField: org.apache.pdfbox.cos.COSBase getCOSObject()>();

        $z2 = virtualinvoke $r22.<java.lang.Object: boolean equals(java.lang.Object)>($r23);

        if $z2 == 0 goto label06;

        z4 = 1;

        $r24 = virtualinvoke r11.<org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField: org.apache.pdfbox.cos.COSBase getCOSObject()>();

        virtualinvoke $r24.<org.apache.pdfbox.cos.COSBase: void setNeedToBeUpdate(boolean)>(1);

        goto label07;

     label06:
        goto label05;

     label07:
        if z4 != 0 goto label08;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r11);

     label08:
        $r14 = virtualinvoke r11.<org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField: org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature getSignature()>();

        if $r14 == null goto label10;

        $r15 = virtualinvoke r11.<org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField: org.apache.pdfbox.cos.COSBase getCOSObject()>();

        virtualinvoke $r15.<org.apache.pdfbox.cos.COSBase: void setNeedToBeUpdate(boolean)>(1);

        if r16 != null goto label09;

     label09:
        $r17 = virtualinvoke r11.<org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField: org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature getSignature()>();

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)>($r17, r18, r16);

     label10:
        goto label04;

     label11:
        return;
    }

    public boolean removePage(org.apache.pdfbox.pdmodel.PDPage)
    {
        org.apache.pdfbox.pdmodel.PDDocumentCatalog $r4;
        org.apache.pdfbox.pdmodel.PDPageNode $r1, $r5;
        java.util.List $r2;
        org.apache.pdfbox.pdmodel.PDDocument r3;
        org.apache.pdfbox.pdmodel.PDPage r0;
        boolean $z0;

        r3 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        r0 := @parameter0: org.apache.pdfbox.pdmodel.PDPage;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.PDPageNode getParent()>();

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.PDPageNode: java.util.List getKids()>();

        $z0 = interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>();

        $r5 = virtualinvoke $r4.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDPageNode getPages()>();

        virtualinvoke $r5.<org.apache.pdfbox.pdmodel.PDPageNode: long updateCount()>();

     label1:
        return $z0;
    }

    public boolean removePage(int)
    {
        org.apache.pdfbox.pdmodel.PDDocumentCatalog $r1;
        org.apache.pdfbox.pdmodel.PDDocument r0;
        java.util.List $r2;
        int $i0, i1;
        java.lang.Object $r3;
        org.apache.pdfbox.pdmodel.PDPage r4;
        boolean z0;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        i1 := @parameter0: int;

        z0 = 0;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>();

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: java.util.List getAllPages()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 <= i1 goto label1;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (org.apache.pdfbox.pdmodel.PDPage) $r3;

        z0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: boolean removePage(org.apache.pdfbox.pdmodel.PDPage)>(r4);

     label1:
        return z0;
    }

    public org.apache.pdfbox.pdmodel.PDPage importPage(org.apache.pdfbox.pdmodel.PDPage) throws java.io.IOException
    {
        java.lang.Throwable $r12;
        byte[] r10;
        int $i0, $i2;
        org.apache.pdfbox.cos.COSStream $r8;
        java.io.OutputStream $r9, r14;
        org.apache.pdfbox.cos.COSDocument $r7;
        org.apache.pdfbox.pdmodel.PDDocument r5;
        org.apache.pdfbox.pdmodel.common.PDStream $r4, $r17;
        org.apache.pdfbox.cos.COSDictionary $r3, $r15;
        org.apache.pdfbox.pdmodel.PDPage r2, $r16;
        java.io.InputStream $r11, r13;

        r5 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        r2 := @parameter0: org.apache.pdfbox.pdmodel.PDPage;

        $r16 = new org.apache.pdfbox.pdmodel.PDPage;

        $r15 = new org.apache.pdfbox.cos.COSDictionary;

        $r3 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        specialinvoke $r15.<org.apache.pdfbox.cos.COSDictionary: void <init>(org.apache.pdfbox.cos.COSDictionary)>($r3);

        specialinvoke $r16.<org.apache.pdfbox.pdmodel.PDPage: void <init>(org.apache.pdfbox.cos.COSDictionary)>($r15);

        r13 = null;

        r14 = null;

     label01:
        $r4 = virtualinvoke r2.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.common.PDStream getContents()>();

        if $r4 == null goto label03;

        $r17 = new org.apache.pdfbox.pdmodel.common.PDStream;

        $r7 = r5.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document>;

        $r8 = virtualinvoke $r7.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSStream createCOSStream()>();

        specialinvoke $r17.<org.apache.pdfbox.pdmodel.common.PDStream: void <init>(org.apache.pdfbox.cos.COSStream)>($r8);

        virtualinvoke $r16.<org.apache.pdfbox.pdmodel.PDPage: void setContents(org.apache.pdfbox.pdmodel.common.PDStream)>($r17);

        $r9 = virtualinvoke $r17.<org.apache.pdfbox.pdmodel.common.PDStream: java.io.OutputStream createOutputStream()>();

        r14 = $r9;

        r10 = newarray (byte)[10240];

        $r11 = virtualinvoke $r4.<org.apache.pdfbox.pdmodel.common.PDStream: java.io.InputStream createInputStream()>();

        r13 = $r11;

     label02:
        $i0 = virtualinvoke $r11.<java.io.InputStream: int read(byte[],int,int)>(r10, 0, 10240);

        $i2 = (int) -1;

        if $i0 <= $i2 goto label03;

        virtualinvoke $r9.<java.io.OutputStream: void write(byte[],int,int)>(r10, 0, $i0);

        goto label02;

     label03:
        virtualinvoke r5.<org.apache.pdfbox.pdmodel.PDDocument: void addPage(org.apache.pdfbox.pdmodel.PDPage)>($r16);

     label04:
        if r13 == null goto label05;

        virtualinvoke r13.<java.io.InputStream: void close()>();

     label05:
        if r14 == null goto label10;

        virtualinvoke r14.<java.io.OutputStream: void close()>();

        goto label10;

     label06:
        $r12 := @caughtexception;

     label07:
        if r13 == null goto label08;

        virtualinvoke r13.<java.io.InputStream: void close()>();

     label08:
        if r14 == null goto label09;

        virtualinvoke r14.<java.io.OutputStream: void close()>();

     label09:
        throw $r12;

     label10:
        return $r16;

        catch java.lang.Throwable from label01 to label04 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
    }

    public void <init>(org.apache.pdfbox.cos.COSDocument)
    {
        org.apache.pdfbox.cos.COSDocument r1;
        org.apache.pdfbox.pdmodel.PDDocument r0;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        r1 := @parameter0: org.apache.pdfbox.cos.COSDocument;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: void <init>(org.apache.pdfbox.cos.COSDocument,org.apache.pdfbox.pdfparser.BaseParser)>(r1, null);

        return;
    }

    public void <init>(org.apache.pdfbox.cos.COSDocument, org.apache.pdfbox.pdfparser.BaseParser)
    {
        org.apache.pdfbox.pdfparser.BaseParser r2;
        org.apache.pdfbox.cos.COSDocument r1;
        org.apache.pdfbox.pdmodel.PDDocument r0;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        r1 := @parameter0: org.apache.pdfbox.cos.COSDocument;

        r2 := @parameter1: org.apache.pdfbox.pdfparser.BaseParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.encryption.PDEncryptionDictionary encParameters> = null;

        r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.encryption.SecurityHandler securityHandler> = null;

        r0.<org.apache.pdfbox.pdmodel.PDDocument: java.util.Map pageMap> = null;

        r0.<org.apache.pdfbox.pdmodel.PDDocument: boolean allSecurityToBeRemoved> = 0;

        r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document> = r1;

        r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdfparser.BaseParser parser> = r2;

        return;
    }

    public org.apache.pdfbox.cos.COSDocument getDocument()
    {
        org.apache.pdfbox.cos.COSDocument $r1;
        org.apache.pdfbox.pdmodel.PDDocument r0;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        $r1 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document>;

        return $r1;
    }

    public org.apache.pdfbox.pdmodel.PDDocumentInformation getDocumentInformation()
    {
        org.apache.pdfbox.cos.COSName $r4, $r8;
        org.apache.pdfbox.pdmodel.PDDocumentInformation $r1, $r6, $r10;
        org.apache.pdfbox.cos.COSDocument $r2;
        org.apache.pdfbox.pdmodel.PDDocument r0;
        org.apache.pdfbox.cos.COSDictionary $r3, $r7, r9;
        org.apache.pdfbox.cos.COSBase $r5;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        $r1 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentInformation documentInformation>;

        if $r1 != null goto label2;

        $r2 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document>;

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary getTrailer()>();

        $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName INFO>;

        $r5 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r4);

        r9 = (org.apache.pdfbox.cos.COSDictionary) $r5;

        if r9 != null goto label1;

        $r7 = new org.apache.pdfbox.cos.COSDictionary;

        specialinvoke $r7.<org.apache.pdfbox.cos.COSDictionary: void <init>()>();

        r9 = $r7;

        $r8 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName INFO>;

        virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r8, $r7);

     label1:
        $r6 = new org.apache.pdfbox.pdmodel.PDDocumentInformation;

        specialinvoke $r6.<org.apache.pdfbox.pdmodel.PDDocumentInformation: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r9);

        r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentInformation documentInformation> = $r6;

     label2:
        $r10 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentInformation documentInformation>;

        return $r10;
    }

    public void setDocumentInformation(org.apache.pdfbox.pdmodel.PDDocumentInformation)
    {
        org.apache.pdfbox.cos.COSDictionary $r3, $r5;
        org.apache.pdfbox.cos.COSName $r4;
        org.apache.pdfbox.pdmodel.PDDocumentInformation r1;
        org.apache.pdfbox.cos.COSDocument $r2;
        org.apache.pdfbox.pdmodel.PDDocument r0;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.PDDocumentInformation;

        r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentInformation documentInformation> = r1;

        $r2 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document>;

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary getTrailer()>();

        $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName INFO>;

        $r5 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDDocumentInformation: org.apache.pdfbox.cos.COSDictionary getDictionary()>();

        virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r4, $r5);

        return;
    }

    public org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()
    {
        org.apache.pdfbox.pdmodel.PDDocumentCatalog $r1, $r6, $r7, $r9;
        org.apache.pdfbox.cos.COSName $r4;
        org.apache.pdfbox.cos.COSDocument $r2;
        org.apache.pdfbox.pdmodel.PDDocument r0;
        org.apache.pdfbox.cos.COSDictionary $r3, $r8;
        org.apache.pdfbox.cos.COSBase $r5;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        $r1 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog documentCatalog>;

        if $r1 != null goto label2;

        $r2 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document>;

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary getTrailer()>();

        $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName ROOT>;

        $r5 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r4);

        $z0 = $r5 instanceof org.apache.pdfbox.cos.COSDictionary;

        if $z0 == 0 goto label1;

        $r7 = new org.apache.pdfbox.pdmodel.PDDocumentCatalog;

        $r8 = (org.apache.pdfbox.cos.COSDictionary) $r5;

        specialinvoke $r7.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary)>(r0, $r8);

        r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog documentCatalog> = $r7;

        goto label2;

     label1:
        $r6 = new org.apache.pdfbox.pdmodel.PDDocumentCatalog;

        specialinvoke $r6.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: void <init>(org.apache.pdfbox.pdmodel.PDDocument)>(r0);

        r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog documentCatalog> = $r6;

     label2:
        $r9 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog documentCatalog>;

        return $r9;
    }

    public boolean isEncrypted()
    {
        org.apache.pdfbox.cos.COSDocument $r1;
        org.apache.pdfbox.pdmodel.PDDocument r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        $r1 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document>;

        $z0 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDocument: boolean isEncrypted()>();

        return $z0;
    }

    public org.apache.pdfbox.pdmodel.encryption.PDEncryptionDictionary getEncryptionDictionary() throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSDictionary $r4;
        org.apache.pdfbox.cos.COSDocument $r3;
        org.apache.pdfbox.pdmodel.PDDocument r0;
        org.apache.pdfbox.pdmodel.encryption.PDEncryptionDictionary $r1, $r2, $r5;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        $r1 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.encryption.PDEncryptionDictionary encParameters>;

        if $r1 != null goto label1;

        $z0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: boolean isEncrypted()>();

        if $z0 == 0 goto label1;

        $r2 = new org.apache.pdfbox.pdmodel.encryption.PDEncryptionDictionary;

        $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document>;

        $r4 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSDictionary getEncryptionDictionary()>();

        specialinvoke $r2.<org.apache.pdfbox.pdmodel.encryption.PDEncryptionDictionary: void <init>(org.apache.pdfbox.cos.COSDictionary)>($r4);

        r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.encryption.PDEncryptionDictionary encParameters> = $r2;

     label1:
        $r5 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.encryption.PDEncryptionDictionary encParameters>;

        return $r5;
    }

    public void setEncryptionDictionary(org.apache.pdfbox.pdmodel.encryption.PDEncryptionDictionary) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.PDDocument r0;
        org.apache.pdfbox.pdmodel.encryption.PDEncryptionDictionary r1;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.encryption.PDEncryptionDictionary;

        r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.encryption.PDEncryptionDictionary encParameters> = r1;

        return;
    }

    public org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature getSignatureDictionary() throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature $r1;
        org.apache.pdfbox.pdmodel.PDDocument r0;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature getLastSignatureDictionary()>();

        return $r1;
    }

    public org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature getLastSignatureDictionary() throws java.io.IOException
    {
        java.util.List $r1;
        org.apache.pdfbox.pdmodel.PDDocument r0;
        int $i0, $i1;
        java.lang.Object $r2;
        org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature $r3;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: java.util.List getSignatureDictionaries()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        $i1 = $i0 - 1;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r3 = (org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature) $r2;

        return $r3;

     label1:
        return null;
    }

    public java.util.List getSignatureFields() throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.PDDocumentCatalog $r2;
        org.apache.pdfbox.cos.COSDocument $r4;
        java.util.Iterator $r6;
        org.apache.pdfbox.pdmodel.PDDocument r1;
        org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm $r3;
        org.apache.pdfbox.cos.COSDictionary r8;
        org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField $r9;
        java.util.List $r5;
        java.lang.Object $r7;
        java.util.LinkedList $r0;
        boolean $z0;

        r1 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>();

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm getAcroForm()>();

        if $r3 == null goto label2;

        $r4 = r1.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document>;

        $r5 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSDocument: java.util.List getSignatureFields(boolean)>(0);

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.pdfbox.cos.COSDictionary) $r7;

        $r9 = new org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField;

        specialinvoke $r9.<org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField: void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary)>($r3, r8);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r9);

        goto label1;

     label2:
        return $r0;
    }

    public java.util.List getSignatureDictionaries() throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSDocument $r1;
        java.util.Iterator $r4;
        org.apache.pdfbox.pdmodel.PDDocument r0;
        org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature $r7;
        org.apache.pdfbox.cos.COSDictionary r6;
        java.util.List $r2;
        java.lang.Object $r5;
        java.util.LinkedList $r3;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        $r1 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document>;

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.cos.COSDocument: java.util.List getSignatureDictionaries()>();

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        $r4 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.pdfbox.cos.COSDictionary) $r5;

        $r7 = new org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature;

        specialinvoke $r7.<org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r6);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label1;

     label2:
        return $r3;
    }

    public boolean isUserPassword(java.lang.String) throws java.io.IOException, org.apache.pdfbox.exceptions.CryptographyException
    {
        java.lang.String r1;
        org.apache.pdfbox.pdmodel.PDDocument r0;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        r1 := @parameter0: java.lang.String;

        return 0;
    }

    public boolean isOwnerPassword(java.lang.String) throws java.io.IOException, org.apache.pdfbox.exceptions.CryptographyException
    {
        java.lang.String r1;
        org.apache.pdfbox.pdmodel.PDDocument r0;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        r1 := @parameter0: java.lang.String;

        return 0;
    }

    public void decrypt(java.lang.String) throws org.apache.pdfbox.exceptions.CryptographyException, java.io.IOException
    {
        org.apache.pdfbox.pdmodel.encryption.StandardDecryptionMaterial $r0;
        org.apache.pdfbox.cos.COSDocument $r3;
        org.apache.pdfbox.pdmodel.PDDocument r2;
        org.apache.pdfbox.exceptions.CryptographyException $r5;
        java.lang.String r1;
        org.apache.pdfbox.pdmodel.encryption.BadSecurityHandlerException $r4;

        r2 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        r1 := @parameter0: java.lang.String;

     label1:
        $r0 = new org.apache.pdfbox.pdmodel.encryption.StandardDecryptionMaterial;

        specialinvoke $r0.<org.apache.pdfbox.pdmodel.encryption.StandardDecryptionMaterial: void <init>(java.lang.String)>(r1);

        virtualinvoke r2.<org.apache.pdfbox.pdmodel.PDDocument: void openProtection(org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)>($r0);

        $r3 = r2.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document>;

        virtualinvoke $r3.<org.apache.pdfbox.cos.COSDocument: void dereferenceObjectStreams()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.apache.pdfbox.exceptions.CryptographyException;

        specialinvoke $r5.<org.apache.pdfbox.exceptions.CryptographyException: void <init>(java.lang.Exception)>($r4);

        throw $r5;

     label4:
        return;

        catch org.apache.pdfbox.pdmodel.encryption.BadSecurityHandlerException from label1 to label2 with label3;
    }

    public boolean wasDecryptedWithOwnerPassword()
    {
        org.apache.pdfbox.pdmodel.PDDocument r0;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        return 0;
    }

    public void encrypt(java.lang.String, java.lang.String) throws org.apache.pdfbox.exceptions.CryptographyException, java.io.IOException
    {
        org.apache.pdfbox.pdmodel.encryption.AccessPermission $r3;
        org.apache.pdfbox.pdmodel.PDDocument r4;
        org.apache.pdfbox.exceptions.CryptographyException $r6;
        java.lang.String r1, r2;
        org.apache.pdfbox.pdmodel.encryption.StandardProtectionPolicy $r0;
        org.apache.pdfbox.pdmodel.encryption.BadSecurityHandlerException $r5;

        r4 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

     label1:
        $r0 = new org.apache.pdfbox.pdmodel.encryption.StandardProtectionPolicy;

        $r3 = new org.apache.pdfbox.pdmodel.encryption.AccessPermission;

        specialinvoke $r3.<org.apache.pdfbox.pdmodel.encryption.AccessPermission: void <init>()>();

        specialinvoke $r0.<org.apache.pdfbox.pdmodel.encryption.StandardProtectionPolicy: void <init>(java.lang.String,java.lang.String,org.apache.pdfbox.pdmodel.encryption.AccessPermission)>(r1, r2, $r3);

        virtualinvoke r4.<org.apache.pdfbox.pdmodel.PDDocument: void protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)>($r0);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new org.apache.pdfbox.exceptions.CryptographyException;

        specialinvoke $r6.<org.apache.pdfbox.exceptions.CryptographyException: void <init>(java.lang.Exception)>($r5);

        throw $r6;

     label4:
        return;

        catch org.apache.pdfbox.pdmodel.encryption.BadSecurityHandlerException from label1 to label2 with label3;
    }

    public java.lang.String getOwnerPasswordForEncryption()
    {
        org.apache.pdfbox.pdmodel.PDDocument r0;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        return null;
    }

    public java.lang.String getUserPasswordForEncryption()
    {
        org.apache.pdfbox.pdmodel.PDDocument r0;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        return null;
    }

    public boolean willEncryptWhenSaving()
    {
        org.apache.pdfbox.pdmodel.PDDocument r0;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        return 0;
    }

    public void clearWillEncryptWhenSaving()
    {
        org.apache.pdfbox.pdmodel.PDDocument r0;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        return;
    }

    public static org.apache.pdfbox.pdmodel.PDDocument load(java.net.URL) throws java.io.IOException
    {
        java.net.URL r0;
        org.apache.pdfbox.pdmodel.PDDocument $r2;
        java.io.InputStream $r1;

        r0 := @parameter0: java.net.URL;

        $r1 = virtualinvoke r0.<java.net.URL: java.io.InputStream openStream()>();

        $r2 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream)>($r1);

        return $r2;
    }

    public static org.apache.pdfbox.pdmodel.PDDocument load(java.net.URL, boolean) throws java.io.IOException
    {
        java.net.URL r0;
        org.apache.pdfbox.pdmodel.PDDocument $r2;
        java.io.InputStream $r1;
        boolean z0;

        r0 := @parameter0: java.net.URL;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<java.net.URL: java.io.InputStream openStream()>();

        $r2 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,boolean)>($r1, z0);

        return $r2;
    }

    public static org.apache.pdfbox.pdmodel.PDDocument load(java.net.URL, org.apache.pdfbox.io.RandomAccess) throws java.io.IOException
    {
        java.net.URL r0;
        org.apache.pdfbox.pdmodel.PDDocument $r3;
        org.apache.pdfbox.io.RandomAccess r2;
        java.io.InputStream $r1;

        r0 := @parameter0: java.net.URL;

        r2 := @parameter1: org.apache.pdfbox.io.RandomAccess;

        $r1 = virtualinvoke r0.<java.net.URL: java.io.InputStream openStream()>();

        $r3 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,org.apache.pdfbox.io.RandomAccess)>($r1, r2);

        return $r3;
    }

    public static org.apache.pdfbox.pdmodel.PDDocument load(java.lang.String) throws java.io.IOException
    {
        java.io.FileInputStream $r0;
        java.lang.String r1;
        org.apache.pdfbox.pdmodel.PDDocument $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.io.FileInputStream;

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.lang.String)>(r1);

        $r2 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream)>($r0);

        return $r2;
    }

    public static org.apache.pdfbox.pdmodel.PDDocument load(java.lang.String, boolean) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.PDDocument $r2;
        java.io.FileInputStream $r0;
        java.lang.String r1;
        boolean z0;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r0 = new java.io.FileInputStream;

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.lang.String)>(r1);

        $r2 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,boolean)>($r0, z0);

        return $r2;
    }

    public static org.apache.pdfbox.pdmodel.PDDocument load(java.lang.String, org.apache.pdfbox.io.RandomAccess) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.PDDocument $r3;
        org.apache.pdfbox.io.RandomAccess r2;
        java.io.FileInputStream $r0;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.pdfbox.io.RandomAccess;

        $r0 = new java.io.FileInputStream;

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.lang.String)>(r1);

        $r3 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,org.apache.pdfbox.io.RandomAccess)>($r0, r2);

        return $r3;
    }

    public static org.apache.pdfbox.pdmodel.PDDocument load(java.io.File) throws java.io.IOException
    {
        java.io.FileInputStream $r0;
        java.io.File r1;
        org.apache.pdfbox.pdmodel.PDDocument $r2;

        r1 := @parameter0: java.io.File;

        $r0 = new java.io.FileInputStream;

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.io.File)>(r1);

        $r2 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream)>($r0);

        return $r2;
    }

    public static org.apache.pdfbox.pdmodel.PDDocument load(java.io.File, org.apache.pdfbox.io.RandomAccess) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.PDDocument $r3;
        org.apache.pdfbox.io.RandomAccess r2;
        java.io.FileInputStream $r0;
        java.io.File r1;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: org.apache.pdfbox.io.RandomAccess;

        $r0 = new java.io.FileInputStream;

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.io.File)>(r1);

        $r3 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,org.apache.pdfbox.io.RandomAccess)>($r0, r2);

        return $r3;
    }

    public static org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.PDDocument $r1;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,org.apache.pdfbox.io.RandomAccess)>(r0, null);

        return $r1;
    }

    public static org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream, boolean) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.PDDocument $r1;
        java.io.InputStream r0;
        boolean z0;

        r0 := @parameter0: java.io.InputStream;

        z0 := @parameter1: boolean;

        $r1 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,org.apache.pdfbox.io.RandomAccess,boolean)>(r0, null, z0);

        return $r1;
    }

    public static org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream, org.apache.pdfbox.io.RandomAccess) throws java.io.IOException
    {
        java.io.BufferedInputStream $r1;
        org.apache.pdfbox.pdmodel.PDDocument $r4;
        org.apache.pdfbox.io.RandomAccess r3;
        org.apache.pdfbox.pdfparser.PDFParser $r0;
        java.io.InputStream r2;

        r2 := @parameter0: java.io.InputStream;

        r3 := @parameter1: org.apache.pdfbox.io.RandomAccess;

        $r0 = new org.apache.pdfbox.pdfparser.PDFParser;

        $r1 = new java.io.BufferedInputStream;

        specialinvoke $r1.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r2);

        specialinvoke $r0.<org.apache.pdfbox.pdfparser.PDFParser: void <init>(java.io.InputStream,org.apache.pdfbox.io.RandomAccess)>($r1, r3);

        virtualinvoke $r0.<org.apache.pdfbox.pdfparser.PDFParser: void parse()>();

        $r4 = virtualinvoke $r0.<org.apache.pdfbox.pdfparser.PDFParser: org.apache.pdfbox.pdmodel.PDDocument getPDDocument()>();

        return $r4;
    }

    public static org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream, org.apache.pdfbox.io.RandomAccess, boolean) throws java.io.IOException
    {
        java.io.BufferedInputStream $r1;
        org.apache.pdfbox.pdmodel.PDDocument $r4;
        org.apache.pdfbox.io.RandomAccess r3;
        org.apache.pdfbox.pdfparser.PDFParser $r0;
        java.io.InputStream r2;
        boolean z0;

        r2 := @parameter0: java.io.InputStream;

        r3 := @parameter1: org.apache.pdfbox.io.RandomAccess;

        z0 := @parameter2: boolean;

        $r0 = new org.apache.pdfbox.pdfparser.PDFParser;

        $r1 = new java.io.BufferedInputStream;

        specialinvoke $r1.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r2);

        specialinvoke $r0.<org.apache.pdfbox.pdfparser.PDFParser: void <init>(java.io.InputStream,org.apache.pdfbox.io.RandomAccess,boolean)>($r1, r3, z0);

        virtualinvoke $r0.<org.apache.pdfbox.pdfparser.PDFParser: void parse()>();

        $r4 = virtualinvoke $r0.<org.apache.pdfbox.pdfparser.PDFParser: org.apache.pdfbox.pdmodel.PDDocument getPDDocument()>();

        return $r4;
    }

    public static org.apache.pdfbox.pdmodel.PDDocument loadNonSeq(java.io.File, org.apache.pdfbox.io.RandomAccess) throws java.io.IOException
    {
        org.apache.pdfbox.io.RandomAccess r1;
        java.io.File r0;
        org.apache.pdfbox.pdmodel.PDDocument $r2;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: org.apache.pdfbox.io.RandomAccess;

        $r2 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument loadNonSeq(java.io.File,org.apache.pdfbox.io.RandomAccess,java.lang.String)>(r0, r1, "");

        return $r2;
    }

    public static org.apache.pdfbox.pdmodel.PDDocument loadNonSeq(java.io.File, org.apache.pdfbox.io.RandomAccess, java.lang.String) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.PDDocument $r4;
        org.apache.pdfbox.io.RandomAccess r2;
        org.apache.pdfbox.pdfparser.NonSequentialPDFParser $r0;
        java.lang.String r3;
        java.io.File r1;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: org.apache.pdfbox.io.RandomAccess;

        r3 := @parameter2: java.lang.String;

        $r0 = new org.apache.pdfbox.pdfparser.NonSequentialPDFParser;

        specialinvoke $r0.<org.apache.pdfbox.pdfparser.NonSequentialPDFParser: void <init>(java.io.File,org.apache.pdfbox.io.RandomAccess,java.lang.String)>(r1, r2, r3);

        virtualinvoke $r0.<org.apache.pdfbox.pdfparser.NonSequentialPDFParser: void parse()>();

        $r4 = virtualinvoke $r0.<org.apache.pdfbox.pdfparser.NonSequentialPDFParser: org.apache.pdfbox.pdmodel.PDDocument getPDDocument()>();

        return $r4;
    }

    public static org.apache.pdfbox.pdmodel.PDDocument loadNonSeq(java.io.InputStream, org.apache.pdfbox.io.RandomAccess) throws java.io.IOException
    {
        org.apache.pdfbox.io.RandomAccess r1;
        org.apache.pdfbox.pdmodel.PDDocument $r2;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: org.apache.pdfbox.io.RandomAccess;

        $r2 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument loadNonSeq(java.io.InputStream,org.apache.pdfbox.io.RandomAccess,java.lang.String)>(r0, r1, "");

        return $r2;
    }

    public static org.apache.pdfbox.pdmodel.PDDocument loadNonSeq(java.io.InputStream, org.apache.pdfbox.io.RandomAccess, java.lang.String) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.PDDocument $r4;
        org.apache.pdfbox.io.RandomAccess r2;
        org.apache.pdfbox.pdfparser.NonSequentialPDFParser $r0;
        java.lang.String r3;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: org.apache.pdfbox.io.RandomAccess;

        r3 := @parameter2: java.lang.String;

        $r0 = new org.apache.pdfbox.pdfparser.NonSequentialPDFParser;

        specialinvoke $r0.<org.apache.pdfbox.pdfparser.NonSequentialPDFParser: void <init>(java.io.InputStream,org.apache.pdfbox.io.RandomAccess,java.lang.String)>(r1, r2, r3);

        virtualinvoke $r0.<org.apache.pdfbox.pdfparser.NonSequentialPDFParser: void parse()>();

        $r4 = virtualinvoke $r0.<org.apache.pdfbox.pdfparser.NonSequentialPDFParser: org.apache.pdfbox.pdmodel.PDDocument getPDDocument()>();

        return $r4;
    }

    public void save(java.lang.String) throws java.io.IOException, org.apache.pdfbox.exceptions.COSVisitorException
    {
        java.lang.String r2;
        org.apache.pdfbox.pdmodel.PDDocument r0;
        java.io.File $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        r2 := @parameter0: java.lang.String;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(r2);

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: void save(java.io.File)>($r1);

        return;
    }

    public void save(java.io.File) throws java.io.IOException, org.apache.pdfbox.exceptions.COSVisitorException
    {
        java.io.FileOutputStream $r1;
        org.apache.pdfbox.pdmodel.PDDocument r0;
        java.io.File r2;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        r2 := @parameter0: java.io.File;

        $r1 = new java.io.FileOutputStream;

        specialinvoke $r1.<java.io.FileOutputStream: void <init>(java.io.File)>(r2);

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: void save(java.io.OutputStream)>($r1);

        return;
    }

    public void save(java.io.OutputStream) throws java.io.IOException, org.apache.pdfbox.exceptions.COSVisitorException
    {
        org.apache.pdfbox.pdmodel.PDDocumentCatalog $r1;
        org.apache.pdfbox.pdfwriter.COSWriter $r3, r6;
        java.io.OutputStream r4;
        java.lang.Throwable $r5;
        org.apache.pdfbox.pdmodel.PDPageNode $r2;
        org.apache.pdfbox.pdmodel.PDDocument r0;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        r4 := @parameter0: java.io.OutputStream;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>();

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDPageNode getPages()>();

        virtualinvoke $r2.<org.apache.pdfbox.pdmodel.PDPageNode: long updateCount()>();

        r6 = null;

     label1:
        $r3 = new org.apache.pdfbox.pdfwriter.COSWriter;

        specialinvoke $r3.<org.apache.pdfbox.pdfwriter.COSWriter: void <init>(java.io.OutputStream)>(r4);

        r6 = $r3;

        virtualinvoke $r3.<org.apache.pdfbox.pdfwriter.COSWriter: void write(org.apache.pdfbox.pdmodel.PDDocument)>(r0);

        virtualinvoke $r3.<org.apache.pdfbox.pdfwriter.COSWriter: void close()>();

     label2:
        if $r3 == null goto label6;

        virtualinvoke $r3.<org.apache.pdfbox.pdfwriter.COSWriter: void close()>();

        goto label6;

     label3:
        $r5 := @caughtexception;

     label4:
        if r6 == null goto label5;

        virtualinvoke r6.<org.apache.pdfbox.pdfwriter.COSWriter: void close()>();

     label5:
        throw $r5;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void saveIncremental(java.lang.String) throws java.io.IOException, org.apache.pdfbox.exceptions.COSVisitorException
    {
        org.apache.pdfbox.pdmodel.PDDocument r0;
        java.io.FileOutputStream $r3;
        java.io.FileInputStream $r1;
        java.lang.String r2;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        r2 := @parameter0: java.lang.String;

        $r1 = new java.io.FileInputStream;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.lang.String)>(r2);

        $r3 = new java.io.FileOutputStream;

        specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.lang.String,boolean)>(r2, 1);

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: void saveIncremental(java.io.FileInputStream,java.io.OutputStream)>($r1, $r3);

        return;
    }

    public void saveIncremental(java.io.FileInputStream, java.io.OutputStream) throws java.io.IOException, org.apache.pdfbox.exceptions.COSVisitorException
    {
        org.apache.pdfbox.pdmodel.PDDocumentCatalog $r1;
        java.io.OutputStream r3;
        java.lang.Throwable $r8;
        org.apache.pdfbox.pdmodel.PDPageNode $r2;
        byte[] $r5;
        org.apache.pdfbox.pdmodel.PDDocument r0;
        java.io.FileInputStream r7;
        org.apache.pdfbox.pdfwriter.COSWriter $r6, r9;
        java.lang.String $r4;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        r7 := @parameter0: java.io.FileInputStream;

        r3 := @parameter1: java.io.OutputStream;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>();

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDPageNode getPages()>();

        virtualinvoke $r2.<org.apache.pdfbox.pdmodel.PDPageNode: long updateCount()>();

        r9 = null;

     label1:
        $r4 = "\r\n";

        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r3.<java.io.OutputStream: void write(byte[])>($r5);

        $r6 = new org.apache.pdfbox.pdfwriter.COSWriter;

        specialinvoke $r6.<org.apache.pdfbox.pdfwriter.COSWriter: void <init>(java.io.OutputStream,java.io.FileInputStream)>(r3, r7);

        r9 = $r6;

        virtualinvoke $r6.<org.apache.pdfbox.pdfwriter.COSWriter: void write(org.apache.pdfbox.pdmodel.PDDocument)>(r0);

        virtualinvoke $r6.<org.apache.pdfbox.pdfwriter.COSWriter: void close()>();

     label2:
        if $r6 == null goto label6;

        virtualinvoke $r6.<org.apache.pdfbox.pdfwriter.COSWriter: void close()>();

        goto label6;

     label3:
        $r8 := @caughtexception;

     label4:
        if r9 == null goto label5;

        virtualinvoke r9.<org.apache.pdfbox.pdfwriter.COSWriter: void close()>();

     label5:
        throw $r8;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getPageCount()
    {
        int $i0;
        org.apache.pdfbox.pdmodel.PDDocument r0;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        $i0 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: int getNumberOfPages()>();

        return $i0;
    }

    public int getNumberOfPages()
    {
        org.apache.pdfbox.pdmodel.PDDocumentCatalog $r1;
        org.apache.pdfbox.pdmodel.PDPageNode $r2;
        org.apache.pdfbox.pdmodel.PDDocument r0;
        int $i1;
        long $l0;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>();

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: org.apache.pdfbox.pdmodel.PDPageNode getPages()>();

        $l0 = virtualinvoke $r2.<org.apache.pdfbox.pdmodel.PDPageNode: long getCount()>();

        $i1 = (int) $l0;

        return $i1;
    }

    public java.awt.print.PageFormat getPageFormat(int)
    {
        org.apache.pdfbox.pdmodel.PDPageable $r1;
        java.awt.print.PrinterException $r4;
        org.apache.pdfbox.pdmodel.PDDocument r2;
        int i0;
        java.awt.print.PageFormat $r3;
        java.lang.RuntimeException $r5;
        java.awt.print.PrinterJob $r0;

        r2 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        i0 := @parameter0: int;

     label1:
        $r0 = staticinvoke <java.awt.print.PrinterJob: java.awt.print.PrinterJob getPrinterJob()>();

        $r1 = new org.apache.pdfbox.pdmodel.PDPageable;

        specialinvoke $r1.<org.apache.pdfbox.pdmodel.PDPageable: void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.awt.print.PrinterJob)>(r2, $r0);

        $r3 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.PDPageable: java.awt.print.PageFormat getPageFormat(int)>(i0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch java.awt.print.PrinterException from label1 to label2 with label3;
    }

    public java.awt.print.Printable getPrintable(int)
    {
        org.apache.pdfbox.pdmodel.PDDocumentCatalog $r1;
        java.util.List $r2;
        org.apache.pdfbox.pdmodel.PDDocument r0;
        int i0;
        java.lang.Object $r3;
        java.awt.print.Printable $r4;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>();

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: java.util.List getAllPages()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r4 = (java.awt.print.Printable) $r3;

        return $r4;
    }

    public void print(java.awt.print.PrinterJob) throws java.awt.print.PrinterException
    {
        org.apache.pdfbox.pdmodel.PDDocument r0;
        java.awt.print.PrinterJob r1;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        r1 := @parameter0: java.awt.print.PrinterJob;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: void print(java.awt.print.PrinterJob,boolean)>(r1, 0);

        return;
    }

    public void print() throws java.awt.print.PrinterException
    {
        org.apache.pdfbox.pdmodel.PDDocument r0;
        java.awt.print.PrinterJob $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        $r1 = staticinvoke <java.awt.print.PrinterJob: java.awt.print.PrinterJob getPrinterJob()>();

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: void print(java.awt.print.PrinterJob)>($r1);

        return;
    }

    public void silentPrint() throws java.awt.print.PrinterException
    {
        org.apache.pdfbox.pdmodel.PDDocument r0;
        java.awt.print.PrinterJob $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        $r1 = staticinvoke <java.awt.print.PrinterJob: java.awt.print.PrinterJob getPrinterJob()>();

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: void silentPrint(java.awt.print.PrinterJob)>($r1);

        return;
    }

    public void silentPrint(java.awt.print.PrinterJob) throws java.awt.print.PrinterException
    {
        org.apache.pdfbox.pdmodel.PDDocument r0;
        java.awt.print.PrinterJob r1;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        r1 := @parameter0: java.awt.print.PrinterJob;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: void print(java.awt.print.PrinterJob,boolean)>(r1, 1);

        return;
    }

    private void print(java.awt.print.PrinterJob, boolean) throws java.awt.print.PrinterException
    {
        org.apache.pdfbox.pdmodel.PDPageable $r1;
        java.awt.print.PrinterException $r3;
        org.apache.pdfbox.pdmodel.PDDocument r2;
        java.awt.print.PrinterJob r0;
        boolean z0, $z1;

        r2 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        r0 := @parameter0: java.awt.print.PrinterJob;

        z0 := @parameter1: boolean;

        if r0 != null goto label1;

        $r3 = new java.awt.print.PrinterException;

        specialinvoke $r3.<java.awt.print.PrinterException: void <init>(java.lang.String)>("The given printer job is null.");

        throw $r3;

     label1:
        $r1 = new org.apache.pdfbox.pdmodel.PDPageable;

        specialinvoke $r1.<org.apache.pdfbox.pdmodel.PDPageable: void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.awt.print.PrinterJob)>(r2, r0);

        virtualinvoke r0.<java.awt.print.PrinterJob: void setPageable(java.awt.print.Pageable)>($r1);

        if z0 != 0 goto label2;

        $z1 = virtualinvoke r0.<java.awt.print.PrinterJob: boolean printDialog()>();

        if $z1 == 0 goto label3;

     label2:
        virtualinvoke r0.<java.awt.print.PrinterJob: void print()>();

     label3:
        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.pdfbox.pdfparser.BaseParser $r3, $r4;
        org.apache.pdfbox.cos.COSDocument $r2, $r5;
        org.apache.pdfbox.pdmodel.PDDocument r0;
        java.util.Map $r1, $r6;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog documentCatalog> = null;

        r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentInformation documentInformation> = null;

        r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.encryption.PDEncryptionDictionary encParameters> = null;

        $r1 = r0.<org.apache.pdfbox.pdmodel.PDDocument: java.util.Map pageMap>;

        if $r1 == null goto label1;

        $r6 = r0.<org.apache.pdfbox.pdmodel.PDDocument: java.util.Map pageMap>;

        interfaceinvoke $r6.<java.util.Map: void clear()>();

        r0.<org.apache.pdfbox.pdmodel.PDDocument: java.util.Map pageMap> = null;

     label1:
        r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.encryption.SecurityHandler securityHandler> = null;

        $r2 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document>;

        if $r2 == null goto label2;

        $r5 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document>;

        virtualinvoke $r5.<org.apache.pdfbox.cos.COSDocument: void close()>();

        r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document> = null;

     label2:
        $r3 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdfparser.BaseParser parser>;

        if $r3 == null goto label3;

        $r4 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdfparser.BaseParser parser>;

        virtualinvoke $r4.<org.apache.pdfbox.pdfparser.BaseParser: void clearResources()>();

        r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdfparser.BaseParser parser> = null;

     label3:
        return;
    }

    public void protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy) throws org.apache.pdfbox.pdmodel.encryption.BadSecurityHandlerException
    {
        org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager $r0;
        org.apache.pdfbox.pdmodel.PDDocument r3;
        org.apache.pdfbox.pdmodel.encryption.SecurityHandler $r2;
        org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy r1;

        r3 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy;

        $r0 = staticinvoke <org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager: org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager getInstance()>();

        $r2 = virtualinvoke $r0.<org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager: org.apache.pdfbox.pdmodel.encryption.SecurityHandler getSecurityHandler(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)>(r1);

        r3.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.encryption.SecurityHandler securityHandler> = $r2;

        return;
    }

    public void openProtection(org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial) throws org.apache.pdfbox.pdmodel.encryption.BadSecurityHandlerException, java.io.IOException, org.apache.pdfbox.exceptions.CryptographyException
    {
        org.apache.pdfbox.cos.COSDocument $r9, $r10;
        org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager $r4;
        org.apache.pdfbox.pdmodel.PDDocument r0;
        org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial r7;
        java.lang.RuntimeException $r3;
        org.apache.pdfbox.pdmodel.encryption.SecurityHandler $r6, $r8;
        org.apache.pdfbox.pdmodel.encryption.PDEncryptionDictionary $r1;
        java.lang.String $r2, $r5;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        r7 := @parameter0: org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.encryption.PDEncryptionDictionary getEncryptionDictionary()>();

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.encryption.PDEncryptionDictionary: java.lang.String getFilter()>();

        if $r2 == null goto label1;

        $r4 = staticinvoke <org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager: org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager getInstance()>();

        $r5 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.encryption.PDEncryptionDictionary: java.lang.String getFilter()>();

        $r6 = virtualinvoke $r4.<org.apache.pdfbox.pdmodel.encryption.SecurityHandlersManager: org.apache.pdfbox.pdmodel.encryption.SecurityHandler getSecurityHandler(java.lang.String)>($r5);

        r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.encryption.SecurityHandler securityHandler> = $r6;

        $r8 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.encryption.SecurityHandler securityHandler>;

        virtualinvoke $r8.<org.apache.pdfbox.pdmodel.encryption.SecurityHandler: void decryptDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)>(r0, r7);

        $r9 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document>;

        virtualinvoke $r9.<org.apache.pdfbox.cos.COSDocument: void dereferenceObjectStreams()>();

        $r10 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument document>;

        virtualinvoke $r10.<org.apache.pdfbox.cos.COSDocument: void setEncryptionDictionary(org.apache.pdfbox.cos.COSDictionary)>(null);

        goto label2;

     label1:
        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("This document does not need to be decrypted");

        throw $r3;

     label2:
        return;
    }

    public org.apache.pdfbox.pdmodel.encryption.AccessPermission getCurrentAccessPermission()
    {
        org.apache.pdfbox.pdmodel.encryption.AccessPermission $r3, $r4;
        org.apache.pdfbox.pdmodel.PDDocument r0;
        org.apache.pdfbox.pdmodel.encryption.SecurityHandler $r1, $r2;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        $r1 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.encryption.SecurityHandler securityHandler>;

        if $r1 != null goto label1;

        $r4 = staticinvoke <org.apache.pdfbox.pdmodel.encryption.AccessPermission: org.apache.pdfbox.pdmodel.encryption.AccessPermission getOwnerAccessPermission()>();

        return $r4;

     label1:
        $r2 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.encryption.SecurityHandler securityHandler>;

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.pdmodel.encryption.SecurityHandler: org.apache.pdfbox.pdmodel.encryption.AccessPermission getCurrentAccessPermission()>();

        return $r3;
    }

    public org.apache.pdfbox.pdmodel.encryption.SecurityHandler getSecurityHandler()
    {
        org.apache.pdfbox.pdmodel.encryption.SecurityHandler $r1;
        org.apache.pdfbox.pdmodel.PDDocument r0;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        $r1 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.encryption.SecurityHandler securityHandler>;

        return $r1;
    }

    public boolean setSecurityHandler(org.apache.pdfbox.pdmodel.encryption.SecurityHandler)
    {
        org.apache.pdfbox.pdmodel.encryption.SecurityHandler $r1, r2;
        org.apache.pdfbox.pdmodel.PDDocument r0;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        r2 := @parameter0: org.apache.pdfbox.pdmodel.encryption.SecurityHandler;

        $r1 = r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.encryption.SecurityHandler securityHandler>;

        if $r1 != null goto label1;

        r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.encryption.SecurityHandler securityHandler> = r2;

        return 1;

     label1:
        return 0;
    }

    public boolean isAllSecurityToBeRemoved()
    {
        org.apache.pdfbox.pdmodel.PDDocument r0;
        boolean $z0;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        $z0 = r0.<org.apache.pdfbox.pdmodel.PDDocument: boolean allSecurityToBeRemoved>;

        return $z0;
    }

    public void setAllSecurityToBeRemoved(boolean)
    {
        org.apache.pdfbox.pdmodel.PDDocument r0;
        boolean z0;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        z0 := @parameter0: boolean;

        r0.<org.apache.pdfbox.pdmodel.PDDocument: boolean allSecurityToBeRemoved> = z0;

        return;
    }

    public java.lang.Long getDocumentId()
    {
        java.lang.Long $r1;
        org.apache.pdfbox.pdmodel.PDDocument r0;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        $r1 = r0.<org.apache.pdfbox.pdmodel.PDDocument: java.lang.Long documentId>;

        return $r1;
    }

    public void setDocumentId(java.lang.Long)
    {
        java.lang.Long r1;
        org.apache.pdfbox.pdmodel.PDDocument r0;

        r0 := @this: org.apache.pdfbox.pdmodel.PDDocument;

        r1 := @parameter0: java.lang.Long;

        r0.<org.apache.pdfbox.pdmodel.PDDocument: java.lang.Long documentId> = r1;

        return;
    }
}
