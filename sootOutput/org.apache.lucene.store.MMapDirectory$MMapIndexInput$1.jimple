class org.apache.lucene.store.MMapDirectory$MMapIndexInput$1 extends java.lang.Object implements java.security.PrivilegedExceptionAction
{
    final java.nio.ByteBuffer val$buffer;
    final org.apache.lucene.store.MMapDirectory$MMapIndexInput this$1;

    void <init>(org.apache.lucene.store.MMapDirectory$MMapIndexInput, java.nio.ByteBuffer)
    {
        org.apache.lucene.store.MMapDirectory$MMapIndexInput r1;
        org.apache.lucene.store.MMapDirectory$MMapIndexInput$1 r0;
        java.nio.ByteBuffer r2;

        r0 := @this: org.apache.lucene.store.MMapDirectory$MMapIndexInput$1;

        r1 := @parameter0: org.apache.lucene.store.MMapDirectory$MMapIndexInput;

        r2 := @parameter1: java.nio.ByteBuffer;

        r0.<org.apache.lucene.store.MMapDirectory$MMapIndexInput$1: org.apache.lucene.store.MMapDirectory$MMapIndexInput this$1> = r1;

        r0.<org.apache.lucene.store.MMapDirectory$MMapIndexInput$1: java.nio.ByteBuffer val$buffer> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Void run() throws java.lang.Exception
    {
        java.lang.Object[] $r5, $r11;
        java.lang.Class[] $r3, $r9;
        java.nio.ByteBuffer $r1, $r6;
        java.lang.Class $r2, $r8;
        java.lang.Object $r7;
        org.apache.lucene.store.MMapDirectory$MMapIndexInput$1 r0;
        java.lang.reflect.Method $r4, $r10;

        r0 := @this: org.apache.lucene.store.MMapDirectory$MMapIndexInput$1;

        $r1 = r0.<org.apache.lucene.store.MMapDirectory$MMapIndexInput$1: java.nio.ByteBuffer val$buffer>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = newarray (java.lang.Class)[0];

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("cleaner", $r3);

        virtualinvoke $r4.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        $r6 = r0.<org.apache.lucene.store.MMapDirectory$MMapIndexInput$1: java.nio.ByteBuffer val$buffer>;

        $r5 = newarray (java.lang.Object)[0];

        $r7 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r6, $r5);

        if $r7 == null goto label1;

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = newarray (java.lang.Class)[0];

        $r10 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("clean", $r9);

        $r11 = newarray (java.lang.Object)[0];

        virtualinvoke $r10.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r7, $r11);

     label1:
        return null;
    }

    public volatile java.lang.Object run() throws java.lang.Exception
    {
        java.lang.Void $r1;
        org.apache.lucene.store.MMapDirectory$MMapIndexInput$1 r0;

        r0 := @this: org.apache.lucene.store.MMapDirectory$MMapIndexInput$1;

        $r1 = virtualinvoke r0.<org.apache.lucene.store.MMapDirectory$MMapIndexInput$1: java.lang.Void run()>();

        return $r1;
    }
}
