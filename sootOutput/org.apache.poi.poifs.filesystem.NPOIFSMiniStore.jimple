public class org.apache.poi.poifs.filesystem.NPOIFSMiniStore extends org.apache.poi.poifs.filesystem.BlockStore
{
    private org.apache.poi.poifs.filesystem.NPOIFSFileSystem _filesystem;
    private org.apache.poi.poifs.filesystem.NPOIFSStream _mini_stream;
    private java.util.List _sbat_blocks;
    private org.apache.poi.poifs.storage.HeaderBlock _header;
    private org.apache.poi.poifs.property.RootProperty _root;

    protected void <init>(org.apache.poi.poifs.filesystem.NPOIFSFileSystem, org.apache.poi.poifs.property.RootProperty, java.util.List, org.apache.poi.poifs.storage.HeaderBlock)
    {
        java.util.List r2;
        org.apache.poi.poifs.filesystem.NPOIFSMiniStore r0;
        org.apache.poi.poifs.filesystem.NPOIFSFileSystem r1;
        int $i0;
        org.apache.poi.poifs.filesystem.NPOIFSStream $r5;
        org.apache.poi.poifs.storage.HeaderBlock r3;
        org.apache.poi.poifs.property.RootProperty r4;

        r0 := @this: org.apache.poi.poifs.filesystem.NPOIFSMiniStore;

        r1 := @parameter0: org.apache.poi.poifs.filesystem.NPOIFSFileSystem;

        r4 := @parameter1: org.apache.poi.poifs.property.RootProperty;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: org.apache.poi.poifs.storage.HeaderBlock;

        specialinvoke r0.<org.apache.poi.poifs.filesystem.BlockStore: void <init>()>();

        r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.filesystem.NPOIFSFileSystem _filesystem> = r1;

        r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: java.util.List _sbat_blocks> = r2;

        r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.storage.HeaderBlock _header> = r3;

        r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.property.RootProperty _root> = r4;

        $r5 = new org.apache.poi.poifs.filesystem.NPOIFSStream;

        $i0 = virtualinvoke r4.<org.apache.poi.poifs.property.RootProperty: int getStartBlock()>();

        specialinvoke $r5.<org.apache.poi.poifs.filesystem.NPOIFSStream: void <init>(org.apache.poi.poifs.filesystem.BlockStore,int)>(r1, $i0);

        r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.filesystem.NPOIFSStream _mini_stream> = $r5;

        return;
    }

    protected java.nio.ByteBuffer getBlockAt(int) throws java.io.IOException
    {
        java.lang.IndexOutOfBoundsException $r7;
        java.nio.ByteBuffer $r6, r13;
        org.apache.poi.poifs.filesystem.NPOIFSMiniStore r0;
        org.apache.poi.poifs.filesystem.NPOIFSFileSystem $r1, $r2;
        int i0, i1, $i2, i3, $i4, i5, $i6, $i7, i8;
        java.lang.String $r12;
        java.util.Iterator $r4;
        org.apache.poi.poifs.filesystem.NPOIFSStream $r3;
        java.lang.Object $r5;
        java.lang.StringBuilder $r8, $r9, $r10, $r11;

        r0 := @this: org.apache.poi.poifs.filesystem.NPOIFSMiniStore;

        i0 := @parameter0: int;

        i1 = i0 * 64;

        $r1 = r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.filesystem.NPOIFSFileSystem _filesystem>;

        $i2 = virtualinvoke $r1.<org.apache.poi.poifs.filesystem.NPOIFSFileSystem: int getBigBlockSize()>();

        i3 = i1 / $i2;

        $r2 = r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.filesystem.NPOIFSFileSystem _filesystem>;

        $i4 = virtualinvoke $r2.<org.apache.poi.poifs.filesystem.NPOIFSFileSystem: int getBigBlockSize()>();

        i5 = i1 % $i4;

        $r3 = r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.filesystem.NPOIFSStream _mini_stream>;

        $r4 = virtualinvoke $r3.<org.apache.poi.poifs.filesystem.NPOIFSStream: java.util.Iterator getBlockIterator()>();

        i8 = 0;

     label1:
        if i8 >= i3 goto label2;

        interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        i8 = i8 + 1;

        goto label1;

     label2:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.nio.ByteBuffer) $r5;

        if r13 != null goto label3;

        $r7 = new java.lang.IndexOutOfBoundsException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Big block ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" outside stream");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label3:
        $i6 = virtualinvoke r13.<java.nio.ByteBuffer: int position()>();

        $i7 = $i6 + i5;

        virtualinvoke r13.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i7);

        $r6 = virtualinvoke r13.<java.nio.ByteBuffer: java.nio.ByteBuffer slice()>();

        virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>(64);

        return $r6;
    }

    protected java.nio.ByteBuffer createBlockIfNeeded(int) throws java.io.IOException
    {
        java.lang.IndexOutOfBoundsException $r17;
        java.nio.ByteBuffer $r10, $r16;
        org.apache.poi.poifs.filesystem.NPOIFSMiniStore r0;
        org.apache.poi.poifs.filesystem.NPOIFSFileSystem $r2, $r3, $r4, $r7, $r8, $r9, $r11, $r15;
        int $i0, $i1, $i2, i3, i4, $i6, $i8, $i10;
        org.apache.poi.poifs.property.NPropertyTable $r12;
        boolean z0, z1, z2;
        org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector $r5;
        org.apache.poi.poifs.filesystem.NPOIFSStream $r1, $r6, $r18;
        org.apache.poi.poifs.property.RootProperty $r13;

        r0 := @this: org.apache.poi.poifs.filesystem.NPOIFSMiniStore;

        i3 := @parameter0: int;

        z0 = 0;

        z2 = 0;

        z1 = 0;

        $r1 = r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.filesystem.NPOIFSStream _mini_stream>;

        $i0 = virtualinvoke $r1.<org.apache.poi.poifs.filesystem.NPOIFSStream: int getStartBlock()>();

        $i6 = (int) -2;

        if $i0 != $i6 goto label01;

        z0 = 1;

        z2 = 1;

        z1 = 1;

     label01:
        if z1 != 0 goto label05;

     label02:
        $r16 = virtualinvoke r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: java.nio.ByteBuffer getBlockAt(int)>(i3);

     label03:
        return $r16;

     label04:
        $r17 := @caughtexception;

     label05:
        $r2 = r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.filesystem.NPOIFSFileSystem _filesystem>;

        $i1 = virtualinvoke $r2.<org.apache.poi.poifs.filesystem.NPOIFSFileSystem: int getFreeBlock()>();

        $r3 = r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.filesystem.NPOIFSFileSystem _filesystem>;

        virtualinvoke $r3.<org.apache.poi.poifs.filesystem.NPOIFSFileSystem: java.nio.ByteBuffer createBlockIfNeeded(int)>($i1);

        if z2 == 0 goto label06;

        $r11 = r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.filesystem.NPOIFSFileSystem _filesystem>;

        $r12 = virtualinvoke $r11.<org.apache.poi.poifs.filesystem.NPOIFSFileSystem: org.apache.poi.poifs.property.NPropertyTable _get_property_table()>();

        $r13 = virtualinvoke $r12.<org.apache.poi.poifs.property.NPropertyTable: org.apache.poi.poifs.property.RootProperty getRoot()>();

        virtualinvoke $r13.<org.apache.poi.poifs.property.RootProperty: void setStartBlock(int)>($i1);

        $r18 = new org.apache.poi.poifs.filesystem.NPOIFSStream;

        $r15 = r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.filesystem.NPOIFSFileSystem _filesystem>;

        specialinvoke $r18.<org.apache.poi.poifs.filesystem.NPOIFSStream: void <init>(org.apache.poi.poifs.filesystem.BlockStore,int)>($r15, $i1);

        r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.filesystem.NPOIFSStream _mini_stream> = $r18;

        goto label10;

     label06:
        $r4 = r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.filesystem.NPOIFSFileSystem _filesystem>;

        $r5 = virtualinvoke $r4.<org.apache.poi.poifs.filesystem.NPOIFSFileSystem: org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector getChainLoopDetector()>();

        $r6 = r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.filesystem.NPOIFSStream _mini_stream>;

        i4 = virtualinvoke $r6.<org.apache.poi.poifs.filesystem.NPOIFSStream: int getStartBlock()>();

     label07:
        virtualinvoke $r5.<org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector: void claim(int)>(i4);

        $r7 = r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.filesystem.NPOIFSFileSystem _filesystem>;

        $i2 = virtualinvoke $r7.<org.apache.poi.poifs.filesystem.NPOIFSFileSystem: int getNextBlock(int)>(i4);

        $i8 = (int) -2;

        if $i2 != $i8 goto label08;

        goto label09;

     label08:
        i4 = $i2;

        goto label07;

     label09:
        $r8 = r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.filesystem.NPOIFSFileSystem _filesystem>;

        virtualinvoke $r8.<org.apache.poi.poifs.filesystem.NPOIFSFileSystem: void setNextBlock(int,int)>(i4, $i1);

     label10:
        $r9 = r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.filesystem.NPOIFSFileSystem _filesystem>;

        $i10 = (int) -2;

        virtualinvoke $r9.<org.apache.poi.poifs.filesystem.NPOIFSFileSystem: void setNextBlock(int,int)>($i1, $i10);

        $r10 = virtualinvoke r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: java.nio.ByteBuffer createBlockIfNeeded(int)>(i3);

        return $r10;

        catch java.lang.IndexOutOfBoundsException from label02 to label03 with label04;
    }

    protected org.apache.poi.poifs.storage.BATBlock$BATBlockAndIndex getBATBlockAndIndex(int)
    {
        org.apache.poi.poifs.storage.BATBlock$BATBlockAndIndex $r3;
        java.util.List $r1;
        org.apache.poi.poifs.filesystem.NPOIFSMiniStore r0;
        int i0;
        org.apache.poi.poifs.storage.HeaderBlock $r2;

        r0 := @this: org.apache.poi.poifs.filesystem.NPOIFSMiniStore;

        i0 := @parameter0: int;

        $r2 = r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.storage.HeaderBlock _header>;

        $r1 = r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: java.util.List _sbat_blocks>;

        $r3 = staticinvoke <org.apache.poi.poifs.storage.BATBlock: org.apache.poi.poifs.storage.BATBlock$BATBlockAndIndex getSBATBlockAndIndex(int,org.apache.poi.poifs.storage.HeaderBlock,java.util.List)>(i0, $r2, $r1);

        return $r3;
    }

    protected int getNextBlock(int)
    {
        org.apache.poi.poifs.storage.BATBlock$BATBlockAndIndex $r1;
        org.apache.poi.poifs.storage.BATBlock $r2;
        org.apache.poi.poifs.filesystem.NPOIFSMiniStore r0;
        int i0, $i1, $i2;

        r0 := @this: org.apache.poi.poifs.filesystem.NPOIFSMiniStore;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.storage.BATBlock$BATBlockAndIndex getBATBlockAndIndex(int)>(i0);

        $r2 = virtualinvoke $r1.<org.apache.poi.poifs.storage.BATBlock$BATBlockAndIndex: org.apache.poi.poifs.storage.BATBlock getBlock()>();

        $i1 = virtualinvoke $r1.<org.apache.poi.poifs.storage.BATBlock$BATBlockAndIndex: int getIndex()>();

        $i2 = virtualinvoke $r2.<org.apache.poi.poifs.storage.BATBlock: int getValueAt(int)>($i1);

        return $i2;
    }

    protected void setNextBlock(int, int)
    {
        org.apache.poi.poifs.storage.BATBlock$BATBlockAndIndex $r1;
        org.apache.poi.poifs.storage.BATBlock $r2;
        org.apache.poi.poifs.filesystem.NPOIFSMiniStore r0;
        int i0, $i1, i2;

        r0 := @this: org.apache.poi.poifs.filesystem.NPOIFSMiniStore;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.storage.BATBlock$BATBlockAndIndex getBATBlockAndIndex(int)>(i0);

        $r2 = virtualinvoke $r1.<org.apache.poi.poifs.storage.BATBlock$BATBlockAndIndex: org.apache.poi.poifs.storage.BATBlock getBlock()>();

        $i1 = virtualinvoke $r1.<org.apache.poi.poifs.storage.BATBlock$BATBlockAndIndex: int getIndex()>();

        virtualinvoke $r2.<org.apache.poi.poifs.storage.BATBlock: void setValueAt(int,int)>($i1, i2);

        return;
    }

    protected int getFreeBlock() throws java.io.IOException
    {
        boolean $z0;
        org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector $r10;
        java.util.List $r3, $r17, $r20;
        org.apache.poi.poifs.storage.BATBlock $r6, r22;
        org.apache.poi.poifs.filesystem.NPOIFSMiniStore r0;
        org.apache.poi.poifs.filesystem.NPOIFSFileSystem $r1, $r4, $r7, $r9, $r12, $r13, $r16;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12, $i14, $i16, $i18;
        org.apache.poi.poifs.storage.HeaderBlock $r8, $r11, $r14, $r15, $r18, $r19;
        org.apache.poi.poifs.common.POIFSBigBlockSize $r2, $r5;
        java.lang.Object $r21;

        r0 := @this: org.apache.poi.poifs.filesystem.NPOIFSMiniStore;

        $r1 = r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.filesystem.NPOIFSFileSystem _filesystem>;

        $r2 = virtualinvoke $r1.<org.apache.poi.poifs.filesystem.NPOIFSFileSystem: org.apache.poi.poifs.common.POIFSBigBlockSize getBigBlockSizeDetails()>();

        $i0 = virtualinvoke $r2.<org.apache.poi.poifs.common.POIFSBigBlockSize: int getBATEntriesPerBlock()>();

        i9 = 0;

        i10 = 0;

     label01:
        $r3 = r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: java.util.List _sbat_blocks>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i10 >= $i1 goto label05;

        $r20 = r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: java.util.List _sbat_blocks>;

        $r21 = interfaceinvoke $r20.<java.util.List: java.lang.Object get(int)>(i10);

        r22 = (org.apache.poi.poifs.storage.BATBlock) $r21;

        $z0 = virtualinvoke r22.<org.apache.poi.poifs.storage.BATBlock: boolean hasFreeSectors()>();

        if $z0 == 0 goto label04;

        i11 = 0;

     label02:
        if i11 >= $i0 goto label04;

        $i7 = virtualinvoke r22.<org.apache.poi.poifs.storage.BATBlock: int getValueAt(int)>(i11);

        $i14 = (int) -1;

        if $i7 != $i14 goto label03;

        $i8 = i9 + i11;

        return $i8;

     label03:
        i11 = i11 + 1;

        goto label02;

     label04:
        i9 = i9 + $i0;

        i10 = i10 + 1;

        goto label01;

     label05:
        $r4 = r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.filesystem.NPOIFSFileSystem _filesystem>;

        $r5 = virtualinvoke $r4.<org.apache.poi.poifs.filesystem.NPOIFSFileSystem: org.apache.poi.poifs.common.POIFSBigBlockSize getBigBlockSizeDetails()>();

        $r6 = staticinvoke <org.apache.poi.poifs.storage.BATBlock: org.apache.poi.poifs.storage.BATBlock createEmptyBATBlock(org.apache.poi.poifs.common.POIFSBigBlockSize,boolean)>($r5, 0);

        $r7 = r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.filesystem.NPOIFSFileSystem _filesystem>;

        $i2 = virtualinvoke $r7.<org.apache.poi.poifs.filesystem.NPOIFSFileSystem: int getFreeBlock()>();

        virtualinvoke $r6.<org.apache.poi.poifs.storage.BATBlock: void setOurBlockIndex(int)>($i2);

        $r8 = r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.storage.HeaderBlock _header>;

        $i3 = virtualinvoke $r8.<org.apache.poi.poifs.storage.HeaderBlock: int getSBATCount()>();

        if $i3 != 0 goto label06;

        $r18 = r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.storage.HeaderBlock _header>;

        virtualinvoke $r18.<org.apache.poi.poifs.storage.HeaderBlock: void setSBATStart(int)>($i2);

        $r19 = r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.storage.HeaderBlock _header>;

        virtualinvoke $r19.<org.apache.poi.poifs.storage.HeaderBlock: void setSBATBlockCount(int)>(1);

        goto label10;

     label06:
        $r9 = r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.filesystem.NPOIFSFileSystem _filesystem>;

        $r10 = virtualinvoke $r9.<org.apache.poi.poifs.filesystem.NPOIFSFileSystem: org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector getChainLoopDetector()>();

        $r11 = r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.storage.HeaderBlock _header>;

        i12 = virtualinvoke $r11.<org.apache.poi.poifs.storage.HeaderBlock: int getSBATStart()>();

     label07:
        virtualinvoke $r10.<org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector: void claim(int)>(i12);

        $r12 = r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.filesystem.NPOIFSFileSystem _filesystem>;

        $i4 = virtualinvoke $r12.<org.apache.poi.poifs.filesystem.NPOIFSFileSystem: int getNextBlock(int)>(i12);

        $i16 = (int) -2;

        if $i4 != $i16 goto label08;

        goto label09;

     label08:
        i12 = $i4;

        goto label07;

     label09:
        $r13 = r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.filesystem.NPOIFSFileSystem _filesystem>;

        virtualinvoke $r13.<org.apache.poi.poifs.filesystem.NPOIFSFileSystem: void setNextBlock(int,int)>(i12, $i2);

        $r15 = r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.storage.HeaderBlock _header>;

        $r14 = r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.storage.HeaderBlock _header>;

        $i5 = virtualinvoke $r14.<org.apache.poi.poifs.storage.HeaderBlock: int getSBATCount()>();

        $i6 = $i5 + 1;

        virtualinvoke $r15.<org.apache.poi.poifs.storage.HeaderBlock: void setSBATBlockCount(int)>($i6);

     label10:
        $r16 = r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.filesystem.NPOIFSFileSystem _filesystem>;

        $i18 = (int) -2;

        virtualinvoke $r16.<org.apache.poi.poifs.filesystem.NPOIFSFileSystem: void setNextBlock(int,int)>($i2, $i18);

        $r17 = r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: java.util.List _sbat_blocks>;

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r6);

        return i9;
    }

    protected org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector getChainLoopDetector() throws java.io.IOException
    {
        org.apache.poi.poifs.filesystem.NPOIFSMiniStore r1;
        int $i0;
        long $l1;
        org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector $r0;
        org.apache.poi.poifs.property.RootProperty $r2;

        r1 := @this: org.apache.poi.poifs.filesystem.NPOIFSMiniStore;

        $r0 = new org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector;

        $r2 = r1.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.property.RootProperty _root>;

        $i0 = virtualinvoke $r2.<org.apache.poi.poifs.property.RootProperty: int getSize()>();

        $l1 = (long) $i0;

        specialinvoke $r0.<org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector: void <init>(org.apache.poi.poifs.filesystem.BlockStore,long)>(r1, $l1);

        return $r0;
    }

    protected int getBlockStoreBlockSize()
    {
        org.apache.poi.poifs.filesystem.NPOIFSMiniStore r0;

        r0 := @this: org.apache.poi.poifs.filesystem.NPOIFSMiniStore;

        return 64;
    }

    protected void syncWithDataSource() throws java.io.IOException
    {
        org.apache.poi.poifs.storage.BATBlock r4;
        java.util.Iterator $r2;
        java.nio.ByteBuffer $r6;
        java.util.List $r1;
        org.apache.poi.poifs.filesystem.NPOIFSMiniStore r0;
        org.apache.poi.poifs.filesystem.NPOIFSFileSystem $r5;
        int $i0;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.apache.poi.poifs.filesystem.NPOIFSMiniStore;

        $r1 = r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: java.util.List _sbat_blocks>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.poi.poifs.storage.BATBlock) $r3;

        $r5 = r0.<org.apache.poi.poifs.filesystem.NPOIFSMiniStore: org.apache.poi.poifs.filesystem.NPOIFSFileSystem _filesystem>;

        $i0 = virtualinvoke r4.<org.apache.poi.poifs.storage.BATBlock: int getOurBlockIndex()>();

        $r6 = virtualinvoke $r5.<org.apache.poi.poifs.filesystem.NPOIFSFileSystem: java.nio.ByteBuffer getBlockAt(int)>($i0);

        staticinvoke <org.apache.poi.poifs.storage.BlockAllocationTableWriter: void writeBlock(org.apache.poi.poifs.storage.BATBlock,java.nio.ByteBuffer)>(r4, $r6);

        goto label1;

     label2:
        return;
    }
}
