class com.mongodb.Response extends java.lang.Object
{
    final com.mongodb.DBCollection _collection;
    final int _len;
    final int _id;
    final int _responseTo;
    final int _operation;
    final int _flags;
    final long _cursor;
    final int _startingFrom;
    final int _num;
    final java.util.List _objects;
    static java.lang.ThreadLocal TL;

    void <init>(com.mongodb.DBCollection, java.io.InputStream) throws java.io.IOException
    {
        byte[] r2;
        java.io.ByteArrayInputStream $r4;
        com.mongodb.DBCallback $r9;
        com.mongodb.DBObject $r21;
        com.mongodb.Response r0;
        java.lang.ThreadLocal $r10;
        java.util.List $r12, $r20;
        org.bson.BSONDecoder $r29;
        java.lang.StringBuilder $r15, $r16, $r17, $r18, $r23, $r24, $r25, $r26, $r31, $r32, $r33;
        com.mongodb.DBCallback$Factory $r8;
        long $l6;
        java.util.ArrayList $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, $i22;
        java.lang.String $r19, $r27, $r34;
        java.util.LinkedList $r28;
        com.mongodb.Response$MyInputStream $r5;
        com.mongodb.DBCollection r1, $r7;
        java.io.IOException $r14, $r22;
        java.lang.RuntimeException $r13;
        java.lang.IllegalArgumentException $r30;
        java.lang.Object $r11;
        java.io.InputStream r3;

        r0 := @this: com.mongodb.Response;

        r1 := @parameter0: com.mongodb.DBCollection;

        r3 := @parameter1: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mongodb.Response: com.mongodb.DBCollection _collection> = r1;

        r2 = newarray (byte)[36];

        staticinvoke <org.bson.io.Bits: void readFully(java.io.InputStream,byte[])>(r3, r2);

        $r4 = new java.io.ByteArrayInputStream;

        specialinvoke $r4.<java.io.ByteArrayInputStream: void <init>(byte[])>(r2);

        $i0 = staticinvoke <org.bson.io.Bits: int readInt(java.io.InputStream)>($r4);

        r0.<com.mongodb.Response: int _len> = $i0;

        $i1 = r0.<com.mongodb.Response: int _len>;

        if $i1 <= 33554432 goto label1;

        $r30 = new java.lang.IllegalArgumentException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("response too long: ");

        $i20 = r0.<com.mongodb.Response: int _len>;

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i20);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r34);

        throw $r30;

     label1:
        $i2 = staticinvoke <org.bson.io.Bits: int readInt(java.io.InputStream)>($r4);

        r0.<com.mongodb.Response: int _id> = $i2;

        $i3 = staticinvoke <org.bson.io.Bits: int readInt(java.io.InputStream)>($r4);

        r0.<com.mongodb.Response: int _responseTo> = $i3;

        $i4 = staticinvoke <org.bson.io.Bits: int readInt(java.io.InputStream)>($r4);

        r0.<com.mongodb.Response: int _operation> = $i4;

        $i5 = staticinvoke <org.bson.io.Bits: int readInt(java.io.InputStream)>($r4);

        r0.<com.mongodb.Response: int _flags> = $i5;

        $l6 = staticinvoke <org.bson.io.Bits: long readLong(java.io.InputStream)>($r4);

        r0.<com.mongodb.Response: long _cursor> = $l6;

        $i7 = staticinvoke <org.bson.io.Bits: int readInt(java.io.InputStream)>($r4);

        r0.<com.mongodb.Response: int _startingFrom> = $i7;

        $i8 = staticinvoke <org.bson.io.Bits: int readInt(java.io.InputStream)>($r4);

        r0.<com.mongodb.Response: int _num> = $i8;

        $r5 = new com.mongodb.Response$MyInputStream;

        $i10 = r0.<com.mongodb.Response: int _len>;

        $i9 = lengthof r2;

        $i11 = $i10 - $i9;

        specialinvoke $r5.<com.mongodb.Response$MyInputStream: void <init>(com.mongodb.Response,java.io.InputStream,int)>(r0, r3, $i11);

        $i12 = r0.<com.mongodb.Response: int _num>;

        if $i12 >= 2 goto label2;

        $r28 = new java.util.LinkedList;

        specialinvoke $r28.<java.util.LinkedList: void <init>()>();

        r0.<com.mongodb.Response: java.util.List _objects> = $r28;

        goto label3;

     label2:
        $r6 = new java.util.ArrayList;

        $i13 = r0.<com.mongodb.Response: int _num>;

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i13);

        r0.<com.mongodb.Response: java.util.List _objects> = $r6;

     label3:
        $r8 = <com.mongodb.DBCallback: com.mongodb.DBCallback$Factory FACTORY>;

        $r7 = r0.<com.mongodb.Response: com.mongodb.DBCollection _collection>;

        $r9 = interfaceinvoke $r8.<com.mongodb.DBCallback$Factory: com.mongodb.DBCallback create(com.mongodb.DBCollection)>($r7);

        $r10 = <com.mongodb.Response: java.lang.ThreadLocal TL>;

        $r11 = virtualinvoke $r10.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r29 = (org.bson.BSONDecoder) $r11;

        i21 = 0;

     label4:
        $i22 = r0.<com.mongodb.Response: int _num>;

        if i21 >= $i22 goto label6;

        $i18 = staticinvoke <com.mongodb.Response$MyInputStream: int access$000(com.mongodb.Response$MyInputStream)>($r5);

        if $i18 >= 5 goto label5;

        $r22 = new java.io.IOException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("should have more obejcts, but only ");

        $i19 = staticinvoke <com.mongodb.Response$MyInputStream: int access$000(com.mongodb.Response$MyInputStream)>($r5);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes left");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.io.IOException: void <init>(java.lang.String)>($r27);

        throw $r22;

     label5:
        virtualinvoke $r9.<com.mongodb.DBCallback: void reset()>();

        virtualinvoke $r29.<org.bson.BSONDecoder: int decode(java.io.InputStream,org.bson.BSONCallback)>($r5, $r9);

        $r20 = r0.<com.mongodb.Response: java.util.List _objects>;

        $r21 = virtualinvoke $r9.<com.mongodb.DBCallback: com.mongodb.DBObject dbget()>();

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>($r21);

        i21 = i21 + 1;

        goto label4;

     label6:
        $i14 = staticinvoke <com.mongodb.Response$MyInputStream: int access$000(com.mongodb.Response$MyInputStream)>($r5);

        if $i14 == 0 goto label7;

        $r14 = new java.io.IOException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("finished reading objects but still have: ");

        $i17 = staticinvoke <com.mongodb.Response$MyInputStream: int access$000(com.mongodb.Response$MyInputStream)>($r5);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes to read!\' ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>($r19);

        throw $r14;

     label7:
        $i15 = r0.<com.mongodb.Response: int _num>;

        $r12 = r0.<com.mongodb.Response: java.util.List _objects>;

        $i16 = interfaceinvoke $r12.<java.util.List: int size()>();

        if $i15 == $i16 goto label8;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>("something is really broken");

        throw $r13;

     label8:
        return;
    }

    public int size()
    {
        int $i0;
        com.mongodb.Response r0;

        r0 := @this: com.mongodb.Response;

        $i0 = r0.<com.mongodb.Response: int _num>;

        return $i0;
    }

    public com.mongodb.DBObject get(int)
    {
        java.util.List $r1;
        com.mongodb.DBObject $r3;
        int i0;
        com.mongodb.Response r0;
        java.lang.Object $r2;

        r0 := @this: com.mongodb.Response;

        i0 := @parameter0: int;

        $r1 = r0.<com.mongodb.Response: java.util.List _objects>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (com.mongodb.DBObject) $r2;

        return $r3;
    }

    public java.util.Iterator iterator()
    {
        com.mongodb.Response r0;
        java.util.List $r1;
        java.util.Iterator $r2;

        r0 := @this: com.mongodb.Response;

        $r1 = r0.<com.mongodb.Response: java.util.List _objects>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        return $r2;
    }

    public boolean hasGetMore(int)
    {
        java.io.PrintStream $r1;
        long $l0;
        java.lang.Exception $r2;
        byte $b1;
        int $i2, i3, $i4, $i5, $i6, $i7;
        com.mongodb.Response r0;

        r0 := @this: com.mongodb.Response;

        i3 := @parameter0: int;

        $l0 = r0.<com.mongodb.Response: long _cursor>;

        $b1 = $l0 cmp 0L;

        $i7 = (int) $b1;

        if $i7 > 0 goto label1;

        return 0;

     label1:
        $i2 = r0.<com.mongodb.Response: int _num>;

        if $i2 <= 0 goto label2;

        return 1;

     label2:
        $i4 = i3 & 2;

        if $i4 != 0 goto label3;

        return 0;

     label3:
        $i5 = r0.<com.mongodb.Response: int _flags>;

        $i6 = $i5 & 8;

        if $i6 <= 0 goto label4;

        return 1;

     label4:
        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("sleep");

        staticinvoke <java.lang.Thread: void sleep(long)>(1000L);

     label5:
        goto label7;

     label6:
        $r2 := @caughtexception;

     label7:
        return 1;

        catch java.lang.Exception from label4 to label5 with label6;
    }

    public long cursor()
    {
        com.mongodb.Response r0;
        long $l0;

        r0 := @this: com.mongodb.Response;

        $l0 = r0.<com.mongodb.Response: long _cursor>;

        return $l0;
    }

    public com.mongodb.ServerError getError()
    {
        com.mongodb.DBObject $r1;
        int $i0;
        com.mongodb.Response r0;
        java.lang.String $r2;
        com.mongodb.ServerError $r3;

        r0 := @this: com.mongodb.Response;

        $i0 = r0.<com.mongodb.Response: int _num>;

        if $i0 == 1 goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<com.mongodb.Response: com.mongodb.DBObject get(int)>(0);

        $r2 = staticinvoke <com.mongodb.ServerError: java.lang.String getMsg(org.bson.BSONObject,java.lang.String)>($r1, null);

        if $r2 != null goto label2;

        return null;

     label2:
        $r3 = new com.mongodb.ServerError;

        specialinvoke $r3.<com.mongodb.ServerError: void <init>(com.mongodb.DBObject)>($r1);

        return $r3;
    }

    public java.lang.String toString()
    {
        long $l1;
        int $i0, $i2, $i3;
        com.mongodb.Response r2;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        java.lang.String $r10;

        r2 := @this: com.mongodb.Response;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("flags:");

        $i0 = r2.<com.mongodb.Response: int _flags>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" _cursor:");

        $l1 = r2.<com.mongodb.Response: long _cursor>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" _startingFrom:");

        $i2 = r2.<com.mongodb.Response: int _startingFrom>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" _num:");

        $i3 = r2.<com.mongodb.Response: int _num>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    static void <clinit>()
    {
        com.mongodb.Response$1 $r0;

        $r0 = new com.mongodb.Response$1;

        specialinvoke $r0.<com.mongodb.Response$1: void <init>()>();

        <com.mongodb.Response: java.lang.ThreadLocal TL> = $r0;

        return;
    }
}
