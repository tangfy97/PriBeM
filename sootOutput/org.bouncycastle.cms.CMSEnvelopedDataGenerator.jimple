public class org.bouncycastle.cms.CMSEnvelopedDataGenerator extends org.bouncycastle.cms.CMSEnvelopedGenerator
{

    public void <init>()
    {
        org.bouncycastle.cms.CMSEnvelopedDataGenerator r0;

        r0 := @this: org.bouncycastle.cms.CMSEnvelopedDataGenerator;

        specialinvoke r0.<org.bouncycastle.cms.CMSEnvelopedGenerator: void <init>()>();

        return;
    }

    public void <init>(java.security.SecureRandom)
    {
        java.security.SecureRandom r1;
        org.bouncycastle.cms.CMSEnvelopedDataGenerator r0;

        r0 := @this: org.bouncycastle.cms.CMSEnvelopedDataGenerator;

        r1 := @parameter0: java.security.SecureRandom;

        specialinvoke r0.<org.bouncycastle.cms.CMSEnvelopedGenerator: void <init>(java.security.SecureRandom)>(r1);

        return;
    }

    private org.bouncycastle.cms.CMSEnvelopedData generate(org.bouncycastle.cms.CMSProcessable, java.lang.String, javax.crypto.KeyGenerator, java.security.Provider) throws java.security.NoSuchAlgorithmException, org.bouncycastle.cms.CMSException
    {
        byte[] $r15;
        org.bouncycastle.cms.CMSEnvelopedDataGenerator r7;
        javax.crypto.KeyGenerator r0;
        java.security.SecureRandom $r9, $r27;
        java.security.GeneralSecurityException $r29;
        org.bouncycastle.asn1.cms.EnvelopedData $r21;
        boolean $z0;
        org.bouncycastle.asn1.DERObjectIdentifier $r19, $r23;
        org.bouncycastle.cms.CMSEnvelopedData $r24;
        org.bouncycastle.asn1.DERSet $r22;
        java.security.Provider $r1, r26;
        java.util.List $r16;
        org.bouncycastle.asn1.cms.ContentInfo $r20;
        java.security.InvalidKeyException $r31, $r39;
        javax.crypto.SecretKey $r6;
        java.io.ByteArrayOutputStream $r11;
        org.bouncycastle.cms.CMSException $r30, $r32, $r34, $r36, $r38, $r40;
        org.bouncycastle.asn1.cms.EncryptedContentInfo $r18;
        org.bouncycastle.asn1.BERConstructedOctetString $r14;
        javax.crypto.Cipher $r5;
        org.bouncycastle.cms.CMSEnvelopedHelper $r4;
        java.security.InvalidAlgorithmParameterException $r35;
        javax.crypto.NoSuchPaddingException $r37;
        org.bouncycastle.asn1.cms.RecipientInfo $r28;
        java.lang.String r3;
        javax.crypto.CipherOutputStream $r12;
        java.util.Iterator $r17;
        org.bouncycastle.asn1.ASN1EncodableVector $r2;
        java.io.IOException $r33;
        org.bouncycastle.cms.CMSProcessable r13;
        java.security.AlgorithmParameters $r8, r41;
        org.bouncycastle.cms.RecipientInfoGenerator r42;
        java.lang.Object $r25;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r10;

        r7 := @this: org.bouncycastle.cms.CMSEnvelopedDataGenerator;

        r13 := @parameter0: org.bouncycastle.cms.CMSProcessable;

        r3 := @parameter1: java.lang.String;

        r0 := @parameter2: javax.crypto.KeyGenerator;

        r26 := @parameter3: java.security.Provider;

        $r1 = virtualinvoke r0.<javax.crypto.KeyGenerator: java.security.Provider getProvider()>();

        $r2 = new org.bouncycastle.asn1.ASN1EncodableVector;

        specialinvoke $r2.<org.bouncycastle.asn1.ASN1EncodableVector: void <init>()>();

     label01:
        $r4 = <org.bouncycastle.cms.CMSEnvelopedHelper: org.bouncycastle.cms.CMSEnvelopedHelper INSTANCE>;

        $r5 = virtualinvoke $r4.<org.bouncycastle.cms.CMSEnvelopedHelper: javax.crypto.Cipher getSymmetricCipher(java.lang.String,java.security.Provider)>(r3, $r1);

        $r6 = virtualinvoke r0.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>();

        $r8 = virtualinvoke r7.<org.bouncycastle.cms.CMSEnvelopedDataGenerator: java.security.AlgorithmParameters generateParameters(java.lang.String,javax.crypto.SecretKey,java.security.Provider)>(r3, $r6, $r1);

        r41 = $r8;

        $r9 = r7.<org.bouncycastle.cms.CMSEnvelopedDataGenerator: java.security.SecureRandom rand>;

        virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)>(1, $r6, $r8, $r9);

        if $r8 != null goto label02;

        r41 = virtualinvoke $r5.<javax.crypto.Cipher: java.security.AlgorithmParameters getParameters()>();

     label02:
        $r10 = virtualinvoke r7.<org.bouncycastle.cms.CMSEnvelopedDataGenerator: org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(java.lang.String,java.security.AlgorithmParameters)>(r3, r41);

        $r11 = new java.io.ByteArrayOutputStream;

        specialinvoke $r11.<java.io.ByteArrayOutputStream: void <init>()>();

        $r12 = new javax.crypto.CipherOutputStream;

        specialinvoke $r12.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r11, $r5);

        interfaceinvoke r13.<org.bouncycastle.cms.CMSProcessable: void write(java.io.OutputStream)>($r12);

        virtualinvoke $r12.<javax.crypto.CipherOutputStream: void close()>();

        $r14 = new org.bouncycastle.asn1.BERConstructedOctetString;

        $r15 = virtualinvoke $r11.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r14.<org.bouncycastle.asn1.BERConstructedOctetString: void <init>(byte[])>($r15);

     label03:
        goto label08;

     label04:
        $r39 := @caughtexception;

        $r40 = new org.bouncycastle.cms.CMSException;

        specialinvoke $r40.<org.bouncycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("key invalid in message.", $r39);

        throw $r40;

     label05:
        $r37 := @caughtexception;

        $r38 = new org.bouncycastle.cms.CMSException;

        specialinvoke $r38.<org.bouncycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("required padding not supported.", $r37);

        throw $r38;

     label06:
        $r35 := @caughtexception;

        $r36 = new org.bouncycastle.cms.CMSException;

        specialinvoke $r36.<org.bouncycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("algorithm parameters invalid.", $r35);

        throw $r36;

     label07:
        $r33 := @caughtexception;

        $r34 = new org.bouncycastle.cms.CMSException;

        specialinvoke $r34.<org.bouncycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("exception decoding algorithm parameters.", $r33);

        throw $r34;

     label08:
        $r16 = r7.<org.bouncycastle.cms.CMSEnvelopedDataGenerator: java.util.List recipientInfoGenerators>;

        $r17 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label15;

        $r25 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r42 = (org.bouncycastle.cms.RecipientInfoGenerator) $r25;

     label10:
        $r27 = r7.<org.bouncycastle.cms.CMSEnvelopedDataGenerator: java.security.SecureRandom rand>;

        $r28 = interfaceinvoke r42.<org.bouncycastle.cms.RecipientInfoGenerator: org.bouncycastle.asn1.cms.RecipientInfo generate(javax.crypto.SecretKey,java.security.SecureRandom,java.security.Provider)>($r6, $r27, r26);

        virtualinvoke $r2.<org.bouncycastle.asn1.ASN1EncodableVector: void add(org.bouncycastle.asn1.DEREncodable)>($r28);

     label11:
        goto label14;

     label12:
        $r31 := @caughtexception;

        $r32 = new org.bouncycastle.cms.CMSException;

        specialinvoke $r32.<org.bouncycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("key inappropriate for algorithm.", $r31);

        throw $r32;

     label13:
        $r29 := @caughtexception;

        $r30 = new org.bouncycastle.cms.CMSException;

        specialinvoke $r30.<org.bouncycastle.cms.CMSException: void <init>(java.lang.String,java.lang.Exception)>("error making encrypted content.", $r29);

        throw $r30;

     label14:
        goto label09;

     label15:
        $r18 = new org.bouncycastle.asn1.cms.EncryptedContentInfo;

        $r19 = <org.bouncycastle.asn1.cms.CMSObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier data>;

        specialinvoke $r18.<org.bouncycastle.asn1.cms.EncryptedContentInfo: void <init>(org.bouncycastle.asn1.DERObjectIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1OctetString)>($r19, $r10, $r14);

        $r20 = new org.bouncycastle.asn1.cms.ContentInfo;

        $r23 = <org.bouncycastle.asn1.cms.CMSObjectIdentifiers: org.bouncycastle.asn1.DERObjectIdentifier envelopedData>;

        $r21 = new org.bouncycastle.asn1.cms.EnvelopedData;

        $r22 = new org.bouncycastle.asn1.DERSet;

        specialinvoke $r22.<org.bouncycastle.asn1.DERSet: void <init>(org.bouncycastle.asn1.DEREncodableVector)>($r2);

        specialinvoke $r21.<org.bouncycastle.asn1.cms.EnvelopedData: void <init>(org.bouncycastle.asn1.cms.OriginatorInfo,org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.cms.EncryptedContentInfo,org.bouncycastle.asn1.ASN1Set)>(null, $r22, $r18, null);

        specialinvoke $r20.<org.bouncycastle.asn1.cms.ContentInfo: void <init>(org.bouncycastle.asn1.DERObjectIdentifier,org.bouncycastle.asn1.DEREncodable)>($r23, $r21);

        $r24 = new org.bouncycastle.cms.CMSEnvelopedData;

        specialinvoke $r24.<org.bouncycastle.cms.CMSEnvelopedData: void <init>(org.bouncycastle.asn1.cms.ContentInfo)>($r20);

        return $r24;

        catch java.security.InvalidKeyException from label01 to label03 with label04;
        catch javax.crypto.NoSuchPaddingException from label01 to label03 with label05;
        catch java.security.InvalidAlgorithmParameterException from label01 to label03 with label06;
        catch java.io.IOException from label01 to label03 with label07;
        catch java.security.InvalidKeyException from label10 to label11 with label12;
        catch java.security.GeneralSecurityException from label10 to label11 with label13;
    }

    public org.bouncycastle.cms.CMSEnvelopedData generate(org.bouncycastle.cms.CMSProcessable, java.lang.String, java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException, org.bouncycastle.cms.CMSException
    {
        org.bouncycastle.cms.CMSEnvelopedData $r5;
        org.bouncycastle.cms.CMSEnvelopedDataGenerator r0;
        org.bouncycastle.cms.CMSProcessable r1;
        java.lang.String r2, r3;
        java.security.Provider $r4;

        r0 := @this: org.bouncycastle.cms.CMSEnvelopedDataGenerator;

        r1 := @parameter0: org.bouncycastle.cms.CMSProcessable;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = staticinvoke <org.bouncycastle.cms.CMSUtils: java.security.Provider getProvider(java.lang.String)>(r3);

        $r5 = virtualinvoke r0.<org.bouncycastle.cms.CMSEnvelopedDataGenerator: org.bouncycastle.cms.CMSEnvelopedData generate(org.bouncycastle.cms.CMSProcessable,java.lang.String,java.security.Provider)>(r1, r2, $r4);

        return $r5;
    }

    public org.bouncycastle.cms.CMSEnvelopedData generate(org.bouncycastle.cms.CMSProcessable, java.lang.String, java.security.Provider) throws java.security.NoSuchAlgorithmException, org.bouncycastle.cms.CMSException
    {
        org.bouncycastle.cms.CMSEnvelopedData $r7;
        org.bouncycastle.cms.CMSEnvelopedDataGenerator r4;
        org.bouncycastle.cms.CMSProcessable r6;
        org.bouncycastle.cms.CMSEnvelopedHelper $r2;
        javax.crypto.KeyGenerator $r3;
        java.security.Provider r1;
        java.security.SecureRandom $r5;
        java.lang.String r0;

        r4 := @this: org.bouncycastle.cms.CMSEnvelopedDataGenerator;

        r6 := @parameter0: org.bouncycastle.cms.CMSProcessable;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.security.Provider;

        $r2 = <org.bouncycastle.cms.CMSEnvelopedHelper: org.bouncycastle.cms.CMSEnvelopedHelper INSTANCE>;

        $r3 = virtualinvoke $r2.<org.bouncycastle.cms.CMSEnvelopedHelper: javax.crypto.KeyGenerator createSymmetricKeyGenerator(java.lang.String,java.security.Provider)>(r0, r1);

        $r5 = r4.<org.bouncycastle.cms.CMSEnvelopedDataGenerator: java.security.SecureRandom rand>;

        virtualinvoke $r3.<javax.crypto.KeyGenerator: void init(java.security.SecureRandom)>($r5);

        $r7 = specialinvoke r4.<org.bouncycastle.cms.CMSEnvelopedDataGenerator: org.bouncycastle.cms.CMSEnvelopedData generate(org.bouncycastle.cms.CMSProcessable,java.lang.String,javax.crypto.KeyGenerator,java.security.Provider)>(r6, r0, $r3, r1);

        return $r7;
    }

    public org.bouncycastle.cms.CMSEnvelopedData generate(org.bouncycastle.cms.CMSProcessable, java.lang.String, int, java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException, org.bouncycastle.cms.CMSException
    {
        org.bouncycastle.cms.CMSEnvelopedData $r5;
        org.bouncycastle.cms.CMSEnvelopedDataGenerator r0;
        int i0;
        org.bouncycastle.cms.CMSProcessable r1;
        java.lang.String r2, r3;
        java.security.Provider $r4;

        r0 := @this: org.bouncycastle.cms.CMSEnvelopedDataGenerator;

        r1 := @parameter0: org.bouncycastle.cms.CMSProcessable;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        $r4 = staticinvoke <org.bouncycastle.cms.CMSUtils: java.security.Provider getProvider(java.lang.String)>(r3);

        $r5 = virtualinvoke r0.<org.bouncycastle.cms.CMSEnvelopedDataGenerator: org.bouncycastle.cms.CMSEnvelopedData generate(org.bouncycastle.cms.CMSProcessable,java.lang.String,int,java.security.Provider)>(r1, r2, i0, $r4);

        return $r5;
    }

    public org.bouncycastle.cms.CMSEnvelopedData generate(org.bouncycastle.cms.CMSProcessable, java.lang.String, int, java.security.Provider) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException, org.bouncycastle.cms.CMSException
    {
        org.bouncycastle.cms.CMSEnvelopedData $r7;
        org.bouncycastle.cms.CMSEnvelopedDataGenerator r4;
        org.bouncycastle.cms.CMSProcessable r6;
        org.bouncycastle.cms.CMSEnvelopedHelper $r2;
        javax.crypto.KeyGenerator $r3;
        java.security.Provider r1;
        java.security.SecureRandom $r5;
        int i0;
        java.lang.String r0;

        r4 := @this: org.bouncycastle.cms.CMSEnvelopedDataGenerator;

        r6 := @parameter0: org.bouncycastle.cms.CMSProcessable;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r1 := @parameter3: java.security.Provider;

        $r2 = <org.bouncycastle.cms.CMSEnvelopedHelper: org.bouncycastle.cms.CMSEnvelopedHelper INSTANCE>;

        $r3 = virtualinvoke $r2.<org.bouncycastle.cms.CMSEnvelopedHelper: javax.crypto.KeyGenerator createSymmetricKeyGenerator(java.lang.String,java.security.Provider)>(r0, r1);

        $r5 = r4.<org.bouncycastle.cms.CMSEnvelopedDataGenerator: java.security.SecureRandom rand>;

        virtualinvoke $r3.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(i0, $r5);

        $r7 = specialinvoke r4.<org.bouncycastle.cms.CMSEnvelopedDataGenerator: org.bouncycastle.cms.CMSEnvelopedData generate(org.bouncycastle.cms.CMSProcessable,java.lang.String,javax.crypto.KeyGenerator,java.security.Provider)>(r6, r0, $r3, r1);

        return $r7;
    }
}
