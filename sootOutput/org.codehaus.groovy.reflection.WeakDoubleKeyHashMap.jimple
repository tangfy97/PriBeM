public class org.codehaus.groovy.reflection.WeakDoubleKeyHashMap extends org.codehaus.groovy.reflection.ComplexKeyHashMap
{
    private final java.lang.ref.ReferenceQueue queue;

    public void <init>()
    {
        org.codehaus.groovy.reflection.WeakDoubleKeyHashMap r0;
        java.lang.ref.ReferenceQueue $r1;

        r0 := @this: org.codehaus.groovy.reflection.WeakDoubleKeyHashMap;

        specialinvoke r0.<org.codehaus.groovy.reflection.ComplexKeyHashMap: void <init>()>();

        $r1 = new java.lang.ref.ReferenceQueue;

        specialinvoke $r1.<java.lang.ref.ReferenceQueue: void <init>()>();

        r0.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: java.lang.ref.ReferenceQueue queue> = $r1;

        return;
    }

    private void expungeStaleEntries()
    {
        org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry[] $r2, $r3, $r7;
        java.lang.ref.ReferenceQueue $r8;
        org.codehaus.groovy.reflection.WeakDoubleKeyHashMap r0;
        int i0, $i1, $i2, i3, $i4, $i5;
        org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry $r4, $r5;
        org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Ref $r10;
        java.lang.ref.Reference $r9;
        org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry r1, r6, r11, r12;

        r0 := @this: org.codehaus.groovy.reflection.WeakDoubleKeyHashMap;

     label1:
        $r8 = r0.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: java.lang.ref.ReferenceQueue queue>;

        $r9 = virtualinvoke $r8.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>();

        $r10 = (org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Ref) $r9;

        if $r10 == null goto label8;

        r1 = $r10.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Ref: org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry entry>;

        if r1 != null goto label2;

        goto label1;

     label2:
        $r10.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Ref: org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry entry> = null;

        r1.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry: org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Ref key2> = null;

        r1.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry: org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Ref key1> = null;

        i0 = r1.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry: int hash>;

        $r2 = r0.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry[] table>;

        $i1 = lengthof $r2;

        $i2 = $i1 - 1;

        i3 = i0 & $i2;

        $r3 = r0.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry[] table>;

        $r4 = $r3[i3];

        r11 = (org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry) $r4;

        r12 = r11;

     label3:
        if r12 == null goto label7;

        $r5 = r12.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry next>;

        r6 = (org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry) $r5;

        if r12 != r1 goto label6;

        if r11 != r1 goto label4;

        $r7 = r0.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry[] table>;

        $r7[i3] = r6;

        goto label5;

     label4:
        r11.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry next> = r6;

     label5:
        r1.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry next> = null;

        r1.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry: java.lang.Object value> = null;

        $i4 = r0.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: int size>;

        $i5 = $i4 - 1;

        r0.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: int size> = $i5;

        goto label7;

     label6:
        r11 = r12;

        r12 = r6;

        goto label3;

     label7:
        goto label1;

     label8:
        return;
    }

    public final java.lang.Object get(java.lang.Object, java.lang.Object)
    {
        org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry[] $r3, $r4;
        org.codehaus.groovy.reflection.WeakDoubleKeyHashMap r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry r6;
        boolean $z0;
        java.lang.Object r0, r1;
        org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry $r5;

        r2 := @this: org.codehaus.groovy.reflection.WeakDoubleKeyHashMap;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $i1 = 31 * $i0;

        $i2 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        $i3 = $i1 + $i2;

        $i4 = staticinvoke <org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: int hash(int)>($i3);

        $r4 = r2.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry[] table>;

        $r3 = r2.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry[] table>;

        $i5 = lengthof $r3;

        $i6 = $i5 - 1;

        $i7 = $i4 & $i6;

        r6 = $r4[$i7];

     label1:
        if r6 == null goto label3;

        $i8 = r6.<org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry: int hash>;

        if $i8 != $i4 goto label2;

        $r5 = (org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry) r6;

        $z0 = virtualinvoke r2.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: boolean checkEquals(org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry,java.lang.Object,java.lang.Object)>($r5, r0, r1);

        if $z0 == 0 goto label2;

        return r6;

     label2:
        r6 = r6.<org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry next>;

        goto label1;

     label3:
        return null;
    }

    public boolean checkEquals(org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry, java.lang.Object, java.lang.Object)
    {
        org.codehaus.groovy.reflection.WeakDoubleKeyHashMap r8;
        org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry r0;
        java.lang.Object $r3, r4, $r6, r7;
        org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Ref $r2, $r5;
        org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry r1;
        boolean $z0;

        r8 := @this: org.codehaus.groovy.reflection.WeakDoubleKeyHashMap;

        r0 := @parameter0: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry;

        r4 := @parameter1: java.lang.Object;

        r7 := @parameter2: java.lang.Object;

        r1 = (org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry) r0;

        $r2 = r1.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry: org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Ref key1>;

        $r3 = virtualinvoke $r2.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Ref: java.lang.Object get()>();

        if $r3 != r4 goto label1;

        $r5 = r1.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry: org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Ref key2>;

        $r6 = virtualinvoke $r5.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Ref: java.lang.Object get()>();

        if $r6 != r7 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry getOrPut(java.lang.Object, java.lang.Object)
    {
        org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry[] r3;
        org.codehaus.groovy.reflection.WeakDoubleKeyHashMap r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, $i10, $i11, $i12, $i13;
        org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry $r4, r7;
        boolean $z0;
        java.lang.Object r0, r1;
        org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry $r5, $r6;

        r2 := @this: org.codehaus.groovy.reflection.WeakDoubleKeyHashMap;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $i1 = 31 * $i0;

        $i2 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        $i3 = $i1 + $i2;

        $i4 = staticinvoke <org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: int hash(int)>($i3);

        r3 = r2.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry[] table>;

        $i5 = lengthof r3;

        $i6 = $i5 - 1;

        i7 = $i4 & $i6;

        r7 = r3[i7];

     label1:
        if r7 == null goto label3;

        $i13 = r7.<org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry: int hash>;

        if $i13 != $i4 goto label2;

        $z0 = virtualinvoke r2.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: boolean checkEquals(org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry,java.lang.Object,java.lang.Object)>(r7, r0, r1);

        if $z0 == 0 goto label2;

        $r6 = (org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry) r7;

        return $r6;

     label2:
        r7 = r7.<org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry next>;

        goto label1;

     label3:
        $r4 = specialinvoke r2.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry createEntry(java.lang.Object,java.lang.Object,int,int)>(r0, r1, $i4, i7);

        r3[i7] = $r4;

        $i8 = r2.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: int size>;

        $i9 = $i8 + 1;

        r2.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: int size> = $i9;

        $i10 = r2.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: int threshold>;

        if $i9 != $i10 goto label4;

        $i11 = lengthof r3;

        $i12 = 2 * $i11;

        virtualinvoke r2.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: void resize(int)>($i12);

     label4:
        $r5 = (org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry) $r4;

        return $r5;
    }

    private org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry createEntry(java.lang.Object, java.lang.Object, int, int)
    {
        org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry[] $r2;
        java.lang.ref.ReferenceQueue $r6, $r9;
        org.codehaus.groovy.reflection.WeakDoubleKeyHashMap r0;
        int i0, i1;
        org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry $r3;
        java.lang.Object r5, r8;
        org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Ref $r4, $r7;
        org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry $r1;

        r0 := @this: org.codehaus.groovy.reflection.WeakDoubleKeyHashMap;

        r5 := @parameter0: java.lang.Object;

        r8 := @parameter1: java.lang.Object;

        i1 := @parameter2: int;

        i0 := @parameter3: int;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry createEntry()>();

        $r2 = r0.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry[] table>;

        $r3 = $r2[i0];

        $r1.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry next> = $r3;

        $r1.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry: int hash> = i1;

        $r4 = new org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Ref;

        $r6 = r0.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: java.lang.ref.ReferenceQueue queue>;

        specialinvoke $r4.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Ref: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue,org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry)>(r5, $r6, $r1);

        $r1.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry: org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Ref key1> = $r4;

        $r7 = new org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Ref;

        $r9 = r0.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: java.lang.ref.ReferenceQueue queue>;

        specialinvoke $r7.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Ref: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue,org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry)>(r8, $r9, $r1);

        $r1.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry: org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Ref key2> = $r7;

        return $r1;
    }

    public org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry createEntry()
    {
        org.codehaus.groovy.reflection.WeakDoubleKeyHashMap r0;
        org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry $r1;

        r0 := @this: org.codehaus.groovy.reflection.WeakDoubleKeyHashMap;

        specialinvoke r0.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: void expungeStaleEntries()>();

        $r1 = new org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry;

        specialinvoke $r1.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry: void <init>()>();

        return $r1;
    }

    public int size()
    {
        int $i0;
        org.codehaus.groovy.reflection.WeakDoubleKeyHashMap r0;

        r0 := @this: org.codehaus.groovy.reflection.WeakDoubleKeyHashMap;

        specialinvoke r0.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: void expungeStaleEntries()>();

        $i0 = specialinvoke r0.<org.codehaus.groovy.reflection.ComplexKeyHashMap: int size()>();

        return $i0;
    }

    public final org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry remove(java.lang.Object, java.lang.Object)
    {
        org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry[] $r3, $r4, $r8;
        org.codehaus.groovy.reflection.WeakDoubleKeyHashMap r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, $i10;
        org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry $r6, $r7, r9, r10;
        boolean $z0;
        java.lang.Object r1, r2;
        org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry $r5;

        r0 := @this: org.codehaus.groovy.reflection.WeakDoubleKeyHashMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: void expungeStaleEntries()>();

        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        $i1 = 31 * $i0;

        $i2 = virtualinvoke r2.<java.lang.Object: int hashCode()>();

        $i3 = $i1 + $i2;

        $i4 = staticinvoke <org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: int hash(int)>($i3);

        $r3 = r0.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry[] table>;

        $i5 = lengthof $r3;

        $i6 = $i5 - 1;

        i7 = $i4 & $i6;

        $r4 = r0.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry[] table>;

        r9 = $r4[i7];

        r10 = null;

     label1:
        if r9 == null goto label5;

        $i8 = r9.<org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry: int hash>;

        if $i8 != $i4 goto label4;

        $r5 = (org.codehaus.groovy.reflection.WeakDoubleKeyHashMap$Entry) r9;

        $z0 = virtualinvoke r0.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: boolean checkEquals(org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry,java.lang.Object,java.lang.Object)>($r5, r1, r2);

        if $z0 == 0 goto label4;

        if r10 != null goto label2;

        $r8 = r0.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry[] table>;

        $r7 = r9.<org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry next>;

        $r8[i7] = $r7;

        goto label3;

     label2:
        $r6 = r9.<org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry next>;

        r10.<org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry next> = $r6;

     label3:
        $i9 = r0.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: int size>;

        $i10 = $i9 - 1;

        r0.<org.codehaus.groovy.reflection.WeakDoubleKeyHashMap: int size> = $i10;

        r9.<org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry next> = null;

        return r9;

     label4:
        r10 = r9;

        r9 = r9.<org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry: org.codehaus.groovy.reflection.ComplexKeyHashMap$Entry next>;

        goto label1;

     label5:
        return null;
    }
}
