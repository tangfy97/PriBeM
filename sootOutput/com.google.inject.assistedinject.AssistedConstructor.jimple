class com.google.inject.assistedinject.AssistedConstructor extends java.lang.Object
{
    private final java.lang.reflect.Constructor constructor;
    private final com.google.inject.assistedinject.ParameterListKey assistedParameters;
    private final java.util.List allParameters;

    public void <init>(java.lang.reflect.Constructor, java.util.List)
    {
        com.google.inject.assistedinject.ParameterListKey $r6;
        java.lang.'annotation'.Annotation[] $r11;
        java.lang.reflect.Constructor r1;
        java.util.ArrayList $r3, $r4;
        int $i0, i1;
        boolean $z0;
        java.lang.'annotation'.Annotation[][] $r2;
        com.google.inject.assistedinject.Parameter $r7;
        com.google.inject.assistedinject.AssistedConstructor r0;
        java.util.List r5, $r12;
        java.lang.reflect.Type $r10, $r13;
        java.lang.Object $r8;
        com.google.inject.TypeLiteral $r9;

        r0 := @this: com.google.inject.assistedinject.AssistedConstructor;

        r1 := @parameter0: java.lang.reflect.Constructor;

        r5 := @parameter1: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.inject.assistedinject.AssistedConstructor: java.lang.reflect.Constructor constructor> = r1;

        $r2 = virtualinvoke r1.<java.lang.reflect.Constructor: java.lang.'annotation'.Annotation[][] getParameterAnnotations()>();

        $r3 = staticinvoke <com.google.inject.internal.util.$Lists: java.util.ArrayList newArrayList()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.google.inject.assistedinject.AssistedConstructor: java.util.List allParameters> = $r4;

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r5.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r7 = new com.google.inject.assistedinject.Parameter;

        $r8 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i1);

        $r9 = (com.google.inject.TypeLiteral) $r8;

        $r10 = virtualinvoke $r9.<com.google.inject.TypeLiteral: java.lang.reflect.Type getType()>();

        $r11 = $r2[i1];

        specialinvoke $r7.<com.google.inject.assistedinject.Parameter: void <init>(java.lang.reflect.Type,java.lang.'annotation'.Annotation[])>($r10, $r11);

        $r12 = r0.<com.google.inject.assistedinject.AssistedConstructor: java.util.List allParameters>;

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r7);

        $z0 = virtualinvoke $r7.<com.google.inject.assistedinject.Parameter: boolean isProvidedByFactory()>();

        if $z0 == 0 goto label2;

        $r13 = virtualinvoke $r7.<com.google.inject.assistedinject.Parameter: java.lang.reflect.Type getType()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r13);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r6 = new com.google.inject.assistedinject.ParameterListKey;

        specialinvoke $r6.<com.google.inject.assistedinject.ParameterListKey: void <init>(java.util.List)>($r3);

        r0.<com.google.inject.assistedinject.AssistedConstructor: com.google.inject.assistedinject.ParameterListKey assistedParameters> = $r6;

        return;
    }

    public com.google.inject.assistedinject.ParameterListKey getAssistedParameters()
    {
        com.google.inject.assistedinject.ParameterListKey $r1;
        com.google.inject.assistedinject.AssistedConstructor r0;

        r0 := @this: com.google.inject.assistedinject.AssistedConstructor;

        $r1 = r0.<com.google.inject.assistedinject.AssistedConstructor: com.google.inject.assistedinject.ParameterListKey assistedParameters>;

        return $r1;
    }

    public java.util.List getAllParameters()
    {
        java.util.List $r1;
        com.google.inject.assistedinject.AssistedConstructor r0;

        r0 := @this: com.google.inject.assistedinject.AssistedConstructor;

        $r1 = r0.<com.google.inject.assistedinject.AssistedConstructor: java.util.List allParameters>;

        return $r1;
    }

    public java.util.Set getDeclaredExceptions()
    {
        java.util.HashSet $r0;
        java.util.List $r4;
        java.lang.Class[] $r3;
        java.lang.reflect.Constructor $r2;
        com.google.inject.assistedinject.AssistedConstructor r1;

        r1 := @this: com.google.inject.assistedinject.AssistedConstructor;

        $r0 = new java.util.HashSet;

        $r2 = r1.<com.google.inject.assistedinject.AssistedConstructor: java.lang.reflect.Constructor constructor>;

        $r3 = virtualinvoke $r2.<java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()>();

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);

        specialinvoke $r0.<java.util.HashSet: void <init>(java.util.Collection)>($r4);

        return $r0;
    }

    public java.lang.Object newInstance(java.lang.Object[]) throws java.lang.Throwable
    {
        java.lang.Throwable $r6;
        java.lang.Object[] r2;
        java.lang.Object $r4;
        java.lang.reflect.Constructor $r1, $r3;
        com.google.inject.assistedinject.AssistedConstructor r0;
        java.lang.reflect.InvocationTargetException $r5;

        r0 := @this: com.google.inject.assistedinject.AssistedConstructor;

        r2 := @parameter0: java.lang.Object[];

        $r1 = r0.<com.google.inject.assistedinject.AssistedConstructor: java.lang.reflect.Constructor constructor>;

        virtualinvoke $r1.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

     label1:
        $r3 = r0.<com.google.inject.assistedinject.AssistedConstructor: java.lang.reflect.Constructor constructor>;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(r2);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = virtualinvoke $r5.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        throw $r6;

        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        java.lang.String $r2;
        java.lang.reflect.Constructor $r1;
        com.google.inject.assistedinject.AssistedConstructor r0;

        r0 := @this: com.google.inject.assistedinject.AssistedConstructor;

        $r1 = r0.<com.google.inject.assistedinject.AssistedConstructor: java.lang.reflect.Constructor constructor>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Constructor: java.lang.String toString()>();

        return $r2;
    }
}
