public abstract class org.apache.http.pool.PoolEntry extends java.lang.Object
{
    private final java.lang.String id;
    private final java.lang.Object route;
    private final java.lang.Object conn;
    private final long created;
    private final long validUnit;
    private long updated;
    private long expiry;
    private volatile java.lang.Object state;

    public void <init>(java.lang.String, java.lang.Object, java.lang.Object, long, java.util.concurrent.TimeUnit)
    {
        org.apache.http.pool.PoolEntry r0;
        long $l0, l1, $l3, $l4, $l5, $l6;
        byte $b2;
        int $i7;
        java.lang.String r4;
        java.lang.IllegalArgumentException $r8, $r9, $r10;
        java.util.concurrent.TimeUnit r3;
        java.lang.Object r1, r2;

        r0 := @this: org.apache.http.pool.PoolEntry;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        l1 := @parameter3: long;

        r3 := @parameter4: java.util.concurrent.TimeUnit;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Route may not be null");

        throw $r8;

     label1:
        if r2 != null goto label2;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connection may not be null");

        throw $r9;

     label2:
        if r3 != null goto label3;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Time unit may not be null");

        throw $r10;

     label3:
        r0.<org.apache.http.pool.PoolEntry: java.lang.String id> = r4;

        r0.<org.apache.http.pool.PoolEntry: java.lang.Object route> = r1;

        r0.<org.apache.http.pool.PoolEntry: java.lang.Object conn> = r2;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<org.apache.http.pool.PoolEntry: long created> = $l0;

        $b2 = l1 cmp 0L;

        $i7 = (int) $b2;

        if $i7 <= 0 goto label4;

        $l4 = r0.<org.apache.http.pool.PoolEntry: long created>;

        $l5 = virtualinvoke r3.<java.util.concurrent.TimeUnit: long toMillis(long)>(l1);

        $l6 = $l4 + $l5;

        r0.<org.apache.http.pool.PoolEntry: long validUnit> = $l6;

        goto label5;

     label4:
        r0.<org.apache.http.pool.PoolEntry: long validUnit> = 9223372036854775807L;

     label5:
        $l3 = r0.<org.apache.http.pool.PoolEntry: long validUnit>;

        r0.<org.apache.http.pool.PoolEntry: long expiry> = $l3;

        return;
    }

    public void <init>(java.lang.String, java.lang.Object, java.lang.Object)
    {
        java.util.concurrent.TimeUnit $r4;
        org.apache.http.pool.PoolEntry r0;
        java.lang.Object r2, r3;
        java.lang.String r1;

        r0 := @this: org.apache.http.pool.PoolEntry;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r4 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        specialinvoke r0.<org.apache.http.pool.PoolEntry: void <init>(java.lang.String,java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit)>(r1, r2, r3, 0L, $r4);

        return;
    }

    public java.lang.String getId()
    {
        org.apache.http.pool.PoolEntry r0;
        java.lang.String $r1;

        r0 := @this: org.apache.http.pool.PoolEntry;

        $r1 = r0.<org.apache.http.pool.PoolEntry: java.lang.String id>;

        return $r1;
    }

    public java.lang.Object getRoute()
    {
        java.lang.Object $r1;
        org.apache.http.pool.PoolEntry r0;

        r0 := @this: org.apache.http.pool.PoolEntry;

        $r1 = r0.<org.apache.http.pool.PoolEntry: java.lang.Object route>;

        return $r1;
    }

    public java.lang.Object getConnection()
    {
        java.lang.Object $r1;
        org.apache.http.pool.PoolEntry r0;

        r0 := @this: org.apache.http.pool.PoolEntry;

        $r1 = r0.<org.apache.http.pool.PoolEntry: java.lang.Object conn>;

        return $r1;
    }

    public long getCreated()
    {
        long $l0;
        org.apache.http.pool.PoolEntry r0;

        r0 := @this: org.apache.http.pool.PoolEntry;

        $l0 = r0.<org.apache.http.pool.PoolEntry: long created>;

        return $l0;
    }

    public long getValidUnit()
    {
        long $l0;
        org.apache.http.pool.PoolEntry r0;

        r0 := @this: org.apache.http.pool.PoolEntry;

        $l0 = r0.<org.apache.http.pool.PoolEntry: long validUnit>;

        return $l0;
    }

    public java.lang.Object getState()
    {
        java.lang.Object $r1;
        org.apache.http.pool.PoolEntry r0;

        r0 := @this: org.apache.http.pool.PoolEntry;

        $r1 = r0.<org.apache.http.pool.PoolEntry: java.lang.Object state>;

        return $r1;
    }

    public void setState(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.http.pool.PoolEntry r0;

        r0 := @this: org.apache.http.pool.PoolEntry;

        r1 := @parameter0: java.lang.Object;

        r0.<org.apache.http.pool.PoolEntry: java.lang.Object state> = r1;

        return;
    }

    public synchronized long getUpdated()
    {
        long $l0;
        org.apache.http.pool.PoolEntry r0;

        r0 := @this: org.apache.http.pool.PoolEntry;

        $l0 = r0.<org.apache.http.pool.PoolEntry: long updated>;

        return $l0;
    }

    public synchronized long getExpiry()
    {
        long $l0;
        org.apache.http.pool.PoolEntry r0;

        r0 := @this: org.apache.http.pool.PoolEntry;

        $l0 = r0.<org.apache.http.pool.PoolEntry: long expiry>;

        return $l0;
    }

    public synchronized void updateExpiry(long, java.util.concurrent.TimeUnit)
    {
        org.apache.http.pool.PoolEntry r1;
        long $l0, l1, $l3, $l4, $l5, $l6, l7;
        java.lang.IllegalArgumentException $r3;
        java.util.concurrent.TimeUnit r0;
        byte $b2;
        int $i8;

        r1 := @this: org.apache.http.pool.PoolEntry;

        l1 := @parameter0: long;

        r0 := @parameter1: java.util.concurrent.TimeUnit;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Time unit may not be null");

        throw $r3;

     label1:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r1.<org.apache.http.pool.PoolEntry: long updated> = $l0;

        $b2 = l1 cmp 0L;

        $i8 = (int) $b2;

        if $i8 <= 0 goto label2;

        $l5 = r1.<org.apache.http.pool.PoolEntry: long updated>;

        $l6 = virtualinvoke r0.<java.util.concurrent.TimeUnit: long toMillis(long)>(l1);

        l7 = $l5 + $l6;

        goto label3;

     label2:
        l7 = 9223372036854775807L;

     label3:
        $l3 = r1.<org.apache.http.pool.PoolEntry: long validUnit>;

        $l4 = staticinvoke <java.lang.Math: long min(long,long)>(l7, $l3);

        r1.<org.apache.http.pool.PoolEntry: long expiry> = $l4;

        return;
    }

    public synchronized boolean isExpired(long)
    {
        org.apache.http.pool.PoolEntry r0;
        byte $b2;
        int $i3;
        long l0, $l1;
        boolean $z0;

        r0 := @this: org.apache.http.pool.PoolEntry;

        l0 := @parameter0: long;

        $l1 = r0.<org.apache.http.pool.PoolEntry: long expiry>;

        $b2 = l0 cmp $l1;

        $i3 = (int) $b2;

        if $i3 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public abstract void close();

    public abstract boolean isClosed();

    public java.lang.String toString()
    {
        org.apache.http.pool.PoolEntry r1;
        java.lang.StringBuilder $r0;
        java.lang.Object $r3, $r4;
        java.lang.String $r2, $r5;

        r1 := @this: org.apache.http.pool.PoolEntry;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[id:");

        $r2 = r1.<org.apache.http.pool.PoolEntry: java.lang.String id>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][route:");

        $r3 = r1.<org.apache.http.pool.PoolEntry: java.lang.Object route>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][state:");

        $r4 = r1.<org.apache.http.pool.PoolEntry: java.lang.Object state>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }
}
