public class org.apache.batik.gvt.FillShapePainter extends java.lang.Object implements org.apache.batik.gvt.ShapePainter
{
    protected java.awt.Shape shape;
    protected java.awt.Paint paint;

    public void <init>(java.awt.Shape)
    {
        java.awt.Shape r1;
        java.lang.IllegalArgumentException $r2;
        org.apache.batik.gvt.FillShapePainter r0;

        r0 := @this: org.apache.batik.gvt.FillShapePainter;

        r1 := @parameter0: java.awt.Shape;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Shape can not be null!");

        throw $r2;

     label1:
        r0.<org.apache.batik.gvt.FillShapePainter: java.awt.Shape shape> = r1;

        return;
    }

    public void setPaint(java.awt.Paint)
    {
        java.awt.Paint r1;
        org.apache.batik.gvt.FillShapePainter r0;

        r0 := @this: org.apache.batik.gvt.FillShapePainter;

        r1 := @parameter0: java.awt.Paint;

        r0.<org.apache.batik.gvt.FillShapePainter: java.awt.Paint paint> = r1;

        return;
    }

    public java.awt.Paint getPaint()
    {
        java.awt.Paint $r1;
        org.apache.batik.gvt.FillShapePainter r0;

        r0 := @this: org.apache.batik.gvt.FillShapePainter;

        $r1 = r0.<org.apache.batik.gvt.FillShapePainter: java.awt.Paint paint>;

        return $r1;
    }

    public void paint(java.awt.Graphics2D)
    {
        java.awt.Shape $r4;
        java.awt.Paint $r1, $r3;
        java.awt.Graphics2D r2;
        org.apache.batik.gvt.FillShapePainter r0;

        r0 := @this: org.apache.batik.gvt.FillShapePainter;

        r2 := @parameter0: java.awt.Graphics2D;

        $r1 = r0.<org.apache.batik.gvt.FillShapePainter: java.awt.Paint paint>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.batik.gvt.FillShapePainter: java.awt.Paint paint>;

        virtualinvoke r2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r3);

        $r4 = r0.<org.apache.batik.gvt.FillShapePainter: java.awt.Shape shape>;

        virtualinvoke r2.<java.awt.Graphics2D: void fill(java.awt.Shape)>($r4);

     label1:
        return;
    }

    public java.awt.Shape getPaintedArea()
    {
        java.awt.Shape $r2;
        java.awt.Paint $r1;
        org.apache.batik.gvt.FillShapePainter r0;

        r0 := @this: org.apache.batik.gvt.FillShapePainter;

        $r1 = r0.<org.apache.batik.gvt.FillShapePainter: java.awt.Paint paint>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.batik.gvt.FillShapePainter: java.awt.Shape shape>;

        return $r2;
    }

    public java.awt.geom.Rectangle2D getPaintedBounds2D()
    {
        java.awt.Shape $r2, $r3;
        java.awt.Paint $r1;
        org.apache.batik.gvt.FillShapePainter r0;
        java.awt.geom.Rectangle2D $r4;

        r0 := @this: org.apache.batik.gvt.FillShapePainter;

        $r1 = r0.<org.apache.batik.gvt.FillShapePainter: java.awt.Paint paint>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.batik.gvt.FillShapePainter: java.awt.Shape shape>;

        if $r2 != null goto label2;

     label1:
        return null;

     label2:
        $r3 = r0.<org.apache.batik.gvt.FillShapePainter: java.awt.Shape shape>;

        $r4 = interfaceinvoke $r3.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>();

        return $r4;
    }

    public boolean inPaintedArea(java.awt.geom.Point2D)
    {
        java.awt.Shape $r2, $r4;
        java.awt.geom.Point2D r3;
        java.awt.Paint $r1;
        org.apache.batik.gvt.FillShapePainter r0;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.FillShapePainter;

        r3 := @parameter0: java.awt.geom.Point2D;

        $r1 = r0.<org.apache.batik.gvt.FillShapePainter: java.awt.Paint paint>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.batik.gvt.FillShapePainter: java.awt.Shape shape>;

        if $r2 != null goto label2;

     label1:
        return 0;

     label2:
        $r4 = r0.<org.apache.batik.gvt.FillShapePainter: java.awt.Shape shape>;

        $z0 = interfaceinvoke $r4.<java.awt.Shape: boolean contains(java.awt.geom.Point2D)>(r3);

        return $z0;
    }

    public java.awt.Shape getSensitiveArea()
    {
        java.awt.Shape $r1;
        org.apache.batik.gvt.FillShapePainter r0;

        r0 := @this: org.apache.batik.gvt.FillShapePainter;

        $r1 = r0.<org.apache.batik.gvt.FillShapePainter: java.awt.Shape shape>;

        return $r1;
    }

    public java.awt.geom.Rectangle2D getSensitiveBounds2D()
    {
        java.awt.Shape $r1, $r2;
        org.apache.batik.gvt.FillShapePainter r0;
        java.awt.geom.Rectangle2D $r3;

        r0 := @this: org.apache.batik.gvt.FillShapePainter;

        $r1 = r0.<org.apache.batik.gvt.FillShapePainter: java.awt.Shape shape>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.batik.gvt.FillShapePainter: java.awt.Shape shape>;

        $r3 = interfaceinvoke $r2.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>();

        return $r3;
    }

    public boolean inSensitiveArea(java.awt.geom.Point2D)
    {
        java.awt.Shape $r1, $r3;
        java.awt.geom.Point2D r2;
        org.apache.batik.gvt.FillShapePainter r0;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.FillShapePainter;

        r2 := @parameter0: java.awt.geom.Point2D;

        $r1 = r0.<org.apache.batik.gvt.FillShapePainter: java.awt.Shape shape>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r3 = r0.<org.apache.batik.gvt.FillShapePainter: java.awt.Shape shape>;

        $z0 = interfaceinvoke $r3.<java.awt.Shape: boolean contains(java.awt.geom.Point2D)>(r2);

        return $z0;
    }

    public void setShape(java.awt.Shape)
    {
        java.awt.Shape r0;
        java.lang.IllegalArgumentException $r2;
        org.apache.batik.gvt.FillShapePainter r1;

        r1 := @this: org.apache.batik.gvt.FillShapePainter;

        r0 := @parameter0: java.awt.Shape;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        r1.<org.apache.batik.gvt.FillShapePainter: java.awt.Shape shape> = r0;

        return;
    }

    public java.awt.Shape getShape()
    {
        java.awt.Shape $r1;
        org.apache.batik.gvt.FillShapePainter r0;

        r0 := @this: org.apache.batik.gvt.FillShapePainter;

        $r1 = r0.<org.apache.batik.gvt.FillShapePainter: java.awt.Shape shape>;

        return $r1;
    }
}
