final class com.google.gxp.compiler.fs.SourcePathFileSystem$3 extends java.lang.Object implements com.google.gxp.com.google.common.base.Function
{
    final com.google.gxp.compiler.fs.SourcePathFileSystem this$0;

    void <init>(com.google.gxp.compiler.fs.SourcePathFileSystem)
    {
        com.google.gxp.compiler.fs.SourcePathFileSystem r1;
        com.google.gxp.compiler.fs.SourcePathFileSystem$3 r0;

        r0 := @this: com.google.gxp.compiler.fs.SourcePathFileSystem$3;

        r1 := @parameter0: com.google.gxp.compiler.fs.SourcePathFileSystem;

        r0.<com.google.gxp.compiler.fs.SourcePathFileSystem$3: com.google.gxp.compiler.fs.SourcePathFileSystem this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.google.gxp.compiler.fs.FileRef apply(com.google.gxp.compiler.fs.FileRef)
    {
        com.google.gxp.compiler.fs.SourcePathFileSystem$3 r0;
        com.google.gxp.compiler.fs.SourcePathFileSystem $r1, $r6, $r12, $r17, $r18;
        java.lang.String $r16;
        com.google.gxp.compiler.fs.FileRef r3, r5, $r7, $r13, $r19, $r20;
        boolean $z0;
        java.lang.IllegalArgumentException $r8;
        com.google.gxp.com.google.common.collect.BiMap $r2;
        java.lang.Object $r4;
        java.lang.StringBuilder $r9, $r10, $r11, $r14, $r15;

        r0 := @this: com.google.gxp.compiler.fs.SourcePathFileSystem$3;

        r3 := @parameter0: com.google.gxp.compiler.fs.FileRef;

        $r1 = r0.<com.google.gxp.compiler.fs.SourcePathFileSystem$3: com.google.gxp.compiler.fs.SourcePathFileSystem this$0>;

        $r2 = staticinvoke <com.google.gxp.compiler.fs.SourcePathFileSystem: com.google.gxp.com.google.common.collect.BiMap access$100(com.google.gxp.compiler.fs.SourcePathFileSystem)>($r1);

        $r4 = interfaceinvoke $r2.<com.google.gxp.com.google.common.collect.BiMap: java.lang.Object get(java.lang.Object)>(r3);

        r5 = (com.google.gxp.compiler.fs.FileRef) $r4;

        if r5 != null goto label2;

        $r6 = r0.<com.google.gxp.compiler.fs.SourcePathFileSystem$3: com.google.gxp.compiler.fs.SourcePathFileSystem this$0>;

        $r7 = staticinvoke <com.google.gxp.compiler.fs.SourcePathFileSystem: com.google.gxp.compiler.fs.FileRef access$200(com.google.gxp.compiler.fs.SourcePathFileSystem)>($r6);

        $z0 = virtualinvoke $r7.<com.google.gxp.compiler.fs.FileRef: boolean isAncestorOf(com.google.gxp.compiler.fs.FileRef)>(r3);

        if $z0 == 0 goto label1;

        $r18 = r0.<com.google.gxp.compiler.fs.SourcePathFileSystem$3: com.google.gxp.compiler.fs.SourcePathFileSystem this$0>;

        $r17 = r0.<com.google.gxp.compiler.fs.SourcePathFileSystem$3: com.google.gxp.compiler.fs.SourcePathFileSystem this$0>;

        $r19 = staticinvoke <com.google.gxp.compiler.fs.SourcePathFileSystem: com.google.gxp.compiler.fs.FileRef access$200(com.google.gxp.compiler.fs.SourcePathFileSystem)>($r17);

        $r20 = staticinvoke <com.google.gxp.compiler.fs.SourcePathFileSystem: com.google.gxp.compiler.fs.FileRef access$300(com.google.gxp.compiler.fs.SourcePathFileSystem,com.google.gxp.compiler.fs.FileRef,com.google.gxp.compiler.fs.FileRef)>($r18, $r19, r3);

        return $r20;

     label1:
        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not in ");

        $r12 = r0.<com.google.gxp.compiler.fs.SourcePathFileSystem$3: com.google.gxp.compiler.fs.SourcePathFileSystem this$0>;

        $r13 = staticinvoke <com.google.gxp.compiler.fs.SourcePathFileSystem: com.google.gxp.compiler.fs.FileRef access$200(com.google.gxp.compiler.fs.SourcePathFileSystem)>($r12);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or in source list");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r8;

     label2:
        return r5;
    }

    public volatile java.lang.Object apply(java.lang.Object)
    {
        com.google.gxp.compiler.fs.SourcePathFileSystem$3 r0;
        java.lang.Object r1;
        com.google.gxp.compiler.fs.FileRef $r2, $r3;

        r0 := @this: com.google.gxp.compiler.fs.SourcePathFileSystem$3;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.gxp.compiler.fs.FileRef) r1;

        $r3 = virtualinvoke r0.<com.google.gxp.compiler.fs.SourcePathFileSystem$3: com.google.gxp.compiler.fs.FileRef apply(com.google.gxp.compiler.fs.FileRef)>($r2);

        return $r3;
    }
}
