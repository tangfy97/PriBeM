public class com.hp.hpl.jena.tdb.base.file.BufferChannelMem extends java.lang.Object implements com.hp.hpl.jena.tdb.base.file.BufferChannel
{
    private java.nio.ByteBuffer bytes;
    private java.lang.String name;
    private static int INIT_SIZE;
    private static int INC_SIZE;

    public static com.hp.hpl.jena.tdb.base.file.BufferChannel create()
    {
        com.hp.hpl.jena.tdb.base.file.BufferChannelMem $r0;

        $r0 = new com.hp.hpl.jena.tdb.base.file.BufferChannelMem;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: void <init>(java.lang.String)>("unnamed");

        return $r0;
    }

    public static com.hp.hpl.jena.tdb.base.file.BufferChannel create(java.lang.String)
    {
        com.hp.hpl.jena.tdb.base.file.BufferChannelMem $r0;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        $r0 = new com.hp.hpl.jena.tdb.base.file.BufferChannelMem;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: void <init>(java.lang.String)>(r1);

        return $r0;
    }

    private void <init>()
    {
        com.hp.hpl.jena.tdb.base.file.BufferChannelMem r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelMem;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private void <init>(java.lang.String)
    {
        com.hp.hpl.jena.tdb.base.file.BufferChannelMem r0;
        java.lang.String r3;
        java.nio.ByteBuffer $r1, $r2;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelMem;

        r3 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(1024);

        r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes> = $r1;

        $r2 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>(0);

        r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.lang.String name> = r3;

        return;
    }

    public synchronized com.hp.hpl.jena.tdb.base.file.BufferChannel duplicate()
    {
        java.nio.ByteBuffer $r2, $r3, $r4, $r5, $r6, $r7;
        com.hp.hpl.jena.tdb.base.file.BufferChannelMem $r0, r1;
        int $i0;

        r1 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelMem;

        $r0 = new com.hp.hpl.jena.tdb.base.file.BufferChannelMem;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: void <init>()>();

        $r2 = r1.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        $i0 = virtualinvoke $r2.<java.nio.ByteBuffer: int position()>();

        $r3 = r1.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r4 = r1.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        $r5 = virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.ByteBuffer slice()>();

        $r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes> = $r5;

        $r6 = $r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

        $r7 = r1.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i0);

        return $r0;
    }

    public synchronized long position()
    {
        com.hp.hpl.jena.tdb.base.file.BufferChannelMem r0;
        int $i0;
        long $l1;
        java.nio.ByteBuffer $r1;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelMem;

        specialinvoke r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: void checkIfClosed()>();

        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int position()>();

        $l1 = (long) $i0;

        return $l1;
    }

    public synchronized void position(long)
    {
        long l0, $l3;
        java.nio.ByteBuffer $r6, $r7;
        byte $b1, $b4;
        int $i2, $i5, $i6, $i7;
        java.lang.String $r5;
        com.hp.hpl.jena.tdb.base.StorageException $r9;
        com.hp.hpl.jena.tdb.base.file.BufferChannelMem r0;
        java.lang.StringBuilder $r3, $r4, $r8;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelMem;

        l0 := @parameter0: long;

        specialinvoke r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: void checkIfClosed()>();

        $b1 = l0 cmp 0L;

        $i6 = (int) $b1;

        if $i6 < 0 goto label1;

        $r6 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        $i2 = virtualinvoke $r6.<java.nio.ByteBuffer: int capacity()>();

        $l3 = (long) $i2;

        $b4 = l0 cmp $l3;

        $i7 = (int) $b4;

        if $i7 <= 0 goto label2;

     label1:
        $r9 = new com.hp.hpl.jena.tdb.base.StorageException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Out of range: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<com.hp.hpl.jena.tdb.base.StorageException: void <init>(java.lang.String)>($r5);

        throw $r9;

     label2:
        $r7 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        $i5 = (int) l0;

        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i5);

        return;
    }

    public synchronized int read(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer $r1, r2, $r3, $r4, $r5;
        com.hp.hpl.jena.tdb.base.file.BufferChannelMem r0;
        byte $b3;
        int $i0, $i1, $i2, i4, i5;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelMem;

        r2 := @parameter0: java.nio.ByteBuffer;

        specialinvoke r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: void checkIfClosed()>();

        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        virtualinvoke $r1.<java.nio.ByteBuffer: int position()>();

        $i0 = virtualinvoke r2.<java.nio.ByteBuffer: int limit()>();

        $i1 = virtualinvoke r2.<java.nio.ByteBuffer: int position()>();

        i4 = $i0 - $i1;

        $r3 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        $i2 = virtualinvoke $r3.<java.nio.ByteBuffer: int remaining()>();

        if i4 <= $i2 goto label1;

        $r5 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        i4 = virtualinvoke $r5.<java.nio.ByteBuffer: int remaining()>();

     label1:
        i5 = 0;

     label2:
        if i5 >= i4 goto label3;

        $r4 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        $b3 = virtualinvoke $r4.<java.nio.ByteBuffer: byte get()>();

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b3);

        i5 = i5 + 1;

        goto label2;

     label3:
        return i4;
    }

    public synchronized int read(java.nio.ByteBuffer, long)
    {
        long l0, $l4;
        java.nio.ByteBuffer r6, $r10, $r11, $r12;
        byte $b1, $b5;
        int $i2, $i3, $i6, $i7, $i8, $i9, $i10;
        java.lang.String $r9;
        com.hp.hpl.jena.tdb.base.StorageException $r14;
        com.hp.hpl.jena.tdb.base.file.BufferChannelMem r0;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r8, $r13;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelMem;

        r6 := @parameter0: java.nio.ByteBuffer;

        l0 := @parameter1: long;

        specialinvoke r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: void checkIfClosed()>();

        $b1 = l0 cmp 0L;

        $i9 = (int) $b1;

        if $i9 < 0 goto label1;

        $r10 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        $i3 = virtualinvoke $r10.<java.nio.ByteBuffer: int limit()>();

        $l4 = (long) $i3;

        $b5 = l0 cmp $l4;

        $i10 = (int) $b5;

        if $i10 < 0 goto label2;

     label1:
        $r14 = new com.hp.hpl.jena.tdb.base.StorageException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Out of range: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [0,");

        $i2 = virtualinvoke r6.<java.nio.ByteBuffer: int limit()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<com.hp.hpl.jena.tdb.base.StorageException: void <init>(java.lang.String)>($r9);

        throw $r14;

     label2:
        $i6 = virtualinvoke r6.<java.nio.ByteBuffer: int position()>();

        $r11 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        $i7 = (int) l0;

        virtualinvoke $r11.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i7);

        $i8 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: int read(java.nio.ByteBuffer)>(r6);

        $r12 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        virtualinvoke $r12.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i6);

        return $i8;
    }

    public synchronized int write(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        int $i0, $i1, i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15;
        com.hp.hpl.jena.tdb.base.file.BufferChannelMem r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelMem;

        r1 := @parameter0: java.nio.ByteBuffer;

        specialinvoke r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: void checkIfClosed()>();

        $i0 = virtualinvoke r1.<java.nio.ByteBuffer: int limit()>();

        $i1 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>();

        i2 = $i0 - $i1;

        $r2 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        $i3 = virtualinvoke $r2.<java.nio.ByteBuffer: int position()>();

        $r3 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        $i4 = virtualinvoke $r3.<java.nio.ByteBuffer: int capacity()>();

        $r4 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        $i5 = virtualinvoke $r4.<java.nio.ByteBuffer: int position()>();

        i6 = $i4 - $i5;

        if i2 <= i6 goto label1;

        i14 = i2 - i6;

        $i10 = <com.hp.hpl.jena.tdb.base.file.BufferChannelMem: int INC_SIZE>;

        i15 = i14 + $i10;

        $r8 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        $i11 = virtualinvoke $r8.<java.nio.ByteBuffer: int capacity()>();

        $i12 = $i11 + i15;

        $r9 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i12);

        $r10 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

        $r11 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        virtualinvoke $r9.<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>($r11);

        $r12 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        $i13 = virtualinvoke $r12.<java.nio.ByteBuffer: int limit()>();

        virtualinvoke $r9.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i13);

        virtualinvoke $r9.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i3);

        r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes> = $r9;

     label1:
        $r5 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        $i7 = virtualinvoke $r5.<java.nio.ByteBuffer: int limit()>();

        $i8 = $i3 + i2;

        if $i7 >= $i8 goto label2;

        $r7 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        $i9 = $i3 + i2;

        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i9);

     label2:
        $r6 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>(r1);

        return i2;
    }

    public synchronized int write(java.nio.ByteBuffer, long)
    {
        long l0, $l3;
        java.nio.ByteBuffer $r6, $r7, $r8, r9, $r10;
        byte $b1, $b4;
        int $i2, $i5, $i6, $i7, $i8, $i9;
        java.lang.String $r5;
        com.hp.hpl.jena.tdb.base.StorageException $r12;
        com.hp.hpl.jena.tdb.base.file.BufferChannelMem r0;
        java.lang.StringBuilder $r3, $r4, $r11;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelMem;

        r9 := @parameter0: java.nio.ByteBuffer;

        l0 := @parameter1: long;

        specialinvoke r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: void checkIfClosed()>();

        $b1 = l0 cmp 0L;

        $i8 = (int) $b1;

        if $i8 < 0 goto label1;

        $r6 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        $i2 = virtualinvoke $r6.<java.nio.ByteBuffer: int limit()>();

        $l3 = (long) $i2;

        $b4 = l0 cmp $l3;

        $i9 = (int) $b4;

        if $i9 <= 0 goto label2;

     label1:
        $r12 = new com.hp.hpl.jena.tdb.base.StorageException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Out of range: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<com.hp.hpl.jena.tdb.base.StorageException: void <init>(java.lang.String)>($r5);

        throw $r12;

     label2:
        $r7 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        $i5 = virtualinvoke $r7.<java.nio.ByteBuffer: int position()>();

        $r8 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        $i6 = (int) l0;

        virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i6);

        $i7 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: int write(java.nio.ByteBuffer)>(r9);

        $r10 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i5);

        return $i7;
    }

    public synchronized void truncate(long)
    {
        long l0;
        com.hp.hpl.jena.tdb.base.StorageException $r5;
        java.nio.ByteBuffer $r1, $r2, $r3, $r4;
        com.hp.hpl.jena.tdb.base.file.BufferChannelMem r0;
        int i1, $i2, $i3;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelMem;

        l0 := @parameter0: long;

        specialinvoke r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: void checkIfClosed()>();

        i1 = (int) l0;

        if i1 >= 0 goto label1;

        $r5 = new com.hp.hpl.jena.tdb.base.StorageException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Out of range: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<com.hp.hpl.jena.tdb.base.StorageException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        $i2 = virtualinvoke $r1.<java.nio.ByteBuffer: int limit()>();

        if i1 <= $i2 goto label2;

        return;

     label2:
        $r2 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        $i3 = virtualinvoke $r2.<java.nio.ByteBuffer: int position()>();

        if $i3 <= i1 goto label3;

        $r4 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(i1);

     label3:
        $r3 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>(i1);

        return;
    }

    public synchronized long size()
    {
        com.hp.hpl.jena.tdb.base.file.BufferChannelMem r0;
        int $i0;
        long $l1;
        java.nio.ByteBuffer $r1;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelMem;

        specialinvoke r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: void checkIfClosed()>();

        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int limit()>();

        $l1 = (long) $i0;

        return $l1;
    }

    public synchronized boolean isEmpty()
    {
        com.hp.hpl.jena.tdb.base.file.BufferChannelMem r0;
        byte $b1;
        long $l0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelMem;

        specialinvoke r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: void checkIfClosed()>();

        $l0 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: long size()>();

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public synchronized void sync()
    {
        com.hp.hpl.jena.tdb.base.file.BufferChannelMem r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelMem;

        specialinvoke r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: void checkIfClosed()>();

        return;
    }

    public synchronized void close()
    {
        com.hp.hpl.jena.tdb.base.file.BufferChannelMem r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelMem;

        specialinvoke r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: void checkIfClosed()>();

        r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes> = null;

        return;
    }

    private void checkIfClosed()
    {
        com.hp.hpl.jena.tdb.base.StorageException $r2;
        java.nio.ByteBuffer $r1;
        com.hp.hpl.jena.tdb.base.file.BufferChannelMem r0;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelMem;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.nio.ByteBuffer bytes>;

        if $r1 != null goto label1;

        $r2 = new com.hp.hpl.jena.tdb.base.StorageException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closed: ");

        $r5 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.lang.String name>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<com.hp.hpl.jena.tdb.base.StorageException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label1:
        return;
    }

    public synchronized java.lang.String getLabel()
    {
        com.hp.hpl.jena.tdb.base.file.BufferChannelMem r0;
        java.lang.String $r1;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelMem;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.lang.String name>;

        return $r1;
    }

    public synchronized java.lang.String toString()
    {
        com.hp.hpl.jena.tdb.base.file.BufferChannelMem r0;
        java.lang.String $r1;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelMem;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.BufferChannelMem: java.lang.String name>;

        return $r1;
    }

    public java.lang.String getFilename()
    {
        com.hp.hpl.jena.tdb.base.file.BufferChannelMem r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BufferChannelMem;

        return null;
    }

    static void <clinit>()
    {
        <com.hp.hpl.jena.tdb.base.file.BufferChannelMem: int INIT_SIZE> = 1024;

        <com.hp.hpl.jena.tdb.base.file.BufferChannelMem: int INC_SIZE> = 1024;

        return;
    }
}
