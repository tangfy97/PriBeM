public class org.apache.xmlbeans.impl.common.XPath extends java.lang.Object
{
    public static final java.lang.String _NS_BOUNDARY;
    public static final java.lang.String _DEFAULT_ELT_NS;
    private final org.apache.xmlbeans.impl.common.XPath$Selector _selector;
    private final boolean _sawDeepDot;
    static java.lang.Class class$org$apache$xmlbeans$impl$common$XPath;

    public static org.apache.xmlbeans.impl.common.XPath compileXPath(java.lang.String) throws org.apache.xmlbeans.impl.common.XPath$XPathCompileException
    {
        java.lang.String r0;
        org.apache.xmlbeans.impl.common.XPath $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.common.XPath: org.apache.xmlbeans.impl.common.XPath compileXPath(java.lang.String,java.lang.String,java.util.Map)>(r0, "$this", null);

        return $r1;
    }

    public static org.apache.xmlbeans.impl.common.XPath compileXPath(java.lang.String, java.lang.String) throws org.apache.xmlbeans.impl.common.XPath$XPathCompileException
    {
        java.lang.String r0, r1;
        org.apache.xmlbeans.impl.common.XPath $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.common.XPath: org.apache.xmlbeans.impl.common.XPath compileXPath(java.lang.String,java.lang.String,java.util.Map)>(r0, r1, null);

        return $r2;
    }

    public static org.apache.xmlbeans.impl.common.XPath compileXPath(java.lang.String, java.util.Map) throws org.apache.xmlbeans.impl.common.XPath$XPathCompileException
    {
        java.lang.String r0;
        java.util.Map r1;
        org.apache.xmlbeans.impl.common.XPath $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Map;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.common.XPath: org.apache.xmlbeans.impl.common.XPath compileXPath(java.lang.String,java.lang.String,java.util.Map)>(r0, "$this", r1);

        return $r2;
    }

    public static org.apache.xmlbeans.impl.common.XPath compileXPath(java.lang.String, java.lang.String, java.util.Map) throws org.apache.xmlbeans.impl.common.XPath$XPathCompileException
    {
        org.apache.xmlbeans.impl.common.XPath$CompilationContext $r0;
        java.util.Map r1;
        java.lang.String r2, r3;
        org.apache.xmlbeans.impl.common.XPath $r4;

        r3 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r1 := @parameter2: java.util.Map;

        $r0 = new org.apache.xmlbeans.impl.common.XPath$CompilationContext;

        specialinvoke $r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: void <init>(java.util.Map,java.lang.String)>(r1, r2);

        $r4 = virtualinvoke $r0.<org.apache.xmlbeans.impl.common.XPath$CompilationContext: org.apache.xmlbeans.impl.common.XPath compile(java.lang.String)>(r3);

        return $r4;
    }

    private void <init>(org.apache.xmlbeans.impl.common.XPath$Selector, boolean)
    {
        org.apache.xmlbeans.impl.common.XPath$Selector r1;
        org.apache.xmlbeans.impl.common.XPath r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.common.XPath;

        r1 := @parameter0: org.apache.xmlbeans.impl.common.XPath$Selector;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.impl.common.XPath: org.apache.xmlbeans.impl.common.XPath$Selector _selector> = r1;

        r0.<org.apache.xmlbeans.impl.common.XPath: boolean _sawDeepDot> = z0;

        return;
    }

    public boolean sawDeepDot()
    {
        org.apache.xmlbeans.impl.common.XPath r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.common.XPath;

        $z0 = r0.<org.apache.xmlbeans.impl.common.XPath: boolean _sawDeepDot>;

        return $z0;
    }

    static org.apache.xmlbeans.impl.common.XPath$Selector access$000(org.apache.xmlbeans.impl.common.XPath)
    {
        org.apache.xmlbeans.impl.common.XPath$Selector $r1;
        org.apache.xmlbeans.impl.common.XPath r0;

        r0 := @parameter0: org.apache.xmlbeans.impl.common.XPath;

        $r1 = r0.<org.apache.xmlbeans.impl.common.XPath: org.apache.xmlbeans.impl.common.XPath$Selector _selector>;

        return $r1;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    void <init>(org.apache.xmlbeans.impl.common.XPath$Selector, boolean, org.apache.xmlbeans.impl.common.XPath$1)
    {
        org.apache.xmlbeans.impl.common.XPath$1 r2;
        org.apache.xmlbeans.impl.common.XPath$Selector r1;
        org.apache.xmlbeans.impl.common.XPath r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.common.XPath;

        r1 := @parameter0: org.apache.xmlbeans.impl.common.XPath$Selector;

        z0 := @parameter1: boolean;

        r2 := @parameter2: org.apache.xmlbeans.impl.common.XPath$1;

        specialinvoke r0.<org.apache.xmlbeans.impl.common.XPath: void <init>(org.apache.xmlbeans.impl.common.XPath$Selector,boolean)>(r1, z0);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.xmlbeans.impl.common.XPath: java.lang.String _DEFAULT_ELT_NS> = "$xmlbeans!default_uri";

        <org.apache.xmlbeans.impl.common.XPath: java.lang.String _NS_BOUNDARY> = "$xmlbeans!ns_boundary";

        return;
    }
}
