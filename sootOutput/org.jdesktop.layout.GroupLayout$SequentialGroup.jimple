public class org.jdesktop.layout.GroupLayout$SequentialGroup extends org.jdesktop.layout.GroupLayout$Group
{
    private org.jdesktop.layout.GroupLayout$Spring baselineSpring;
    static final boolean $assertionsDisabled;
    private final org.jdesktop.layout.GroupLayout this$0;

    void <init>(org.jdesktop.layout.GroupLayout)
    {
        org.jdesktop.layout.GroupLayout$SequentialGroup r0;
        org.jdesktop.layout.GroupLayout r1;

        r0 := @this: org.jdesktop.layout.GroupLayout$SequentialGroup;

        r1 := @parameter0: org.jdesktop.layout.GroupLayout;

        r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout this$0> = r1;

        specialinvoke r0.<org.jdesktop.layout.GroupLayout$Group: void <init>(org.jdesktop.layout.GroupLayout)>(r1);

        return;
    }

    public org.jdesktop.layout.GroupLayout$SequentialGroup add(org.jdesktop.layout.GroupLayout$Group)
    {
        org.jdesktop.layout.GroupLayout$Group r1, $r2;
        org.jdesktop.layout.GroupLayout$SequentialGroup r0, $r3;

        r0 := @this: org.jdesktop.layout.GroupLayout$SequentialGroup;

        r1 := @parameter0: org.jdesktop.layout.GroupLayout$Group;

        $r2 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$Group addSpring(org.jdesktop.layout.GroupLayout$Spring)>(r1);

        $r3 = (org.jdesktop.layout.GroupLayout$SequentialGroup) $r2;

        return $r3;
    }

    public org.jdesktop.layout.GroupLayout$SequentialGroup add(boolean, org.jdesktop.layout.GroupLayout$Group)
    {
        org.jdesktop.layout.GroupLayout$SequentialGroup r0;
        org.jdesktop.layout.GroupLayout$Group r1;
        boolean z0;

        r0 := @this: org.jdesktop.layout.GroupLayout$SequentialGroup;

        z0 := @parameter0: boolean;

        r1 := @parameter1: org.jdesktop.layout.GroupLayout$Group;

        virtualinvoke r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(org.jdesktop.layout.GroupLayout$Group)>(r1);

        if z0 == 0 goto label1;

        r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$Spring baselineSpring> = r1;

     label1:
        return r0;
    }

    public org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component)
    {
        int $i1, $i3, $i5;
        org.jdesktop.layout.GroupLayout$SequentialGroup r0, $r2;
        java.awt.Component r1;

        r0 := @this: org.jdesktop.layout.GroupLayout$SequentialGroup;

        r1 := @parameter0: java.awt.Component;

        $i1 = (int) -1;

        $i3 = (int) -1;

        $i5 = (int) -1;

        $r2 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component,int,int,int)>(r1, $i1, $i3, $i5);

        return $r2;
    }

    public org.jdesktop.layout.GroupLayout$SequentialGroup add(boolean, java.awt.Component)
    {
        java.util.List $r2;
        org.jdesktop.layout.GroupLayout$Spring $r3;
        int $i0, $i1;
        org.jdesktop.layout.GroupLayout$SequentialGroup r0;
        java.awt.Component r1;
        boolean z0;

        r0 := @this: org.jdesktop.layout.GroupLayout$SequentialGroup;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.awt.Component;

        virtualinvoke r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component)>(r1);

        if z0 == 0 goto label1;

        $r2 = r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: java.util.List springs>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r3 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$Spring getSpring(int)>($i1);

        r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$Spring baselineSpring> = $r3;

     label1:
        return r0;
    }

    public org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component, int, int, int)
    {
        org.jdesktop.layout.GroupLayout$ComponentSpring $r1;
        java.awt.Component r2;
        org.jdesktop.layout.GroupLayout $r3;
        org.jdesktop.layout.GroupLayout$Group $r4;
        int i0, i1, i2;
        org.jdesktop.layout.GroupLayout$SequentialGroup r0, $r5;

        r0 := @this: org.jdesktop.layout.GroupLayout$SequentialGroup;

        r2 := @parameter0: java.awt.Component;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r1 = new org.jdesktop.layout.GroupLayout$ComponentSpring;

        $r3 = r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout this$0>;

        specialinvoke $r1.<org.jdesktop.layout.GroupLayout$ComponentSpring: void <init>(org.jdesktop.layout.GroupLayout,java.awt.Component,int,int,int,org.jdesktop.layout.GroupLayout$1)>($r3, r2, i0, i1, i2, null);

        $r4 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$Group addSpring(org.jdesktop.layout.GroupLayout$Spring)>($r1);

        $r5 = (org.jdesktop.layout.GroupLayout$SequentialGroup) $r4;

        return $r5;
    }

    public org.jdesktop.layout.GroupLayout$SequentialGroup add(boolean, java.awt.Component, int, int, int)
    {
        org.jdesktop.layout.GroupLayout$Spring $r3;
        java.awt.Component r1;
        java.util.List $r2;
        int i0, i1, i2, $i3, $i4;
        org.jdesktop.layout.GroupLayout$SequentialGroup r0;
        boolean z0;

        r0 := @this: org.jdesktop.layout.GroupLayout$SequentialGroup;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.awt.Component;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        virtualinvoke r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component,int,int,int)>(r1, i0, i1, i2);

        if z0 == 0 goto label1;

        $r2 = r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: java.util.List springs>;

        $i3 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i4 = $i3 - 1;

        $r3 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$Spring getSpring(int)>($i4);

        r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$Spring baselineSpring> = $r3;

     label1:
        return r0;
    }

    public org.jdesktop.layout.GroupLayout$SequentialGroup add(int)
    {
        int i0;
        org.jdesktop.layout.GroupLayout$SequentialGroup r0, $r1;

        r0 := @this: org.jdesktop.layout.GroupLayout$SequentialGroup;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup add(int,int,int)>(i0, i0, i0);

        return $r1;
    }

    public org.jdesktop.layout.GroupLayout$SequentialGroup add(int, int, int)
    {
        org.jdesktop.layout.GroupLayout$GapSpring $r1;
        org.jdesktop.layout.GroupLayout $r2;
        org.jdesktop.layout.GroupLayout$Group $r3;
        int i0, i1, i2;
        org.jdesktop.layout.GroupLayout$SequentialGroup r0, $r4;

        r0 := @this: org.jdesktop.layout.GroupLayout$SequentialGroup;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = new org.jdesktop.layout.GroupLayout$GapSpring;

        $r2 = r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout this$0>;

        specialinvoke $r1.<org.jdesktop.layout.GroupLayout$GapSpring: void <init>(org.jdesktop.layout.GroupLayout,int,int,int)>($r2, i0, i1, i2);

        $r3 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$Group addSpring(org.jdesktop.layout.GroupLayout$Spring)>($r1);

        $r4 = (org.jdesktop.layout.GroupLayout$SequentialGroup) $r3;

        return $r4;
    }

    public org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(javax.swing.JComponent, javax.swing.JComponent, int)
    {
        javax.swing.JComponent r1, r2;
        int i0;
        org.jdesktop.layout.GroupLayout$SequentialGroup r0, $r3;

        r0 := @this: org.jdesktop.layout.GroupLayout$SequentialGroup;

        r1 := @parameter0: javax.swing.JComponent;

        r2 := @parameter1: javax.swing.JComponent;

        i0 := @parameter2: int;

        $r3 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(javax.swing.JComponent,javax.swing.JComponent,int,boolean)>(r1, r2, i0, 0);

        return $r3;
    }

    public org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(javax.swing.JComponent, javax.swing.JComponent, int, boolean)
    {
        javax.swing.JComponent r0, r2;
        java.lang.IllegalArgumentException $r1, $r8;
        org.jdesktop.layout.GroupLayout $r5;
        org.jdesktop.layout.GroupLayout$Group $r6;
        int i0;
        org.jdesktop.layout.GroupLayout$SequentialGroup r3, $r7;
        org.jdesktop.layout.GroupLayout$PaddingSpring $r4;
        boolean z0;

        r3 := @this: org.jdesktop.layout.GroupLayout$SequentialGroup;

        r0 := @parameter0: javax.swing.JComponent;

        r2 := @parameter1: javax.swing.JComponent;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        if i0 == 0 goto label1;

        if i0 == 1 goto label1;

        if i0 == 3 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid type argument");

        throw $r8;

     label1:
        if r0 == null goto label2;

        if r2 != null goto label3;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Components must be non-null");

        throw $r1;

     label3:
        $r4 = new org.jdesktop.layout.GroupLayout$PaddingSpring;

        $r5 = r3.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout this$0>;

        specialinvoke $r4.<org.jdesktop.layout.GroupLayout$PaddingSpring: void <init>(org.jdesktop.layout.GroupLayout,javax.swing.JComponent,javax.swing.JComponent,int,boolean)>($r5, r0, r2, i0, z0);

        $r6 = virtualinvoke r3.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$Group addSpring(org.jdesktop.layout.GroupLayout$Spring)>($r4);

        $r7 = (org.jdesktop.layout.GroupLayout$SequentialGroup) $r6;

        return $r7;
    }

    public org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(int)
    {
        int i0, $i2, $i4;
        org.jdesktop.layout.GroupLayout$SequentialGroup r0, $r1;

        r0 := @this: org.jdesktop.layout.GroupLayout$SequentialGroup;

        i0 := @parameter0: int;

        $i2 = (int) -1;

        $i4 = (int) -1;

        $r1 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(int,int,int)>(i0, $i2, $i4);

        return $r1;
    }

    public org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(int, int, int)
    {
        java.lang.IllegalArgumentException $r8, $r9;
        org.jdesktop.layout.GroupLayout$AutopaddingSpring $r10;
        org.jdesktop.layout.GroupLayout $r3, $r5;
        org.jdesktop.layout.GroupLayout$Group $r6;
        int i0, i1, i2, $i4, $i6, $i8, $i10;
        org.jdesktop.layout.GroupLayout$SequentialGroup r0, $r7;

        r0 := @this: org.jdesktop.layout.GroupLayout$SequentialGroup;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 == 0 goto label1;

        if i0 == 1 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Padding type must be one of Padding.RELATED or Padding.UNRELATED");

        throw $r8;

     label1:
        if i1 >= 0 goto label2;

        $i4 = (int) -1;

        if i1 == $i4 goto label2;

        $i6 = (int) -2;

        if i1 != $i6 goto label4;

     label2:
        if i2 >= 0 goto label3;

        $i8 = (int) -1;

        if i2 == $i8 goto label3;

        $i10 = (int) -2;

        if i2 != $i10 goto label4;

     label3:
        if i1 < 0 goto label5;

        if i2 < 0 goto label5;

        if i1 <= i2 goto label5;

     label4:
        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Pref and max must be either DEFAULT_SIZE, PREFERRED_SIZE, or >= 0 and pref <= max");

        throw $r9;

     label5:
        $r3 = r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout this$0>;

        staticinvoke <org.jdesktop.layout.GroupLayout: boolean access$302(org.jdesktop.layout.GroupLayout,boolean)>($r3, 1);

        $r10 = new org.jdesktop.layout.GroupLayout$AutopaddingSpring;

        $r5 = r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout this$0>;

        specialinvoke $r10.<org.jdesktop.layout.GroupLayout$AutopaddingSpring: void <init>(org.jdesktop.layout.GroupLayout,int,int,int)>($r5, i0, i1, i2);

        $r6 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$Group addSpring(org.jdesktop.layout.GroupLayout$Spring)>($r10);

        $r7 = (org.jdesktop.layout.GroupLayout$SequentialGroup) $r6;

        return $r7;
    }

    public org.jdesktop.layout.GroupLayout$SequentialGroup addContainerGap()
    {
        int $i1, $i3;
        org.jdesktop.layout.GroupLayout$SequentialGroup r0, $r1;

        r0 := @this: org.jdesktop.layout.GroupLayout$SequentialGroup;

        $i1 = (int) -1;

        $i3 = (int) -1;

        $r1 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$SequentialGroup addContainerGap(int,int)>($i1, $i3);

        return $r1;
    }

    public org.jdesktop.layout.GroupLayout$SequentialGroup addContainerGap(int, int)
    {
        java.lang.IllegalArgumentException $r7;
        org.jdesktop.layout.GroupLayout $r2, $r4;
        org.jdesktop.layout.GroupLayout$Group $r5;
        org.jdesktop.layout.GroupLayout$ContainerAutopaddingSpring $r8;
        int i0, i1, $i3, $i5, $i7;
        org.jdesktop.layout.GroupLayout$SequentialGroup r0, $r6;

        r0 := @this: org.jdesktop.layout.GroupLayout$SequentialGroup;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 >= 0 goto label1;

        $i3 = (int) -1;

        if i0 != $i3 goto label3;

     label1:
        if i1 >= 0 goto label2;

        $i5 = (int) -1;

        if i1 == $i5 goto label2;

        $i7 = (int) -2;

        if i1 != $i7 goto label3;

     label2:
        if i0 < 0 goto label4;

        if i1 < 0 goto label4;

        if i0 <= i1 goto label4;

     label3:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Pref and max must be either DEFAULT_VALUE or >= 0 and pref <= max");

        throw $r7;

     label4:
        $r2 = r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout this$0>;

        staticinvoke <org.jdesktop.layout.GroupLayout: boolean access$302(org.jdesktop.layout.GroupLayout,boolean)>($r2, 1);

        $r8 = new org.jdesktop.layout.GroupLayout$ContainerAutopaddingSpring;

        $r4 = r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout this$0>;

        specialinvoke $r8.<org.jdesktop.layout.GroupLayout$ContainerAutopaddingSpring: void <init>(org.jdesktop.layout.GroupLayout,int,int)>($r4, i0, i1);

        $r5 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$Group addSpring(org.jdesktop.layout.GroupLayout$Spring)>($r8);

        $r6 = (org.jdesktop.layout.GroupLayout$SequentialGroup) $r5;

        return $r6;
    }

    int operator(int, int)
    {
        int i0, $i1, i2, $i3, $i4;
        org.jdesktop.layout.GroupLayout$SequentialGroup r0;

        r0 := @this: org.jdesktop.layout.GroupLayout$SequentialGroup;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        $i1 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: int constrain(int)>(i0);

        $i3 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: int constrain(int)>(i2);

        $i4 = $i1 + $i3;

        return $i4;
    }

    void setValidSize(int, int, int)
    {
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12;
        org.jdesktop.layout.GroupLayout$Spring $r3, $r5;
        java.util.List $r1, $r2, $r4;
        org.jdesktop.layout.GroupLayout$SequentialGroup r0;

        r0 := @this: org.jdesktop.layout.GroupLayout$SequentialGroup;

        i0 := @parameter0: int;

        i11 := @parameter1: int;

        i2 := @parameter2: int;

        $i1 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: int getPreferredSize(int)>(i0);

        if i2 != $i1 goto label3;

        i12 = 0;

        $r4 = r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: java.util.List springs>;

        $i9 = interfaceinvoke $r4.<java.util.List: int size()>();

     label1:
        if i12 >= $i9 goto label2;

        $r5 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$Spring getSpring(int)>(i12);

        $i10 = virtualinvoke $r5.<org.jdesktop.layout.GroupLayout$Spring: int getPreferredSize(int)>(i0);

        virtualinvoke $r5.<org.jdesktop.layout.GroupLayout$Spring: void setSize(int,int,int)>(i0, i11, $i10);

        i11 = i11 + $i10;

        i12 = i12 + 1;

        goto label1;

     label2:
        goto label5;

     label3:
        $r1 = r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: java.util.List springs>;

        $i3 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i3 != 1 goto label4;

        $r3 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$Spring getSpring(int)>(0);

        $i5 = virtualinvoke $r3.<org.jdesktop.layout.GroupLayout$Spring: int getMinimumSize(int)>(i0);

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>(i2, $i5);

        $i7 = virtualinvoke $r3.<org.jdesktop.layout.GroupLayout$Spring: int getMaximumSize(int)>(i0);

        $i8 = staticinvoke <java.lang.Math: int min(int,int)>($i6, $i7);

        virtualinvoke $r3.<org.jdesktop.layout.GroupLayout$Spring: void setSize(int,int,int)>(i0, i11, $i8);

        goto label5;

     label4:
        $r2 = r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: java.util.List springs>;

        $i4 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i4 <= 1 goto label5;

        specialinvoke r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: void setValidSizeNotPreferred(int,int,int)>(i0, i11, i2);

     label5:
        return;
    }

    private void setValidSizeNotPreferred(int, int, int)
    {
        byte b6, $b26;
        int[] r7;
        org.jdesktop.layout.GroupLayout$SpringDelta r8;
        boolean $z0, z1, $z3, $z4;
        java.util.List $r1, $r2;
        org.jdesktop.layout.GroupLayout$SequentialGroup r0;
        java.lang.AssertionError $r9;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, $i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, i23, i24, i25, i27, $i28, $i29, $i30, i31, i32, i33, $i35;
        org.jdesktop.layout.GroupLayout$Spring $r3, $r4;
        java.lang.Object $r5;

        r0 := @this: org.jdesktop.layout.GroupLayout$SequentialGroup;

        i1 := @parameter0: int;

        i22 := @parameter1: int;

        i0 := @parameter2: int;

        $i2 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: int getPreferredSize(int)>(i1);

        i23 = i0 - $i2;

        $z0 = <org.jdesktop.layout.GroupLayout$SequentialGroup: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        if i23 != 0 goto label01;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label01:
        if i23 >= 0 goto label02;

        $z4 = 1;

        $z3 = 1;

        goto label03;

     label02:
        $z4 = 0;

        $z3 = 0;

     label03:
        z1 = $z3;

        $r1 = r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: java.util.List springs>;

        $i3 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $z4 == 0 goto label04;

        $i35 = (int) -1;

        i23 = i23 * $i35;

     label04:
        $r2 = specialinvoke r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: java.util.List buildResizableList(int,boolean)>(i1, z1);

        $i4 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i4 <= 0 goto label13;

        i24 = i23 / $i4;

        $i5 = i24 * $i4;

        i25 = i23 - $i5;

        r7 = newarray (int)[$i3];

        if z1 == 0 goto label05;

        $b26 = -1;

        goto label06;

     label05:
        $b26 = 1;

     label06:
        b6 = $b26;

        i27 = 0;

     label07:
        if i27 >= $i4 goto label10;

        $r5 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i27);

        r8 = (org.jdesktop.layout.GroupLayout$SpringDelta) $r5;

        $i10 = i27 + 1;

        if $i10 != $i4 goto label08;

        i24 = i24 + i25;

     label08:
        $i11 = r8.<org.jdesktop.layout.GroupLayout$SpringDelta: int delta>;

        $i12 = staticinvoke <java.lang.Math: int min(int,int)>(i24, $i11);

        r8.<org.jdesktop.layout.GroupLayout$SpringDelta: int delta> = $i12;

        $i13 = r8.<org.jdesktop.layout.GroupLayout$SpringDelta: int delta>;

        $i21 = i23 - $i13;

        i23 = $i21;

        $i14 = r8.<org.jdesktop.layout.GroupLayout$SpringDelta: int delta>;

        if $i14 == i24 goto label09;

        $i15 = i27 + 1;

        if $i15 >= $i4 goto label09;

        $i16 = $i4 - i27;

        $i17 = $i16 - 1;

        i24 = $i21 / $i17;

        $i18 = $i4 - i27;

        $i19 = $i18 - 1;

        $i20 = i24 * $i19;

        i25 = $i21 - $i20;

     label09:
        $i28 = r8.<org.jdesktop.layout.GroupLayout$SpringDelta: int index>;

        $i29 = r8.<org.jdesktop.layout.GroupLayout$SpringDelta: int delta>;

        $i30 = b6 * $i29;

        r7[$i28] = $i30;

        i27 = i27 + 1;

        goto label07;

     label10:
        i31 = 0;

     label11:
        if i31 >= $i3 goto label12;

        $r4 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$Spring getSpring(int)>(i31);

        $i7 = virtualinvoke $r4.<org.jdesktop.layout.GroupLayout$Spring: int getPreferredSize(int)>(i1);

        $i8 = r7[i31];

        i9 = $i7 + $i8;

        virtualinvoke $r4.<org.jdesktop.layout.GroupLayout$Spring: void setSize(int,int,int)>(i1, i22, i9);

        i22 = i22 + i9;

        i31 = i31 + 1;

        goto label11;

     label12:
        goto label17;

     label13:
        i32 = 0;

     label14:
        if i32 >= $i3 goto label17;

        $r3 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$Spring getSpring(int)>(i32);

        if z1 == 0 goto label15;

        i33 = virtualinvoke $r3.<org.jdesktop.layout.GroupLayout$Spring: int getMinimumSize(int)>(i1);

        goto label16;

     label15:
        i33 = virtualinvoke $r3.<org.jdesktop.layout.GroupLayout$Spring: int getMaximumSize(int)>(i1);

     label16:
        virtualinvoke $r3.<org.jdesktop.layout.GroupLayout$Spring: void setSize(int,int,int)>(i1, i22, i33);

        i22 = i22 + i33;

        i32 = i32 + 1;

        goto label14;

     label17:
        return;
    }

    private java.util.List buildResizableList(int, boolean)
    {
        org.jdesktop.layout.GroupLayout$Spring $r3;
        java.util.ArrayList $r2;
        java.util.List $r1;
        int $i0, i1, $i2, $i3, $i4, $i5, i6, i7;
        org.jdesktop.layout.GroupLayout$SequentialGroup r0;
        org.jdesktop.layout.GroupLayout$SpringDelta $r4;
        boolean z0;

        r0 := @this: org.jdesktop.layout.GroupLayout$SequentialGroup;

        i1 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: java.util.List springs>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i0);

        i6 = 0;

     label1:
        if i6 >= $i0 goto label5;

        $r3 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$Spring getSpring(int)>(i6);

        if z0 == 0 goto label2;

        $i4 = virtualinvoke $r3.<org.jdesktop.layout.GroupLayout$Spring: int getPreferredSize(int)>(i1);

        $i5 = virtualinvoke $r3.<org.jdesktop.layout.GroupLayout$Spring: int getMinimumSize(int)>(i1);

        i7 = $i4 - $i5;

        goto label3;

     label2:
        $i2 = virtualinvoke $r3.<org.jdesktop.layout.GroupLayout$Spring: int getMaximumSize(int)>(i1);

        $i3 = virtualinvoke $r3.<org.jdesktop.layout.GroupLayout$Spring: int getPreferredSize(int)>(i1);

        i7 = $i2 - $i3;

     label3:
        if i7 <= 0 goto label4;

        $r4 = new org.jdesktop.layout.GroupLayout$SpringDelta;

        specialinvoke $r4.<org.jdesktop.layout.GroupLayout$SpringDelta: void <init>(int,int)>(i6, i7);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r4);

     label4:
        i6 = i6 + 1;

        goto label1;

     label5:
        staticinvoke <java.util.Collections: void sort(java.util.List)>($r2);

        return $r2;
    }

    private int indexOfNextNonZeroSpring(int, boolean)
    {
        org.jdesktop.layout.GroupLayout$Spring r4;
        java.util.List $r1, $r2;
        int $i0, i1;
        org.jdesktop.layout.GroupLayout$SequentialGroup r0;
        java.lang.Object $r3;
        boolean z0, $z1;

        r0 := @this: org.jdesktop.layout.GroupLayout$SequentialGroup;

        i1 := @parameter0: int;

        z0 := @parameter1: boolean;

     label1:
        $r1 = r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: java.util.List springs>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r2 = r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: java.util.List springs>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (org.jdesktop.layout.GroupLayout$Spring) $r3;

        $z1 = virtualinvoke r4.<org.jdesktop.layout.GroupLayout$Spring: boolean willHaveZeroSize(boolean)>(z0);

        if $z1 != 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return i1;
    }

    void insertAutopadding(int, java.util.List, java.util.List, java.util.List, java.util.List, boolean)
    {
        boolean $z0, $z1, $z2, z3, $z4, $z5, $z6;
        org.jdesktop.layout.GroupLayout$ComponentSpring r22;
        org.jdesktop.layout.GroupLayout $r16;
        java.util.List r1, r4, $r8, r9, r10, $r12, $r17, $r18, $r20;
        org.jdesktop.layout.GroupLayout$SequentialGroup r5;
        java.util.ArrayList $r0, $r2, $r3, $r11, r19;
        org.jdesktop.layout.GroupLayout$Group $r7;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, $i16, i17;
        org.jdesktop.layout.GroupLayout$Spring $r6;
        org.jdesktop.layout.GroupLayout$AutopaddingSpring $r14, $r15, r21;
        java.lang.Object $r13;

        r5 := @this: org.jdesktop.layout.GroupLayout$SequentialGroup;

        i1 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        r10 := @parameter2: java.util.List;

        r4 := @parameter3: java.util.List;

        r9 := @parameter4: java.util.List;

        z3 := @parameter5: boolean;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(1);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>(r4);

        r19 = null;

        i15 = 0;

     label01:
        $r20 = r5.<org.jdesktop.layout.GroupLayout$SequentialGroup: java.util.List springs>;

        $i16 = interfaceinvoke $r20.<java.util.List: int size()>();

        if i15 >= $i16 goto label21;

        $r6 = virtualinvoke r5.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$Spring getSpring(int)>(i15);

        $z0 = $r6 instanceof org.jdesktop.layout.GroupLayout$AutopaddingSpring;

        if $z0 == 0 goto label05;

        $i10 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i10 != 0 goto label04;

        r21 = (org.jdesktop.layout.GroupLayout$AutopaddingSpring) $r6;

        virtualinvoke r21.<org.jdesktop.layout.GroupLayout$AutopaddingSpring: void setSources(java.util.List)>($r3);

        interfaceinvoke $r3.<java.util.List: void clear()>();

        $i12 = i15 + 1;

        $i13 = specialinvoke r5.<org.jdesktop.layout.GroupLayout$SequentialGroup: int indexOfNextNonZeroSpring(int,boolean)>($i12, 1);

        $r18 = r5.<org.jdesktop.layout.GroupLayout$SequentialGroup: java.util.List springs>;

        $i14 = interfaceinvoke $r18.<java.util.List: int size()>();

        if $i13 != $i14 goto label02;

        $z5 = r21 instanceof org.jdesktop.layout.GroupLayout$ContainerAutopaddingSpring;

        if $z5 != 0 goto label03;

        interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r21);

        goto label03;

     label02:
        interfaceinvoke $r0.<java.util.List: void clear()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r21);

     label03:
        i15 = $i13;

        goto label20;

     label04:
        $i11 = i15 + 1;

        i15 = specialinvoke r5.<org.jdesktop.layout.GroupLayout$SequentialGroup: int indexOfNextNonZeroSpring(int,boolean)>($i11, 1);

        goto label20;

     label05:
        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 <= 0 goto label06;

        if z3 == 0 goto label06;

        $r15 = new org.jdesktop.layout.GroupLayout$AutopaddingSpring;

        $r16 = r5.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout this$0>;

        specialinvoke $r15.<org.jdesktop.layout.GroupLayout$AutopaddingSpring: void <init>(org.jdesktop.layout.GroupLayout,org.jdesktop.layout.GroupLayout$1)>($r16, null);

        $r17 = r5.<org.jdesktop.layout.GroupLayout$SequentialGroup: java.util.List springs>;

        interfaceinvoke $r17.<java.util.List: void add(int,java.lang.Object)>(i15, $r15);

        goto label01;

     label06:
        $z1 = $r6 instanceof org.jdesktop.layout.GroupLayout$ComponentSpring;

        if $z1 == 0 goto label12;

        r22 = (org.jdesktop.layout.GroupLayout$ComponentSpring) $r6;

        $z4 = virtualinvoke r22.<org.jdesktop.layout.GroupLayout$ComponentSpring: boolean isVisible()>();

        if $z4 != 0 goto label07;

        i15 = i15 + 1;

        goto label01;

     label07:
        i17 = 0;

     label08:
        $i6 = interfaceinvoke $r0.<java.util.List: int size()>();

        if i17 >= $i6 goto label09;

        $r13 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i17);

        $r14 = (org.jdesktop.layout.GroupLayout$AutopaddingSpring) $r13;

        virtualinvoke $r14.<org.jdesktop.layout.GroupLayout$AutopaddingSpring: void addTarget(org.jdesktop.layout.GroupLayout$ComponentSpring,int)>(r22, i1);

        i17 = i17 + 1;

        goto label08;

     label09:
        interfaceinvoke $r3.<java.util.List: void clear()>();

        interfaceinvoke $r0.<java.util.List: void clear()>();

        $i7 = i15 + 1;

        $i8 = specialinvoke r5.<org.jdesktop.layout.GroupLayout$SequentialGroup: int indexOfNextNonZeroSpring(int,boolean)>($i7, 0);

        $r12 = r5.<org.jdesktop.layout.GroupLayout$SequentialGroup: java.util.List springs>;

        $i9 = interfaceinvoke $r12.<java.util.List: int size()>();

        if $i8 != $i9 goto label10;

        interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>(r22);

        goto label11;

     label10:
        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r22);

     label11:
        i15 = $i8;

        goto label20;

     label12:
        $z2 = $r6 instanceof org.jdesktop.layout.GroupLayout$Group;

        if $z2 == 0 goto label19;

        if r19 != null goto label13;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>(int)>(1);

        r19 = $r11;

        goto label14;

     label13:
        interfaceinvoke r19.<java.util.List: void clear()>();

     label14:
        interfaceinvoke $r2.<java.util.List: void clear()>();

        $r7 = (org.jdesktop.layout.GroupLayout$Group) $r6;

        virtualinvoke $r7.<org.jdesktop.layout.GroupLayout$Group: void insertAutopadding(int,java.util.List,java.util.List,java.util.List,java.util.List,boolean)>(i1, $r0, $r2, $r3, r19, z3);

        interfaceinvoke $r3.<java.util.List: void clear()>();

        interfaceinvoke $r0.<java.util.List: void clear()>();

        $i2 = i15 + 1;

        $i3 = interfaceinvoke r19.<java.util.List: int size()>();

        if $i3 != 0 goto label15;

        $z6 = 1;

        goto label16;

     label15:
        $z6 = 0;

     label16:
        $i4 = specialinvoke r5.<org.jdesktop.layout.GroupLayout$SequentialGroup: int indexOfNextNonZeroSpring(int,boolean)>($i2, $z6);

        $r8 = r5.<org.jdesktop.layout.GroupLayout$SequentialGroup: java.util.List springs>;

        $i5 = interfaceinvoke $r8.<java.util.List: int size()>();

        if $i4 != $i5 goto label17;

        interfaceinvoke r9.<java.util.List: boolean addAll(java.util.Collection)>(r19);

        interfaceinvoke r10.<java.util.List: boolean addAll(java.util.Collection)>($r2);

        goto label18;

     label17:
        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>(r19);

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r2);

     label18:
        i15 = $i4;

        goto label20;

     label19:
        interfaceinvoke $r0.<java.util.List: void clear()>();

        interfaceinvoke $r3.<java.util.List: void clear()>();

        i15 = i15 + 1;

     label20:
        goto label01;

     label21:
        return;
    }

    int getBaseline()
    {
        org.jdesktop.layout.GroupLayout$Spring $r1, $r2, $r4, $r5;
        java.util.List $r3;
        int $i0, $i1, $i2, $i3, i4, i5, $i7;
        org.jdesktop.layout.GroupLayout$SequentialGroup r0;

        r0 := @this: org.jdesktop.layout.GroupLayout$SequentialGroup;

        $r1 = r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$Spring baselineSpring>;

        if $r1 == null goto label3;

        $r2 = r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$Spring baselineSpring>;

        $i0 = virtualinvoke $r2.<org.jdesktop.layout.GroupLayout$Spring: int getBaseline()>();

        if $i0 < 0 goto label3;

        i4 = 0;

        i5 = 0;

        $r3 = r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: java.util.List springs>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

     label1:
        if i5 >= $i1 goto label3;

        $r4 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$Spring getSpring(int)>(i5);

        $r5 = r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$Spring baselineSpring>;

        if $r4 != $r5 goto label2;

        $i3 = i4 + $i0;

        return $i3;

     label2:
        $i2 = virtualinvoke $r4.<org.jdesktop.layout.GroupLayout$Spring: int getPreferredSize(int)>(2);

        i4 = i4 + $i2;

        i5 = i5 + 1;

        goto label1;

     label3:
        $i7 = (int) -1;

        return $i7;
    }

    int getBaselineResizeBehavior()
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, z7, z8, z9, z10, z11;
        java.util.List $r3, $r6, $r9, $r14;
        org.jdesktop.layout.GroupLayout$SequentialGroup r0;
        int $i0, $i1, $i2, $i3, i4, $i5, i6, i7, i8, $i10, $i12;
        org.jdesktop.layout.GroupLayout$Spring $r1, $r2, $r4, $r5, $r7, $r8, $r10, $r11, $r12, $r13;

        r0 := @this: org.jdesktop.layout.GroupLayout$SequentialGroup;

        $z0 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: boolean isResizable(int)>(2);

        if $z0 == 0 goto label21;

        $r1 = r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$Spring baselineSpring>;

        $z1 = virtualinvoke $r1.<org.jdesktop.layout.GroupLayout$Spring: boolean isResizable(int)>(2);

        if $z1 != 0 goto label11;

        z6 = 0;

        z11 = 0;

        z10 = 0;

        i4 = 0;

        $r9 = r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: java.util.List springs>;

        $i3 = interfaceinvoke $r9.<java.util.List: int size()>();

     label01:
        if i4 >= $i3 goto label04;

        $r12 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$Spring getSpring(int)>(i4);

        $r13 = r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$Spring baselineSpring>;

        if $r12 != $r13 goto label02;

        goto label04;

     label02:
        $z5 = virtualinvoke $r12.<org.jdesktop.layout.GroupLayout$Spring: boolean isResizable(int)>(2);

        if $z5 == 0 goto label03;

        z6 = 1;

        z11 = 1;

        z10 = 1;

        goto label04;

     label03:
        i4 = i4 + 1;

        goto label01;

     label04:
        z7 = 0;

        z9 = 0;

        z8 = 0;

        $r14 = r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: java.util.List springs>;

        $i5 = interfaceinvoke $r14.<java.util.List: int size()>();

        i6 = $i5 - 1;

     label05:
        if i6 < 0 goto label08;

        $r10 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$Spring getSpring(int)>(i6);

        $r11 = r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$Spring baselineSpring>;

        if $r10 != $r11 goto label06;

        goto label08;

     label06:
        $z4 = virtualinvoke $r10.<org.jdesktop.layout.GroupLayout$Spring: boolean isResizable(int)>(2);

        if $z4 == 0 goto label07;

        z7 = 1;

        z9 = 1;

        z8 = 1;

        goto label08;

     label07:
        $i10 = (int) -1;

        i6 = i6 + $i10;

        goto label05;

     label08:
        if z11 == 0 goto label09;

        if z9 != 0 goto label09;

        return 2;

     label09:
        if z10 != 0 goto label10;

        if z8 == 0 goto label10;

        return 1;

     label10:
        goto label20;

     label11:
        $r2 = r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$Spring baselineSpring>;

        $i0 = virtualinvoke $r2.<org.jdesktop.layout.GroupLayout$Spring: int getBaselineResizeBehavior()>();

        if $i0 != 1 goto label16;

        i7 = 0;

        $r6 = r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: java.util.List springs>;

        $i2 = interfaceinvoke $r6.<java.util.List: int size()>();

     label12:
        if i7 >= $i2 goto label15;

        $r7 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$Spring getSpring(int)>(i7);

        $r8 = r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$Spring baselineSpring>;

        if $r7 != $r8 goto label13;

        return 1;

     label13:
        $z3 = virtualinvoke $r7.<org.jdesktop.layout.GroupLayout$Spring: boolean isResizable(int)>(2);

        if $z3 == 0 goto label14;

        return 4;

     label14:
        i7 = i7 + 1;

        goto label12;

     label15:
        goto label20;

     label16:
        if $i0 != 2 goto label20;

        $r3 = r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: java.util.List springs>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        i8 = $i1 - 1;

     label17:
        if i8 < 0 goto label20;

        $r4 = virtualinvoke r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$Spring getSpring(int)>(i8);

        $r5 = r0.<org.jdesktop.layout.GroupLayout$SequentialGroup: org.jdesktop.layout.GroupLayout$Spring baselineSpring>;

        if $r4 != $r5 goto label18;

        return 2;

     label18:
        $z2 = virtualinvoke $r4.<org.jdesktop.layout.GroupLayout$Spring: boolean isResizable(int)>(2);

        if $z2 == 0 goto label19;

        return 4;

     label19:
        $i12 = (int) -1;

        i8 = i8 + $i12;

        goto label17;

     label20:
        return 4;

     label21:
        return 1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        boolean $z0, $z1;

        $r0 = <org.jdesktop.layout.GroupLayout: java.lang.Class class$org$jdesktop$layout$GroupLayout>;

        if $r0 != null goto label1;

        $r1 = staticinvoke <org.jdesktop.layout.GroupLayout: java.lang.Class class$(java.lang.String)>("org.jdesktop.layout.GroupLayout");

        <org.jdesktop.layout.GroupLayout: java.lang.Class class$org$jdesktop$layout$GroupLayout> = $r1;

        goto label2;

     label1:
        $r1 = <org.jdesktop.layout.GroupLayout: java.lang.Class class$org$jdesktop$layout$GroupLayout>;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.jdesktop.layout.GroupLayout$SequentialGroup: boolean $assertionsDisabled> = $z1;

        return;
    }
}
