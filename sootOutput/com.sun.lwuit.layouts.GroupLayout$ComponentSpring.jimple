final class com.sun.lwuit.layouts.GroupLayout$ComponentSpring extends com.sun.lwuit.layouts.GroupLayout$Spring
{
    private com.sun.lwuit.Component component;
    private int origin;
    private final int min;
    private final int pref;
    private final int max;
    private int baseline;
    private boolean installed;
    final com.sun.lwuit.layouts.GroupLayout this$0;

    private void <init>(com.sun.lwuit.layouts.GroupLayout, com.sun.lwuit.Component, int, int, int)
    {
        com.sun.lwuit.layouts.GroupLayout r1;
        java.lang.IllegalArgumentException $r4;
        com.sun.lwuit.Component r2;
        int i0, i1, i2, $i4;
        com.sun.lwuit.layouts.GroupLayout$ComponentSpring r0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ComponentSpring;

        r1 := @parameter0: com.sun.lwuit.layouts.GroupLayout;

        r2 := @parameter1: com.sun.lwuit.Component;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: com.sun.lwuit.layouts.GroupLayout this$0> = r1;

        specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout$Spring: void <init>(com.sun.lwuit.layouts.GroupLayout)>(r1);

        $i4 = (int) -1;

        r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: int baseline> = $i4;

        r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: com.sun.lwuit.Component component> = r2;

        if r2 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Component must be non-null");

        throw $r4;

     label1:
        staticinvoke <com.sun.lwuit.layouts.GroupLayout: void access$700(int,int,int,boolean)>(i0, i1, i2, 1);

        r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: int min> = i0;

        r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: int max> = i2;

        r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: int pref> = i1;

        staticinvoke <com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$ComponentInfo access$800(com.sun.lwuit.layouts.GroupLayout,com.sun.lwuit.Component)>(r1, r2);

        return;
    }

    int calculateMinimumSize(int)
    {
        int i0, $i1, $i2;
        com.sun.lwuit.layouts.GroupLayout$ComponentSpring r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ComponentSpring;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: boolean isLinked(int)>(i0);

        if $z0 == 0 goto label1;

        $i2 = specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: int getLinkSize(int,int)>(i0, 0);

        return $i2;

     label1:
        $i1 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: int calculateNonlinkedMinimumSize(int)>(i0);

        return $i1;
    }

    int calculatePreferredSize(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        com.sun.lwuit.layouts.GroupLayout$ComponentSpring r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ComponentSpring;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: boolean isLinked(int)>(i0);

        if $z0 == 0 goto label1;

        $i6 = specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: int getLinkSize(int,int)>(i0, 1);

        return $i6;

     label1:
        $i1 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: int getMinimumSize(int)>(i0);

        $i2 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: int calculateNonlinkedPreferredSize(int)>(i0);

        $i3 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: int getMaximumSize(int)>(i0);

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i2);

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i4);

        return $i5;
    }

    int calculateMaximumSize(int)
    {
        int i0, $i1, $i2, $i3, $i4;
        com.sun.lwuit.layouts.GroupLayout$ComponentSpring r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ComponentSpring;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: boolean isLinked(int)>(i0);

        if $z0 == 0 goto label1;

        $i4 = specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: int getLinkSize(int,int)>(i0, 2);

        return $i4;

     label1:
        $i1 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: int getMinimumSize(int)>(i0);

        $i2 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: int calculateNonlinkedMaximumSize(int)>(i0);

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i2);

        return $i3;
    }

    boolean isVisible()
    {
        com.sun.lwuit.Component $r2;
        com.sun.lwuit.layouts.GroupLayout $r1;
        com.sun.lwuit.layouts.GroupLayout$ComponentInfo $r3;
        com.sun.lwuit.layouts.GroupLayout$ComponentSpring r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ComponentSpring;

        $r1 = r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: com.sun.lwuit.layouts.GroupLayout this$0>;

        $r2 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: com.sun.lwuit.Component getComponent()>();

        $r3 = staticinvoke <com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$ComponentInfo access$800(com.sun.lwuit.layouts.GroupLayout,com.sun.lwuit.Component)>($r1, $r2);

        $z0 = virtualinvoke $r3.<com.sun.lwuit.layouts.GroupLayout$ComponentInfo: boolean isVisible()>();

        return $z0;
    }

    int calculateNonlinkedMinimumSize(int)
    {
        com.sun.lwuit.Component $r1;
        com.sun.lwuit.geom.Dimension $r2;
        int $i0, $i1, i2, $i3, $i4, $i5, $i7;
        com.sun.lwuit.layouts.GroupLayout$ComponentSpring r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ComponentSpring;

        i2 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: boolean isVisible()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: int min>;

        if $i0 < 0 goto label2;

        $i5 = r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: int min>;

        return $i5;

     label2:
        $i1 = r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: int min>;

        $i7 = (int) -2;

        if $i1 != $i7 goto label3;

        $i4 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: int calculateNonlinkedPreferredSize(int)>(i2);

        return $i4;

     label3:
        $r1 = r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: com.sun.lwuit.Component component>;

        $r2 = virtualinvoke $r1.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension getPreferredSize()>();

        $i3 = specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: int getSizeAlongAxis(int,com.sun.lwuit.geom.Dimension)>(i2, $r2);

        return $i3;
    }

    int calculateNonlinkedPreferredSize(int)
    {
        com.sun.lwuit.Component $r1;
        com.sun.lwuit.geom.Dimension $r2;
        int $i0, i1, $i2, $i3;
        com.sun.lwuit.layouts.GroupLayout$ComponentSpring r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ComponentSpring;

        i1 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: boolean isVisible()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: int pref>;

        if $i0 < 0 goto label2;

        $i3 = r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: int pref>;

        return $i3;

     label2:
        $r1 = r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: com.sun.lwuit.Component component>;

        $r2 = virtualinvoke $r1.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension getPreferredSize()>();

        $i2 = specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: int getSizeAlongAxis(int,com.sun.lwuit.geom.Dimension)>(i1, $r2);

        return $i2;
    }

    int calculateNonlinkedMaximumSize(int)
    {
        com.sun.lwuit.Component $r1;
        com.sun.lwuit.geom.Dimension $r2;
        int $i0, $i1, i2, $i3, $i4, $i5, $i7;
        com.sun.lwuit.layouts.GroupLayout$ComponentSpring r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ComponentSpring;

        i2 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: boolean isVisible()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: int max>;

        if $i0 < 0 goto label2;

        $i5 = r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: int max>;

        return $i5;

     label2:
        $i1 = r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: int max>;

        $i7 = (int) -2;

        if $i1 != $i7 goto label3;

        $i4 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: int calculateNonlinkedPreferredSize(int)>(i2);

        return $i4;

     label3:
        $r1 = r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: com.sun.lwuit.Component component>;

        $r2 = virtualinvoke $r1.<com.sun.lwuit.Component: com.sun.lwuit.geom.Dimension getPreferredSize()>();

        $i3 = specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: int getSizeAlongAxis(int,com.sun.lwuit.geom.Dimension)>(i2, $r2);

        return $i3;
    }

    private int getSizeAlongAxis(int, com.sun.lwuit.geom.Dimension)
    {
        com.sun.lwuit.geom.Dimension r0;
        int i0, $i1;
        com.sun.lwuit.layouts.GroupLayout$ComponentSpring r1;

        r1 := @this: com.sun.lwuit.layouts.GroupLayout$ComponentSpring;

        i0 := @parameter0: int;

        r0 := @parameter1: com.sun.lwuit.geom.Dimension;

        if i0 != 1 goto label1;

        $i1 = virtualinvoke r0.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        goto label2;

     label1:
        $i1 = virtualinvoke r0.<com.sun.lwuit.geom.Dimension: int getHeight()>();

     label2:
        return $i1;
    }

    private int getLinkSize(int, int)
    {
        com.sun.lwuit.layouts.GroupLayout $r2;
        com.sun.lwuit.layouts.GroupLayout$ComponentInfo $r3;
        com.sun.lwuit.Component $r1;
        int i0, i1, $i2;
        com.sun.lwuit.layouts.GroupLayout$ComponentSpring r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ComponentSpring;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: boolean isVisible()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: com.sun.lwuit.layouts.GroupLayout this$0>;

        $r1 = r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: com.sun.lwuit.Component component>;

        $r3 = staticinvoke <com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$ComponentInfo access$800(com.sun.lwuit.layouts.GroupLayout,com.sun.lwuit.Component)>($r2, $r1);

        $i2 = virtualinvoke $r3.<com.sun.lwuit.layouts.GroupLayout$ComponentInfo: int getLinkSize(int,int)>(i0, i1);

        return $i2;
    }

    void setSize(int, int, int)
    {
        int i0, i1, i2, $i4;
        com.sun.lwuit.layouts.GroupLayout$ComponentSpring r0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ComponentSpring;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout$Spring: void setSize(int,int,int)>(i0, i1, i2);

        r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: int origin> = i1;

        if i2 != -2147483648 goto label1;

        $i4 = (int) -1;

        r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: int baseline> = $i4;

     label1:
        return;
    }

    int getOrigin()
    {
        int $i0;
        com.sun.lwuit.layouts.GroupLayout$ComponentSpring r0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ComponentSpring;

        $i0 = r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: int origin>;

        return $i0;
    }

    void setComponent(com.sun.lwuit.Component)
    {
        com.sun.lwuit.Component r1;
        com.sun.lwuit.layouts.GroupLayout$ComponentSpring r0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ComponentSpring;

        r1 := @parameter0: com.sun.lwuit.Component;

        r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: com.sun.lwuit.Component component> = r1;

        return;
    }

    com.sun.lwuit.Component getComponent()
    {
        com.sun.lwuit.Component $r1;
        com.sun.lwuit.layouts.GroupLayout$ComponentSpring r0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ComponentSpring;

        $r1 = r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: com.sun.lwuit.Component component>;

        return $r1;
    }

    int getBaseline()
    {
        com.sun.lwuit.layouts.GroupLayout $r2;
        com.sun.lwuit.layouts.GroupLayout$ComponentInfo $r3;
        com.sun.lwuit.Component $r1, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        com.sun.lwuit.layouts.GroupLayout$ComponentSpring r0, r4;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ComponentSpring;

        $i0 = r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: int baseline>;

        $i6 = (int) -1;

        if $i0 != $i6 goto label1;

        $r2 = r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: com.sun.lwuit.layouts.GroupLayout this$0>;

        $r1 = r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: com.sun.lwuit.Component component>;

        $r3 = staticinvoke <com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$ComponentInfo access$800(com.sun.lwuit.layouts.GroupLayout,com.sun.lwuit.Component)>($r2, $r1);

        r4 = $r3.<com.sun.lwuit.layouts.GroupLayout$ComponentInfo: com.sun.lwuit.layouts.GroupLayout$ComponentSpring horizontalSpring>;

        $i1 = virtualinvoke r4.<com.sun.lwuit.layouts.GroupLayout$Spring: int getPreferredSize(int)>(1);

        $i2 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: int getPreferredSize(int)>(2);

        if $i1 <= 0 goto label1;

        if $i2 <= 0 goto label1;

        $r5 = r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: com.sun.lwuit.Component component>;

        $i3 = virtualinvoke $r5.<com.sun.lwuit.Component: int getBaseline(int,int)>($i1, $i2);

        r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: int baseline> = $i3;

     label1:
        $i4 = r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: int baseline>;

        return $i4;
    }

    int getBaselineResizeBehavior()
    {
        com.sun.lwuit.Component $r1;
        int $i0;
        com.sun.lwuit.layouts.GroupLayout$ComponentSpring r0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ComponentSpring;

        $r1 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: com.sun.lwuit.Component getComponent()>();

        $i0 = virtualinvoke $r1.<com.sun.lwuit.Component: int getBaselineResizeBehavior()>();

        return $i0;
    }

    private boolean isLinked(int)
    {
        com.sun.lwuit.Component $r1;
        com.sun.lwuit.layouts.GroupLayout $r2;
        int i0;
        com.sun.lwuit.layouts.GroupLayout$ComponentInfo $r3;
        com.sun.lwuit.layouts.GroupLayout$ComponentSpring r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ComponentSpring;

        i0 := @parameter0: int;

        $r2 = r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: com.sun.lwuit.layouts.GroupLayout this$0>;

        $r1 = r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: com.sun.lwuit.Component component>;

        $r3 = staticinvoke <com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$ComponentInfo access$800(com.sun.lwuit.layouts.GroupLayout,com.sun.lwuit.Component)>($r2, $r1);

        $z0 = virtualinvoke $r3.<com.sun.lwuit.layouts.GroupLayout$ComponentInfo: boolean isLinked(int)>(i0);

        return $z0;
    }

    void installIfNecessary(int)
    {
        com.sun.lwuit.layouts.GroupLayout $r2, $r5;
        com.sun.lwuit.layouts.GroupLayout$ComponentInfo $r3, $r6;
        com.sun.lwuit.Component $r1, $r4;
        int i0;
        com.sun.lwuit.layouts.GroupLayout$ComponentSpring r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ComponentSpring;

        i0 := @parameter0: int;

        $z0 = r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: boolean installed>;

        if $z0 != 0 goto label2;

        r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: boolean installed> = 1;

        if i0 != 1 goto label1;

        $r5 = r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: com.sun.lwuit.layouts.GroupLayout this$0>;

        $r4 = r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: com.sun.lwuit.Component component>;

        $r6 = staticinvoke <com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$ComponentInfo access$800(com.sun.lwuit.layouts.GroupLayout,com.sun.lwuit.Component)>($r5, $r4);

        $r6.<com.sun.lwuit.layouts.GroupLayout$ComponentInfo: com.sun.lwuit.layouts.GroupLayout$ComponentSpring horizontalSpring> = r0;

        goto label2;

     label1:
        $r2 = r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: com.sun.lwuit.layouts.GroupLayout this$0>;

        $r1 = r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: com.sun.lwuit.Component component>;

        $r3 = staticinvoke <com.sun.lwuit.layouts.GroupLayout: com.sun.lwuit.layouts.GroupLayout$ComponentInfo access$800(com.sun.lwuit.layouts.GroupLayout,com.sun.lwuit.Component)>($r2, $r1);

        $r3.<com.sun.lwuit.layouts.GroupLayout$ComponentInfo: com.sun.lwuit.layouts.GroupLayout$ComponentSpring verticalSpring> = r0;

     label2:
        return;
    }

    boolean willHaveZeroSize(boolean)
    {
        com.sun.lwuit.layouts.GroupLayout$ComponentSpring r0;
        boolean $z0, z1, $z2;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ComponentSpring;

        z1 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: boolean isVisible()>();

        if $z0 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    void <init>(com.sun.lwuit.layouts.GroupLayout, com.sun.lwuit.Component, int, int, int, com.sun.lwuit.layouts.GroupLayout$1)
    {
        com.sun.lwuit.Component r2;
        com.sun.lwuit.layouts.GroupLayout$1 r3;
        com.sun.lwuit.layouts.GroupLayout r1;
        int i0, i1, i2;
        com.sun.lwuit.layouts.GroupLayout$ComponentSpring r0;

        r0 := @this: com.sun.lwuit.layouts.GroupLayout$ComponentSpring;

        r1 := @parameter0: com.sun.lwuit.layouts.GroupLayout;

        r2 := @parameter1: com.sun.lwuit.Component;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r3 := @parameter5: com.sun.lwuit.layouts.GroupLayout$1;

        specialinvoke r0.<com.sun.lwuit.layouts.GroupLayout$ComponentSpring: void <init>(com.sun.lwuit.layouts.GroupLayout,com.sun.lwuit.Component,int,int,int)>(r1, r2, i0, i1, i2);

        return;
    }
}
