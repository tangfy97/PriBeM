final class com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerLong$LongArrayPack extends java.lang.Object
{
    long[] buf;
    int size;

    void <init>()
    {
        com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerLong$LongArrayPack r0;
        long[] $r1;

        r0 := @this: com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerLong$LongArrayPack;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (long)[16];

        r0.<com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerLong$LongArrayPack: long[] buf> = $r1;

        return;
    }

    void add(java.lang.Long)
    {
        long $l4;
        long[] $r1, $r3, $r4, r5, $r6, $r7;
        java.lang.Long r2;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7;
        com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerLong$LongArrayPack r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerLong$LongArrayPack;

        r2 := @parameter0: java.lang.Long;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerLong$LongArrayPack: long[] buf>;

        $i1 = lengthof $r1;

        $i0 = r0.<com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerLong$LongArrayPack: int size>;

        if $i1 != $i0 goto label1;

        $r4 = r0.<com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerLong$LongArrayPack: long[] buf>;

        $i5 = lengthof $r4;

        $i6 = $i5 * 2;

        r5 = newarray (long)[$i6];

        $r7 = r0.<com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerLong$LongArrayPack: long[] buf>;

        $r6 = r0.<com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerLong$LongArrayPack: long[] buf>;

        $i7 = lengthof $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, r5, 0, $i7);

        r0.<com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerLong$LongArrayPack: long[] buf> = r5;

     label1:
        if r2 == null goto label2;

        $r3 = r0.<com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerLong$LongArrayPack: long[] buf>;

        $i2 = r0.<com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerLong$LongArrayPack: int size>;

        $i3 = $i2 + 1;

        r0.<com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerLong$LongArrayPack: int size> = $i3;

        $l4 = virtualinvoke r2.<java.lang.Long: long longValue()>();

        $r3[$i2] = $l4;

     label2:
        return;
    }

    long[] build()
    {
        long[] $r1, r2, $r3, $r4;
        int $i0, $i1, $i2, $i3;
        com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerLong$LongArrayPack r0;

        r0 := @this: com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerLong$LongArrayPack;

        $r1 = r0.<com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerLong$LongArrayPack: long[] buf>;

        $i1 = lengthof $r1;

        $i0 = r0.<com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerLong$LongArrayPack: int size>;

        if $i1 != $i0 goto label1;

        $r4 = r0.<com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerLong$LongArrayPack: long[] buf>;

        return $r4;

     label1:
        $i2 = r0.<com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerLong$LongArrayPack: int size>;

        r2 = newarray (long)[$i2];

        $r3 = r0.<com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerLong$LongArrayPack: long[] buf>;

        $i3 = r0.<com.sun.xml.bind.v2.runtime.reflect.PrimitiveArrayListerLong$LongArrayPack: int size>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r2, 0, $i3);

        return r2;
    }
}
