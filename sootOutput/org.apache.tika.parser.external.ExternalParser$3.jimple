class org.apache.tika.parser.external.ExternalParser$3 extends java.lang.Thread
{
    final java.io.InputStream val$stream;
    final org.apache.tika.metadata.Metadata val$metadata;
    final org.apache.tika.parser.external.ExternalParser this$0;

    void <init>(org.apache.tika.parser.external.ExternalParser, java.io.InputStream, org.apache.tika.metadata.Metadata)
    {
        org.apache.tika.parser.external.ExternalParser$3 r0;
        org.apache.tika.parser.external.ExternalParser r1;
        org.apache.tika.metadata.Metadata r3;
        java.io.InputStream r2;

        r0 := @this: org.apache.tika.parser.external.ExternalParser$3;

        r1 := @parameter0: org.apache.tika.parser.external.ExternalParser;

        r2 := @parameter1: java.io.InputStream;

        r3 := @parameter2: org.apache.tika.metadata.Metadata;

        r0.<org.apache.tika.parser.external.ExternalParser$3: org.apache.tika.parser.external.ExternalParser this$0> = r1;

        r0.<org.apache.tika.parser.external.ExternalParser$3: java.io.InputStream val$stream> = r2;

        r0.<org.apache.tika.parser.external.ExternalParser$3: org.apache.tika.metadata.Metadata val$metadata> = r3;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        return;
    }

    public void run()
    {
        java.lang.Throwable $r19;
        org.apache.tika.parser.external.ExternalParser$3 r2;
        org.apache.tika.parser.external.ExternalParser $r6, $r13;
        java.lang.AssertionError $r24;
        org.apache.tika.metadata.Metadata $r14;
        java.util.regex.Matcher $r12;
        java.util.Map $r7, $r15;
        java.lang.String $r4, $r17, $r18;
        boolean $z0, $z1;
        java.util.Iterator $r9;
        java.util.Set $r8;
        java.io.IOException $r21;
        java.io.InputStreamReader $r1;
        java.lang.Object $r10, $r16;
        java.io.BufferedReader $r0;
        java.util.regex.Pattern r11;
        java.io.UnsupportedEncodingException $r23;
        java.io.InputStream $r3, $r5, $r20, $r22;

        r2 := @this: org.apache.tika.parser.external.ExternalParser$3;

     label01:
        $r0 = new java.io.BufferedReader;

        $r1 = new java.io.InputStreamReader;

        $r3 = r2.<org.apache.tika.parser.external.ExternalParser$3: java.io.InputStream val$stream>;

        specialinvoke $r1.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r3, "UTF-8");

        specialinvoke $r0.<java.io.BufferedReader: void <init>(java.io.Reader)>($r1);

     label02:
        goto label04;

     label03:
        $r23 := @caughtexception;

        $r24 = new java.lang.AssertionError;

        specialinvoke $r24.<java.lang.AssertionError: void <init>(java.lang.Object)>("UTF-8 not supported.");

        throw $r24;

     label04:
        $r4 = virtualinvoke $r0.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r4 == null goto label08;

        $r6 = r2.<org.apache.tika.parser.external.ExternalParser$3: org.apache.tika.parser.external.ExternalParser this$0>;

        $r7 = staticinvoke <org.apache.tika.parser.external.ExternalParser: java.util.Map access$000(org.apache.tika.parser.external.ExternalParser)>($r6);

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set keySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.util.regex.Pattern) $r10;

        $r12 = virtualinvoke r11.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r4);

        $z1 = virtualinvoke $r12.<java.util.regex.Matcher: boolean find()>();

        if $z1 == 0 goto label06;

        $r14 = r2.<org.apache.tika.parser.external.ExternalParser$3: org.apache.tika.metadata.Metadata val$metadata>;

        $r13 = r2.<org.apache.tika.parser.external.ExternalParser$3: org.apache.tika.parser.external.ExternalParser this$0>;

        $r15 = staticinvoke <org.apache.tika.parser.external.ExternalParser: java.util.Map access$000(org.apache.tika.parser.external.ExternalParser)>($r13);

        $r16 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r11);

        $r17 = (java.lang.String) $r16;

        $r18 = virtualinvoke $r12.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        virtualinvoke $r14.<org.apache.tika.metadata.Metadata: void add(java.lang.String,java.lang.String)>($r17, $r18);

     label06:
        goto label05;

     label07:
        goto label04;

     label08:
        staticinvoke <org.apache.tika.io.IOUtils: void closeQuietly(java.io.Reader)>($r0);

        $r5 = r2.<org.apache.tika.parser.external.ExternalParser$3: java.io.InputStream val$stream>;

        staticinvoke <org.apache.tika.io.IOUtils: void closeQuietly(java.io.InputStream)>($r5);

        goto label13;

     label09:
        $r21 := @caughtexception;

     label10:
        staticinvoke <org.apache.tika.io.IOUtils: void closeQuietly(java.io.Reader)>($r0);

        $r22 = r2.<org.apache.tika.parser.external.ExternalParser$3: java.io.InputStream val$stream>;

        staticinvoke <org.apache.tika.io.IOUtils: void closeQuietly(java.io.InputStream)>($r22);

        goto label13;

     label11:
        $r19 := @caughtexception;

     label12:
        staticinvoke <org.apache.tika.io.IOUtils: void closeQuietly(java.io.Reader)>($r0);

        $r20 = r2.<org.apache.tika.parser.external.ExternalParser$3: java.io.InputStream val$stream>;

        staticinvoke <org.apache.tika.io.IOUtils: void closeQuietly(java.io.InputStream)>($r20);

        throw $r19;

     label13:
        return;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label03;
        catch java.io.IOException from label04 to label08 with label09;
        catch java.lang.Throwable from label04 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }
}
