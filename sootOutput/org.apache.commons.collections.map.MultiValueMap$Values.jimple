class org.apache.commons.collections.map.MultiValueMap$Values extends java.util.AbstractCollection
{
    private final org.apache.commons.collections.map.MultiValueMap this$0;

    private void <init>(org.apache.commons.collections.map.MultiValueMap)
    {
        org.apache.commons.collections.map.MultiValueMap r1;
        org.apache.commons.collections.map.MultiValueMap$Values r0;

        r0 := @this: org.apache.commons.collections.map.MultiValueMap$Values;

        r1 := @parameter0: org.apache.commons.collections.map.MultiValueMap;

        specialinvoke r0.<java.util.AbstractCollection: void <init>()>();

        r0.<org.apache.commons.collections.map.MultiValueMap$Values: org.apache.commons.collections.map.MultiValueMap this$0> = r1;

        return;
    }

    public java.util.Iterator iterator()
    {
        java.util.Iterator $r4;
        java.util.Set $r3;
        org.apache.commons.collections.map.MultiValueMap $r2, $r6;
        org.apache.commons.collections.map.MultiValueMap$ValuesIterator $r5;
        org.apache.commons.collections.map.MultiValueMap$Values r1;
        java.lang.Object $r7;
        org.apache.commons.collections.iterators.IteratorChain $r0;
        boolean $z0;

        r1 := @this: org.apache.commons.collections.map.MultiValueMap$Values;

        $r0 = new org.apache.commons.collections.iterators.IteratorChain;

        specialinvoke $r0.<org.apache.commons.collections.iterators.IteratorChain: void <init>()>();

        $r2 = r1.<org.apache.commons.collections.map.MultiValueMap$Values: org.apache.commons.collections.map.MultiValueMap this$0>;

        $r3 = virtualinvoke $r2.<org.apache.commons.collections.map.MultiValueMap: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = new org.apache.commons.collections.map.MultiValueMap$ValuesIterator;

        $r6 = r1.<org.apache.commons.collections.map.MultiValueMap$Values: org.apache.commons.collections.map.MultiValueMap this$0>;

        $r7 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        specialinvoke $r5.<org.apache.commons.collections.map.MultiValueMap$ValuesIterator: void <init>(org.apache.commons.collections.map.MultiValueMap,java.lang.Object)>($r6, $r7);

        virtualinvoke $r0.<org.apache.commons.collections.iterators.IteratorChain: void addIterator(java.util.Iterator)>($r5);

        goto label1;

     label2:
        return $r0;
    }

    public int size()
    {
        org.apache.commons.collections.map.MultiValueMap $r1;
        int $i0;
        org.apache.commons.collections.map.MultiValueMap$Values r0;

        r0 := @this: org.apache.commons.collections.map.MultiValueMap$Values;

        $r1 = r0.<org.apache.commons.collections.map.MultiValueMap$Values: org.apache.commons.collections.map.MultiValueMap this$0>;

        $i0 = virtualinvoke $r1.<org.apache.commons.collections.map.MultiValueMap: int totalSize()>();

        return $i0;
    }

    public void clear()
    {
        org.apache.commons.collections.map.MultiValueMap $r1;
        org.apache.commons.collections.map.MultiValueMap$Values r0;

        r0 := @this: org.apache.commons.collections.map.MultiValueMap$Values;

        $r1 = r0.<org.apache.commons.collections.map.MultiValueMap$Values: org.apache.commons.collections.map.MultiValueMap this$0>;

        virtualinvoke $r1.<org.apache.commons.collections.map.MultiValueMap: void clear()>();

        return;
    }

    void <init>(org.apache.commons.collections.map.MultiValueMap, org.apache.commons.collections.map.MultiValueMap$1)
    {
        org.apache.commons.collections.map.MultiValueMap r1;
        org.apache.commons.collections.map.MultiValueMap$1 r2;
        org.apache.commons.collections.map.MultiValueMap$Values r0;

        r0 := @this: org.apache.commons.collections.map.MultiValueMap$Values;

        r1 := @parameter0: org.apache.commons.collections.map.MultiValueMap;

        r2 := @parameter1: org.apache.commons.collections.map.MultiValueMap$1;

        specialinvoke r0.<org.apache.commons.collections.map.MultiValueMap$Values: void <init>(org.apache.commons.collections.map.MultiValueMap)>(r1);

        return;
    }
}
