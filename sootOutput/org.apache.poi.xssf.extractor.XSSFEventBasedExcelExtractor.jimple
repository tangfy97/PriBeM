public class org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor extends org.apache.poi.POIXMLTextExtractor implements org.apache.poi.ss.extractor.ExcelExtractor
{
    private org.apache.poi.openxml4j.opc.OPCPackage container;
    private org.apache.poi.POIXMLProperties properties;
    private java.util.Locale locale;
    private boolean includeTextBoxes;
    private boolean includeSheetNames;
    private boolean includeCellComments;
    private boolean includeHeadersFooters;
    private boolean formulasNotResults;

    public void <init>(java.lang.String) throws org.apache.xmlbeans.XmlException, org.apache.poi.openxml4j.exceptions.OpenXML4JException, java.io.IOException
    {
        java.lang.String r1;
        org.apache.poi.openxml4j.opc.OPCPackage $r2;
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor r0;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.OPCPackage open(java.lang.String)>(r1);

        specialinvoke r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: void <init>(org.apache.poi.openxml4j.opc.OPCPackage)>($r2);

        return;
    }

    public void <init>(org.apache.poi.openxml4j.opc.OPCPackage) throws org.apache.xmlbeans.XmlException, org.apache.poi.openxml4j.exceptions.OpenXML4JException, java.io.IOException
    {
        org.apache.poi.POIXMLProperties $r2;
        org.apache.poi.openxml4j.opc.OPCPackage r1;
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor r0;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor;

        r1 := @parameter0: org.apache.poi.openxml4j.opc.OPCPackage;

        specialinvoke r0.<org.apache.poi.POIXMLTextExtractor: void <init>(org.apache.poi.POIXMLDocument)>(null);

        r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: boolean includeTextBoxes> = 1;

        r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: boolean includeSheetNames> = 1;

        r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: boolean includeCellComments> = 0;

        r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: boolean includeHeadersFooters> = 1;

        r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: boolean formulasNotResults> = 0;

        r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: org.apache.poi.openxml4j.opc.OPCPackage container> = r1;

        $r2 = new org.apache.poi.POIXMLProperties;

        specialinvoke $r2.<org.apache.poi.POIXMLProperties: void <init>(org.apache.poi.openxml4j.opc.OPCPackage)>(r1);

        r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: org.apache.poi.POIXMLProperties properties> = $r2;

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.io.PrintStream $r3, $r5, $r6;
        java.lang.String[] r0;
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor $r1;
        int $i0;
        java.lang.String $r2, $r4;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 >= 1 goto label1;

        $r5 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("Use:");

        $r6 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("  XSSFEventBasedExcelExtractor <filename.xlsx>");

        staticinvoke <java.lang.System: void exit(int)>(1);

     label1:
        $r1 = new org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor;

        $r2 = r0[0];

        specialinvoke $r1.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: void <init>(java.lang.String)>($r2);

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r4 = virtualinvoke $r1.<org.apache.poi.POIXMLTextExtractor: java.lang.String getText()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

        virtualinvoke $r1.<org.apache.poi.POIXMLTextExtractor: void close()>();

        return;
    }

    public void setIncludeSheetNames(boolean)
    {
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor r0;
        boolean z0;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: boolean includeSheetNames> = z0;

        return;
    }

    public void setFormulasNotResults(boolean)
    {
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor r0;
        boolean z0;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: boolean formulasNotResults> = z0;

        return;
    }

    public void setIncludeHeadersFooters(boolean)
    {
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor r0;
        boolean z0;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: boolean includeHeadersFooters> = z0;

        return;
    }

    public void setIncludeTextBoxes(boolean)
    {
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor r0;
        boolean z0;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: boolean includeTextBoxes> = z0;

        return;
    }

    public void setIncludeCellComments(boolean)
    {
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor r0;
        boolean z0;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: boolean includeCellComments> = z0;

        return;
    }

    public void setLocale(java.util.Locale)
    {
        java.util.Locale r1;
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor r0;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor;

        r1 := @parameter0: java.util.Locale;

        r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: java.util.Locale locale> = r1;

        return;
    }

    public org.apache.poi.openxml4j.opc.OPCPackage getPackage()
    {
        org.apache.poi.openxml4j.opc.OPCPackage $r1;
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor r0;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor;

        $r1 = r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: org.apache.poi.openxml4j.opc.OPCPackage container>;

        return $r1;
    }

    public org.apache.poi.POIXMLProperties$CoreProperties getCoreProperties()
    {
        org.apache.poi.POIXMLProperties $r1;
        org.apache.poi.POIXMLProperties$CoreProperties $r2;
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor r0;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor;

        $r1 = r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: org.apache.poi.POIXMLProperties properties>;

        $r2 = virtualinvoke $r1.<org.apache.poi.POIXMLProperties: org.apache.poi.POIXMLProperties$CoreProperties getCoreProperties()>();

        return $r2;
    }

    public org.apache.poi.POIXMLProperties$ExtendedProperties getExtendedProperties()
    {
        org.apache.poi.POIXMLProperties $r1;
        org.apache.poi.POIXMLProperties$ExtendedProperties $r2;
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor r0;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor;

        $r1 = r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: org.apache.poi.POIXMLProperties properties>;

        $r2 = virtualinvoke $r1.<org.apache.poi.POIXMLProperties: org.apache.poi.POIXMLProperties$ExtendedProperties getExtendedProperties()>();

        return $r2;
    }

    public org.apache.poi.POIXMLProperties$CustomProperties getCustomProperties()
    {
        org.apache.poi.POIXMLProperties $r1;
        org.apache.poi.POIXMLProperties$CustomProperties $r2;
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor r0;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor;

        $r1 = r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: org.apache.poi.POIXMLProperties properties>;

        $r2 = virtualinvoke $r1.<org.apache.poi.POIXMLProperties: org.apache.poi.POIXMLProperties$CustomProperties getCustomProperties()>();

        return $r2;
    }

    public void processSheet(org.apache.poi.xssf.eventusermodel.XSSFSheetXMLHandler$SheetContentsHandler, org.apache.poi.xssf.model.StylesTable, org.apache.poi.xssf.model.CommentsTable, org.apache.poi.xssf.eventusermodel.ReadOnlySharedStringsTable, java.io.InputStream) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.apache.poi.xssf.model.StylesTable r8;
        org.xml.sax.XMLReader $r6;
        org.apache.poi.xssf.eventusermodel.ReadOnlySharedStringsTable r10;
        org.apache.poi.xssf.eventusermodel.XSSFSheetXMLHandler $r7;
        java.util.Locale $r1, $r3;
        org.apache.poi.ss.usermodel.DataFormatter $r2, $r12, r20;
        java.lang.String $r17, $r19;
        boolean $z0;
        org.xml.sax.InputSource $r4;
        org.apache.poi.xssf.model.CommentsTable r9;
        java.lang.RuntimeException $r14;
        org.apache.poi.xssf.eventusermodel.XSSFSheetXMLHandler$SheetContentsHandler r11;
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor r0;
        javax.xml.parsers.ParserConfigurationException $r13;
        java.lang.StringBuilder $r15, $r16, $r18;
        java.io.InputStream r5;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor;

        r11 := @parameter0: org.apache.poi.xssf.eventusermodel.XSSFSheetXMLHandler$SheetContentsHandler;

        r8 := @parameter1: org.apache.poi.xssf.model.StylesTable;

        r9 := @parameter2: org.apache.poi.xssf.model.CommentsTable;

        r10 := @parameter3: org.apache.poi.xssf.eventusermodel.ReadOnlySharedStringsTable;

        r5 := @parameter4: java.io.InputStream;

        $r1 = r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: java.util.Locale locale>;

        if $r1 != null goto label1;

        $r12 = new org.apache.poi.ss.usermodel.DataFormatter;

        specialinvoke $r12.<org.apache.poi.ss.usermodel.DataFormatter: void <init>()>();

        r20 = $r12;

        goto label2;

     label1:
        $r2 = new org.apache.poi.ss.usermodel.DataFormatter;

        $r3 = r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: java.util.Locale locale>;

        specialinvoke $r2.<org.apache.poi.ss.usermodel.DataFormatter: void <init>(java.util.Locale)>($r3);

        r20 = $r2;

     label2:
        $r4 = new org.xml.sax.InputSource;

        specialinvoke $r4.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>(r5);

     label3:
        $r6 = staticinvoke <org.apache.poi.util.SAXHelper: org.xml.sax.XMLReader newXMLReader()>();

        $r7 = new org.apache.poi.xssf.eventusermodel.XSSFSheetXMLHandler;

        $z0 = r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: boolean formulasNotResults>;

        specialinvoke $r7.<org.apache.poi.xssf.eventusermodel.XSSFSheetXMLHandler: void <init>(org.apache.poi.xssf.model.StylesTable,org.apache.poi.xssf.model.CommentsTable,org.apache.poi.xssf.eventusermodel.ReadOnlySharedStringsTable,org.apache.poi.xssf.eventusermodel.XSSFSheetXMLHandler$SheetContentsHandler,org.apache.poi.ss.usermodel.DataFormatter,boolean)>(r8, r9, r10, r11, r20, $z0);

        interfaceinvoke $r6.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>($r7);

        interfaceinvoke $r6.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>($r4);

     label4:
        goto label6;

     label5:
        $r13 := @caughtexception;

        $r14 = new java.lang.RuntimeException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SAX parser appears to be broken - ");

        $r17 = virtualinvoke $r13.<javax.xml.parsers.ParserConfigurationException: java.lang.String getMessage()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>($r19);

        throw $r14;

     label6:
        return;

        catch javax.xml.parsers.ParserConfigurationException from label3 to label4 with label5;
    }

    public java.lang.String getText()
    {
        org.apache.poi.xssf.model.StylesTable $r5;
        org.apache.poi.xssf.eventusermodel.ReadOnlySharedStringsTable $r0;
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor $r9;
        java.lang.StringBuffer $r8;
        java.lang.String $r10, $r13;
        org.apache.poi.xssf.eventusermodel.XSSFReader $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.io.PrintStream $r15, $r17, $r19;
        java.util.Iterator $r6;
        org.apache.poi.xssf.model.CommentsTable $r20;
        org.apache.poi.openxml4j.exceptions.OpenXML4JException $r14;
        java.io.IOException $r18;
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor r1;
        java.util.List $r12;
        org.apache.poi.openxml4j.opc.OPCPackage $r2, $r4;
        org.xml.sax.SAXException $r16;
        org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator r7;
        java.io.InputStream $r11;

        r1 := @this: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor;

     label01:
        $r0 = new org.apache.poi.xssf.eventusermodel.ReadOnlySharedStringsTable;

        $r2 = r1.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: org.apache.poi.openxml4j.opc.OPCPackage container>;

        specialinvoke $r0.<org.apache.poi.xssf.eventusermodel.ReadOnlySharedStringsTable: void <init>(org.apache.poi.openxml4j.opc.OPCPackage)>($r2);

        $r3 = new org.apache.poi.xssf.eventusermodel.XSSFReader;

        $r4 = r1.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: org.apache.poi.openxml4j.opc.OPCPackage container>;

        specialinvoke $r3.<org.apache.poi.xssf.eventusermodel.XSSFReader: void <init>(org.apache.poi.openxml4j.opc.OPCPackage)>($r4);

        $r5 = virtualinvoke $r3.<org.apache.poi.xssf.eventusermodel.XSSFReader: org.apache.poi.xssf.model.StylesTable getStylesTable()>();

        $r6 = virtualinvoke $r3.<org.apache.poi.xssf.eventusermodel.XSSFReader: java.util.Iterator getSheetsData()>();

        r7 = (org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator) $r6;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = new org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor;

        specialinvoke $r9.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: void <init>(org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor)>(r1);

     label02:
        $z0 = virtualinvoke r7.<org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r11 = virtualinvoke r7.<org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator: java.io.InputStream next()>();

        $z1 = r1.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: boolean includeSheetNames>;

        if $z1 == 0 goto label03;

        $r13 = virtualinvoke r7.<org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator: java.lang.String getSheetName()>();

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

     label03:
        $z2 = r1.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: boolean includeCellComments>;

        if $z2 == 0 goto label04;

        $r20 = virtualinvoke r7.<org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator: org.apache.poi.xssf.model.CommentsTable getSheetComments()>();

        goto label05;

     label04:
        $r20 = null;

     label05:
        virtualinvoke r1.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: void processSheet(org.apache.poi.xssf.eventusermodel.XSSFSheetXMLHandler$SheetContentsHandler,org.apache.poi.xssf.model.StylesTable,org.apache.poi.xssf.model.CommentsTable,org.apache.poi.xssf.eventusermodel.ReadOnlySharedStringsTable,java.io.InputStream)>($r9, $r5, $r20, $r0, $r11);

        $z3 = r1.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: boolean includeHeadersFooters>;

        if $z3 == 0 goto label06;

        staticinvoke <org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: void access$000(org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor,java.lang.StringBuffer)>($r9, $r8);

     label06:
        staticinvoke <org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: void access$100(org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor,java.lang.StringBuffer)>($r9, $r8);

        $z4 = r1.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: boolean includeTextBoxes>;

        if $z4 == 0 goto label07;

        $r12 = virtualinvoke r7.<org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator: java.util.List getShapes()>();

        specialinvoke r1.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: void processShapes(java.util.List,java.lang.StringBuffer)>($r12, $r8);

     label07:
        $z5 = r1.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: boolean includeHeadersFooters>;

        if $z5 == 0 goto label08;

        staticinvoke <org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: void access$200(org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor,java.lang.StringBuffer)>($r9, $r8);

     label08:
        staticinvoke <org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor: void access$300(org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor$SheetTextExtractor)>($r9);

        virtualinvoke $r11.<java.io.InputStream: void close()>();

        goto label02;

     label09:
        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

     label10:
        return $r10;

     label11:
        $r18 := @caughtexception;

        $r19 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.Object)>($r18);

        return null;

     label12:
        $r16 := @caughtexception;

        $r17 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.Object)>($r16);

        return null;

     label13:
        $r14 := @caughtexception;

        $r15 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.Object)>($r14);

        return null;

        catch java.io.IOException from label01 to label10 with label11;
        catch org.xml.sax.SAXException from label01 to label10 with label12;
        catch org.apache.poi.openxml4j.exceptions.OpenXML4JException from label01 to label10 with label13;
    }

    private void processShapes(java.util.List, java.lang.StringBuffer)
    {
        java.util.Iterator $r1;
        org.apache.poi.xssf.usermodel.XSSFSimpleShape $r4;
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor r8;
        java.util.List r0;
        java.lang.StringBuffer r6, $r7;
        int $i0;
        java.lang.Object $r2;
        java.lang.String $r5;
        org.apache.poi.xssf.usermodel.XSSFShape r3;
        boolean $z0, $z1;

        r8 := @this: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor;

        r0 := @parameter0: java.util.List;

        r6 := @parameter1: java.lang.StringBuffer;

        if r0 != null goto label1;

        return;

     label1:
        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.poi.xssf.usermodel.XSSFShape) $r2;

        $z1 = r3 instanceof org.apache.poi.xssf.usermodel.XSSFSimpleShape;

        if $z1 == 0 goto label3;

        $r4 = (org.apache.poi.xssf.usermodel.XSSFSimpleShape) r3;

        $r5 = virtualinvoke $r4.<org.apache.poi.xssf.usermodel.XSSFSimpleShape: java.lang.String getText()>();

        if $r5 == null goto label3;

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 <= 0 goto label3;

        $r7 = virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

     label3:
        goto label2;

     label4:
        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.poi.openxml4j.opc.OPCPackage $r1, $r2;
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor r0;

        r0 := @this: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor;

        $r1 = r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: org.apache.poi.openxml4j.opc.OPCPackage container>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: org.apache.poi.openxml4j.opc.OPCPackage container>;

        virtualinvoke $r2.<org.apache.poi.openxml4j.opc.OPCPackage: void close()>();

        r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: org.apache.poi.openxml4j.opc.OPCPackage container> = null;

     label1:
        specialinvoke r0.<org.apache.poi.POIXMLTextExtractor: void close()>();

        return;
    }

    static boolean access$400(org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor)
    {
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor r0;
        boolean $z0;

        r0 := @parameter0: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor;

        $z0 = r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: boolean includeHeadersFooters>;

        return $z0;
    }

    static boolean access$500(org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor)
    {
        org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor r0;
        boolean $z0;

        r0 := @parameter0: org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor;

        $z0 = r0.<org.apache.poi.xssf.extractor.XSSFEventBasedExcelExtractor: boolean includeCellComments>;

        return $z0;
    }
}
