public class org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite extends org.bouncycastle.crypto.tls.TlsCipherSuite
{
    private org.bouncycastle.crypto.BlockCipher encryptCipher;
    private org.bouncycastle.crypto.BlockCipher decryptCipher;
    private org.bouncycastle.crypto.Digest writeDigest;
    private org.bouncycastle.crypto.Digest readDigest;
    private int cipherKeySize;
    private short keyExchange;
    private org.bouncycastle.crypto.tls.TlsMac writeMac;
    private org.bouncycastle.crypto.tls.TlsMac readMac;

    protected void <init>(org.bouncycastle.crypto.BlockCipher, org.bouncycastle.crypto.BlockCipher, org.bouncycastle.crypto.Digest, org.bouncycastle.crypto.Digest, int, short)
    {
        short s1;
        int i0;
        org.bouncycastle.crypto.Digest r3, r4;
        org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite r0;
        org.bouncycastle.crypto.BlockCipher r1, r2;

        r0 := @this: org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite;

        r1 := @parameter0: org.bouncycastle.crypto.BlockCipher;

        r2 := @parameter1: org.bouncycastle.crypto.BlockCipher;

        r3 := @parameter2: org.bouncycastle.crypto.Digest;

        r4 := @parameter3: org.bouncycastle.crypto.Digest;

        i0 := @parameter4: int;

        s1 := @parameter5: short;

        specialinvoke r0.<org.bouncycastle.crypto.tls.TlsCipherSuite: void <init>()>();

        r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: org.bouncycastle.crypto.BlockCipher encryptCipher> = r1;

        r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: org.bouncycastle.crypto.BlockCipher decryptCipher> = r2;

        r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: org.bouncycastle.crypto.Digest writeDigest> = r3;

        r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: org.bouncycastle.crypto.Digest readDigest> = r4;

        r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: int cipherKeySize> = i0;

        r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: short keyExchange> = s1;

        return;
    }

    protected void init(byte[], byte[], byte[])
    {
        byte[] r3, r4, r5, r6, r7, $r8;
        org.bouncycastle.crypto.tls.TlsMac $r9, $r13;
        org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite r0;
        org.bouncycastle.crypto.BlockCipher $r2, $r17, $r18, $r19;
        org.bouncycastle.crypto.Digest $r1, $r10, $r11, $r12, $r14, $r15, $r16;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i28, i29, i30;

        r0 := @this: org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite;

        r7 := @parameter0: byte[];

        r4 := @parameter1: byte[];

        r5 := @parameter2: byte[];

        $i0 = r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: int cipherKeySize>;

        $i1 = 2 * $i0;

        $r1 = r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: org.bouncycastle.crypto.Digest writeDigest>;

        $i2 = interfaceinvoke $r1.<org.bouncycastle.crypto.Digest: int getDigestSize()>();

        $i3 = 2 * $i2;

        $i4 = $i1 + $i3;

        $r2 = r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: org.bouncycastle.crypto.BlockCipher encryptCipher>;

        $i5 = interfaceinvoke $r2.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $i6 = 2 * $i5;

        i7 = $i4 + $i6;

        r3 = newarray (byte)[i7];

        $i9 = lengthof r4;

        $i8 = lengthof r5;

        $i10 = $i9 + $i8;

        r6 = newarray (byte)[$i10];

        $i12 = lengthof r5;

        $i11 = lengthof r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, r6, $i12, $i11);

        $i13 = lengthof r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, 0, r6, 0, $i13);

        $r8 = staticinvoke <org.bouncycastle.crypto.tls.TlsUtils: byte[] toByteArray(java.lang.String)>("key expansion");

        staticinvoke <org.bouncycastle.crypto.tls.TlsUtils: void PRF(byte[],byte[],byte[],byte[])>(r7, $r8, r6, r3);

        $r9 = new org.bouncycastle.crypto.tls.TlsMac;

        $r11 = r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: org.bouncycastle.crypto.Digest writeDigest>;

        $r10 = r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: org.bouncycastle.crypto.Digest writeDigest>;

        $i14 = interfaceinvoke $r10.<org.bouncycastle.crypto.Digest: int getDigestSize()>();

        specialinvoke $r9.<org.bouncycastle.crypto.tls.TlsMac: void <init>(org.bouncycastle.crypto.Digest,byte[],int,int)>($r11, r3, 0, $i14);

        r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: org.bouncycastle.crypto.tls.TlsMac writeMac> = $r9;

        $r12 = r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: org.bouncycastle.crypto.Digest writeDigest>;

        $i15 = interfaceinvoke $r12.<org.bouncycastle.crypto.Digest: int getDigestSize()>();

        i28 = 0 + $i15;

        $r13 = new org.bouncycastle.crypto.tls.TlsMac;

        $r15 = r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: org.bouncycastle.crypto.Digest readDigest>;

        $r14 = r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: org.bouncycastle.crypto.Digest readDigest>;

        $i16 = interfaceinvoke $r14.<org.bouncycastle.crypto.Digest: int getDigestSize()>();

        specialinvoke $r13.<org.bouncycastle.crypto.tls.TlsMac: void <init>(org.bouncycastle.crypto.Digest,byte[],int,int)>($r15, r3, i28, $i16);

        r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: org.bouncycastle.crypto.tls.TlsMac readMac> = $r13;

        $r16 = r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: org.bouncycastle.crypto.Digest readDigest>;

        $i17 = interfaceinvoke $r16.<org.bouncycastle.crypto.Digest: int getDigestSize()>();

        i29 = i28 + $i17;

        $r17 = r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: org.bouncycastle.crypto.BlockCipher encryptCipher>;

        $i21 = r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: int cipherKeySize>;

        $i18 = r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: int cipherKeySize>;

        $i19 = $i18 * 2;

        $i20 = i29 + $i19;

        specialinvoke r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: void initCipher(boolean,org.bouncycastle.crypto.BlockCipher,byte[],int,int,int)>(1, $r17, r3, $i21, i29, $i20);

        $i22 = r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: int cipherKeySize>;

        i30 = i29 + $i22;

        $r19 = r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: org.bouncycastle.crypto.BlockCipher decryptCipher>;

        $i24 = r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: int cipherKeySize>;

        $i23 = r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: int cipherKeySize>;

        $i25 = i30 + $i23;

        $r18 = r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: org.bouncycastle.crypto.BlockCipher decryptCipher>;

        $i26 = interfaceinvoke $r18.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $i27 = $i25 + $i26;

        specialinvoke r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: void initCipher(boolean,org.bouncycastle.crypto.BlockCipher,byte[],int,int,int)>(0, $r19, r3, $i24, i30, $i27);

        return;
    }

    private void initCipher(boolean, org.bouncycastle.crypto.BlockCipher, byte[], int, int, int)
    {
        byte[] r1;
        org.bouncycastle.crypto.params.ParametersWithIV $r2;
        org.bouncycastle.crypto.BlockCipher r3;
        org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite r4;
        int i0, i1, i2, $i3;
        org.bouncycastle.crypto.params.KeyParameter $r0;
        boolean z0;

        r4 := @this: org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite;

        z0 := @parameter0: boolean;

        r3 := @parameter1: org.bouncycastle.crypto.BlockCipher;

        r1 := @parameter2: byte[];

        i1 := @parameter3: int;

        i0 := @parameter4: int;

        i2 := @parameter5: int;

        $r0 = new org.bouncycastle.crypto.params.KeyParameter;

        specialinvoke $r0.<org.bouncycastle.crypto.params.KeyParameter: void <init>(byte[],int,int)>(r1, i0, i1);

        $r2 = new org.bouncycastle.crypto.params.ParametersWithIV;

        $i3 = interfaceinvoke r3.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        specialinvoke $r2.<org.bouncycastle.crypto.params.ParametersWithIV: void <init>(org.bouncycastle.crypto.CipherParameters,byte[],int,int)>($r0, r1, i2, $i3);

        interfaceinvoke r3.<org.bouncycastle.crypto.BlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(z0, $r2);

        return;
    }

    protected byte[] encodePlaintext(short, byte[], int, int)
    {
        byte[] r4, r5, $r7;
        short s12;
        byte $b16;
        int $i0, i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, i10, i11, $i13, $i14, i15, $i17, i18, i19;
        org.bouncycastle.crypto.tls.TlsMac $r2, $r3, $r6;
        org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite r0;
        org.bouncycastle.crypto.BlockCipher $r1, $r8;

        r0 := @this: org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite;

        s12 := @parameter0: short;

        r5 := @parameter1: byte[];

        i11 := @parameter2: int;

        i1 := @parameter3: int;

        $r1 = r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: org.bouncycastle.crypto.BlockCipher encryptCipher>;

        $i0 = interfaceinvoke $r1.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $r2 = r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: org.bouncycastle.crypto.tls.TlsMac writeMac>;

        $i2 = virtualinvoke $r2.<org.bouncycastle.crypto.tls.TlsMac: int getSize()>();

        $i3 = i1 + $i2;

        $i4 = $i3 + 1;

        $i5 = $i4 % $i0;

        i6 = $i0 - $i5;

        $r3 = r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: org.bouncycastle.crypto.tls.TlsMac writeMac>;

        $i7 = virtualinvoke $r3.<org.bouncycastle.crypto.tls.TlsMac: int getSize()>();

        $i8 = i1 + $i7;

        $i9 = $i8 + i6;

        i10 = $i9 + 1;

        r4 = newarray (byte)[i10];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, i11, r4, 0, i1);

        $r6 = r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: org.bouncycastle.crypto.tls.TlsMac writeMac>;

        $r7 = virtualinvoke $r6.<org.bouncycastle.crypto.tls.TlsMac: byte[] calculateMac(short,byte[],int,int)>(s12, r5, i11, i1);

        $i13 = lengthof $r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, r4, i1, $i13);

        $i14 = lengthof $r7;

        i15 = i1 + $i14;

        i18 = 0;

     label1:
        if i18 > i6 goto label2;

        $i17 = i18 + i15;

        $b16 = (byte) i6;

        r4[$i17] = $b16;

        i18 = i18 + 1;

        goto label1;

     label2:
        i19 = 0;

     label3:
        if i19 >= i10 goto label4;

        $r8 = r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: org.bouncycastle.crypto.BlockCipher encryptCipher>;

        interfaceinvoke $r8.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>(r4, i19, r4, i19);

        i19 = i19 + $i0;

        goto label3;

     label4:
        return r4;
    }

    protected byte[] decodeCiphertext(short, byte[], int, int, org.bouncycastle.crypto.tls.TlsProtocolHandler) throws java.io.IOException
    {
        byte[] r2, $r5, $r7;
        byte $b14, $b15, $b19, b24;
        org.bouncycastle.crypto.tls.TlsMac $r3, $r4;
        boolean z0;
        org.bouncycastle.crypto.tls.TlsProtocolHandler r6;
        org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite r0;
        org.bouncycastle.crypto.BlockCipher $r1, $r8;
        short s11;
        int $i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i16, $i17, $i18, $i20, $i21, $i22, i23, i25, i26, $i27, $i28, $i29, $i30;

        r0 := @this: org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite;

        s11 := @parameter0: short;

        r2 := @parameter1: byte[];

        i2 := @parameter2: int;

        i1 := @parameter3: int;

        r6 := @parameter4: org.bouncycastle.crypto.tls.TlsProtocolHandler;

        $r1 = r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: org.bouncycastle.crypto.BlockCipher decryptCipher>;

        $i0 = interfaceinvoke $r1.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        z0 = 0;

        i23 = 0;

     label01:
        if i23 >= i1 goto label02;

        $r8 = r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: org.bouncycastle.crypto.BlockCipher decryptCipher>;

        $i22 = i23 + i2;

        $i21 = i23 + i2;

        interfaceinvoke $r8.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>(r2, $i22, r2, $i21);

        i23 = i23 + $i0;

        goto label01;

     label02:
        $i3 = i2 + i1;

        $i4 = $i3 - 1;

        b24 = r2[$i4];

        $i5 = i2 + i1;

        $i6 = $i5 - 1;

        $i7 = $i6 - b24;

        if $i7 >= 0 goto label03;

        z0 = 1;

        b24 = 0;

        goto label06;

     label03:
        i25 = 0;

     label04:
        if i25 > b24 goto label06;

        $i16 = i2 + i1;

        $i17 = $i16 - 1;

        $i18 = $i17 - i25;

        $b19 = r2[$i18];

        $i28 = (int) $b19;

        if $i28 == b24 goto label05;

        z0 = 1;

     label05:
        i25 = i25 + 1;

        goto label04;

     label06:
        $r3 = r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: org.bouncycastle.crypto.tls.TlsMac readMac>;

        $i8 = virtualinvoke $r3.<org.bouncycastle.crypto.tls.TlsMac: int getSize()>();

        $i9 = i1 - $i8;

        $i10 = $i9 - b24;

        $i20 = $i10 - 1;

        $r4 = r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: org.bouncycastle.crypto.tls.TlsMac readMac>;

        $r5 = virtualinvoke $r4.<org.bouncycastle.crypto.tls.TlsMac: byte[] calculateMac(short,byte[],int,int)>(s11, r2, i2, $i20);

        i26 = 0;

     label07:
        $i27 = lengthof $r5;

        if i26 >= $i27 goto label09;

        $i12 = i2 + $i20;

        $i13 = $i12 + i26;

        $b15 = r2[$i13];

        $b14 = $r5[i26];

        $i29 = (int) $b15;

        $i30 = (int) $b14;

        if $i29 == $i30 goto label08;

        z0 = 1;

     label08:
        i26 = i26 + 1;

        goto label07;

     label09:
        if z0 == 0 goto label10;

        virtualinvoke r6.<org.bouncycastle.crypto.tls.TlsProtocolHandler: void failWithError(short,short)>(2, 20);

     label10:
        $r7 = newarray (byte)[$i20];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i2, $r7, 0, $i20);

        return $r7;
    }

    protected short getKeyExchangeAlgorithm()
    {
        short $s0;
        org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite r0;

        r0 := @this: org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite;

        $s0 = r0.<org.bouncycastle.crypto.tls.TlsBlockCipherCipherSuite: short keyExchange>;

        return $s0;
    }
}
