public class com.jidesoft.plaf.xerto.XertoUtils extends java.lang.Object
{
    private static java.awt.Color BASE_COLOR;
    private static java.awt.Color CONTROL_COLOR;
    private static java.awt.Color LIGHT_CONTROL_COLOR;
    private static java.awt.Color MID_CONTROL_COLOR;
    private static java.awt.Color CONTROL_VERY_LIGHT_SHADOW_COLOR;
    private static java.awt.Color CONTROL_LIGHT_SHADOW_COLOR;
    private static java.awt.Color CONTROL_MID_SHADOW_COLOR;
    private static java.awt.Color CONTROL_DARK_SHADOW_COLOR;
    private static java.awt.Color SELECTION_COLOR;
    private static java.awt.Color INACTIVE_CAPTION_COLOR;
    private static java.awt.Color SELECTED_TAB_BACKGROUND_COLOR;
    private static java.awt.Color TAB_FORGROUND_COLOR;
    private static java.awt.Color FRAME_ACTIVE_TITLE_TOP_COLOR;
    private static java.awt.Color FRAME_ACTIVE_TITLE_BOTTOM_COLOR;
    private static java.awt.Color FRAME_INACTIVE_TITLE_TOP_COLOR;
    private static java.awt.Color FRAME_INACTIVE_TITLE_BOTTOM_COLOR;
    public static final double RATIO1;
    public static final double RATIO2;
    public static final double RATIO3;
    static final java.awt.Color DARK_GREEN;
    static final java.awt.Color DARK_MAGENTA;

    public void <init>()
    {
        com.jidesoft.plaf.xerto.XertoUtils r0;

        r0 := @this: com.jidesoft.plaf.xerto.XertoUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void updateColors()
    {
        java.awt.Color $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24;
        byte $b6, $b7, $b8, $b9, $b10, $b11;
        float[] $r8, $r12;
        javax.swing.UIDefaults $r0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i12, $i13, $i14, $i15, $i16;
        double $d0, $d1, $d2, $d3;

        $r0 = staticinvoke <javax.swing.UIManager: javax.swing.UIDefaults getDefaults()>();

        $r1 = virtualinvoke $r0.<javax.swing.UIDefaults: java.awt.Color getColor(java.lang.Object)>("activeCaption");

        <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color BASE_COLOR> = $r1;

        $r2 = virtualinvoke $r0.<javax.swing.UIDefaults: java.awt.Color getColor(java.lang.Object)>("control");

        <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color CONTROL_COLOR> = $r2;

        $r3 = virtualinvoke $r0.<javax.swing.UIDefaults: java.awt.Color getColor(java.lang.Object)>("inactiveCaption");

        <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color INACTIVE_CAPTION_COLOR> = $r3;

        $r4 = virtualinvoke $r0.<javax.swing.UIDefaults: java.awt.Color getColor(java.lang.Object)>("MenuItem.background");

        <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color LIGHT_CONTROL_COLOR> = $r4;

        $r5 = <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color CONTROL_COLOR>;

        $i0 = virtualinvoke $r5.<java.awt.Color: int getRed()>();

        $r6 = <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color CONTROL_COLOR>;

        $i1 = virtualinvoke $r6.<java.awt.Color: int getGreen()>();

        $r7 = <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color CONTROL_COLOR>;

        $i2 = virtualinvoke $r7.<java.awt.Color: int getBlue()>();

        $r8 = staticinvoke <java.awt.Color: float[] RGBtoHSB(int,int,int,float[])>($i0, $i1, $i2, null);

        $r9 = <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color BASE_COLOR>;

        $i3 = virtualinvoke $r9.<java.awt.Color: int getRed()>();

        $r10 = <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color BASE_COLOR>;

        $i4 = virtualinvoke $r10.<java.awt.Color: int getGreen()>();

        $r11 = <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color BASE_COLOR>;

        $i5 = virtualinvoke $r11.<java.awt.Color: int getBlue()>();

        $r12 = staticinvoke <java.awt.Color: float[] RGBtoHSB(int,int,int,float[])>($i3, $i4, $i5, null);

        $f2 = $r8[0];

        $f0 = $r8[1];

        $f1 = $f0 - 0.05F;

        $f3 = staticinvoke <java.lang.Math: float max(float,float)>($f1, 0.0F);

        $f4 = $r8[2];

        $b6 = $f4 cmpg 0.95F;

        $i12 = (int) $b6;

        if $i12 >= 0 goto label01;

        $f36 = $r8[2];

        $f37 = $f36 + 0.05F;

        goto label02;

     label01:
        $f37 = 0.98F;

     label02:
        $r13 = staticinvoke <java.awt.Color: java.awt.Color getHSBColor(float,float,float)>($f2, $f3, $f37);

        <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color MID_CONTROL_COLOR> = $r13;

        $f7 = $r8[0];

        $f6 = $r8[1];

        $f5 = $r8[1];

        $b7 = $f5 cmpl 0.0F;

        if $b7 != 0 goto label03;

        $f38 = 0.75F;

        goto label04;

     label03:
        $f38 = 0.85F;

     label04:
        $r14 = staticinvoke <java.awt.Color: java.awt.Color getHSBColor(float,float,float)>($f7, $f6, $f38);

        <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color SELECTED_TAB_BACKGROUND_COLOR> = $r14;

        $f9 = $r8[0];

        $f8 = $r8[1];

        $d0 = (double) $f8;

        $b8 = $d0 cmpl 0.01;

        $i13 = (int) $b8;

        if $i13 <= 0 goto label05;

        $f39 = 0.45F;

        goto label06;

     label05:
        $f39 = $r8[0];

     label06:
        $r15 = staticinvoke <java.awt.Color: java.awt.Color getHSBColor(float,float,float)>($f9, $f39, 0.2F);

        <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color TAB_FORGROUND_COLOR> = $r15;

        $f13 = $r8[0];

        $f12 = $r8[1];

        $f10 = $r8[2];

        $f11 = $f10 - 0.02F;

        $r16 = staticinvoke <java.awt.Color: java.awt.Color getHSBColor(float,float,float)>($f13, $f12, $f11);

        <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color CONTROL_VERY_LIGHT_SHADOW_COLOR> = $r16;

        $f17 = $r8[0];

        $f16 = $r8[1];

        $f14 = $r8[2];

        $f15 = $f14 - 0.06F;

        $r17 = staticinvoke <java.awt.Color: java.awt.Color getHSBColor(float,float,float)>($f17, $f16, $f15);

        <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color CONTROL_LIGHT_SHADOW_COLOR> = $r17;

        $f21 = $r8[0];

        $f20 = $r8[1];

        $f18 = $r8[2];

        $f19 = $f18 - 0.16F;

        $r18 = staticinvoke <java.awt.Color: java.awt.Color getHSBColor(float,float,float)>($f21, $f20, $f19);

        <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color CONTROL_MID_SHADOW_COLOR> = $r18;

        $f25 = $r8[0];

        $f24 = $r8[1];

        $f22 = $r8[2];

        $f23 = $f22 - 0.32F;

        $r19 = staticinvoke <java.awt.Color: java.awt.Color getHSBColor(float,float,float)>($f25, $f24, $f23);

        <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color CONTROL_DARK_SHADOW_COLOR> = $r19;

        $f27 = $r12[0];

        $f26 = $r12[1];

        $d1 = (double) $f26;

        $b9 = $d1 cmpl 0.01;

        $i14 = (int) $b9;

        if $i14 <= 0 goto label07;

        $f40 = 0.45F;

        goto label08;

     label07:
        $f40 = $r12[0];

     label08:
        $r20 = staticinvoke <java.awt.Color: java.awt.Color getHSBColor(float,float,float)>($f27, $f40, 0.8F);

        <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color SELECTION_COLOR> = $r20;

        $f29 = $r12[0];

        $f28 = $r12[1];

        $d2 = (double) $f28;

        $b10 = $d2 cmpl 0.01;

        $i15 = (int) $b10;

        if $i15 <= 0 goto label09;

        $f41 = 0.3F;

        goto label10;

     label09:
        $f41 = $r12[0];

     label10:
        $r21 = staticinvoke <java.awt.Color: java.awt.Color getHSBColor(float,float,float)>($f29, $f41, 0.9F);

        <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color FRAME_ACTIVE_TITLE_TOP_COLOR> = $r21;

        $f31 = $r12[0];

        $f30 = $r12[1];

        $d3 = (double) $f30;

        $b11 = $d3 cmpl 0.01;

        $i16 = (int) $b11;

        if $i16 <= 0 goto label11;

        $f42 = 0.45F;

        goto label12;

     label11:
        $f42 = $r12[0];

     label12:
        $r22 = staticinvoke <java.awt.Color: java.awt.Color getHSBColor(float,float,float)>($f31, $f42, 0.7F);

        <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color FRAME_ACTIVE_TITLE_BOTTOM_COLOR> = $r22;

        $f33 = $r8[0];

        $f32 = $r8[1];

        $r23 = staticinvoke <java.awt.Color: java.awt.Color getHSBColor(float,float,float)>($f33, $f32, 0.75F);

        <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color FRAME_INACTIVE_TITLE_TOP_COLOR> = $r23;

        $f35 = $r8[0];

        $f34 = $r8[1];

        $r24 = staticinvoke <java.awt.Color: java.awt.Color getHSBColor(float,float,float)>($f35, $f34, 0.5F);

        <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color FRAME_INACTIVE_TITLE_BOTTOM_COLOR> = $r24;

        return;
    }

    public static java.awt.Color getBaseColor()
    {
        java.awt.Color $r0;

        $r0 = <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color BASE_COLOR>;

        return $r0;
    }

    public static java.awt.Color getInActiveCaptionColor()
    {
        java.awt.Color $r0;

        $r0 = <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color INACTIVE_CAPTION_COLOR>;

        return $r0;
    }

    public static java.awt.Color getControlColor()
    {
        java.awt.Color $r0;

        $r0 = <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color CONTROL_COLOR>;

        return $r0;
    }

    public static java.awt.Color getMidControlColor()
    {
        java.awt.Color $r0;

        $r0 = <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color MID_CONTROL_COLOR>;

        return $r0;
    }

    public static java.awt.Color getLightControlColor()
    {
        java.awt.Color $r0;

        $r0 = <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color LIGHT_CONTROL_COLOR>;

        return $r0;
    }

    public static java.awt.Color getSelectedTabBackgroundColor()
    {
        java.awt.Color $r0;

        $r0 = <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color SELECTED_TAB_BACKGROUND_COLOR>;

        return $r0;
    }

    public static java.awt.Color getTabForgroundColor()
    {
        java.awt.Color $r0;

        $r0 = <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color TAB_FORGROUND_COLOR>;

        return $r0;
    }

    public static java.awt.Color getControlVeryLightShadowColor()
    {
        java.awt.Color $r0;

        $r0 = <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color CONTROL_VERY_LIGHT_SHADOW_COLOR>;

        return $r0;
    }

    public static java.awt.Color getControlLightShadowColor()
    {
        java.awt.Color $r0;

        $r0 = <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color CONTROL_LIGHT_SHADOW_COLOR>;

        return $r0;
    }

    public static java.awt.Color getControlMidShadowColor()
    {
        java.awt.Color $r0;

        $r0 = <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color CONTROL_MID_SHADOW_COLOR>;

        return $r0;
    }

    public static java.awt.Color getControlDarkShadowColor()
    {
        java.awt.Color $r0;

        $r0 = <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color CONTROL_DARK_SHADOW_COLOR>;

        return $r0;
    }

    public static java.awt.Color getSelectionColor()
    {
        java.awt.Color $r0;

        $r0 = <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color SELECTION_COLOR>;

        return $r0;
    }

    public static java.awt.Color getApplicationFrameBackgroundColor()
    {
        java.awt.Color $r0;

        $r0 = staticinvoke <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color getControlColor()>();

        return $r0;
    }

    public static java.awt.Color getFrameBorderColor()
    {
        java.awt.Color $r0;

        $r0 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlShadow");

        return $r0;
    }

    public static java.awt.Color getFrameActiveTitleTopColor()
    {
        java.awt.Color $r0;

        $r0 = <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color FRAME_ACTIVE_TITLE_TOP_COLOR>;

        return $r0;
    }

    public static java.awt.Color getFrameActiveTitleBottomColor()
    {
        java.awt.Color $r0;

        $r0 = <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color FRAME_ACTIVE_TITLE_BOTTOM_COLOR>;

        return $r0;
    }

    public static java.awt.Color getFrameInactiveTitleTopColor()
    {
        java.awt.Color $r0;

        $r0 = <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color FRAME_INACTIVE_TITLE_TOP_COLOR>;

        return $r0;
    }

    public static java.awt.Color getFrameInactiveTitleBottomColor()
    {
        java.awt.Color $r0;

        $r0 = <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color FRAME_INACTIVE_TITLE_BOTTOM_COLOR>;

        return $r0;
    }

    public static java.awt.Color getLighterColor(java.awt.Color)
    {
        java.awt.Color r0, $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;

        r0 := @parameter0: java.awt.Color;

        $i0 = virtualinvoke r0.<java.awt.Color: int getRed()>();

        $i1 = staticinvoke <com.jidesoft.plaf.xerto.XertoUtils: int getLighterColor(int)>($i0);

        i6 = $i1;

        $i2 = virtualinvoke r0.<java.awt.Color: int getGreen()>();

        $i3 = staticinvoke <com.jidesoft.plaf.xerto.XertoUtils: int getLighterColor(int)>($i2);

        i7 = $i3;

        $i4 = virtualinvoke r0.<java.awt.Color: int getBlue()>();

        $i5 = staticinvoke <com.jidesoft.plaf.xerto.XertoUtils: int getLighterColor(int)>($i4);

        i8 = $i5;

        if $i1 < 255 goto label1;

        i6 = 255;

     label1:
        if $i3 < 255 goto label2;

        i7 = 255;

     label2:
        if $i5 < 255 goto label3;

        i8 = 255;

     label3:
        $r1 = new java.awt.Color;

        specialinvoke $r1.<java.awt.Color: void <init>(int,int,int)>(i6, i7, i8);

        return $r1;
    }

    public static int getLighterColor(int)
    {
        int i0, $i1;
        double $d0, $d1, $d2, $d3;

        i0 := @parameter0: int;

        $d0 = (double) i0;

        $d1 = $d0 * 36.0;

        $d2 = $d1 / 255.0;

        $d3 = $d2 + 219.5;

        $i1 = (int) $d3;

        return $i1;
    }

    public static java.awt.Color getMenuSelectionColor(java.awt.Color)
    {
        java.awt.Color r0, $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;

        r0 := @parameter0: java.awt.Color;

        $i0 = virtualinvoke r0.<java.awt.Color: int getRed()>();

        $i1 = staticinvoke <com.jidesoft.plaf.xerto.XertoUtils: int getMenuSelectionValue(int)>($i0);

        i6 = $i1;

        $i2 = virtualinvoke r0.<java.awt.Color: int getGreen()>();

        $i3 = staticinvoke <com.jidesoft.plaf.xerto.XertoUtils: int getMenuSelectionValue(int)>($i2);

        i7 = $i3;

        $i4 = virtualinvoke r0.<java.awt.Color: int getBlue()>();

        $i5 = staticinvoke <com.jidesoft.plaf.xerto.XertoUtils: int getMenuSelectionValue(int)>($i4);

        i8 = $i5;

        if $i1 < 255 goto label1;

        i6 = 255;

     label1:
        if $i3 < 255 goto label2;

        i7 = 255;

     label2:
        if $i5 < 255 goto label3;

        i8 = 255;

     label3:
        $r1 = new java.awt.Color;

        specialinvoke $r1.<java.awt.Color: void <init>(int,int,int)>(i6, i7, i8);

        return $r1;
    }

    public static int getMenuSelectionValue(int)
    {
        int i0, $i1;
        double $d0, $d1, $d2, $d3;

        i0 := @parameter0: int;

        $d0 = (double) i0;

        $d1 = $d0 * 76.0;

        $d2 = $d1 / 255.0;

        $d3 = $d2 + 179.5;

        $i1 = (int) $d3;

        return $i1;
    }

    public static java.awt.Color getMenuBackgroundColor(java.awt.Color)
    {
        java.awt.Color r0, $r1, $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;
        boolean $z0, $z1;

        r0 := @parameter0: java.awt.Color;

        $r1 = <java.awt.Color: java.awt.Color BLACK>;

        $z0 = virtualinvoke $r1.<java.awt.Color: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r2 = <java.awt.Color: java.awt.Color WHITE>;

        $z1 = virtualinvoke $r2.<java.awt.Color: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

        return r0;

     label2:
        $i0 = virtualinvoke r0.<java.awt.Color: int getRed()>();

        $i1 = staticinvoke <com.jidesoft.plaf.xerto.XertoUtils: int getMenuValue(int)>($i0);

        i6 = $i1;

        $i2 = virtualinvoke r0.<java.awt.Color: int getGreen()>();

        $i3 = staticinvoke <com.jidesoft.plaf.xerto.XertoUtils: int getMenuValue(int)>($i2);

        i7 = $i3;

        $i4 = virtualinvoke r0.<java.awt.Color: int getBlue()>();

        $i5 = staticinvoke <com.jidesoft.plaf.xerto.XertoUtils: int getMenuValue(int)>($i4);

        i8 = $i5;

        if $i1 < 255 goto label3;

        i6 = 255;

     label3:
        if $i3 < 255 goto label4;

        i7 = 255;

     label4:
        if $i5 < 255 goto label5;

        i8 = 255;

     label5:
        $r3 = new java.awt.Color;

        specialinvoke $r3.<java.awt.Color: void <init>(int,int,int)>(i6, i7, i8);

        return $r3;
    }

    public static int getMenuValue(int)
    {
        int i0, $i1;
        double $d0, $d1, $d2, $d3;

        i0 := @parameter0: int;

        $d0 = (double) i0;

        $d1 = $d0 * 36.0;

        $d2 = $d1 / 255.0;

        $d3 = $d2 + 219.5;

        $i1 = (int) $d3;

        return $i1;
    }

    public static java.awt.Color getToolBarBackgroundColor(java.awt.Color)
    {
        java.awt.Color r0, $r1, $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;
        boolean $z0, $z1;

        r0 := @parameter0: java.awt.Color;

        $r1 = <java.awt.Color: java.awt.Color BLACK>;

        $z0 = virtualinvoke $r1.<java.awt.Color: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r2 = <java.awt.Color: java.awt.Color WHITE>;

        $z1 = virtualinvoke $r2.<java.awt.Color: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

        return r0;

     label2:
        $i0 = virtualinvoke r0.<java.awt.Color: int getRed()>();

        $i1 = staticinvoke <com.jidesoft.plaf.xerto.XertoUtils: int getToolBarValue(int)>($i0);

        i6 = $i1;

        $i2 = virtualinvoke r0.<java.awt.Color: int getGreen()>();

        $i3 = staticinvoke <com.jidesoft.plaf.xerto.XertoUtils: int getToolBarValue(int)>($i2);

        i7 = $i3;

        $i4 = virtualinvoke r0.<java.awt.Color: int getBlue()>();

        $i5 = staticinvoke <com.jidesoft.plaf.xerto.XertoUtils: int getToolBarValue(int)>($i4);

        i8 = $i5;

        if $i1 < 255 goto label3;

        i6 = 255;

     label3:
        if $i3 < 255 goto label4;

        i7 = 255;

     label4:
        if $i5 < 255 goto label5;

        i8 = 255;

     label5:
        $r3 = new java.awt.Color;

        specialinvoke $r3.<java.awt.Color: void <init>(int,int,int)>(i6, i7, i8);

        return $r3;
    }

    public static int getToolBarValue(int)
    {
        int i0, $i1, $i2, $i3;

        i0 := @parameter0: int;

        $i1 = i0 * 215;

        $i2 = $i1 / 255;

        $i3 = $i2 + 40;

        return $i3;
    }

    public static java.awt.Color getGripperForegroundColor(java.awt.Color)
    {
        java.awt.Color r0, $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;

        r0 := @parameter0: java.awt.Color;

        $i0 = virtualinvoke r0.<java.awt.Color: int getRed()>();

        $i1 = staticinvoke <com.jidesoft.plaf.xerto.XertoUtils: int getGripperValue(int)>($i0);

        i6 = $i1;

        $i2 = virtualinvoke r0.<java.awt.Color: int getGreen()>();

        $i3 = staticinvoke <com.jidesoft.plaf.xerto.XertoUtils: int getGripperValue(int)>($i2);

        i7 = $i3;

        $i4 = virtualinvoke r0.<java.awt.Color: int getBlue()>();

        $i5 = staticinvoke <com.jidesoft.plaf.xerto.XertoUtils: int getGripperValue(int)>($i4);

        i8 = $i5;

        if $i1 < 255 goto label1;

        i6 = 255;

     label1:
        if $i3 < 255 goto label2;

        i7 = 255;

     label2:
        if $i5 < 255 goto label3;

        i8 = 255;

     label3:
        $r1 = new java.awt.Color;

        specialinvoke $r1.<java.awt.Color: void <init>(int,int,int)>(i6, i7, i8);

        return $r1;
    }

    public static int getGripperValue(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        i0 := @parameter0: int;

        if i0 != 255 goto label1;

        return 0;

     label1:
        if i0 < 0 goto label2;

        if i0 > 64 goto label2;

        $i5 = i0 * 33;

        $i6 = $i5 / 64;

        $i7 = $i6 + 123;

        return $i7;

     label2:
        $i1 = i0 - 65;

        $i2 = $i1 * 157;

        $i3 = $i2 / 189;

        $i4 = $i3 + 33;

        return $i4;
    }

    public static java.awt.Color getDefaultBackgroundColor(java.awt.Color)
    {
        java.awt.Color r0, $r1, $r2, $r3, r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, i11, $i12, $i13, i14;

        r0 := @parameter0: java.awt.Color;

        $i0 = virtualinvoke r0.<java.awt.Color: int getRed()>();

        if $i0 != 212 goto label1;

        $i3 = virtualinvoke r0.<java.awt.Color: int getGreen()>();

        if $i3 != 208 goto label1;

        $i4 = virtualinvoke r0.<java.awt.Color: int getBlue()>();

        if $i4 != 200 goto label1;

        $r3 = new java.awt.Color;

        specialinvoke $r3.<java.awt.Color: void <init>(int,int,int)>(247, 243, 233);

        r4 = $r3;

        goto label6;

     label1:
        $i5 = virtualinvoke r0.<java.awt.Color: int getRed()>();

        if $i5 != 236 goto label2;

        $i1 = virtualinvoke r0.<java.awt.Color: int getGreen()>();

        if $i1 != 233 goto label2;

        $i2 = virtualinvoke r0.<java.awt.Color: int getBlue()>();

        if $i2 != 216 goto label2;

        $r2 = new java.awt.Color;

        specialinvoke $r2.<java.awt.Color: void <init>(int,int,int)>(255, 251, 233);

        r4 = $r2;

        goto label6;

     label2:
        $i6 = virtualinvoke r0.<java.awt.Color: int getRed()>();

        $i7 = $i6 + 35;

        i8 = $i7;

        $i9 = virtualinvoke r0.<java.awt.Color: int getGreen()>();

        $i10 = $i9 + 35;

        i11 = $i10;

        $i12 = virtualinvoke r0.<java.awt.Color: int getBlue()>();

        $i13 = $i12 + 35;

        i14 = $i13;

        if $i7 < 255 goto label3;

        i8 = 255;

     label3:
        if $i10 < 255 goto label4;

        i11 = 255;

     label4:
        if $i13 < 255 goto label5;

        i14 = 255;

     label5:
        $r1 = new java.awt.Color;

        specialinvoke $r1.<java.awt.Color: void <init>(int,int,int)>(i8, i11, i14);

        r4 = $r1;

     label6:
        return r4;
    }

    public static int getLightColor(int, double)
    {
        int i0, $i1, $i2;
        double d0, $d1, $d2, $d3, $d4;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        $i1 = 255 - i0;

        $d1 = (double) $i1;

        $d3 = $d1 * d0;

        $d2 = (double) i0;

        $d4 = $d3 + $d2;

        $i2 = (int) $d4;

        return $i2;
    }

    public static java.awt.Color getLighterColor(java.awt.Color, double)
    {
        java.awt.Color r0, $r1, $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;
        boolean $z0, $z1;
        double d0;

        r0 := @parameter0: java.awt.Color;

        d0 := @parameter1: double;

        $r1 = <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color DARK_GREEN>;

        $z0 = virtualinvoke $r1.<java.awt.Color: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        $r2 = <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color DARK_MAGENTA>;

        $z1 = virtualinvoke $r2.<java.awt.Color: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

     label1:
        return r0;

     label2:
        $i0 = virtualinvoke r0.<java.awt.Color: int getRed()>();

        $i1 = staticinvoke <com.jidesoft.plaf.xerto.XertoUtils: int getLightColor(int,double)>($i0, d0);

        i6 = $i1;

        $i2 = virtualinvoke r0.<java.awt.Color: int getGreen()>();

        $i3 = staticinvoke <com.jidesoft.plaf.xerto.XertoUtils: int getLightColor(int,double)>($i2, d0);

        i7 = $i3 + 1;

        $i4 = virtualinvoke r0.<java.awt.Color: int getBlue()>();

        $i5 = staticinvoke <com.jidesoft.plaf.xerto.XertoUtils: int getLightColor(int,double)>($i4, d0);

        i8 = $i5;

        if $i1 < 255 goto label3;

        i6 = 255;

     label3:
        if i7 < 255 goto label4;

        i7 = 255;

     label4:
        if $i5 < 255 goto label5;

        i8 = 255;

     label5:
        $r3 = new java.awt.Color;

        specialinvoke $r3.<java.awt.Color: void <init>(int,int,int)>(i6, i7, i8);

        return $r3;
    }

    public static java.awt.Color getHighlightColor(java.awt.Color)
    {
        java.awt.Color r1, $r2;
        float[] r0;
        byte $b3, $b4;
        int $i0, $i1, $i2, $i5, $i6;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;

        r1 := @parameter0: java.awt.Color;

        r0 = newarray (float)[3];

        $i0 = virtualinvoke r1.<java.awt.Color: int getRed()>();

        $i1 = virtualinvoke r1.<java.awt.Color: int getGreen()>();

        $i2 = virtualinvoke r1.<java.awt.Color: int getBlue()>();

        staticinvoke <java.awt.Color: float[] RGBtoHSB(int,int,int,float[])>($i0, $i1, $i2, r0);

        $f0 = r0[1];

        $f1 = $f0 - 0.07F;

        r0[1] = $f1;

        $f2 = r0[1];

        $b3 = $f2 cmpg 0.0F;

        $i5 = (int) $b3;

        if $i5 >= 0 goto label1;

        r0[1] = 0.0F;

     label1:
        $f3 = r0[2];

        $f4 = $f3 + 0.04F;

        r0[2] = $f4;

        $f5 = r0[2];

        $b4 = $f5 cmpl 1.0F;

        $i6 = (int) $b4;

        if $i6 <= 0 goto label2;

        r0[2] = 1.0F;

     label2:
        $f8 = r0[0];

        $f7 = r0[1];

        $f6 = r0[2];

        $r2 = staticinvoke <java.awt.Color: java.awt.Color getHSBColor(float,float,float)>($f8, $f7, $f6);

        return $r2;
    }

    public static java.awt.Color getEmBaseColor(java.awt.Color)
    {
        java.awt.Color r1, $r2;
        float[] r0;
        byte $b3, $b4;
        int $i0, $i1, $i2, $i5, $i6;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;

        r1 := @parameter0: java.awt.Color;

        r0 = newarray (float)[3];

        $i0 = virtualinvoke r1.<java.awt.Color: int getRed()>();

        $i1 = virtualinvoke r1.<java.awt.Color: int getGreen()>();

        $i2 = virtualinvoke r1.<java.awt.Color: int getBlue()>();

        staticinvoke <java.awt.Color: float[] RGBtoHSB(int,int,int,float[])>($i0, $i1, $i2, r0);

        $f0 = r0[1];

        $f1 = $f0 + 0.1F;

        r0[1] = $f1;

        $f2 = r0[1];

        $b3 = $f2 cmpl 1.0F;

        $i5 = (int) $b3;

        if $i5 <= 0 goto label1;

        r0[1] = 1.0F;

     label1:
        $f3 = r0[2];

        $f4 = $f3 - 0.1F;

        r0[2] = $f4;

        $f5 = r0[2];

        $b4 = $f5 cmpg 0.0F;

        $i6 = (int) $b4;

        if $i6 >= 0 goto label2;

        r0[2] = 0.0F;

     label2:
        $f8 = r0[0];

        $f7 = r0[1];

        $f6 = r0[2];

        $r2 = staticinvoke <java.awt.Color: java.awt.Color getHSBColor(float,float,float)>($f8, $f7, $f6);

        return $r2;
    }

    public static java.awt.Color getTextColor(java.awt.Color)
    {
        java.awt.Color r1, $r2;
        float[] r0;
        byte $b3;
        int $i0, $i1, $i2, $i4;
        float $f0;
        double $d0;

        r1 := @parameter0: java.awt.Color;

        r0 = newarray (float)[3];

        $i0 = virtualinvoke r1.<java.awt.Color: int getRed()>();

        $i1 = virtualinvoke r1.<java.awt.Color: int getGreen()>();

        $i2 = virtualinvoke r1.<java.awt.Color: int getBlue()>();

        staticinvoke <java.awt.Color: float[] RGBtoHSB(int,int,int,float[])>($i0, $i1, $i2, r0);

        $f0 = r0[2];

        $d0 = (double) $f0;

        $b3 = $d0 cmpl 0.53;

        $i4 = (int) $b3;

        if $i4 <= 0 goto label1;

        $r2 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("controlText");

        goto label2;

     label1:
        $r2 = <java.awt.Color: java.awt.Color WHITE>;

     label2:
        return $r2;
    }

    public static java.awt.Color getSelectedAndFocusedButtonColor(java.awt.Color)
    {
        java.awt.Color r0, $r1;

        r0 := @parameter0: java.awt.Color;

        $r1 = staticinvoke <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color getLighterColor(java.awt.Color,double)>(r0, 0.67);

        return $r1;
    }

    public static java.awt.Color getFocusedButtonColor(java.awt.Color)
    {
        java.awt.Color r0, $r1;

        r0 := @parameter0: java.awt.Color;

        $r1 = staticinvoke <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color getLighterColor(java.awt.Color,double)>(r0, 0.78);

        return $r1;
    }

    public static java.awt.Color getSelectedButtonColor(java.awt.Color)
    {
        java.awt.Color r0, $r1;

        r0 := @parameter0: java.awt.Color;

        $r1 = staticinvoke <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color getLighterColor(java.awt.Color,double)>(r0, 0.86);

        return $r1;
    }

    static void <clinit>()
    {
        java.awt.Color $r0, $r1;

        <com.jidesoft.plaf.xerto.XertoUtils: double RATIO3> = 0.86;

        <com.jidesoft.plaf.xerto.XertoUtils: double RATIO2> = 0.78;

        <com.jidesoft.plaf.xerto.XertoUtils: double RATIO1> = 0.67;

        staticinvoke <com.jidesoft.plaf.xerto.XertoUtils: void updateColors()>();

        $r0 = new java.awt.Color;

        specialinvoke $r0.<java.awt.Color: void <init>(int,int,int)>(0, 128, 0);

        <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color DARK_GREEN> = $r0;

        $r1 = new java.awt.Color;

        specialinvoke $r1.<java.awt.Color: void <init>(int,int,int)>(128, 0, 128);

        <com.jidesoft.plaf.xerto.XertoUtils: java.awt.Color DARK_MAGENTA> = $r1;

        return;
    }
}
