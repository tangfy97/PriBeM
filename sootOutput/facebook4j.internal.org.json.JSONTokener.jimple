public class facebook4j.internal.org.json.JSONTokener extends java.lang.Object
{
    private int character;
    private boolean eof;
    private int index;
    private int line;
    private char previous;
    private java.io.Reader reader;
    private boolean usePrevious;

    public void <init>(java.io.Reader)
    {
        facebook4j.internal.org.json.JSONTokener r0;
        java.io.Reader r1, $r2;
        java.io.BufferedReader $r3;
        boolean $z0;

        r0 := @this: facebook4j.internal.org.json.JSONTokener;

        r1 := @parameter0: java.io.Reader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = virtualinvoke r1.<java.io.Reader: boolean markSupported()>();

        if $z0 == 0 goto label1;

        $r2 = r1;

        goto label2;

     label1:
        $r3 = new java.io.BufferedReader;

        $r2 = $r3;

        specialinvoke $r3.<java.io.BufferedReader: void <init>(java.io.Reader)>(r1);

     label2:
        r0.<facebook4j.internal.org.json.JSONTokener: java.io.Reader reader> = $r2;

        r0.<facebook4j.internal.org.json.JSONTokener: boolean eof> = 0;

        r0.<facebook4j.internal.org.json.JSONTokener: boolean usePrevious> = 0;

        r0.<facebook4j.internal.org.json.JSONTokener: char previous> = 0;

        r0.<facebook4j.internal.org.json.JSONTokener: int index> = 0;

        r0.<facebook4j.internal.org.json.JSONTokener: int character> = 1;

        r0.<facebook4j.internal.org.json.JSONTokener: int line> = 1;

        return;
    }

    public void <init>(java.io.InputStream) throws facebook4j.internal.org.json.JSONException
    {
        facebook4j.internal.org.json.JSONTokener r0;
        java.io.InputStreamReader $r1;
        java.io.InputStream r2;

        r0 := @this: facebook4j.internal.org.json.JSONTokener;

        r2 := @parameter0: java.io.InputStream;

        $r1 = new java.io.InputStreamReader;

        specialinvoke $r1.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r2);

        specialinvoke r0.<facebook4j.internal.org.json.JSONTokener: void <init>(java.io.Reader)>($r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String r2;
        facebook4j.internal.org.json.JSONTokener r0;
        java.io.StringReader $r1;

        r0 := @this: facebook4j.internal.org.json.JSONTokener;

        r2 := @parameter0: java.lang.String;

        $r1 = new java.io.StringReader;

        specialinvoke $r1.<java.io.StringReader: void <init>(java.lang.String)>(r2);

        specialinvoke r0.<facebook4j.internal.org.json.JSONTokener: void <init>(java.io.Reader)>($r1);

        return;
    }

    public void back() throws facebook4j.internal.org.json.JSONException
    {
        facebook4j.internal.org.json.JSONTokener r0;
        facebook4j.internal.org.json.JSONException $r1;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;

        r0 := @this: facebook4j.internal.org.json.JSONTokener;

        $z0 = r0.<facebook4j.internal.org.json.JSONTokener: boolean usePrevious>;

        if $z0 != 0 goto label1;

        $i0 = r0.<facebook4j.internal.org.json.JSONTokener: int index>;

        if $i0 > 0 goto label2;

     label1:
        $r1 = new facebook4j.internal.org.json.JSONException;

        specialinvoke $r1.<facebook4j.internal.org.json.JSONException: void <init>(java.lang.String)>("Stepping back two steps is not supported");

        throw $r1;

     label2:
        $i1 = r0.<facebook4j.internal.org.json.JSONTokener: int index>;

        $i2 = $i1 - 1;

        r0.<facebook4j.internal.org.json.JSONTokener: int index> = $i2;

        $i3 = r0.<facebook4j.internal.org.json.JSONTokener: int character>;

        $i4 = $i3 - 1;

        r0.<facebook4j.internal.org.json.JSONTokener: int character> = $i4;

        r0.<facebook4j.internal.org.json.JSONTokener: boolean usePrevious> = 1;

        r0.<facebook4j.internal.org.json.JSONTokener: boolean eof> = 0;

        return;
    }

    public static int dehexchar(char)
    {
        char c0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14;

        c0 := @parameter0: char;

        $i4 = (int) c0;

        if $i4 < 48 goto label1;

        $i5 = (int) c0;

        if $i5 > 57 goto label1;

        $i6 = (int) c0;

        $i3 = $i6 - 48;

        return $i3;

     label1:
        $i7 = (int) c0;

        if $i7 < 65 goto label2;

        $i8 = (int) c0;

        if $i8 > 70 goto label2;

        $i9 = (int) c0;

        $i2 = $i9 - 55;

        return $i2;

     label2:
        $i10 = (int) c0;

        if $i10 < 97 goto label3;

        $i11 = (int) c0;

        if $i11 > 102 goto label3;

        $i12 = (int) c0;

        $i1 = $i12 - 87;

        return $i1;

     label3:
        $i14 = (int) -1;

        return $i14;
    }

    public boolean end()
    {
        facebook4j.internal.org.json.JSONTokener r0;
        boolean $z0, $z1, $z2;

        r0 := @this: facebook4j.internal.org.json.JSONTokener;

        $z0 = r0.<facebook4j.internal.org.json.JSONTokener: boolean eof>;

        if $z0 == 0 goto label1;

        $z1 = r0.<facebook4j.internal.org.json.JSONTokener: boolean usePrevious>;

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean more() throws facebook4j.internal.org.json.JSONException
    {
        facebook4j.internal.org.json.JSONTokener r0;
        boolean $z0;

        r0 := @this: facebook4j.internal.org.json.JSONTokener;

        virtualinvoke r0.<facebook4j.internal.org.json.JSONTokener: char next()>();

        $z0 = virtualinvoke r0.<facebook4j.internal.org.json.JSONTokener: boolean end()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        virtualinvoke r0.<facebook4j.internal.org.json.JSONTokener: void back()>();

        return 1;
    }

    public char next() throws facebook4j.internal.org.json.JSONException
    {
        facebook4j.internal.org.json.JSONTokener r0;
        byte $b11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, $i15, $i16;
        boolean $z0;
        java.io.IOException $r2;
        char $c10, $c12, $c13, $c14;
        java.io.Reader $r1;
        facebook4j.internal.org.json.JSONException $r4;

        r0 := @this: facebook4j.internal.org.json.JSONTokener;

        $z0 = r0.<facebook4j.internal.org.json.JSONTokener: boolean usePrevious>;

        if $z0 == 0 goto label01;

        r0.<facebook4j.internal.org.json.JSONTokener: boolean usePrevious> = 0;

        $c14 = r0.<facebook4j.internal.org.json.JSONTokener: char previous>;

        $i15 = (int) $c14;

        i7 = $i15;

        goto label05;

     label01:
        $r1 = r0.<facebook4j.internal.org.json.JSONTokener: java.io.Reader reader>;

        $i0 = virtualinvoke $r1.<java.io.Reader: int read()>();

        i7 = $i0;

     label02:
        goto label04;

     label03:
        $r2 := @caughtexception;

        $r4 = new facebook4j.internal.org.json.JSONException;

        specialinvoke $r4.<facebook4j.internal.org.json.JSONException: void <init>(java.lang.Throwable)>($r2);

        throw $r4;

     label04:
        if $i0 > 0 goto label05;

        r0.<facebook4j.internal.org.json.JSONTokener: boolean eof> = 1;

        i7 = 0;

     label05:
        $i8 = r0.<facebook4j.internal.org.json.JSONTokener: int index>;

        $i9 = $i8 + 1;

        r0.<facebook4j.internal.org.json.JSONTokener: int index> = $i9;

        $c10 = r0.<facebook4j.internal.org.json.JSONTokener: char previous>;

        $i16 = (int) $c10;

        if $i16 != 13 goto label08;

        $i5 = r0.<facebook4j.internal.org.json.JSONTokener: int line>;

        $i6 = $i5 + 1;

        r0.<facebook4j.internal.org.json.JSONTokener: int line> = $i6;

        if i7 != 10 goto label06;

        $b11 = 0;

        goto label07;

     label06:
        $b11 = 1;

     label07:
        r0.<facebook4j.internal.org.json.JSONTokener: int character> = $b11;

        goto label10;

     label08:
        if i7 != 10 goto label09;

        $i3 = r0.<facebook4j.internal.org.json.JSONTokener: int line>;

        $i4 = $i3 + 1;

        r0.<facebook4j.internal.org.json.JSONTokener: int line> = $i4;

        r0.<facebook4j.internal.org.json.JSONTokener: int character> = 0;

        goto label10;

     label09:
        $i1 = r0.<facebook4j.internal.org.json.JSONTokener: int character>;

        $i2 = $i1 + 1;

        r0.<facebook4j.internal.org.json.JSONTokener: int character> = $i2;

     label10:
        $c12 = (char) i7;

        r0.<facebook4j.internal.org.json.JSONTokener: char previous> = $c12;

        $c13 = r0.<facebook4j.internal.org.json.JSONTokener: char previous>;

        return $c13;

        catch java.io.IOException from label01 to label02 with label03;
    }

    public char next(char) throws facebook4j.internal.org.json.JSONException
    {
        facebook4j.internal.org.json.JSONTokener r0;
        char $c0, c1;
        facebook4j.internal.org.json.JSONException $r8;
        int $i2, $i3;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r9;
        java.lang.String $r7;

        r0 := @this: facebook4j.internal.org.json.JSONTokener;

        c1 := @parameter0: char;

        $c0 = virtualinvoke r0.<facebook4j.internal.org.json.JSONTokener: char next()>();

        $i2 = (int) $c0;

        $i3 = (int) c1;

        if $i2 == $i3 goto label1;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected \'");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' and instead saw \'");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke r0.<facebook4j.internal.org.json.JSONTokener: facebook4j.internal.org.json.JSONException syntaxError(java.lang.String)>($r7);

        throw $r8;

     label1:
        return $c0;
    }

    public java.lang.String next(int) throws facebook4j.internal.org.json.JSONException
    {
        facebook4j.internal.org.json.JSONTokener r2;
        char $c1;
        facebook4j.internal.org.json.JSONException $r3;
        int i0, i2;
        char[] r0;
        java.lang.String $r1;
        boolean $z0;

        r2 := @this: facebook4j.internal.org.json.JSONTokener;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        return "";

     label1:
        r0 = newarray (char)[i0];

        i2 = 0;

     label2:
        if i2 >= i0 goto label4;

        $c1 = virtualinvoke r2.<facebook4j.internal.org.json.JSONTokener: char next()>();

        r0[i2] = $c1;

        $z0 = virtualinvoke r2.<facebook4j.internal.org.json.JSONTokener: boolean end()>();

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke r2.<facebook4j.internal.org.json.JSONTokener: facebook4j.internal.org.json.JSONException syntaxError(java.lang.String)>("Substring bounds error");

        throw $r3;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>(r0);

        return $r1;
    }

    public char nextClean() throws facebook4j.internal.org.json.JSONException
    {
        int $i1;
        char $c0;
        facebook4j.internal.org.json.JSONTokener r0;

        r0 := @this: facebook4j.internal.org.json.JSONTokener;

     label1:
        $c0 = virtualinvoke r0.<facebook4j.internal.org.json.JSONTokener: char next()>();

        if $c0 == 0 goto label2;

        $i1 = (int) $c0;

        if $i1 <= 32 goto label3;

     label2:
        return $c0;

     label3:
        goto label1;
    }

    public java.lang.String nextString(char) throws facebook4j.internal.org.json.JSONException
    {
        facebook4j.internal.org.json.JSONTokener r1;
        char $c0, $c2, c3, $c4;
        facebook4j.internal.org.json.JSONException $r3, $r4;
        int $i1, $i5, $i6, $i7, $i8;
        java.lang.StringBuilder $r6;
        java.lang.String $r2, $r5;

        r1 := @this: facebook4j.internal.org.json.JSONTokener;

        c3 := @parameter0: char;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

     label01:
        $c4 = virtualinvoke r1.<facebook4j.internal.org.json.JSONTokener: char next()>();

        $i5 = (int) $c4;

        lookupswitch($i5)
        {
            case 0: goto label02;
            case 10: goto label02;
            case 13: goto label02;
            case 92: goto label03;
            default: goto label12;
        };

     label02:
        $r4 = virtualinvoke r1.<facebook4j.internal.org.json.JSONTokener: facebook4j.internal.org.json.JSONException syntaxError(java.lang.String)>("Unterminated string");

        throw $r4;

     label03:
        $c0 = virtualinvoke r1.<facebook4j.internal.org.json.JSONTokener: char next()>();

        $i6 = (int) $c0;

        lookupswitch($i6)
        {
            case 34: goto label10;
            case 39: goto label10;
            case 47: goto label10;
            case 92: goto label10;
            case 98: goto label04;
            case 102: goto label07;
            case 110: goto label06;
            case 114: goto label08;
            case 116: goto label05;
            case 117: goto label09;
            default: goto label11;
        };

     label04:
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(8);

        goto label01;

     label05:
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(9);

        goto label01;

     label06:
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        goto label01;

     label07:
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(12);

        goto label01;

     label08:
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(13);

        goto label01;

     label09:
        $r2 = virtualinvoke r1.<facebook4j.internal.org.json.JSONTokener: java.lang.String next(int)>(4);

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r2, 16);

        $c2 = (char) $i1;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        goto label01;

     label10:
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        goto label01;

     label11:
        $r3 = virtualinvoke r1.<facebook4j.internal.org.json.JSONTokener: facebook4j.internal.org.json.JSONException syntaxError(java.lang.String)>("Illegal escape.");

        throw $r3;

     label12:
        $i7 = (int) $c4;

        $i8 = (int) c3;

        if $i7 != $i8 goto label13;

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

     label13:
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        goto label01;
    }

    public java.lang.String nextTo(char) throws facebook4j.internal.org.json.JSONException
    {
        facebook4j.internal.org.json.JSONTokener r1;
        char $c0, c1;
        int $i2, $i3, $i4, $i5;
        java.lang.StringBuilder $r4;
        java.lang.String $r2, $r3;

        r1 := @this: facebook4j.internal.org.json.JSONTokener;

        c1 := @parameter0: char;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

     label1:
        $c0 = virtualinvoke r1.<facebook4j.internal.org.json.JSONTokener: char next()>();

        $i2 = (int) $c0;

        $i3 = (int) c1;

        if $i2 == $i3 goto label2;

        if $c0 == 0 goto label2;

        $i4 = (int) $c0;

        if $i4 == 10 goto label2;

        $i5 = (int) $c0;

        if $i5 != 13 goto label4;

     label2:
        if $c0 == 0 goto label3;

        virtualinvoke r1.<facebook4j.internal.org.json.JSONTokener: void back()>();

     label3:
        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        return $r3;

     label4:
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        goto label1;
    }

    public java.lang.String nextTo(java.lang.String) throws facebook4j.internal.org.json.JSONException
    {
        facebook4j.internal.org.json.JSONTokener r1;
        char $c0;
        int $i1, $i2, $i3, $i4;
        java.lang.StringBuilder $r5;
        java.lang.String r2, $r3, $r4;

        r1 := @this: facebook4j.internal.org.json.JSONTokener;

        r2 := @parameter0: java.lang.String;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

     label1:
        $c0 = virtualinvoke r1.<facebook4j.internal.org.json.JSONTokener: char next()>();

        $i2 = (int) $c0;

        $i1 = virtualinvoke r2.<java.lang.String: int indexOf(int)>($i2);

        if $i1 >= 0 goto label2;

        if $c0 == 0 goto label2;

        $i3 = (int) $c0;

        if $i3 == 10 goto label2;

        $i4 = (int) $c0;

        if $i4 != 13 goto label4;

     label2:
        if $c0 == 0 goto label3;

        virtualinvoke r1.<facebook4j.internal.org.json.JSONTokener: void back()>();

     label3:
        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        return $r4;

     label4:
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        goto label1;
    }

    public java.lang.Object nextValue() throws facebook4j.internal.org.json.JSONException
    {
        facebook4j.internal.org.json.JSONTokener r0;
        facebook4j.internal.org.json.JSONObject $r10;
        int $i1, $i3, $i4, $i5;
        java.lang.String $r3, $r5, $r6, $r9;
        boolean $z0;
        char $c0, c2;
        facebook4j.internal.org.json.JSONException $r8;
        facebook4j.internal.org.json.JSONArray $r11;
        java.lang.Object $r7;
        java.lang.StringBuilder $r12;

        r0 := @this: facebook4j.internal.org.json.JSONTokener;

        $c0 = virtualinvoke r0.<facebook4j.internal.org.json.JSONTokener: char nextClean()>();

        c2 = $c0;

        $i3 = (int) $c0;

        lookupswitch($i3)
        {
            case 34: goto label1;
            case 39: goto label1;
            case 91: goto label3;
            case 123: goto label2;
            default: goto label4;
        };

     label1:
        $r3 = virtualinvoke r0.<facebook4j.internal.org.json.JSONTokener: java.lang.String nextString(char)>($c0);

        return $r3;

     label2:
        virtualinvoke r0.<facebook4j.internal.org.json.JSONTokener: void back()>();

        $r10 = new facebook4j.internal.org.json.JSONObject;

        specialinvoke $r10.<facebook4j.internal.org.json.JSONObject: void <init>(facebook4j.internal.org.json.JSONTokener)>(r0);

        return $r10;

     label3:
        virtualinvoke r0.<facebook4j.internal.org.json.JSONTokener: void back()>();

        $r11 = new facebook4j.internal.org.json.JSONArray;

        specialinvoke $r11.<facebook4j.internal.org.json.JSONArray: void <init>(facebook4j.internal.org.json.JSONTokener)>(r0);

        return $r11;

     label4:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

     label5:
        $i4 = (int) c2;

        if $i4 < 32 goto label6;

        $r9 = ",:]}/\\\"[{;=#";

        $i5 = (int) c2;

        $i1 = virtualinvoke $r9.<java.lang.String: int indexOf(int)>($i5);

        if $i1 >= 0 goto label6;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);

        c2 = virtualinvoke r0.<facebook4j.internal.org.json.JSONTokener: char next()>();

        goto label5;

     label6:
        virtualinvoke r0.<facebook4j.internal.org.json.JSONTokener: void back()>();

        $r5 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label7;

        $r8 = virtualinvoke r0.<facebook4j.internal.org.json.JSONTokener: facebook4j.internal.org.json.JSONException syntaxError(java.lang.String)>("Missing value");

        throw $r8;

     label7:
        $r7 = staticinvoke <facebook4j.internal.org.json.JSONObject: java.lang.Object stringToValue(java.lang.String)>($r6);

        return $r7;
    }

    public char skipTo(char) throws facebook4j.internal.org.json.JSONException
    {
        facebook4j.internal.org.json.JSONTokener r0;
        char $c2, c3;
        java.io.IOException $r3;
        java.io.Reader $r1, $r2;
        facebook4j.internal.org.json.JSONException $r5;
        int i0, i1, i4, $i5, $i6;

        r0 := @this: facebook4j.internal.org.json.JSONTokener;

        c3 := @parameter0: char;

     label1:
        i4 = r0.<facebook4j.internal.org.json.JSONTokener: int index>;

        i0 = r0.<facebook4j.internal.org.json.JSONTokener: int character>;

        i1 = r0.<facebook4j.internal.org.json.JSONTokener: int line>;

        $r1 = r0.<facebook4j.internal.org.json.JSONTokener: java.io.Reader reader>;

        virtualinvoke $r1.<java.io.Reader: void mark(int)>(2147483647);

     label2:
        $c2 = virtualinvoke r0.<facebook4j.internal.org.json.JSONTokener: char next()>();

        if $c2 != 0 goto label4;

        $r2 = r0.<facebook4j.internal.org.json.JSONTokener: java.io.Reader reader>;

        virtualinvoke $r2.<java.io.Reader: void reset()>();

        r0.<facebook4j.internal.org.json.JSONTokener: int index> = i4;

        r0.<facebook4j.internal.org.json.JSONTokener: int character> = i0;

        r0.<facebook4j.internal.org.json.JSONTokener: int line> = i1;

     label3:
        return $c2;

     label4:
        $i5 = (int) $c2;

        $i6 = (int) c3;

        if $i5 != $i6 goto label2;

     label5:
        goto label7;

     label6:
        $r3 := @caughtexception;

        $r5 = new facebook4j.internal.org.json.JSONException;

        specialinvoke $r5.<facebook4j.internal.org.json.JSONException: void <init>(java.lang.Throwable)>($r3);

        throw $r5;

     label7:
        virtualinvoke r0.<facebook4j.internal.org.json.JSONTokener: void back()>();

        return $c2;

        catch java.io.IOException from label1 to label3 with label6;
        catch java.io.IOException from label4 to label5 with label6;
    }

    public facebook4j.internal.org.json.JSONException syntaxError(java.lang.String)
    {
        facebook4j.internal.org.json.JSONTokener r4;
        facebook4j.internal.org.json.JSONException $r0;
        java.lang.StringBuilder $r1, $r3, $r6;
        java.lang.String r2, $r5, $r7;

        r4 := @this: facebook4j.internal.org.json.JSONTokener;

        r2 := @parameter0: java.lang.String;

        $r0 = new facebook4j.internal.org.json.JSONException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r5 = virtualinvoke r4.<facebook4j.internal.org.json.JSONTokener: java.lang.String toString()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<facebook4j.internal.org.json.JSONException: void <init>(java.lang.String)>($r7);

        return $r0;
    }

    public java.lang.String toString()
    {
        facebook4j.internal.org.json.JSONTokener r2;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5, $r6, $r7, $r8;
        java.lang.String $r9;

        r2 := @this: facebook4j.internal.org.json.JSONTokener;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $i0 = r2.<facebook4j.internal.org.json.JSONTokener: int index>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [character ");

        $i1 = r2.<facebook4j.internal.org.json.JSONTokener: int character>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" line ");

        $i2 = r2.<facebook4j.internal.org.json.JSONTokener: int line>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }
}
