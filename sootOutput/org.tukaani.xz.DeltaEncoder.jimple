class org.tukaani.xz.DeltaEncoder extends org.tukaani.xz.DeltaCoder implements org.tukaani.xz.FilterEncoder
{
    private final org.tukaani.xz.DeltaOptions options;
    private final byte[] props;

    void <init>(org.tukaani.xz.DeltaOptions)
    {
        byte[] $r1, $r3;
        org.tukaani.xz.DeltaEncoder r0;
        org.tukaani.xz.DeltaOptions r2, $r5;
        byte $b2;
        int $i0, $i1;
        java.lang.Object $r4;

        r0 := @this: org.tukaani.xz.DeltaEncoder;

        r2 := @parameter0: org.tukaani.xz.DeltaOptions;

        specialinvoke r0.<org.tukaani.xz.DeltaCoder: void <init>()>();

        $r1 = newarray (byte)[1];

        r0.<org.tukaani.xz.DeltaEncoder: byte[] props> = $r1;

        $r3 = r0.<org.tukaani.xz.DeltaEncoder: byte[] props>;

        $i0 = virtualinvoke r2.<org.tukaani.xz.DeltaOptions: int getDistance()>();

        $i1 = $i0 - 1;

        $b2 = (byte) $i1;

        $r3[0] = $b2;

        $r4 = virtualinvoke r2.<org.tukaani.xz.DeltaOptions: java.lang.Object clone()>();

        $r5 = (org.tukaani.xz.DeltaOptions) $r4;

        r0.<org.tukaani.xz.DeltaEncoder: org.tukaani.xz.DeltaOptions options> = $r5;

        return;
    }

    public long getFilterID()
    {
        org.tukaani.xz.DeltaEncoder r0;

        r0 := @this: org.tukaani.xz.DeltaEncoder;

        return 3L;
    }

    public byte[] getFilterProps()
    {
        byte[] $r1;
        org.tukaani.xz.DeltaEncoder r0;

        r0 := @this: org.tukaani.xz.DeltaEncoder;

        $r1 = r0.<org.tukaani.xz.DeltaEncoder: byte[] props>;

        return $r1;
    }

    public boolean supportsFlushing()
    {
        org.tukaani.xz.DeltaEncoder r0;

        r0 := @this: org.tukaani.xz.DeltaEncoder;

        return 1;
    }

    public org.tukaani.xz.FinishableOutputStream getOutputStream(org.tukaani.xz.FinishableOutputStream)
    {
        org.tukaani.xz.DeltaOptions $r2;
        org.tukaani.xz.DeltaEncoder r0;
        org.tukaani.xz.FinishableOutputStream r1, $r3;

        r0 := @this: org.tukaani.xz.DeltaEncoder;

        r1 := @parameter0: org.tukaani.xz.FinishableOutputStream;

        $r2 = r0.<org.tukaani.xz.DeltaEncoder: org.tukaani.xz.DeltaOptions options>;

        $r3 = virtualinvoke $r2.<org.tukaani.xz.DeltaOptions: org.tukaani.xz.FinishableOutputStream getOutputStream(org.tukaani.xz.FinishableOutputStream)>(r1);

        return $r3;
    }
}
