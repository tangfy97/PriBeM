public abstract class com.hp.hpl.jena.sparql.expr.ExprSystem extends com.hp.hpl.jena.sparql.expr.ExprFunction0
{
    private final com.hp.hpl.jena.sparql.util.Symbol systemSymbol;

    protected void <init>(java.lang.String, com.hp.hpl.jena.sparql.util.Symbol)
    {
        java.lang.String r1;
        com.hp.hpl.jena.sparql.expr.ExprSystem r0;
        com.hp.hpl.jena.sparql.util.Symbol r2;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprSystem;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.hp.hpl.jena.sparql.util.Symbol;

        specialinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprFunction0: void <init>(java.lang.String)>(r1);

        r0.<com.hp.hpl.jena.sparql.expr.ExprSystem: com.hp.hpl.jena.sparql.util.Symbol systemSymbol> = r2;

        return;
    }

    public com.hp.hpl.jena.sparql.expr.NodeValue eval(com.hp.hpl.jena.sparql.function.FunctionEnv)
    {
        com.hp.hpl.jena.sparql.expr.NodeValue $r6;
        com.hp.hpl.jena.graph.Node r5;
        com.hp.hpl.jena.sparql.expr.ExprEvalException $r7, $r13;
        java.lang.String $r10, $r12, $r18;
        com.hp.hpl.jena.sparql.util.Symbol $r3, $r16;
        boolean $z0;
        com.hp.hpl.jena.sparql.util.Context $r1;
        java.lang.Object $r4;
        java.lang.StringBuilder $r8, $r9, $r11, $r14, $r15, $r17;
        com.hp.hpl.jena.sparql.function.FunctionEnv r0;
        com.hp.hpl.jena.sparql.expr.ExprSystem r2;

        r2 := @this: com.hp.hpl.jena.sparql.expr.ExprSystem;

        r0 := @parameter0: com.hp.hpl.jena.sparql.function.FunctionEnv;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.sparql.function.FunctionEnv: com.hp.hpl.jena.sparql.util.Context getContext()>();

        $r3 = r2.<com.hp.hpl.jena.sparql.expr.ExprSystem: com.hp.hpl.jena.sparql.util.Symbol systemSymbol>;

        $r4 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.util.Context: java.lang.Object get(com.hp.hpl.jena.sparql.util.Symbol)>($r3);

        if $r4 != null goto label1;

        $r13 = new com.hp.hpl.jena.sparql.expr.ExprEvalException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("null for system symbol: ");

        $r16 = r2.<com.hp.hpl.jena.sparql.expr.ExprSystem: com.hp.hpl.jena.sparql.util.Symbol systemSymbol>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<com.hp.hpl.jena.sparql.expr.ExprEvalException: void <init>(java.lang.String)>($r18);

        throw $r13;

     label1:
        $z0 = $r4 instanceof com.hp.hpl.jena.graph.Node;

        if $z0 != 0 goto label2;

        $r7 = new com.hp.hpl.jena.sparql.expr.ExprEvalException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a Node: ");

        $r10 = staticinvoke <com.hp.hpl.jena.sparql.util.Utils: java.lang.String className(java.lang.Object)>($r4);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<com.hp.hpl.jena.sparql.expr.ExprEvalException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label2:
        r5 = (com.hp.hpl.jena.graph.Node) $r4;

        $r6 = staticinvoke <com.hp.hpl.jena.sparql.expr.NodeValue: com.hp.hpl.jena.sparql.expr.NodeValue makeNode(com.hp.hpl.jena.graph.Node)>(r5);

        return $r6;
    }
}
