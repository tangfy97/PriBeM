public class com.google.gxp.compiler.util.ClassMap extends java.lang.Object implements java.io.Serializable
{
    private final java.util.Map map;
    private static final long serialVersionUID;

    public void <init>()
    {
        java.util.IdentityHashMap $r1;
        com.google.gxp.compiler.util.ClassMap r0;

        r0 := @this: com.google.gxp.compiler.util.ClassMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.google.gxp.com.google.common.collect.Maps: java.util.IdentityHashMap newIdentityHashMap()>();

        r0.<com.google.gxp.compiler.util.ClassMap: java.util.Map map> = $r1;

        return;
    }

    public static com.google.gxp.compiler.util.ClassMap create()
    {
        com.google.gxp.compiler.util.ClassMap $r0;

        $r0 = new com.google.gxp.compiler.util.ClassMap;

        specialinvoke $r0.<com.google.gxp.compiler.util.ClassMap: void <init>()>();

        return $r0;
    }

    public java.lang.Object put(java.lang.Class, java.lang.Object)
    {
        java.lang.IllegalArgumentException $r6;
        java.util.Map $r3;
        java.lang.Class r0, $r5;
        java.lang.Object r2, $r4, r7;
        boolean $z0;
        com.google.gxp.compiler.util.ClassMap r1;

        r1 := @this: com.google.gxp.compiler.util.ClassMap;

        r0 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Object;

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isInterface()>();

        if $z0 == 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ClassMap cannot use interfaces as keys!");

        throw $r6;

     label1:
        $r3 = r1.<com.google.gxp.compiler.util.ClassMap: java.util.Map map>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r2);

        r7 = $r4;

        if $r4 != null goto label2;

        $r5 = virtualinvoke r0.<java.lang.Class: java.lang.Class getSuperclass()>();

        r7 = specialinvoke r1.<com.google.gxp.compiler.util.ClassMap: java.lang.Object getImpl(java.lang.Class)>($r5);

     label2:
        return r7;
    }

    public java.lang.Object get(java.lang.Object)
    {
        java.lang.Object r0, $r3;
        java.lang.Class $r2;
        boolean $z0;
        com.google.gxp.compiler.util.ClassMap r1;

        r1 := @this: com.google.gxp.compiler.util.ClassMap;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.Class;

        if $z0 == 0 goto label1;

        $r2 = (java.lang.Class) r0;

        $r3 = specialinvoke r1.<com.google.gxp.compiler.util.ClassMap: java.lang.Object getImpl(java.lang.Class)>($r2);

        return $r3;

     label1:
        return null;
    }

    private java.lang.Object getImpl(java.lang.Class)
    {
        java.util.Map $r2;
        java.lang.Class r0, r4;
        java.lang.Object $r3;
        com.google.gxp.compiler.util.ClassMap r1;

        r1 := @this: com.google.gxp.compiler.util.ClassMap;

        r0 := @parameter0: java.lang.Class;

        r4 = r0;

     label1:
        if r4 == null goto label3;

        $r2 = r1.<com.google.gxp.compiler.util.ClassMap: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        if $r3 == null goto label2;

        return $r3;

     label2:
        r4 = virtualinvoke r4.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label1;

     label3:
        return null;
    }

    public static void <clinit>()
    {
        <com.google.gxp.compiler.util.ClassMap: long serialVersionUID> = 1L;

        return;
    }
}
