public class org.objectweb.asm.tree.InvokeDynamicInsnNode extends org.objectweb.asm.tree.AbstractInsnNode
{
    public java.lang.String name;
    public java.lang.String desc;
    public org.objectweb.asm.Handle bsm;
    public java.lang.Object[] bsmArgs;

    public transient void <init>(java.lang.String, java.lang.String, org.objectweb.asm.Handle, java.lang.Object[])
    {
        org.objectweb.asm.Handle r3;
        java.lang.Object[] r4;
        org.objectweb.asm.tree.InvokeDynamicInsnNode r0;
        java.lang.String r1, r2;

        r0 := @this: org.objectweb.asm.tree.InvokeDynamicInsnNode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.objectweb.asm.Handle;

        r4 := @parameter3: java.lang.Object[];

        specialinvoke r0.<org.objectweb.asm.tree.AbstractInsnNode: void <init>(int)>(186);

        r0.<org.objectweb.asm.tree.InvokeDynamicInsnNode: java.lang.String name> = r1;

        r0.<org.objectweb.asm.tree.InvokeDynamicInsnNode: java.lang.String desc> = r2;

        r0.<org.objectweb.asm.tree.InvokeDynamicInsnNode: org.objectweb.asm.Handle bsm> = r3;

        r0.<org.objectweb.asm.tree.InvokeDynamicInsnNode: java.lang.Object[] bsmArgs> = r4;

        return;
    }

    public int getType()
    {
        org.objectweb.asm.tree.InvokeDynamicInsnNode r0;

        r0 := @this: org.objectweb.asm.tree.InvokeDynamicInsnNode;

        return 6;
    }

    public void accept(org.objectweb.asm.MethodVisitor)
    {
        org.objectweb.asm.Handle $r3;
        org.objectweb.asm.MethodVisitor r0;
        java.lang.Object[] $r2;
        org.objectweb.asm.tree.InvokeDynamicInsnNode r1;
        java.lang.String $r4, $r5;

        r1 := @this: org.objectweb.asm.tree.InvokeDynamicInsnNode;

        r0 := @parameter0: org.objectweb.asm.MethodVisitor;

        $r5 = r1.<org.objectweb.asm.tree.InvokeDynamicInsnNode: java.lang.String name>;

        $r4 = r1.<org.objectweb.asm.tree.InvokeDynamicInsnNode: java.lang.String desc>;

        $r3 = r1.<org.objectweb.asm.tree.InvokeDynamicInsnNode: org.objectweb.asm.Handle bsm>;

        $r2 = r1.<org.objectweb.asm.tree.InvokeDynamicInsnNode: java.lang.Object[] bsmArgs>;

        virtualinvoke r0.<org.objectweb.asm.MethodVisitor: void visitInvokeDynamicInsn(java.lang.String,java.lang.String,org.objectweb.asm.Handle,java.lang.Object[])>($r5, $r4, $r3, $r2);

        return;
    }

    public org.objectweb.asm.tree.AbstractInsnNode clone(java.util.Map)
    {
        org.objectweb.asm.Handle $r3;
        java.lang.Object[] $r2;
        java.util.Map r6;
        org.objectweb.asm.tree.InvokeDynamicInsnNode $r0, r1;
        java.lang.String $r4, $r5;

        r1 := @this: org.objectweb.asm.tree.InvokeDynamicInsnNode;

        r6 := @parameter0: java.util.Map;

        $r0 = new org.objectweb.asm.tree.InvokeDynamicInsnNode;

        $r5 = r1.<org.objectweb.asm.tree.InvokeDynamicInsnNode: java.lang.String name>;

        $r4 = r1.<org.objectweb.asm.tree.InvokeDynamicInsnNode: java.lang.String desc>;

        $r3 = r1.<org.objectweb.asm.tree.InvokeDynamicInsnNode: org.objectweb.asm.Handle bsm>;

        $r2 = r1.<org.objectweb.asm.tree.InvokeDynamicInsnNode: java.lang.Object[] bsmArgs>;

        specialinvoke $r0.<org.objectweb.asm.tree.InvokeDynamicInsnNode: void <init>(java.lang.String,java.lang.String,org.objectweb.asm.Handle,java.lang.Object[])>($r5, $r4, $r3, $r2);

        return $r0;
    }
}
