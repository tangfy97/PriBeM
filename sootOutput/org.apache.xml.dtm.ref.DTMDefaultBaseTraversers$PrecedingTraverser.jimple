class org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser extends org.apache.xml.dtm.DTMAxisTraverser
{
    private final org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0;

    private void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser;

        r1 := @parameter0: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers;

        specialinvoke r0.<org.apache.xml.dtm.DTMAxisTraverser: void <init>()>();

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0> = r1;

        return;
    }

    protected boolean isAncestor(int, int)
    {
        org.apache.xml.utils.SuballocatedIntVector $r2, $r4;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1, $r3;
        int i0, i1, i2, $i4;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $r2 = $r1.<org.apache.xml.dtm.ref.DTMDefaultBase: org.apache.xml.utils.SuballocatedIntVector m_parent>;

        i2 = virtualinvoke $r2.<org.apache.xml.utils.SuballocatedIntVector: int elementAt(int)>(i1);

        goto label3;

     label1:
        if i2 != i0 goto label2;

        return 1;

     label2:
        $r3 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $r4 = $r3.<org.apache.xml.dtm.ref.DTMDefaultBase: org.apache.xml.utils.SuballocatedIntVector m_parent>;

        i2 = virtualinvoke $r4.<org.apache.xml.utils.SuballocatedIntVector: int elementAt(int)>(i2);

     label3:
        $i4 = (int) -1;

        if $i4 != i2 goto label1;

        return 0;
    }

    public int next(int, int)
    {
        short $s3;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1, $r2, $r3, $r4;
        int i0, $i1, $i2, $i4, i5, i6, $i7, $i8, $i10, $i12;
        boolean $z0;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser;

        i0 := @parameter0: int;

        i5 := @parameter1: int;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i1 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeIdentity(int)>(i0);

        $r2 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i2 = virtualinvoke $r2.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeIdentity(int)>(i5);

        i6 = $i2 - 1;

        goto label4;

     label1:
        $r3 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $s3 = virtualinvoke $r3.<org.apache.xml.dtm.ref.DTMDefaultBase: short _type(int)>(i6);

        $i7 = (int) $s3;

        if 2 == $i7 goto label3;

        $i8 = (int) $s3;

        if 13 == $i8 goto label3;

        $z0 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser: boolean isAncestor(int,int)>($i1, i6);

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $r4 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i4 = virtualinvoke $r4.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeHandle(int)>(i6);

        return $i4;

     label3:
        $i10 = (int) -1;

        i6 = i6 + $i10;

     label4:
        if i6 >= 0 goto label1;

        $i12 = (int) -1;

        return $i12;
    }

    public int next(int, int, int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1, $r2, $r3, $r5;
        int i0, $i1, $i2, $i3, i4, $i5, i6, i7, $i9, $i11;
        boolean $z0;
        org.apache.xml.utils.SuballocatedIntVector $r4;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser;

        i0 := @parameter0: int;

        i6 := @parameter1: int;

        i4 := @parameter2: int;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i1 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeIdentity(int)>(i0);

        $r2 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i2 = virtualinvoke $r2.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeIdentity(int)>(i6);

        i7 = $i2 - 1;

        goto label4;

     label1:
        $r3 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $r4 = $r3.<org.apache.xml.dtm.ref.DTMDefaultBase: org.apache.xml.utils.SuballocatedIntVector m_exptype>;

        $i3 = virtualinvoke $r4.<org.apache.xml.utils.SuballocatedIntVector: int elementAt(int)>(i7);

        if $i3 != i4 goto label3;

        $z0 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser: boolean isAncestor(int,int)>($i1, i7);

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $r5 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i5 = virtualinvoke $r5.<org.apache.xml.dtm.ref.DTMDefaultBase: int makeNodeHandle(int)>(i7);

        return $i5;

     label3:
        $i9 = (int) -1;

        i7 = i7 + $i9;

     label4:
        if i7 >= 0 goto label1;

        $i11 = (int) -1;

        return $i11;
    }

    void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers, org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1 r2;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser;

        r1 := @parameter0: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers;

        r2 := @parameter1: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1;

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser: void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers)>(r1);

        return;
    }
}
