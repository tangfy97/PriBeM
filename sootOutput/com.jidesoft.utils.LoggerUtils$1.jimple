final class com.jidesoft.utils.LoggerUtils$1 extends java.util.logging.Handler
{

    void <init>()
    {
        com.jidesoft.utils.LoggerUtils$1 r0;

        r0 := @this: com.jidesoft.utils.LoggerUtils$1;

        specialinvoke r0.<java.util.logging.Handler: void <init>()>();

        return;
    }

    public void publish(java.util.logging.LogRecord)
    {
        java.io.PrintStream $r1, $r4, $r6, $r7, $r8;
        java.lang.Object[] $r3;
        com.jidesoft.utils.LoggerUtils$1 r9;
        java.util.logging.LogRecord r0;
        int $i0, $i1, $i2, i3, $i4;
        java.lang.Object $r5;
        java.lang.String $r2;

        r9 := @this: com.jidesoft.utils.LoggerUtils$1;

        r0 := @parameter0: java.util.logging.LogRecord;

        $r1 = <java.lang.System: java.io.PrintStream err>;

        $r2 = virtualinvoke r0.<java.util.logging.LogRecord: java.lang.String getMessage()>();

        virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>($r2);

        $r3 = virtualinvoke r0.<java.util.logging.LogRecord: java.lang.Object[] getParameters()>();

        if $r3 == null goto label4;

        $i0 = lengthof $r3;

        if $i0 <= 0 goto label1;

        $r8 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r8.<java.io.PrintStream: void print(java.lang.String)>("= ");

     label1:
        i3 = 0;

     label2:
        $i4 = lengthof $r3;

        if i3 >= $i4 goto label4;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        $r5 = $r3[i3];

        virtualinvoke $r6.<java.io.PrintStream: void print(java.lang.Object)>($r5);

        $i1 = lengthof $r3;

        $i2 = $i1 - 1;

        if i3 >= $i2 goto label3;

        $r7 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r7.<java.io.PrintStream: void print(java.lang.String)>(", ");

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        $r4 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r4.<java.io.PrintStream: void println()>();

        return;
    }

    public void flush()
    {
        com.jidesoft.utils.LoggerUtils$1 r0;

        r0 := @this: com.jidesoft.utils.LoggerUtils$1;

        return;
    }

    public void close() throws java.lang.SecurityException
    {
        com.jidesoft.utils.LoggerUtils$1 r0;

        r0 := @this: com.jidesoft.utils.LoggerUtils$1;

        return;
    }
}
