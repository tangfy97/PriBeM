public class org.apache.batik.gvt.font.GVTGlyphMetrics extends java.lang.Object
{
    private java.awt.font.GlyphMetrics gm;
    private float verticalAdvance;

    public void <init>(java.awt.font.GlyphMetrics, float)
    {
        float f0;
        org.apache.batik.gvt.font.GVTGlyphMetrics r0;
        java.awt.font.GlyphMetrics r1;

        r0 := @this: org.apache.batik.gvt.font.GVTGlyphMetrics;

        r1 := @parameter0: java.awt.font.GlyphMetrics;

        f0 := @parameter1: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.gvt.font.GVTGlyphMetrics: java.awt.font.GlyphMetrics gm> = r1;

        r0.<org.apache.batik.gvt.font.GVTGlyphMetrics: float verticalAdvance> = f0;

        return;
    }

    public void <init>(float, float, java.awt.geom.Rectangle2D, byte)
    {
        org.apache.batik.gvt.font.GVTGlyphMetrics r0;
        byte b0;
        java.awt.geom.Rectangle2D r2;
        float f0, f1;
        java.awt.font.GlyphMetrics $r1;

        r0 := @this: org.apache.batik.gvt.font.GVTGlyphMetrics;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r2 := @parameter2: java.awt.geom.Rectangle2D;

        b0 := @parameter3: byte;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.awt.font.GlyphMetrics;

        specialinvoke $r1.<java.awt.font.GlyphMetrics: void <init>(float,java.awt.geom.Rectangle2D,byte)>(f0, r2, b0);

        r0.<org.apache.batik.gvt.font.GVTGlyphMetrics: java.awt.font.GlyphMetrics gm> = $r1;

        r0.<org.apache.batik.gvt.font.GVTGlyphMetrics: float verticalAdvance> = f1;

        return;
    }

    public float getHorizontalAdvance()
    {
        float $f0;
        org.apache.batik.gvt.font.GVTGlyphMetrics r0;
        java.awt.font.GlyphMetrics $r1;

        r0 := @this: org.apache.batik.gvt.font.GVTGlyphMetrics;

        $r1 = r0.<org.apache.batik.gvt.font.GVTGlyphMetrics: java.awt.font.GlyphMetrics gm>;

        $f0 = virtualinvoke $r1.<java.awt.font.GlyphMetrics: float getAdvance()>();

        return $f0;
    }

    public float getVerticalAdvance()
    {
        float $f0;
        org.apache.batik.gvt.font.GVTGlyphMetrics r0;

        r0 := @this: org.apache.batik.gvt.font.GVTGlyphMetrics;

        $f0 = r0.<org.apache.batik.gvt.font.GVTGlyphMetrics: float verticalAdvance>;

        return $f0;
    }

    public java.awt.geom.Rectangle2D getBounds2D()
    {
        org.apache.batik.gvt.font.GVTGlyphMetrics r0;
        java.awt.font.GlyphMetrics $r1;
        java.awt.geom.Rectangle2D $r2;

        r0 := @this: org.apache.batik.gvt.font.GVTGlyphMetrics;

        $r1 = r0.<org.apache.batik.gvt.font.GVTGlyphMetrics: java.awt.font.GlyphMetrics gm>;

        $r2 = virtualinvoke $r1.<java.awt.font.GlyphMetrics: java.awt.geom.Rectangle2D getBounds2D()>();

        return $r2;
    }

    public float getLSB()
    {
        float $f0;
        org.apache.batik.gvt.font.GVTGlyphMetrics r0;
        java.awt.font.GlyphMetrics $r1;

        r0 := @this: org.apache.batik.gvt.font.GVTGlyphMetrics;

        $r1 = r0.<org.apache.batik.gvt.font.GVTGlyphMetrics: java.awt.font.GlyphMetrics gm>;

        $f0 = virtualinvoke $r1.<java.awt.font.GlyphMetrics: float getLSB()>();

        return $f0;
    }

    public float getRSB()
    {
        float $f0;
        org.apache.batik.gvt.font.GVTGlyphMetrics r0;
        java.awt.font.GlyphMetrics $r1;

        r0 := @this: org.apache.batik.gvt.font.GVTGlyphMetrics;

        $r1 = r0.<org.apache.batik.gvt.font.GVTGlyphMetrics: java.awt.font.GlyphMetrics gm>;

        $f0 = virtualinvoke $r1.<java.awt.font.GlyphMetrics: float getRSB()>();

        return $f0;
    }

    public int getType()
    {
        int $i0;
        org.apache.batik.gvt.font.GVTGlyphMetrics r0;
        java.awt.font.GlyphMetrics $r1;

        r0 := @this: org.apache.batik.gvt.font.GVTGlyphMetrics;

        $r1 = r0.<org.apache.batik.gvt.font.GVTGlyphMetrics: java.awt.font.GlyphMetrics gm>;

        $i0 = virtualinvoke $r1.<java.awt.font.GlyphMetrics: int getType()>();

        return $i0;
    }

    public boolean isCombining()
    {
        org.apache.batik.gvt.font.GVTGlyphMetrics r0;
        java.awt.font.GlyphMetrics $r1;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.font.GVTGlyphMetrics;

        $r1 = r0.<org.apache.batik.gvt.font.GVTGlyphMetrics: java.awt.font.GlyphMetrics gm>;

        $z0 = virtualinvoke $r1.<java.awt.font.GlyphMetrics: boolean isCombining()>();

        return $z0;
    }

    public boolean isComponent()
    {
        org.apache.batik.gvt.font.GVTGlyphMetrics r0;
        java.awt.font.GlyphMetrics $r1;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.font.GVTGlyphMetrics;

        $r1 = r0.<org.apache.batik.gvt.font.GVTGlyphMetrics: java.awt.font.GlyphMetrics gm>;

        $z0 = virtualinvoke $r1.<java.awt.font.GlyphMetrics: boolean isComponent()>();

        return $z0;
    }

    public boolean isLigature()
    {
        org.apache.batik.gvt.font.GVTGlyphMetrics r0;
        java.awt.font.GlyphMetrics $r1;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.font.GVTGlyphMetrics;

        $r1 = r0.<org.apache.batik.gvt.font.GVTGlyphMetrics: java.awt.font.GlyphMetrics gm>;

        $z0 = virtualinvoke $r1.<java.awt.font.GlyphMetrics: boolean isLigature()>();

        return $z0;
    }

    public boolean isStandard()
    {
        org.apache.batik.gvt.font.GVTGlyphMetrics r0;
        java.awt.font.GlyphMetrics $r1;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.font.GVTGlyphMetrics;

        $r1 = r0.<org.apache.batik.gvt.font.GVTGlyphMetrics: java.awt.font.GlyphMetrics gm>;

        $z0 = virtualinvoke $r1.<java.awt.font.GlyphMetrics: boolean isStandard()>();

        return $z0;
    }

    public boolean isWhitespace()
    {
        org.apache.batik.gvt.font.GVTGlyphMetrics r0;
        java.awt.font.GlyphMetrics $r1;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.font.GVTGlyphMetrics;

        $r1 = r0.<org.apache.batik.gvt.font.GVTGlyphMetrics: java.awt.font.GlyphMetrics gm>;

        $z0 = virtualinvoke $r1.<java.awt.font.GlyphMetrics: boolean isWhitespace()>();

        return $z0;
    }
}
