public final class org.apache.poi.hssf.record.ArrayRecord extends org.apache.poi.hssf.record.SharedValueRecordBase
{
    public static final short sid;
    private static final int OPT_ALWAYS_RECALCULATE;
    private static final int OPT_CALCULATE_ON_OPEN;
    private int _options;
    private int _field3notUsed;
    private org.apache.poi.ss.formula.Formula _formula;

    public void <init>(org.apache.poi.hssf.record.RecordInputStream)
    {
        org.apache.poi.ss.formula.Formula $r2;
        org.apache.poi.hssf.record.RecordInputStream r1;
        int $i0, $i1, $i2, $i3;
        org.apache.poi.hssf.record.ArrayRecord r0;

        r0 := @this: org.apache.poi.hssf.record.ArrayRecord;

        r1 := @parameter0: org.apache.poi.hssf.record.RecordInputStream;

        specialinvoke r0.<org.apache.poi.hssf.record.SharedValueRecordBase: void <init>(org.apache.poi.util.LittleEndianInput)>(r1);

        $i0 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: int readUShort()>();

        r0.<org.apache.poi.hssf.record.ArrayRecord: int _options> = $i0;

        $i1 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: int readInt()>();

        r0.<org.apache.poi.hssf.record.ArrayRecord: int _field3notUsed> = $i1;

        $i2 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: int readUShort()>();

        $i3 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: int available()>();

        $r2 = staticinvoke <org.apache.poi.ss.formula.Formula: org.apache.poi.ss.formula.Formula read(int,org.apache.poi.util.LittleEndianInput,int)>($i2, r1, $i3);

        r0.<org.apache.poi.hssf.record.ArrayRecord: org.apache.poi.ss.formula.Formula _formula> = $r2;

        return;
    }

    public void <init>(org.apache.poi.ss.formula.Formula, org.apache.poi.hssf.util.CellRangeAddress8Bit)
    {
        org.apache.poi.hssf.util.CellRangeAddress8Bit r1;
        org.apache.poi.hssf.record.ArrayRecord r0;
        org.apache.poi.ss.formula.Formula r2;

        r0 := @this: org.apache.poi.hssf.record.ArrayRecord;

        r2 := @parameter0: org.apache.poi.ss.formula.Formula;

        r1 := @parameter1: org.apache.poi.hssf.util.CellRangeAddress8Bit;

        specialinvoke r0.<org.apache.poi.hssf.record.SharedValueRecordBase: void <init>(org.apache.poi.hssf.util.CellRangeAddress8Bit)>(r1);

        r0.<org.apache.poi.hssf.record.ArrayRecord: int _options> = 0;

        r0.<org.apache.poi.hssf.record.ArrayRecord: int _field3notUsed> = 0;

        r0.<org.apache.poi.hssf.record.ArrayRecord: org.apache.poi.ss.formula.Formula _formula> = r2;

        return;
    }

    public boolean isAlwaysRecalculate()
    {
        int $i0, $i1;
        org.apache.poi.hssf.record.ArrayRecord r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.ArrayRecord;

        $i0 = r0.<org.apache.poi.hssf.record.ArrayRecord: int _options>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isCalculateOnOpen()
    {
        int $i0, $i1;
        org.apache.poi.hssf.record.ArrayRecord r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.ArrayRecord;

        $i0 = r0.<org.apache.poi.hssf.record.ArrayRecord: int _options>;

        $i1 = $i0 & 2;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.apache.poi.ss.formula.ptg.Ptg[] getFormulaTokens()
    {
        org.apache.poi.hssf.record.ArrayRecord r0;
        org.apache.poi.ss.formula.Formula $r1;
        org.apache.poi.ss.formula.ptg.Ptg[] $r2;

        r0 := @this: org.apache.poi.hssf.record.ArrayRecord;

        $r1 = r0.<org.apache.poi.hssf.record.ArrayRecord: org.apache.poi.ss.formula.Formula _formula>;

        $r2 = virtualinvoke $r1.<org.apache.poi.ss.formula.Formula: org.apache.poi.ss.formula.ptg.Ptg[] getTokens()>();

        return $r2;
    }

    protected int getExtraDataSize()
    {
        org.apache.poi.ss.formula.Formula $r1;
        int $i0, $i1;
        org.apache.poi.hssf.record.ArrayRecord r0;

        r0 := @this: org.apache.poi.hssf.record.ArrayRecord;

        $r1 = r0.<org.apache.poi.hssf.record.ArrayRecord: org.apache.poi.ss.formula.Formula _formula>;

        $i0 = virtualinvoke $r1.<org.apache.poi.ss.formula.Formula: int getEncodedSize()>();

        $i1 = 6 + $i0;

        return $i1;
    }

    protected void serializeExtraData(org.apache.poi.util.LittleEndianOutput)
    {
        org.apache.poi.ss.formula.Formula $r2;
        org.apache.poi.util.LittleEndianOutput r0;
        int $i0, $i1;
        org.apache.poi.hssf.record.ArrayRecord r1;

        r1 := @this: org.apache.poi.hssf.record.ArrayRecord;

        r0 := @parameter0: org.apache.poi.util.LittleEndianOutput;

        $i0 = r1.<org.apache.poi.hssf.record.ArrayRecord: int _options>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i0);

        $i1 = r1.<org.apache.poi.hssf.record.ArrayRecord: int _field3notUsed>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeInt(int)>($i1);

        $r2 = r1.<org.apache.poi.hssf.record.ArrayRecord: org.apache.poi.ss.formula.Formula _formula>;

        virtualinvoke $r2.<org.apache.poi.ss.formula.Formula: void serialize(org.apache.poi.util.LittleEndianOutput)>(r0);

        return;
    }

    public short getSid()
    {
        org.apache.poi.hssf.record.ArrayRecord r0;

        r0 := @this: org.apache.poi.hssf.record.ArrayRecord;

        return 545;
    }

    public java.lang.String toString()
    {
        org.apache.poi.ss.formula.ptg.Ptg r19;
        org.apache.poi.hssf.record.ArrayRecord r1;
        java.lang.StringBuffer $r0, $r4, $r5, $r8, $r9, $r11, $r12, $r14, $r15, $r21, $r22;
        org.apache.poi.ss.formula.ptg.Ptg[] $r17;
        int $i0, $i1, $i2, i4;
        java.lang.String $r3, $r7, $r18, $r20;
        org.apache.poi.ss.formula.Formula $r16;
        org.apache.poi.hssf.util.CellRangeAddress8Bit $r6;
        char $c3;
        char[] $r10, $r13;
        java.lang.Class $r2;

        r1 := @this: org.apache.poi.hssf.record.ArrayRecord;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" [ARRAY]\n");

        $r5 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" range=");

        $r6 = virtualinvoke r1.<org.apache.poi.hssf.record.ArrayRecord: org.apache.poi.hssf.util.CellRangeAddress8Bit getRange()>();

        $r7 = virtualinvoke $r6.<org.apache.poi.hssf.util.CellRangeAddress8Bit: java.lang.String toString()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r9 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" options=");

        $i0 = r1.<org.apache.poi.hssf.record.ArrayRecord: int _options>;

        $r10 = staticinvoke <org.apache.poi.util.HexDump: char[] shortToHex(int)>($i0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r10);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r12 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" notUsed=");

        $i1 = r1.<org.apache.poi.hssf.record.ArrayRecord: int _field3notUsed>;

        $r13 = staticinvoke <org.apache.poi.util.HexDump: char[] intToHex(int)>($i1);

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r13);

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r15 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" formula:");

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r16 = r1.<org.apache.poi.hssf.record.ArrayRecord: org.apache.poi.ss.formula.Formula _formula>;

        $r17 = virtualinvoke $r16.<org.apache.poi.ss.formula.Formula: org.apache.poi.ss.formula.ptg.Ptg[] getTokens()>();

        i4 = 0;

     label1:
        $i2 = lengthof $r17;

        if i4 >= $i2 goto label2;

        r19 = $r17[i4];

        $r20 = virtualinvoke r19.<org.apache.poi.ss.formula.ptg.Ptg: java.lang.String toString()>();

        $r21 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        $c3 = virtualinvoke r19.<org.apache.poi.ss.formula.ptg.Ptg: char getRVAType()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        i4 = i4 + 1;

        goto label1;

     label2:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r18 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r18;
    }

    public static void <clinit>()
    {
        <org.apache.poi.hssf.record.ArrayRecord: int OPT_CALCULATE_ON_OPEN> = 2;

        <org.apache.poi.hssf.record.ArrayRecord: int OPT_ALWAYS_RECALCULATE> = 1;

        <org.apache.poi.hssf.record.ArrayRecord: short sid> = 545;

        return;
    }
}
