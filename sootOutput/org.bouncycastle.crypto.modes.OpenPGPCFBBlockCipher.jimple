public class org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher extends java.lang.Object implements org.bouncycastle.crypto.BlockCipher
{
    private byte[] IV;
    private byte[] FR;
    private byte[] FRE;
    private org.bouncycastle.crypto.BlockCipher cipher;
    private int count;
    private int blockSize;
    private boolean forEncryption;

    public void <init>(org.bouncycastle.crypto.BlockCipher)
    {
        byte[] $r2, $r3, $r4;
        org.bouncycastle.crypto.BlockCipher r1;
        int $i0, $i1, $i2, $i3;
        org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher r0;

        r0 := @this: org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher;

        r1 := @parameter0: org.bouncycastle.crypto.BlockCipher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher> = r1;

        $i0 = interfaceinvoke r1.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize> = $i0;

        $i1 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        $r2 = newarray (byte)[$i1];

        r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] IV> = $r2;

        $i2 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        $r3 = newarray (byte)[$i2];

        r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FR> = $r3;

        $i3 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        $r4 = newarray (byte)[$i3];

        r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FRE> = $r4;

        return;
    }

    public org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()
    {
        org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher r0;
        org.bouncycastle.crypto.BlockCipher $r1;

        r0 := @this: org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher;

        $r1 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        return $r1;
    }

    public java.lang.String getAlgorithmName()
    {
        java.lang.StringBuilder $r0, $r4, $r5;
        java.lang.String $r3, $r6;
        org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher r1;
        org.bouncycastle.crypto.BlockCipher $r2;

        r1 := @this: org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r3 = interfaceinvoke $r2.<org.bouncycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/OpenPGPCFB");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public int getBlockSize()
    {
        int $i0;
        org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher r0;
        org.bouncycastle.crypto.BlockCipher $r1;

        r0 := @this: org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher;

        $r1 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $i0 = interfaceinvoke $r1.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        return $i0;
    }

    public int processBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        byte[] r1, r2;
        int i0, i1, $i2;
        org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher r0;
        boolean $z0;

        r0 := @this: org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r2 := @parameter2: byte[];

        i1 := @parameter3: int;

        $z0 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: boolean forEncryption>;

        if $z0 == 0 goto label1;

        $i2 = specialinvoke r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int encryptBlock(byte[],int,byte[],int)>(r1, i0, r2, i1);

        goto label2;

     label1:
        $i2 = specialinvoke r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int decryptBlock(byte[],int,byte[],int)>(r1, i0, r2, i1);

     label2:
        return $i2;
    }

    public void reset()
    {
        byte[] $r1, $r2, $r3;
        int $i0;
        org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher r0;
        org.bouncycastle.crypto.BlockCipher $r4;

        r0 := @this: org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher;

        r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int count> = 0;

        $r3 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] IV>;

        $r2 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FR>;

        $r1 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FR>;

        $i0 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r2, 0, $i0);

        $r4 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        interfaceinvoke $r4.<org.bouncycastle.crypto.BlockCipher: void reset()>();

        return;
    }

    public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException
    {
        org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher r0;
        org.bouncycastle.crypto.BlockCipher $r2;
        boolean z0;
        org.bouncycastle.crypto.CipherParameters r1;

        r0 := @this: org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher;

        z0 := @parameter0: boolean;

        r1 := @parameter1: org.bouncycastle.crypto.CipherParameters;

        r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: boolean forEncryption> = z0;

        virtualinvoke r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: void reset()>();

        $r2 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        interfaceinvoke $r2.<org.bouncycastle.crypto.BlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(1, r1);

        return;
    }

    private byte encryptByte(byte, int)
    {
        byte[] $r1;
        byte b1, $b2, $b3, $b4;
        int i0;
        org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher r0;

        r0 := @this: org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher;

        b1 := @parameter0: byte;

        i0 := @parameter1: int;

        $r1 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FRE>;

        $b2 = $r1[i0];

        $b3 = $b2 ^ b1;

        $b4 = (byte) $b3;

        return $b4;
    }

    private int encryptBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        byte[] r1, r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r20, $r22;
        org.bouncycastle.crypto.DataLengthException $r23, $r24;
        byte $b13, $b14, $b16, $b18, $b29, $b32, $b38, $b40, $b44, $b46, $b51, $b54, $b58, $b61;
        org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher r0;
        org.bouncycastle.crypto.BlockCipher $r5, $r11, $r15, $r21;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i15, $i17, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i30, $i31, $i33, $i34, $i35, $i36, $i37, $i39, $i41, $i42, $i43, $i45, $i47, $i48, $i49, $i50, $i52, $i53, $i55, $i56, $i57, $i59, $i60, i62, i63, i64, $i65;

        r0 := @this: org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r2 := @parameter2: byte[];

        i4 := @parameter3: int;

        $i1 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        $i3 = i0 + $i1;

        $i2 = lengthof r1;

        if $i3 <= $i2 goto label01;

        $r24 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r24.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("input buffer too short");

        throw $r24;

     label01:
        $i5 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        $i7 = i4 + $i5;

        $i6 = lengthof r2;

        if $i7 <= $i6 goto label02;

        $r23 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r23.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("output buffer too short");

        throw $r23;

     label02:
        $i9 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int count>;

        $i8 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        if $i9 <= $i8 goto label05;

        $r17 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FR>;

        $i41 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        $i45 = $i41 - 2;

        $b44 = r1[i0];

        $i42 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        $i43 = $i42 - 2;

        $b46 = specialinvoke r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte encryptByte(byte,int)>($b44, $i43);

        r2[i4] = $b46;

        $r17[$i45] = $b46;

        $r18 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FR>;

        $i47 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        $i52 = $i47 - 1;

        $i53 = i4 + 1;

        $i48 = i0 + 1;

        $b51 = r1[$i48];

        $i49 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        $i50 = $i49 - 1;

        $b54 = specialinvoke r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte encryptByte(byte,int)>($b51, $i50);

        r2[$i53] = $b54;

        $r18[$i52] = $b54;

        $r21 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r20 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FR>;

        $r19 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FRE>;

        interfaceinvoke $r21.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r20, 0, $r19, 0);

        i62 = 2;

     label03:
        $i55 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        if i62 >= $i55 goto label04;

        $r22 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FR>;

        $i59 = i62 - 2;

        $i60 = i4 + i62;

        $i56 = i0 + i62;

        $b58 = r1[$i56];

        $i57 = i62 - 2;

        $b61 = specialinvoke r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte encryptByte(byte,int)>($b58, $i57);

        r2[$i60] = $b61;

        $r22[$i59] = $b61;

        i62 = i62 + 1;

        goto label03;

     label04:
        goto label11;

     label05:
        $i10 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int count>;

        if $i10 != 0 goto label08;

        $r15 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r14 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FR>;

        $r13 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FRE>;

        interfaceinvoke $r15.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r14, 0, $r13, 0);

        i63 = 0;

     label06:
        $i33 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        if i63 >= $i33 goto label07;

        $r16 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FR>;

        $i39 = i4 + i63;

        $i37 = i0 + i63;

        $b38 = r1[$i37];

        $b40 = specialinvoke r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte encryptByte(byte,int)>($b38, i63);

        r2[$i39] = $b40;

        $r16[i63] = $b40;

        i63 = i63 + 1;

        goto label06;

     label07:
        $i35 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int count>;

        $i34 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        $i36 = $i35 + $i34;

        r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int count> = $i36;

        goto label11;

     label08:
        $i12 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int count>;

        $i11 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        if $i12 != $i11 goto label11;

        $r5 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r4 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FR>;

        $r3 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FRE>;

        interfaceinvoke $r5.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r4, 0, $r3, 0);

        $b13 = r1[i0];

        $b14 = specialinvoke r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte encryptByte(byte,int)>($b13, 0);

        r2[i4] = $b14;

        $i17 = i4 + 1;

        $i15 = i0 + 1;

        $b16 = r1[$i15];

        $b18 = specialinvoke r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte encryptByte(byte,int)>($b16, 1);

        r2[$i17] = $b18;

        $r7 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FR>;

        $r6 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FR>;

        $i19 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        $i20 = $i19 - 2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 2, $r6, 0, $i20);

        $r8 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FR>;

        $i21 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        $i22 = $i21 - 2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i4, $r8, $i22, 2);

        $r11 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r10 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FR>;

        $r9 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FRE>;

        interfaceinvoke $r11.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r10, 0, $r9, 0);

        i64 = 2;

     label09:
        $i23 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        if i64 >= $i23 goto label10;

        $r12 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FR>;

        $i30 = i64 - 2;

        $i31 = i4 + i64;

        $i27 = i0 + i64;

        $b29 = r1[$i27];

        $i28 = i64 - 2;

        $b32 = specialinvoke r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte encryptByte(byte,int)>($b29, $i28);

        r2[$i31] = $b32;

        $r12[$i30] = $b32;

        i64 = i64 + 1;

        goto label09;

     label10:
        $i25 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int count>;

        $i24 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        $i26 = $i25 + $i24;

        r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int count> = $i26;

     label11:
        $i65 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        return $i65;
    }

    private int decryptBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        byte[] r1, r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r14, $r15, $r17, $r18, $r19, $r20, $r21, $r23;
        org.bouncycastle.crypto.DataLengthException $r24, $r25;
        byte $b14, $b16, b28, $b32, $b38, $b40, $b41, $b46, $b53, $b59, b60, b61, b63, b65, b66;
        org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher r0;
        org.bouncycastle.crypto.BlockCipher $r5, $r12, $r16, $r22;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i29, $i30, $i31, $i33, $i34, $i35, $i36, $i37, $i39, $i42, $i43, $i44, $i45, $i47, $i48, $i49, $i50, $i51, $i52, $i54, $i55, $i56, $i57, $i58, i62, i64, i67, $i68;

        r0 := @this: org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r2 := @parameter2: byte[];

        i4 := @parameter3: int;

        $i1 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        $i3 = i0 + $i1;

        $i2 = lengthof r1;

        if $i3 <= $i2 goto label01;

        $r25 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r25.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("input buffer too short");

        throw $r25;

     label01:
        $i5 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        $i7 = i4 + $i5;

        $i6 = lengthof r2;

        if $i7 <= $i6 goto label02;

        $r24 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r24.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("output buffer too short");

        throw $r24;

     label02:
        $i9 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int count>;

        $i8 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        if $i9 <= $i8 goto label05;

        b60 = r1[i0];

        $r18 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FR>;

        $i42 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        $i43 = $i42 - 2;

        $r18[$i43] = b60;

        $i44 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        $i45 = $i44 - 2;

        $b46 = specialinvoke r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte encryptByte(byte,int)>(b60, $i45);

        r2[i4] = $b46;

        $i47 = i0 + 1;

        b61 = r1[$i47];

        $r19 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FR>;

        $i48 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        $i49 = $i48 - 1;

        $r19[$i49] = b61;

        $i52 = i4 + 1;

        $i50 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        $i51 = $i50 - 1;

        $b53 = specialinvoke r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte encryptByte(byte,int)>(b61, $i51);

        r2[$i52] = $b53;

        $r22 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r21 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FR>;

        $r20 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FRE>;

        interfaceinvoke $r22.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r21, 0, $r20, 0);

        i62 = 2;

     label03:
        $i54 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        if i62 >= $i54 goto label04;

        $i55 = i0 + i62;

        b63 = r1[$i55];

        $r23 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FR>;

        $i56 = i62 - 2;

        $r23[$i56] = b63;

        $i58 = i4 + i62;

        $i57 = i62 - 2;

        $b59 = specialinvoke r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte encryptByte(byte,int)>(b63, $i57);

        r2[$i58] = $b59;

        i62 = i62 + 1;

        goto label03;

     label04:
        goto label11;

     label05:
        $i10 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int count>;

        if $i10 != 0 goto label08;

        $r16 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r15 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FR>;

        $r14 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FRE>;

        interfaceinvoke $r16.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r15, 0, $r14, 0);

        i64 = 0;

     label06:
        $i33 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        if i64 >= $i33 goto label07;

        $r17 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FR>;

        $i37 = i0 + i64;

        $b38 = r1[$i37];

        $r17[i64] = $b38;

        $i39 = i0 + i64;

        $b40 = r1[$i39];

        $b41 = specialinvoke r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte encryptByte(byte,int)>($b40, i64);

        r2[i64] = $b41;

        i64 = i64 + 1;

        goto label06;

     label07:
        $i35 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int count>;

        $i34 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        $i36 = $i35 + $i34;

        r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int count> = $i36;

        goto label11;

     label08:
        $i12 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int count>;

        $i11 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        if $i12 != $i11 goto label11;

        $r5 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r4 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FR>;

        $r3 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FRE>;

        interfaceinvoke $r5.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r4, 0, $r3, 0);

        b65 = r1[i0];

        $i13 = i0 + 1;

        b66 = r1[$i13];

        $b14 = specialinvoke r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte encryptByte(byte,int)>(b65, 0);

        r2[i4] = $b14;

        $i15 = i4 + 1;

        $b16 = specialinvoke r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte encryptByte(byte,int)>(b66, 1);

        r2[$i15] = $b16;

        $r7 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FR>;

        $r6 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FR>;

        $i17 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        $i18 = $i17 - 2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 2, $r6, 0, $i18);

        $r8 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FR>;

        $i19 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        $i20 = $i19 - 2;

        $r8[$i20] = b65;

        $r9 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FR>;

        $i21 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        $i22 = $i21 - 1;

        $r9[$i22] = b66;

        $r12 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r11 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FR>;

        $r10 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FRE>;

        interfaceinvoke $r12.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r11, 0, $r10, 0);

        i67 = 2;

     label09:
        $i23 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        if i67 >= $i23 goto label10;

        $i27 = i0 + i67;

        b28 = r1[$i27];

        $r13 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte[] FR>;

        $i29 = i67 - 2;

        $r13[$i29] = b28;

        $i31 = i4 + i67;

        $i30 = i67 - 2;

        $b32 = specialinvoke r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: byte encryptByte(byte,int)>(b28, $i30);

        r2[$i31] = $b32;

        i67 = i67 + 1;

        goto label09;

     label10:
        $i25 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int count>;

        $i24 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        $i26 = $i25 + $i24;

        r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int count> = $i26;

     label11:
        $i68 = r0.<org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher: int blockSize>;

        return $i68;
    }
}
