public class net.oauth.server.HttpRequestMessage extends net.oauth.OAuthMessage
{
    private final javax.servlet.http.HttpServletRequest request;

    public void <init>(javax.servlet.http.HttpServletRequest, java.lang.String)
    {
        net.oauth.server.HttpRequestMessage r0;
        javax.servlet.http.HttpServletRequest r1;
        java.util.List $r4, $r5;
        java.lang.String $r2, r3;

        r0 := @this: net.oauth.server.HttpRequestMessage;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r3 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>();

        $r4 = staticinvoke <net.oauth.server.HttpRequestMessage: java.util.List getParameters(javax.servlet.http.HttpServletRequest)>(r1);

        specialinvoke r0.<net.oauth.OAuthMessage: void <init>(java.lang.String,java.lang.String,java.util.Collection)>($r2, r3, $r4);

        r0.<net.oauth.server.HttpRequestMessage: javax.servlet.http.HttpServletRequest request> = r1;

        $r5 = virtualinvoke r0.<net.oauth.server.HttpRequestMessage: java.util.List getHeaders()>();

        staticinvoke <net.oauth.server.HttpRequestMessage: void copyHeaders(javax.servlet.http.HttpServletRequest,java.util.Collection)>(r1, $r5);

        return;
    }

    public java.io.InputStream getBodyAsStream() throws java.io.IOException
    {
        net.oauth.server.HttpRequestMessage r0;
        javax.servlet.http.HttpServletRequest $r1;
        javax.servlet.ServletInputStream $r2;

        r0 := @this: net.oauth.server.HttpRequestMessage;

        $r1 = r0.<net.oauth.server.HttpRequestMessage: javax.servlet.http.HttpServletRequest request>;

        $r2 = interfaceinvoke $r1.<javax.servlet.http.HttpServletRequest: javax.servlet.ServletInputStream getInputStream()>();

        return $r2;
    }

    public java.lang.String getBodyEncoding()
    {
        net.oauth.server.HttpRequestMessage r0;
        javax.servlet.http.HttpServletRequest $r1;
        java.lang.String $r2;

        r0 := @this: net.oauth.server.HttpRequestMessage;

        $r1 = r0.<net.oauth.server.HttpRequestMessage: javax.servlet.http.HttpServletRequest request>;

        $r2 = interfaceinvoke $r1.<javax.servlet.http.HttpServletRequest: java.lang.String getCharacterEncoding()>();

        return $r2;
    }

    private static void copyHeaders(javax.servlet.http.HttpServletRequest, java.util.Collection)
    {
        java.util.Enumeration $r1, $r4;
        java.util.Collection r5;
        javax.servlet.http.HttpServletRequest r0;
        java.lang.Object $r2, $r7;
        java.lang.String r3, $r8;
        net.oauth.OAuth$Parameter $r6;
        boolean $z0, $z1;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        r5 := @parameter1: java.util.Collection;

        $r1 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.util.Enumeration getHeaderNames()>();

        if $r1 == null goto label4;

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke $r1.<java.util.Enumeration: java.lang.Object nextElement()>();

        r3 = (java.lang.String) $r2;

        $r4 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.util.Enumeration getHeaders(java.lang.String)>(r3);

        if $r4 == null goto label3;

     label2:
        $z1 = interfaceinvoke $r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label3;

        $r6 = new net.oauth.OAuth$Parameter;

        $r7 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r8 = (java.lang.String) $r7;

        specialinvoke $r6.<net.oauth.OAuth$Parameter: void <init>(java.lang.String,java.lang.String)>(r3, $r8);

        interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>($r6);

        goto label2;

     label3:
        goto label1;

     label4:
        return;
    }

    public static java.util.List getParameters(javax.servlet.http.HttpServletRequest)
    {
        java.util.Enumeration $r2;
        java.lang.String[] r9;
        java.util.ArrayList $r0;
        javax.servlet.http.HttpServletRequest r1;
        java.util.Map $r3;
        int i0, i1;
        java.lang.String r10, $r16, $r17, r18, r21;
        net.oauth.OAuth$Parameter $r11, r19;
        boolean $z0, $z1, $z2, $z3;
        java.util.Map$Entry r20;
        java.util.Iterator $r5, $r14;
        java.util.Set $r4;
        java.util.List $r13;
        java.lang.Object $r6, $r7, $r8, $r12, $r15;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.util.Enumeration getHeaders(java.lang.String)>("Authorization");

     label1:
        if $r2 == null goto label5;

        $z0 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label5;

        $r12 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        r18 = (java.lang.String) $r12;

        $r13 = staticinvoke <net.oauth.OAuthMessage: java.util.List decodeAuthorization(java.lang.String)>(r18);

        $r14 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r19 = (net.oauth.OAuth$Parameter) $r15;

        $r16 = "realm";

        $r17 = virtualinvoke r19.<net.oauth.OAuth$Parameter: java.lang.String getKey()>();

        $z2 = virtualinvoke $r16.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r17);

        if $z2 != 0 goto label3;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r19);

     label3:
        goto label2;

     label4:
        goto label1;

     label5:
        $r3 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.util.Map getParameterMap()>();

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label6:
        $z3 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label9;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.util.Map$Entry) $r6;

        $r7 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getKey()>();

        r21 = (java.lang.String) $r7;

        $r8 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getValue()>();

        r9 = (java.lang.String[]) $r8;

        i0 = lengthof r9;

        i1 = 0;

     label7:
        if i1 >= i0 goto label8;

        r10 = r9[i1];

        $r11 = new net.oauth.OAuth$Parameter;

        specialinvoke $r11.<net.oauth.OAuth$Parameter: void <init>(java.lang.String,java.lang.String)>(r21, r10);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r11);

        i1 = i1 + 1;

        goto label7;

     label8:
        goto label6;

     label9:
        return $r0;
    }
}
