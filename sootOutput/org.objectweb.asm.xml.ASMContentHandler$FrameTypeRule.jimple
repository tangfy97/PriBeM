final class org.objectweb.asm.xml.ASMContentHandler$FrameTypeRule extends org.objectweb.asm.xml.ASMContentHandler$Rule
{
    final org.objectweb.asm.xml.ASMContentHandler this$0;

    void <init>(org.objectweb.asm.xml.ASMContentHandler)
    {
        org.objectweb.asm.xml.ASMContentHandler r1;
        org.objectweb.asm.xml.ASMContentHandler$FrameTypeRule r0;

        r0 := @this: org.objectweb.asm.xml.ASMContentHandler$FrameTypeRule;

        r1 := @parameter0: org.objectweb.asm.xml.ASMContentHandler;

        r0.<org.objectweb.asm.xml.ASMContentHandler$FrameTypeRule: org.objectweb.asm.xml.ASMContentHandler this$0> = r1;

        specialinvoke r0.<org.objectweb.asm.xml.ASMContentHandler$Rule: void <init>(org.objectweb.asm.xml.ASMContentHandler)>(r1);

        return;
    }

    public void begin(java.lang.String, org.xml.sax.Attributes)
    {
        org.objectweb.asm.Label $r14;
        java.util.HashMap $r4, $r10;
        org.objectweb.asm.xml.ASMContentHandler$FrameTypeRule r0;
        java.lang.Integer r12;
        java.util.ArrayList r6;
        org.xml.sax.Attributes r7;
        java.lang.String r3, $r8, $r9, $r13;
        boolean $z0;
        org.objectweb.asm.xml.ASMContentHandler $r1;
        java.lang.Object $r2, $r5, $r11;

        r0 := @this: org.objectweb.asm.xml.ASMContentHandler$FrameTypeRule;

        r3 := @parameter0: java.lang.String;

        r7 := @parameter1: org.xml.sax.Attributes;

        $r1 = r0.<org.objectweb.asm.xml.ASMContentHandler$FrameTypeRule: org.objectweb.asm.xml.ASMContentHandler this$0>;

        $r2 = virtualinvoke $r1.<org.objectweb.asm.xml.ASMContentHandler: java.lang.Object peek()>();

        $r4 = (java.util.HashMap) $r2;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r6 = (java.util.ArrayList) $r5;

        $r8 = interfaceinvoke r7.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("type");

        $r9 = "uninitialized";

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label1;

        $r13 = interfaceinvoke r7.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("label");

        $r14 = virtualinvoke r0.<org.objectweb.asm.xml.ASMContentHandler$FrameTypeRule: org.objectweb.asm.Label getLabel(java.lang.Object)>($r13);

        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

        goto label3;

     label1:
        $r10 = <org.objectweb.asm.xml.ASMContentHandler: java.util.HashMap TYPES>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r8);

        r12 = (java.lang.Integer) $r11;

        if r12 != null goto label2;

        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        goto label3;

     label2:
        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r12);

     label3:
        return;
    }
}
