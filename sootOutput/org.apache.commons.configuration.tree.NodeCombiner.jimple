public abstract class org.apache.commons.configuration.tree.NodeCombiner extends java.lang.Object
{
    protected java.util.Set listNodes;

    public void <init>()
    {
        java.util.HashSet $r1;
        org.apache.commons.configuration.tree.NodeCombiner r0;

        r0 := @this: org.apache.commons.configuration.tree.NodeCombiner;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<org.apache.commons.configuration.tree.NodeCombiner: java.util.Set listNodes> = $r1;

        return;
    }

    public void addListNode(java.lang.String)
    {
        java.util.Set $r2;
        java.lang.String r1;
        org.apache.commons.configuration.tree.NodeCombiner r0;

        r0 := @this: org.apache.commons.configuration.tree.NodeCombiner;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.commons.configuration.tree.NodeCombiner: java.util.Set listNodes>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return;
    }

    public java.util.Set getListNodes()
    {
        java.util.Set $r1, $r2;
        org.apache.commons.configuration.tree.NodeCombiner r0;

        r0 := @this: org.apache.commons.configuration.tree.NodeCombiner;

        $r1 = r0.<org.apache.commons.configuration.tree.NodeCombiner: java.util.Set listNodes>;

        $r2 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r1);

        return $r2;
    }

    public boolean isListNode(org.apache.commons.configuration.tree.ConfigurationNode)
    {
        org.apache.commons.configuration.tree.NodeCombiner r0;
        java.util.Set $r2;
        java.lang.String $r3;
        org.apache.commons.configuration.tree.ConfigurationNode r1;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.tree.NodeCombiner;

        r1 := @parameter0: org.apache.commons.configuration.tree.ConfigurationNode;

        $r2 = r0.<org.apache.commons.configuration.tree.NodeCombiner: java.util.Set listNodes>;

        $r3 = interfaceinvoke r1.<org.apache.commons.configuration.tree.ConfigurationNode: java.lang.String getName()>();

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        return $z0;
    }

    public abstract org.apache.commons.configuration.tree.ConfigurationNode combine(org.apache.commons.configuration.tree.ConfigurationNode, org.apache.commons.configuration.tree.ConfigurationNode);

    protected org.apache.commons.configuration.tree.ViewNode createViewNode()
    {
        org.apache.commons.configuration.tree.ViewNode $r0;
        org.apache.commons.configuration.tree.NodeCombiner r1;

        r1 := @this: org.apache.commons.configuration.tree.NodeCombiner;

        $r0 = new org.apache.commons.configuration.tree.ViewNode;

        specialinvoke $r0.<org.apache.commons.configuration.tree.ViewNode: void <init>()>();

        return $r0;
    }
}
