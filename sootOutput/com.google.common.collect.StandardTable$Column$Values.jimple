class com.google.common.collect.StandardTable$Column$Values extends java.util.AbstractCollection
{
    final com.google.common.collect.StandardTable$Column this$1;

    void <init>(com.google.common.collect.StandardTable$Column)
    {
        com.google.common.collect.StandardTable$Column r1;
        com.google.common.collect.StandardTable$Column$Values r0;

        r0 := @this: com.google.common.collect.StandardTable$Column$Values;

        r1 := @parameter0: com.google.common.collect.StandardTable$Column;

        r0.<com.google.common.collect.StandardTable$Column$Values: com.google.common.collect.StandardTable$Column this$1> = r1;

        specialinvoke r0.<java.util.AbstractCollection: void <init>()>();

        return;
    }

    public java.util.Iterator iterator()
    {
        com.google.common.collect.StandardTable$Column $r1;
        java.util.Iterator $r2;
        com.google.common.collect.StandardTable$Column$Values r0;

        r0 := @this: com.google.common.collect.StandardTable$Column$Values;

        $r1 = r0.<com.google.common.collect.StandardTable$Column$Values: com.google.common.collect.StandardTable$Column this$1>;

        $r2 = staticinvoke <com.google.common.collect.StandardTable: java.util.Iterator valueIteratorImpl(java.util.Map)>($r1);

        return $r2;
    }

    public int size()
    {
        int $i0;
        com.google.common.collect.StandardTable$Column $r1;
        java.util.Set $r2;
        com.google.common.collect.StandardTable$Column$Values r0;

        r0 := @this: com.google.common.collect.StandardTable$Column$Values;

        $r1 = r0.<com.google.common.collect.StandardTable$Column$Values: com.google.common.collect.StandardTable$Column this$1>;

        $r2 = virtualinvoke $r1.<com.google.common.collect.StandardTable$Column: java.util.Set entrySet()>();

        $i0 = interfaceinvoke $r2.<java.util.Set: int size()>();

        return $i0;
    }

    public boolean isEmpty()
    {
        com.google.common.collect.StandardTable $r4;
        com.google.common.collect.StandardTable$Column $r1, $r2;
        java.lang.Object $r3;
        com.google.common.collect.StandardTable$Column$Values r0;
        boolean $z0, $z1;

        r0 := @this: com.google.common.collect.StandardTable$Column$Values;

        $r1 = r0.<com.google.common.collect.StandardTable$Column$Values: com.google.common.collect.StandardTable$Column this$1>;

        $r4 = $r1.<com.google.common.collect.StandardTable$Column: com.google.common.collect.StandardTable this$0>;

        $r2 = r0.<com.google.common.collect.StandardTable$Column$Values: com.google.common.collect.StandardTable$Column this$1>;

        $r3 = $r2.<com.google.common.collect.StandardTable$Column: java.lang.Object columnKey>;

        $z0 = virtualinvoke $r4.<com.google.common.collect.StandardTable: boolean containsColumn(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void clear()
    {
        com.google.common.collect.StandardTable$Column $r1;
        java.util.Set $r2;
        com.google.common.collect.StandardTable$Column$Values r0;

        r0 := @this: com.google.common.collect.StandardTable$Column$Values;

        $r1 = r0.<com.google.common.collect.StandardTable$Column$Values: com.google.common.collect.StandardTable$Column this$1>;

        $r2 = virtualinvoke $r1.<com.google.common.collect.StandardTable$Column: java.util.Set entrySet()>();

        interfaceinvoke $r2.<java.util.Set: void clear()>();

        return;
    }

    public boolean remove(java.lang.Object)
    {
        com.google.common.collect.ImmutableEntry $r10;
        com.google.common.collect.StandardTable$Column $r2, $r11;
        java.util.Map $r4, r8;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r6;
        java.util.Collection $r5;
        java.util.Set $r9;
        com.google.common.collect.StandardTable $r3;
        java.lang.Object r0, $r7, $r12;
        com.google.common.collect.StandardTable$Column$Values r1;

        r1 := @this: com.google.common.collect.StandardTable$Column$Values;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0;

     label1:
        $r2 = r1.<com.google.common.collect.StandardTable$Column$Values: com.google.common.collect.StandardTable$Column this$1>;

        $r3 = $r2.<com.google.common.collect.StandardTable$Column: com.google.common.collect.StandardTable this$0>;

        $r4 = $r3.<com.google.common.collect.StandardTable: java.util.Map backingMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map) $r7;

        $r9 = interfaceinvoke r8.<java.util.Map: java.util.Set entrySet()>();

        $r10 = new com.google.common.collect.ImmutableEntry;

        $r11 = r1.<com.google.common.collect.StandardTable$Column$Values: com.google.common.collect.StandardTable$Column this$1>;

        $r12 = $r11.<com.google.common.collect.StandardTable$Column: java.lang.Object columnKey>;

        specialinvoke $r10.<com.google.common.collect.ImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>($r12, r0);

        $z1 = interfaceinvoke $r9.<java.util.Set: boolean remove(java.lang.Object)>($r10);

        if $z1 == 0 goto label4;

        $z2 = interfaceinvoke r8.<java.util.Map: boolean isEmpty()>();

        if $z2 == 0 goto label3;

        interfaceinvoke $r6.<java.util.Iterator: void remove()>();

     label3:
        return 1;

     label4:
        goto label2;

     label5:
        return 0;
    }

    public boolean removeAll(java.util.Collection)
    {
        com.google.common.collect.StandardTable$Column$Values$1 $r1;
        java.util.Collection r0;
        com.google.common.collect.StandardTable$Column $r3;
        com.google.common.collect.StandardTable$Column$Values r2;
        boolean $z0;

        r2 := @this: com.google.common.collect.StandardTable$Column$Values;

        r0 := @parameter0: java.util.Collection;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r1 = new com.google.common.collect.StandardTable$Column$Values$1;

        specialinvoke $r1.<com.google.common.collect.StandardTable$Column$Values$1: void <init>(com.google.common.collect.StandardTable$Column$Values,java.util.Collection)>(r2, r0);

        $r3 = r2.<com.google.common.collect.StandardTable$Column$Values: com.google.common.collect.StandardTable$Column this$1>;

        $z0 = virtualinvoke $r3.<com.google.common.collect.StandardTable$Column: boolean removePredicate(com.google.common.base.Predicate)>($r1);

        return $z0;
    }

    public boolean retainAll(java.util.Collection)
    {
        com.google.common.collect.StandardTable$Column$Values$2 $r1;
        java.util.Collection r0;
        com.google.common.collect.StandardTable$Column $r3;
        com.google.common.collect.StandardTable$Column$Values r2;
        boolean $z0;

        r2 := @this: com.google.common.collect.StandardTable$Column$Values;

        r0 := @parameter0: java.util.Collection;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r1 = new com.google.common.collect.StandardTable$Column$Values$2;

        specialinvoke $r1.<com.google.common.collect.StandardTable$Column$Values$2: void <init>(com.google.common.collect.StandardTable$Column$Values,java.util.Collection)>(r2, r0);

        $r3 = r2.<com.google.common.collect.StandardTable$Column$Values: com.google.common.collect.StandardTable$Column this$1>;

        $z0 = virtualinvoke $r3.<com.google.common.collect.StandardTable$Column: boolean removePredicate(com.google.common.base.Predicate)>($r1);

        return $z0;
    }
}
