final class org.springframework.core.convert.support.ArrayToObjectConverter extends java.lang.Object implements org.springframework.core.convert.converter.ConditionalGenericConverter
{
    private final org.springframework.core.convert.ConversionService conversionService;

    public void <init>(org.springframework.core.convert.ConversionService)
    {
        org.springframework.core.convert.support.ArrayToObjectConverter r0;
        org.springframework.core.convert.ConversionService r1;

        r0 := @this: org.springframework.core.convert.support.ArrayToObjectConverter;

        r1 := @parameter0: org.springframework.core.convert.ConversionService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.core.convert.support.ArrayToObjectConverter: org.springframework.core.convert.ConversionService conversionService> = r1;

        return;
    }

    public java.util.Set getConvertibleTypes()
    {
        org.springframework.core.convert.converter.GenericConverter$ConvertiblePair $r0;
        java.util.Set $r1;
        org.springframework.core.convert.support.ArrayToObjectConverter r2;

        r2 := @this: org.springframework.core.convert.support.ArrayToObjectConverter;

        $r0 = new org.springframework.core.convert.converter.GenericConverter$ConvertiblePair;

        specialinvoke $r0.<org.springframework.core.convert.converter.GenericConverter$ConvertiblePair: void <init>(java.lang.Class,java.lang.Class)>(class "[Ljava/lang/Object;", class "Ljava/lang/Object;");

        $r1 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r0);

        return $r1;
    }

    public boolean matches(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)
    {
        org.springframework.core.convert.support.ArrayToObjectConverter r3;
        org.springframework.core.convert.TypeDescriptor r0, $r1, r2;
        org.springframework.core.convert.ConversionService $r4;
        boolean $z0;

        r3 := @this: org.springframework.core.convert.support.ArrayToObjectConverter;

        r0 := @parameter0: org.springframework.core.convert.TypeDescriptor;

        r2 := @parameter1: org.springframework.core.convert.TypeDescriptor;

        $r1 = virtualinvoke r0.<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor getElementTypeDescriptor()>();

        $r4 = r3.<org.springframework.core.convert.support.ArrayToObjectConverter: org.springframework.core.convert.ConversionService conversionService>;

        $z0 = staticinvoke <org.springframework.core.convert.support.ConversionUtils: boolean canConvertElements(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.ConversionService)>($r1, r2, $r4);

        return $z0;
    }

    public java.lang.Object convert(java.lang.Object, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor)
    {
        org.springframework.core.convert.support.ArrayToObjectConverter r4;
        org.springframework.core.convert.TypeDescriptor r1, r2, $r6;
        int $i0;
        java.lang.Object r0, $r3, $r7;
        org.springframework.core.convert.ConversionService $r5;
        boolean $z0;

        r4 := @this: org.springframework.core.convert.support.ArrayToObjectConverter;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: org.springframework.core.convert.TypeDescriptor;

        r2 := @parameter2: org.springframework.core.convert.TypeDescriptor;

        if r0 != null goto label1;

        return null;

     label1:
        $z0 = virtualinvoke r1.<org.springframework.core.convert.TypeDescriptor: boolean isAssignableTo(org.springframework.core.convert.TypeDescriptor)>(r2);

        if $z0 == 0 goto label2;

        return r0;

     label2:
        $i0 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(r0);

        if $i0 != 0 goto label3;

        return null;

     label3:
        $r3 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(r0, 0);

        $r5 = r4.<org.springframework.core.convert.support.ArrayToObjectConverter: org.springframework.core.convert.ConversionService conversionService>;

        $r6 = virtualinvoke r1.<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor getElementTypeDescriptor(java.lang.Object)>($r3);

        $r7 = interfaceinvoke $r5.<org.springframework.core.convert.ConversionService: java.lang.Object convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)>($r3, $r6, r2);

        return $r7;
    }
}
