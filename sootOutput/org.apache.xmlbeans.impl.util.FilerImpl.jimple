public class org.apache.xmlbeans.impl.util.FilerImpl extends java.lang.Object implements org.apache.xmlbeans.Filer
{
    private java.io.File classdir;
    private java.io.File srcdir;
    private repackage.Repackager repackager;
    private boolean verbose;
    private java.util.List sourceFiles;
    private boolean incrSrcGen;
    private java.util.Set seenTypes;
    private static final java.nio.charset.Charset CHARSET;

    public void <init>(java.io.File, java.io.File, repackage.Repackager, boolean, boolean)
    {
        org.apache.xmlbeans.impl.util.FilerImpl r0;
        java.io.File r1, r2;
        java.util.ArrayList $r7;
        java.util.HashSet $r8;
        java.util.List $r4, $r6;
        repackage.Repackager r3;
        boolean z0, z1, $z2;

        r0 := @this: org.apache.xmlbeans.impl.util.FilerImpl;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.io.File;

        r3 := @parameter2: repackage.Repackager;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.impl.util.FilerImpl: java.io.File classdir> = r1;

        r0.<org.apache.xmlbeans.impl.util.FilerImpl: java.io.File srcdir> = r2;

        r0.<org.apache.xmlbeans.impl.util.FilerImpl: repackage.Repackager repackager> = r3;

        r0.<org.apache.xmlbeans.impl.util.FilerImpl: boolean verbose> = z0;

        $r4 = r0.<org.apache.xmlbeans.impl.util.FilerImpl: java.util.List sourceFiles>;

        if $r4 == null goto label1;

        $r6 = r0.<org.apache.xmlbeans.impl.util.FilerImpl: java.util.List sourceFiles>;

        goto label2;

     label1:
        $r7 = new java.util.ArrayList;

        $r6 = $r7;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

     label2:
        r0.<org.apache.xmlbeans.impl.util.FilerImpl: java.util.List sourceFiles> = $r6;

        r0.<org.apache.xmlbeans.impl.util.FilerImpl: boolean incrSrcGen> = z1;

        $z2 = r0.<org.apache.xmlbeans.impl.util.FilerImpl: boolean incrSrcGen>;

        if $z2 == 0 goto label3;

        $r8 = new java.util.HashSet;

        specialinvoke $r8.<java.util.HashSet: void <init>()>();

        r0.<org.apache.xmlbeans.impl.util.FilerImpl: java.util.Set seenTypes> = $r8;

     label3:
        return;
    }

    public java.io.OutputStream createBinaryFile(java.lang.String) throws java.io.IOException
    {
        java.io.PrintStream $r7;
        org.apache.xmlbeans.impl.util.FilerImpl r0;
        java.io.FileOutputStream $r5;
        java.io.File $r1, $r3, $r4;
        java.lang.StringBuffer $r6, $r8, $r9;
        java.lang.String r2, $r10;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.util.FilerImpl;

        r2 := @parameter0: java.lang.String;

        $z0 = r0.<org.apache.xmlbeans.impl.util.FilerImpl: boolean verbose>;

        if $z0 == 0 goto label1;

        $r7 = <java.lang.System: java.io.PrintStream err>;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("created binary: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10);

     label1:
        $r1 = new java.io.File;

        $r3 = r0.<org.apache.xmlbeans.impl.util.FilerImpl: java.io.File classdir>;

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, r2);

        $r4 = virtualinvoke $r1.<java.io.File: java.io.File getParentFile()>();

        virtualinvoke $r4.<java.io.File: boolean mkdirs()>();

        $r5 = new java.io.FileOutputStream;

        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.io.File)>($r1);

        return $r5;
    }

    public java.io.Writer createSourceFile(java.lang.String) throws java.io.IOException
    {
        org.apache.xmlbeans.impl.util.FilerImpl r0;
        repackage.Repackager $r10, $r11, $r13;
        boolean $z0, $z1, $z2, $z3;
        java.util.Set $r26;
        java.util.List $r9;
        java.io.Writer $r28;
        java.lang.StringBuffer $r3, $r4, $r16, $r18, $r22, $r23, $r25, $r29, $r30, $r32;
        int $i0, $i2, $i3, $i4;
        java.lang.String $r2, $r5, $r17, $r19, $r21, $r24, r27;
        java.io.PrintStream $r15;
        char $c1;
        java.io.File $r7, $r8, $r31;
        org.apache.xmlbeans.impl.util.FilerImpl$RepackagingWriter $r34;
        org.apache.xmlbeans.impl.util.FilerImpl$IncrFileWriter $r33;

        r0 := @this: org.apache.xmlbeans.impl.util.FilerImpl;

        r27 := @parameter0: java.lang.String;

        $z0 = r0.<org.apache.xmlbeans.impl.util.FilerImpl: boolean incrSrcGen>;

        if $z0 == 0 goto label1;

        $r26 = r0.<org.apache.xmlbeans.impl.util.FilerImpl: java.util.Set seenTypes>;

        interfaceinvoke $r26.<java.util.Set: boolean add(java.lang.Object)>(r27);

     label1:
        $i0 = virtualinvoke r27.<java.lang.String: int indexOf(int)>(36);

        if $i0 <= 0 goto label2;

        $r29 = new java.lang.StringBuffer;

        specialinvoke $r29.<java.lang.StringBuffer: void <init>()>();

        $i2 = virtualinvoke r27.<java.lang.String: int lastIndexOf(int)>(46);

        $r21 = virtualinvoke r27.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        $r22 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $i3 = virtualinvoke r27.<java.lang.String: int indexOf(int)>(36);

        $i4 = $i3 + 1;

        $r24 = virtualinvoke r27.<java.lang.String: java.lang.String substring(int)>($i4);

        $r25 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        r27 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        $r30 = new java.lang.StringBuffer;

        specialinvoke $r30.<java.lang.StringBuffer: void <init>()>();

        $c1 = <java.io.File: char separatorChar>;

        $r2 = virtualinvoke r27.<java.lang.String: java.lang.String replace(char,char)>(46, $c1);

        $r3 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".java");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r31 = new java.io.File;

        $r7 = r0.<org.apache.xmlbeans.impl.util.FilerImpl: java.io.File srcdir>;

        specialinvoke $r31.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, $r5);

        $r8 = virtualinvoke $r31.<java.io.File: java.io.File getParentFile()>();

        virtualinvoke $r8.<java.io.File: boolean mkdirs()>();

        $z1 = r0.<org.apache.xmlbeans.impl.util.FilerImpl: boolean verbose>;

        if $z1 == 0 goto label3;

        $r15 = <java.lang.System: java.io.PrintStream err>;

        $r32 = new java.lang.StringBuffer;

        specialinvoke $r32.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("created source: ");

        $r17 = virtualinvoke $r31.<java.io.File: java.lang.String getAbsolutePath()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r19);

     label3:
        $r9 = r0.<org.apache.xmlbeans.impl.util.FilerImpl: java.util.List sourceFiles>;

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r31);

        $z2 = r0.<org.apache.xmlbeans.impl.util.FilerImpl: boolean incrSrcGen>;

        if $z2 == 0 goto label4;

        $z3 = virtualinvoke $r31.<java.io.File: boolean exists()>();

        if $z3 == 0 goto label4;

        $r33 = new org.apache.xmlbeans.impl.util.FilerImpl$IncrFileWriter;

        $r13 = r0.<org.apache.xmlbeans.impl.util.FilerImpl: repackage.Repackager repackager>;

        specialinvoke $r33.<org.apache.xmlbeans.impl.util.FilerImpl$IncrFileWriter: void <init>(java.io.File,repackage.Repackager)>($r31, $r13);

        return $r33;

     label4:
        $r10 = r0.<org.apache.xmlbeans.impl.util.FilerImpl: repackage.Repackager repackager>;

        if $r10 != null goto label5;

        $r28 = staticinvoke <org.apache.xmlbeans.impl.util.FilerImpl: java.io.Writer writerForFile(java.io.File)>($r31);

        goto label6;

     label5:
        $r34 = new org.apache.xmlbeans.impl.util.FilerImpl$RepackagingWriter;

        $r28 = $r34;

        $r11 = r0.<org.apache.xmlbeans.impl.util.FilerImpl: repackage.Repackager repackager>;

        specialinvoke $r34.<org.apache.xmlbeans.impl.util.FilerImpl$RepackagingWriter: void <init>(java.io.File,repackage.Repackager)>($r31, $r11);

     label6:
        return $r28;
    }

    public java.util.List getSourceFiles()
    {
        java.util.List $r2;
        org.apache.xmlbeans.impl.util.FilerImpl r1;
        java.util.ArrayList $r0;

        r1 := @this: org.apache.xmlbeans.impl.util.FilerImpl;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<org.apache.xmlbeans.impl.util.FilerImpl: java.util.List sourceFiles>;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        return $r0;
    }

    public repackage.Repackager getRepackager()
    {
        org.apache.xmlbeans.impl.util.FilerImpl r0;
        repackage.Repackager $r1;

        r0 := @this: org.apache.xmlbeans.impl.util.FilerImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.util.FilerImpl: repackage.Repackager repackager>;

        return $r1;
    }

    private static final java.io.Writer writerForFile(java.io.File) throws java.io.IOException
    {
        java.io.FileWriter $r7;
        java.io.FileOutputStream $r1;
        java.io.File r2;
        java.nio.charset.Charset $r0, $r3;
        java.nio.charset.CharsetEncoder $r4;
        java.nio.charset.CodingErrorAction $r5;
        java.io.OutputStreamWriter $r6;

        r2 := @parameter0: java.io.File;

        $r0 = <org.apache.xmlbeans.impl.util.FilerImpl: java.nio.charset.Charset CHARSET>;

        if $r0 != null goto label1;

        $r7 = new java.io.FileWriter;

        specialinvoke $r7.<java.io.FileWriter: void <init>(java.io.File)>(r2);

        return $r7;

     label1:
        $r1 = new java.io.FileOutputStream;

        specialinvoke $r1.<java.io.FileOutputStream: void <init>(java.io.File)>(r2);

        $r3 = <org.apache.xmlbeans.impl.util.FilerImpl: java.nio.charset.Charset CHARSET>;

        $r4 = virtualinvoke $r3.<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>();

        $r5 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPORT>;

        virtualinvoke $r4.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>($r5);

        $r6 = new java.io.OutputStreamWriter;

        specialinvoke $r6.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.CharsetEncoder)>($r1, $r4);

        return $r6;
    }

    static java.io.Writer access$000(java.io.File) throws java.io.IOException
    {
        java.io.Writer $r1;
        java.io.File r0;

        r0 := @parameter0: java.io.File;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.util.FilerImpl: java.io.Writer writerForFile(java.io.File)>(r0);

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.String $r0;
        java.nio.charset.Charset r2;
        java.lang.Exception $r1;

        r2 = null;

     label1:
        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("file.encoding");

        r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>($r0);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

     label4:
        <org.apache.xmlbeans.impl.util.FilerImpl: java.nio.charset.Charset CHARSET> = r2;

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
