final class kodkod.util.ints.ArrayIntSet$DescendingIntArrayIterator extends java.lang.Object implements kodkod.util.ints.IntIterator
{
    private int next;
    private int end;
    final kodkod.util.ints.ArrayIntSet this$0;

    void <init>(kodkod.util.ints.ArrayIntSet, int, int)
    {
        kodkod.util.ints.ArrayIntSet$DescendingIntArrayIterator r0;
        int[] $r2, $r3;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7;
        kodkod.util.ints.ArrayIntSet r1;

        r0 := @this: kodkod.util.ints.ArrayIntSet$DescendingIntArrayIterator;

        r1 := @parameter0: kodkod.util.ints.ArrayIntSet;

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        r0.<kodkod.util.ints.ArrayIntSet$DescendingIntArrayIterator: kodkod.util.ints.ArrayIntSet this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <kodkod.util.ints.ArrayIntSet: int[] access$0(kodkod.util.ints.ArrayIntSet)>(r1);

        $i1 = staticinvoke <java.util.Arrays: int binarySearch(int[],int)>($r2, i0);

        $r3 = staticinvoke <kodkod.util.ints.ArrayIntSet: int[] access$0(kodkod.util.ints.ArrayIntSet)>(r1);

        $i3 = staticinvoke <java.util.Arrays: int binarySearch(int[],int)>($r3, i2);

        if $i1 < 0 goto label1;

        $i6 = $i1;

        goto label2;

     label1:
        $i4 = neg $i1;

        $i6 = $i4 - 2;

     label2:
        r0.<kodkod.util.ints.ArrayIntSet$DescendingIntArrayIterator: int next> = $i6;

        if $i3 < 0 goto label3;

        $i7 = $i3;

        goto label4;

     label3:
        $i5 = neg $i3;

        $i7 = $i5 - 1;

     label4:
        r0.<kodkod.util.ints.ArrayIntSet$DescendingIntArrayIterator: int end> = $i7;

        return;
    }

    public boolean hasNext()
    {
        int $i0, $i1;
        kodkod.util.ints.ArrayIntSet$DescendingIntArrayIterator r0;

        r0 := @this: kodkod.util.ints.ArrayIntSet$DescendingIntArrayIterator;

        $i1 = r0.<kodkod.util.ints.ArrayIntSet$DescendingIntArrayIterator: int next>;

        $i0 = r0.<kodkod.util.ints.ArrayIntSet$DescendingIntArrayIterator: int end>;

        if $i1 < $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int next()
    {
        kodkod.util.ints.ArrayIntSet$DescendingIntArrayIterator r0;
        int[] $r2;
        int $i0, $i1, $i2;
        kodkod.util.ints.ArrayIntSet $r1;
        java.util.NoSuchElementException $r3;
        boolean $z0;

        r0 := @this: kodkod.util.ints.ArrayIntSet$DescendingIntArrayIterator;

        $z0 = virtualinvoke r0.<kodkod.util.ints.ArrayIntSet$DescendingIntArrayIterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        throw $r3;

     label1:
        $r1 = r0.<kodkod.util.ints.ArrayIntSet$DescendingIntArrayIterator: kodkod.util.ints.ArrayIntSet this$0>;

        $r2 = staticinvoke <kodkod.util.ints.ArrayIntSet: int[] access$0(kodkod.util.ints.ArrayIntSet)>($r1);

        $i0 = r0.<kodkod.util.ints.ArrayIntSet$DescendingIntArrayIterator: int next>;

        $i1 = $i0 - 1;

        r0.<kodkod.util.ints.ArrayIntSet$DescendingIntArrayIterator: int next> = $i1;

        $i2 = $r2[$i0];

        return $i2;
    }

    public final void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        kodkod.util.ints.ArrayIntSet$DescendingIntArrayIterator r1;

        r1 := @this: kodkod.util.ints.ArrayIntSet$DescendingIntArrayIterator;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }
}
