public class com.hp.hpl.jena.reasoner.ReasonerRegistry extends java.lang.Object
{
    protected static com.hp.hpl.jena.reasoner.ReasonerRegistry theRegistry;
    protected java.util.Map reasonerFactories;
    protected com.hp.hpl.jena.rdf.model.Model allDescriptions;
    protected static com.hp.hpl.jena.reasoner.Reasoner theRDFSReasoner;
    protected static com.hp.hpl.jena.reasoner.Reasoner theRDFSSimpleReasoner;
    protected static com.hp.hpl.jena.reasoner.Reasoner theTRANSITIVEReasoner;
    protected static com.hp.hpl.jena.reasoner.Reasoner theOWLReasoner;
    protected static com.hp.hpl.jena.reasoner.Reasoner theOWLMicroReasoner;
    protected static com.hp.hpl.jena.reasoner.Reasoner theOWLMiniReasoner;

    private void <init>()
    {
        com.hp.hpl.jena.reasoner.ReasonerFactory $r3, $r4, $r5, $r7, $r8;
        java.util.HashMap $r1;
        com.hp.hpl.jena.reasoner.rulesys.GenericRuleReasonerFactory $r6;
        com.hp.hpl.jena.reasoner.ReasonerRegistry r0;
        com.hp.hpl.jena.rdf.model.Model $r2;

        r0 := @this: com.hp.hpl.jena.reasoner.ReasonerRegistry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.hp.hpl.jena.reasoner.ReasonerRegistry: java.util.Map reasonerFactories> = $r1;

        $r2 = staticinvoke <com.hp.hpl.jena.rdf.model.ModelFactory: com.hp.hpl.jena.rdf.model.Model createDefaultModel()>();

        r0.<com.hp.hpl.jena.reasoner.ReasonerRegistry: com.hp.hpl.jena.rdf.model.Model allDescriptions> = $r2;

        $r3 = staticinvoke <com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveReasonerFactory: com.hp.hpl.jena.reasoner.ReasonerFactory theInstance()>();

        virtualinvoke r0.<com.hp.hpl.jena.reasoner.ReasonerRegistry: void register(com.hp.hpl.jena.reasoner.ReasonerFactory)>($r3);

        $r4 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.RDFSRuleReasonerFactory: com.hp.hpl.jena.reasoner.ReasonerFactory theInstance()>();

        virtualinvoke r0.<com.hp.hpl.jena.reasoner.ReasonerRegistry: void register(com.hp.hpl.jena.reasoner.ReasonerFactory)>($r4);

        $r5 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasonerFactory: com.hp.hpl.jena.reasoner.ReasonerFactory theInstance()>();

        virtualinvoke r0.<com.hp.hpl.jena.reasoner.ReasonerRegistry: void register(com.hp.hpl.jena.reasoner.ReasonerFactory)>($r5);

        $r6 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.GenericRuleReasonerFactory: com.hp.hpl.jena.reasoner.rulesys.GenericRuleReasonerFactory theInstance()>();

        virtualinvoke r0.<com.hp.hpl.jena.reasoner.ReasonerRegistry: void register(com.hp.hpl.jena.reasoner.ReasonerFactory)>($r6);

        $r7 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.OWLMicroReasonerFactory: com.hp.hpl.jena.reasoner.ReasonerFactory theInstance()>();

        virtualinvoke r0.<com.hp.hpl.jena.reasoner.ReasonerRegistry: void register(com.hp.hpl.jena.reasoner.ReasonerFactory)>($r7);

        $r8 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.OWLMiniReasonerFactory: com.hp.hpl.jena.reasoner.ReasonerFactory theInstance()>();

        virtualinvoke r0.<com.hp.hpl.jena.reasoner.ReasonerRegistry: void register(com.hp.hpl.jena.reasoner.ReasonerFactory)>($r8);

        return;
    }

    public static com.hp.hpl.jena.reasoner.ReasonerRegistry theRegistry()
    {
        com.hp.hpl.jena.reasoner.ReasonerRegistry $r0, $r1, $r2;

        $r0 = <com.hp.hpl.jena.reasoner.ReasonerRegistry: com.hp.hpl.jena.reasoner.ReasonerRegistry theRegistry>;

        if $r0 != null goto label1;

        $r2 = new com.hp.hpl.jena.reasoner.ReasonerRegistry;

        specialinvoke $r2.<com.hp.hpl.jena.reasoner.ReasonerRegistry: void <init>()>();

        <com.hp.hpl.jena.reasoner.ReasonerRegistry: com.hp.hpl.jena.reasoner.ReasonerRegistry theRegistry> = $r2;

     label1:
        $r1 = <com.hp.hpl.jena.reasoner.ReasonerRegistry: com.hp.hpl.jena.reasoner.ReasonerRegistry theRegistry>;

        return $r1;
    }

    public void register(com.hp.hpl.jena.reasoner.ReasonerFactory)
    {
        com.hp.hpl.jena.reasoner.ReasonerFactory r1;
        com.hp.hpl.jena.rdf.model.Resource $r7, $r8;
        com.hp.hpl.jena.reasoner.ReasonerRegistry r0;
        java.util.Map $r2;
        com.hp.hpl.jena.rdf.model.Property $r9;
        com.hp.hpl.jena.rdf.model.Model $r4, $r5, $r10;
        java.lang.String $r3, $r6;

        r0 := @this: com.hp.hpl.jena.reasoner.ReasonerRegistry;

        r1 := @parameter0: com.hp.hpl.jena.reasoner.ReasonerFactory;

        $r2 = r0.<com.hp.hpl.jena.reasoner.ReasonerRegistry: java.util.Map reasonerFactories>;

        $r3 = interfaceinvoke r1.<com.hp.hpl.jena.reasoner.ReasonerFactory: java.lang.String getURI()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1);

        $r4 = interfaceinvoke r1.<com.hp.hpl.jena.reasoner.ReasonerFactory: com.hp.hpl.jena.rdf.model.Model getCapabilities()>();

        if $r4 == null goto label1;

        $r10 = r0.<com.hp.hpl.jena.reasoner.ReasonerRegistry: com.hp.hpl.jena.rdf.model.Model allDescriptions>;

        interfaceinvoke $r10.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Model)>($r4);

     label1:
        $r5 = r0.<com.hp.hpl.jena.reasoner.ReasonerRegistry: com.hp.hpl.jena.rdf.model.Model allDescriptions>;

        $r6 = interfaceinvoke r1.<com.hp.hpl.jena.reasoner.ReasonerFactory: java.lang.String getURI()>();

        $r7 = interfaceinvoke $r5.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Resource createResource(java.lang.String)>($r6);

        $r9 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r8 = <com.hp.hpl.jena.vocabulary.ReasonerVocabulary: com.hp.hpl.jena.rdf.model.Resource ReasonerClass>;

        interfaceinvoke $r7.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r9, $r8);

        return;
    }

    public void register(java.lang.String, com.hp.hpl.jena.reasoner.ReasonerFactory)
    {
        com.hp.hpl.jena.reasoner.ReasonerFactory r2;
        com.hp.hpl.jena.rdf.model.Resource $r5, $r6;
        com.hp.hpl.jena.reasoner.ReasonerRegistry r0;
        java.util.Map $r3;
        com.hp.hpl.jena.rdf.model.Property $r7;
        com.hp.hpl.jena.rdf.model.Model $r4;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.reasoner.ReasonerRegistry;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.hp.hpl.jena.reasoner.ReasonerFactory;

        $r3 = r0.<com.hp.hpl.jena.reasoner.ReasonerRegistry: java.util.Map reasonerFactories>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r4 = r0.<com.hp.hpl.jena.reasoner.ReasonerRegistry: com.hp.hpl.jena.rdf.model.Model allDescriptions>;

        $r5 = interfaceinvoke $r4.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Resource createResource(java.lang.String)>(r1);

        $r7 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r6 = <com.hp.hpl.jena.vocabulary.ReasonerVocabulary: com.hp.hpl.jena.rdf.model.Resource ReasonerClass>;

        interfaceinvoke $r5.<com.hp.hpl.jena.rdf.model.Resource: com.hp.hpl.jena.rdf.model.Resource addProperty(com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r7, $r6);

        return;
    }

    public com.hp.hpl.jena.rdf.model.Model getAllDescriptions()
    {
        com.hp.hpl.jena.rdf.model.Model $r1;
        com.hp.hpl.jena.reasoner.ReasonerRegistry r0;

        r0 := @this: com.hp.hpl.jena.reasoner.ReasonerRegistry;

        $r1 = r0.<com.hp.hpl.jena.reasoner.ReasonerRegistry: com.hp.hpl.jena.rdf.model.Model allDescriptions>;

        return $r1;
    }

    public com.hp.hpl.jena.rdf.model.Resource getDescription(java.lang.String)
    {
        com.hp.hpl.jena.rdf.model.Resource $r3, $r4;
        com.hp.hpl.jena.reasoner.ReasonerRegistry r0;
        com.hp.hpl.jena.rdf.model.Property $r5;
        com.hp.hpl.jena.rdf.model.Model $r2, $r6;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.reasoner.ReasonerRegistry;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.reasoner.ReasonerRegistry: com.hp.hpl.jena.rdf.model.Model allDescriptions>;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Resource getResource(java.lang.String)>(r1);

        $r6 = r0.<com.hp.hpl.jena.reasoner.ReasonerRegistry: com.hp.hpl.jena.rdf.model.Model allDescriptions>;

        $r5 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $r4 = <com.hp.hpl.jena.vocabulary.ReasonerVocabulary: com.hp.hpl.jena.rdf.model.Resource ReasonerClass>;

        $z0 = interfaceinvoke $r6.<com.hp.hpl.jena.rdf.model.Model: boolean contains(com.hp.hpl.jena.rdf.model.Resource,com.hp.hpl.jena.rdf.model.Property,com.hp.hpl.jena.rdf.model.RDFNode)>($r3, $r5, $r4);

        if $z0 == 0 goto label1;

        return $r3;

     label1:
        return null;
    }

    public com.hp.hpl.jena.reasoner.ReasonerFactory getFactory(java.lang.String)
    {
        com.hp.hpl.jena.reasoner.ReasonerRegistry r0;
        com.hp.hpl.jena.reasoner.ReasonerFactory $r4;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.reasoner.ReasonerRegistry;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.reasoner.ReasonerRegistry: java.util.Map reasonerFactories>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (com.hp.hpl.jena.reasoner.ReasonerFactory) $r3;

        return $r4;
    }

    public com.hp.hpl.jena.reasoner.Reasoner create(java.lang.String, com.hp.hpl.jena.rdf.model.Resource) throws com.hp.hpl.jena.reasoner.ReasonerException
    {
        com.hp.hpl.jena.reasoner.ReasonerFactory $r2;
        com.hp.hpl.jena.reasoner.Reasoner $r9;
        com.hp.hpl.jena.rdf.model.Resource r8;
        com.hp.hpl.jena.reasoner.ReasonerRegistry r0;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String r1, $r7;
        com.hp.hpl.jena.reasoner.ReasonerException $r3;

        r0 := @this: com.hp.hpl.jena.reasoner.ReasonerRegistry;

        r1 := @parameter0: java.lang.String;

        r8 := @parameter1: com.hp.hpl.jena.rdf.model.Resource;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.reasoner.ReasonerRegistry: com.hp.hpl.jena.reasoner.ReasonerFactory getFactory(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $r9 = interfaceinvoke $r2.<com.hp.hpl.jena.reasoner.ReasonerFactory: com.hp.hpl.jena.reasoner.Reasoner create(com.hp.hpl.jena.rdf.model.Resource)>(r8);

        return $r9;

     label1:
        $r3 = new com.hp.hpl.jena.reasoner.ReasonerException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to instantiate an unknown reasoner: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<com.hp.hpl.jena.reasoner.ReasonerException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    public static com.hp.hpl.jena.graph.Node makeDirect(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Node r0, $r3;
        java.lang.String $r1, $r2;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node: java.lang.String getURI()>();

        $r2 = staticinvoke <com.hp.hpl.jena.reasoner.ReasonerRegistry: java.lang.String makeDirect(java.lang.String)>($r1);

        $r3 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createURI(java.lang.String)>($r2);

        return $r3;
    }

    public static java.lang.String makeDirect(java.lang.String)
    {
        java.lang.StringBuilder $r0, $r1, $r4;
        java.lang.String r2, $r3, $r5;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("urn:x-hp-direct-predicate:");

        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String replace(char,char)>(58, 95);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static com.hp.hpl.jena.reasoner.Reasoner getRDFSReasoner()
    {
        com.hp.hpl.jena.reasoner.ReasonerFactory $r2;
        com.hp.hpl.jena.reasoner.Reasoner $r0, $r1, $r3;

        $r0 = <com.hp.hpl.jena.reasoner.ReasonerRegistry: com.hp.hpl.jena.reasoner.Reasoner theRDFSReasoner>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.RDFSRuleReasonerFactory: com.hp.hpl.jena.reasoner.ReasonerFactory theInstance()>();

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.reasoner.ReasonerFactory: com.hp.hpl.jena.reasoner.Reasoner create(com.hp.hpl.jena.rdf.model.Resource)>(null);

        <com.hp.hpl.jena.reasoner.ReasonerRegistry: com.hp.hpl.jena.reasoner.Reasoner theRDFSReasoner> = $r3;

     label1:
        $r1 = <com.hp.hpl.jena.reasoner.ReasonerRegistry: com.hp.hpl.jena.reasoner.Reasoner theRDFSReasoner>;

        return $r1;
    }

    public static com.hp.hpl.jena.reasoner.Reasoner getRDFSSimpleReasoner()
    {
        com.hp.hpl.jena.reasoner.ReasonerFactory $r2;
        com.hp.hpl.jena.reasoner.Reasoner $r0, $r1, $r3, $r5;
        com.hp.hpl.jena.rdf.model.Property $r4;

        $r0 = <com.hp.hpl.jena.reasoner.ReasonerRegistry: com.hp.hpl.jena.reasoner.Reasoner theRDFSSimpleReasoner>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.RDFSRuleReasonerFactory: com.hp.hpl.jena.reasoner.ReasonerFactory theInstance()>();

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.reasoner.ReasonerFactory: com.hp.hpl.jena.reasoner.Reasoner create(com.hp.hpl.jena.rdf.model.Resource)>(null);

        <com.hp.hpl.jena.reasoner.ReasonerRegistry: com.hp.hpl.jena.reasoner.Reasoner theRDFSSimpleReasoner> = $r3;

        $r5 = <com.hp.hpl.jena.reasoner.ReasonerRegistry: com.hp.hpl.jena.reasoner.Reasoner theRDFSSimpleReasoner>;

        $r4 = <com.hp.hpl.jena.vocabulary.ReasonerVocabulary: com.hp.hpl.jena.rdf.model.Property PROPsetRDFSLevel>;

        interfaceinvoke $r5.<com.hp.hpl.jena.reasoner.Reasoner: void setParameter(com.hp.hpl.jena.rdf.model.Property,java.lang.Object)>($r4, "simple");

     label1:
        $r1 = <com.hp.hpl.jena.reasoner.ReasonerRegistry: com.hp.hpl.jena.reasoner.Reasoner theRDFSSimpleReasoner>;

        return $r1;
    }

    public static com.hp.hpl.jena.reasoner.Reasoner getTransitiveReasoner()
    {
        com.hp.hpl.jena.reasoner.ReasonerFactory $r2;
        com.hp.hpl.jena.reasoner.Reasoner $r0, $r1, $r3;

        $r0 = <com.hp.hpl.jena.reasoner.ReasonerRegistry: com.hp.hpl.jena.reasoner.Reasoner theTRANSITIVEReasoner>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <com.hp.hpl.jena.reasoner.transitiveReasoner.TransitiveReasonerFactory: com.hp.hpl.jena.reasoner.ReasonerFactory theInstance()>();

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.reasoner.ReasonerFactory: com.hp.hpl.jena.reasoner.Reasoner create(com.hp.hpl.jena.rdf.model.Resource)>(null);

        <com.hp.hpl.jena.reasoner.ReasonerRegistry: com.hp.hpl.jena.reasoner.Reasoner theTRANSITIVEReasoner> = $r3;

     label1:
        $r1 = <com.hp.hpl.jena.reasoner.ReasonerRegistry: com.hp.hpl.jena.reasoner.Reasoner theTRANSITIVEReasoner>;

        return $r1;
    }

    public static com.hp.hpl.jena.reasoner.Reasoner getOWLReasoner()
    {
        com.hp.hpl.jena.reasoner.ReasonerFactory $r2;
        com.hp.hpl.jena.reasoner.Reasoner $r0, $r1, $r3;

        $r0 = <com.hp.hpl.jena.reasoner.ReasonerRegistry: com.hp.hpl.jena.reasoner.Reasoner theOWLReasoner>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.OWLFBRuleReasonerFactory: com.hp.hpl.jena.reasoner.ReasonerFactory theInstance()>();

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.reasoner.ReasonerFactory: com.hp.hpl.jena.reasoner.Reasoner create(com.hp.hpl.jena.rdf.model.Resource)>(null);

        <com.hp.hpl.jena.reasoner.ReasonerRegistry: com.hp.hpl.jena.reasoner.Reasoner theOWLReasoner> = $r3;

     label1:
        $r1 = <com.hp.hpl.jena.reasoner.ReasonerRegistry: com.hp.hpl.jena.reasoner.Reasoner theOWLReasoner>;

        return $r1;
    }

    public static com.hp.hpl.jena.reasoner.Reasoner getOWLMicroReasoner()
    {
        com.hp.hpl.jena.reasoner.ReasonerFactory $r2;
        com.hp.hpl.jena.reasoner.Reasoner $r0, $r1, $r3;

        $r0 = <com.hp.hpl.jena.reasoner.ReasonerRegistry: com.hp.hpl.jena.reasoner.Reasoner theOWLMicroReasoner>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.OWLMicroReasonerFactory: com.hp.hpl.jena.reasoner.ReasonerFactory theInstance()>();

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.reasoner.ReasonerFactory: com.hp.hpl.jena.reasoner.Reasoner create(com.hp.hpl.jena.rdf.model.Resource)>(null);

        <com.hp.hpl.jena.reasoner.ReasonerRegistry: com.hp.hpl.jena.reasoner.Reasoner theOWLMicroReasoner> = $r3;

     label1:
        $r1 = <com.hp.hpl.jena.reasoner.ReasonerRegistry: com.hp.hpl.jena.reasoner.Reasoner theOWLMicroReasoner>;

        return $r1;
    }

    public static com.hp.hpl.jena.reasoner.Reasoner getOWLMiniReasoner()
    {
        com.hp.hpl.jena.reasoner.ReasonerFactory $r2;
        com.hp.hpl.jena.reasoner.Reasoner $r0, $r1, $r3;

        $r0 = <com.hp.hpl.jena.reasoner.ReasonerRegistry: com.hp.hpl.jena.reasoner.Reasoner theOWLMiniReasoner>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.OWLMiniReasonerFactory: com.hp.hpl.jena.reasoner.ReasonerFactory theInstance()>();

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.reasoner.ReasonerFactory: com.hp.hpl.jena.reasoner.Reasoner create(com.hp.hpl.jena.rdf.model.Resource)>(null);

        <com.hp.hpl.jena.reasoner.ReasonerRegistry: com.hp.hpl.jena.reasoner.Reasoner theOWLMiniReasoner> = $r3;

     label1:
        $r1 = <com.hp.hpl.jena.reasoner.ReasonerRegistry: com.hp.hpl.jena.reasoner.Reasoner theOWLMiniReasoner>;

        return $r1;
    }

    static void <clinit>()
    {
        <com.hp.hpl.jena.reasoner.ReasonerRegistry: com.hp.hpl.jena.reasoner.Reasoner theRDFSReasoner> = null;

        <com.hp.hpl.jena.reasoner.ReasonerRegistry: com.hp.hpl.jena.reasoner.Reasoner theRDFSSimpleReasoner> = null;

        return;
    }
}
