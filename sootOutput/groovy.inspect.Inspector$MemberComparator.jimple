public class groovy.inspect.Inspector$MemberComparator extends java.lang.Object implements java.util.Comparator
{

    public void <init>()
    {
        groovy.inspect.Inspector$MemberComparator r0;

        r0 := @this: groovy.inspect.Inspector$MemberComparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(java.lang.Object, java.lang.Object)
    {
        java.lang.String[] $r1, r2, $r4, r5;
        groovy.inspect.Inspector$MemberComparator r18;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        java.lang.Object r0, r3;

        r18 := @this: groovy.inspect.Inspector$MemberComparator;

        r0 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        $r1 = (java.lang.String[]) r0;

        r2 = (java.lang.String[]) $r1;

        $r4 = (java.lang.String[]) r3;

        r5 = (java.lang.String[]) $r4;

        $r7 = r2[4];

        $r6 = r5[4];

        $i0 = virtualinvoke $r7.<java.lang.String: int compareTo(java.lang.String)>($r6);

        if 0 == $i0 goto label1;

        return $i0;

     label1:
        $r9 = r2[3];

        $r8 = r5[3];

        $i1 = virtualinvoke $r9.<java.lang.String: int compareTo(java.lang.String)>($r8);

        if 0 == $i1 goto label2;

        return $i1;

     label2:
        $r11 = r2[5];

        $r10 = r5[5];

        $i2 = virtualinvoke $r11.<java.lang.String: int compareTo(java.lang.String)>($r10);

        if 0 == $i2 goto label3;

        return $i2;

     label3:
        $r13 = r2[2];

        $r12 = r5[2];

        $i3 = virtualinvoke $r13.<java.lang.String: int compareTo(java.lang.String)>($r12);

        if 0 == $i3 goto label4;

        return $i3;

     label4:
        $r15 = r2[1];

        $r14 = r5[1];

        $i4 = virtualinvoke $r15.<java.lang.String: int compareTo(java.lang.String)>($r14);

        if 0 == $i4 goto label5;

        return $i4;

     label5:
        $r17 = r2[0];

        $r16 = r5[0];

        $i5 = virtualinvoke $r17.<java.lang.String: int compareTo(java.lang.String)>($r16);

        return $i5;
    }
}
