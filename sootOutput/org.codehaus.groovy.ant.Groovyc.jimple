public class org.codehaus.groovy.ant.Groovyc extends org.apache.tools.ant.taskdefs.MatchingTask
{
    private final org.codehaus.groovy.ant.LoggingHelper log;
    private org.apache.tools.ant.types.Path src;
    private java.io.File destDir;
    private org.apache.tools.ant.types.Path compileClasspath;
    private org.apache.tools.ant.types.Path compileSourcepath;
    private java.lang.String encoding;
    private boolean verbose;
    private boolean includeAntRuntime;
    private boolean includeJavaRuntime;
    private boolean fork;
    private java.lang.String memoryInitialSize;
    private java.lang.String memoryMaximumSize;
    protected boolean failOnError;
    protected boolean listFiles;
    protected java.io.File[] compileList;
    private java.lang.String updatedProperty;
    private java.lang.String errorProperty;
    private boolean taskSuccess;
    private boolean includeDestClasses;
    protected org.codehaus.groovy.control.CompilerConfiguration configuration;
    private org.apache.tools.ant.taskdefs.Javac javac;
    private boolean jointCompilation;

    public void <init>()
    {
        org.apache.tools.ant.Task $r6;
        org.codehaus.groovy.ant.LoggingHelper $r4;
        org.codehaus.groovy.ant.Groovyc r0;
        org.codehaus.groovy.control.CompilerConfiguration $r5;
        java.io.File[] $r2;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        specialinvoke r0.<org.apache.tools.ant.taskdefs.MatchingTask: void <init>()>();

        $r4 = new org.codehaus.groovy.ant.LoggingHelper;

        $r6 = (org.apache.tools.ant.Task) r0;

        specialinvoke $r4.<org.codehaus.groovy.ant.LoggingHelper: void <init>(org.apache.tools.ant.Task)>($r6);

        r0.<org.codehaus.groovy.ant.Groovyc: org.codehaus.groovy.ant.LoggingHelper log> = $r4;

        r0.<org.codehaus.groovy.ant.Groovyc: boolean verbose> = 0;

        r0.<org.codehaus.groovy.ant.Groovyc: boolean includeAntRuntime> = 1;

        r0.<org.codehaus.groovy.ant.Groovyc: boolean includeJavaRuntime> = 0;

        r0.<org.codehaus.groovy.ant.Groovyc: boolean fork> = 0;

        r0.<org.codehaus.groovy.ant.Groovyc: boolean failOnError> = 1;

        r0.<org.codehaus.groovy.ant.Groovyc: boolean listFiles> = 0;

        $r2 = newarray (java.io.File)[0];

        r0.<org.codehaus.groovy.ant.Groovyc: java.io.File[] compileList> = $r2;

        r0.<org.codehaus.groovy.ant.Groovyc: boolean taskSuccess> = 1;

        r0.<org.codehaus.groovy.ant.Groovyc: boolean includeDestClasses> = 1;

        $r5 = new org.codehaus.groovy.control.CompilerConfiguration;

        specialinvoke $r5.<org.codehaus.groovy.control.CompilerConfiguration: void <init>()>();

        r0.<org.codehaus.groovy.ant.Groovyc: org.codehaus.groovy.control.CompilerConfiguration configuration> = $r5;

        return;
    }

    public org.apache.tools.ant.types.Path createSrc()
    {
        org.apache.tools.ant.Project $r5;
        org.codehaus.groovy.ant.Groovyc r0;
        org.apache.tools.ant.types.Path $r1, $r2, $r3, $r4;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        $r1 = r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path src>;

        if $r1 != null goto label1;

        $r4 = new org.apache.tools.ant.types.Path;

        $r5 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.Project getProject()>();

        specialinvoke $r4.<org.apache.tools.ant.types.Path: void <init>(org.apache.tools.ant.Project)>($r5);

        r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path src> = $r4;

     label1:
        $r2 = r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path src>;

        $r3 = virtualinvoke $r2.<org.apache.tools.ant.types.Path: org.apache.tools.ant.types.Path createPath()>();

        return $r3;
    }

    protected org.apache.tools.ant.types.Path recreateSrc()
    {
        org.codehaus.groovy.ant.Groovyc r0;
        org.apache.tools.ant.types.Path $r1;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path src> = null;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path createSrc()>();

        return $r1;
    }

    public void setSrcdir(org.apache.tools.ant.types.Path)
    {
        org.codehaus.groovy.ant.Groovyc r0;
        org.apache.tools.ant.types.Path $r1, r2, $r3;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        r2 := @parameter0: org.apache.tools.ant.types.Path;

        $r1 = r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path src>;

        if $r1 != null goto label1;

        r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path src> = r2;

        goto label2;

     label1:
        $r3 = r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path src>;

        virtualinvoke $r3.<org.apache.tools.ant.types.Path: void append(org.apache.tools.ant.types.Path)>(r2);

     label2:
        return;
    }

    public org.apache.tools.ant.types.Path getSrcdir()
    {
        org.codehaus.groovy.ant.Groovyc r0;
        org.apache.tools.ant.types.Path $r1;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        $r1 = r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path src>;

        return $r1;
    }

    public void setDestdir(java.io.File)
    {
        org.codehaus.groovy.ant.Groovyc r0;
        java.io.File r1;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        r1 := @parameter0: java.io.File;

        r0.<org.codehaus.groovy.ant.Groovyc: java.io.File destDir> = r1;

        return;
    }

    public java.io.File getDestdir()
    {
        org.codehaus.groovy.ant.Groovyc r0;
        java.io.File $r1;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        $r1 = r0.<org.codehaus.groovy.ant.Groovyc: java.io.File destDir>;

        return $r1;
    }

    public void setSourcepath(org.apache.tools.ant.types.Path)
    {
        org.codehaus.groovy.ant.Groovyc r0;
        org.apache.tools.ant.types.Path $r1, r2, $r3;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        r2 := @parameter0: org.apache.tools.ant.types.Path;

        $r1 = r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path compileSourcepath>;

        if $r1 != null goto label1;

        r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path compileSourcepath> = r2;

        goto label2;

     label1:
        $r3 = r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path compileSourcepath>;

        virtualinvoke $r3.<org.apache.tools.ant.types.Path: void append(org.apache.tools.ant.types.Path)>(r2);

     label2:
        return;
    }

    public org.apache.tools.ant.types.Path getSourcepath()
    {
        org.codehaus.groovy.ant.Groovyc r0;
        org.apache.tools.ant.types.Path $r1;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        $r1 = r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path compileSourcepath>;

        return $r1;
    }

    public org.apache.tools.ant.types.Path createSourcepath()
    {
        org.apache.tools.ant.Project $r5;
        org.codehaus.groovy.ant.Groovyc r0;
        org.apache.tools.ant.types.Path $r1, $r2, $r3, $r4;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        $r1 = r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path compileSourcepath>;

        if $r1 != null goto label1;

        $r4 = new org.apache.tools.ant.types.Path;

        $r5 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.Project getProject()>();

        specialinvoke $r4.<org.apache.tools.ant.types.Path: void <init>(org.apache.tools.ant.Project)>($r5);

        r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path compileSourcepath> = $r4;

     label1:
        $r2 = r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path compileSourcepath>;

        $r3 = virtualinvoke $r2.<org.apache.tools.ant.types.Path: org.apache.tools.ant.types.Path createPath()>();

        return $r3;
    }

    public void setSourcepathRef(org.apache.tools.ant.types.Reference)
    {
        org.codehaus.groovy.ant.Groovyc r0;
        org.apache.tools.ant.types.Path $r1;
        org.apache.tools.ant.types.Reference r2;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        r2 := @parameter0: org.apache.tools.ant.types.Reference;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path createSourcepath()>();

        virtualinvoke $r1.<org.apache.tools.ant.types.Path: void setRefid(org.apache.tools.ant.types.Reference)>(r2);

        return;
    }

    public void setClasspath(org.apache.tools.ant.types.Path)
    {
        org.codehaus.groovy.ant.Groovyc r0;
        org.apache.tools.ant.types.Path $r1, r2, $r3;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        r2 := @parameter0: org.apache.tools.ant.types.Path;

        $r1 = r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path compileClasspath>;

        if $r1 != null goto label1;

        r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path compileClasspath> = r2;

        goto label2;

     label1:
        $r3 = r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path compileClasspath>;

        virtualinvoke $r3.<org.apache.tools.ant.types.Path: void append(org.apache.tools.ant.types.Path)>(r2);

     label2:
        return;
    }

    public org.apache.tools.ant.types.Path getClasspath()
    {
        org.codehaus.groovy.ant.Groovyc r0;
        org.apache.tools.ant.types.Path $r1;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        $r1 = r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path compileClasspath>;

        return $r1;
    }

    public org.apache.tools.ant.types.Path createClasspath()
    {
        org.apache.tools.ant.Project $r5;
        org.codehaus.groovy.ant.Groovyc r0;
        org.apache.tools.ant.types.Path $r1, $r2, $r3, $r4;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        $r1 = r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path compileClasspath>;

        if $r1 != null goto label1;

        $r4 = new org.apache.tools.ant.types.Path;

        $r5 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.Project getProject()>();

        specialinvoke $r4.<org.apache.tools.ant.types.Path: void <init>(org.apache.tools.ant.Project)>($r5);

        r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path compileClasspath> = $r4;

     label1:
        $r2 = r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path compileClasspath>;

        $r3 = virtualinvoke $r2.<org.apache.tools.ant.types.Path: org.apache.tools.ant.types.Path createPath()>();

        return $r3;
    }

    public void setClasspathRef(org.apache.tools.ant.types.Reference)
    {
        org.codehaus.groovy.ant.Groovyc r0;
        org.apache.tools.ant.types.Path $r1;
        org.apache.tools.ant.types.Reference r2;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        r2 := @parameter0: org.apache.tools.ant.types.Reference;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path createClasspath()>();

        virtualinvoke $r1.<org.apache.tools.ant.types.Path: void setRefid(org.apache.tools.ant.types.Reference)>(r2);

        return;
    }

    public void setListfiles(boolean)
    {
        org.codehaus.groovy.ant.Groovyc r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        z0 := @parameter0: boolean;

        r0.<org.codehaus.groovy.ant.Groovyc: boolean listFiles> = z0;

        return;
    }

    public boolean getListfiles()
    {
        org.codehaus.groovy.ant.Groovyc r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        $z0 = r0.<org.codehaus.groovy.ant.Groovyc: boolean listFiles>;

        return $z0;
    }

    public void setFailonerror(boolean)
    {
        org.codehaus.groovy.ant.Groovyc r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        z0 := @parameter0: boolean;

        r0.<org.codehaus.groovy.ant.Groovyc: boolean failOnError> = z0;

        return;
    }

    public void setProceed(boolean)
    {
        org.codehaus.groovy.ant.Groovyc r0;
        boolean z0, $z1;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<org.codehaus.groovy.ant.Groovyc: boolean failOnError> = $z1;

        return;
    }

    public boolean getFailonerror()
    {
        org.codehaus.groovy.ant.Groovyc r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        $z0 = r0.<org.codehaus.groovy.ant.Groovyc: boolean failOnError>;

        return $z0;
    }

    public void setMemoryInitialSize(java.lang.String)
    {
        java.lang.String r1;
        org.codehaus.groovy.ant.Groovyc r0;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        r1 := @parameter0: java.lang.String;

        r0.<org.codehaus.groovy.ant.Groovyc: java.lang.String memoryInitialSize> = r1;

        return;
    }

    public java.lang.String getMemoryInitialSize()
    {
        java.lang.String $r1;
        org.codehaus.groovy.ant.Groovyc r0;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        $r1 = r0.<org.codehaus.groovy.ant.Groovyc: java.lang.String memoryInitialSize>;

        return $r1;
    }

    public void setMemoryMaximumSize(java.lang.String)
    {
        java.lang.String r1;
        org.codehaus.groovy.ant.Groovyc r0;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        r1 := @parameter0: java.lang.String;

        r0.<org.codehaus.groovy.ant.Groovyc: java.lang.String memoryMaximumSize> = r1;

        return;
    }

    public java.lang.String getMemoryMaximumSize()
    {
        java.lang.String $r1;
        org.codehaus.groovy.ant.Groovyc r0;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        $r1 = r0.<org.codehaus.groovy.ant.Groovyc: java.lang.String memoryMaximumSize>;

        return $r1;
    }

    public void setEncoding(java.lang.String)
    {
        java.lang.String r1;
        org.codehaus.groovy.ant.Groovyc r0;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        r1 := @parameter0: java.lang.String;

        r0.<org.codehaus.groovy.ant.Groovyc: java.lang.String encoding> = r1;

        return;
    }

    public java.lang.String getEncoding()
    {
        java.lang.String $r1;
        org.codehaus.groovy.ant.Groovyc r0;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        $r1 = r0.<org.codehaus.groovy.ant.Groovyc: java.lang.String encoding>;

        return $r1;
    }

    public void setVerbose(boolean)
    {
        org.codehaus.groovy.ant.Groovyc r0;
        org.codehaus.groovy.control.CompilerConfiguration $r1;
        boolean z0;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.codehaus.groovy.ant.Groovyc: org.codehaus.groovy.control.CompilerConfiguration configuration>;

        virtualinvoke $r1.<org.codehaus.groovy.control.CompilerConfiguration: void setVerbose(boolean)>(z0);

        return;
    }

    public boolean getVerbose()
    {
        org.codehaus.groovy.ant.Groovyc r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        $z0 = r0.<org.codehaus.groovy.ant.Groovyc: boolean verbose>;

        return $z0;
    }

    public void setIncludeantruntime(boolean)
    {
        org.codehaus.groovy.ant.Groovyc r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        z0 := @parameter0: boolean;

        r0.<org.codehaus.groovy.ant.Groovyc: boolean includeAntRuntime> = z0;

        return;
    }

    public boolean getIncludeantruntime()
    {
        org.codehaus.groovy.ant.Groovyc r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        $z0 = r0.<org.codehaus.groovy.ant.Groovyc: boolean includeAntRuntime>;

        return $z0;
    }

    public void setIncludejavaruntime(boolean)
    {
        org.codehaus.groovy.ant.Groovyc r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        z0 := @parameter0: boolean;

        r0.<org.codehaus.groovy.ant.Groovyc: boolean includeJavaRuntime> = z0;

        return;
    }

    public boolean getIncludejavaruntime()
    {
        org.codehaus.groovy.ant.Groovyc r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        $z0 = r0.<org.codehaus.groovy.ant.Groovyc: boolean includeJavaRuntime>;

        return $z0;
    }

    public void setFork(boolean)
    {
        org.codehaus.groovy.ant.Groovyc r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        z0 := @parameter0: boolean;

        r0.<org.codehaus.groovy.ant.Groovyc: boolean fork> = z0;

        return;
    }

    public void setUpdatedProperty(java.lang.String)
    {
        java.lang.String r1;
        org.codehaus.groovy.ant.Groovyc r0;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        r1 := @parameter0: java.lang.String;

        r0.<org.codehaus.groovy.ant.Groovyc: java.lang.String updatedProperty> = r1;

        return;
    }

    public void setErrorProperty(java.lang.String)
    {
        java.lang.String r1;
        org.codehaus.groovy.ant.Groovyc r0;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        r1 := @parameter0: java.lang.String;

        r0.<org.codehaus.groovy.ant.Groovyc: java.lang.String errorProperty> = r1;

        return;
    }

    public void setIncludeDestClasses(boolean)
    {
        org.codehaus.groovy.ant.Groovyc r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        z0 := @parameter0: boolean;

        r0.<org.codehaus.groovy.ant.Groovyc: boolean includeDestClasses> = z0;

        return;
    }

    public boolean isIncludeDestClasses()
    {
        org.codehaus.groovy.ant.Groovyc r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        $z0 = r0.<org.codehaus.groovy.ant.Groovyc: boolean includeDestClasses>;

        return $z0;
    }

    public boolean getTaskSuccess()
    {
        org.codehaus.groovy.ant.Groovyc r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        $z0 = r0.<org.codehaus.groovy.ant.Groovyc: boolean taskSuccess>;

        return $z0;
    }

    public void addConfiguredJavac(org.apache.tools.ant.taskdefs.Javac)
    {
        org.apache.tools.ant.taskdefs.Javac r1;
        org.codehaus.groovy.ant.Groovyc r0;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        r1 := @parameter0: org.apache.tools.ant.taskdefs.Javac;

        r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.taskdefs.Javac javac> = r1;

        r0.<org.codehaus.groovy.ant.Groovyc: boolean jointCompilation> = 1;

        return;
    }

    public void setStacktrace(boolean)
    {
        org.codehaus.groovy.ant.Groovyc r0;
        org.codehaus.groovy.control.CompilerConfiguration $r1;
        boolean z0;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.codehaus.groovy.ant.Groovyc: org.codehaus.groovy.control.CompilerConfiguration configuration>;

        virtualinvoke $r1.<org.codehaus.groovy.control.CompilerConfiguration: void setDebug(boolean)>(z0);

        return;
    }

    public void execute() throws org.apache.tools.ant.BuildException
    {
        java.lang.Throwable $r25;
        org.apache.tools.ant.taskdefs.Javac $r1;
        org.apache.tools.ant.Location $r21;
        java.lang.String[] $r3, $r12;
        org.apache.tools.ant.types.Path $r2;
        java.lang.StringBuffer $r16, $r18, $r19, $r23;
        int $i0, i1, $i2;
        org.apache.tools.ant.Project $r6, $r8;
        java.lang.String $r4, $r7, $r9, $r17, $r20;
        boolean $z0, $z1;
        org.apache.tools.ant.BuildException $r24;
        org.apache.tools.ant.DirectoryScanner $r11;
        java.io.File $r10, $r13, $r22;
        org.codehaus.groovy.ant.Groovyc r0;
        java.io.File[] $r5;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        virtualinvoke r0.<org.codehaus.groovy.ant.Groovyc: void checkParameters()>();

        virtualinvoke r0.<org.codehaus.groovy.ant.Groovyc: void resetFileLists()>();

        $r1 = r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.taskdefs.Javac javac>;

        if $r1 == null goto label1;

        r0.<org.codehaus.groovy.ant.Groovyc: boolean jointCompilation> = 1;

     label1:
        $r2 = r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path src>;

        $r3 = virtualinvoke $r2.<org.apache.tools.ant.types.Path: java.lang.String[] list()>();

        i1 = 0;

     label2:
        $i2 = lengthof $r3;

        if i1 >= $i2 goto label6;

        $r8 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.Project getProject()>();

        $r9 = $r3[i1];

        $r10 = virtualinvoke $r8.<org.apache.tools.ant.Project: java.io.File resolveFile(java.lang.String)>($r9);

        $z1 = virtualinvoke $r10.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label3;

        $r24 = new org.apache.tools.ant.BuildException;

        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("srcdir \"");

        $r17 = virtualinvoke $r10.<java.io.File: java.lang.String getPath()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" does not exist!");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        $r21 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.Location getLocation()>();

        specialinvoke $r24.<org.apache.tools.ant.BuildException: void <init>(java.lang.String,org.apache.tools.ant.Location)>($r20, $r21);

        $r25 = (java.lang.Throwable) $r24;

        throw $r25;

     label3:
        $r11 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.DirectoryScanner getDirectoryScanner(java.io.File)>($r10);

        $r12 = virtualinvoke $r11.<org.apache.tools.ant.DirectoryScanner: java.lang.String[] getIncludedFiles()>();

        $r13 = r0.<org.codehaus.groovy.ant.Groovyc: java.io.File destDir>;

        if $r13 == null goto label4;

        $r22 = r0.<org.codehaus.groovy.ant.Groovyc: java.io.File destDir>;

        goto label5;

     label4:
        $r22 = $r10;

     label5:
        virtualinvoke r0.<org.codehaus.groovy.ant.Groovyc: void scanDir(java.io.File,java.io.File,java.lang.String[])>($r10, $r22, $r12);

        i1 = i1 + 1;

        goto label2;

     label6:
        virtualinvoke r0.<org.codehaus.groovy.ant.Groovyc: void compile()>();

        $r4 = r0.<org.codehaus.groovy.ant.Groovyc: java.lang.String updatedProperty>;

        if $r4 == null goto label7;

        $z0 = r0.<org.codehaus.groovy.ant.Groovyc: boolean taskSuccess>;

        if $z0 == 0 goto label7;

        $r5 = r0.<org.codehaus.groovy.ant.Groovyc: java.io.File[] compileList>;

        $i0 = lengthof $r5;

        if $i0 == 0 goto label7;

        $r6 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.Project getProject()>();

        $r7 = r0.<org.codehaus.groovy.ant.Groovyc: java.lang.String updatedProperty>;

        virtualinvoke $r6.<org.apache.tools.ant.Project: void setNewProperty(java.lang.String,java.lang.String)>($r7, "true");

     label7:
        return;
    }

    protected void resetFileLists()
    {
        org.codehaus.groovy.ant.Groovyc r0;
        java.io.File[] $r1;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        $r1 = newarray (java.io.File)[0];

        r0.<org.codehaus.groovy.ant.Groovyc: java.io.File[] compileList> = $r1;

        return;
    }

    protected void scanDir(java.io.File, java.io.File, java.lang.String[])
    {
        org.apache.tools.ant.util.GlobPatternMapper $r8;
        org.apache.tools.ant.Task $r10;
        java.lang.String[] r3;
        org.apache.tools.ant.util.FileNameMapper $r11, $r12;
        java.io.File r4, r5;
        org.apache.tools.ant.util.SourceFileScanner $r9;
        org.codehaus.groovy.ant.Groovyc r2;
        java.io.File[] $r6, $r7;
        boolean $z0;

        r2 := @this: org.codehaus.groovy.ant.Groovyc;

        r4 := @parameter0: java.io.File;

        r5 := @parameter1: java.io.File;

        r3 := @parameter2: java.lang.String[];

        $r8 = new org.apache.tools.ant.util.GlobPatternMapper;

        specialinvoke $r8.<org.apache.tools.ant.util.GlobPatternMapper: void <init>()>();

        virtualinvoke $r8.<org.apache.tools.ant.util.GlobPatternMapper: void setFrom(java.lang.String)>("*.groovy");

        virtualinvoke $r8.<org.apache.tools.ant.util.GlobPatternMapper: void setTo(java.lang.String)>("*.class");

        $r9 = new org.apache.tools.ant.util.SourceFileScanner;

        $r10 = (org.apache.tools.ant.Task) r2;

        specialinvoke $r9.<org.apache.tools.ant.util.SourceFileScanner: void <init>(org.apache.tools.ant.Task)>($r10);

        $r11 = (org.apache.tools.ant.util.FileNameMapper) $r8;

        $r6 = virtualinvoke $r9.<org.apache.tools.ant.util.SourceFileScanner: java.io.File[] restrictAsFiles(java.lang.String[],java.io.File,java.io.File,org.apache.tools.ant.util.FileNameMapper)>(r3, r4, r5, $r11);

        virtualinvoke r2.<org.codehaus.groovy.ant.Groovyc: void addToCompileList(java.io.File[])>($r6);

        $z0 = r2.<org.codehaus.groovy.ant.Groovyc: boolean jointCompilation>;

        if $z0 == 0 goto label1;

        virtualinvoke $r8.<org.apache.tools.ant.util.GlobPatternMapper: void setFrom(java.lang.String)>("*.java");

        virtualinvoke $r8.<org.apache.tools.ant.util.GlobPatternMapper: void setTo(java.lang.String)>("*.class");

        $r12 = (org.apache.tools.ant.util.FileNameMapper) $r8;

        $r7 = virtualinvoke $r9.<org.apache.tools.ant.util.SourceFileScanner: java.io.File[] restrictAsFiles(java.lang.String[],java.io.File,java.io.File,org.apache.tools.ant.util.FileNameMapper)>(r3, r4, r5, $r12);

        virtualinvoke r2.<org.codehaus.groovy.ant.Groovyc: void addToCompileList(java.io.File[])>($r7);

     label1:
        return;
    }

    protected void addToCompileList(java.io.File[])
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.codehaus.groovy.ant.Groovyc r1;
        java.io.File[] r0, $r2, r3, $r4, $r5, $r6;

        r1 := @this: org.codehaus.groovy.ant.Groovyc;

        r0 := @parameter0: java.io.File[];

        $i0 = lengthof r0;

        if $i0 <= 0 goto label1;

        $r2 = r1.<org.codehaus.groovy.ant.Groovyc: java.io.File[] compileList>;

        $i2 = lengthof $r2;

        $i1 = lengthof r0;

        $i3 = $i2 + $i1;

        r3 = newarray (java.io.File)[$i3];

        $r5 = r1.<org.codehaus.groovy.ant.Groovyc: java.io.File[] compileList>;

        $r4 = r1.<org.codehaus.groovy.ant.Groovyc: java.io.File[] compileList>;

        $i4 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r3, 0, $i4);

        $r6 = r1.<org.codehaus.groovy.ant.Groovyc: java.io.File[] compileList>;

        $i6 = lengthof $r6;

        $i5 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r3, $i6, $i5);

        r1.<org.codehaus.groovy.ant.Groovyc: java.io.File[] compileList> = r3;

     label1:
        return;
    }

    public java.io.File[] getFileList()
    {
        org.codehaus.groovy.ant.Groovyc r0;
        java.io.File[] $r1;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        $r1 = r0.<org.codehaus.groovy.ant.Groovyc: java.io.File[] compileList>;

        return $r1;
    }

    protected void checkParameters() throws org.apache.tools.ant.BuildException
    {
        org.apache.tools.ant.types.Path $r1, $r2;
        boolean $z0, $z1;
        org.codehaus.groovy.ant.Groovyc r0;
        java.lang.Throwable $r32, $r33, $r34, $r35;
        org.apache.tools.ant.Location $r21, $r23, $r25;
        java.lang.StringBuffer $r8, $r10, $r11, $r16, $r18, $r19, $r28, $r30;
        int $i0;
        java.lang.String $r4, $r5, $r9, $r12, $r20;
        org.apache.tools.ant.BuildException $r26, $r27, $r29, $r31;
        java.io.File $r3, $r13, $r17;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        $r1 = r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path src>;

        if $r1 != null goto label1;

        $r26 = new org.apache.tools.ant.BuildException;

        $r25 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.Location getLocation()>();

        specialinvoke $r26.<org.apache.tools.ant.BuildException: void <init>(java.lang.String,org.apache.tools.ant.Location)>("srcdir attribute must be set!", $r25);

        $r32 = (java.lang.Throwable) $r26;

        throw $r32;

     label1:
        $r2 = r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path src>;

        $i0 = virtualinvoke $r2.<org.apache.tools.ant.types.Path: int size()>();

        if $i0 != 0 goto label2;

        $r27 = new org.apache.tools.ant.BuildException;

        $r23 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.Location getLocation()>();

        specialinvoke $r27.<org.apache.tools.ant.BuildException: void <init>(java.lang.String,org.apache.tools.ant.Location)>("srcdir attribute must be set!", $r23);

        $r33 = (java.lang.Throwable) $r27;

        throw $r33;

     label2:
        $r3 = r0.<org.codehaus.groovy.ant.Groovyc: java.io.File destDir>;

        if $r3 == null goto label3;

        $r13 = r0.<org.codehaus.groovy.ant.Groovyc: java.io.File destDir>;

        $z1 = virtualinvoke $r13.<java.io.File: boolean isDirectory()>();

        if $z1 != 0 goto label3;

        $r29 = new org.apache.tools.ant.BuildException;

        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("destination directory \"");

        $r17 = r0.<org.codehaus.groovy.ant.Groovyc: java.io.File destDir>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" does not exist or is not a directory");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        $r21 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.Location getLocation()>();

        specialinvoke $r29.<org.apache.tools.ant.BuildException: void <init>(java.lang.String,org.apache.tools.ant.Location)>($r20, $r21);

        $r34 = (java.lang.Throwable) $r29;

        throw $r34;

     label3:
        $r4 = r0.<org.codehaus.groovy.ant.Groovyc: java.lang.String encoding>;

        if $r4 == null goto label4;

        $r5 = r0.<org.codehaus.groovy.ant.Groovyc: java.lang.String encoding>;

        $z0 = staticinvoke <java.nio.charset.Charset: boolean isSupported(java.lang.String)>($r5);

        if $z0 != 0 goto label4;

        $r31 = new org.apache.tools.ant.BuildException;

        $r30 = new java.lang.StringBuffer;

        specialinvoke $r30.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("encoding \"");

        $r9 = r0.<org.codehaus.groovy.ant.Groovyc: java.lang.String encoding>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" not supported.");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r31.<org.apache.tools.ant.BuildException: void <init>(java.lang.String)>($r12);

        $r35 = (java.lang.Throwable) $r31;

        throw $r35;

     label4:
        return;
    }

    protected void compile()
    {
        java.lang.StringBuffer $r3, $r5, $r6, $r8, $r10, $r28, $r29, $r30, $r31, $r32, $r46, $r47, $r61, $r63, $r64, $r66, $r70, $r72, $r76, $r78, $r88, $r90, $r107, $r108, $r112, $r113, $r114, $r115, $r118;
        java.io.IOException $r98;
        org.apache.tools.ant.BuildException $r117, $r119, $r123;
        org.apache.tools.ant.types.Path $r12, $r23, $r38, $r82, $r102, r103, $r109, $r110;
        org.codehaus.groovy.tools.ErrorReporter $r121;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, $i10, $i12, $i14;
        java.lang.Object $r49, $r57, $r58, $r62, $r65;
        java.io.File[] $r1, $r4, $r7, $r17, $r83, $r84;
        java.io.PrintWriter $r122;
        java.util.Set $r54;
        java.lang.Exception $r91;
        java.lang.Throwable $r124, $r125, $r126;
        java.util.ArrayList $r111;
        java.lang.String $r11, $r15, $r18, $r21, $r22, $r27, $r33, $r34, $r35, $r37, $r39, $r48, $r50, $r59, $r67, $r68, $r71, $r73, $r74, $r77, $r79, $r86, $r95, $r100, $r101, $r104, $r105;
        java.util.Map$Entry r106;
        java.io.StringWriter $r120;
        org.codehaus.groovy.control.CompilerConfiguration $r14, $r19, $r20;
        java.io.File $r9, $r13, $r36, $r43, $r85, $r89;
        org.apache.tools.ant.RuntimeConfigurable $r52;
        org.apache.tools.ant.taskdefs.Javac $r51;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.codehaus.groovy.ant.Groovyc r0;
        org.apache.tools.ant.taskdefs.Execute $r116;
        org.apache.tools.ant.Location $r97;
        java.lang.String[] $r56;
        org.codehaus.groovy.control.CompilationUnit $r16;
        org.apache.tools.ant.Project $r24, $r41, $r42, $r81;
        java.util.Hashtable $r53;
        java.util.Iterator $r55;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        $r1 = r0.<org.codehaus.groovy.ant.Groovyc: java.io.File[] compileList>;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label31;

        $r107 = new java.lang.StringBuffer;

        specialinvoke $r107.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r107.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Compiling ");

        $r4 = r0.<org.codehaus.groovy.ant.Groovyc: java.io.File[] compileList>;

        $i1 = lengthof $r4;

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" source file");

        $r7 = r0.<org.codehaus.groovy.ant.Groovyc: java.io.File[] compileList>;

        $i2 = lengthof $r7;

        if $i2 != 1 goto label01;

        $r100 = "";

        goto label02;

     label01:
        $r100 = "s";

     label02:
        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r100);

        $r9 = r0.<org.codehaus.groovy.ant.Groovyc: java.io.File destDir>;

        if $r9 == null goto label03;

        $r108 = new java.lang.StringBuffer;

        specialinvoke $r108.<java.lang.StringBuffer: void <init>()>();

        $r88 = virtualinvoke $r108.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" to ");

        $r89 = r0.<org.codehaus.groovy.ant.Groovyc: java.io.File destDir>;

        $r90 = virtualinvoke $r88.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r89);

        $r101 = virtualinvoke $r90.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label04;

     label03:
        $r101 = "";

     label04:
        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r101);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.codehaus.groovy.ant.Groovyc: void log(java.lang.String)>($r11);

        $z0 = r0.<org.codehaus.groovy.ant.Groovyc: boolean listFiles>;

        if $z0 == 0 goto label06;

        i8 = 0;

     label05:
        $r83 = r0.<org.codehaus.groovy.ant.Groovyc: java.io.File[] compileList>;

        $i7 = lengthof $r83;

        if i8 >= $i7 goto label06;

        $r84 = r0.<org.codehaus.groovy.ant.Groovyc: java.io.File[] compileList>;

        $r85 = $r84[i8];

        $r86 = virtualinvoke $r85.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke r0.<org.codehaus.groovy.ant.Groovyc: void log(java.lang.String)>($r86);

        i8 = i8 + 1;

        goto label05;

     label06:
        $z1 = r0.<org.codehaus.groovy.ant.Groovyc: boolean fork>;

        if $z1 == 0 goto label25;

        $r22 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("file.separator");

        $r23 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path getClasspath()>();

        if $r23 == null goto label07;

        $r102 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path getClasspath()>();

        goto label08;

     label07:
        $r109 = new org.apache.tools.ant.types.Path;

        $r102 = $r109;

        $r24 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.Project getProject()>();

        specialinvoke $r109.<org.apache.tools.ant.types.Path: void <init>(org.apache.tools.ant.Project)>($r24);

     label08:
        r103 = $r102;

        $z2 = r0.<org.codehaus.groovy.ant.Groovyc: boolean includeAntRuntime>;

        if $z2 == 0 goto label09;

        $r110 = new org.apache.tools.ant.types.Path;

        $r81 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.Project getProject()>();

        specialinvoke $r110.<org.apache.tools.ant.types.Path: void <init>(org.apache.tools.ant.Project)>($r81);

        $r82 = virtualinvoke $r110.<org.apache.tools.ant.types.Path: org.apache.tools.ant.types.Path concatSystemClasspath(java.lang.String)>("last");

        virtualinvoke $r102.<org.apache.tools.ant.types.Path: void addExisting(org.apache.tools.ant.types.Path)>($r82);

     label09:
        $z3 = r0.<org.codehaus.groovy.ant.Groovyc: boolean includeJavaRuntime>;

        if $z3 == 0 goto label10;

        virtualinvoke r103.<org.apache.tools.ant.types.Path: void addJavaRuntime()>();

     label10:
        $r111 = new java.util.ArrayList;

        specialinvoke $r111.<java.util.ArrayList: void <init>()>();

        $r112 = new java.lang.StringBuffer;

        specialinvoke $r112.<java.lang.StringBuffer: void <init>()>();

        $r27 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.home");

        $r28 = virtualinvoke $r112.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("bin");

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("java");

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r111.<java.util.ArrayList: boolean add(java.lang.Object)>($r33);

        virtualinvoke $r111.<java.util.ArrayList: boolean add(java.lang.Object)>("-classpath");

        $r34 = virtualinvoke r103.<org.apache.tools.ant.types.Path: java.lang.String toString()>();

        virtualinvoke $r111.<java.util.ArrayList: boolean add(java.lang.Object)>($r34);

        $r35 = r0.<org.codehaus.groovy.ant.Groovyc: java.lang.String memoryInitialSize>;

        if $r35 == null goto label11;

        $r74 = r0.<org.codehaus.groovy.ant.Groovyc: java.lang.String memoryInitialSize>;

        $z6 = virtualinvoke $r74.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z6 != 0 goto label11;

        $r113 = new java.lang.StringBuffer;

        specialinvoke $r113.<java.lang.StringBuffer: void <init>()>();

        $r76 = virtualinvoke $r113.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-Xms");

        $r77 = r0.<org.codehaus.groovy.ant.Groovyc: java.lang.String memoryInitialSize>;

        $r78 = virtualinvoke $r76.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r77);

        $r79 = virtualinvoke $r78.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r111.<java.util.ArrayList: boolean add(java.lang.Object)>($r79);

     label11:
        $r104 = r0.<org.codehaus.groovy.ant.Groovyc: java.lang.String memoryMaximumSize>;

        if $r104 == null goto label12;

        $r68 = r0.<org.codehaus.groovy.ant.Groovyc: java.lang.String memoryMaximumSize>;

        $z5 = virtualinvoke $r68.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z5 != 0 goto label12;

        $r114 = new java.lang.StringBuffer;

        specialinvoke $r114.<java.lang.StringBuffer: void <init>()>();

        $r70 = virtualinvoke $r114.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-Xmx");

        $r71 = r0.<org.codehaus.groovy.ant.Groovyc: java.lang.String memoryMaximumSize>;

        $r72 = virtualinvoke $r70.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r71);

        $r73 = virtualinvoke $r72.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r111.<java.util.ArrayList: boolean add(java.lang.Object)>($r73);

     label12:
        virtualinvoke $r111.<java.util.ArrayList: boolean add(java.lang.Object)>("org.codehaus.groovy.ant.Groovyc");

        virtualinvoke $r111.<java.util.ArrayList: boolean add(java.lang.Object)>("--classpath");

        $r105 = virtualinvoke r103.<org.apache.tools.ant.types.Path: java.lang.String toString()>();

        virtualinvoke $r111.<java.util.ArrayList: boolean add(java.lang.Object)>($r105);

        $z8 = r0.<org.codehaus.groovy.ant.Groovyc: boolean jointCompilation>;

        if $z8 == 0 goto label17;

        virtualinvoke $r111.<java.util.ArrayList: boolean add(java.lang.Object)>("-j");

        $r51 = r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.taskdefs.Javac javac>;

        $r52 = virtualinvoke $r51.<org.apache.tools.ant.taskdefs.Javac: org.apache.tools.ant.RuntimeConfigurable getRuntimeConfigurableWrapper()>();

        $r53 = virtualinvoke $r52.<org.apache.tools.ant.RuntimeConfigurable: java.util.Hashtable getAttributeMap()>();

        $r54 = virtualinvoke $r53.<java.util.Hashtable: java.util.Set entrySet()>();

        $r55 = interfaceinvoke $r54.<java.util.Set: java.util.Iterator iterator()>();

     label13:
        $z4 = interfaceinvoke $r55.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label17;

        $r57 = interfaceinvoke $r55.<java.util.Iterator: java.lang.Object next()>();

        r106 = (java.util.Map$Entry) $r57;

        $r58 = interfaceinvoke r106.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r59 = virtualinvoke $r58.<java.lang.Object: java.lang.String toString()>();

        $i5 = virtualinvoke $r59.<java.lang.String: int indexOf(java.lang.String)>("debug");

        $i12 = (int) -1;

        if $i5 == $i12 goto label14;

        virtualinvoke $r111.<java.util.ArrayList: boolean add(java.lang.Object)>("-Fg");

        goto label16;

     label14:
        $i6 = virtualinvoke $r59.<java.lang.String: int indexOf(java.lang.String)>("classpath");

        $i14 = (int) -1;

        if $i6 == $i14 goto label15;

        goto label16;

     label15:
        $r115 = new java.lang.StringBuffer;

        specialinvoke $r115.<java.lang.StringBuffer: void <init>()>();

        $r61 = virtualinvoke $r115.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-J");

        $r62 = interfaceinvoke r106.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r63 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r62);

        $r64 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=");

        $r65 = interfaceinvoke r106.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r66 = virtualinvoke $r64.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r65);

        $r67 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r111.<java.util.ArrayList: boolean add(java.lang.Object)>($r67);

     label16:
        goto label13;

     label17:
        $r36 = r0.<org.codehaus.groovy.ant.Groovyc: java.io.File destDir>;

        $r37 = virtualinvoke $r36.<java.io.File: java.lang.String getPath()>();

        virtualinvoke $r111.<java.util.ArrayList: boolean add(java.lang.Object)>($r37);

        $r38 = r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path src>;

        $r39 = virtualinvoke $r38.<org.apache.tools.ant.types.Path: java.lang.String toString()>();

        virtualinvoke $r111.<java.util.ArrayList: boolean add(java.lang.Object)>($r39);

        $i3 = virtualinvoke $r111.<java.util.ArrayList: int size()>();

        $r56 = newarray (java.lang.String)[$i3];

        i9 = 0;

     label18:
        $i10 = lengthof $r56;

        if i9 >= $i10 goto label19;

        $r49 = virtualinvoke $r111.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        $r50 = (java.lang.String) $r49;

        $r56[i9] = $r50;

        i9 = i9 + 1;

        goto label18;

     label19:
        $r116 = new org.apache.tools.ant.taskdefs.Execute;

        specialinvoke $r116.<org.apache.tools.ant.taskdefs.Execute: void <init>()>();

        $r41 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.Project getProject()>();

        virtualinvoke $r116.<org.apache.tools.ant.taskdefs.Execute: void setAntRun(org.apache.tools.ant.Project)>($r41);

        $r42 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.Project getProject()>();

        $r43 = virtualinvoke $r42.<org.apache.tools.ant.Project: java.io.File getBaseDir()>();

        virtualinvoke $r116.<org.apache.tools.ant.taskdefs.Execute: void setWorkingDirectory(java.io.File)>($r43);

        virtualinvoke $r116.<org.apache.tools.ant.taskdefs.Execute: void setCommandline(java.lang.String[])>($r56);

     label20:
        virtualinvoke $r116.<org.apache.tools.ant.taskdefs.Execute: int execute()>();

     label21:
        goto label23;

     label22:
        $r98 := @caughtexception;

        $r117 = new org.apache.tools.ant.BuildException;

        specialinvoke $r117.<org.apache.tools.ant.BuildException: void <init>(java.lang.String,java.lang.Throwable)>("Error running forked groovyc.", $r98);

        $r124 = (java.lang.Throwable) $r117;

        throw $r124;

     label23:
        $i4 = virtualinvoke $r116.<org.apache.tools.ant.taskdefs.Execute: int getExitValue()>();

        if $i4 == 0 goto label24;

        $r119 = new org.apache.tools.ant.BuildException;

        $r118 = new java.lang.StringBuffer;

        specialinvoke $r118.<java.lang.StringBuffer: void <init>()>();

        $r46 = virtualinvoke $r118.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Forked groovyc returned error code: ");

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i4);

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r119.<org.apache.tools.ant.BuildException: void <init>(java.lang.String)>($r48);

        $r125 = (java.lang.Throwable) $r119;

        throw $r125;

     label24:
        goto label31;

     label25:
        $r12 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path getClasspath()>();

        if $r12 == null goto label26;

        $r20 = r0.<org.codehaus.groovy.ant.Groovyc: org.codehaus.groovy.control.CompilerConfiguration configuration>;

        $r21 = virtualinvoke $r12.<org.apache.tools.ant.types.Path: java.lang.String toString()>();

        virtualinvoke $r20.<org.codehaus.groovy.control.CompilerConfiguration: void setClasspath(java.lang.String)>($r21);

     label26:
        $r14 = r0.<org.codehaus.groovy.ant.Groovyc: org.codehaus.groovy.control.CompilerConfiguration configuration>;

        $r13 = r0.<org.codehaus.groovy.ant.Groovyc: java.io.File destDir>;

        virtualinvoke $r14.<org.codehaus.groovy.control.CompilerConfiguration: void setTargetDirectory(java.io.File)>($r13);

        $r15 = r0.<org.codehaus.groovy.ant.Groovyc: java.lang.String encoding>;

        if $r15 == null goto label27;

        $r19 = r0.<org.codehaus.groovy.ant.Groovyc: org.codehaus.groovy.control.CompilerConfiguration configuration>;

        $r18 = r0.<org.codehaus.groovy.ant.Groovyc: java.lang.String encoding>;

        virtualinvoke $r19.<org.codehaus.groovy.control.CompilerConfiguration: void setSourceEncoding(java.lang.String)>($r18);

     label27:
        $r16 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovyc: org.codehaus.groovy.control.CompilationUnit makeCompileUnit()>();

        $r17 = r0.<org.codehaus.groovy.ant.Groovyc: java.io.File[] compileList>;

        virtualinvoke $r16.<org.codehaus.groovy.control.CompilationUnit: void addSources(java.io.File[])>($r17);

        virtualinvoke $r16.<org.codehaus.groovy.control.CompilationUnit: void compile()>();

     label28:
        goto label31;

     label29:
        $r91 := @caughtexception;

        $r120 = new java.io.StringWriter;

        specialinvoke $r120.<java.io.StringWriter: void <init>()>();

        $r121 = new org.codehaus.groovy.tools.ErrorReporter;

        specialinvoke $r121.<org.codehaus.groovy.tools.ErrorReporter: void <init>(java.lang.Throwable,boolean)>($r91, 0);

        $r122 = new java.io.PrintWriter;

        specialinvoke $r122.<java.io.PrintWriter: void <init>(java.io.Writer)>($r120);

        virtualinvoke $r121.<org.codehaus.groovy.tools.ErrorReporter: void write(java.io.PrintWriter)>($r122);

        $r95 = virtualinvoke $r120.<java.io.StringWriter: java.lang.String toString()>();

        $z7 = r0.<org.codehaus.groovy.ant.Groovyc: boolean failOnError>;

        if $z7 == 0 goto label30;

        $r123 = new org.apache.tools.ant.BuildException;

        $r97 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.Location getLocation()>();

        specialinvoke $r123.<org.apache.tools.ant.BuildException: void <init>(java.lang.String,java.lang.Throwable,org.apache.tools.ant.Location)>($r95, $r91, $r97);

        $r126 = (java.lang.Throwable) $r123;

        throw $r126;

     label30:
        virtualinvoke r0.<org.codehaus.groovy.ant.Groovyc: void log(java.lang.String,int)>($r95, 0);

     label31:
        return;

        catch java.io.IOException from label20 to label21 with label22;
        catch java.lang.Exception from label25 to label28 with label29;
    }

    protected org.codehaus.groovy.control.CompilationUnit makeCompileUnit()
    {
        org.apache.tools.ant.taskdefs.Javac $r1, $r8;
        java.util.HashMap $r11;
        org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit $r5;
        org.codehaus.groovy.control.CompilerConfiguration $r3, $r6, $r13;
        java.io.File $r12;
        org.codehaus.groovy.ant.Groovyc$1 $r9;
        org.codehaus.groovy.control.CompilationUnit $r2;
        org.codehaus.groovy.ant.Groovyc$2 $r10;
        org.codehaus.groovy.ant.Groovyc r0;
        groovy.lang.GroovyClassLoader $r4, $r7;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        $r1 = r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.taskdefs.Javac javac>;

        if $r1 == null goto label1;

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        $r12 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovyc: java.io.File createTempDir()>();

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("stubDir", $r12);

        $r13 = r0.<org.codehaus.groovy.ant.Groovyc: org.codehaus.groovy.control.CompilerConfiguration configuration>;

        virtualinvoke $r13.<org.codehaus.groovy.control.CompilerConfiguration: void setJointCompilationOptions(java.util.Map)>($r11);

        r0.<org.codehaus.groovy.ant.Groovyc: boolean jointCompilation> = 1;

     label1:
        $z0 = r0.<org.codehaus.groovy.ant.Groovyc: boolean jointCompilation>;

        if $z0 == 0 goto label3;

        $r5 = new org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit;

        $r6 = r0.<org.codehaus.groovy.ant.Groovyc: org.codehaus.groovy.control.CompilerConfiguration configuration>;

        $r7 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovyc: groovy.lang.GroovyClassLoader buildClassLoaderFor()>();

        specialinvoke $r5.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit: void <init>(org.codehaus.groovy.control.CompilerConfiguration,groovy.lang.GroovyClassLoader)>($r6, $r7);

        $r8 = r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.taskdefs.Javac javac>;

        if $r8 == null goto label2;

        $r9 = new org.codehaus.groovy.ant.Groovyc$1;

        specialinvoke $r9.<org.codehaus.groovy.ant.Groovyc$1: void <init>(org.codehaus.groovy.ant.Groovyc)>(r0);

        $r10 = new org.codehaus.groovy.ant.Groovyc$2;

        specialinvoke $r10.<org.codehaus.groovy.ant.Groovyc$2: void <init>(org.codehaus.groovy.ant.Groovyc,org.codehaus.groovy.tools.javac.JavaCompiler)>(r0, $r9);

        virtualinvoke $r5.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit: void setCompilerFactory(org.codehaus.groovy.tools.javac.JavaCompilerFactory)>($r10);

     label2:
        return $r5;

     label3:
        $r2 = new org.codehaus.groovy.control.CompilationUnit;

        $r3 = r0.<org.codehaus.groovy.ant.Groovyc: org.codehaus.groovy.control.CompilerConfiguration configuration>;

        $r4 = virtualinvoke r0.<org.codehaus.groovy.ant.Groovyc: groovy.lang.GroovyClassLoader buildClassLoaderFor()>();

        specialinvoke $r2.<org.codehaus.groovy.control.CompilationUnit: void <init>(org.codehaus.groovy.control.CompilerConfiguration,java.security.CodeSource,groovy.lang.GroovyClassLoader)>($r3, null, $r4);

        return $r2;
    }

    protected java.io.File createTempDir()
    {
        java.lang.Throwable $r5;
        java.io.IOException $r1;
        org.apache.tools.ant.BuildException $r4;
        org.codehaus.groovy.ant.Groovyc r3;
        java.io.File $r0;

        r3 := @this: org.codehaus.groovy.ant.Groovyc;

     label1:
        $r0 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>("groovy-generated-", "-java-source");

        virtualinvoke $r0.<java.io.File: boolean delete()>();

        virtualinvoke $r0.<java.io.File: boolean mkdirs()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r4 = new org.apache.tools.ant.BuildException;

        specialinvoke $r4.<org.apache.tools.ant.BuildException: void <init>(java.lang.Throwable)>($r1);

        $r5 = (java.lang.Throwable) $r4;

        throw $r5;

     label4:
        return $r0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected groovy.lang.GroovyClassLoader buildClassLoaderFor()
    {
        org.apache.tools.ant.AntClassLoader r5;
        java.lang.String[] $r8;
        int $i0, i1;
        java.lang.String $r6, $r7, r13, $r15;
        boolean $z0, $z1, $z2, $z3, z4;
        java.util.Iterator $r11;
        org.codehaus.groovy.control.CompilerConfiguration $r4, $r9;
        java.io.File $r14;
        java.util.List $r10;
        java.lang.Class $r1;
        java.lang.Object $r12;
        java.lang.ClassLoader $r2;
        org.codehaus.groovy.ant.Groovyc r0;
        groovy.lang.GroovyClassLoader $r3;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $z0 = $r2 instanceof org.apache.tools.ant.AntClassLoader;

        if $z0 == 0 goto label6;

        r5 = (org.apache.tools.ant.AntClassLoader) $r2;

        $r6 = virtualinvoke r5.<org.apache.tools.ant.AntClassLoader: java.lang.String getClasspath()>();

        $r7 = <java.io.File: java.lang.String pathSeparator>;

        $r8 = virtualinvoke $r6.<java.lang.String: java.lang.String[] split(java.lang.String)>($r7);

        $r9 = r0.<org.codehaus.groovy.ant.Groovyc: org.codehaus.groovy.control.CompilerConfiguration configuration>;

        $r10 = virtualinvoke $r9.<org.codehaus.groovy.control.CompilerConfiguration: java.util.List getClasspath()>();

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.lang.String) $r12;

        z4 = 0;

        i1 = 0;

     label2:
        $i0 = lengthof $r8;

        if i1 >= $i0 goto label4;

        $r15 = $r8[i1];

        $z3 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z3 == 0 goto label3;

        z4 = 1;

        goto label4;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        if z4 != 0 goto label5;

        $r14 = new java.io.File;

        specialinvoke $r14.<java.io.File: void <init>(java.lang.String)>(r13);

        $z2 = virtualinvoke $r14.<java.io.File: boolean exists()>();

        if $z2 == 0 goto label5;

        virtualinvoke r5.<org.apache.tools.ant.AntClassLoader: void addPathElement(java.lang.String)>(r13);

     label5:
        goto label1;

     label6:
        $r3 = new groovy.lang.GroovyClassLoader;

        $r4 = r0.<org.codehaus.groovy.ant.Groovyc: org.codehaus.groovy.control.CompilerConfiguration configuration>;

        specialinvoke $r3.<groovy.lang.GroovyClassLoader: void <init>(java.lang.ClassLoader,org.codehaus.groovy.control.CompilerConfiguration)>($r2, $r4);

        return $r3;
    }

    private java.lang.String[] evalCompilerFlags(org.apache.tools.ant.Project, java.lang.String[])
    {
        java.lang.Throwable $r18, $r25;
        org.apache.commons.cli.Options $r20;
        java.lang.String[] r6, $r9, $r11, $r12;
        java.util.HashMap $r24;
        org.apache.tools.ant.types.Path $r23;
        org.apache.commons.cli.CommandLine $r7;
        org.apache.tools.ant.Project r16;
        java.lang.String $r17;
        org.apache.commons.cli.PosixParser $r21;
        org.apache.commons.cli.Option $r1, $r2, $r3, $r4;
        boolean $z0, $z1, $z2;
        org.apache.tools.ant.BuildException $r22;
        org.codehaus.groovy.control.CompilerConfiguration $r14;
        java.io.File $r13;
        org.codehaus.groovy.ant.Groovyc r8;

        r8 := @this: org.codehaus.groovy.ant.Groovyc;

        r16 := @parameter0: org.apache.tools.ant.Project;

        r6 := @parameter1: java.lang.String[];

        $r20 = new org.apache.commons.cli.Options;

        specialinvoke $r20.<org.apache.commons.cli.Options: void <init>()>();

        staticinvoke <org.apache.commons.cli.OptionBuilder: org.apache.commons.cli.OptionBuilder withLongOpt(java.lang.String)>("classpath");

        staticinvoke <org.apache.commons.cli.OptionBuilder: org.apache.commons.cli.OptionBuilder hasArg()>();

        staticinvoke <org.apache.commons.cli.OptionBuilder: org.apache.commons.cli.OptionBuilder withArgName(java.lang.String)>("path");

        staticinvoke <org.apache.commons.cli.OptionBuilder: org.apache.commons.cli.OptionBuilder withDescription(java.lang.String)>("Specify where to find the class files.");

        $r1 = staticinvoke <org.apache.commons.cli.OptionBuilder: org.apache.commons.cli.Option create()>();

        virtualinvoke $r20.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>($r1);

        staticinvoke <org.apache.commons.cli.OptionBuilder: org.apache.commons.cli.OptionBuilder withArgName(java.lang.String)>("property=value");

        staticinvoke <org.apache.commons.cli.OptionBuilder: org.apache.commons.cli.OptionBuilder withValueSeparator(char)>(61);

        staticinvoke <org.apache.commons.cli.OptionBuilder: org.apache.commons.cli.OptionBuilder hasArgs(int)>(2);

        $r2 = staticinvoke <org.apache.commons.cli.OptionBuilder: org.apache.commons.cli.Option create(char)>(74);

        virtualinvoke $r20.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>($r2);

        staticinvoke <org.apache.commons.cli.OptionBuilder: org.apache.commons.cli.OptionBuilder withArgName(java.lang.String)>("flag");

        staticinvoke <org.apache.commons.cli.OptionBuilder: org.apache.commons.cli.OptionBuilder hasArg()>();

        $r3 = staticinvoke <org.apache.commons.cli.OptionBuilder: org.apache.commons.cli.Option create(char)>(70);

        virtualinvoke $r20.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>($r3);

        staticinvoke <org.apache.commons.cli.OptionBuilder: org.apache.commons.cli.OptionBuilder withLongOpt(java.lang.String)>("jointCompilation");

        $r4 = staticinvoke <org.apache.commons.cli.OptionBuilder: org.apache.commons.cli.Option create(char)>(106);

        virtualinvoke $r20.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>($r4);

        $r21 = new org.apache.commons.cli.PosixParser;

        specialinvoke $r21.<org.apache.commons.cli.PosixParser: void <init>()>();

     label1:
        $r7 = virtualinvoke $r21.<org.apache.commons.cli.PosixParser: org.apache.commons.cli.CommandLine parse(org.apache.commons.cli.Options,java.lang.String[])>($r20, r6);

     label2:
        goto label4;

     label3:
        $r18 := @caughtexception;

        $r22 = new org.apache.tools.ant.BuildException;

        specialinvoke $r22.<org.apache.tools.ant.BuildException: void <init>(java.lang.Throwable)>($r18);

        $r25 = (java.lang.Throwable) $r22;

        throw $r25;

     label4:
        $z0 = virtualinvoke $r7.<org.apache.commons.cli.CommandLine: boolean hasOption(java.lang.String)>("classpath");

        if $z0 == 0 goto label5;

        $r23 = new org.apache.tools.ant.types.Path;

        $r17 = virtualinvoke $r7.<org.apache.commons.cli.CommandLine: java.lang.String getOptionValue(java.lang.String)>("classpath");

        specialinvoke $r23.<org.apache.tools.ant.types.Path: void <init>(org.apache.tools.ant.Project,java.lang.String)>(r16, $r17);

        virtualinvoke r8.<org.codehaus.groovy.ant.Groovyc: void setClasspath(org.apache.tools.ant.types.Path)>($r23);

     label5:
        $z1 = virtualinvoke $r7.<org.apache.commons.cli.CommandLine: boolean hasOption(char)>(106);

        r8.<org.codehaus.groovy.ant.Groovyc: boolean jointCompilation> = $z1;

        $z2 = r8.<org.codehaus.groovy.ant.Groovyc: boolean jointCompilation>;

        if $z2 == 0 goto label6;

        $r24 = new java.util.HashMap;

        specialinvoke $r24.<java.util.HashMap: void <init>()>();

        $r11 = virtualinvoke $r7.<org.apache.commons.cli.CommandLine: java.lang.String[] getOptionValues(char)>(74);

        interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("namedValues", $r11);

        $r12 = virtualinvoke $r7.<org.apache.commons.cli.CommandLine: java.lang.String[] getOptionValues(char)>(70);

        interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("flags", $r12);

        $r13 = virtualinvoke r8.<org.codehaus.groovy.ant.Groovyc: java.io.File createTempDir()>();

        interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("stubDir", $r13);

        $r14 = r8.<org.codehaus.groovy.ant.Groovyc: org.codehaus.groovy.control.CompilerConfiguration configuration>;

        virtualinvoke $r14.<org.codehaus.groovy.control.CompilerConfiguration: void setJointCompilationOptions(java.util.Map)>($r24);

     label6:
        $r9 = virtualinvoke $r7.<org.apache.commons.cli.CommandLine: java.lang.String[] getArgs()>();

        return $r9;

        catch org.apache.commons.cli.ParseException from label1 to label2 with label3;
    }

    public static void main(java.lang.String[])
    {
        org.apache.tools.ant.listener.AnsiColorLogger $r11;
        java.lang.String[] r3, $r4;
        org.apache.tools.ant.DefaultLogger $r14;
        org.apache.tools.ant.types.Path $r13;
        int $i0, $i1, $i2;
        org.apache.tools.ant.Project $r10;
        java.lang.String $r7, r8, r9;
        boolean z0;
        org.apache.tools.ant.BuildListener $r15;
        java.io.File $r6;
        org.codehaus.groovy.ant.Groovyc $r12;

        r3 := @parameter0: java.lang.String[];

        $r10 = new org.apache.tools.ant.Project;

        specialinvoke $r10.<org.apache.tools.ant.Project: void <init>()>();

        $r11 = new org.apache.tools.ant.listener.AnsiColorLogger;

        specialinvoke $r11.<org.apache.tools.ant.listener.AnsiColorLogger: void <init>()>();

        $r14 = (org.apache.tools.ant.DefaultLogger) $r11;

        virtualinvoke $r14.<org.apache.tools.ant.DefaultLogger: void setMessageOutputLevel(int)>(2);

        $r15 = (org.apache.tools.ant.BuildListener) $r11;

        virtualinvoke $r10.<org.apache.tools.ant.Project: void addBuildListener(org.apache.tools.ant.BuildListener)>($r15);

        virtualinvoke $r10.<org.apache.tools.ant.Project: void init()>();

        $r12 = new org.codehaus.groovy.ant.Groovyc;

        specialinvoke $r12.<org.codehaus.groovy.ant.Groovyc: void <init>()>();

        virtualinvoke $r12.<org.codehaus.groovy.ant.Groovyc: void setProject(org.apache.tools.ant.Project)>($r10);

        $r4 = specialinvoke $r12.<org.codehaus.groovy.ant.Groovyc: java.lang.String[] evalCompilerFlags(org.apache.tools.ant.Project,java.lang.String[])>($r10, r3);

        r8 = ".";

        r9 = ".";

        z0 = 0;

        $i0 = lengthof $r4;

        if $i0 <= 0 goto label1;

        r8 = $r4[0];

     label1:
        $i1 = lengthof $r4;

        if $i1 <= 1 goto label2;

        r9 = $r4[1];

     label2:
        $i2 = lengthof $r4;

        if $i2 <= 2 goto label3;

        $r7 = $r4[2];

        z0 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

     label3:
        $r13 = new org.apache.tools.ant.types.Path;

        specialinvoke $r13.<org.apache.tools.ant.types.Path: void <init>(org.apache.tools.ant.Project,java.lang.String)>($r10, r9);

        virtualinvoke $r12.<org.codehaus.groovy.ant.Groovyc: void setSrcdir(org.apache.tools.ant.types.Path)>($r13);

        $r6 = virtualinvoke $r10.<org.apache.tools.ant.Project: java.io.File resolveFile(java.lang.String)>(r8);

        virtualinvoke $r12.<org.codehaus.groovy.ant.Groovyc: void setDestdir(java.io.File)>($r6);

        virtualinvoke $r12.<org.codehaus.groovy.ant.Groovyc: void setListfiles(boolean)>(z0);

        virtualinvoke $r12.<org.codehaus.groovy.ant.Groovyc: void execute()>();

        return;
    }

    public void setStubdir(java.io.File)
    {
        java.util.Map $r2;
        org.codehaus.groovy.ant.Groovyc r0;
        org.codehaus.groovy.control.CompilerConfiguration $r1;
        java.io.File r3;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        r3 := @parameter0: java.io.File;

        r0.<org.codehaus.groovy.ant.Groovyc: boolean jointCompilation> = 1;

        $r1 = r0.<org.codehaus.groovy.ant.Groovyc: org.codehaus.groovy.control.CompilerConfiguration configuration>;

        $r2 = virtualinvoke $r1.<org.codehaus.groovy.control.CompilerConfiguration: java.util.Map getJointCompilationOptions()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("stubDir", r3);

        return;
    }

    public java.io.File getStubdir()
    {
        java.util.Map $r2;
        java.lang.Object $r3;
        org.codehaus.groovy.ant.Groovyc r0;
        org.codehaus.groovy.control.CompilerConfiguration $r1;
        java.io.File $r4;

        r0 := @this: org.codehaus.groovy.ant.Groovyc;

        $r1 = r0.<org.codehaus.groovy.ant.Groovyc: org.codehaus.groovy.control.CompilerConfiguration configuration>;

        $r2 = virtualinvoke $r1.<org.codehaus.groovy.control.CompilerConfiguration: java.util.Map getJointCompilationOptions()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("stubDir");

        $r4 = (java.io.File) $r3;

        return $r4;
    }

    static org.apache.tools.ant.taskdefs.Javac access$000(org.codehaus.groovy.ant.Groovyc)
    {
        org.apache.tools.ant.taskdefs.Javac $r1;
        org.codehaus.groovy.ant.Groovyc r0;

        r0 := @parameter0: org.codehaus.groovy.ant.Groovyc;

        $r1 = r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.taskdefs.Javac javac>;

        return $r1;
    }

    static org.apache.tools.ant.types.Path access$100(org.codehaus.groovy.ant.Groovyc)
    {
        org.codehaus.groovy.ant.Groovyc r0;
        org.apache.tools.ant.types.Path $r1;

        r0 := @parameter0: org.codehaus.groovy.ant.Groovyc;

        $r1 = r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path compileClasspath>;

        return $r1;
    }

    static org.apache.tools.ant.types.Path access$200(org.codehaus.groovy.ant.Groovyc)
    {
        org.codehaus.groovy.ant.Groovyc r0;
        org.apache.tools.ant.types.Path $r1;

        r0 := @parameter0: org.codehaus.groovy.ant.Groovyc;

        $r1 = r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path compileSourcepath>;

        return $r1;
    }

    static java.lang.String access$300(org.codehaus.groovy.ant.Groovyc)
    {
        java.lang.String $r1;
        org.codehaus.groovy.ant.Groovyc r0;

        r0 := @parameter0: org.codehaus.groovy.ant.Groovyc;

        $r1 = r0.<org.codehaus.groovy.ant.Groovyc: java.lang.String encoding>;

        return $r1;
    }

    static java.io.File access$400(org.codehaus.groovy.ant.Groovyc)
    {
        org.codehaus.groovy.ant.Groovyc r0;
        java.io.File $r1;

        r0 := @parameter0: org.codehaus.groovy.ant.Groovyc;

        $r1 = r0.<org.codehaus.groovy.ant.Groovyc: java.io.File destDir>;

        return $r1;
    }

    static org.apache.tools.ant.types.Path access$500(org.codehaus.groovy.ant.Groovyc)
    {
        org.codehaus.groovy.ant.Groovyc r0;
        org.apache.tools.ant.types.Path $r1;

        r0 := @parameter0: org.codehaus.groovy.ant.Groovyc;

        $r1 = r0.<org.codehaus.groovy.ant.Groovyc: org.apache.tools.ant.types.Path src>;

        return $r1;
    }
}
