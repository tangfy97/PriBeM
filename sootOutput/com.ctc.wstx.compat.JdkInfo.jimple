public class com.ctc.wstx.compat.JdkInfo extends java.lang.Object
{
    static final int JDK_INFO_UNKNOWN;

    public void <init>()
    {
        com.ctc.wstx.compat.JdkInfo r0;

        r0 := @this: com.ctc.wstx.compat.JdkInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int getJDKVersion()
    {
        java.lang.Throwable $r0;
        java.io.PrintStream $r2;
        java.lang.StringBuffer $r1, $r3, $r4;
        int $i0, i1;
        java.lang.String $r5;

        i1 = 0;

     label1:
        $i0 = staticinvoke <com.ctc.wstx.compat.JdkInfo: int findVersion(java.lang.String)>("java.specification.version");

        i1 = $i0;

        if $i0 != 0 goto label2;

        staticinvoke <com.ctc.wstx.compat.JdkInfo: int findVersion(java.lang.String)>("java.vm.version");

        if $i0 != 0 goto label2;

        staticinvoke <com.ctc.wstx.compat.JdkInfo: int findVersion(java.lang.String)>("java.version");

     label2:
        return $i0;

     label3:
        $r0 := @caughtexception;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Problems trying to access System properties: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r5);

        return i1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static com.ctc.wstx.compat.JdkImpl constructImpl(int) throws java.lang.Exception
    {
        java.lang.StringBuffer $r0, $r1, $r2, $r3;
        com.ctc.wstx.compat.JdkImpl $r7;
        int i0;
        java.lang.Class $r5;
        java.lang.Object $r6;
        java.lang.String $r4;

        i0 := @parameter0: int;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("com.ctc.wstx.compat.Jdk");

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Impl");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.Object newInstance()>();

        $r7 = (com.ctc.wstx.compat.JdkImpl) $r6;

        return $r7;
    }

    private static int findVersion(java.lang.String)
    {
        int $i0, $i1, $i2, $i3, $i4, $i7, $i8, $i10, $i11, i12, i13, $i14, $i15, $i16, $i17, $i18;
        java.lang.String r0, $r1, $r2, $r3;
        char $c5, $c6, $c9;
        java.lang.NumberFormatException $r4;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r0);

        if $r1 == null goto label01;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 >= 3 goto label02;

     label01:
        return 0;

     label02:
        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(46);

        if $i1 >= 1 goto label03;

        return 0;

     label03:
        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

     label04:
        goto label06;

     label05:
        $r4 := @caughtexception;

        return 0;

     label06:
        if $i2 < 1 goto label07;

        if $i2 <= 99 goto label08;

     label07:
        return 0;

     label08:
        $i3 = $i1 + 1;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i3);

        $i4 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i4 < 1 goto label09;

        $c5 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(0);

        $i14 = (int) $c5;

        if $i14 < 48 goto label09;

        $c6 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(0);

        $i15 = (int) $c6;

        if $i15 <= 57 goto label10;

     label09:
        return 0;

     label10:
        i12 = 0;

        i13 = 0;

     label11:
        if i13 >= $i4 goto label13;

        $c9 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(i13);

        $i16 = (int) $c9;

        if $i16 < 48 goto label12;

        $i17 = (int) $c9;

        if $i17 > 57 goto label12;

        $i11 = i12 * 10;

        $i18 = (int) $c9;

        $i10 = $i18 - 48;

        i12 = $i11 + $i10;

     label12:
        i13 = i13 + 1;

        goto label11;

     label13:
        if i12 <= 9 goto label14;

        return 0;

     label14:
        $i7 = $i2 * 100;

        $i8 = $i7 + i12;

        return $i8;

        catch java.lang.NumberFormatException from label03 to label04 with label05;
    }

    public static void <clinit>()
    {
        <com.ctc.wstx.compat.JdkInfo: int JDK_INFO_UNKNOWN> = 0;

        return;
    }
}
