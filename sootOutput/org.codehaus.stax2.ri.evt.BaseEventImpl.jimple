public abstract class org.codehaus.stax2.ri.evt.BaseEventImpl extends java.lang.Object implements org.codehaus.stax2.evt.XMLEvent2
{
    protected final javax.xml.stream.Location mLocation;

    protected void <init>(javax.xml.stream.Location)
    {
        org.codehaus.stax2.ri.evt.BaseEventImpl r0;
        javax.xml.stream.Location r1;

        r0 := @this: org.codehaus.stax2.ri.evt.BaseEventImpl;

        r1 := @parameter0: javax.xml.stream.Location;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.stax2.ri.evt.BaseEventImpl: javax.xml.stream.Location mLocation> = r1;

        return;
    }

    public javax.xml.stream.events.Characters asCharacters()
    {
        org.codehaus.stax2.ri.evt.BaseEventImpl r0;
        javax.xml.stream.events.Characters $r1;

        r0 := @this: org.codehaus.stax2.ri.evt.BaseEventImpl;

        $r1 = (javax.xml.stream.events.Characters) r0;

        return $r1;
    }

    public javax.xml.stream.events.EndElement asEndElement()
    {
        javax.xml.stream.events.EndElement $r1;
        org.codehaus.stax2.ri.evt.BaseEventImpl r0;

        r0 := @this: org.codehaus.stax2.ri.evt.BaseEventImpl;

        $r1 = (javax.xml.stream.events.EndElement) r0;

        return $r1;
    }

    public javax.xml.stream.events.StartElement asStartElement()
    {
        javax.xml.stream.events.StartElement $r1;
        org.codehaus.stax2.ri.evt.BaseEventImpl r0;

        r0 := @this: org.codehaus.stax2.ri.evt.BaseEventImpl;

        $r1 = (javax.xml.stream.events.StartElement) r0;

        return $r1;
    }

    public abstract int getEventType();

    public javax.xml.stream.Location getLocation()
    {
        org.codehaus.stax2.ri.evt.BaseEventImpl r0;
        javax.xml.stream.Location $r1;

        r0 := @this: org.codehaus.stax2.ri.evt.BaseEventImpl;

        $r1 = r0.<org.codehaus.stax2.ri.evt.BaseEventImpl: javax.xml.stream.Location mLocation>;

        return $r1;
    }

    public javax.xml.namespace.QName getSchemaType()
    {
        org.codehaus.stax2.ri.evt.BaseEventImpl r0;

        r0 := @this: org.codehaus.stax2.ri.evt.BaseEventImpl;

        return null;
    }

    public boolean isAttribute()
    {
        org.codehaus.stax2.ri.evt.BaseEventImpl r0;

        r0 := @this: org.codehaus.stax2.ri.evt.BaseEventImpl;

        return 0;
    }

    public boolean isCharacters()
    {
        org.codehaus.stax2.ri.evt.BaseEventImpl r0;

        r0 := @this: org.codehaus.stax2.ri.evt.BaseEventImpl;

        return 0;
    }

    public boolean isEndDocument()
    {
        org.codehaus.stax2.ri.evt.BaseEventImpl r0;

        r0 := @this: org.codehaus.stax2.ri.evt.BaseEventImpl;

        return 0;
    }

    public boolean isEndElement()
    {
        org.codehaus.stax2.ri.evt.BaseEventImpl r0;

        r0 := @this: org.codehaus.stax2.ri.evt.BaseEventImpl;

        return 0;
    }

    public boolean isEntityReference()
    {
        org.codehaus.stax2.ri.evt.BaseEventImpl r0;

        r0 := @this: org.codehaus.stax2.ri.evt.BaseEventImpl;

        return 0;
    }

    public boolean isNamespace()
    {
        org.codehaus.stax2.ri.evt.BaseEventImpl r0;

        r0 := @this: org.codehaus.stax2.ri.evt.BaseEventImpl;

        return 0;
    }

    public boolean isProcessingInstruction()
    {
        org.codehaus.stax2.ri.evt.BaseEventImpl r0;

        r0 := @this: org.codehaus.stax2.ri.evt.BaseEventImpl;

        return 0;
    }

    public boolean isStartDocument()
    {
        org.codehaus.stax2.ri.evt.BaseEventImpl r0;

        r0 := @this: org.codehaus.stax2.ri.evt.BaseEventImpl;

        return 0;
    }

    public boolean isStartElement()
    {
        org.codehaus.stax2.ri.evt.BaseEventImpl r0;

        r0 := @this: org.codehaus.stax2.ri.evt.BaseEventImpl;

        return 0;
    }

    public abstract void writeAsEncodedUnicode(java.io.Writer) throws javax.xml.stream.XMLStreamException;

    public abstract void writeUsing(org.codehaus.stax2.XMLStreamWriter2) throws javax.xml.stream.XMLStreamException;

    public abstract boolean equals(java.lang.Object);

    public abstract int hashCode();

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r0, $r1, $r3, $r4;
        int $i0;
        java.lang.String $r5;
        org.codehaus.stax2.ri.evt.BaseEventImpl r2;

        r2 := @this: org.codehaus.stax2.ri.evt.BaseEventImpl;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[Stax Event #");

        $i0 = virtualinvoke r2.<org.codehaus.stax2.ri.evt.BaseEventImpl: int getEventType()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    protected void throwFromIOE(java.io.IOException) throws javax.xml.stream.XMLStreamException
    {
        javax.xml.stream.XMLStreamException $r0;
        java.io.IOException r1;
        java.lang.String $r2;
        org.codehaus.stax2.ri.evt.BaseEventImpl r3;

        r3 := @this: org.codehaus.stax2.ri.evt.BaseEventImpl;

        r1 := @parameter0: java.io.IOException;

        $r0 = new javax.xml.stream.XMLStreamException;

        $r2 = virtualinvoke r1.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r0.<javax.xml.stream.XMLStreamException: void <init>(java.lang.String,java.lang.Throwable)>($r2, r1);

        throw $r0;
    }

    protected static boolean stringsWithNullsEqual(java.lang.String, java.lang.String)
    {
        int $i0, $i1;
        java.lang.String r0, r1;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 != 0 goto label5;

     label1:
        if r1 == null goto label2;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

     label2:
        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;

     label5:
        if r1 == null goto label6;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label6;

        $z2 = 1;

        goto label7;

     label6:
        $z2 = 0;

     label7:
        return $z2;
    }

    protected static boolean iteratedEquals(java.util.Iterator, java.util.Iterator)
    {
        java.util.Iterator r0, r1;
        java.lang.Object $r2, $r3;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: java.util.Iterator;

        if r0 == null goto label1;

        if r1 != null goto label4;

     label1:
        if r0 != r1 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;

     label4:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label5;

        return 0;

     label5:
        $r2 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $z2 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z2 != 0 goto label6;

        return 0;

     label6:
        goto label4;

     label7:
        return 1;
    }

    protected static int addHash(java.util.Iterator, int)
    {
        java.util.Iterator r0;
        int i0, $i1, i2;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @parameter0: java.util.Iterator;

        i0 := @parameter1: int;

        i2 = i0;

        if r0 == null goto label2;

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        $i1 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        i2 = i2 ^ $i1;

        goto label1;

     label2:
        return i2;
    }
}
