public class org.apache.xalan.extensions.ExtensionHandlerGeneral extends org.apache.xalan.extensions.ExtensionHandler
{
    private java.lang.String m_scriptSrc;
    private java.lang.String m_scriptSrcURL;
    private java.util.Hashtable m_functions;
    private java.util.Hashtable m_elements;
    private java.lang.Object m_engine;
    private java.lang.reflect.Method m_engineCall;
    private static final java.lang.String BSF_MANAGER;
    private static final java.lang.String BSF_ENGINE;
    private static final java.lang.Integer NEG1INT;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$java$lang$Object;
    static java.lang.Class array$Ljava$lang$Object;

    public void <init>(java.lang.String, org.apache.xml.utils.StringVector, org.apache.xml.utils.StringVector, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws javax.xml.transform.TransformerException
    {
        byte[] r69;
        java.lang.Integer $r25, $r26;
        org.apache.xml.utils.StringVector r5, r6;
        java.lang.Exception $r42;
        java.lang.ClassLoader $r71;
        java.lang.Object[] $r14, $r24, $r48, $r53, $r61;
        javax.xml.transform.TransformerException $r80, $r83, $r85, $r86, $r87;
        java.net.URLConnection $r33;
        java.lang.String r1, r2, r7, r8, $r9, $r27, $r30, $r32, $r37, $r40, $r44, $r49, $r50, $r54, $r55, $r57, $r58, r59, $r62, $r63, $r67, $r68, $r84;
        java.lang.Class[] $r11, $r18;
        java.io.IOException $r46;
        org.apache.xalan.extensions.ObjectFactory$ConfigurationError $r45;
        java.net.URL r64, $r79, $r81, $r82;
        org.apache.xalan.extensions.ExtensionHandlerGeneral r0;
        java.lang.reflect.Method $r13, $r23;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, $i8, $i10;
        java.util.Hashtable $r38, $r41, $r75, $r76;
        java.net.MalformedURLException $r51, $r56;
        java.lang.Class $r10, $r12, $r17, $r19, $r20, $r21, $r22, $r72, $r73, $r74;
        java.lang.Object $r15, $r16, $r28, r70, $r77, $r78;
        java.io.InputStream $r34;

        r0 := @this: org.apache.xalan.extensions.ExtensionHandlerGeneral;

        r1 := @parameter0: java.lang.String;

        r5 := @parameter1: org.apache.xml.utils.StringVector;

        r6 := @parameter2: org.apache.xml.utils.StringVector;

        r2 := @parameter3: java.lang.String;

        r7 := @parameter4: java.lang.String;

        r8 := @parameter5: java.lang.String;

        r59 := @parameter6: java.lang.String;

        specialinvoke r0.<org.apache.xalan.extensions.ExtensionHandler: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        $r75 = new java.util.Hashtable;

        specialinvoke $r75.<java.util.Hashtable: void <init>()>();

        r0.<org.apache.xalan.extensions.ExtensionHandlerGeneral: java.util.Hashtable m_functions> = $r75;

        $r76 = new java.util.Hashtable;

        specialinvoke $r76.<java.util.Hashtable: void <init>()>();

        r0.<org.apache.xalan.extensions.ExtensionHandlerGeneral: java.util.Hashtable m_elements> = $r76;

        r0.<org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.reflect.Method m_engineCall> = null;

        if r5 == null goto label03;

        $r77 = new java.lang.Object;

        specialinvoke $r77.<java.lang.Object: void <init>()>();

        $i2 = virtualinvoke r5.<org.apache.xml.utils.StringVector: int size()>();

        i5 = 0;

        goto label02;

     label01:
        $r40 = virtualinvoke r5.<org.apache.xml.utils.StringVector: java.lang.String elementAt(int)>(i5);

        $r41 = r0.<org.apache.xalan.extensions.ExtensionHandlerGeneral: java.util.Hashtable m_elements>;

        virtualinvoke $r41.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r40, $r77);

        i5 = i5 + 1;

     label02:
        if i5 < $i2 goto label01;

     label03:
        if r6 == null goto label06;

        $r78 = new java.lang.Object;

        specialinvoke $r78.<java.lang.Object: void <init>()>();

        $i1 = virtualinvoke r6.<org.apache.xml.utils.StringVector: int size()>();

        i6 = 0;

        goto label05;

     label04:
        $r37 = virtualinvoke r6.<org.apache.xml.utils.StringVector: java.lang.String elementAt(int)>(i6);

        $r38 = r0.<org.apache.xalan.extensions.ExtensionHandlerGeneral: java.util.Hashtable m_functions>;

        virtualinvoke $r38.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r37, $r78);

        i6 = i6 + 1;

     label05:
        if i6 < $i1 goto label04;

     label06:
        r0.<org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.String m_scriptSrcURL> = r7;

        r0.<org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.String m_scriptSrc> = r8;

        $r9 = r0.<org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.String m_scriptSrcURL>;

        if $r9 == null goto label17;

     label07:
        $r79 = new java.net.URL;

        $r32 = r0.<org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.String m_scriptSrcURL>;

        specialinvoke $r79.<java.net.URL: void <init>(java.lang.String)>($r32);

        r64 = $r79;

     label08:
        goto label13;

     label09:
        $r56 := @caughtexception;

        $r57 = r0.<org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.String m_scriptSrcURL>;

        $i3 = virtualinvoke $r57.<java.lang.String: int indexOf(int)>(58);

        $r58 = r0.<org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.String m_scriptSrcURL>;

        $i4 = virtualinvoke $r58.<java.lang.String: int indexOf(int)>(47);

        $i8 = (int) -1;

        if $i3 == $i8 goto label10;

        $i10 = (int) -1;

        if $i4 == $i10 goto label10;

        if $i3 >= $i4 goto label10;

        $r80 = new javax.xml.transform.TransformerException;

        $r61 = newarray (java.lang.Object)[1];

        $r62 = r0.<org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.String m_scriptSrcURL>;

        $r61[0] = $r62;

        $r63 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_COULD_NOT_FIND_EXTERN_SCRIPT", $r61);

        specialinvoke $r80.<javax.xml.transform.TransformerException: void <init>(java.lang.String,java.lang.Throwable)>($r63, $r56);

        throw $r80;

     label10:
        $r82 = new java.net.URL;

        $r81 = new java.net.URL;

        $r67 = staticinvoke <org.apache.xml.utils.SystemIDResolver: java.lang.String getAbsoluteURI(java.lang.String)>(r59);

        specialinvoke $r81.<java.net.URL: void <init>(java.lang.String)>($r67);

        $r68 = r0.<org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.String m_scriptSrcURL>;

        specialinvoke $r82.<java.net.URL: void <init>(java.net.URL,java.lang.String)>($r81, $r68);

        r64 = $r82;

     label11:
        goto label13;

     label12:
        $r51 := @caughtexception;

        $r83 = new javax.xml.transform.TransformerException;

        $r53 = newarray (java.lang.Object)[1];

        $r54 = r0.<org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.String m_scriptSrcURL>;

        $r53[0] = $r54;

        $r55 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_COULD_NOT_FIND_EXTERN_SCRIPT", $r53);

        specialinvoke $r83.<javax.xml.transform.TransformerException: void <init>(java.lang.String,java.lang.Throwable)>($r55, $r51);

        throw $r83;

     label13:
        if r64 == null goto label17;

     label14:
        $r33 = virtualinvoke r64.<java.net.URL: java.net.URLConnection openConnection()>();

        $r34 = virtualinvoke $r33.<java.net.URLConnection: java.io.InputStream getInputStream()>();

        $i0 = virtualinvoke $r33.<java.net.URLConnection: int getContentLength()>();

        r69 = newarray (byte)[$i0];

        virtualinvoke $r34.<java.io.InputStream: int read(byte[])>(r69);

        $r84 = new java.lang.String;

        specialinvoke $r84.<java.lang.String: void <init>(byte[])>(r69);

        r0.<org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.String m_scriptSrc> = $r84;

     label15:
        goto label17;

     label16:
        $r46 := @caughtexception;

        $r85 = new javax.xml.transform.TransformerException;

        $r48 = newarray (java.lang.Object)[1];

        $r49 = r0.<org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.String m_scriptSrcURL>;

        $r48[0] = $r49;

        $r50 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_COULD_NOT_FIND_EXTERN_SCRIPT", $r48);

        specialinvoke $r85.<javax.xml.transform.TransformerException: void <init>(java.lang.String,java.lang.Throwable)>($r50, $r46);

        throw $r85;

     label17:
        r70 = null;

     label18:
        $r71 = staticinvoke <org.apache.xalan.extensions.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

        r70 = staticinvoke <org.apache.xalan.extensions.ObjectFactory: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader,boolean)>("com.ibm.bsf.BSFManager", $r71, 1);

     label19:
        goto label21;

     label20:
        $r45 := @caughtexception;

        virtualinvoke $r45.<java.lang.Throwable: void printStackTrace()>();

     label21:
        if r70 != null goto label22;

        $r86 = new javax.xml.transform.TransformerException;

        $r30 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_CANNOT_INIT_BSFMGR", null);

        specialinvoke $r86.<javax.xml.transform.TransformerException: void <init>(java.lang.String)>($r30);

        throw $r86;

     label22:
        $r10 = virtualinvoke r70.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = newarray (java.lang.Class)[1];

        $r12 = <org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.Class class$java$lang$String>;

        if $r12 != null goto label23;

        $r72 = staticinvoke <org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.Class class$java$lang$String> = $r72;

        goto label24;

     label23:
        $r72 = <org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.Class class$java$lang$String>;

     label24:
        $r11[0] = $r72;

        $r13 = virtualinvoke $r10.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("loadScriptingEngine", $r11);

        $r14 = newarray (java.lang.Object)[1];

        $r14[0] = r2;

        $r15 = virtualinvoke $r13.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r70, $r14);

        r0.<org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.Object m_engine> = $r15;

        $r16 = r0.<org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.Object m_engine>;

        $r17 = virtualinvoke $r16.<java.lang.Object: java.lang.Class getClass()>();

        $r18 = newarray (java.lang.Class)[4];

        $r19 = <org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.Class class$java$lang$String>;

        if $r19 != null goto label25;

        $r73 = staticinvoke <org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.Class class$java$lang$String> = $r73;

        goto label26;

     label25:
        $r73 = <org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.Class class$java$lang$String>;

     label26:
        $r18[0] = $r73;

        $r20 = <java.lang.Integer: java.lang.Class TYPE>;

        $r18[1] = $r20;

        $r21 = <java.lang.Integer: java.lang.Class TYPE>;

        $r18[2] = $r21;

        $r22 = <org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.Class class$java$lang$Object>;

        if $r22 != null goto label27;

        $r74 = staticinvoke <org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.Class class$java$lang$Object> = $r74;

        goto label28;

     label27:
        $r74 = <org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.Class class$java$lang$Object>;

     label28:
        $r18[3] = $r74;

        $r23 = virtualinvoke $r17.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("exec", $r18);

        $r28 = r0.<org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.Object m_engine>;

        $r24 = newarray (java.lang.Object)[4];

        $r24[0] = "XalanScript";

        $r25 = <org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.Integer NEG1INT>;

        $r24[1] = $r25;

        $r26 = <org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.Integer NEG1INT>;

        $r24[2] = $r26;

        $r27 = r0.<org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.String m_scriptSrc>;

        $r24[3] = $r27;

        virtualinvoke $r23.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r28, $r24);

     label29:
        goto label31;

     label30:
        $r42 := @caughtexception;

        virtualinvoke $r42.<java.lang.Throwable: void printStackTrace()>();

        $r87 = new javax.xml.transform.TransformerException;

        $r44 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_CANNOT_CMPL_EXTENSN", null);

        specialinvoke $r87.<javax.xml.transform.TransformerException: void <init>(java.lang.String,java.lang.Throwable)>($r44, $r42);

        throw $r87;

     label31:
        return;

        catch java.net.MalformedURLException from label07 to label08 with label09;
        catch java.net.MalformedURLException from label10 to label11 with label12;
        catch java.io.IOException from label14 to label15 with label16;
        catch org.apache.xalan.extensions.ObjectFactory$ConfigurationError from label18 to label19 with label20;
        catch java.lang.Exception from label22 to label29 with label30;
    }

    public boolean isFunctionAvailable(java.lang.String)
    {
        java.lang.Object $r3;
        org.apache.xalan.extensions.ExtensionHandlerGeneral r0;
        java.lang.String r1;
        java.util.Hashtable $r2;
        boolean $z0;

        r0 := @this: org.apache.xalan.extensions.ExtensionHandlerGeneral;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xalan.extensions.ExtensionHandlerGeneral: java.util.Hashtable m_functions>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isElementAvailable(java.lang.String)
    {
        java.lang.Object $r3;
        org.apache.xalan.extensions.ExtensionHandlerGeneral r0;
        java.lang.String r1;
        java.util.Hashtable $r2;
        boolean $z0;

        r0 := @this: org.apache.xalan.extensions.ExtensionHandlerGeneral;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xalan.extensions.ExtensionHandlerGeneral: java.util.Hashtable m_elements>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object callFunction(java.lang.String, java.util.Vector, java.lang.Object, org.apache.xalan.extensions.ExpressionContext) throws javax.xml.transform.TransformerException
    {
        java.util.Vector r0;
        org.apache.xalan.extensions.ExtensionHandlerGeneral r7;
        java.lang.reflect.Method $r8, $r16, $r30;
        boolean $z0, $z1, $z2;
        org.apache.xml.dtm.ref.DTMNodeList $r3;
        org.apache.xml.dtm.DTMIterator $r4;
        java.lang.Exception $r17;
        org.apache.xpath.objects.XObject $r5;
        java.lang.Object[] r1, $r20, $r32;
        javax.xml.transform.TransformerException $r19, $r22;
        org.apache.xalan.extensions.ExpressionContext r25;
        int $i0, $i1, $i2, i3, $i4;
        java.lang.String r9, $r18, $r21, $r23;
        java.lang.Class[] $r12;
        java.lang.Object $r2, $r6, $r10, r24, $r26, $r31, $r33;
        java.lang.Class $r11, $r13, $r14, $r15, $r27, $r28, $r29;

        r7 := @this: org.apache.xalan.extensions.ExtensionHandlerGeneral;

        r9 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.Vector;

        r24 := @parameter2: java.lang.Object;

        r25 := @parameter3: org.apache.xalan.extensions.ExpressionContext;

     label01:
        $i0 = virtualinvoke r0.<java.util.Vector: int size()>();

        r1 = newarray (java.lang.Object)[$i0];

        i3 = 0;

        goto label06;

     label02:
        $r2 = virtualinvoke r0.<java.util.Vector: java.lang.Object elementAt(int)>(i3);

        $i1 = i3;

        $z0 = $r2 instanceof org.apache.xpath.objects.XObject;

        if $z0 == 0 goto label03;

        $r5 = (org.apache.xpath.objects.XObject) $r2;

        $r26 = virtualinvoke $r5.<org.apache.xpath.objects.XObject: java.lang.Object object()>();

        goto label04;

     label03:
        $r26 = $r2;

     label04:
        r1[$i1] = $r26;

        $r6 = r1[i3];

        if null == $r6 goto label05;

        $z1 = $r6 instanceof org.apache.xml.dtm.DTMIterator;

        if $z1 == 0 goto label05;

        $r3 = new org.apache.xml.dtm.ref.DTMNodeList;

        $r4 = (org.apache.xml.dtm.DTMIterator) $r6;

        specialinvoke $r3.<org.apache.xml.dtm.ref.DTMNodeList: void <init>(org.apache.xml.dtm.DTMIterator)>($r4);

        r1[i3] = $r3;

     label05:
        i3 = i3 + 1;

     label06:
        $i4 = lengthof r1;

        if i3 < $i4 goto label02;

        $r8 = r7.<org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.reflect.Method m_engineCall>;

        if $r8 != null goto label13;

        $r10 = r7.<org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.Object m_engine>;

        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = newarray (java.lang.Class)[3];

        $r13 = <org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.Class class$java$lang$Object>;

        if $r13 != null goto label07;

        $r27 = staticinvoke <org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.Class class$java$lang$Object> = $r27;

        goto label08;

     label07:
        $r27 = <org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.Class class$java$lang$Object>;

     label08:
        $r12[0] = $r27;

        $r14 = <org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.Class class$java$lang$String>;

        if $r14 != null goto label09;

        $r28 = staticinvoke <org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.Class class$java$lang$String> = $r28;

        goto label10;

     label09:
        $r28 = <org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.Class class$java$lang$String>;

     label10:
        $r12[1] = $r28;

        $r15 = <org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.Class array$Ljava$lang$Object>;

        if $r15 != null goto label11;

        $r29 = staticinvoke <org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.Class class$(java.lang.String)>("[Ljava.lang.Object;");

        <org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.Class array$Ljava$lang$Object> = $r29;

        goto label12;

     label11:
        $r29 = <org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.Class array$Ljava$lang$Object>;

     label12:
        $r12[2] = $r29;

        $r16 = virtualinvoke $r11.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("call", $r12);

        r7.<org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.reflect.Method m_engineCall> = $r16;

     label13:
        $r30 = r7.<org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.reflect.Method m_engineCall>;

        $r31 = r7.<org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.Object m_engine>;

        $r32 = newarray (java.lang.Object)[3];

        $r32[0] = null;

        $r32[1] = r9;

        $r32[2] = r1;

        $r33 = virtualinvoke $r30.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r31, $r32);

        return $r33;

     label14:
        $r17 := @caughtexception;

        virtualinvoke $r17.<java.lang.Throwable: void printStackTrace()>();

        $r18 = virtualinvoke $r17.<java.lang.Throwable: java.lang.String getMessage()>();

        if null == $r18 goto label16;

        $z2 = virtualinvoke $r18.<java.lang.String: boolean startsWith(java.lang.String)>("Stopping after fatal error:");

        if $z2 == 0 goto label15;

        $r23 = "Stopping after fatal error:";

        $i2 = virtualinvoke $r23.<java.lang.String: int length()>();

        virtualinvoke $r18.<java.lang.String: java.lang.String substring(int)>($i2);

     label15:
        $r22 = new javax.xml.transform.TransformerException;

        specialinvoke $r22.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>($r17);

        throw $r22;

     label16:
        $r19 = new javax.xml.transform.TransformerException;

        $r20 = newarray (java.lang.Object)[2];

        $r20[0] = r9;

        $r20[1] = $r17;

        $r21 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_CANNOT_CREATE_EXTENSN", $r20);

        specialinvoke $r19.<javax.xml.transform.TransformerException: void <init>(java.lang.String)>($r21);

        throw $r19;

        catch java.lang.Exception from label01 to label14 with label14;
    }

    public java.lang.Object callFunction(org.apache.xpath.functions.FuncExtFunction, java.util.Vector, org.apache.xalan.extensions.ExpressionContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.functions.FuncExtFunction r1;
        java.util.Vector r3;
        org.apache.xalan.extensions.ExpressionContext r5;
        java.lang.Object $r4, $r6;
        org.apache.xalan.extensions.ExtensionHandlerGeneral r0;
        java.lang.String $r2;

        r0 := @this: org.apache.xalan.extensions.ExtensionHandlerGeneral;

        r1 := @parameter0: org.apache.xpath.functions.FuncExtFunction;

        r3 := @parameter1: java.util.Vector;

        r5 := @parameter2: org.apache.xalan.extensions.ExpressionContext;

        $r2 = virtualinvoke r1.<org.apache.xpath.functions.FuncExtFunction: java.lang.String getFunctionName()>();

        $r4 = virtualinvoke r1.<org.apache.xpath.functions.FuncExtFunction: java.lang.Object getMethodKey()>();

        $r6 = virtualinvoke r0.<org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.Object callFunction(java.lang.String,java.util.Vector,java.lang.Object,org.apache.xalan.extensions.ExpressionContext)>($r2, r3, $r4, r5);

        return $r6;
    }

    public void processElement(java.lang.String, org.apache.xalan.templates.ElemTemplateElement, org.apache.xalan.transformer.TransformerImpl, org.apache.xalan.templates.Stylesheet, java.lang.Object) throws javax.xml.transform.TransformerException, java.io.IOException
    {
        org.apache.xalan.templates.ElemTemplateElement r4;
        javax.xml.transform.TransformerException $r12;
        org.apache.xalan.extensions.ExpressionContext $r9;
        org.apache.xalan.extensions.XSLProcessorContext $r0;
        org.apache.xpath.XPathProcessorException $r11;
        org.apache.xalan.templates.Stylesheet r2;
        java.util.Vector $r3;
        org.apache.xpath.XPathContext $r8;
        java.lang.Object r7, $r10;
        org.apache.xalan.extensions.ExtensionHandlerGeneral r5;
        java.lang.String r6, $r13;
        org.apache.xalan.transformer.TransformerImpl r1;

        r5 := @this: org.apache.xalan.extensions.ExtensionHandlerGeneral;

        r6 := @parameter0: java.lang.String;

        r4 := @parameter1: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter2: org.apache.xalan.transformer.TransformerImpl;

        r2 := @parameter3: org.apache.xalan.templates.Stylesheet;

        r7 := @parameter4: java.lang.Object;

        $r0 = new org.apache.xalan.extensions.XSLProcessorContext;

        specialinvoke $r0.<org.apache.xalan.extensions.XSLProcessorContext: void <init>(org.apache.xalan.transformer.TransformerImpl,org.apache.xalan.templates.Stylesheet)>(r1, r2);

     label1:
        $r3 = new java.util.Vector;

        specialinvoke $r3.<java.util.Vector: void <init>(int)>(2);

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r0);

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>(r4);

        $r8 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        $r9 = virtualinvoke $r8.<org.apache.xpath.XPathContext: org.apache.xalan.extensions.ExpressionContext getExpressionContext()>();

        $r10 = virtualinvoke r5.<org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.Object callFunction(java.lang.String,java.util.Vector,java.lang.Object,org.apache.xalan.extensions.ExpressionContext)>(r6, $r3, r7, $r9);

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        $r12 = new javax.xml.transform.TransformerException;

        $r13 = virtualinvoke $r11.<org.apache.xpath.XPathException: java.lang.String getMessage()>();

        specialinvoke $r12.<javax.xml.transform.TransformerException: void <init>(java.lang.String,java.lang.Throwable)>($r13, $r11);

        throw $r12;

     label4:
        if $r10 == null goto label5;

        virtualinvoke $r0.<org.apache.xalan.extensions.XSLProcessorContext: void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)>(r2, $r10);

     label5:
        return;

        catch org.apache.xpath.XPathProcessorException from label1 to label2 with label3;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }

    static void <clinit>()
    {
        int $i1;
        java.lang.Integer $r1;

        <org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.String BSF_ENGINE> = "com.ibm.bsf.BSFEngine";

        <org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.String BSF_MANAGER> = "com.ibm.bsf.BSFManager";

        $r1 = new java.lang.Integer;

        $i1 = (int) -1;

        specialinvoke $r1.<java.lang.Integer: void <init>(int)>($i1);

        <org.apache.xalan.extensions.ExtensionHandlerGeneral: java.lang.Integer NEG1INT> = $r1;

        return;
    }
}
