public class org.apache.zookeeper.server.quorum.LeaderElection extends java.lang.Object implements org.apache.zookeeper.server.quorum.Election
{
    private static final org.slf4j.Logger LOG;
    protected static final java.util.Random epochGen;
    protected org.apache.zookeeper.server.quorum.QuorumPeer self;

    public void <init>(org.apache.zookeeper.server.quorum.QuorumPeer)
    {
        org.apache.zookeeper.server.quorum.QuorumPeer r1;
        org.apache.zookeeper.server.quorum.LeaderElection r0;

        r0 := @this: org.apache.zookeeper.server.quorum.LeaderElection;

        r1 := @parameter0: org.apache.zookeeper.server.quorum.QuorumPeer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self> = r1;

        return;
    }

    protected org.apache.zookeeper.server.quorum.LeaderElection$ElectionResult countVotes(java.util.HashMap, java.util.HashSet)
    {
        java.lang.Integer $r18, $r29, $r34, r62;
        byte $b9, $b12, $b15, $b18, $b24, $b35;
        org.apache.zookeeper.server.quorum.QuorumPeer$ServerState $r44;
        java.lang.Long $r41, $r48, $r50, $r52, $r53, r57, r60;
        java.util.Set $r6, $r8, $r14;
        org.apache.zookeeper.server.quorum.LeaderElection r54;
        java.lang.StringBuilder $r23, $r24, $r26, $r71;
        org.apache.zookeeper.server.quorum.Vote $r22, $r31, $r35, $r36, $r37, $r38, r56, r59, r61, $r65, $r66, $r69;
        long $l3, $l7, $l8, $l10, $l11, $l13, $l14, $l16, $l17, $l21, $l22, $l23, $l25, $l26, $l27, $l28, $l29, $l30, $l31, $l32, $l33, $l34;
        java.lang.String $r27;
        java.util.Map$Entry r55, r58, r63;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Collection $r11;
        org.apache.zookeeper.server.quorum.LeaderElection$ElectionResult $r64;
        java.util.HashMap r5, $r67, $r68, $r70;
        java.util.HashSet r47;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i19, $i20, $i36, $i37, $i38, $i39;
        org.slf4j.Logger $r13, $r20;
        java.util.Iterator $r7, $r9, $r12, $r15;
        java.lang.Object $r16, $r17, $r21, $r25, $r28, $r30, $r32, $r33, $r39, $r40, $r42, $r45, $r46, $r49, $r51;

        r54 := @this: org.apache.zookeeper.server.quorum.LeaderElection;

        r5 := @parameter0: java.util.HashMap;

        r47 := @parameter1: java.util.HashSet;

        $r64 = new org.apache.zookeeper.server.quorum.LeaderElection$ElectionResult;

        specialinvoke $r64.<org.apache.zookeeper.server.quorum.LeaderElection$ElectionResult: void <init>()>();

        $r65 = new org.apache.zookeeper.server.quorum.Vote;

        specialinvoke $r65.<org.apache.zookeeper.server.quorum.Vote: void <init>(long,long)>(-9223372036854775808L, -9223372036854775808L);

        $r64.<org.apache.zookeeper.server.quorum.LeaderElection$ElectionResult: org.apache.zookeeper.server.quorum.Vote vote> = $r65;

        $r66 = new org.apache.zookeeper.server.quorum.Vote;

        specialinvoke $r66.<org.apache.zookeeper.server.quorum.Vote: void <init>(long,long)>(-9223372036854775808L, -9223372036854775808L);

        $r64.<org.apache.zookeeper.server.quorum.LeaderElection$ElectionResult: org.apache.zookeeper.server.quorum.Vote winner> = $r66;

        $r67 = new java.util.HashMap;

        specialinvoke $r67.<java.util.HashMap: void <init>()>();

        $r68 = new java.util.HashMap;

        specialinvoke $r68.<java.util.HashMap: void <init>()>();

        $r6 = virtualinvoke r5.<java.util.HashMap: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r45 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r55 = (java.util.Map$Entry) $r45;

        $r46 = interfaceinvoke r55.<java.util.Map$Entry: java.lang.Object getValue()>();

        r56 = (org.apache.zookeeper.server.quorum.Vote) $r46;

        $l29 = virtualinvoke r56.<org.apache.zookeeper.server.quorum.Vote: long getId()>();

        $r48 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l29);

        $z4 = virtualinvoke r47.<java.util.HashSet: boolean contains(java.lang.Object)>($r48);

        if $z4 == 0 goto label03;

        $r49 = interfaceinvoke r55.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke $r67.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r49, r56);

        $l30 = virtualinvoke r56.<org.apache.zookeeper.server.quorum.Vote: long getId()>();

        $r50 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l30);

        $r51 = interfaceinvoke $r68.<java.util.Map: java.lang.Object get(java.lang.Object)>($r50);

        r57 = (java.lang.Long) $r51;

        if r57 == null goto label02;

        $l33 = virtualinvoke r57.<java.lang.Long: long longValue()>();

        $l34 = virtualinvoke r56.<org.apache.zookeeper.server.quorum.Vote: long getZxid()>();

        $b35 = $l33 cmp $l34;

        $i36 = (int) $b35;

        if $i36 >= 0 goto label03;

     label02:
        $l31 = virtualinvoke r56.<org.apache.zookeeper.server.quorum.Vote: long getId()>();

        $r52 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l31);

        $l32 = virtualinvoke r56.<org.apache.zookeeper.server.quorum.Vote: long getZxid()>();

        $r53 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l32);

        interfaceinvoke $r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r52, $r53);

     label03:
        goto label01;

     label04:
        $r8 = virtualinvoke $r67.<java.util.HashMap: java.util.Set entrySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r39 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r58 = (java.util.Map$Entry) $r39;

        $r40 = interfaceinvoke r58.<java.util.Map$Entry: java.lang.Object getValue()>();

        r59 = (org.apache.zookeeper.server.quorum.Vote) $r40;

        $l21 = virtualinvoke r59.<org.apache.zookeeper.server.quorum.Vote: long getId()>();

        $r41 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l21);

        $r42 = interfaceinvoke $r68.<java.util.Map: java.lang.Object get(java.lang.Object)>($r41);

        r60 = (java.lang.Long) $r42;

        $l22 = virtualinvoke r59.<org.apache.zookeeper.server.quorum.Vote: long getZxid()>();

        $l23 = virtualinvoke r60.<java.lang.Long: long longValue()>();

        $b24 = $l22 cmp $l23;

        $i37 = (int) $b24;

        if $i37 >= 0 goto label06;

        $r69 = new org.apache.zookeeper.server.quorum.Vote;

        $l25 = virtualinvoke r59.<org.apache.zookeeper.server.quorum.Vote: long getId()>();

        $l26 = virtualinvoke r60.<java.lang.Long: long longValue()>();

        $l27 = virtualinvoke r59.<org.apache.zookeeper.server.quorum.Vote: long getElectionEpoch()>();

        $l28 = virtualinvoke r59.<org.apache.zookeeper.server.quorum.Vote: long getPeerEpoch()>();

        $r44 = virtualinvoke r59.<org.apache.zookeeper.server.quorum.Vote: org.apache.zookeeper.server.quorum.QuorumPeer$ServerState getState()>();

        specialinvoke $r69.<org.apache.zookeeper.server.quorum.Vote: void <init>(long,long,long,long,org.apache.zookeeper.server.quorum.QuorumPeer$ServerState)>($l25, $l26, $l27, $l28, $r44);

        interfaceinvoke r58.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>($r69);

     label06:
        goto label05;

     label07:
        $i0 = virtualinvoke $r67.<java.util.HashMap: int size()>();

        $r64.<org.apache.zookeeper.server.quorum.LeaderElection$ElectionResult: int numValidVotes> = $i0;

        $r70 = new java.util.HashMap;

        specialinvoke $r70.<java.util.HashMap: void <init>()>();

        $r11 = virtualinvoke $r67.<java.util.HashMap: java.util.Collection values()>();

        $r12 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();

     label08:
        $z2 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label13;

        $r32 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r61 = (org.apache.zookeeper.server.quorum.Vote) $r32;

        $r33 = virtualinvoke $r70.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r61);

        r62 = (java.lang.Integer) $r33;

        if r62 != null goto label09;

        r62 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

     label09:
        $i5 = virtualinvoke r62.<java.lang.Integer: int intValue()>();

        $i6 = $i5 + 1;

        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        virtualinvoke $r70.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r61, $r34);

        $l7 = virtualinvoke r61.<org.apache.zookeeper.server.quorum.Vote: long getId()>();

        $r35 = $r64.<org.apache.zookeeper.server.quorum.LeaderElection$ElectionResult: org.apache.zookeeper.server.quorum.Vote vote>;

        $l8 = virtualinvoke $r35.<org.apache.zookeeper.server.quorum.Vote: long getId()>();

        $b9 = $l7 cmp $l8;

        if $b9 != 0 goto label10;

        $i19 = $r64.<org.apache.zookeeper.server.quorum.LeaderElection$ElectionResult: int count>;

        $i20 = $i19 + 1;

        $r64.<org.apache.zookeeper.server.quorum.LeaderElection$ElectionResult: int count> = $i20;

        goto label12;

     label10:
        $l10 = virtualinvoke r61.<org.apache.zookeeper.server.quorum.Vote: long getZxid()>();

        $r36 = $r64.<org.apache.zookeeper.server.quorum.LeaderElection$ElectionResult: org.apache.zookeeper.server.quorum.Vote vote>;

        $l11 = virtualinvoke $r36.<org.apache.zookeeper.server.quorum.Vote: long getZxid()>();

        $b12 = $l10 cmp $l11;

        $i38 = (int) $b12;

        if $i38 > 0 goto label11;

        $l13 = virtualinvoke r61.<org.apache.zookeeper.server.quorum.Vote: long getZxid()>();

        $r37 = $r64.<org.apache.zookeeper.server.quorum.LeaderElection$ElectionResult: org.apache.zookeeper.server.quorum.Vote vote>;

        $l14 = virtualinvoke $r37.<org.apache.zookeeper.server.quorum.Vote: long getZxid()>();

        $b15 = $l13 cmp $l14;

        if $b15 != 0 goto label12;

        $l16 = virtualinvoke r61.<org.apache.zookeeper.server.quorum.Vote: long getId()>();

        $r38 = $r64.<org.apache.zookeeper.server.quorum.LeaderElection$ElectionResult: org.apache.zookeeper.server.quorum.Vote vote>;

        $l17 = virtualinvoke $r38.<org.apache.zookeeper.server.quorum.Vote: long getId()>();

        $b18 = $l16 cmp $l17;

        $i39 = (int) $b18;

        if $i39 <= 0 goto label12;

     label11:
        $r64.<org.apache.zookeeper.server.quorum.LeaderElection$ElectionResult: org.apache.zookeeper.server.quorum.Vote vote> = r61;

        $r64.<org.apache.zookeeper.server.quorum.LeaderElection$ElectionResult: int count> = 1;

     label12:
        goto label08;

     label13:
        $r64.<org.apache.zookeeper.server.quorum.LeaderElection$ElectionResult: int winningCount> = 0;

        $r13 = <org.apache.zookeeper.server.quorum.LeaderElection: org.slf4j.Logger LOG>;

        interfaceinvoke $r13.<org.slf4j.Logger: void info(java.lang.String)>("Election tally: ");

        $r14 = virtualinvoke $r70.<java.util.HashMap: java.util.Set entrySet()>();

        $r15 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label14:
        $z3 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label16;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r63 = (java.util.Map$Entry) $r16;

        $r17 = interfaceinvoke r63.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r18 = (java.lang.Integer) $r17;

        $i1 = virtualinvoke $r18.<java.lang.Integer: int intValue()>();

        $i2 = $r64.<org.apache.zookeeper.server.quorum.LeaderElection$ElectionResult: int winningCount>;

        if $i1 <= $i2 goto label15;

        $r28 = interfaceinvoke r63.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r29 = (java.lang.Integer) $r28;

        $i4 = virtualinvoke $r29.<java.lang.Integer: int intValue()>();

        $r64.<org.apache.zookeeper.server.quorum.LeaderElection$ElectionResult: int winningCount> = $i4;

        $r30 = interfaceinvoke r63.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r31 = (org.apache.zookeeper.server.quorum.Vote) $r30;

        $r64.<org.apache.zookeeper.server.quorum.LeaderElection$ElectionResult: org.apache.zookeeper.server.quorum.Vote winner> = $r31;

     label15:
        $r20 = <org.apache.zookeeper.server.quorum.LeaderElection: org.slf4j.Logger LOG>;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r21 = interfaceinvoke r63.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r22 = (org.apache.zookeeper.server.quorum.Vote) $r21;

        $l3 = virtualinvoke $r22.<org.apache.zookeeper.server.quorum.Vote: long getId()>();

        $r23 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t-> ");

        $r25 = interfaceinvoke r63.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r20.<org.slf4j.Logger: void info(java.lang.String)>($r27);

        goto label14;

     label16:
        return $r64;
    }

    public void shutdown()
    {
        org.apache.zookeeper.server.quorum.LeaderElection r0;

        r0 := @this: org.apache.zookeeper.server.quorum.LeaderElection;

        return;
    }

    public org.apache.zookeeper.server.quorum.Vote lookForLeader() throws java.lang.InterruptedException
    {
        byte[] $r133, $r134;
        byte $b8, $b14, $b17;
        java.lang.Long $r85;
        java.util.Map $r26, $r29, $r37;
        org.apache.zookeeper.server.quorum.LeaderElection r0;
        java.lang.StringBuilder $r44, $r47, $r80, $r82, $r91, $r92, $r93, $r94, $r98, $r99, $r121, $r123, $r124, $r126, $r146, $r147, $r149, $r150, $r153;
        long $l0, $l1, $l7, $l12, $l13, $l15, $l16, $l18, $l19, $l24, $l25, $l26;
        java.net.DatagramSocket r135, $r141;
        java.io.IOException $r116;
        org.apache.zookeeper.server.quorum.LeaderElectionBean $r7, $r19, $r23, $r58, $r62, $r67, $r71, $r112, $r115, $r139;
        java.util.Random $r17;
        java.util.Collection $r30;
        org.apache.zookeeper.server.quorum.LeaderElection$ElectionResult $r32;
        java.util.HashSet $r145;
        int $i2, $i3, $i4, $i5, $i6, $i9, $i10, $i11, $i20, $i21, $i22, $i23, $i27, $i28;
        org.slf4j.Logger $r43, $r72, $r79, $r90, $r97, $r102, $r105, $r107, $r109, $r117, $r129, $r131;
        java.lang.Object $r77;
        org.apache.zookeeper.server.quorum.QuorumPeer $r2, $r4, $r5, $r9, $r10, $r11, $r18, $r20, $r22, $r25, $r28, $r35, $r36, $r39, $r40, $r45, $r49, $r52, $r53, $r54, $r57, $r59, $r61, $r63, $r65, $r66, $r68, $r70, $r74, $r75, $r76, $r103, $r111, $r114, $r132, $r136;
        org.apache.zookeeper.server.quorum.LocalPeerBean $r6;
        org.apache.zookeeper.server.quorum.QuorumPeer$ServerState $r55, $r56, $r64, $r138;
        java.lang.Exception $r101, $r104, $r106, $r108, $r130;
        org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer r137;
        java.net.DatagramPacket $r142, $r143;
        java.lang.Throwable $r110;
        org.apache.zookeeper.server.quorum.Vote $r33, $r34, $r38, $r41, $r140, $r151, $r152;
        java.net.SocketException $r128;
        java.lang.String $r48, $r83, $r95, $r100, $r122, $r127;
        java.net.SocketAddress $r87;
        java.nio.ByteBuffer $r12, $r13;
        org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType $r46, $r50, $r51;
        boolean $z0, $z1;
        java.net.InetSocketAddress $r81, $r84, r88, $r125;
        java.util.HashMap $r144;
        java.util.Iterator $r31;
        org.apache.zookeeper.jmx.MBeanRegistry $r3, $r21, $r60, $r69, $r113;
        java.lang.IllegalArgumentException $r118, $r148;

        r0 := @this: org.apache.zookeeper.server.quorum.LeaderElection;

     label01:
        $r2 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r139 = new org.apache.zookeeper.server.quorum.LeaderElectionBean;

        specialinvoke $r139.<org.apache.zookeeper.server.quorum.LeaderElectionBean: void <init>()>();

        $r2.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.LeaderElectionBean jmxLeaderElectionBean> = $r139;

        $r3 = staticinvoke <org.apache.zookeeper.jmx.MBeanRegistry: org.apache.zookeeper.jmx.MBeanRegistry getInstance()>();

        $r4 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r7 = $r4.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.LeaderElectionBean jmxLeaderElectionBean>;

        $r5 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r6 = $r5.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.LocalPeerBean jmxLocalPeerBean>;

        virtualinvoke $r3.<org.apache.zookeeper.jmx.MBeanRegistry: void register(org.apache.zookeeper.jmx.ZKMBeanInfo,org.apache.zookeeper.jmx.ZKMBeanInfo)>($r7, $r6);

     label02:
        goto label04;

     label03:
        $r130 := @caughtexception;

        $r131 = <org.apache.zookeeper.server.quorum.LeaderElection: org.slf4j.Logger LOG>;

        interfaceinvoke $r131.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Failed to register with JMX", $r130);

        $r132 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r132.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.LeaderElectionBean jmxLeaderElectionBean> = null;

     label04:
        $r10 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r140 = new org.apache.zookeeper.server.quorum.Vote;

        $r9 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $l0 = virtualinvoke $r9.<org.apache.zookeeper.server.quorum.QuorumPeer: long getId()>();

        $r11 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $l1 = virtualinvoke $r11.<org.apache.zookeeper.server.quorum.QuorumPeer: long getLastLoggedZxid()>();

        specialinvoke $r140.<org.apache.zookeeper.server.quorum.Vote: void <init>(long,long)>($l0, $l1);

        virtualinvoke $r10.<org.apache.zookeeper.server.quorum.QuorumPeer: void setCurrentVote(org.apache.zookeeper.server.quorum.Vote)>($r140);

        $r133 = newarray (byte)[4];

        $r12 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r133);

        $r134 = newarray (byte)[28];

        $r13 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r134);

        r135 = null;

     label05:
        $r141 = new java.net.DatagramSocket;

        specialinvoke $r141.<java.net.DatagramSocket: void <init>()>();

        r135 = $r141;

        virtualinvoke $r141.<java.net.DatagramSocket: void setSoTimeout(int)>(200);

     label06:
        goto label08;

     label07:
        $r128 := @caughtexception;

        $r129 = <org.apache.zookeeper.server.quorum.LeaderElection: org.slf4j.Logger LOG>;

        interfaceinvoke $r129.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Socket exception when creating socket for leader election", $r128);

        staticinvoke <java.lang.System: void exit(int)>(4);

     label08:
        $r142 = new java.net.DatagramPacket;

        $i2 = lengthof $r133;

        specialinvoke $r142.<java.net.DatagramPacket: void <init>(byte[],int)>($r133, $i2);

        $r143 = new java.net.DatagramPacket;

        $i3 = lengthof $r134;

        specialinvoke $r143.<java.net.DatagramPacket: void <init>(byte[],int)>($r134, $i3);

        $r17 = <org.apache.zookeeper.server.quorum.LeaderElection: java.util.Random epochGen>;

        $i4 = virtualinvoke $r17.<java.util.Random: int nextInt()>();

     label09:
        $r136 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $z0 = virtualinvoke $r136.<org.apache.zookeeper.server.quorum.QuorumPeer: boolean isRunning()>();

        if $z0 == 0 goto label32;

        $r144 = new java.util.HashMap;

        $r25 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r26 = virtualinvoke $r25.<org.apache.zookeeper.server.quorum.QuorumPeer: java.util.Map getVotingView()>();

        $i5 = interfaceinvoke $r26.<java.util.Map: int size()>();

        specialinvoke $r144.<java.util.HashMap: void <init>(int)>($i5);

        virtualinvoke $r12.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        virtualinvoke $r12.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i4);

        virtualinvoke $r142.<java.net.DatagramPacket: void setLength(int)>(4);

        $r145 = new java.util.HashSet;

        specialinvoke $r145.<java.util.HashSet: void <init>()>();

        $r28 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r29 = virtualinvoke $r28.<org.apache.zookeeper.server.quorum.QuorumPeer: java.util.Map getVotingView()>();

        $r30 = interfaceinvoke $r29.<java.util.Map: java.util.Collection values()>();

        $r31 = interfaceinvoke $r30.<java.util.Collection: java.util.Iterator iterator()>();

     label10:
        $z1 = interfaceinvoke $r31.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label22;

        $r77 = interfaceinvoke $r31.<java.util.Iterator: java.lang.Object next()>();

        r137 = (org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer) $r77;

        $r79 = <org.apache.zookeeper.server.quorum.LeaderElection: org.slf4j.Logger LOG>;

        $r146 = new java.lang.StringBuilder;

        specialinvoke $r146.<java.lang.StringBuilder: void <init>()>();

        $r80 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Server address: ");

        $r81 = r137.<org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer: java.net.InetSocketAddress addr>;

        $r82 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r81);

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r79.<org.slf4j.Logger: void info(java.lang.String)>($r83);

     label11:
        $r84 = r137.<org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer: java.net.InetSocketAddress addr>;

        virtualinvoke $r142.<java.net.DatagramPacket: void setSocketAddress(java.net.SocketAddress)>($r84);

     label12:
        goto label14;

     label13:
        $r118 := @caughtexception;

        $r148 = new java.lang.IllegalArgumentException;

        $r147 = new java.lang.StringBuilder;

        specialinvoke $r147.<java.lang.StringBuilder: void <init>()>();

        $r121 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to set socket address on packet, msg:");

        $r122 = virtualinvoke $r118.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        $r123 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r122);

        $r124 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with addr:");

        $r125 = r137.<org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer: java.net.InetSocketAddress addr>;

        $r126 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r125);

        $r127 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r148.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r127, $r118);

        throw $r148;

     label14:
        virtualinvoke r135.<java.net.DatagramSocket: void send(java.net.DatagramPacket)>($r142);

        $i20 = lengthof $r134;

        virtualinvoke $r143.<java.net.DatagramPacket: void setLength(int)>($i20);

        virtualinvoke r135.<java.net.DatagramSocket: void receive(java.net.DatagramPacket)>($r143);

        $i21 = virtualinvoke $r143.<java.net.DatagramPacket: int getLength()>();

        $i22 = lengthof $r134;

        if $i21 == $i22 goto label16;

        $r97 = <org.apache.zookeeper.server.quorum.LeaderElection: org.slf4j.Logger LOG>;

        $r149 = new java.lang.StringBuilder;

        specialinvoke $r149.<java.lang.StringBuilder: void <init>()>();

        $r98 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got a short response: ");

        $i27 = virtualinvoke $r143.<java.net.DatagramPacket: int getLength()>();

        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i27);

        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r97.<org.slf4j.Logger: void error(java.lang.String)>($r100);

     label15:
        goto label10;

     label16:
        virtualinvoke $r13.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        $i23 = virtualinvoke $r13.<java.nio.ByteBuffer: int getInt()>();

        if $i23 == $i4 goto label18;

        $r90 = <org.apache.zookeeper.server.quorum.LeaderElection: org.slf4j.Logger LOG>;

        $r150 = new java.lang.StringBuilder;

        specialinvoke $r150.<java.lang.StringBuilder: void <init>()>();

        $r91 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got bad xid: expected ");

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" got ");

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i23);

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r90.<org.slf4j.Logger: void error(java.lang.String)>($r95);

     label17:
        goto label10;

     label18:
        $l24 = virtualinvoke $r13.<java.nio.ByteBuffer: long getLong()>();

        $r85 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l24);

        virtualinvoke $r145.<java.util.HashSet: boolean add(java.lang.Object)>($r85);

        $r151 = new org.apache.zookeeper.server.quorum.Vote;

        $l25 = virtualinvoke $r13.<java.nio.ByteBuffer: long getLong()>();

        $l26 = virtualinvoke $r13.<java.nio.ByteBuffer: long getLong()>();

        specialinvoke $r151.<org.apache.zookeeper.server.quorum.Vote: void <init>(long,long)>($l25, $l26);

        $r87 = virtualinvoke $r143.<java.net.DatagramPacket: java.net.SocketAddress getSocketAddress()>();

        r88 = (java.net.InetSocketAddress) $r87;

        virtualinvoke $r144.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r88, $r151);

     label19:
        goto label21;

     label20:
        $r116 := @caughtexception;

        $r117 = <org.apache.zookeeper.server.quorum.LeaderElection: org.slf4j.Logger LOG>;

        interfaceinvoke $r117.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Ignoring exception while looking for leader", $r116);

     label21:
        goto label10;

     label22:
        $r32 = virtualinvoke r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.LeaderElection$ElectionResult countVotes(java.util.HashMap,java.util.HashSet)>($r144, $r145);

        $i6 = $r32.<org.apache.zookeeper.server.quorum.LeaderElection$ElectionResult: int numValidVotes>;

        if $i6 != 0 goto label23;

        $r75 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r152 = new org.apache.zookeeper.server.quorum.Vote;

        $r74 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $l18 = virtualinvoke $r74.<org.apache.zookeeper.server.quorum.QuorumPeer: long getId()>();

        $r76 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $l19 = virtualinvoke $r76.<org.apache.zookeeper.server.quorum.QuorumPeer: long getLastLoggedZxid()>();

        specialinvoke $r152.<org.apache.zookeeper.server.quorum.Vote: void <init>(long,long)>($l18, $l19);

        virtualinvoke $r75.<org.apache.zookeeper.server.quorum.QuorumPeer: void setCurrentVote(org.apache.zookeeper.server.quorum.Vote)>($r152);

        goto label31;

     label23:
        $r33 = $r32.<org.apache.zookeeper.server.quorum.LeaderElection$ElectionResult: org.apache.zookeeper.server.quorum.Vote winner>;

        $l7 = virtualinvoke $r33.<org.apache.zookeeper.server.quorum.Vote: long getId()>();

        $b8 = $l7 cmp 0L;

        $i28 = (int) $b8;

        if $i28 < 0 goto label31;

        $r35 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r34 = $r32.<org.apache.zookeeper.server.quorum.LeaderElection$ElectionResult: org.apache.zookeeper.server.quorum.Vote vote>;

        virtualinvoke $r35.<org.apache.zookeeper.server.quorum.QuorumPeer: void setCurrentVote(org.apache.zookeeper.server.quorum.Vote)>($r34);

        $i9 = $r32.<org.apache.zookeeper.server.quorum.LeaderElection$ElectionResult: int winningCount>;

        $r36 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r37 = virtualinvoke $r36.<org.apache.zookeeper.server.quorum.QuorumPeer: java.util.Map getVotingView()>();

        $i10 = interfaceinvoke $r37.<java.util.Map: int size()>();

        $i11 = $i10 / 2;

        if $i9 <= $i11 goto label31;

        $r39 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r38 = $r32.<org.apache.zookeeper.server.quorum.LeaderElection$ElectionResult: org.apache.zookeeper.server.quorum.Vote winner>;

        virtualinvoke $r39.<org.apache.zookeeper.server.quorum.QuorumPeer: void setCurrentVote(org.apache.zookeeper.server.quorum.Vote)>($r38);

        virtualinvoke r135.<java.net.DatagramSocket: void close()>();

        $r40 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r41 = virtualinvoke $r40.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.Vote getCurrentVote()>();

        $r43 = <org.apache.zookeeper.server.quorum.LeaderElection: org.slf4j.Logger LOG>;

        $r153 = new java.lang.StringBuilder;

        specialinvoke $r153.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r153.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found leader: my type is: ");

        $r45 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r46 = virtualinvoke $r45.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType getLearnerType()>();

        $r47 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r43.<org.slf4j.Logger: void info(java.lang.String)>($r48);

        $r49 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r50 = virtualinvoke $r49.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType getLearnerType()>();

        $r51 = <org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType: org.apache.zookeeper.server.quorum.QuorumPeer$LearnerType OBSERVER>;

        if $r50 != $r51 goto label26;

        $l15 = virtualinvoke $r41.<org.apache.zookeeper.server.quorum.Vote: long getId()>();

        $r63 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $l16 = virtualinvoke $r63.<org.apache.zookeeper.server.quorum.QuorumPeer: long getId()>();

        $b17 = $l15 cmp $l16;

        if $b17 != 0 goto label24;

        $r72 = <org.apache.zookeeper.server.quorum.LeaderElection: org.slf4j.Logger LOG>;

        interfaceinvoke $r72.<org.slf4j.Logger: void error(java.lang.String)>("OBSERVER elected as leader!");

        staticinvoke <java.lang.Thread: void sleep(long)>(100L);

        goto label31;

     label24:
        $r65 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r64 = <org.apache.zookeeper.server.quorum.QuorumPeer$ServerState: org.apache.zookeeper.server.quorum.QuorumPeer$ServerState OBSERVING>;

        virtualinvoke $r65.<org.apache.zookeeper.server.quorum.QuorumPeer: void setPeerState(org.apache.zookeeper.server.quorum.QuorumPeer$ServerState)>($r64);

        staticinvoke <java.lang.Thread: void sleep(long)>(100L);

        goto label36;

     label25:
        return $r41;

     label26:
        $r52 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $l12 = virtualinvoke $r41.<org.apache.zookeeper.server.quorum.Vote: long getId()>();

        $r53 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $l13 = virtualinvoke $r53.<org.apache.zookeeper.server.quorum.QuorumPeer: long getId()>();

        $b14 = $l12 cmp $l13;

        if $b14 != 0 goto label27;

        $r138 = <org.apache.zookeeper.server.quorum.QuorumPeer$ServerState: org.apache.zookeeper.server.quorum.QuorumPeer$ServerState LEADING>;

        goto label28;

     label27:
        $r138 = <org.apache.zookeeper.server.quorum.QuorumPeer$ServerState: org.apache.zookeeper.server.quorum.QuorumPeer$ServerState FOLLOWING>;

     label28:
        virtualinvoke $r52.<org.apache.zookeeper.server.quorum.QuorumPeer: void setPeerState(org.apache.zookeeper.server.quorum.QuorumPeer$ServerState)>($r138);

        $r54 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r55 = virtualinvoke $r54.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.QuorumPeer$ServerState getPeerState()>();

        $r56 = <org.apache.zookeeper.server.quorum.QuorumPeer$ServerState: org.apache.zookeeper.server.quorum.QuorumPeer$ServerState FOLLOWING>;

        if $r55 != $r56 goto label29;

        staticinvoke <java.lang.Thread: void sleep(long)>(100L);

     label29:
        goto label40;

     label30:
        return $r41;

     label31:
        staticinvoke <java.lang.Thread: void sleep(long)>(1000L);

        goto label09;

     label32:
        goto label44;

     label33:
        return null;

     label34:
        $r110 := @caughtexception;

        goto label48;

     label35:
        throw $r110;

     label36:
        $r66 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r67 = $r66.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.LeaderElectionBean jmxLeaderElectionBean>;

        if $r67 == null goto label37;

        $r69 = staticinvoke <org.apache.zookeeper.jmx.MBeanRegistry: org.apache.zookeeper.jmx.MBeanRegistry getInstance()>();

        $r70 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r71 = $r70.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.LeaderElectionBean jmxLeaderElectionBean>;

        virtualinvoke $r69.<org.apache.zookeeper.jmx.MBeanRegistry: void unregister(org.apache.zookeeper.jmx.ZKMBeanInfo)>($r71);

     label37:
        goto label39;

     label38:
        $r108 := @caughtexception;

        $r109 = <org.apache.zookeeper.server.quorum.LeaderElection: org.slf4j.Logger LOG>;

        interfaceinvoke $r109.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Failed to unregister with JMX", $r108);

     label39:
        $r68 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r68.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.LeaderElectionBean jmxLeaderElectionBean> = null;

        goto label25;

     label40:
        $r57 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r58 = $r57.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.LeaderElectionBean jmxLeaderElectionBean>;

        if $r58 == null goto label41;

        $r60 = staticinvoke <org.apache.zookeeper.jmx.MBeanRegistry: org.apache.zookeeper.jmx.MBeanRegistry getInstance()>();

        $r61 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r62 = $r61.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.LeaderElectionBean jmxLeaderElectionBean>;

        virtualinvoke $r60.<org.apache.zookeeper.jmx.MBeanRegistry: void unregister(org.apache.zookeeper.jmx.ZKMBeanInfo)>($r62);

     label41:
        goto label43;

     label42:
        $r106 := @caughtexception;

        $r107 = <org.apache.zookeeper.server.quorum.LeaderElection: org.slf4j.Logger LOG>;

        interfaceinvoke $r107.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Failed to unregister with JMX", $r106);

     label43:
        $r59 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r59.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.LeaderElectionBean jmxLeaderElectionBean> = null;

        goto label30;

     label44:
        $r18 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r19 = $r18.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.LeaderElectionBean jmxLeaderElectionBean>;

        if $r19 == null goto label45;

        $r21 = staticinvoke <org.apache.zookeeper.jmx.MBeanRegistry: org.apache.zookeeper.jmx.MBeanRegistry getInstance()>();

        $r22 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r23 = $r22.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.LeaderElectionBean jmxLeaderElectionBean>;

        virtualinvoke $r21.<org.apache.zookeeper.jmx.MBeanRegistry: void unregister(org.apache.zookeeper.jmx.ZKMBeanInfo)>($r23);

     label45:
        goto label47;

     label46:
        $r104 := @caughtexception;

        $r105 = <org.apache.zookeeper.server.quorum.LeaderElection: org.slf4j.Logger LOG>;

        interfaceinvoke $r105.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Failed to unregister with JMX", $r104);

     label47:
        $r20 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r20.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.LeaderElectionBean jmxLeaderElectionBean> = null;

        goto label33;

     label48:
        $r111 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r112 = $r111.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.LeaderElectionBean jmxLeaderElectionBean>;

        if $r112 == null goto label49;

        $r113 = staticinvoke <org.apache.zookeeper.jmx.MBeanRegistry: org.apache.zookeeper.jmx.MBeanRegistry getInstance()>();

        $r114 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r115 = $r114.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.LeaderElectionBean jmxLeaderElectionBean>;

        virtualinvoke $r113.<org.apache.zookeeper.jmx.MBeanRegistry: void unregister(org.apache.zookeeper.jmx.ZKMBeanInfo)>($r115);

     label49:
        goto label51;

     label50:
        $r101 := @caughtexception;

        $r102 = <org.apache.zookeeper.server.quorum.LeaderElection: org.slf4j.Logger LOG>;

        interfaceinvoke $r102.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Failed to unregister with JMX", $r101);

     label51:
        $r103 = r0.<org.apache.zookeeper.server.quorum.LeaderElection: org.apache.zookeeper.server.quorum.QuorumPeer self>;

        $r103.<org.apache.zookeeper.server.quorum.QuorumPeer: org.apache.zookeeper.server.quorum.LeaderElectionBean jmxLeaderElectionBean> = null;

        goto label35;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.net.SocketException from label05 to label06 with label07;
        catch java.lang.IllegalArgumentException from label11 to label12 with label13;
        catch java.io.IOException from label14 to label15 with label20;
        catch java.io.IOException from label16 to label17 with label20;
        catch java.io.IOException from label18 to label19 with label20;
        catch java.lang.Throwable from label04 to label25 with label34;
        catch java.lang.Throwable from label26 to label30 with label34;
        catch java.lang.Throwable from label31 to label33 with label34;
        catch java.lang.Throwable from label34 to label35 with label34;
        catch java.lang.Exception from label36 to label37 with label38;
        catch java.lang.Exception from label40 to label41 with label42;
        catch java.lang.Exception from label44 to label45 with label46;
        catch java.lang.Exception from label48 to label49 with label50;
    }

    static void <clinit>()
    {
        java.util.Random $r1;
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/zookeeper/server/quorum/LeaderElection;");

        <org.apache.zookeeper.server.quorum.LeaderElection: org.slf4j.Logger LOG> = $r0;

        $r1 = new java.util.Random;

        specialinvoke $r1.<java.util.Random: void <init>()>();

        <org.apache.zookeeper.server.quorum.LeaderElection: java.util.Random epochGen> = $r1;

        return;
    }
}
