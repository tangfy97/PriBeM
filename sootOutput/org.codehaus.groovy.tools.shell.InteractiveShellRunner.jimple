public class org.codehaus.groovy.tools.shell.InteractiveShellRunner extends org.codehaus.groovy.tools.shell.ShellRunner implements java.lang.Runnable
{
    private final jline.ConsoleReader reader;
    private final groovy.lang.Closure prompt;
    private final org.codehaus.groovy.tools.shell.CommandsMultiCompletor completor;
    public static java.lang.Long __timeStamp;
    public static java.lang.Long __timeStamp__239_neverHappen1239119697111;
    static java.lang.Class class$jline$ConsoleReader;
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$ShellRunner;
    static java.lang.Class class$java$io$PrintWriter;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$CommandsMultiCompletor;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$groovy$lang$Closure;

    public void <init>(org.codehaus.groovy.tools.shell.Shell, groovy.lang.Closure)
    {
        groovy.lang.Closure r8, $r11;
        org.codehaus.groovy.tools.shell.CommandsMultiCompletor $r23, $r25;
        java.lang.Object[] $r24, $r32, $r36, $r39;
        jline.ConsoleReader $r18, $r26;
        int $i0, $i1, $i2;
        java.lang.Boolean $r42;
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r5;
        java.lang.IllegalArgumentException $r28;
        java.lang.Class $r0, r1, $r2, $r4, $r9, $r12, $r15, $r19, $r21, $r27, $r30, $r31, $r33, $r34, $r35, $r37, $r38, $r44, $r45, $r46, $r47;
        java.lang.Object $r6, $r10, $r13, $r14, $r16, $r17, $r20, $r22, $r29, $r40, $r41, $r43;
        org.codehaus.groovy.tools.shell.Shell r3, $r7;

        r5 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        r3 := @parameter0: org.codehaus.groovy.tools.shell.Shell;

        r8 := @parameter1: groovy.lang.Closure;

        $r0 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r30 = staticinvoke <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.InteractiveShellRunner");

        <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$0> = $r30;

        goto label02;

     label01:
        $r30 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$0>;

     label02:
        r1 = $r30;

        $r2 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r31 = staticinvoke <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$groovy$lang$MetaClass> = $r31;

        goto label04;

     label03:
        $r31 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r32 = newarray (java.lang.Object)[1];

        $r32[0] = r3;

        $r4 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$org$codehaus$groovy$tools$shell$ShellRunner>;

        if $r4 != null goto label05;

        $r33 = staticinvoke <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.ShellRunner");

        <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$org$codehaus$groovy$tools$shell$ShellRunner> = $r33;

        goto label06;

     label05:
        $r33 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$org$codehaus$groovy$tools$shell$ShellRunner>;

     label06:
        $i0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: int selectConstructorAndTransformArguments(java.lang.Object[],int,java.lang.Class)>($r32, 1, $r33);

        $i1 = $i0 & 1;

        if $i1 == 0 goto label07;

        $r29 = $r32[0];

        $r32 = (java.lang.Object[]) $r29;

     label07:
        $i2 = $i0 >> 8;

        lookupswitch($i2)
        {
            case 0: goto label08;
            default: goto label09;
        };

     label08:
        $r6 = $r32[0];

        $r7 = (org.codehaus.groovy.tools.shell.Shell) $r6;

        specialinvoke r5.<org.codehaus.groovy.tools.shell.ShellRunner: void <init>(org.codehaus.groovy.tools.shell.Shell)>($r7);

        goto label10;

     label09:
        $r28 = new java.lang.IllegalArgumentException;

        specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("illegal constructor number");

        throw $r28;

     label10:
        $r9 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$groovy$lang$Closure>;

        if $r9 != null goto label11;

        $r34 = staticinvoke <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$(java.lang.String)>("groovy.lang.Closure");

        <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$groovy$lang$Closure> = $r34;

        goto label12;

     label11:
        $r34 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$groovy$lang$Closure>;

     label12:
        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(r8, $r34);

        $r11 = (groovy.lang.Closure) $r10;

        r5.<org.codehaus.groovy.tools.shell.InteractiveShellRunner: groovy.lang.Closure prompt> = $r11;

        $r12 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$jline$ConsoleReader>;

        if $r12 != null goto label13;

        $r27 = staticinvoke <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$(java.lang.String)>("jline.ConsoleReader");

        $r35 = $r27;

        <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$jline$ConsoleReader> = $r27;

        goto label14;

     label13:
        $r35 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$jline$ConsoleReader>;

     label14:
        $r36 = newarray (java.lang.Object)[2];

        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r3, "io");

        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r13, "inputStream");

        $r36[0] = $r14;

        $r15 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$java$io$PrintWriter>;

        if $r15 != null goto label15;

        $r37 = staticinvoke <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$(java.lang.String)>("java.io.PrintWriter");

        $r38 = $r37;

        <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$java$io$PrintWriter> = $r37;

        goto label16;

     label15:
        $r38 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$java$io$PrintWriter>;

     label16:
        $r39 = newarray (java.lang.Object)[2];

        $r40 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r3, "io");

        $r41 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r40, "outputStream");

        $r39[0] = $r41;

        $r42 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r39[1] = $r42;

        $r43 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r38, $r39);

        $r36[1] = $r43;

        $r16 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r35, $r36);

        $r44 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$jline$ConsoleReader>;

        if $r44 != null goto label17;

        $r45 = staticinvoke <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$(java.lang.String)>("jline.ConsoleReader");

        <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$jline$ConsoleReader> = $r45;

        goto label18;

     label17:
        $r45 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$jline$ConsoleReader>;

     label18:
        $r17 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r16, $r45);

        $r18 = (jline.ConsoleReader) $r17;

        r5.<org.codehaus.groovy.tools.shell.InteractiveShellRunner: jline.ConsoleReader reader> = $r18;

        $r19 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandsMultiCompletor>;

        if $r19 != null goto label19;

        $r46 = staticinvoke <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandsMultiCompletor");

        <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandsMultiCompletor> = $r46;

        goto label20;

     label19:
        $r46 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandsMultiCompletor>;

     label20:
        $r20 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r46);

        $r21 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandsMultiCompletor>;

        if $r21 != null goto label21;

        $r47 = staticinvoke <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandsMultiCompletor");

        <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandsMultiCompletor> = $r47;

        goto label22;

     label21:
        $r47 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandsMultiCompletor>;

     label22:
        $r22 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r20, $r47);

        $r23 = (org.codehaus.groovy.tools.shell.CommandsMultiCompletor) $r22;

        r5.<org.codehaus.groovy.tools.shell.InteractiveShellRunner: org.codehaus.groovy.tools.shell.CommandsMultiCompletor completor> = $r23;

        $r26 = r5.<org.codehaus.groovy.tools.shell.InteractiveShellRunner: jline.ConsoleReader reader>;

        $r24 = newarray (java.lang.Object)[1];

        $r25 = r5.<org.codehaus.groovy.tools.shell.InteractiveShellRunner: org.codehaus.groovy.tools.shell.CommandsMultiCompletor completor>;

        $r24[0] = $r25;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r26, "addCompletor", $r24);

        return;
    }

    public void run()
    {
        java.lang.Object[] $r10;
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r3;
        org.codehaus.groovy.tools.shell.CommandsMultiCompletor $r7, $r11;
        boolean $z0;
        java.util.Iterator $r15, $r16;
        java.lang.Class $r0, r1, $r2, $r8, $r12, $r13, $r14;
        java.lang.Object $r4, $r5, $r6, $r9;

        r3 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        $r0 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r12 = staticinvoke <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.InteractiveShellRunner");

        <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$0> = $r12;

        goto label2;

     label1:
        $r12 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$0>;

     label2:
        r1 = $r12;

        $r2 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r13 = staticinvoke <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$groovy$lang$MetaClass> = $r13;

        goto label4;

     label3:
        $r13 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r3, "shell");

        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r4, "registry");

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r5, "iterator");

     label5:
        $r15 = (java.util.Iterator) $r6;

        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r16 = (java.util.Iterator) $r6;

        $r9 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        $r11 = r3.<org.codehaus.groovy.tools.shell.InteractiveShellRunner: org.codehaus.groovy.tools.shell.CommandsMultiCompletor completor>;

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = $r9;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r11, "leftShift", $r10);

        goto label5;

     label6:
        $r7 = r3.<org.codehaus.groovy.tools.shell.InteractiveShellRunner: org.codehaus.groovy.tools.shell.CommandsMultiCompletor completor>;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r7, "refresh");

        $r8 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$org$codehaus$groovy$tools$shell$ShellRunner>;

        if $r8 != null goto label7;

        $r14 = staticinvoke <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.ShellRunner");

        <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$org$codehaus$groovy$tools$shell$ShellRunner> = $r14;

        goto label8;

     label7:
        $r14 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$org$codehaus$groovy$tools$shell$ShellRunner>;

     label8:
        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnSuper0(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>($r14, r3, "run");

        return;
    }

    public void setHistory(jline.History)
    {
        jline.ConsoleReader $r5;
        jline.History r3;
        java.lang.Class $r0, r1, $r2, $r6, $r7;
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r4;

        r4 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        r3 := @parameter0: jline.History;

        $r0 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.InteractiveShellRunner");

        <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$0>;

     label2:
        r1 = $r6;

        $r2 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r5 = r4.<org.codehaus.groovy.tools.shell.InteractiveShellRunner: jline.ConsoleReader reader>;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setProperty(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>(r3, r1, $r5, "history");

        return;
    }

    public void setHistoryFile(java.io.File)
    {
        java.lang.Object[] $r8, $r10, $r15, $r17;
        java.lang.String[] $r11, $r18;
        jline.ConsoleReader $r12;
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r6;
        boolean $z0, $z1;
        org.codehaus.groovy.runtime.GStringImpl $r9, $r16;
        java.io.File r3;
        java.lang.Class $r0, r1, $r2, $r19, $r20;
        java.lang.Object $r4, $r5, $r7, $r13, $r14;

        r6 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        r3 := @parameter0: java.io.File;

        $r0 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r19 = staticinvoke <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.InteractiveShellRunner");

        <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$0> = $r19;

        goto label2;

     label1:
        $r19 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$0>;

     label2:
        r1 = $r19;

        $r2 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r20 = staticinvoke <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$groovy$lang$MetaClass> = $r20;

        goto label4;

     label3:
        $r20 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r3, "parentFile");

        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r4, "exists");

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r5);

        if $z0 != 0 goto label5;

        $z1 = 1;

        goto label6;

     label5:
        $z1 = 0;

     label6:
        if $z1 == 0 goto label7;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r4, "mkdirs");

        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r6, "log");

        $r15 = newarray (java.lang.Object)[1];

        $r16 = new org.codehaus.groovy.runtime.GStringImpl;

        $r17 = newarray (java.lang.Object)[1];

        $r17[0] = $r4;

        $r18 = newarray (java.lang.String)[2];

        $r18[0] = "Created base directory for history file: ";

        $r18[1] = "";

        specialinvoke $r16.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r17, $r18);

        $r15[0] = $r16;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r14, "debug", $r15);

        goto label7;

     label7:
        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r6, "log");

        $r8 = newarray (java.lang.Object)[1];

        $r9 = new org.codehaus.groovy.runtime.GStringImpl;

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r3;

        $r11 = newarray (java.lang.String)[2];

        $r11[0] = "Using history file: ";

        $r11[1] = "";

        specialinvoke $r9.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r10, $r11);

        $r8[0] = $r9;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r7, "debug", $r8);

        $r12 = r6.<org.codehaus.groovy.tools.shell.InteractiveShellRunner: jline.ConsoleReader reader>;

        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r12, "history");

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setProperty(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>(r3, r1, $r13, "historyFile");

        return;
    }

    protected java.lang.String readLine()
    {
        java.lang.Throwable $r12;
        java.lang.Object[] $r4, $r15;
        groovy.lang.Closure $r5;
        jline.ConsoleReader $r6;
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r3;
        java.lang.String $r11, $r18;
        java.lang.StringIndexOutOfBoundsException $r13;
        java.lang.Class $r0, r1, $r2, $r9, $r16, $r19, $r20, $r21, $r22;
        java.lang.Object $r7, $r8, $r10, $r14, $r17;

        r3 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        $r0 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r19 = staticinvoke <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.InteractiveShellRunner");

        <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$0> = $r19;

        goto label02;

     label01:
        $r19 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$0>;

     label02:
        r1 = $r19;

        $r2 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r20 = staticinvoke <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$groovy$lang$MetaClass> = $r20;

        goto label04;

     label03:
        $r20 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r6 = r3.<org.codehaus.groovy.tools.shell.InteractiveShellRunner: jline.ConsoleReader reader>;

        $r4 = newarray (java.lang.Object)[1];

        $r5 = r3.<org.codehaus.groovy.tools.shell.InteractiveShellRunner: groovy.lang.Closure prompt>;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r5, "call");

        $r4[0] = $r7;

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r6, "readLine", $r4);

        $r9 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$java$lang$String>;

        if $r9 != null goto label05;

        $r21 = staticinvoke <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$java$lang$String> = $r21;

        goto label06;

     label05:
        $r21 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$java$lang$String>;

     label06:
        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r8, $r21);

        $r11 = (java.lang.String) $r10;

        return $r11;

     label07:
        $r13 := @caughtexception;

        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r3, "log");

        $r15 = newarray (java.lang.Object)[2];

        $r15[0] = "HACK: Try and work around GROOVY-2152 for now";

        $r15[1] = $r13;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r14, "debug", $r15);

        $r16 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$java$lang$String>;

        if $r16 != null goto label08;

        $r22 = staticinvoke <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$java$lang$String> = $r22;

        goto label09;

     label08:
        $r22 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$java$lang$String>;

     label09:
        $r17 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>("", $r22);

        $r18 = (java.lang.String) $r17;

        return $r18;

     label10:
        $r12 := @caughtexception;

        throw $r12;

        catch java.lang.StringIndexOutOfBoundsException from label04 to label07 with label07;
        catch java.lang.Throwable from label04 to label10 with label10;
    }

    static void <clinit>()
    {
        java.lang.Long $r2, $r3, $r4, $r5;
        java.lang.Class $r0, $r1, $r6, $r7;

        $r0 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.InteractiveShellRunner");

        <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r2 = new java.lang.Long;

        specialinvoke $r2.<java.lang.Long: void <init>(long)>(1239119697111L);

        $r3 = (java.lang.Long) $r2;

        <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Long __timeStamp> = $r3;

        $r4 = new java.lang.Long;

        specialinvoke $r4.<java.lang.Long: void <init>(long)>(0L);

        $r5 = (java.lang.Long) $r4;

        <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Long __timeStamp__239_neverHappen1239119697111> = $r5;

        return;
    }

    public final jline.ConsoleReader getReader()
    {
        jline.ConsoleReader $r4, $r6;
        java.lang.Class $r0, $r1, $r3, $r7, $r8, $r9;
        java.lang.Object $r5;
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r2;

        r2 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        $r0 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.InteractiveShellRunner");

        <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = r2.<org.codehaus.groovy.tools.shell.InteractiveShellRunner: jline.ConsoleReader reader>;

        $r3 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$jline$ConsoleReader>;

        if $r3 != null goto label5;

        $r9 = staticinvoke <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$(java.lang.String)>("jline.ConsoleReader");

        <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$jline$ConsoleReader> = $r9;

        goto label6;

     label5:
        $r9 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$jline$ConsoleReader>;

     label6:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r4, $r9);

        $r6 = (jline.ConsoleReader) $r5;

        return $r6;
    }

    public final groovy.lang.Closure getPrompt()
    {
        groovy.lang.Closure $r4, $r6;
        java.lang.Class $r0, $r1, $r3, $r7, $r8, $r9;
        java.lang.Object $r5;
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r2;

        r2 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        $r0 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.InteractiveShellRunner");

        <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = r2.<org.codehaus.groovy.tools.shell.InteractiveShellRunner: groovy.lang.Closure prompt>;

        $r3 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$groovy$lang$Closure>;

        if $r3 != null goto label5;

        $r9 = staticinvoke <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$(java.lang.String)>("groovy.lang.Closure");

        <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$groovy$lang$Closure> = $r9;

        goto label6;

     label5:
        $r9 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$groovy$lang$Closure>;

     label6:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r4, $r9);

        $r6 = (groovy.lang.Closure) $r5;

        return $r6;
    }

    public final org.codehaus.groovy.tools.shell.CommandsMultiCompletor getCompletor()
    {
        java.lang.Class $r0, $r1, $r3, $r7, $r8, $r9;
        java.lang.Object $r5;
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r2;
        org.codehaus.groovy.tools.shell.CommandsMultiCompletor $r4, $r6;

        r2 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        $r0 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.InteractiveShellRunner");

        <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = r2.<org.codehaus.groovy.tools.shell.InteractiveShellRunner: org.codehaus.groovy.tools.shell.CommandsMultiCompletor completor>;

        $r3 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandsMultiCompletor>;

        if $r3 != null goto label5;

        $r9 = staticinvoke <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandsMultiCompletor");

        <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandsMultiCompletor> = $r9;

        goto label6;

     label5:
        $r9 = <org.codehaus.groovy.tools.shell.InteractiveShellRunner: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandsMultiCompletor>;

     label6:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r4, $r9);

        $r6 = (org.codehaus.groovy.tools.shell.CommandsMultiCompletor) $r5;

        return $r6;
    }

    java.lang.Object super$2$getProperty(java.lang.String)
    {
        java.lang.Object $r2;
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.codehaus.groovy.tools.shell.ShellRunner: java.lang.Object getProperty(java.lang.String)>(r1);

        return $r2;
    }

    java.lang.String super$1$toString()
    {
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    void super$2$setProperty(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2;
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.ShellRunner: void setProperty(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    void super$1$notify()
    {
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r0;

        r0 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        specialinvoke r0.<java.lang.Object: void notify()>();

        return;
    }

    void super$2$setRunning(boolean)
    {
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.ShellRunner: void setRunning(boolean)>(z0);

        return;
    }

    void super$1$notifyAll()
    {
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r0;

        r0 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        specialinvoke r0.<java.lang.Object: void notifyAll()>();

        return;
    }

    boolean super$2$getRunning()
    {
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        $z0 = specialinvoke r0.<org.codehaus.groovy.tools.shell.ShellRunner: boolean getRunning()>();

        return $z0;
    }

    void super$2$run()
    {
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r0;

        r0 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.ShellRunner: void run()>();

        return;
    }

    java.lang.Object super$1$clone()
    {
        java.lang.Object $r1;
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r0;

        r0 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }

    void super$2$setErrorHandler(groovy.lang.Closure)
    {
        groovy.lang.Closure r1;
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r0;

        r0 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        r1 := @parameter0: groovy.lang.Closure;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.ShellRunner: void setErrorHandler(groovy.lang.Closure)>(r1);

        return;
    }

    void super$1$wait()
    {
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r0;

        r0 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        specialinvoke r0.<java.lang.Object: void wait()>();

        return;
    }

    void super$2$setBreakOnNull(boolean)
    {
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.ShellRunner: void setBreakOnNull(boolean)>(z0);

        return;
    }

    boolean super$2$getBreakOnNull()
    {
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        $z0 = specialinvoke r0.<org.codehaus.groovy.tools.shell.ShellRunner: boolean getBreakOnNull()>();

        return $z0;
    }

    groovy.lang.MetaClass super$2$getMetaClass()
    {
        groovy.lang.MetaClass $r1;
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r0;

        r0 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.ShellRunner: groovy.lang.MetaClass getMetaClass()>();

        return $r1;
    }

    void super$1$wait(long, int)
    {
        int i1;
        long l0;
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r0;

        r0 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void wait(long,int)>(l0, i1);

        return;
    }

    void super$2$setMetaClass(groovy.lang.MetaClass)
    {
        groovy.lang.MetaClass r1;
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r0;

        r0 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        r1 := @parameter0: groovy.lang.MetaClass;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.ShellRunner: void setMetaClass(groovy.lang.MetaClass)>(r1);

        return;
    }

    org.codehaus.groovy.tools.shell.Shell super$2$getShell()
    {
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r0;
        org.codehaus.groovy.tools.shell.Shell $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.ShellRunner: org.codehaus.groovy.tools.shell.Shell getShell()>();

        return $r1;
    }

    java.lang.Class super$1$getClass()
    {
        java.lang.Class $r1;
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r0;

        r0 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        return $r1;
    }

    boolean super$2$isRunning()
    {
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        $z0 = specialinvoke r0.<org.codehaus.groovy.tools.shell.ShellRunner: boolean isRunning()>();

        return $z0;
    }

    void super$1$finalize()
    {
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r0;

        r0 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    groovy.lang.Closure super$2$getErrorHandler()
    {
        groovy.lang.Closure $r1;
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r0;

        r0 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.ShellRunner: groovy.lang.Closure getErrorHandler()>();

        return $r1;
    }

    void super$1$wait(long)
    {
        long l0;
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r0;

        r0 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void wait(long)>(l0);

        return;
    }

    boolean super$2$work()
    {
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        $z0 = specialinvoke r0.<org.codehaus.groovy.tools.shell.ShellRunner: boolean work()>();

        return $z0;
    }

    boolean super$1$equals(java.lang.Object)
    {
        java.lang.Object r1;
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    java.lang.Object super$2$invokeMethod(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2, $r3;
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = specialinvoke r0.<org.codehaus.groovy.tools.shell.ShellRunner: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>(r1, r2);

        return $r3;
    }

    boolean super$2$isBreakOnNull()
    {
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        $z0 = specialinvoke r0.<org.codehaus.groovy.tools.shell.ShellRunner: boolean isBreakOnNull()>();

        return $z0;
    }

    int super$1$hashCode()
    {
        int $i0;
        org.codehaus.groovy.tools.shell.InteractiveShellRunner r0;

        r0 := @this: org.codehaus.groovy.tools.shell.InteractiveShellRunner;

        $i0 = specialinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
