public final class org.wiztools.restclient.util.ConfigUtil extends java.lang.Object
{

    private void <init>()
    {
        org.wiztools.restclient.util.ConfigUtil r0;

        r0 := @this: org.wiztools.restclient.util.ConfigUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.io.File getConfigFile(java.lang.String)
    {
        java.lang.String r1;
        java.io.File $r0, $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.io.File;

        $r2 = <org.wiztools.restclient.IGlobalOptions: java.io.File CONF_DIR>;

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, r1);

        return $r0;
    }

    public static java.io.File[] getTestDependencies()
    {
        java.io.File $r0, $r1;
        org.wiztools.restclient.util.ConfigUtil$1 $r2;
        java.io.File[] $r3, $r4;
        boolean $z0, $z1, $z2;

        $r0 = new java.io.File;

        $r1 = <org.wiztools.restclient.IGlobalOptions: java.io.File CONF_DIR>;

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, "lib");

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke $r0.<java.io.File: boolean canRead()>();

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke $r0.<java.io.File: boolean isDirectory()>();

        if $z2 == 0 goto label1;

        $r2 = new org.wiztools.restclient.util.ConfigUtil$1;

        specialinvoke $r2.<org.wiztools.restclient.util.ConfigUtil$1: void <init>()>();

        $r3 = virtualinvoke $r0.<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>($r2);

        return $r3;

     label1:
        $r4 = newarray (java.io.File)[0];

        return $r4;
    }
}
