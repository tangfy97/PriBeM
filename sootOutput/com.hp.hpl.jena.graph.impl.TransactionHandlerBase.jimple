public abstract class com.hp.hpl.jena.graph.impl.TransactionHandlerBase extends java.lang.Object implements com.hp.hpl.jena.graph.TransactionHandler
{

    public void <init>()
    {
        com.hp.hpl.jena.graph.impl.TransactionHandlerBase r0;

        r0 := @this: com.hp.hpl.jena.graph.impl.TransactionHandlerBase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object executeInTransaction(com.hp.hpl.jena.shared.Command)
    {
        java.lang.Throwable $r3;
        com.hp.hpl.jena.shared.JenaException $r4, $r5;
        com.hp.hpl.jena.shared.Command r1;
        java.lang.Object $r2;
        com.hp.hpl.jena.graph.impl.TransactionHandlerBase r0;

        r0 := @this: com.hp.hpl.jena.graph.impl.TransactionHandlerBase;

        r1 := @parameter0: com.hp.hpl.jena.shared.Command;

        virtualinvoke r0.<com.hp.hpl.jena.graph.impl.TransactionHandlerBase: void begin()>();

     label1:
        $r2 = interfaceinvoke r1.<com.hp.hpl.jena.shared.Command: java.lang.Object execute()>();

        virtualinvoke r0.<com.hp.hpl.jena.graph.impl.TransactionHandlerBase: void commit()>();

     label2:
        return $r2;

     label3:
        $r5 := @caughtexception;

        virtualinvoke r0.<com.hp.hpl.jena.graph.impl.TransactionHandlerBase: void abort()>();

        throw $r5;

     label4:
        $r3 := @caughtexception;

        virtualinvoke r0.<com.hp.hpl.jena.graph.impl.TransactionHandlerBase: void abort()>();

        $r4 = new com.hp.hpl.jena.shared.JenaException;

        specialinvoke $r4.<com.hp.hpl.jena.shared.JenaException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch com.hp.hpl.jena.shared.JenaException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label4;
    }
}
