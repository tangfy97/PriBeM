public class org.apache.html.dom.HTMLElementImpl extends org.apache.xerces.dom.ElementImpl implements org.w3c.dom.html.HTMLElement
{
    private static final long serialVersionUID;

    public void <init>(org.apache.html.dom.HTMLDocumentImpl, java.lang.String)
    {
        org.apache.html.dom.HTMLDocumentImpl r1;
        java.util.Locale $r3;
        org.apache.html.dom.HTMLElementImpl r0;
        java.lang.String r2, $r4;

        r0 := @this: org.apache.html.dom.HTMLElementImpl;

        r1 := @parameter0: org.apache.html.dom.HTMLDocumentImpl;

        r2 := @parameter1: java.lang.String;

        $r3 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r4 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r3);

        specialinvoke r0.<org.apache.xerces.dom.ElementImpl: void <init>(org.apache.xerces.dom.CoreDocumentImpl,java.lang.String)>(r1, $r4);

        return;
    }

    public java.lang.String getId()
    {
        java.lang.String $r1;
        org.apache.html.dom.HTMLElementImpl r0;

        r0 := @this: org.apache.html.dom.HTMLElementImpl;

        $r1 = virtualinvoke r0.<org.apache.html.dom.HTMLElementImpl: java.lang.String getAttribute(java.lang.String)>("id");

        return $r1;
    }

    public void setId(java.lang.String)
    {
        java.lang.String r1;
        org.apache.html.dom.HTMLElementImpl r0;

        r0 := @this: org.apache.html.dom.HTMLElementImpl;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.html.dom.HTMLElementImpl: void setAttribute(java.lang.String,java.lang.String)>("id", r1);

        return;
    }

    public java.lang.String getTitle()
    {
        java.lang.String $r1;
        org.apache.html.dom.HTMLElementImpl r0;

        r0 := @this: org.apache.html.dom.HTMLElementImpl;

        $r1 = virtualinvoke r0.<org.apache.html.dom.HTMLElementImpl: java.lang.String getAttribute(java.lang.String)>("title");

        return $r1;
    }

    public void setTitle(java.lang.String)
    {
        java.lang.String r1;
        org.apache.html.dom.HTMLElementImpl r0;

        r0 := @this: org.apache.html.dom.HTMLElementImpl;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.html.dom.HTMLElementImpl: void setAttribute(java.lang.String,java.lang.String)>("title", r1);

        return;
    }

    public java.lang.String getLang()
    {
        java.lang.String $r1;
        org.apache.html.dom.HTMLElementImpl r0;

        r0 := @this: org.apache.html.dom.HTMLElementImpl;

        $r1 = virtualinvoke r0.<org.apache.html.dom.HTMLElementImpl: java.lang.String getAttribute(java.lang.String)>("lang");

        return $r1;
    }

    public void setLang(java.lang.String)
    {
        java.lang.String r1;
        org.apache.html.dom.HTMLElementImpl r0;

        r0 := @this: org.apache.html.dom.HTMLElementImpl;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.html.dom.HTMLElementImpl: void setAttribute(java.lang.String,java.lang.String)>("lang", r1);

        return;
    }

    public java.lang.String getDir()
    {
        java.lang.String $r1;
        org.apache.html.dom.HTMLElementImpl r0;

        r0 := @this: org.apache.html.dom.HTMLElementImpl;

        $r1 = virtualinvoke r0.<org.apache.html.dom.HTMLElementImpl: java.lang.String getAttribute(java.lang.String)>("dir");

        return $r1;
    }

    public void setDir(java.lang.String)
    {
        java.lang.String r1;
        org.apache.html.dom.HTMLElementImpl r0;

        r0 := @this: org.apache.html.dom.HTMLElementImpl;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.html.dom.HTMLElementImpl: void setAttribute(java.lang.String,java.lang.String)>("dir", r1);

        return;
    }

    public java.lang.String getClassName()
    {
        java.lang.String $r1;
        org.apache.html.dom.HTMLElementImpl r0;

        r0 := @this: org.apache.html.dom.HTMLElementImpl;

        $r1 = virtualinvoke r0.<org.apache.html.dom.HTMLElementImpl: java.lang.String getAttribute(java.lang.String)>("class");

        return $r1;
    }

    public void setClassName(java.lang.String)
    {
        java.lang.String r1;
        org.apache.html.dom.HTMLElementImpl r0;

        r0 := @this: org.apache.html.dom.HTMLElementImpl;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.html.dom.HTMLElementImpl: void setAttribute(java.lang.String,java.lang.String)>("class", r1);

        return;
    }

    int getInteger(java.lang.String)
    {
        org.apache.html.dom.HTMLElementImpl r2;
        int $i0;
        java.lang.NumberFormatException $r1;
        java.lang.String r0;

        r2 := @this: org.apache.html.dom.HTMLElementImpl;

        r0 := @parameter0: java.lang.String;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r0);

        return $i0;

     label2:
        $r1 := @caughtexception;

        return 0;

        catch java.lang.NumberFormatException from label1 to label2 with label2;
    }

    boolean getBinary(java.lang.String)
    {
        org.apache.html.dom.HTMLElementImpl r0;
        java.lang.String r1;
        org.w3c.dom.Attr $r2;
        boolean $z0;

        r0 := @this: org.apache.html.dom.HTMLElementImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.html.dom.HTMLElementImpl: org.w3c.dom.Attr getAttributeNode(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    void setAttribute(java.lang.String, boolean)
    {
        java.lang.String r1;
        boolean z0;
        org.apache.html.dom.HTMLElementImpl r0;

        r0 := @this: org.apache.html.dom.HTMLElementImpl;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.html.dom.HTMLElementImpl: void setAttribute(java.lang.String,java.lang.String)>(r1, r1);

        goto label2;

     label1:
        virtualinvoke r0.<org.apache.html.dom.HTMLElementImpl: void removeAttribute(java.lang.String)>(r1);

     label2:
        return;
    }

    public org.w3c.dom.Attr getAttributeNode(java.lang.String)
    {
        java.util.Locale $r2;
        org.apache.html.dom.HTMLElementImpl r0;
        java.lang.String r1, $r3;
        org.w3c.dom.Attr $r4;

        r0 := @this: org.apache.html.dom.HTMLElementImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        $r4 = specialinvoke r0.<org.apache.xerces.dom.ElementImpl: org.w3c.dom.Attr getAttributeNode(java.lang.String)>($r3);

        return $r4;
    }

    public org.w3c.dom.Attr getAttributeNodeNS(java.lang.String, java.lang.String)
    {
        org.apache.html.dom.HTMLElementImpl r1;
        org.w3c.dom.Attr $r5, $r6;
        java.util.Locale $r3;
        int $i0;
        java.lang.String r0, r2, $r4;

        r1 := @this: org.apache.html.dom.HTMLElementImpl;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r6 = specialinvoke r1.<org.apache.xerces.dom.ElementImpl: org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)>(r0, r2);

        return $r6;

     label1:
        $r3 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r4 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r3);

        $r5 = specialinvoke r1.<org.apache.xerces.dom.ElementImpl: org.w3c.dom.Attr getAttributeNode(java.lang.String)>($r4);

        return $r5;
    }

    public java.lang.String getAttribute(java.lang.String)
    {
        java.util.Locale $r2;
        org.apache.html.dom.HTMLElementImpl r0;
        java.lang.String r1, $r3, $r4;

        r0 := @this: org.apache.html.dom.HTMLElementImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        $r4 = specialinvoke r0.<org.apache.xerces.dom.ElementImpl: java.lang.String getAttribute(java.lang.String)>($r3);

        return $r4;
    }

    public java.lang.String getAttributeNS(java.lang.String, java.lang.String)
    {
        org.apache.html.dom.HTMLElementImpl r1;
        java.util.Locale $r3;
        int $i0;
        java.lang.String r0, r2, $r4, $r5, $r6;

        r1 := @this: org.apache.html.dom.HTMLElementImpl;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r6 = specialinvoke r1.<org.apache.xerces.dom.ElementImpl: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(r0, r2);

        return $r6;

     label1:
        $r3 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r4 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r3);

        $r5 = specialinvoke r1.<org.apache.xerces.dom.ElementImpl: java.lang.String getAttribute(java.lang.String)>($r4);

        return $r5;
    }

    public final org.w3c.dom.NodeList getElementsByTagName(java.lang.String)
    {
        org.w3c.dom.NodeList $r4;
        java.util.Locale $r2;
        org.apache.html.dom.HTMLElementImpl r0;
        java.lang.String r1, $r3;

        r0 := @this: org.apache.html.dom.HTMLElementImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r2);

        $r4 = specialinvoke r0.<org.apache.xerces.dom.ElementImpl: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>($r3);

        return $r4;
    }

    public final org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String, java.lang.String)
    {
        org.w3c.dom.NodeList $r5, $r8;
        org.apache.html.dom.HTMLElementImpl r1;
        java.util.Locale $r3, $r6;
        int $i0;
        java.lang.String r0, r2, $r4, $r7;

        r1 := @this: org.apache.html.dom.HTMLElementImpl;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r6 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r7 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r6);

        $r8 = specialinvoke r1.<org.apache.xerces.dom.ElementImpl: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)>(r0, $r7);

        return $r8;

     label1:
        $r3 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r4 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r3);

        $r5 = specialinvoke r1.<org.apache.xerces.dom.ElementImpl: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>($r4);

        return $r5;
    }

    java.lang.String capitalize(java.lang.String)
    {
        org.apache.html.dom.HTMLElementImpl r3;
        char $c1, $c2, $c4, $c5;
        int $i0, $i3, i6;
        char[] $r1;
        java.lang.String r0, $r2;

        r3 := @this: org.apache.html.dom.HTMLElementImpl;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label3;

        $c1 = $r1[0];

        $c2 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c1);

        $r1[0] = $c2;

        i6 = 1;

        goto label2;

     label1:
        $c4 = $r1[i6];

        $c5 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c4);

        $r1[i6] = $c5;

        i6 = i6 + 1;

     label2:
        $i3 = lengthof $r1;

        if i6 < $i3 goto label1;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r1);

        return $r2;

     label3:
        return r0;
    }

    java.lang.String getCapitalized(java.lang.String)
    {
        org.apache.html.dom.HTMLElementImpl r0;
        char $c1, $c2, $c4, $c5;
        int $i0, $i3, i6;
        char[] $r3;
        java.lang.String r1, $r2, $r4;

        r0 := @this: org.apache.html.dom.HTMLElementImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.html.dom.HTMLElementImpl: java.lang.String getAttribute(java.lang.String)>(r1);

        if $r2 == null goto label3;

        $r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        $i0 = lengthof $r3;

        if $i0 <= 0 goto label3;

        $c1 = $r3[0];

        $c2 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c1);

        $r3[0] = $c2;

        i6 = 1;

        goto label2;

     label1:
        $c4 = $r3[i6];

        $c5 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c4);

        $r3[i6] = $c5;

        i6 = i6 + 1;

     label2:
        $i3 = lengthof $r3;

        if i6 < $i3 goto label1;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r3);

        return $r4;

     label3:
        return $r2;
    }

    public org.w3c.dom.html.HTMLFormElement getForm()
    {
        org.w3c.dom.html.HTMLFormElement $r1;
        org.apache.html.dom.HTMLElementImpl r0;
        org.w3c.dom.Node r2;
        boolean $z0;

        r0 := @this: org.apache.html.dom.HTMLElementImpl;

        r2 = virtualinvoke r0.<org.apache.html.dom.HTMLElementImpl: org.w3c.dom.Node getParentNode()>();

        goto label3;

     label1:
        $z0 = r2 instanceof org.w3c.dom.html.HTMLFormElement;

        if $z0 == 0 goto label2;

        $r1 = (org.w3c.dom.html.HTMLFormElement) r2;

        return $r1;

     label2:
        r2 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

     label3:
        if r2 != null goto label1;

        return null;
    }

    public static void <clinit>()
    {
        <org.apache.html.dom.HTMLElementImpl: long serialVersionUID> = 5283925246324423495L;

        return;
    }
}
