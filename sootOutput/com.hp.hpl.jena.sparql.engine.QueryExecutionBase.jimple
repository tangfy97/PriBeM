public class com.hp.hpl.jena.sparql.engine.QueryExecutionBase extends java.lang.Object implements com.hp.hpl.jena.query.QueryExecution
{
    private com.hp.hpl.jena.query.Query query;
    private com.hp.hpl.jena.query.Dataset dataset;
    private com.hp.hpl.jena.sparql.engine.QueryEngineFactory qeFactory;
    private com.hp.hpl.jena.sparql.engine.QueryIterator queryIterator;
    private com.hp.hpl.jena.sparql.engine.Plan plan;
    private com.hp.hpl.jena.sparql.util.Context context;
    private com.hp.hpl.jena.util.FileManager fileManager;
    private com.hp.hpl.jena.query.QuerySolution initialBinding;
    private volatile boolean isCancelled;
    private volatile com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback expectedCallback;
    private com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback timeout1Callback;
    private com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback timeout2Callback;
    private final java.lang.Object lockTimeout;
    private static final long TIMEOUT_UNSET;
    private static final long TIMEOUT_INF;
    private long timeout1;
    private long timeout2;
    private final org.apache.jena.atlas.lib.AlarmClock alarmClock;

    public void <init>(com.hp.hpl.jena.query.Query, com.hp.hpl.jena.query.Dataset, com.hp.hpl.jena.sparql.util.Context, com.hp.hpl.jena.sparql.engine.QueryEngineFactory)
    {
        com.hp.hpl.jena.query.Query r4;
        com.hp.hpl.jena.sparql.util.Context r6;
        org.apache.jena.atlas.lib.AlarmClock $r3;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;
        com.hp.hpl.jena.sparql.engine.QueryEngineFactory r7;
        com.hp.hpl.jena.util.FileManager $r1;
        com.hp.hpl.jena.query.Dataset r5;
        java.lang.Object $r2;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        r4 := @parameter0: com.hp.hpl.jena.query.Query;

        r5 := @parameter1: com.hp.hpl.jena.query.Dataset;

        r6 := @parameter2: com.hp.hpl.jena.sparql.util.Context;

        r7 := @parameter3: com.hp.hpl.jena.sparql.engine.QueryEngineFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryIterator queryIterator> = null;

        r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.Plan plan> = null;

        $r1 = staticinvoke <com.hp.hpl.jena.util.FileManager: com.hp.hpl.jena.util.FileManager get()>();

        r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.util.FileManager fileManager> = $r1;

        r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.QuerySolution initialBinding> = null;

        r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: boolean isCancelled> = 0;

        r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback expectedCallback> = null;

        r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback timeout1Callback> = null;

        r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback timeout2Callback> = null;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: java.lang.Object lockTimeout> = $r2;

        r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: long timeout1> = -1L;

        r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: long timeout2> = -1L;

        $r3 = staticinvoke <org.apache.jena.atlas.lib.AlarmClock: org.apache.jena.atlas.lib.AlarmClock get()>();

        r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: org.apache.jena.atlas.lib.AlarmClock alarmClock> = $r3;

        r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Query query> = r4;

        r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Dataset dataset> = r5;

        r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.util.Context context> = r6;

        r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryEngineFactory qeFactory> = r7;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: void init()>();

        return;
    }

    private void init()
    {
        com.hp.hpl.jena.query.Query $r5, $r6;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r9;
        com.hp.hpl.jena.sparql.util.Context $r3, $r4, $r8;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;
        com.hp.hpl.jena.query.Dataset $r1, $r2;
        com.hp.hpl.jena.sparql.util.Symbol $r7;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Dataset dataset>;

        if $r1 != null goto label1;

        $r9 = null;

        goto label2;

     label1:
        $r2 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Dataset dataset>;

        $r9 = interfaceinvoke $r2.<com.hp.hpl.jena.query.Dataset: com.hp.hpl.jena.sparql.core.DatasetGraph asDatasetGraph()>();

     label2:
        $r3 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.util.Context context>;

        $r4 = staticinvoke <com.hp.hpl.jena.sparql.util.Context: com.hp.hpl.jena.sparql.util.Context setupContext(com.hp.hpl.jena.sparql.util.Context,com.hp.hpl.jena.sparql.core.DatasetGraph)>($r3, $r9);

        r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.util.Context context> = $r4;

        $r5 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Query query>;

        if $r5 == null goto label3;

        $r8 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.util.Context context>;

        $r7 = <com.hp.hpl.jena.sparql.ARQConstants: com.hp.hpl.jena.sparql.util.Symbol sysCurrentQuery>;

        $r6 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Query query>;

        virtualinvoke $r8.<com.hp.hpl.jena.sparql.util.Context: void put(com.hp.hpl.jena.sparql.util.Symbol,java.lang.Object)>($r7, $r6);

     label3:
        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: void setAnyTimeouts()>();

        return;
    }

    public static com.hp.hpl.jena.sparql.util.Context setupContext(com.hp.hpl.jena.sparql.util.Context, com.hp.hpl.jena.sparql.core.DatasetGraph)
    {
        com.hp.hpl.jena.graph.Node $r6;
        com.hp.hpl.jena.sparql.core.DatasetGraph r1;
        com.hp.hpl.jena.sparql.util.Context $r0, $r2, $r3, r4;
        com.hp.hpl.jena.sparql.util.Symbol $r5;

        r4 := @parameter0: com.hp.hpl.jena.sparql.util.Context;

        r1 := @parameter1: com.hp.hpl.jena.sparql.core.DatasetGraph;

        if r4 != null goto label1;

        r4 = staticinvoke <com.hp.hpl.jena.query.ARQ: com.hp.hpl.jena.sparql.util.Context getContext()>();

     label1:
        $r0 = virtualinvoke r4.<com.hp.hpl.jena.sparql.util.Context: com.hp.hpl.jena.sparql.util.Context copy()>();

        if r1 == null goto label2;

        $r2 = interfaceinvoke r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: com.hp.hpl.jena.sparql.util.Context getContext()>();

        if $r2 == null goto label2;

        $r3 = interfaceinvoke r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: com.hp.hpl.jena.sparql.util.Context getContext()>();

        virtualinvoke $r0.<com.hp.hpl.jena.sparql.util.Context: void putAll(com.hp.hpl.jena.sparql.util.Context)>($r3);

     label2:
        $r5 = <com.hp.hpl.jena.sparql.ARQConstants: com.hp.hpl.jena.sparql.util.Symbol sysCurrentTime>;

        $r6 = staticinvoke <com.hp.hpl.jena.sparql.util.NodeFactoryExtra: com.hp.hpl.jena.graph.Node nowAsDateTime()>();

        virtualinvoke $r0.<com.hp.hpl.jena.sparql.util.Context: void set(com.hp.hpl.jena.sparql.util.Symbol,java.lang.Object)>($r5, $r6);

        return $r0;
    }

    private void setAnyTimeouts()
    {
        long $l0, $l1, $l2, $l3;
        java.lang.String[] $r11;
        java.lang.String $r9, $r10, $r12, $r13, $r19;
        java.lang.Number $r14;
        com.hp.hpl.jena.sparql.util.Symbol $r1, $r3;
        boolean $z0, $z1, $z2, $z3;
        java.lang.RuntimeException $r15;
        com.hp.hpl.jena.sparql.util.Context $r2, $r4;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;
        java.lang.Object $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r16, $r17, $r18;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        $r2 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.util.Context context>;

        $r1 = <com.hp.hpl.jena.query.ARQ: com.hp.hpl.jena.sparql.util.Symbol queryTimeout>;

        $z0 = virtualinvoke $r2.<com.hp.hpl.jena.sparql.util.Context: boolean isDefined(com.hp.hpl.jena.sparql.util.Symbol)>($r1);

        if $z0 == 0 goto label7;

        $r4 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.util.Context context>;

        $r3 = <com.hp.hpl.jena.query.ARQ: com.hp.hpl.jena.sparql.util.Symbol queryTimeout>;

        $r5 = virtualinvoke $r4.<com.hp.hpl.jena.sparql.util.Context: java.lang.Object get(com.hp.hpl.jena.sparql.util.Symbol)>($r3);

        $z1 = $r5 instanceof java.lang.Number;

        if $z1 == 0 goto label1;

        $r14 = (java.lang.Number) $r5;

        $l3 = virtualinvoke $r14.<java.lang.Number: long longValue()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: void setTimeout(long)>($l3);

        goto label7;

     label1:
        $z2 = $r5 instanceof java.lang.String;

        if $z2 == 0 goto label6;

     label2:
        $r10 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        $z3 = virtualinvoke $r10.<java.lang.String: boolean contains(java.lang.CharSequence)>(",");

        if $z3 == 0 goto label3;

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $r12 = $r11[0];

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r12);

        $r13 = $r11[1];

        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r13);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: void setTimeout(long,long)>($l1, $l2);

        goto label4;

     label3:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r10);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: void setTimeout(long)>($l0);

     label4:
        goto label7;

     label5:
        $r15 := @caughtexception;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t interpret string for timeout: ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String)>(r0, $r19);

        goto label7;

     label6:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t interpret timeout: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String)>(r0, $r9);

     label7:
        return;

        catch java.lang.RuntimeException from label2 to label4 with label5;
    }

    public void close()
    {
        com.hp.hpl.jena.sparql.engine.Plan $r2, $r9;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback $r3, $r4, $r5, $r7;
        org.apache.jena.atlas.lib.AlarmClock $r6, $r8;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r10;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryIterator queryIterator>;

        if $r1 == null goto label1;

        $r10 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryIterator queryIterator>;

        interfaceinvoke $r10.<com.hp.hpl.jena.sparql.engine.QueryIterator: void close()>();

     label1:
        $r2 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.Plan plan>;

        if $r2 == null goto label2;

        $r9 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.Plan plan>;

        interfaceinvoke $r9.<com.hp.hpl.jena.sparql.engine.Plan: void close()>();

     label2:
        $r3 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback timeout1Callback>;

        if $r3 == null goto label3;

        $r8 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: org.apache.jena.atlas.lib.AlarmClock alarmClock>;

        $r7 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback timeout1Callback>;

        virtualinvoke $r8.<org.apache.jena.atlas.lib.AlarmClock: void cancel(java.lang.Runnable)>($r7);

     label3:
        $r4 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback timeout2Callback>;

        if $r4 == null goto label4;

        $r6 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: org.apache.jena.atlas.lib.AlarmClock alarmClock>;

        $r5 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback timeout2Callback>;

        virtualinvoke $r6.<org.apache.jena.atlas.lib.AlarmClock: void cancel(java.lang.Runnable)>($r5);

     label4:
        return;
    }

    public void abort()
    {
        java.lang.Throwable $r4;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;
        java.lang.Object $r1;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r2, $r3;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: java.lang.Object lockTimeout>;

        entermonitor $r1;

     label1:
        $r2 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryIterator queryIterator>;

        if $r2 == null goto label2;

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryIterator queryIterator>;

        interfaceinvoke $r3.<com.hp.hpl.jena.sparql.engine.QueryIterator: void cancel()>();

     label2:
        r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: boolean isCancelled> = 1;

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r4;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public com.hp.hpl.jena.query.ResultSet execSelect()
    {
        com.hp.hpl.jena.query.Query $r1, $r6;
        com.hp.hpl.jena.query.ResultSet $r2;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;
        com.hp.hpl.jena.query.QueryExecException $r3;
        java.lang.StringBuilder $r4, $r5, $r8, $r9;
        java.lang.String $r7, $r10;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Query query>;

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.query.Query: boolean isSelectType()>();

        if $z0 != 0 goto label1;

        $r3 = new com.hp.hpl.jena.query.QueryExecException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to have ResultSet from a ");

        $r6 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Query query>;

        $r7 = staticinvoke <com.hp.hpl.jena.sparql.engine.QueryExecutionBase: java.lang.String labelForQuery(com.hp.hpl.jena.query.Query)>($r6);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" query");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<com.hp.hpl.jena.query.QueryExecException: void <init>(java.lang.String)>($r10);

        throw $r3;

     label1:
        $r2 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.ResultSet execResultSet()>();

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Model execConstruct()
    {
        com.hp.hpl.jena.rdf.model.Model $r1, $r2;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.graph.GraphFactory: com.hp.hpl.jena.rdf.model.Model makeJenaDefaultModel()>();

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.rdf.model.Model execConstruct(com.hp.hpl.jena.rdf.model.Model)>($r1);

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Model execConstruct(com.hp.hpl.jena.rdf.model.Model)
    {
        java.lang.Throwable $r6;
        java.util.Iterator $r1;
        com.hp.hpl.jena.rdf.model.Statement $r5;
        com.hp.hpl.jena.graph.Triple r4;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;
        com.hp.hpl.jena.rdf.model.Model r2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

     label1:
        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: java.util.Iterator execConstructTriples()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: void insertPrefixesInto(com.hp.hpl.jena.rdf.model.Model)>(r2);

     label2:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.hp.hpl.jena.graph.Triple) $r3;

        $r5 = staticinvoke <com.hp.hpl.jena.sparql.util.ModelUtils: com.hp.hpl.jena.rdf.model.Statement tripleToStatement(com.hp.hpl.jena.rdf.model.Model,com.hp.hpl.jena.graph.Triple)>(r2, r4);

        if $r5 == null goto label3;

        interfaceinvoke r2.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Model add(com.hp.hpl.jena.rdf.model.Statement)>($r5);

     label3:
        goto label2;

     label4:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: void close()>();

        goto label7;

     label5:
        $r6 := @caughtexception;

     label6:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: void close()>();

        throw $r6;

     label7:
        return r2;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.util.Iterator execConstructTriples()
    {
        com.hp.hpl.jena.query.Query $r1, $r2, $r3, $r11;
        com.hp.hpl.jena.sparql.syntax.Template $r4;
        com.hp.hpl.jena.query.QueryExecException $r8;
        java.lang.String $r12, $r15;
        boolean $z0;
        java.util.Iterator $r7;
        java.util.List $r5;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;
        java.lang.StringBuilder $r9, $r10, $r13, $r14;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r6;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Query query>;

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.query.Query: boolean isConstructType()>();

        if $z0 != 0 goto label1;

        $r8 = new com.hp.hpl.jena.query.QueryExecException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to get a CONSTRUCT model from a ");

        $r11 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Query query>;

        $r12 = staticinvoke <com.hp.hpl.jena.sparql.engine.QueryExecutionBase: java.lang.String labelForQuery(com.hp.hpl.jena.query.Query)>($r11);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" query");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<com.hp.hpl.jena.query.QueryExecException: void <init>(java.lang.String)>($r15);

        throw $r8;

     label1:
        $r2 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Query query>;

        virtualinvoke $r2.<com.hp.hpl.jena.query.Query: void setQueryResultStar(boolean)>(1);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: void startQueryIterator()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Query query>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.query.Query: com.hp.hpl.jena.sparql.syntax.Template getConstructTemplate()>();

        $r5 = virtualinvoke $r4.<com.hp.hpl.jena.sparql.syntax.Template: java.util.List getTriples()>();

        $r6 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryIterator queryIterator>;

        $r7 = staticinvoke <com.hp.hpl.jena.sparql.modify.TemplateLib: java.util.Iterator calcTriples(java.util.List,java.util.Iterator)>($r5, $r6);

        return $r7;
    }

    public com.hp.hpl.jena.rdf.model.Model execDescribe()
    {
        com.hp.hpl.jena.rdf.model.Model $r1, $r2;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.graph.GraphFactory: com.hp.hpl.jena.rdf.model.Model makeJenaDefaultModel()>();

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.rdf.model.Model execDescribe(com.hp.hpl.jena.rdf.model.Model)>($r1);

        return $r2;
    }

    public com.hp.hpl.jena.rdf.model.Model execDescribe(com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.sparql.core.describe.DescribeHandler r22, r51, r53;
        com.hp.hpl.jena.graph.Node r50;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        com.hp.hpl.jena.rdf.model.RDFNode $r32, $r38, r52;
        com.hp.hpl.jena.query.ResultSet $r6;
        com.hp.hpl.jena.sparql.util.Context $r12, $r25;
        java.util.List $r9, $r11, $r27, $r35;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;
        com.hp.hpl.jena.sparql.syntax.ElementGroup $r39;
        com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry $r10;
        com.hp.hpl.jena.sparql.syntax.Element $r4;
        com.hp.hpl.jena.query.Dataset $r14, $r30;
        java.lang.StringBuilder $r42, $r43, $r46, $r47;
        com.hp.hpl.jena.query.Query $r1, $r2, $r3, $r8, $r26, $r34, $r40, $r44;
        java.util.HashSet $r5;
        com.hp.hpl.jena.query.QueryExecException $r41;
        java.lang.String $r45, $r48, r49;
        com.hp.hpl.jena.sparql.util.Symbol $r13;
        java.util.Iterator $r15, $r16, $r17, $r20, $r28, $r36;
        com.hp.hpl.jena.rdf.model.Resource $r23;
        com.hp.hpl.jena.query.QuerySolution $r33;
        com.hp.hpl.jena.rdf.model.Model r7, $r31;
        java.lang.Object $r18, $r19, $r21, $r24, $r29, $r37;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        r7 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Query query>;

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.query.Query: boolean isDescribeType()>();

        if $z0 != 0 goto label01;

        $r41 = new com.hp.hpl.jena.query.QueryExecException;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to get a DESCRIBE result from a ");

        $r44 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Query query>;

        $r45 = staticinvoke <com.hp.hpl.jena.sparql.engine.QueryExecutionBase: java.lang.String labelForQuery(com.hp.hpl.jena.query.Query)>($r44);

        $r46 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" query");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r41.<com.hp.hpl.jena.query.QueryExecException: void <init>(java.lang.String)>($r48);

        throw $r41;

     label01:
        $r2 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Query query>;

        virtualinvoke $r2.<com.hp.hpl.jena.query.Query: void setResultVars()>();

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Query query>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.query.Query: com.hp.hpl.jena.sparql.syntax.Element getQueryPattern()>();

        if $r4 != null goto label02;

        $r40 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Query query>;

        $r39 = new com.hp.hpl.jena.sparql.syntax.ElementGroup;

        specialinvoke $r39.<com.hp.hpl.jena.sparql.syntax.ElementGroup: void <init>()>();

        virtualinvoke $r40.<com.hp.hpl.jena.query.Query: void setQueryPattern(com.hp.hpl.jena.sparql.syntax.Element)>($r39);

     label02:
        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        $r6 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.ResultSet execResultSet()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: void insertPrefixesInto(com.hp.hpl.jena.rdf.model.Model)>(r7);

        if $r6 == null goto label06;

     label03:
        $z5 = interfaceinvoke $r6.<com.hp.hpl.jena.query.ResultSet: boolean hasNext()>();

        if $z5 == 0 goto label06;

        $r33 = interfaceinvoke $r6.<com.hp.hpl.jena.query.ResultSet: com.hp.hpl.jena.query.QuerySolution nextSolution()>();

        $r34 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Query query>;

        $r35 = virtualinvoke $r34.<com.hp.hpl.jena.query.Query: java.util.List getResultVars()>();

        $r36 = interfaceinvoke $r35.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z6 = interfaceinvoke $r36.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label05;

        $r37 = interfaceinvoke $r36.<java.util.Iterator: java.lang.Object next()>();

        r49 = (java.lang.String) $r37;

        $r38 = interfaceinvoke $r33.<com.hp.hpl.jena.query.QuerySolution: com.hp.hpl.jena.rdf.model.RDFNode get(java.lang.String)>(r49);

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r38);

        goto label04;

     label05:
        goto label03;

     label06:
        $r8 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Query query>;

        $r9 = virtualinvoke $r8.<com.hp.hpl.jena.query.Query: java.util.List getResultURIs()>();

        if $r9 == null goto label08;

        $r26 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Query query>;

        $r27 = virtualinvoke $r26.<com.hp.hpl.jena.query.Query: java.util.List getResultURIs()>();

        $r28 = interfaceinvoke $r27.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z4 = interfaceinvoke $r28.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label08;

        $r29 = interfaceinvoke $r28.<java.util.Iterator: java.lang.Object next()>();

        r50 = (com.hp.hpl.jena.graph.Node) $r29;

        $r30 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Dataset dataset>;

        $r31 = interfaceinvoke $r30.<com.hp.hpl.jena.query.Dataset: com.hp.hpl.jena.rdf.model.Model getDefaultModel()>();

        $r32 = staticinvoke <com.hp.hpl.jena.sparql.util.ModelUtils: com.hp.hpl.jena.rdf.model.RDFNode convertGraphNodeToRDFNode(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.rdf.model.Model)>(r50, $r31);

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r32);

        goto label07;

     label08:
        $r10 = staticinvoke <com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry: com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry get()>();

        $r11 = virtualinvoke $r10.<com.hp.hpl.jena.sparql.core.describe.DescribeHandlerRegistry: java.util.List newHandlerList()>();

        $r12 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.util.Context getContext()>();

        $r13 = <com.hp.hpl.jena.sparql.ARQConstants: com.hp.hpl.jena.sparql.util.Symbol sysCurrentDataset>;

        $r14 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Dataset getDataset()>();

        virtualinvoke $r12.<com.hp.hpl.jena.sparql.util.Context: void put(com.hp.hpl.jena.sparql.util.Symbol,java.lang.Object)>($r13, $r14);

        $r15 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z7 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label10;

        $r24 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r51 = (com.hp.hpl.jena.sparql.core.describe.DescribeHandler) $r24;

        $r25 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.util.Context getContext()>();

        interfaceinvoke r51.<com.hp.hpl.jena.sparql.core.describe.DescribeHandler: void start(com.hp.hpl.jena.rdf.model.Model,com.hp.hpl.jena.sparql.util.Context)>(r7, $r25);

        goto label09;

     label10:
        $r16 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label11:
        $z8 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label14;

        $r19 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r52 = (com.hp.hpl.jena.rdf.model.RDFNode) $r19;

        $z2 = r52 instanceof com.hp.hpl.jena.rdf.model.Resource;

        if $z2 == 0 goto label11;

        $r20 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z3 = interfaceinvoke $r20.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label13;

        $r21 = interfaceinvoke $r20.<java.util.Iterator: java.lang.Object next()>();

        r22 = (com.hp.hpl.jena.sparql.core.describe.DescribeHandler) $r21;

        $r23 = (com.hp.hpl.jena.rdf.model.Resource) r52;

        interfaceinvoke r22.<com.hp.hpl.jena.sparql.core.describe.DescribeHandler: void describe(com.hp.hpl.jena.rdf.model.Resource)>($r23);

        goto label12;

     label13:
        goto label11;

     label14:
        $r17 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $z1 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label16;

        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r53 = (com.hp.hpl.jena.sparql.core.describe.DescribeHandler) $r18;

        interfaceinvoke r53.<com.hp.hpl.jena.sparql.core.describe.DescribeHandler: void finish()>();

        goto label15;

     label16:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: void close()>();

        return r7;
    }

    public java.util.Iterator execDescribeTriples()
    {
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;
        java.util.Iterator $r3;
        com.hp.hpl.jena.rdf.model.StmtIterator $r2;
        com.hp.hpl.jena.rdf.model.Model $r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.rdf.model.Model execDescribe()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.StmtIterator listStatements()>();

        $r3 = staticinvoke <com.hp.hpl.jena.sparql.util.ModelUtils: java.util.Iterator statementsToTriples(java.util.Iterator)>($r2);

        return $r3;
    }

    public boolean execAsk()
    {
        com.hp.hpl.jena.query.Query $r1, $r6;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;
        com.hp.hpl.jena.query.QueryExecException $r3;
        java.lang.StringBuilder $r4, $r5, $r8, $r9;
        java.lang.String $r7, $r10;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r2;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Query query>;

        $z0 = virtualinvoke $r1.<com.hp.hpl.jena.query.Query: boolean isAskType()>();

        if $z0 != 0 goto label1;

        $r3 = new com.hp.hpl.jena.query.QueryExecException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to have boolean from a ");

        $r6 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Query query>;

        $r7 = staticinvoke <com.hp.hpl.jena.sparql.engine.QueryExecutionBase: java.lang.String labelForQuery(com.hp.hpl.jena.query.Query)>($r6);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" query");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<com.hp.hpl.jena.query.QueryExecException: void <init>(java.lang.String)>($r10);

        throw $r3;

     label1:
        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: void startQueryIterator()>();

        $r2 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryIterator queryIterator>;

        $z1 = interfaceinvoke $r2.<com.hp.hpl.jena.sparql.engine.QueryIterator: boolean hasNext()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: void close()>();

        return $z1;
    }

    public void setTimeout(long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit r0;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r1;
        long l0, $l1;

        r1 := @this: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        l0 := @parameter0: long;

        r0 := @parameter1: java.util.concurrent.TimeUnit;

        $l1 = staticinvoke <com.hp.hpl.jena.sparql.engine.QueryExecutionBase: long asMillis(long,java.util.concurrent.TimeUnit)>(l0, r0);

        r1.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: long timeout1> = -1L;

        r1.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: long timeout2> = $l1;

        return;
    }

    public void setTimeout(long)
    {
        java.util.concurrent.TimeUnit $r1;
        long l0;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        l0 := @parameter0: long;

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: void setTimeout(long,java.util.concurrent.TimeUnit)>(l0, $r1);

        return;
    }

    public void setTimeout(long, java.util.concurrent.TimeUnit, long, java.util.concurrent.TimeUnit)
    {
        long l0, $l1, l2, $l3;
        java.util.concurrent.TimeUnit r0, r1;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r2;
        byte $b4;
        int $i5;

        r2 := @this: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        l0 := @parameter0: long;

        r0 := @parameter1: java.util.concurrent.TimeUnit;

        l2 := @parameter2: long;

        r1 := @parameter3: java.util.concurrent.TimeUnit;

        $l1 = staticinvoke <com.hp.hpl.jena.sparql.engine.QueryExecutionBase: long asMillis(long,java.util.concurrent.TimeUnit)>(l0, r0);

        $l3 = staticinvoke <com.hp.hpl.jena.sparql.engine.QueryExecutionBase: long asMillis(long,java.util.concurrent.TimeUnit)>(l2, r1);

        r2.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: long timeout1> = $l1;

        $b4 = l2 cmp 0L;

        $i5 = (int) $b4;

        if $i5 >= 0 goto label1;

        r2.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: long timeout2> = -1L;

        goto label2;

     label1:
        r2.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: long timeout2> = $l3;

     label2:
        return;
    }

    public void setTimeout(long, long)
    {
        java.util.concurrent.TimeUnit $r1, $r2;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;
        long l0, l1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: void setTimeout(long,java.util.concurrent.TimeUnit,long,java.util.concurrent.TimeUnit)>(l0, $r2, l1, $r1);

        return;
    }

    private static long asMillis(long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit r0;
        byte $b1;
        int $i3;
        long l0, $l2;

        l0 := @parameter0: long;

        r0 := @parameter1: java.util.concurrent.TimeUnit;

        $b1 = l0 cmp 0L;

        $i3 = (int) $b1;

        if $i3 >= 0 goto label1;

        $l2 = l0;

        goto label2;

     label1:
        $l2 = virtualinvoke r0.<java.util.concurrent.TimeUnit: long toMillis(long)>(l0);

     label2:
        return $l2;
    }

    public long getTimeout1()
    {
        long $l0;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        $l0 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: long timeout1>;

        return $l0;
    }

    public long getTimeout2()
    {
        long $l0;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        $l0 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: long timeout2>;

        return $l0;
    }

    private static boolean isTimeoutSet(long)
    {
        byte $b1;
        int $i2;
        long l0;
        boolean $z0;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected void execInit()
    {
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        return;
    }

    private com.hp.hpl.jena.query.ResultSet asResultSet(com.hp.hpl.jena.sparql.engine.QueryIterator)
    {
        com.hp.hpl.jena.query.Query $r3;
        com.hp.hpl.jena.sparql.engine.ResultSetStream $r2;
        java.util.List $r4;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;
        com.hp.hpl.jena.rdf.model.Model r7;
        com.hp.hpl.jena.query.Dataset $r1, $r6;
        com.hp.hpl.jena.sparql.engine.QueryIterator r5;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        r5 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryIterator;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Dataset dataset>;

        if $r1 == null goto label1;

        $r6 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Dataset dataset>;

        r7 = interfaceinvoke $r6.<com.hp.hpl.jena.query.Dataset: com.hp.hpl.jena.rdf.model.Model getDefaultModel()>();

        goto label2;

     label1:
        r7 = staticinvoke <com.hp.hpl.jena.rdf.model.ModelFactory: com.hp.hpl.jena.rdf.model.Model createDefaultModel()>();

     label2:
        $r2 = new com.hp.hpl.jena.sparql.engine.ResultSetStream;

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Query query>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.query.Query: java.util.List getResultVars()>();

        specialinvoke $r2.<com.hp.hpl.jena.sparql.engine.ResultSetStream: void <init>(java.util.List,com.hp.hpl.jena.rdf.model.Model,java.util.Iterator)>($r4, r7, r5);

        return $r2;
    }

    private void startQueryIterator()
    {
        com.hp.hpl.jena.sparql.engine.Plan $r6, $r16, $r18;
        long $l0, $l1, $l2, $l3, $l4, $l5;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback $r2, $r3, $r5, $r8, $r12, $r13, $r14;
        org.apache.jena.atlas.lib.AlarmClock $r4, $r15;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase$QueryIteratorTimer2 $r9;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1, $r7, $r10, $r11, $r17, $r19;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: void execInit()>();

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryIterator queryIterator>;

        if $r1 == null goto label1;

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String)>(r0, "Query iterator has already been started");

     label1:
        $l0 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: long timeout1>;

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.engine.QueryExecutionBase: boolean isTimeoutSet(long)>($l0);

        if $z0 != 0 goto label2;

        $l5 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: long timeout2>;

        $z4 = staticinvoke <com.hp.hpl.jena.sparql.engine.QueryExecutionBase: boolean isTimeoutSet(long)>($l5);

        if $z4 != 0 goto label2;

        $r18 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.Plan getPlan()>();

        $r19 = interfaceinvoke $r18.<com.hp.hpl.jena.sparql.engine.Plan: com.hp.hpl.jena.sparql.engine.QueryIterator iterator()>();

        r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryIterator queryIterator> = $r19;

        return;

     label2:
        $l1 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: long timeout1>;

        $z1 = staticinvoke <com.hp.hpl.jena.sparql.engine.QueryExecutionBase: boolean isTimeoutSet(long)>($l1);

        if $z1 != 0 goto label3;

        $l3 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: long timeout2>;

        $z3 = staticinvoke <com.hp.hpl.jena.sparql.engine.QueryExecutionBase: boolean isTimeoutSet(long)>($l3);

        if $z3 == 0 goto label3;

        $r12 = new com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback;

        specialinvoke $r12.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback: void <init>(com.hp.hpl.jena.sparql.engine.QueryExecutionBase)>(r0);

        r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback timeout2Callback> = $r12;

        $r13 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback timeout2Callback>;

        r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback expectedCallback> = $r13;

        $r15 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: org.apache.jena.atlas.lib.AlarmClock alarmClock>;

        $r14 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback timeout2Callback>;

        $l4 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: long timeout2>;

        virtualinvoke $r15.<org.apache.jena.atlas.lib.AlarmClock: void add(java.lang.Runnable,long)>($r14, $l4);

        $r16 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.Plan getPlan()>();

        $r17 = interfaceinvoke $r16.<com.hp.hpl.jena.sparql.engine.Plan: com.hp.hpl.jena.sparql.engine.QueryIterator iterator()>();

        r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryIterator queryIterator> = $r17;

        return;

     label3:
        $r2 = new com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback: void <init>(com.hp.hpl.jena.sparql.engine.QueryExecutionBase)>(r0);

        r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback timeout1Callback> = $r2;

        $r4 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: org.apache.jena.atlas.lib.AlarmClock alarmClock>;

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback timeout1Callback>;

        $l2 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: long timeout1>;

        virtualinvoke $r4.<org.apache.jena.atlas.lib.AlarmClock: void add(java.lang.Runnable,long)>($r3, $l2);

        $r5 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback timeout1Callback>;

        r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback expectedCallback> = $r5;

        $r6 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.Plan getPlan()>();

        $r7 = interfaceinvoke $r6.<com.hp.hpl.jena.sparql.engine.Plan: com.hp.hpl.jena.sparql.engine.QueryIterator iterator()>();

        r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryIterator queryIterator> = $r7;

        $r8 = new com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback;

        specialinvoke $r8.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback: void <init>(com.hp.hpl.jena.sparql.engine.QueryExecutionBase)>(r0);

        r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback timeout2Callback> = $r8;

        $r9 = new com.hp.hpl.jena.sparql.engine.QueryExecutionBase$QueryIteratorTimer2;

        $r10 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryIterator queryIterator>;

        specialinvoke $r9.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase$QueryIteratorTimer2: void <init>(com.hp.hpl.jena.sparql.engine.QueryExecutionBase,com.hp.hpl.jena.sparql.engine.QueryIterator)>(r0, $r10);

        r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryIterator queryIterator> = $r9;

        $z2 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: boolean isCancelled>;

        if $z2 == 0 goto label4;

        $r11 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryIterator queryIterator>;

        interfaceinvoke $r11.<com.hp.hpl.jena.sparql.engine.QueryIterator: void cancel()>();

     label4:
        return;
    }

    private com.hp.hpl.jena.query.ResultSet execResultSet()
    {
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;
        com.hp.hpl.jena.query.ResultSet $r2;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: void startQueryIterator()>();

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryIterator queryIterator>;

        $r2 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.ResultSet asResultSet(com.hp.hpl.jena.sparql.engine.QueryIterator)>($r1);

        return $r2;
    }

    public com.hp.hpl.jena.sparql.engine.Plan getPlan()
    {
        com.hp.hpl.jena.query.Query $r3, $r8;
        com.hp.hpl.jena.sparql.engine.Plan $r1, $r10, $r13;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r5;
        com.hp.hpl.jena.sparql.util.Context $r9;
        com.hp.hpl.jena.sparql.engine.binding.Binding r12;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;
        com.hp.hpl.jena.query.QuerySolution $r6, $r11;
        com.hp.hpl.jena.sparql.engine.QueryEngineFactory $r7;
        com.hp.hpl.jena.util.FileManager $r2;
        com.hp.hpl.jena.query.Dataset $r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.Plan plan>;

        if $r1 != null goto label3;

        $r4 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Dataset dataset>;

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Query query>;

        $r2 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.util.FileManager fileManager>;

        $r5 = staticinvoke <com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.core.DatasetGraph prepareDataset(com.hp.hpl.jena.query.Dataset,com.hp.hpl.jena.query.Query,com.hp.hpl.jena.util.FileManager)>($r4, $r3, $r2);

        r12 = null;

        $r6 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.QuerySolution initialBinding>;

        if $r6 == null goto label1;

        $r11 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.QuerySolution initialBinding>;

        r12 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingUtils: com.hp.hpl.jena.sparql.engine.binding.Binding asBinding(com.hp.hpl.jena.query.QuerySolution)>($r11);

     label1:
        if r12 != null goto label2;

        r12 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingRoot: com.hp.hpl.jena.sparql.engine.binding.Binding create()>();

     label2:
        $r7 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryEngineFactory qeFactory>;

        $r8 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Query query>;

        $r9 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.util.Context getContext()>();

        $r10 = interfaceinvoke $r7.<com.hp.hpl.jena.sparql.engine.QueryEngineFactory: com.hp.hpl.jena.sparql.engine.Plan create(com.hp.hpl.jena.query.Query,com.hp.hpl.jena.sparql.core.DatasetGraph,com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.util.Context)>($r8, $r5, r12, $r9);

        r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.Plan plan> = $r10;

     label3:
        $r13 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.Plan plan>;

        return $r13;
    }

    private void insertPrefixesInto(com.hp.hpl.jena.rdf.model.Model)
    {
        com.hp.hpl.jena.query.Query $r3;
        java.lang.Exception $r7;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;
        com.hp.hpl.jena.rdf.model.Model r2, $r6;
        com.hp.hpl.jena.query.Dataset $r1, $r5;
        java.lang.StringBuilder $r8, $r9, $r11;
        java.lang.String $r10, $r12;
        com.hp.hpl.jena.shared.PrefixMapping $r4;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Model;

     label1:
        $r1 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Dataset dataset>;

        if $r1 == null goto label2;

        $r5 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Dataset dataset>;

        $r6 = interfaceinvoke $r5.<com.hp.hpl.jena.query.Dataset: com.hp.hpl.jena.rdf.model.Model getDefaultModel()>();

        interfaceinvoke r2.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.shared.PrefixMapping setNsPrefixes(com.hp.hpl.jena.shared.PrefixMapping)>($r6);

     label2:
        $r3 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Query query>;

        $r4 = virtualinvoke $r3.<com.hp.hpl.jena.query.Query: com.hp.hpl.jena.shared.PrefixMapping getPrefixMapping()>();

        interfaceinvoke r2.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.shared.PrefixMapping setNsPrefixes(com.hp.hpl.jena.shared.PrefixMapping)>($r4);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in insertPrefixes: ");

        $r10 = virtualinvoke $r7.<java.lang.Exception: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String,java.lang.Throwable)>(r0, $r12, $r7);

     label5:
        return;

        catch java.lang.Exception from label1 to label3 with label4;
    }

    private static java.lang.String labelForQuery(com.hp.hpl.jena.query.Query)
    {
        com.hp.hpl.jena.query.Query r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: com.hp.hpl.jena.query.Query;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.query.Query: boolean isSelectType()>();

        if $z0 == 0 goto label1;

        return "SELECT";

     label1:
        $z1 = virtualinvoke r0.<com.hp.hpl.jena.query.Query: boolean isConstructType()>();

        if $z1 == 0 goto label2;

        return "CONSTRUCT";

     label2:
        $z2 = virtualinvoke r0.<com.hp.hpl.jena.query.Query: boolean isDescribeType()>();

        if $z2 == 0 goto label3;

        return "DESCRIBE";

     label3:
        $z3 = virtualinvoke r0.<com.hp.hpl.jena.query.Query: boolean isAskType()>();

        if $z3 == 0 goto label4;

        return "ASK";

     label4:
        return "<<unknown>>";
    }

    public com.hp.hpl.jena.sparql.util.Context getContext()
    {
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;
        com.hp.hpl.jena.sparql.util.Context $r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.util.Context context>;

        return $r1;
    }

    public com.hp.hpl.jena.query.Dataset getDataset()
    {
        com.hp.hpl.jena.query.Dataset $r1;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Dataset dataset>;

        return $r1;
    }

    public com.hp.hpl.jena.query.Query getQuery()
    {
        com.hp.hpl.jena.query.Query $r1;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.Query query>;

        return $r1;
    }

    private static com.hp.hpl.jena.sparql.core.DatasetGraph prepareDataset(com.hp.hpl.jena.query.Dataset, com.hp.hpl.jena.query.Query, com.hp.hpl.jena.util.FileManager)
    {
        com.hp.hpl.jena.query.Query r1;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r5, $r7;
        com.hp.hpl.jena.sparql.core.DatasetDescription $r3;
        com.hp.hpl.jena.util.FileManager r4;
        com.hp.hpl.jena.query.QueryExecException $r6;
        com.hp.hpl.jena.query.Dataset r0;
        java.lang.String $r2, r8;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.query.Dataset;

        r1 := @parameter1: com.hp.hpl.jena.query.Query;

        r4 := @parameter2: com.hp.hpl.jena.util.FileManager;

        if r0 == null goto label1;

        $r7 = interfaceinvoke r0.<com.hp.hpl.jena.query.Dataset: com.hp.hpl.jena.sparql.core.DatasetGraph asDatasetGraph()>();

        return $r7;

     label1:
        $z0 = virtualinvoke r1.<com.hp.hpl.jena.query.Query: boolean hasDatasetDescription()>();

        if $z0 != 0 goto label2;

        $r6 = new com.hp.hpl.jena.query.QueryExecException;

        specialinvoke $r6.<com.hp.hpl.jena.query.QueryExecException: void <init>(java.lang.String)>("No dataset description for query");

        throw $r6;

     label2:
        $r2 = virtualinvoke r1.<com.hp.hpl.jena.query.Query: java.lang.String getBaseURI()>();

        r8 = $r2;

        if $r2 != null goto label3;

        r8 = staticinvoke <com.hp.hpl.jena.n3.IRIResolver: java.lang.String chooseBaseURI()>();

     label3:
        $r3 = virtualinvoke r1.<com.hp.hpl.jena.query.Query: com.hp.hpl.jena.sparql.core.DatasetDescription getDatasetDescription()>();

        $r5 = staticinvoke <com.hp.hpl.jena.sparql.util.DatasetUtils: com.hp.hpl.jena.sparql.core.DatasetGraph createDatasetGraph(com.hp.hpl.jena.sparql.core.DatasetDescription,com.hp.hpl.jena.util.FileManager,java.lang.String)>($r3, r4, r8);

        return $r5;
    }

    public void setFileManager(com.hp.hpl.jena.util.FileManager)
    {
        com.hp.hpl.jena.util.FileManager r1;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        r1 := @parameter0: com.hp.hpl.jena.util.FileManager;

        r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.util.FileManager fileManager> = r1;

        return;
    }

    public void setInitialBinding(com.hp.hpl.jena.query.QuerySolution)
    {
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;
        com.hp.hpl.jena.query.QuerySolution r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        r1 := @parameter0: com.hp.hpl.jena.query.QuerySolution;

        r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.query.QuerySolution initialBinding> = r1;

        return;
    }

    public void setInitialBindings(com.hp.hpl.jena.query.ResultSet)
    {
        java.lang.UnsupportedOperationException $r0;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r1;
        com.hp.hpl.jena.query.ResultSet r2;

        r1 := @this: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        r2 := @parameter0: com.hp.hpl.jena.query.ResultSet;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("setInitialBindings(ResultSet)");

        throw $r0;
    }

    static java.lang.Object access$000(com.hp.hpl.jena.sparql.engine.QueryExecutionBase)
    {
        java.lang.Object $r1;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: java.lang.Object lockTimeout>;

        return $r1;
    }

    static com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback access$100(com.hp.hpl.jena.sparql.engine.QueryExecutionBase)
    {
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback $r1;

        r0 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback expectedCallback>;

        return $r1;
    }

    static com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback access$102(com.hp.hpl.jena.sparql.engine.QueryExecutionBase, com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback)
    {
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback r1;

        r0 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        r1 := @parameter1: com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback;

        r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback expectedCallback> = r1;

        return r1;
    }

    static com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback access$200(com.hp.hpl.jena.sparql.engine.QueryExecutionBase)
    {
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback $r1;

        r0 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback timeout2Callback>;

        return $r1;
    }

    static boolean access$300(com.hp.hpl.jena.sparql.engine.QueryExecutionBase)
    {
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        $z0 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: boolean isCancelled>;

        return $z0;
    }

    static com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback access$400(com.hp.hpl.jena.sparql.engine.QueryExecutionBase)
    {
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback $r1;

        r0 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback timeout1Callback>;

        return $r1;
    }

    static org.apache.jena.atlas.lib.AlarmClock access$500(com.hp.hpl.jena.sparql.engine.QueryExecutionBase)
    {
        org.apache.jena.atlas.lib.AlarmClock $r1;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: org.apache.jena.atlas.lib.AlarmClock alarmClock>;

        return $r1;
    }

    static com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback access$402(com.hp.hpl.jena.sparql.engine.QueryExecutionBase, com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback)
    {
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback r1;

        r0 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        r1 := @parameter1: com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback;

        r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: com.hp.hpl.jena.sparql.engine.QueryExecutionBase$TimeoutCallback timeout1Callback> = r1;

        return r1;
    }

    static long access$600(com.hp.hpl.jena.sparql.engine.QueryExecutionBase)
    {
        long $l0;
        com.hp.hpl.jena.sparql.engine.QueryExecutionBase r0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryExecutionBase;

        $l0 = r0.<com.hp.hpl.jena.sparql.engine.QueryExecutionBase: long timeout2>;

        return $l0;
    }

    public static void <clinit>()
    {
        <com.hp.hpl.jena.sparql.engine.QueryExecutionBase: long TIMEOUT_INF> = -2L;

        <com.hp.hpl.jena.sparql.engine.QueryExecutionBase: long TIMEOUT_UNSET> = -1L;

        return;
    }
}
