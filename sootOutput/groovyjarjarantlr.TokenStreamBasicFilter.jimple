public class groovyjarjarantlr.TokenStreamBasicFilter extends java.lang.Object implements groovyjarjarantlr.TokenStream, groovyjarjarantlr.ASdebug.IASDebugStream
{
    protected groovyjarjarantlr.collections.impl.BitSet discardMask;
    protected groovyjarjarantlr.TokenStream input;

    public void <init>(groovyjarjarantlr.TokenStream)
    {
        groovyjarjarantlr.TokenStreamBasicFilter r0;
        groovyjarjarantlr.TokenStream r1;
        groovyjarjarantlr.collections.impl.BitSet $r2;

        r0 := @this: groovyjarjarantlr.TokenStreamBasicFilter;

        r1 := @parameter0: groovyjarjarantlr.TokenStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<groovyjarjarantlr.TokenStreamBasicFilter: groovyjarjarantlr.TokenStream input> = r1;

        $r2 = new groovyjarjarantlr.collections.impl.BitSet;

        specialinvoke $r2.<groovyjarjarantlr.collections.impl.BitSet: void <init>()>();

        r0.<groovyjarjarantlr.TokenStreamBasicFilter: groovyjarjarantlr.collections.impl.BitSet discardMask> = $r2;

        return;
    }

    public void discard(int)
    {
        int i0;
        groovyjarjarantlr.TokenStreamBasicFilter r0;
        groovyjarjarantlr.collections.impl.BitSet $r1;

        r0 := @this: groovyjarjarantlr.TokenStreamBasicFilter;

        i0 := @parameter0: int;

        $r1 = r0.<groovyjarjarantlr.TokenStreamBasicFilter: groovyjarjarantlr.collections.impl.BitSet discardMask>;

        virtualinvoke $r1.<groovyjarjarantlr.collections.impl.BitSet: void add(int)>(i0);

        return;
    }

    public void discard(groovyjarjarantlr.collections.impl.BitSet)
    {
        groovyjarjarantlr.TokenStreamBasicFilter r0;
        groovyjarjarantlr.collections.impl.BitSet r1;

        r0 := @this: groovyjarjarantlr.TokenStreamBasicFilter;

        r1 := @parameter0: groovyjarjarantlr.collections.impl.BitSet;

        r0.<groovyjarjarantlr.TokenStreamBasicFilter: groovyjarjarantlr.collections.impl.BitSet discardMask> = r1;

        return;
    }

    public groovyjarjarantlr.Token nextToken() throws groovyjarjarantlr.TokenStreamException
    {
        groovyjarjarantlr.TokenStreamBasicFilter r0;
        groovyjarjarantlr.TokenStream $r1, $r3;
        int $i0;
        groovyjarjarantlr.collections.impl.BitSet $r2;
        groovyjarjarantlr.Token r4;
        boolean $z0;

        r0 := @this: groovyjarjarantlr.TokenStreamBasicFilter;

        $r1 = r0.<groovyjarjarantlr.TokenStreamBasicFilter: groovyjarjarantlr.TokenStream input>;

        r4 = interfaceinvoke $r1.<groovyjarjarantlr.TokenStream: groovyjarjarantlr.Token nextToken()>();

     label1:
        if r4 == null goto label2;

        $r2 = r0.<groovyjarjarantlr.TokenStreamBasicFilter: groovyjarjarantlr.collections.impl.BitSet discardMask>;

        $i0 = virtualinvoke r4.<groovyjarjarantlr.Token: int getType()>();

        $z0 = virtualinvoke $r2.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i0);

        if $z0 == 0 goto label2;

        $r3 = r0.<groovyjarjarantlr.TokenStreamBasicFilter: groovyjarjarantlr.TokenStream input>;

        r4 = interfaceinvoke $r3.<groovyjarjarantlr.TokenStream: groovyjarjarantlr.Token nextToken()>();

        goto label1;

     label2:
        return r4;
    }

    public java.lang.String getEntireText()
    {
        groovyjarjarantlr.TokenStreamBasicFilter r0;
        java.lang.String $r2;
        groovyjarjarantlr.TokenStream $r1;

        r0 := @this: groovyjarjarantlr.TokenStreamBasicFilter;

        $r1 = r0.<groovyjarjarantlr.TokenStreamBasicFilter: groovyjarjarantlr.TokenStream input>;

        $r2 = staticinvoke <groovyjarjarantlr.ASdebug.ASDebugStream: java.lang.String getEntireText(groovyjarjarantlr.TokenStream)>($r1);

        return $r2;
    }

    public groovyjarjarantlr.ASdebug.TokenOffsetInfo getOffsetInfo(groovyjarjarantlr.Token)
    {
        groovyjarjarantlr.TokenStreamBasicFilter r0;
        groovyjarjarantlr.TokenStream $r2;
        groovyjarjarantlr.ASdebug.TokenOffsetInfo $r3;
        groovyjarjarantlr.Token r1;

        r0 := @this: groovyjarjarantlr.TokenStreamBasicFilter;

        r1 := @parameter0: groovyjarjarantlr.Token;

        $r2 = r0.<groovyjarjarantlr.TokenStreamBasicFilter: groovyjarjarantlr.TokenStream input>;

        $r3 = staticinvoke <groovyjarjarantlr.ASdebug.ASDebugStream: groovyjarjarantlr.ASdebug.TokenOffsetInfo getOffsetInfo(groovyjarjarantlr.TokenStream,groovyjarjarantlr.Token)>($r2, r1);

        return $r3;
    }
}
