public class org.springframework.format.number.PercentFormatter extends org.springframework.format.number.AbstractNumberFormatter
{

    public void <init>()
    {
        org.springframework.format.number.PercentFormatter r0;

        r0 := @this: org.springframework.format.number.PercentFormatter;

        specialinvoke r0.<org.springframework.format.number.AbstractNumberFormatter: void <init>()>();

        return;
    }

    protected java.text.NumberFormat getNumberFormat(java.util.Locale)
    {
        java.util.Locale r0;
        java.text.DecimalFormat $r2;
        java.text.NumberFormat $r1;
        boolean $z0;
        org.springframework.format.number.PercentFormatter r3;

        r3 := @this: org.springframework.format.number.PercentFormatter;

        r0 := @parameter0: java.util.Locale;

        $r1 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getPercentInstance(java.util.Locale)>(r0);

        $z0 = $r1 instanceof java.text.DecimalFormat;

        if $z0 == 0 goto label1;

        $r2 = (java.text.DecimalFormat) $r1;

        virtualinvoke $r2.<java.text.DecimalFormat: void setParseBigDecimal(boolean)>(1);

     label1:
        return $r1;
    }
}
