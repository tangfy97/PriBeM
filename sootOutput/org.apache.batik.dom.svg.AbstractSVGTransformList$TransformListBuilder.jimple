public class org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder extends java.lang.Object implements org.apache.batik.parser.TransformListHandler
{
    protected org.apache.batik.dom.svg.ListHandler listHandler;
    private final org.apache.batik.dom.svg.AbstractSVGTransformList this$0;

    public void <init>(org.apache.batik.dom.svg.AbstractSVGTransformList, org.apache.batik.dom.svg.ListHandler)
    {
        org.apache.batik.dom.svg.ListHandler r2;
        org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder r0;
        org.apache.batik.dom.svg.AbstractSVGTransformList r1;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder;

        r1 := @parameter0: org.apache.batik.dom.svg.AbstractSVGTransformList;

        r2 := @parameter1: org.apache.batik.dom.svg.ListHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder: org.apache.batik.dom.svg.AbstractSVGTransformList this$0> = r1;

        r0.<org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder: org.apache.batik.dom.svg.ListHandler listHandler> = r2;

        return;
    }

    public void startTransformList() throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.dom.svg.ListHandler $r1;
        org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder;

        $r1 = r0.<org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder: org.apache.batik.dom.svg.ListHandler listHandler>;

        interfaceinvoke $r1.<org.apache.batik.dom.svg.ListHandler: void startList()>();

        return;
    }

    public void matrix(float, float, float, float, float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.dom.svg.ListHandler $r3;
        org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder r1;
        org.apache.batik.dom.svg.AbstractSVGTransformList $r2;
        float f0, f1, f2, f3, f4, f5;
        org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem $r0;

        r1 := @this: org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 := @parameter4: float;

        f5 := @parameter5: float;

        $r0 = new org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem;

        $r2 = r1.<org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder: org.apache.batik.dom.svg.AbstractSVGTransformList this$0>;

        specialinvoke $r0.<org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem: void <init>(org.apache.batik.dom.svg.AbstractSVGTransformList)>($r2);

        virtualinvoke $r0.<org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem: void matrix(float,float,float,float,float,float)>(f0, f1, f2, f3, f4, f5);

        $r3 = r1.<org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder: org.apache.batik.dom.svg.ListHandler listHandler>;

        interfaceinvoke $r3.<org.apache.batik.dom.svg.ListHandler: void item(org.apache.batik.dom.svg.SVGItem)>($r0);

        return;
    }

    public void rotate(float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.dom.svg.ListHandler $r3;
        org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder r1;
        float f0;
        org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem $r0;
        org.apache.batik.dom.svg.AbstractSVGTransformList $r2;

        r1 := @this: org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder;

        f0 := @parameter0: float;

        $r0 = new org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem;

        $r2 = r1.<org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder: org.apache.batik.dom.svg.AbstractSVGTransformList this$0>;

        specialinvoke $r0.<org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem: void <init>(org.apache.batik.dom.svg.AbstractSVGTransformList)>($r2);

        virtualinvoke $r0.<org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem: void rotate(float)>(f0);

        $r3 = r1.<org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder: org.apache.batik.dom.svg.ListHandler listHandler>;

        interfaceinvoke $r3.<org.apache.batik.dom.svg.ListHandler: void item(org.apache.batik.dom.svg.SVGItem)>($r0);

        return;
    }

    public void rotate(float, float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.dom.svg.ListHandler $r3;
        org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder r1;
        float f0, f1, f2;
        org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem $r0;
        org.apache.batik.dom.svg.AbstractSVGTransformList $r2;

        r1 := @this: org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $r0 = new org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem;

        $r2 = r1.<org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder: org.apache.batik.dom.svg.AbstractSVGTransformList this$0>;

        specialinvoke $r0.<org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem: void <init>(org.apache.batik.dom.svg.AbstractSVGTransformList)>($r2);

        virtualinvoke $r0.<org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem: void setRotate(float,float,float)>(f0, f1, f2);

        $r3 = r1.<org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder: org.apache.batik.dom.svg.ListHandler listHandler>;

        interfaceinvoke $r3.<org.apache.batik.dom.svg.ListHandler: void item(org.apache.batik.dom.svg.SVGItem)>($r0);

        return;
    }

    public void translate(float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.dom.svg.ListHandler $r3;
        org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder r1;
        float f0;
        org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem $r0;
        org.apache.batik.dom.svg.AbstractSVGTransformList $r2;

        r1 := @this: org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder;

        f0 := @parameter0: float;

        $r0 = new org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem;

        $r2 = r1.<org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder: org.apache.batik.dom.svg.AbstractSVGTransformList this$0>;

        specialinvoke $r0.<org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem: void <init>(org.apache.batik.dom.svg.AbstractSVGTransformList)>($r2);

        virtualinvoke $r0.<org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem: void translate(float)>(f0);

        $r3 = r1.<org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder: org.apache.batik.dom.svg.ListHandler listHandler>;

        interfaceinvoke $r3.<org.apache.batik.dom.svg.ListHandler: void item(org.apache.batik.dom.svg.SVGItem)>($r0);

        return;
    }

    public void translate(float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.dom.svg.ListHandler $r3;
        org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder r1;
        float f0, f1;
        org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem $r0;
        org.apache.batik.dom.svg.AbstractSVGTransformList $r2;

        r1 := @this: org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r0 = new org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem;

        $r2 = r1.<org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder: org.apache.batik.dom.svg.AbstractSVGTransformList this$0>;

        specialinvoke $r0.<org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem: void <init>(org.apache.batik.dom.svg.AbstractSVGTransformList)>($r2);

        virtualinvoke $r0.<org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem: void setTranslate(float,float)>(f0, f1);

        $r3 = r1.<org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder: org.apache.batik.dom.svg.ListHandler listHandler>;

        interfaceinvoke $r3.<org.apache.batik.dom.svg.ListHandler: void item(org.apache.batik.dom.svg.SVGItem)>($r0);

        return;
    }

    public void scale(float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.dom.svg.ListHandler $r3;
        org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder r1;
        float f0;
        org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem $r0;
        org.apache.batik.dom.svg.AbstractSVGTransformList $r2;

        r1 := @this: org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder;

        f0 := @parameter0: float;

        $r0 = new org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem;

        $r2 = r1.<org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder: org.apache.batik.dom.svg.AbstractSVGTransformList this$0>;

        specialinvoke $r0.<org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem: void <init>(org.apache.batik.dom.svg.AbstractSVGTransformList)>($r2);

        virtualinvoke $r0.<org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem: void scale(float)>(f0);

        $r3 = r1.<org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder: org.apache.batik.dom.svg.ListHandler listHandler>;

        interfaceinvoke $r3.<org.apache.batik.dom.svg.ListHandler: void item(org.apache.batik.dom.svg.SVGItem)>($r0);

        return;
    }

    public void scale(float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.dom.svg.ListHandler $r3;
        org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder r1;
        float f0, f1;
        org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem $r0;
        org.apache.batik.dom.svg.AbstractSVGTransformList $r2;

        r1 := @this: org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r0 = new org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem;

        $r2 = r1.<org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder: org.apache.batik.dom.svg.AbstractSVGTransformList this$0>;

        specialinvoke $r0.<org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem: void <init>(org.apache.batik.dom.svg.AbstractSVGTransformList)>($r2);

        virtualinvoke $r0.<org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem: void setScale(float,float)>(f0, f1);

        $r3 = r1.<org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder: org.apache.batik.dom.svg.ListHandler listHandler>;

        interfaceinvoke $r3.<org.apache.batik.dom.svg.ListHandler: void item(org.apache.batik.dom.svg.SVGItem)>($r0);

        return;
    }

    public void skewX(float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.dom.svg.ListHandler $r3;
        org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder r1;
        float f0;
        org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem $r0;
        org.apache.batik.dom.svg.AbstractSVGTransformList $r2;

        r1 := @this: org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder;

        f0 := @parameter0: float;

        $r0 = new org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem;

        $r2 = r1.<org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder: org.apache.batik.dom.svg.AbstractSVGTransformList this$0>;

        specialinvoke $r0.<org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem: void <init>(org.apache.batik.dom.svg.AbstractSVGTransformList)>($r2);

        virtualinvoke $r0.<org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem: void setSkewX(float)>(f0);

        $r3 = r1.<org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder: org.apache.batik.dom.svg.ListHandler listHandler>;

        interfaceinvoke $r3.<org.apache.batik.dom.svg.ListHandler: void item(org.apache.batik.dom.svg.SVGItem)>($r0);

        return;
    }

    public void skewY(float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.dom.svg.ListHandler $r3;
        org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder r1;
        float f0;
        org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem $r0;
        org.apache.batik.dom.svg.AbstractSVGTransformList $r2;

        r1 := @this: org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder;

        f0 := @parameter0: float;

        $r0 = new org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem;

        $r2 = r1.<org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder: org.apache.batik.dom.svg.AbstractSVGTransformList this$0>;

        specialinvoke $r0.<org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem: void <init>(org.apache.batik.dom.svg.AbstractSVGTransformList)>($r2);

        virtualinvoke $r0.<org.apache.batik.dom.svg.AbstractSVGTransformList$SVGTransformItem: void setSkewY(float)>(f0);

        $r3 = r1.<org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder: org.apache.batik.dom.svg.ListHandler listHandler>;

        interfaceinvoke $r3.<org.apache.batik.dom.svg.ListHandler: void item(org.apache.batik.dom.svg.SVGItem)>($r0);

        return;
    }

    public void endTransformList() throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.dom.svg.ListHandler $r1;
        org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder;

        $r1 = r0.<org.apache.batik.dom.svg.AbstractSVGTransformList$TransformListBuilder: org.apache.batik.dom.svg.ListHandler listHandler>;

        interfaceinvoke $r1.<org.apache.batik.dom.svg.ListHandler: void endList()>();

        return;
    }
}
