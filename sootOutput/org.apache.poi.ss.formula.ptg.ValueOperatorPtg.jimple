public abstract class org.apache.poi.ss.formula.ptg.ValueOperatorPtg extends org.apache.poi.ss.formula.ptg.OperationPtg
{

    public void <init>()
    {
        org.apache.poi.ss.formula.ptg.ValueOperatorPtg r0;

        r0 := @this: org.apache.poi.ss.formula.ptg.ValueOperatorPtg;

        specialinvoke r0.<org.apache.poi.ss.formula.ptg.OperationPtg: void <init>()>();

        return;
    }

    public final boolean isBaseToken()
    {
        org.apache.poi.ss.formula.ptg.ValueOperatorPtg r0;

        r0 := @this: org.apache.poi.ss.formula.ptg.ValueOperatorPtg;

        return 1;
    }

    public final byte getDefaultOperandClass()
    {
        org.apache.poi.ss.formula.ptg.ValueOperatorPtg r0;

        r0 := @this: org.apache.poi.ss.formula.ptg.ValueOperatorPtg;

        return 32;
    }

    public void write(org.apache.poi.util.LittleEndianOutput)
    {
        org.apache.poi.ss.formula.ptg.ValueOperatorPtg r1;
        byte $b0;
        org.apache.poi.util.LittleEndianOutput r0;
        int $i1;

        r1 := @this: org.apache.poi.ss.formula.ptg.ValueOperatorPtg;

        r0 := @parameter0: org.apache.poi.util.LittleEndianOutput;

        $b0 = virtualinvoke r1.<org.apache.poi.ss.formula.ptg.ValueOperatorPtg: byte getSid()>();

        $i1 = (int) $b0;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeByte(int)>($i1);

        return;
    }

    protected abstract byte getSid();

    public final int getSize()
    {
        org.apache.poi.ss.formula.ptg.ValueOperatorPtg r0;

        r0 := @this: org.apache.poi.ss.formula.ptg.ValueOperatorPtg;

        return 1;
    }

    public final java.lang.String toFormulaString()
    {
        java.lang.RuntimeException $r0;
        org.apache.poi.ss.formula.ptg.ValueOperatorPtg r1;

        r1 := @this: org.apache.poi.ss.formula.ptg.ValueOperatorPtg;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("toFormulaString(String[] operands) should be used for subclasses of OperationPtgs");

        throw $r0;
    }
}
