public class org.apache.batik.svggen.SVGGeneratorContext extends java.lang.Object implements org.apache.batik.svggen.ErrorConstants
{
    org.w3c.dom.Document domFactory;
    org.apache.batik.svggen.ImageHandler imageHandler;
    org.apache.batik.svggen.GenericImageHandler genericImageHandler;
    org.apache.batik.svggen.ExtensionHandler extensionHandler;
    org.apache.batik.svggen.SVGIDGenerator idGenerator;
    org.apache.batik.svggen.StyleHandler styleHandler;
    java.lang.String generatorComment;
    org.apache.batik.svggen.ErrorHandler errorHandler;
    boolean svgFont;
    org.apache.batik.svggen.SVGGeneratorContext$GraphicContextDefaults gcDefaults;
    int precision;
    protected java.text.DecimalFormat decimalFormat;
    protected static java.text.DecimalFormatSymbols dsf;
    protected static java.text.DecimalFormat[] decimalFormats;

    protected void <init>(org.w3c.dom.Document)
    {
        org.apache.batik.svggen.SVGGeneratorContext r0;
        org.w3c.dom.Document r3;
        int $i0;
        java.text.DecimalFormat $r2;
        java.text.DecimalFormat[] $r1;

        r0 := @this: org.apache.batik.svggen.SVGGeneratorContext;

        r3 := @parameter0: org.w3c.dom.Document;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.svggen.SVGGeneratorContext: boolean svgFont> = 0;

        r0.<org.apache.batik.svggen.SVGGeneratorContext: int precision> = 4;

        $r1 = <org.apache.batik.svggen.SVGGeneratorContext: java.text.DecimalFormat[] decimalFormats>;

        $i0 = r0.<org.apache.batik.svggen.SVGGeneratorContext: int precision>;

        $r2 = $r1[$i0];

        r0.<org.apache.batik.svggen.SVGGeneratorContext: java.text.DecimalFormat decimalFormat> = $r2;

        virtualinvoke r0.<org.apache.batik.svggen.SVGGeneratorContext: void setDOMFactory(org.w3c.dom.Document)>(r3);

        return;
    }

    public static org.apache.batik.svggen.SVGGeneratorContext createDefault(org.w3c.dom.Document)
    {
        org.apache.batik.svggen.DefaultStyleHandler $r5;
        org.apache.batik.svggen.DefaultErrorHandler $r6;
        org.apache.batik.svggen.ImageHandlerBase64Encoder $r4;
        org.apache.batik.svggen.SVGGeneratorContext $r0;
        org.w3c.dom.Document r1;
        org.apache.batik.svggen.DefaultExtensionHandler $r3;
        org.apache.batik.svggen.SVGIDGenerator $r2;

        r1 := @parameter0: org.w3c.dom.Document;

        $r0 = new org.apache.batik.svggen.SVGGeneratorContext;

        specialinvoke $r0.<org.apache.batik.svggen.SVGGeneratorContext: void <init>(org.w3c.dom.Document)>(r1);

        $r2 = new org.apache.batik.svggen.SVGIDGenerator;

        specialinvoke $r2.<org.apache.batik.svggen.SVGIDGenerator: void <init>()>();

        virtualinvoke $r0.<org.apache.batik.svggen.SVGGeneratorContext: void setIDGenerator(org.apache.batik.svggen.SVGIDGenerator)>($r2);

        $r3 = new org.apache.batik.svggen.DefaultExtensionHandler;

        specialinvoke $r3.<org.apache.batik.svggen.DefaultExtensionHandler: void <init>()>();

        virtualinvoke $r0.<org.apache.batik.svggen.SVGGeneratorContext: void setExtensionHandler(org.apache.batik.svggen.ExtensionHandler)>($r3);

        $r4 = new org.apache.batik.svggen.ImageHandlerBase64Encoder;

        specialinvoke $r4.<org.apache.batik.svggen.ImageHandlerBase64Encoder: void <init>()>();

        virtualinvoke $r0.<org.apache.batik.svggen.SVGGeneratorContext: void setImageHandler(org.apache.batik.svggen.ImageHandler)>($r4);

        $r5 = new org.apache.batik.svggen.DefaultStyleHandler;

        specialinvoke $r5.<org.apache.batik.svggen.DefaultStyleHandler: void <init>()>();

        virtualinvoke $r0.<org.apache.batik.svggen.SVGGeneratorContext: void setStyleHandler(org.apache.batik.svggen.StyleHandler)>($r5);

        virtualinvoke $r0.<org.apache.batik.svggen.SVGGeneratorContext: void setComment(java.lang.String)>("Generated by the Batik Graphics2D SVG Generator");

        $r6 = new org.apache.batik.svggen.DefaultErrorHandler;

        specialinvoke $r6.<org.apache.batik.svggen.DefaultErrorHandler: void <init>()>();

        virtualinvoke $r0.<org.apache.batik.svggen.SVGGeneratorContext: void setErrorHandler(org.apache.batik.svggen.ErrorHandler)>($r6);

        return $r0;
    }

    public final org.apache.batik.svggen.SVGGeneratorContext$GraphicContextDefaults getGraphicContextDefaults()
    {
        org.apache.batik.svggen.SVGGeneratorContext$GraphicContextDefaults $r1;
        org.apache.batik.svggen.SVGGeneratorContext r0;

        r0 := @this: org.apache.batik.svggen.SVGGeneratorContext;

        $r1 = r0.<org.apache.batik.svggen.SVGGeneratorContext: org.apache.batik.svggen.SVGGeneratorContext$GraphicContextDefaults gcDefaults>;

        return $r1;
    }

    public final void setGraphicContextDefaults(org.apache.batik.svggen.SVGGeneratorContext$GraphicContextDefaults)
    {
        org.apache.batik.svggen.SVGGeneratorContext$GraphicContextDefaults r1;
        org.apache.batik.svggen.SVGGeneratorContext r0;

        r0 := @this: org.apache.batik.svggen.SVGGeneratorContext;

        r1 := @parameter0: org.apache.batik.svggen.SVGGeneratorContext$GraphicContextDefaults;

        r0.<org.apache.batik.svggen.SVGGeneratorContext: org.apache.batik.svggen.SVGGeneratorContext$GraphicContextDefaults gcDefaults> = r1;

        return;
    }

    public final org.apache.batik.svggen.SVGIDGenerator getIDGenerator()
    {
        org.apache.batik.svggen.SVGIDGenerator $r1;
        org.apache.batik.svggen.SVGGeneratorContext r0;

        r0 := @this: org.apache.batik.svggen.SVGGeneratorContext;

        $r1 = r0.<org.apache.batik.svggen.SVGGeneratorContext: org.apache.batik.svggen.SVGIDGenerator idGenerator>;

        return $r1;
    }

    public final void setIDGenerator(org.apache.batik.svggen.SVGIDGenerator)
    {
        org.apache.batik.svggen.SVGIDGenerator r0;
        org.apache.batik.svggen.SVGGraphics2DRuntimeException $r2;
        org.apache.batik.svggen.SVGGeneratorContext r1;

        r1 := @this: org.apache.batik.svggen.SVGGeneratorContext;

        r0 := @parameter0: org.apache.batik.svggen.SVGIDGenerator;

        if r0 != null goto label1;

        $r2 = new org.apache.batik.svggen.SVGGraphics2DRuntimeException;

        specialinvoke $r2.<org.apache.batik.svggen.SVGGraphics2DRuntimeException: void <init>(java.lang.String)>("idGenerator should not be null");

        throw $r2;

     label1:
        r1.<org.apache.batik.svggen.SVGGeneratorContext: org.apache.batik.svggen.SVGIDGenerator idGenerator> = r0;

        return;
    }

    public final org.w3c.dom.Document getDOMFactory()
    {
        org.apache.batik.svggen.SVGGeneratorContext r0;
        org.w3c.dom.Document $r1;

        r0 := @this: org.apache.batik.svggen.SVGGeneratorContext;

        $r1 = r0.<org.apache.batik.svggen.SVGGeneratorContext: org.w3c.dom.Document domFactory>;

        return $r1;
    }

    public final void setDOMFactory(org.w3c.dom.Document)
    {
        org.apache.batik.svggen.SVGGraphics2DRuntimeException $r2;
        org.w3c.dom.Document r0;
        org.apache.batik.svggen.SVGGeneratorContext r1;

        r1 := @this: org.apache.batik.svggen.SVGGeneratorContext;

        r0 := @parameter0: org.w3c.dom.Document;

        if r0 != null goto label1;

        $r2 = new org.apache.batik.svggen.SVGGraphics2DRuntimeException;

        specialinvoke $r2.<org.apache.batik.svggen.SVGGraphics2DRuntimeException: void <init>(java.lang.String)>("domFactory should not be null");

        throw $r2;

     label1:
        r1.<org.apache.batik.svggen.SVGGeneratorContext: org.w3c.dom.Document domFactory> = r0;

        return;
    }

    public final org.apache.batik.svggen.ExtensionHandler getExtensionHandler()
    {
        org.apache.batik.svggen.ExtensionHandler $r1;
        org.apache.batik.svggen.SVGGeneratorContext r0;

        r0 := @this: org.apache.batik.svggen.SVGGeneratorContext;

        $r1 = r0.<org.apache.batik.svggen.SVGGeneratorContext: org.apache.batik.svggen.ExtensionHandler extensionHandler>;

        return $r1;
    }

    public final void setExtensionHandler(org.apache.batik.svggen.ExtensionHandler)
    {
        org.apache.batik.svggen.ExtensionHandler r0;
        org.apache.batik.svggen.SVGGraphics2DRuntimeException $r2;
        org.apache.batik.svggen.SVGGeneratorContext r1;

        r1 := @this: org.apache.batik.svggen.SVGGeneratorContext;

        r0 := @parameter0: org.apache.batik.svggen.ExtensionHandler;

        if r0 != null goto label1;

        $r2 = new org.apache.batik.svggen.SVGGraphics2DRuntimeException;

        specialinvoke $r2.<org.apache.batik.svggen.SVGGraphics2DRuntimeException: void <init>(java.lang.String)>("extensionHandler should not be null");

        throw $r2;

     label1:
        r1.<org.apache.batik.svggen.SVGGeneratorContext: org.apache.batik.svggen.ExtensionHandler extensionHandler> = r0;

        return;
    }

    public final org.apache.batik.svggen.ImageHandler getImageHandler()
    {
        org.apache.batik.svggen.SVGGeneratorContext r0;
        org.apache.batik.svggen.ImageHandler $r1;

        r0 := @this: org.apache.batik.svggen.SVGGeneratorContext;

        $r1 = r0.<org.apache.batik.svggen.SVGGeneratorContext: org.apache.batik.svggen.ImageHandler imageHandler>;

        return $r1;
    }

    public final void setImageHandler(org.apache.batik.svggen.ImageHandler)
    {
        org.apache.batik.svggen.SVGGeneratorContext r1;
        org.apache.batik.svggen.ImageHandler r0;
        org.apache.batik.svggen.SVGGraphics2DRuntimeException $r3;
        org.apache.batik.svggen.SimpleImageHandler $r2;

        r1 := @this: org.apache.batik.svggen.SVGGeneratorContext;

        r0 := @parameter0: org.apache.batik.svggen.ImageHandler;

        if r0 != null goto label1;

        $r3 = new org.apache.batik.svggen.SVGGraphics2DRuntimeException;

        specialinvoke $r3.<org.apache.batik.svggen.SVGGraphics2DRuntimeException: void <init>(java.lang.String)>("imageHandler should not be null");

        throw $r3;

     label1:
        r1.<org.apache.batik.svggen.SVGGeneratorContext: org.apache.batik.svggen.ImageHandler imageHandler> = r0;

        $r2 = new org.apache.batik.svggen.SimpleImageHandler;

        specialinvoke $r2.<org.apache.batik.svggen.SimpleImageHandler: void <init>(org.apache.batik.svggen.ImageHandler)>(r0);

        r1.<org.apache.batik.svggen.SVGGeneratorContext: org.apache.batik.svggen.GenericImageHandler genericImageHandler> = $r2;

        return;
    }

    public final void setGenericImageHandler(org.apache.batik.svggen.GenericImageHandler)
    {
        org.apache.batik.svggen.GenericImageHandler r0;
        org.apache.batik.svggen.SVGGraphics2DRuntimeException $r2;
        org.apache.batik.svggen.SVGGeneratorContext r1;

        r1 := @this: org.apache.batik.svggen.SVGGeneratorContext;

        r0 := @parameter0: org.apache.batik.svggen.GenericImageHandler;

        if r0 != null goto label1;

        $r2 = new org.apache.batik.svggen.SVGGraphics2DRuntimeException;

        specialinvoke $r2.<org.apache.batik.svggen.SVGGraphics2DRuntimeException: void <init>(java.lang.String)>("imageHandler should not be null");

        throw $r2;

     label1:
        r1.<org.apache.batik.svggen.SVGGeneratorContext: org.apache.batik.svggen.ImageHandler imageHandler> = null;

        r1.<org.apache.batik.svggen.SVGGeneratorContext: org.apache.batik.svggen.GenericImageHandler genericImageHandler> = r0;

        return;
    }

    public final org.apache.batik.svggen.StyleHandler getStyleHandler()
    {
        org.apache.batik.svggen.StyleHandler $r1;
        org.apache.batik.svggen.SVGGeneratorContext r0;

        r0 := @this: org.apache.batik.svggen.SVGGeneratorContext;

        $r1 = r0.<org.apache.batik.svggen.SVGGeneratorContext: org.apache.batik.svggen.StyleHandler styleHandler>;

        return $r1;
    }

    public final void setStyleHandler(org.apache.batik.svggen.StyleHandler)
    {
        org.apache.batik.svggen.StyleHandler r0;
        org.apache.batik.svggen.SVGGraphics2DRuntimeException $r2;
        org.apache.batik.svggen.SVGGeneratorContext r1;

        r1 := @this: org.apache.batik.svggen.SVGGeneratorContext;

        r0 := @parameter0: org.apache.batik.svggen.StyleHandler;

        if r0 != null goto label1;

        $r2 = new org.apache.batik.svggen.SVGGraphics2DRuntimeException;

        specialinvoke $r2.<org.apache.batik.svggen.SVGGraphics2DRuntimeException: void <init>(java.lang.String)>("styleHandler should not be null");

        throw $r2;

     label1:
        r1.<org.apache.batik.svggen.SVGGeneratorContext: org.apache.batik.svggen.StyleHandler styleHandler> = r0;

        return;
    }

    public final java.lang.String getComment()
    {
        java.lang.String $r1;
        org.apache.batik.svggen.SVGGeneratorContext r0;

        r0 := @this: org.apache.batik.svggen.SVGGeneratorContext;

        $r1 = r0.<org.apache.batik.svggen.SVGGeneratorContext: java.lang.String generatorComment>;

        return $r1;
    }

    public final void setComment(java.lang.String)
    {
        java.lang.String r1;
        org.apache.batik.svggen.SVGGeneratorContext r0;

        r0 := @this: org.apache.batik.svggen.SVGGeneratorContext;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.batik.svggen.SVGGeneratorContext: java.lang.String generatorComment> = r1;

        return;
    }

    public final org.apache.batik.svggen.ErrorHandler getErrorHandler()
    {
        org.apache.batik.svggen.SVGGeneratorContext r0;
        org.apache.batik.svggen.ErrorHandler $r1;

        r0 := @this: org.apache.batik.svggen.SVGGeneratorContext;

        $r1 = r0.<org.apache.batik.svggen.SVGGeneratorContext: org.apache.batik.svggen.ErrorHandler errorHandler>;

        return $r1;
    }

    public final void setErrorHandler(org.apache.batik.svggen.ErrorHandler)
    {
        org.apache.batik.svggen.SVGGraphics2DRuntimeException $r2;
        org.apache.batik.svggen.SVGGeneratorContext r1;
        org.apache.batik.svggen.ErrorHandler r0;

        r1 := @this: org.apache.batik.svggen.SVGGeneratorContext;

        r0 := @parameter0: org.apache.batik.svggen.ErrorHandler;

        if r0 != null goto label1;

        $r2 = new org.apache.batik.svggen.SVGGraphics2DRuntimeException;

        specialinvoke $r2.<org.apache.batik.svggen.SVGGraphics2DRuntimeException: void <init>(java.lang.String)>("errorHandler should not be null");

        throw $r2;

     label1:
        r1.<org.apache.batik.svggen.SVGGeneratorContext: org.apache.batik.svggen.ErrorHandler errorHandler> = r0;

        return;
    }

    public final boolean isEmbeddedFontsOn()
    {
        org.apache.batik.svggen.SVGGeneratorContext r0;
        boolean $z0;

        r0 := @this: org.apache.batik.svggen.SVGGeneratorContext;

        $z0 = r0.<org.apache.batik.svggen.SVGGeneratorContext: boolean svgFont>;

        return $z0;
    }

    public final void setEmbeddedFontsOn(boolean)
    {
        org.apache.batik.svggen.SVGGeneratorContext r0;
        boolean z0;

        r0 := @this: org.apache.batik.svggen.SVGGeneratorContext;

        z0 := @parameter0: boolean;

        r0.<org.apache.batik.svggen.SVGGeneratorContext: boolean svgFont> = z0;

        return;
    }

    public final int getPrecision()
    {
        int $i0;
        org.apache.batik.svggen.SVGGeneratorContext r0;

        r0 := @this: org.apache.batik.svggen.SVGGeneratorContext;

        $i0 = r0.<org.apache.batik.svggen.SVGGeneratorContext: int precision>;

        return $i0;
    }

    public final void setPrecision(int)
    {
        org.apache.batik.svggen.SVGGeneratorContext r0;
        int i0, $i1;
        java.text.DecimalFormat $r2;
        java.text.DecimalFormat[] $r1;

        r0 := @this: org.apache.batik.svggen.SVGGeneratorContext;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        r0.<org.apache.batik.svggen.SVGGeneratorContext: int precision> = 0;

        goto label3;

     label1:
        if i0 <= 12 goto label2;

        r0.<org.apache.batik.svggen.SVGGeneratorContext: int precision> = 12;

        goto label3;

     label2:
        r0.<org.apache.batik.svggen.SVGGeneratorContext: int precision> = i0;

     label3:
        $r1 = <org.apache.batik.svggen.SVGGeneratorContext: java.text.DecimalFormat[] decimalFormats>;

        $i1 = r0.<org.apache.batik.svggen.SVGGeneratorContext: int precision>;

        $r2 = $r1[$i1];

        r0.<org.apache.batik.svggen.SVGGeneratorContext: java.text.DecimalFormat decimalFormat> = $r2;

        return;
    }

    public final java.lang.String doubleString(double)
    {
        java.text.DecimalFormat $r2;
        byte $b0, $b3;
        org.apache.batik.svggen.SVGGeneratorContext r1;
        int $i1, $i2, $i4;
        java.lang.String $r0, $r3;
        double d0, $d1, $d2;

        r1 := @this: org.apache.batik.svggen.SVGGeneratorContext;

        d0 := @parameter0: double;

        $d1 = staticinvoke <java.lang.Math: double abs(double)>(d0);

        $b0 = $d1 cmpl 1.0E8;

        $i4 = (int) $b0;

        if $i4 >= 0 goto label1;

        $i2 = (int) d0;

        $d2 = (double) $i2;

        $b3 = $d2 cmpl d0;

        if $b3 != 0 goto label2;

     label1:
        $i1 = (int) d0;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        return $r0;

     label2:
        $r2 = r1.<org.apache.batik.svggen.SVGGeneratorContext: java.text.DecimalFormat decimalFormat>;

        $r3 = virtualinvoke $r2.<java.text.NumberFormat: java.lang.String format(double)>(d0);

        return $r3;
    }

    static void <clinit>()
    {
        java.text.DecimalFormatSymbols $r0, $r4, $r12;
        java.util.Locale $r1;
        java.lang.StringBuffer $r7, $r8, $r9;
        int $i0, i1;
        java.lang.String $r10, r14;
        java.text.DecimalFormat $r3, $r11;
        java.text.DecimalFormat[] $r2, $r5, $r6, $r13;

        $r0 = new java.text.DecimalFormatSymbols;

        $r1 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r0.<java.text.DecimalFormatSymbols: void <init>(java.util.Locale)>($r1);

        <org.apache.batik.svggen.SVGGeneratorContext: java.text.DecimalFormatSymbols dsf> = $r0;

        $r2 = newarray (java.text.DecimalFormat)[13];

        <org.apache.batik.svggen.SVGGeneratorContext: java.text.DecimalFormat[] decimalFormats> = $r2;

        $r5 = <org.apache.batik.svggen.SVGGeneratorContext: java.text.DecimalFormat[] decimalFormats>;

        $r3 = new java.text.DecimalFormat;

        $r4 = <org.apache.batik.svggen.SVGGeneratorContext: java.text.DecimalFormatSymbols dsf>;

        specialinvoke $r3.<java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>("#", $r4);

        $r5[0] = $r3;

        r14 = "#.";

        i1 = 1;

        goto label2;

     label1:
        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r14);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("#");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        r14 = $r10;

        $r13 = <org.apache.batik.svggen.SVGGeneratorContext: java.text.DecimalFormat[] decimalFormats>;

        $r11 = new java.text.DecimalFormat;

        $r12 = <org.apache.batik.svggen.SVGGeneratorContext: java.text.DecimalFormatSymbols dsf>;

        specialinvoke $r11.<java.text.DecimalFormat: void <init>(java.lang.String,java.text.DecimalFormatSymbols)>($r10, $r12);

        $r13[i1] = $r11;

        i1 = i1 + 1;

     label2:
        $r6 = <org.apache.batik.svggen.SVGGeneratorContext: java.text.DecimalFormat[] decimalFormats>;

        $i0 = lengthof $r6;

        if i1 < $i0 goto label1;

        return;
    }
}
