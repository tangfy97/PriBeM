public class org.apache.http.client.entity.GzipDecompressingEntity extends org.apache.http.client.entity.DecompressingEntity
{

    public void <init>(org.apache.http.HttpEntity)
    {
        org.apache.http.HttpEntity r1;
        org.apache.http.client.entity.GzipDecompressingEntity r0;

        r0 := @this: org.apache.http.client.entity.GzipDecompressingEntity;

        r1 := @parameter0: org.apache.http.HttpEntity;

        specialinvoke r0.<org.apache.http.client.entity.DecompressingEntity: void <init>(org.apache.http.HttpEntity)>(r1);

        return;
    }

    java.io.InputStream decorate(java.io.InputStream) throws java.io.IOException
    {
        java.util.zip.GZIPInputStream $r0;
        org.apache.http.client.entity.GzipDecompressingEntity r2;
        java.io.InputStream r1;

        r2 := @this: org.apache.http.client.entity.GzipDecompressingEntity;

        r1 := @parameter0: java.io.InputStream;

        $r0 = new java.util.zip.GZIPInputStream;

        specialinvoke $r0.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>(r1);

        return $r0;
    }

    public org.apache.http.Header getContentEncoding()
    {
        org.apache.http.client.entity.GzipDecompressingEntity r0;

        r0 := @this: org.apache.http.client.entity.GzipDecompressingEntity;

        return null;
    }

    public long getContentLength()
    {
        org.apache.http.client.entity.GzipDecompressingEntity r0;

        r0 := @this: org.apache.http.client.entity.GzipDecompressingEntity;

        return -1L;
    }
}
