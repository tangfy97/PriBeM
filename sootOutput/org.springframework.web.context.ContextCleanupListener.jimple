public class org.springframework.web.context.ContextCleanupListener extends java.lang.Object implements javax.servlet.ServletContextListener
{
    private static final org.apache.commons.logging.Log logger;

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/springframework/web/context/ContextCleanupListener;");

        <org.springframework.web.context.ContextCleanupListener: org.apache.commons.logging.Log logger> = $r0;

        return;
    }

    public void <init>()
    {
        org.springframework.web.context.ContextCleanupListener r0;

        r0 := @this: org.springframework.web.context.ContextCleanupListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void contextInitialized(javax.servlet.ServletContextEvent)
    {
        org.springframework.web.context.ContextCleanupListener r0;
        javax.servlet.ServletContextEvent r1;

        r0 := @this: org.springframework.web.context.ContextCleanupListener;

        r1 := @parameter0: javax.servlet.ServletContextEvent;

        return;
    }

    public void contextDestroyed(javax.servlet.ServletContextEvent)
    {
        javax.servlet.ServletContext $r1;
        org.springframework.web.context.ContextCleanupListener r2;
        javax.servlet.ServletContextEvent r0;

        r2 := @this: org.springframework.web.context.ContextCleanupListener;

        r0 := @parameter0: javax.servlet.ServletContextEvent;

        $r1 = virtualinvoke r0.<javax.servlet.ServletContextEvent: javax.servlet.ServletContext getServletContext()>();

        staticinvoke <org.springframework.web.context.ContextCleanupListener: void cleanupAttributes(javax.servlet.ServletContext)>($r1);

        return;
    }

    static void cleanupAttributes(javax.servlet.ServletContext)
    {
        java.lang.Throwable $r6;
        java.util.Enumeration $r1;
        org.springframework.beans.factory.DisposableBean $r5;
        javax.servlet.ServletContext r0;
        java.lang.Object $r2, $r4;
        java.lang.StringBuilder $r7, $r9, $r10;
        org.apache.commons.logging.Log $r8;
        java.lang.String r3, $r11;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: javax.servlet.ServletContext;

        $r1 = interfaceinvoke r0.<javax.servlet.ServletContext: java.util.Enumeration getAttributeNames()>();

        goto label5;

     label1:
        $r2 = interfaceinvoke $r1.<java.util.Enumeration: java.lang.Object nextElement()>();

        r3 = (java.lang.String) $r2;

        $z0 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("org.springframework.");

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke r0.<javax.servlet.ServletContext: java.lang.Object getAttribute(java.lang.String)>(r3);

        $z1 = $r4 instanceof org.springframework.beans.factory.DisposableBean;

        if $z1 == 0 goto label5;

     label2:
        $r5 = (org.springframework.beans.factory.DisposableBean) $r4;

        interfaceinvoke $r5.<org.springframework.beans.factory.DisposableBean: void destroy()>();

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        $r8 = <org.springframework.web.context.ContextCleanupListener: org.apache.commons.logging.Log logger>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Couldn\'t invoke destroy method of attribute with name \'");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r11, $r6);

     label5:
        $z2 = interfaceinvoke $r1.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z2 != 0 goto label1;

        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }
}
