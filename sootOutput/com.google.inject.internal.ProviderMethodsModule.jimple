public final class com.google.inject.internal.ProviderMethodsModule extends java.lang.Object implements com.google.inject.Module
{
    private final java.lang.Object delegate;
    private final com.google.inject.TypeLiteral typeLiteral;

    private void <init>(java.lang.Object)
    {
        java.lang.Object r1, $r2, $r3;
        java.lang.Class $r4;
        com.google.inject.internal.ProviderMethodsModule r0;
        com.google.inject.TypeLiteral $r5;

        r0 := @this: com.google.inject.internal.ProviderMethodsModule;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.google.inject.internal.util.$Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "delegate");

        r0.<com.google.inject.internal.ProviderMethodsModule: java.lang.Object delegate> = $r2;

        $r3 = r0.<com.google.inject.internal.ProviderMethodsModule: java.lang.Object delegate>;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = staticinvoke <com.google.inject.TypeLiteral: com.google.inject.TypeLiteral get(java.lang.Class)>($r4);

        r0.<com.google.inject.internal.ProviderMethodsModule: com.google.inject.TypeLiteral typeLiteral> = $r5;

        return;
    }

    public static com.google.inject.Module forModule(com.google.inject.Module)
    {
        com.google.inject.Module r0, $r1;

        r0 := @parameter0: com.google.inject.Module;

        $r1 = staticinvoke <com.google.inject.internal.ProviderMethodsModule: com.google.inject.Module forObject(java.lang.Object)>(r0);

        return $r1;
    }

    public static com.google.inject.Module forObject(java.lang.Object)
    {
        com.google.inject.Module $r2;
        java.lang.Object r0;
        com.google.inject.internal.ProviderMethodsModule $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof com.google.inject.internal.ProviderMethodsModule;

        if $z0 == 0 goto label1;

        $r2 = <com.google.inject.util.Modules: com.google.inject.Module EMPTY_MODULE>;

        return $r2;

     label1:
        $r1 = new com.google.inject.internal.ProviderMethodsModule;

        specialinvoke $r1.<com.google.inject.internal.ProviderMethodsModule: void <init>(java.lang.Object)>(r0);

        return $r1;
    }

    public synchronized void configure(com.google.inject.Binder)
    {
        java.util.List $r2;
        com.google.inject.Binder r1;
        java.util.Iterator $r3;
        com.google.inject.internal.ProviderMethod r5;
        java.lang.Object $r4;
        com.google.inject.internal.ProviderMethodsModule r0;
        boolean $z0;

        r0 := @this: com.google.inject.internal.ProviderMethodsModule;

        r1 := @parameter0: com.google.inject.Binder;

        $r2 = virtualinvoke r0.<com.google.inject.internal.ProviderMethodsModule: java.util.List getProviderMethods(com.google.inject.Binder)>(r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.google.inject.internal.ProviderMethod) $r4;

        virtualinvoke r5.<com.google.inject.internal.ProviderMethod: void configure(com.google.inject.Binder)>(r1);

        goto label1;

     label2:
        return;
    }

    public java.util.List getProviderMethods(com.google.inject.Binder)
    {
        java.lang.reflect.Method[] $r3;
        java.util.ArrayList $r0;
        com.google.inject.Binder r5;
        com.google.inject.internal.ProviderMethod $r6;
        int i0, i1;
        java.lang.Object $r2;
        java.lang.Class r7;
        com.google.inject.internal.ProviderMethodsModule r1;
        java.lang.reflect.Method r4;
        boolean $z0;

        r1 := @this: com.google.inject.internal.ProviderMethodsModule;

        r5 := @parameter0: com.google.inject.Binder;

        $r0 = staticinvoke <com.google.inject.internal.util.$Lists: java.util.ArrayList newArrayList()>();

        $r2 = r1.<com.google.inject.internal.ProviderMethodsModule: java.lang.Object delegate>;

        r7 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

     label1:
        if r7 == class "Ljava/lang/Object;" goto label5;

        $r3 = virtualinvoke r7.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

        i0 = lengthof $r3;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        r4 = $r3[i1];

        $z0 = virtualinvoke r4.<java.lang.reflect.Method: boolean isAnnotationPresent(java.lang.Class)>(class "Lcom/google/inject/Provides;");

        if $z0 == 0 goto label3;

        $r6 = virtualinvoke r1.<com.google.inject.internal.ProviderMethodsModule: com.google.inject.internal.ProviderMethod createProviderMethod(com.google.inject.Binder,java.lang.reflect.Method)>(r5, r4);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        r7 = virtualinvoke r7.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label1;

     label5:
        return $r0;
    }

    com.google.inject.internal.ProviderMethod createProviderMethod(com.google.inject.Binder, java.lang.reflect.Method)
    {
        com.google.inject.Key $r12, $r25, $r26, $r30, r34;
        com.google.inject.internal.ProviderMethod $r17;
        com.google.inject.spi.Message r21;
        java.lang.reflect.Method r0;
        boolean $z0, $z1;
        com.google.inject.spi.Dependency $r27;
        java.util.List $r7, $r15;
        com.google.inject.internal.ProviderMethodsModule$LogProvider $r32;
        com.google.inject.binder.LinkedBindingBuilder $r31;
        java.lang.'annotation'.Annotation $r29;
        com.google.inject.TypeLiteral $r6, $r9, $r10, $r24;
        java.lang.'annotation'.Annotation[] $r11, $r13, $r23;
        java.util.ArrayList $r3, $r4;
        com.google.inject.Binder $r1, r33;
        com.google.inject.internal.util.$ImmutableSet $r19;
        int $i0, i1;
        com.google.inject.internal.ProviderMethodsModule r5;
        java.lang.'annotation'.Annotation[][] $r8;
        java.util.Iterator $r16;
        com.google.inject.internal.Errors $r2;
        com.google.inject.Provider $r28;
        java.lang.Class $r14;
        java.lang.Object $r18, $r20, $r22;

        r5 := @this: com.google.inject.internal.ProviderMethodsModule;

        r33 := @parameter0: com.google.inject.Binder;

        r0 := @parameter1: java.lang.reflect.Method;

        $r1 = interfaceinvoke r33.<com.google.inject.Binder: com.google.inject.Binder withSource(java.lang.Object)>(r0);

        $r2 = new com.google.inject.internal.Errors;

        specialinvoke $r2.<com.google.inject.internal.Errors: void <init>(java.lang.Object)>(r0);

        $r3 = staticinvoke <com.google.inject.internal.util.$Lists: java.util.ArrayList newArrayList()>();

        $r4 = staticinvoke <com.google.inject.internal.util.$Lists: java.util.ArrayList newArrayList()>();

        $r6 = r5.<com.google.inject.internal.ProviderMethodsModule: com.google.inject.TypeLiteral typeLiteral>;

        $r7 = virtualinvoke $r6.<com.google.inject.TypeLiteral: java.util.List getParameterTypes(java.lang.reflect.Member)>(r0);

        $r8 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.'annotation'.Annotation[][] getParameterAnnotations()>();

        i1 = 0;

     label1:
        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r22 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i1);

        $r24 = (com.google.inject.TypeLiteral) $r22;

        $r23 = $r8[i1];

        $r25 = virtualinvoke r5.<com.google.inject.internal.ProviderMethodsModule: com.google.inject.Key getKey(com.google.inject.internal.Errors,com.google.inject.TypeLiteral,java.lang.reflect.Member,java.lang.'annotation'.Annotation[])>($r2, $r24, r0, $r23);

        r34 = $r25;

        $r26 = staticinvoke <com.google.inject.Key: com.google.inject.Key get(java.lang.Class)>(class "Ljava/util/logging/Logger;");

        $z1 = virtualinvoke $r25.<com.google.inject.Key: boolean equals(java.lang.Object)>($r26);

        if $z1 == 0 goto label2;

        $r29 = staticinvoke <com.google.inject.internal.UniqueAnnotations: java.lang.'annotation'.Annotation create()>();

        $r30 = staticinvoke <com.google.inject.Key: com.google.inject.Key get(java.lang.Class,java.lang.'annotation'.Annotation)>(class "Ljava/util/logging/Logger;", $r29);

        $r31 = interfaceinvoke $r1.<com.google.inject.Binder: com.google.inject.binder.LinkedBindingBuilder bind(com.google.inject.Key)>($r30);

        $r32 = new com.google.inject.internal.ProviderMethodsModule$LogProvider;

        specialinvoke $r32.<com.google.inject.internal.ProviderMethodsModule$LogProvider: void <init>(java.lang.reflect.Method)>(r0);

        interfaceinvoke $r31.<com.google.inject.binder.LinkedBindingBuilder: com.google.inject.binder.ScopedBindingBuilder toProvider(com.google.inject.Provider)>($r32);

        r34 = $r30;

     label2:
        $r27 = staticinvoke <com.google.inject.spi.Dependency: com.google.inject.spi.Dependency get(com.google.inject.Key)>(r34);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r27);

        $r28 = interfaceinvoke $r1.<com.google.inject.Binder: com.google.inject.Provider getProvider(com.google.inject.Key)>(r34);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r28);

        i1 = i1 + 1;

        goto label1;

     label3:
        $r9 = r5.<com.google.inject.internal.ProviderMethodsModule: com.google.inject.TypeLiteral typeLiteral>;

        $r10 = virtualinvoke $r9.<com.google.inject.TypeLiteral: com.google.inject.TypeLiteral getReturnType(java.lang.reflect.Method)>(r0);

        $r11 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.'annotation'.Annotation[] getAnnotations()>();

        $r12 = virtualinvoke r5.<com.google.inject.internal.ProviderMethodsModule: com.google.inject.Key getKey(com.google.inject.internal.Errors,com.google.inject.TypeLiteral,java.lang.reflect.Member,java.lang.'annotation'.Annotation[])>($r2, $r10, r0, $r11);

        $r13 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.'annotation'.Annotation[] getAnnotations()>();

        $r14 = staticinvoke <com.google.inject.internal.Annotations: java.lang.Class findScopeAnnotation(com.google.inject.internal.Errors,java.lang.'annotation'.Annotation[])>($r2, $r13);

        $r15 = virtualinvoke $r2.<com.google.inject.internal.Errors: java.util.List getMessages()>();

        $r16 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r20 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r21 = (com.google.inject.spi.Message) $r20;

        interfaceinvoke $r1.<com.google.inject.Binder: void addError(com.google.inject.spi.Message)>(r21);

        goto label4;

     label5:
        $r17 = new com.google.inject.internal.ProviderMethod;

        $r18 = r5.<com.google.inject.internal.ProviderMethodsModule: java.lang.Object delegate>;

        $r19 = staticinvoke <com.google.inject.internal.util.$ImmutableSet: com.google.inject.internal.util.$ImmutableSet copyOf(java.lang.Iterable)>($r3);

        specialinvoke $r17.<com.google.inject.internal.ProviderMethod: void <init>(com.google.inject.Key,java.lang.reflect.Method,java.lang.Object,com.google.inject.internal.util.$ImmutableSet,java.util.List,java.lang.Class)>($r12, r0, $r18, $r19, $r4, $r14);

        return $r17;
    }

    com.google.inject.Key getKey(com.google.inject.internal.Errors, com.google.inject.TypeLiteral, java.lang.reflect.Member, java.lang.'annotation'.Annotation[])
    {
        com.google.inject.internal.Errors r0;
        java.lang.reflect.Member r1;
        java.lang.'annotation'.Annotation $r3;
        com.google.inject.Key $r6;
        java.lang.'annotation'.Annotation[] r2;
        com.google.inject.internal.ProviderMethodsModule r5;
        com.google.inject.TypeLiteral r4;

        r5 := @this: com.google.inject.internal.ProviderMethodsModule;

        r0 := @parameter0: com.google.inject.internal.Errors;

        r4 := @parameter1: com.google.inject.TypeLiteral;

        r1 := @parameter2: java.lang.reflect.Member;

        r2 := @parameter3: java.lang.'annotation'.Annotation[];

        $r3 = staticinvoke <com.google.inject.internal.Annotations: java.lang.'annotation'.Annotation findBindingAnnotation(com.google.inject.internal.Errors,java.lang.reflect.Member,java.lang.'annotation'.Annotation[])>(r0, r1, r2);

        if $r3 != null goto label1;

        $r6 = staticinvoke <com.google.inject.Key: com.google.inject.Key get(com.google.inject.TypeLiteral)>(r4);

        goto label2;

     label1:
        $r6 = staticinvoke <com.google.inject.Key: com.google.inject.Key get(com.google.inject.TypeLiteral,java.lang.'annotation'.Annotation)>(r4, $r3);

     label2:
        return $r6;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0, $r3, $r4;
        com.google.inject.internal.ProviderMethodsModule $r1, r2;
        boolean $z0, $z1;

        r2 := @this: com.google.inject.internal.ProviderMethodsModule;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof com.google.inject.internal.ProviderMethodsModule;

        if $z0 == 0 goto label1;

        $r1 = (com.google.inject.internal.ProviderMethodsModule) r0;

        $r4 = $r1.<com.google.inject.internal.ProviderMethodsModule: java.lang.Object delegate>;

        $r3 = r2.<com.google.inject.internal.ProviderMethodsModule: java.lang.Object delegate>;

        if $r4 != $r3 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public int hashCode()
    {
        int $i0;
        java.lang.Object $r1;
        com.google.inject.internal.ProviderMethodsModule r0;

        r0 := @this: com.google.inject.internal.ProviderMethodsModule;

        $r1 = r0.<com.google.inject.internal.ProviderMethodsModule: java.lang.Object delegate>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }
}
