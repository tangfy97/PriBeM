public class com.jidesoft.swing.PaintPanel extends javax.swing.JPanel
{
    private java.awt.Paint _backgroundPaint;
    protected java.awt.Color _startColor;
    protected java.awt.Color _endColor;
    protected boolean _isVertical;

    public void <init>()
    {
        com.jidesoft.swing.PaintPanel r0;

        r0 := @this: com.jidesoft.swing.PaintPanel;

        specialinvoke r0.<javax.swing.JPanel: void <init>()>();

        return;
    }

    public void <init>(boolean)
    {
        com.jidesoft.swing.PaintPanel r0;
        boolean z0;

        r0 := @this: com.jidesoft.swing.PaintPanel;

        z0 := @parameter0: boolean;

        specialinvoke r0.<javax.swing.JPanel: void <init>(boolean)>(z0);

        return;
    }

    public void <init>(java.awt.LayoutManager)
    {
        java.awt.LayoutManager r1;
        com.jidesoft.swing.PaintPanel r0;

        r0 := @this: com.jidesoft.swing.PaintPanel;

        r1 := @parameter0: java.awt.LayoutManager;

        specialinvoke r0.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>(r1);

        return;
    }

    public void <init>(java.awt.LayoutManager, boolean)
    {
        java.awt.LayoutManager r1;
        com.jidesoft.swing.PaintPanel r0;
        boolean z0;

        r0 := @this: com.jidesoft.swing.PaintPanel;

        r1 := @parameter0: java.awt.LayoutManager;

        z0 := @parameter1: boolean;

        specialinvoke r0.<javax.swing.JPanel: void <init>(java.awt.LayoutManager,boolean)>(r1, z0);

        return;
    }

    public java.awt.Paint getBackgroundPaint()
    {
        com.jidesoft.swing.PaintPanel r0;
        java.awt.Paint $r1;

        r0 := @this: com.jidesoft.swing.PaintPanel;

        $r1 = r0.<com.jidesoft.swing.PaintPanel: java.awt.Paint _backgroundPaint>;

        return $r1;
    }

    public void setBackgroundPaint(java.awt.Paint)
    {
        com.jidesoft.swing.PaintPanel r0;
        java.awt.Paint r1;

        r0 := @this: com.jidesoft.swing.PaintPanel;

        r1 := @parameter0: java.awt.Paint;

        r0.<com.jidesoft.swing.PaintPanel: java.awt.Paint _backgroundPaint> = r1;

        return;
    }

    public static java.awt.TexturePaint createTexturePaint(javax.swing.JPanel, java.awt.Image, int, int, int, int)
    {
        java.awt.Color $r4;
        java.awt.Rectangle $r5;
        java.awt.TexturePaint $r6;
        java.awt.image.BufferedImage $r0;
        java.awt.Image r2;
        java.awt.Graphics2D $r1;
        int i0, i1, i2, i3;
        javax.swing.JPanel r3;

        r3 := @parameter0: javax.swing.JPanel;

        r2 := @parameter1: java.awt.Image;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        $r0 = new java.awt.image.BufferedImage;

        specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>(i0, i1, 2);

        $r1 = virtualinvoke $r0.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();

        $r4 = <java.awt.Color: java.awt.Color white>;

        virtualinvoke $r1.<java.awt.Graphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>(r2, i2, i3, $r4, r3);

        $r5 = new java.awt.Rectangle;

        specialinvoke $r5.<java.awt.Rectangle: void <init>(int,int,int,int)>(0, 0, i0, i1);

        $r6 = new java.awt.TexturePaint;

        specialinvoke $r6.<java.awt.TexturePaint: void <init>(java.awt.image.BufferedImage,java.awt.geom.Rectangle2D)>($r0, $r5);

        return $r6;
    }

    public void setGradientPaint(java.awt.Color, java.awt.Color, boolean)
    {
        java.awt.Color r1, r2;
        com.jidesoft.swing.PaintPanel r0;
        boolean z0;

        r0 := @this: com.jidesoft.swing.PaintPanel;

        r1 := @parameter0: java.awt.Color;

        r2 := @parameter1: java.awt.Color;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<com.jidesoft.swing.PaintPanel: void setStartColor(java.awt.Color)>(r1);

        virtualinvoke r0.<com.jidesoft.swing.PaintPanel: void setEndColor(java.awt.Color)>(r2);

        virtualinvoke r0.<com.jidesoft.swing.PaintPanel: void setVertical(boolean)>(z0);

        return;
    }

    public java.awt.Color getStartColor()
    {
        java.awt.Color $r1;
        com.jidesoft.swing.PaintPanel r0;

        r0 := @this: com.jidesoft.swing.PaintPanel;

        $r1 = r0.<com.jidesoft.swing.PaintPanel: java.awt.Color _startColor>;

        return $r1;
    }

    public void setStartColor(java.awt.Color)
    {
        java.awt.Color r1;
        com.jidesoft.swing.PaintPanel r0;

        r0 := @this: com.jidesoft.swing.PaintPanel;

        r1 := @parameter0: java.awt.Color;

        r0.<com.jidesoft.swing.PaintPanel: java.awt.Color _startColor> = r1;

        return;
    }

    public java.awt.Color getEndColor()
    {
        java.awt.Color $r1;
        com.jidesoft.swing.PaintPanel r0;

        r0 := @this: com.jidesoft.swing.PaintPanel;

        $r1 = r0.<com.jidesoft.swing.PaintPanel: java.awt.Color _endColor>;

        return $r1;
    }

    public void setEndColor(java.awt.Color)
    {
        java.awt.Color r1;
        com.jidesoft.swing.PaintPanel r0;

        r0 := @this: com.jidesoft.swing.PaintPanel;

        r1 := @parameter0: java.awt.Color;

        r0.<com.jidesoft.swing.PaintPanel: java.awt.Color _endColor> = r1;

        return;
    }

    public boolean isVertical()
    {
        com.jidesoft.swing.PaintPanel r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.PaintPanel;

        $z0 = r0.<com.jidesoft.swing.PaintPanel: boolean _isVertical>;

        return $z0;
    }

    public void setVertical(boolean)
    {
        com.jidesoft.swing.PaintPanel r0;
        boolean z0;

        r0 := @this: com.jidesoft.swing.PaintPanel;

        z0 := @parameter0: boolean;

        r0.<com.jidesoft.swing.PaintPanel: boolean _isVertical> = z0;

        return;
    }

    protected void paintComponent(java.awt.Graphics)
    {
        java.awt.Color $r2, $r6, $r9, $r10;
        java.awt.Rectangle $r7;
        java.awt.Graphics2D r4, $r8;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1;
        java.awt.Paint $r3, $r5;
        java.awt.Graphics r1;
        com.jidesoft.swing.PaintPanel r0;

        r0 := @this: com.jidesoft.swing.PaintPanel;

        r1 := @parameter0: java.awt.Graphics;

        specialinvoke r0.<javax.swing.JPanel: void paintComponent(java.awt.Graphics)>(r1);

        $r2 = virtualinvoke r0.<com.jidesoft.swing.PaintPanel: java.awt.Color getStartColor()>();

        if $r2 == null goto label1;

        $r6 = virtualinvoke r0.<com.jidesoft.swing.PaintPanel: java.awt.Color getEndColor()>();

        if $r6 == null goto label1;

        $r8 = (java.awt.Graphics2D) r1;

        $r7 = new java.awt.Rectangle;

        $i2 = virtualinvoke r0.<com.jidesoft.swing.PaintPanel: int getWidth()>();

        $i3 = virtualinvoke r0.<com.jidesoft.swing.PaintPanel: int getHeight()>();

        specialinvoke $r7.<java.awt.Rectangle: void <init>(int,int,int,int)>(0, 0, $i2, $i3);

        $r9 = virtualinvoke r0.<com.jidesoft.swing.PaintPanel: java.awt.Color getStartColor()>();

        $r10 = virtualinvoke r0.<com.jidesoft.swing.PaintPanel: java.awt.Color getEndColor()>();

        $z1 = virtualinvoke r0.<com.jidesoft.swing.PaintPanel: boolean isVertical()>();

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics2D,java.awt.Shape,java.awt.Color,java.awt.Color,boolean)>($r8, $r7, $r9, $r10, $z1);

        goto label2;

     label1:
        $z0 = virtualinvoke r0.<com.jidesoft.swing.PaintPanel: boolean isOpaque()>();

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke r0.<com.jidesoft.swing.PaintPanel: java.awt.Paint getBackgroundPaint()>();

        if $r3 == null goto label2;

        r4 = (java.awt.Graphics2D) r1;

        $r5 = virtualinvoke r0.<com.jidesoft.swing.PaintPanel: java.awt.Paint getBackgroundPaint()>();

        virtualinvoke r4.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r5);

        $i0 = virtualinvoke r0.<com.jidesoft.swing.PaintPanel: int getWidth()>();

        $i1 = virtualinvoke r0.<com.jidesoft.swing.PaintPanel: int getHeight()>();

        virtualinvoke r4.<java.awt.Graphics2D: void fillRect(int,int,int,int)>(0, 0, $i0, $i1);

     label2:
        return;
    }
}
