class org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl extends java.lang.Object implements javax.xml.transform.Templates
{
    private javax.xml.transform.Templates templates;
    private javax.xml.transform.URIResolver resolver;
    private java.util.Map transformParameters;
    private java.util.Map outProps;

    public void <init>(javax.xml.transform.Templates, javax.xml.transform.URIResolver)
    {
        javax.xml.transform.Templates r3;
        javax.xml.transform.URIResolver r4;
        java.util.HashMap $r1, $r2;
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl;

        r3 := @parameter0: javax.xml.transform.Templates;

        r4 := @parameter1: javax.xml.transform.URIResolver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl: java.util.Map transformParameters> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl: java.util.Map outProps> = $r2;

        r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl: javax.xml.transform.Templates templates> = r3;

        r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl: javax.xml.transform.URIResolver resolver> = r4;

        return;
    }

    public javax.xml.transform.Templates getTemplates()
    {
        javax.xml.transform.Templates $r1;
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl;

        $r1 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl: javax.xml.transform.Templates templates>;

        return $r1;
    }

    public void setTransformerParameter(java.lang.String, java.lang.Object)
    {
        java.util.Map $r3;
        java.lang.Object r2;
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl r0;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl: java.util.Map transformParameters>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void setOutProperties(java.util.Map)
    {
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl r0;
        java.util.Map r1;

        r0 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl;

        r1 := @parameter0: java.util.Map;

        r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl: java.util.Map outProps> = r1;

        return;
    }

    public java.util.Properties getOutputProperties()
    {
        javax.xml.transform.Templates $r1;
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl r0;
        java.util.Properties $r2;

        r0 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl;

        $r1 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl: javax.xml.transform.Templates templates>;

        $r2 = interfaceinvoke $r1.<javax.xml.transform.Templates: java.util.Properties getOutputProperties()>();

        return $r2;
    }

    public javax.xml.transform.Transformer newTransformer() throws javax.xml.transform.TransformerConfigurationException
    {
        javax.xml.transform.Transformer $r2;
        javax.xml.transform.Templates $r1;
        javax.xml.transform.URIResolver $r3;
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl r0;
        java.util.Map $r4, $r7;
        java.lang.String $r12, $r14, $r17;
        boolean $z0, $z1;
        java.util.Map$Entry r19, r20;
        java.util.Iterator $r6, $r9;
        java.util.Set $r5, $r8;
        java.lang.Object $r10, $r11, $r13, $r15, $r16, $r18;

        r0 := @this: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl;

        $r1 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl: javax.xml.transform.Templates templates>;

        $r2 = interfaceinvoke $r1.<javax.xml.transform.Templates: javax.xml.transform.Transformer newTransformer()>();

        $r3 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl: javax.xml.transform.URIResolver resolver>;

        virtualinvoke $r2.<javax.xml.transform.Transformer: void setURIResolver(javax.xml.transform.URIResolver)>($r3);

        $r4 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl: java.util.Map transformParameters>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r15 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r19 = (java.util.Map$Entry) $r15;

        $r16 = interfaceinvoke r19.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r17 = (java.lang.String) $r16;

        $r18 = interfaceinvoke r19.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke $r2.<javax.xml.transform.Transformer: void setParameter(java.lang.String,java.lang.Object)>($r17, $r18);

        goto label1;

     label2:
        $r7 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl: java.util.Map outProps>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.util.Map$Entry) $r10;

        $r11 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = (java.lang.String) $r11;

        $r13 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r14 = (java.lang.String) $r13;

        virtualinvoke $r2.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>($r12, $r14);

        goto label3;

     label4:
        return $r2;
    }

    static javax.xml.transform.URIResolver access$000(org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl)
    {
        javax.xml.transform.URIResolver $r1;
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl r0;

        r0 := @parameter0: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl;

        $r1 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl: javax.xml.transform.URIResolver resolver>;

        return $r1;
    }

    static java.util.Map access$100(org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl)
    {
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl r0;
        java.util.Map $r1;

        r0 := @parameter0: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl;

        $r1 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl: java.util.Map transformParameters>;

        return $r1;
    }

    static java.util.Map access$200(org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl)
    {
        org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl r0;
        java.util.Map $r1;

        r0 := @parameter0: org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl;

        $r1 = r0.<org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl: java.util.Map outProps>;

        return $r1;
    }
}
