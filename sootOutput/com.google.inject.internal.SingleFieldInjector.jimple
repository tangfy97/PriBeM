final class com.google.inject.internal.SingleFieldInjector extends java.lang.Object implements com.google.inject.internal.SingleMemberInjector
{
    final java.lang.reflect.Field field;
    final com.google.inject.spi.InjectionPoint injectionPoint;
    final com.google.inject.spi.Dependency dependency;
    final com.google.inject.internal.InternalFactory factory;

    public void <init>(com.google.inject.internal.InjectorImpl, com.google.inject.spi.InjectionPoint, com.google.inject.internal.Errors) throws com.google.inject.internal.ErrorsException
    {
        java.lang.reflect.Member $r2;
        com.google.inject.spi.Dependency $r6, $r9;
        com.google.inject.Key $r10;
        com.google.inject.internal.InjectorImpl$JitLimitation $r12;
        java.lang.reflect.Field $r3, $r7;
        com.google.inject.internal.Errors r11;
        java.util.List $r4;
        com.google.inject.internal.InjectorImpl r8;
        com.google.inject.spi.InjectionPoint r1;
        com.google.inject.internal.InternalFactory $r13;
        com.google.inject.internal.SingleFieldInjector r0;
        java.lang.Object $r5;

        r0 := @this: com.google.inject.internal.SingleFieldInjector;

        r8 := @parameter0: com.google.inject.internal.InjectorImpl;

        r1 := @parameter1: com.google.inject.spi.InjectionPoint;

        r11 := @parameter2: com.google.inject.internal.Errors;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.inject.internal.SingleFieldInjector: com.google.inject.spi.InjectionPoint injectionPoint> = r1;

        $r2 = virtualinvoke r1.<com.google.inject.spi.InjectionPoint: java.lang.reflect.Member getMember()>();

        $r3 = (java.lang.reflect.Field) $r2;

        r0.<com.google.inject.internal.SingleFieldInjector: java.lang.reflect.Field field> = $r3;

        $r4 = virtualinvoke r1.<com.google.inject.spi.InjectionPoint: java.util.List getDependencies()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (com.google.inject.spi.Dependency) $r5;

        r0.<com.google.inject.internal.SingleFieldInjector: com.google.inject.spi.Dependency dependency> = $r6;

        $r7 = r0.<com.google.inject.internal.SingleFieldInjector: java.lang.reflect.Field field>;

        virtualinvoke $r7.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $r9 = r0.<com.google.inject.internal.SingleFieldInjector: com.google.inject.spi.Dependency dependency>;

        $r10 = virtualinvoke $r9.<com.google.inject.spi.Dependency: com.google.inject.Key getKey()>();

        $r12 = <com.google.inject.internal.InjectorImpl$JitLimitation: com.google.inject.internal.InjectorImpl$JitLimitation NO_JIT>;

        $r13 = virtualinvoke r8.<com.google.inject.internal.InjectorImpl: com.google.inject.internal.InternalFactory getInternalFactory(com.google.inject.Key,com.google.inject.internal.Errors,com.google.inject.internal.InjectorImpl$JitLimitation)>($r10, r11, $r12);

        r0.<com.google.inject.internal.SingleFieldInjector: com.google.inject.internal.InternalFactory factory> = $r13;

        return;
    }

    public com.google.inject.spi.InjectionPoint getInjectionPoint()
    {
        com.google.inject.internal.SingleFieldInjector r0;
        com.google.inject.spi.InjectionPoint $r1;

        r0 := @this: com.google.inject.internal.SingleFieldInjector;

        $r1 = r0.<com.google.inject.internal.SingleFieldInjector: com.google.inject.spi.InjectionPoint injectionPoint>;

        return $r1;
    }

    public void inject(com.google.inject.internal.Errors, com.google.inject.internal.InternalContext, java.lang.Object)
    {
        java.lang.Throwable $r11;
        com.google.inject.internal.InternalContext r3;
        java.lang.AssertionError $r13;
        com.google.inject.internal.ErrorsException $r14;
        com.google.inject.internal.SingleFieldInjector r0;
        java.lang.IllegalAccessException $r12;
        com.google.inject.spi.Dependency $r1, $r4, $r5, $r6;
        java.lang.reflect.Field $r10;
        com.google.inject.internal.Errors $r2, $r16, $r17, r18;
        com.google.inject.spi.InjectionPoint $r15;
        com.google.inject.internal.InternalFactory $r7;
        java.lang.Object $r8, r9;

        r0 := @this: com.google.inject.internal.SingleFieldInjector;

        r18 := @parameter0: com.google.inject.internal.Errors;

        r3 := @parameter1: com.google.inject.internal.InternalContext;

        r9 := @parameter2: java.lang.Object;

        $r1 = r0.<com.google.inject.internal.SingleFieldInjector: com.google.inject.spi.Dependency dependency>;

        $r2 = virtualinvoke r18.<com.google.inject.internal.Errors: com.google.inject.internal.Errors withSource(java.lang.Object)>($r1);

        $r4 = r0.<com.google.inject.internal.SingleFieldInjector: com.google.inject.spi.Dependency dependency>;

        $r5 = virtualinvoke r3.<com.google.inject.internal.InternalContext: com.google.inject.spi.Dependency setDependency(com.google.inject.spi.Dependency)>($r4);

     label1:
        $r7 = r0.<com.google.inject.internal.SingleFieldInjector: com.google.inject.internal.InternalFactory factory>;

        $r6 = r0.<com.google.inject.internal.SingleFieldInjector: com.google.inject.spi.Dependency dependency>;

        $r8 = interfaceinvoke $r7.<com.google.inject.internal.InternalFactory: java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency,boolean)>($r2, r3, $r6, 0);

        $r10 = r0.<com.google.inject.internal.SingleFieldInjector: java.lang.reflect.Field field>;

        virtualinvoke $r10.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r9, $r8);

     label2:
        virtualinvoke r3.<com.google.inject.internal.InternalContext: com.google.inject.spi.Dependency setDependency(com.google.inject.spi.Dependency)>($r5);

        goto label8;

     label3:
        $r14 := @caughtexception;

        $r15 = r0.<com.google.inject.internal.SingleFieldInjector: com.google.inject.spi.InjectionPoint injectionPoint>;

        $r16 = virtualinvoke $r2.<com.google.inject.internal.Errors: com.google.inject.internal.Errors withSource(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r14.<com.google.inject.internal.ErrorsException: com.google.inject.internal.Errors getErrors()>();

        virtualinvoke $r16.<com.google.inject.internal.Errors: com.google.inject.internal.Errors merge(com.google.inject.internal.Errors)>($r17);

     label4:
        virtualinvoke r3.<com.google.inject.internal.InternalContext: com.google.inject.spi.Dependency setDependency(com.google.inject.spi.Dependency)>($r5);

        goto label8;

     label5:
        $r12 := @caughtexception;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>(java.lang.Object)>($r12);

        throw $r13;

     label6:
        $r11 := @caughtexception;

     label7:
        virtualinvoke r3.<com.google.inject.internal.InternalContext: com.google.inject.spi.Dependency setDependency(com.google.inject.spi.Dependency)>($r5);

        throw $r11;

     label8:
        return;

        catch com.google.inject.internal.ErrorsException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label5;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label7 with label6;
    }
}
