public class com.hp.hpl.jena.tdb.nodetable.NodeTableLib extends java.lang.Object
{

    public void <init>()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTableLib r0;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTableLib;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void print(java.lang.String, com.hp.hpl.jena.tdb.nodetable.NodeTable)
    {
        com.hp.hpl.jena.graph.Node r8;
        com.hp.hpl.jena.tdb.nodetable.NodeTable r1;
        com.hp.hpl.jena.tdb.store.NodeId r6;
        java.lang.String r0, $r14;
        boolean $z0;
        java.io.PrintStream $r10, $r15;
        java.util.Iterator $r2;
        org.apache.jena.atlas.lib.Pair r4;
        java.lang.Object $r3, $r5, $r7;
        java.lang.StringBuilder $r9, $r11, $r12, $r13;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.tdb.nodetable.NodeTable;

        if r0 == null goto label1;

        $r15 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>(r0);

     label1:
        $r2 = interfaceinvoke r1.<com.hp.hpl.jena.tdb.nodetable.NodeTable: java.util.Iterator all()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.jena.atlas.lib.Pair) $r3;

        $r5 = virtualinvoke r4.<org.apache.jena.atlas.lib.Pair: java.lang.Object getLeft()>();

        r6 = (com.hp.hpl.jena.tdb.store.NodeId) $r5;

        $r7 = virtualinvoke r4.<org.apache.jena.atlas.lib.Pair: java.lang.Object getRight()>();

        r8 = (com.hp.hpl.jena.graph.Node) $r7;

        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r14);

        goto label2;

     label3:
        return;
    }
}
