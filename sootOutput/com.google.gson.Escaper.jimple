final class com.google.gson.Escaper extends java.lang.Object
{
    private static final char[] HEX_CHARS;
    private static final java.util.Set JS_ESCAPE_CHARS;
    private static final java.util.Set HTML_ESCAPE_CHARS;
    private final boolean escapeHtmlCharacters;

    void <init>(boolean)
    {
        com.google.gson.Escaper r0;
        boolean z0;

        r0 := @this: com.google.gson.Escaper;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.gson.Escaper: boolean escapeHtmlCharacters> = z0;

        return;
    }

    public java.lang.String escapeJsonString(java.lang.CharSequence)
    {
        java.lang.CharSequence r1;
        java.io.IOException $r4;
        java.lang.RuntimeException $r5;
        com.google.gson.Escaper r2;
        int $i0, $i1;
        java.lang.StringBuilder $r0;
        java.lang.String $r3;

        r2 := @this: com.google.gson.Escaper;

        r1 := @parameter0: java.lang.CharSequence;

        $r0 = new java.lang.StringBuilder;

        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $i1 = $i0 + 20;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>($i1);

     label1:
        specialinvoke r2.<com.google.gson.Escaper: void escapeJsonString(java.lang.CharSequence,java.lang.StringBuilder)>(r1, $r0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

     label4:
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private void escapeJsonString(java.lang.CharSequence, java.lang.StringBuilder) throws java.io.IOException
    {
        java.lang.CharSequence r0;
        com.google.gson.Escaper r2;
        int $i0, $i1, $i2, i3, i4;
        java.lang.StringBuilder r1;
        boolean $z0, $z1;

        r2 := @this: com.google.gson.Escaper;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.lang.StringBuilder;

        i3 = 0;

        $i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        i4 = 0;

     label01:
        if i4 >= $i0 goto label13;

        $i1 = staticinvoke <java.lang.Character: int codePointAt(java.lang.CharSequence,int)>(r0, i4);

        $i2 = staticinvoke <java.lang.Character: int charCount(int)>($i1);

        $z0 = staticinvoke <com.google.gson.Escaper: boolean isControlCharacter(int)>($i1);

        if $z0 != 0 goto label02;

        $z1 = specialinvoke r2.<com.google.gson.Escaper: boolean mustEscapeCharInJsString(int)>($i1);

        if $z1 != 0 goto label02;

        goto label12;

     label02:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(r0, i3, i4);

        i3 = i4 + $i2;

        lookupswitch($i1)
        {
            case 8: goto label03;
            case 9: goto label04;
            case 10: goto label05;
            case 12: goto label06;
            case 13: goto label07;
            case 34: goto label10;
            case 47: goto label09;
            case 92: goto label08;
            default: goto label11;
        };

     label03:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\b");

        goto label12;

     label04:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\t");

        goto label12;

     label05:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\n");

        goto label12;

     label06:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\f");

        goto label12;

     label07:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\r");

        goto label12;

     label08:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\\\");

        goto label12;

     label09:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\/");

        goto label12;

     label10:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\\"");

        goto label12;

     label11:
        staticinvoke <com.google.gson.Escaper: void appendHexJavaScriptRepresentation(int,java.lang.Appendable)>($i1, r1);

     label12:
        i4 = i4 + $i2;

        goto label01;

     label13:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(r0, i3, $i0);

        return;
    }

    private boolean mustEscapeCharInJsString(int)
    {
        java.util.Set $r0, $r3;
        char c1;
        com.google.gson.Escaper r2;
        java.lang.Character $r1, $r4;
        int i0;
        boolean $z0, $z1, $z2, $z3, $z4;

        r2 := @this: com.google.gson.Escaper;

        i0 := @parameter0: int;

        $z0 = staticinvoke <java.lang.Character: boolean isSupplementaryCodePoint(int)>(i0);

        if $z0 != 0 goto label4;

        c1 = (char) i0;

        $r0 = <com.google.gson.Escaper: java.util.Set JS_ESCAPE_CHARS>;

        $r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1);

        $z1 = interfaceinvoke $r0.<java.util.Set: boolean contains(java.lang.Object)>($r1);

        if $z1 != 0 goto label1;

        $z2 = r2.<com.google.gson.Escaper: boolean escapeHtmlCharacters>;

        if $z2 == 0 goto label2;

        $r3 = <com.google.gson.Escaper: java.util.Set HTML_ESCAPE_CHARS>;

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1);

        $z3 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>($r4);

        if $z3 == 0 goto label2;

     label1:
        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;

     label4:
        return 0;
    }

    private static boolean isControlCharacter(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 < 32 goto label1;

        if i0 == 8232 goto label1;

        if i0 == 8233 goto label1;

        if i0 < 127 goto label2;

        if i0 > 159 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private static void appendHexJavaScriptRepresentation(int, java.lang.Appendable) throws java.io.IOException
    {
        int i0, $i1, $i2, $i4, $i5, $i7, $i8, $i10, $i14, $i15;
        boolean $z0;
        java.lang.Appendable r0, $r1, $r3, $r5, $r7;
        char $c3, $c6, $c9, $c11, $c12, $c13;
        char[] $r2, $r4, $r6, $r8, $r9;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.Appendable;

        $z0 = staticinvoke <java.lang.Character: boolean isSupplementaryCodePoint(int)>(i0);

        if $z0 == 0 goto label1;

        $r9 = staticinvoke <java.lang.Character: char[] toChars(int)>(i0);

        $c12 = $r9[0];

        $i14 = (int) $c12;

        staticinvoke <com.google.gson.Escaper: void appendHexJavaScriptRepresentation(int,java.lang.Appendable)>($i14, r0);

        $c13 = $r9[1];

        $i15 = (int) $c13;

        staticinvoke <com.google.gson.Escaper: void appendHexJavaScriptRepresentation(int,java.lang.Appendable)>($i15, r0);

        return;

     label1:
        $r1 = interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("\\u");

        $r2 = <com.google.gson.Escaper: char[] HEX_CHARS>;

        $i1 = i0 >>> 12;

        $i2 = $i1 & 15;

        $c3 = $r2[$i2];

        $r3 = interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(char)>($c3);

        $r4 = <com.google.gson.Escaper: char[] HEX_CHARS>;

        $i4 = i0 >>> 8;

        $i5 = $i4 & 15;

        $c6 = $r4[$i5];

        $r5 = interfaceinvoke $r3.<java.lang.Appendable: java.lang.Appendable append(char)>($c6);

        $r6 = <com.google.gson.Escaper: char[] HEX_CHARS>;

        $i7 = i0 >>> 4;

        $i8 = $i7 & 15;

        $c9 = $r6[$i8];

        $r7 = interfaceinvoke $r5.<java.lang.Appendable: java.lang.Appendable append(char)>($c9);

        $r8 = <com.google.gson.Escaper: char[] HEX_CHARS>;

        $i10 = i0 & 15;

        $c11 = $r8[$i10];

        interfaceinvoke $r7.<java.lang.Appendable: java.lang.Appendable append(char)>($c11);

        return;
    }

    static void <clinit>()
    {
        java.util.Set $r4, $r11;
        java.util.HashSet $r1, $r5;
        java.lang.Character $r2, $r3, $r6, $r7, $r8, $r9, $r10;
        char[] $r0;

        $r0 = newarray (char)[16];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 97;

        $r0[11] = 98;

        $r0[12] = 99;

        $r0[13] = 100;

        $r0[14] = 101;

        $r0[15] = 102;

        <com.google.gson.Escaper: char[] HEX_CHARS> = $r0;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        $r2 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(34);

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r2);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(92);

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r3);

        $r4 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r1);

        <com.google.gson.Escaper: java.util.Set JS_ESCAPE_CHARS> = $r4;

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        $r6 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(60);

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r6);

        $r7 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(62);

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r7);

        $r8 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(38);

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r8);

        $r9 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(61);

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r9);

        $r10 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(39);

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r10);

        $r11 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r5);

        <com.google.gson.Escaper: java.util.Set HTML_ESCAPE_CHARS> = $r11;

        return;
    }
}
