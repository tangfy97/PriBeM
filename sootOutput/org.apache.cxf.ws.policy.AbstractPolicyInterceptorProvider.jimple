public abstract class org.apache.cxf.ws.policy.AbstractPolicyInterceptorProvider extends org.apache.cxf.interceptor.AbstractAttributedInterceptorProvider implements org.apache.cxf.ws.policy.PolicyInterceptorProvider
{
    private java.util.Collection assertionTypes;

    public void <init>(javax.xml.namespace.QName)
    {
        java.util.List $r2;
        javax.xml.namespace.QName r1;
        org.apache.cxf.ws.policy.AbstractPolicyInterceptorProvider r0;

        r0 := @this: org.apache.cxf.ws.policy.AbstractPolicyInterceptorProvider;

        r1 := @parameter0: javax.xml.namespace.QName;

        $r2 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r1);

        specialinvoke r0.<org.apache.cxf.ws.policy.AbstractPolicyInterceptorProvider: void <init>(java.util.Collection)>($r2);

        return;
    }

    public void <init>(java.util.Collection)
    {
        org.apache.cxf.ws.policy.AbstractPolicyInterceptorProvider r0;
        java.util.Collection r1;

        r0 := @this: org.apache.cxf.ws.policy.AbstractPolicyInterceptorProvider;

        r1 := @parameter0: java.util.Collection;

        specialinvoke r0.<org.apache.cxf.interceptor.AbstractAttributedInterceptorProvider: void <init>()>();

        r0.<org.apache.cxf.ws.policy.AbstractPolicyInterceptorProvider: java.util.Collection assertionTypes> = r1;

        return;
    }

    public java.util.Collection getAssertionTypes()
    {
        org.apache.cxf.ws.policy.AbstractPolicyInterceptorProvider r0;
        java.util.Collection $r1;

        r0 := @this: org.apache.cxf.ws.policy.AbstractPolicyInterceptorProvider;

        $r1 = r0.<org.apache.cxf.ws.policy.AbstractPolicyInterceptorProvider: java.util.Collection assertionTypes>;

        return $r1;
    }

    public java.util.List provideInFaultInterceptors(org.apache.cxf.message.Message)
    {
        java.util.List $r1;
        org.apache.cxf.message.Message r2;
        org.apache.cxf.ws.policy.AbstractPolicyInterceptorProvider r0;

        r0 := @this: org.apache.cxf.ws.policy.AbstractPolicyInterceptorProvider;

        r2 := @parameter0: org.apache.cxf.message.Message;

        $r1 = virtualinvoke r0.<org.apache.cxf.ws.policy.AbstractPolicyInterceptorProvider: java.util.List getInFaultInterceptors()>();

        return $r1;
    }

    public java.util.List provideInInterceptors(org.apache.cxf.message.Message)
    {
        java.util.List $r1;
        org.apache.cxf.message.Message r2;
        org.apache.cxf.ws.policy.AbstractPolicyInterceptorProvider r0;

        r0 := @this: org.apache.cxf.ws.policy.AbstractPolicyInterceptorProvider;

        r2 := @parameter0: org.apache.cxf.message.Message;

        $r1 = virtualinvoke r0.<org.apache.cxf.ws.policy.AbstractPolicyInterceptorProvider: java.util.List getInInterceptors()>();

        return $r1;
    }

    public java.util.List provideOutFaultInterceptors(org.apache.cxf.message.Message)
    {
        java.util.List $r1;
        org.apache.cxf.message.Message r2;
        org.apache.cxf.ws.policy.AbstractPolicyInterceptorProvider r0;

        r0 := @this: org.apache.cxf.ws.policy.AbstractPolicyInterceptorProvider;

        r2 := @parameter0: org.apache.cxf.message.Message;

        $r1 = virtualinvoke r0.<org.apache.cxf.ws.policy.AbstractPolicyInterceptorProvider: java.util.List getOutFaultInterceptors()>();

        return $r1;
    }

    public java.util.List provideOutInterceptors(org.apache.cxf.message.Message)
    {
        java.util.List $r1;
        org.apache.cxf.message.Message r2;
        org.apache.cxf.ws.policy.AbstractPolicyInterceptorProvider r0;

        r0 := @this: org.apache.cxf.ws.policy.AbstractPolicyInterceptorProvider;

        r2 := @parameter0: org.apache.cxf.message.Message;

        $r1 = virtualinvoke r0.<org.apache.cxf.ws.policy.AbstractPolicyInterceptorProvider: java.util.List getOutInterceptors()>();

        return $r1;
    }
}
