public final class com.google.gxp.com.google.common.collect.LinkedHashMultiset extends com.google.gxp.com.google.common.collect.AbstractMapBasedMultiset
{
    private static final long serialVersionUID;

    public void <init>()
    {
        java.util.LinkedHashMap $r1;
        com.google.gxp.com.google.common.collect.LinkedHashMultiset r0;

        r0 := @this: com.google.gxp.com.google.common.collect.LinkedHashMultiset;

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        specialinvoke r0.<com.google.gxp.com.google.common.collect.AbstractMapBasedMultiset: void <init>(java.util.Map)>($r1);

        return;
    }

    public void <init>(int)
    {
        java.util.LinkedHashMap $r1;
        com.google.gxp.com.google.common.collect.LinkedHashMultiset r0;
        int i0, $i1;

        r0 := @this: com.google.gxp.com.google.common.collect.LinkedHashMultiset;

        i0 := @parameter0: int;

        $r1 = new java.util.LinkedHashMap;

        $i1 = staticinvoke <com.google.gxp.com.google.common.collect.Maps: int capacity(int)>(i0);

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>(int)>($i1);

        specialinvoke r0.<com.google.gxp.com.google.common.collect.AbstractMapBasedMultiset: void <init>(java.util.Map)>($r1);

        return;
    }

    public void <init>(java.lang.Iterable)
    {
        int $i0;
        com.google.gxp.com.google.common.collect.LinkedHashMultiset r0;
        java.lang.Iterable r1;

        r0 := @this: com.google.gxp.com.google.common.collect.LinkedHashMultiset;

        r1 := @parameter0: java.lang.Iterable;

        $i0 = staticinvoke <com.google.gxp.com.google.common.collect.Multisets: int inferDistinctElements(java.lang.Iterable)>(r1);

        specialinvoke r0.<com.google.gxp.com.google.common.collect.LinkedHashMultiset: void <init>(int)>($i0);

        staticinvoke <com.google.gxp.com.google.common.collect.Iterables: boolean addAll(java.util.Collection,java.lang.Iterable)>(r0, r1);

        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream r0;
        com.google.gxp.com.google.common.collect.LinkedHashMultiset r1;

        r1 := @this: com.google.gxp.com.google.common.collect.LinkedHashMultiset;

        r0 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r0.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        staticinvoke <com.google.gxp.com.google.common.collect.Serialization: void writeMultiset(com.google.gxp.com.google.common.collect.Multiset,java.io.ObjectOutputStream)>(r1, r0);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream r0;
        java.util.LinkedHashMap $r2;
        com.google.gxp.com.google.common.collect.LinkedHashMultiset r1;

        r1 := @this: com.google.gxp.com.google.common.collect.LinkedHashMultiset;

        r0 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r0.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>();

        virtualinvoke r1.<com.google.gxp.com.google.common.collect.LinkedHashMultiset: void setBackingMap(java.util.Map)>($r2);

        staticinvoke <com.google.gxp.com.google.common.collect.Serialization: void populateMultiset(com.google.gxp.com.google.common.collect.Multiset,java.io.ObjectInputStream)>(r1, r0);

        return;
    }

    public static void <clinit>()
    {
        <com.google.gxp.com.google.common.collect.LinkedHashMultiset: long serialVersionUID> = 0L;

        return;
    }
}
