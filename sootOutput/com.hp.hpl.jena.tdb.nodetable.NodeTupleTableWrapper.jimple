public class com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper extends java.lang.Object implements com.hp.hpl.jena.tdb.nodetable.NodeTupleTable
{
    protected com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable;

    public void <init>(com.hp.hpl.jena.tdb.nodetable.NodeTupleTable)
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable r1;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper r0;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper;

        r1 := @parameter0: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable setNodeTupleTable(com.hp.hpl.jena.tdb.nodetable.NodeTupleTable)>(r1);

        return;
    }

    protected com.hp.hpl.jena.tdb.nodetable.NodeTupleTable setNodeTupleTable(com.hp.hpl.jena.tdb.nodetable.NodeTupleTable)
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable r1, r2;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper r0;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper;

        r2 := @parameter0: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable;

        r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable>;

        r0.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable> = r2;

        return r1;
    }

    public transient boolean addRow(com.hp.hpl.jena.graph.Node[])
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r2;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper r0;
        com.hp.hpl.jena.graph.Node[] r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node[];

        $r2 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable>;

        $z0 = interfaceinvoke $r2.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: boolean addRow(com.hp.hpl.jena.graph.Node[])>(r1);

        return $z0;
    }

    public transient boolean deleteRow(com.hp.hpl.jena.graph.Node[])
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r2;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper r0;
        com.hp.hpl.jena.graph.Node[] r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node[];

        $r2 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable>;

        $z0 = interfaceinvoke $r2.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: boolean deleteRow(com.hp.hpl.jena.graph.Node[])>(r1);

        return $z0;
    }

    public transient java.util.Iterator find(com.hp.hpl.jena.graph.Node[])
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r2;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper r0;
        com.hp.hpl.jena.graph.Node[] r1;
        java.util.Iterator $r3;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node[];

        $r2 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable>;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: java.util.Iterator find(com.hp.hpl.jena.graph.Node[])>(r1);

        return $r3;
    }

    public transient java.util.Iterator find(com.hp.hpl.jena.tdb.store.NodeId[])
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r2;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper r0;
        java.util.Iterator $r3;
        com.hp.hpl.jena.tdb.store.NodeId[] r1;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper;

        r1 := @parameter0: com.hp.hpl.jena.tdb.store.NodeId[];

        $r2 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable>;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: java.util.Iterator find(com.hp.hpl.jena.tdb.store.NodeId[])>(r1);

        return $r3;
    }

    public java.util.Iterator find(org.apache.jena.atlas.lib.Tuple)
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r2;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper r0;
        java.util.Iterator $r3;
        org.apache.jena.atlas.lib.Tuple r1;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper;

        r1 := @parameter0: org.apache.jena.atlas.lib.Tuple;

        $r2 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable>;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: java.util.Iterator find(org.apache.jena.atlas.lib.Tuple)>(r1);

        return $r3;
    }

    public transient java.util.Iterator findAsNodeIds(com.hp.hpl.jena.graph.Node[])
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r2;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper r0;
        com.hp.hpl.jena.graph.Node[] r1;
        java.util.Iterator $r3;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node[];

        $r2 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable>;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: java.util.Iterator findAsNodeIds(com.hp.hpl.jena.graph.Node[])>(r1);

        return $r3;
    }

    public java.util.Iterator findAll()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r1;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper r0;
        java.util.Iterator $r2;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper;

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: java.util.Iterator findAll()>();

        return $r2;
    }

    public com.hp.hpl.jena.tdb.nodetable.NodeTable getNodeTable()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r1;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper r0;
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r2;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper;

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: com.hp.hpl.jena.tdb.nodetable.NodeTable getNodeTable()>();

        return $r2;
    }

    public com.hp.hpl.jena.tdb.index.TupleTable getTupleTable()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r1;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper r0;
        com.hp.hpl.jena.tdb.index.TupleTable $r2;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper;

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: com.hp.hpl.jena.tdb.index.TupleTable getTupleTable()>();

        return $r2;
    }

    public com.hp.hpl.jena.tdb.sys.DatasetControl getPolicy()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r1;
        com.hp.hpl.jena.tdb.sys.DatasetControl $r2;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper r0;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper;

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: com.hp.hpl.jena.tdb.sys.DatasetControl getPolicy()>();

        return $r2;
    }

    public boolean isEmpty()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r1;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper;

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable>;

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: boolean isEmpty()>();

        return $z0;
    }

    public void clear()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r1;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper r0;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper;

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable>;

        interfaceinvoke $r1.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: void clear()>();

        return;
    }

    public long size()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r1;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper r0;
        long $l0;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper;

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable>;

        $l0 = interfaceinvoke $r1.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: long size()>();

        return $l0;
    }

    public void sync()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r1;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper r0;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper;

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable>;

        interfaceinvoke $r1.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: void sync()>();

        return;
    }

    public void close()
    {
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTable $r1;
        com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper r0;

        r0 := @this: com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper;

        $r1 = r0.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTableWrapper: com.hp.hpl.jena.tdb.nodetable.NodeTupleTable nodeTupleTable>;

        interfaceinvoke $r1.<com.hp.hpl.jena.tdb.nodetable.NodeTupleTable: void close()>();

        return;
    }
}
