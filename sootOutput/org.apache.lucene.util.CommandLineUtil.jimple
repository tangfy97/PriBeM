public final class org.apache.lucene.util.CommandLineUtil extends java.lang.Object
{

    private void <init>()
    {
        org.apache.lucene.util.CommandLineUtil r0;

        r0 := @this: org.apache.lucene.util.CommandLineUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.lucene.store.FSDirectory newFSDirectory(java.lang.String, java.io.File)
    {
        java.lang.NoSuchMethodException $r11;
        java.lang.Exception $r4;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r13, $r14, $r15, $r18, $r19, $r23, $r24, $r25, $r28, $r29, $r33, $r36, $r37, $r38;
        java.lang.ClassCastException $r21;
        java.lang.String r0, $r10, $r17, $r20, $r27, $r30, $r35, $r39;
        org.apache.lucene.store.FSDirectory $r3;
        java.lang.IllegalArgumentException $r5, $r12, $r22, $r32;
        java.io.File r2;
        java.lang.Class $r1, $r16, $r26, $r34;
        java.lang.ClassNotFoundException $r31;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.File;

     label1:
        $r1 = staticinvoke <org.apache.lucene.util.CommandLineUtil: java.lang.Class loadFSDirectoryClass(java.lang.String)>(r0);

        $r3 = staticinvoke <org.apache.lucene.util.CommandLineUtil: org.apache.lucene.store.FSDirectory newFSDirectory(java.lang.Class,java.io.File)>($r1, r2);

     label2:
        return $r3;

     label3:
        $r31 := @caughtexception;

        $r32 = new java.lang.IllegalArgumentException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = class "Lorg/apache/lucene/store/FSDirectory;";

        $r35 = virtualinvoke $r34.<java.lang.Class: java.lang.String getSimpleName()>();

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" implementation not found: ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r39, $r31);

        throw $r32;

     label4:
        $r21 := @caughtexception;

        $r22 = new java.lang.IllegalArgumentException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a ");

        $r26 = class "Lorg/apache/lucene/store/FSDirectory;";

        $r27 = virtualinvoke $r26.<java.lang.Class: java.lang.String getSimpleName()>();

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" implementation");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r30, $r21);

        throw $r22;

     label5:
        $r11 := @caughtexception;

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" constructor with ");

        $r16 = class "Ljava/io/File;";

        $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.String getSimpleName()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as parameter not found");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r20, $r11);

        throw $r12;

     label6:
        $r4 := @caughtexception;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error creating ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" instance");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r10, $r4);

        throw $r5;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.ClassCastException from label1 to label2 with label4;
        catch java.lang.NoSuchMethodException from label1 to label2 with label5;
        catch java.lang.Exception from label1 to label2 with label6;
    }

    public static java.lang.Class loadDirectoryClass(java.lang.String) throws java.lang.ClassNotFoundException
    {
        java.lang.Class $r2, $r3;
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.lucene.util.CommandLineUtil: java.lang.String adjustDirectoryClassName(java.lang.String)>(r0);

        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Lorg/apache/lucene/store/Directory;");

        return $r3;
    }

    public static java.lang.Class loadFSDirectoryClass(java.lang.String) throws java.lang.ClassNotFoundException
    {
        java.lang.Class $r2, $r3;
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.lucene.util.CommandLineUtil: java.lang.String adjustDirectoryClassName(java.lang.String)>(r0);

        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Lorg/apache/lucene/store/FSDirectory;");

        return $r3;
    }

    private static java.lang.String adjustDirectoryClassName(java.lang.String)
    {
        int $i0, $i1, $i3;
        java.lang.String $r4, $r7, $r8, $r12, r16;
        java.lang.Package $r11;
        java.lang.IllegalArgumentException $r18;
        java.lang.StringBuilder $r2, $r5, $r6, $r13, $r14, $r15, $r17, $r19;
        java.lang.Class $r3, $r10;

        r16 := @parameter0: java.lang.String;

        if r16 == null goto label1;

        $r8 = virtualinvoke r16.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r18 = new java.lang.IllegalArgumentException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The ");

        $r3 = class "Lorg/apache/lucene/store/FSDirectory;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" implementation cannot be null or empty");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r18;

     label2:
        $i1 = virtualinvoke r16.<java.lang.String: int indexOf(java.lang.String)>(".");

        $i3 = (int) -1;

        if $i1 != $i3 goto label3;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r10 = class "Lorg/apache/lucene/store/Directory;";

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.Package getPackage()>();

        $r12 = virtualinvoke $r11.<java.lang.Package: java.lang.String getName()>();

        $r13 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        return r16;
    }

    public static org.apache.lucene.store.FSDirectory newFSDirectory(java.lang.Class, java.io.File) throws java.lang.NoSuchMethodException, java.lang.InstantiationException, java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException
    {
        java.lang.Object[] $r3;
        java.lang.Class[] $r1;
        java.lang.Class r0;
        java.lang.Object $r5;
        java.lang.reflect.Constructor $r2;
        org.apache.lucene.store.FSDirectory $r6;
        java.io.File r4;

        r0 := @parameter0: java.lang.Class;

        r4 := @parameter1: java.io.File;

        $r1 = newarray (java.lang.Class)[1];

        $r1[0] = class "Ljava/io/File;";

        $r2 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r1);

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r4;

        $r5 = virtualinvoke $r2.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r3);

        $r6 = (org.apache.lucene.store.FSDirectory) $r5;

        return $r6;
    }
}
