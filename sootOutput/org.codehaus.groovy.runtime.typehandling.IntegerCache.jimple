public class org.codehaus.groovy.runtime.typehandling.IntegerCache extends java.lang.Object
{
    static final java.lang.Integer[] CACHE;

    private void <init>()
    {
        org.codehaus.groovy.runtime.typehandling.IntegerCache r0;

        r0 := @this: org.codehaus.groovy.runtime.typehandling.IntegerCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Integer integerValue(int)
    {
        int i0, $i1, $i3;
        java.lang.Integer $r2, $r3;
        java.lang.Integer[] $r1;

        i0 := @parameter0: int;

        $i3 = (int) -128;

        if i0 < $i3 goto label1;

        if i0 > 127 goto label1;

        $r1 = <org.codehaus.groovy.runtime.typehandling.IntegerCache: java.lang.Integer[] CACHE>;

        $i1 = i0 + 128;

        $r2 = $r1[$i1];

        return $r2;

     label1:
        $r3 = new java.lang.Integer;

        specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i0);

        return $r3;
    }

    static void <clinit>()
    {
        int $i0, $i1, i2;
        java.lang.Integer $r2;
        java.lang.Integer[] $r0, $r1, $r3;

        $r0 = newarray (java.lang.Integer)[256];

        <org.codehaus.groovy.runtime.typehandling.IntegerCache: java.lang.Integer[] CACHE> = $r0;

        i2 = 0;

     label1:
        $r1 = <org.codehaus.groovy.runtime.typehandling.IntegerCache: java.lang.Integer[] CACHE>;

        $i0 = lengthof $r1;

        if i2 >= $i0 goto label2;

        $r3 = <org.codehaus.groovy.runtime.typehandling.IntegerCache: java.lang.Integer[] CACHE>;

        $r2 = new java.lang.Integer;

        $i1 = i2 - 128;

        specialinvoke $r2.<java.lang.Integer: void <init>(int)>($i1);

        $r3[i2] = $r2;

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }
}
