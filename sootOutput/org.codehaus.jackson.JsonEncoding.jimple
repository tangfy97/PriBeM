public final enum class org.codehaus.jackson.JsonEncoding extends java.lang.Enum
{
    public static final enum org.codehaus.jackson.JsonEncoding UTF8;
    public static final enum org.codehaus.jackson.JsonEncoding UTF16_BE;
    public static final enum org.codehaus.jackson.JsonEncoding UTF16_LE;
    public static final enum org.codehaus.jackson.JsonEncoding UTF32_BE;
    public static final enum org.codehaus.jackson.JsonEncoding UTF32_LE;
    final java.lang.String mJavaName;
    final boolean mBigEndian;
    private static final org.codehaus.jackson.JsonEncoding[] $VALUES;

    public static org.codehaus.jackson.JsonEncoding[] values()
    {
        java.lang.Object $r1;
        org.codehaus.jackson.JsonEncoding[] $r0, $r2;

        $r0 = <org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.codehaus.jackson.JsonEncoding[]) $r1;

        return $r2;
    }

    public static org.codehaus.jackson.JsonEncoding valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.codehaus.jackson.JsonEncoding $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/codehaus/jackson/JsonEncoding;", r0);

        $r2 = (org.codehaus.jackson.JsonEncoding) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, java.lang.String, boolean)
    {
        org.codehaus.jackson.JsonEncoding r0;
        int i0;
        java.lang.String r1, r2;
        boolean z0;

        r0 := @this: org.codehaus.jackson.JsonEncoding;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<org.codehaus.jackson.JsonEncoding: java.lang.String mJavaName> = r2;

        r0.<org.codehaus.jackson.JsonEncoding: boolean mBigEndian> = z0;

        return;
    }

    public java.lang.String getJavaName()
    {
        java.lang.String $r1;
        org.codehaus.jackson.JsonEncoding r0;

        r0 := @this: org.codehaus.jackson.JsonEncoding;

        $r1 = r0.<org.codehaus.jackson.JsonEncoding: java.lang.String mJavaName>;

        return $r1;
    }

    public boolean isBigEndian()
    {
        org.codehaus.jackson.JsonEncoding r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.JsonEncoding;

        $z0 = r0.<org.codehaus.jackson.JsonEncoding: boolean mBigEndian>;

        return $z0;
    }

    static void <clinit>()
    {
        org.codehaus.jackson.JsonEncoding[] $r5;
        org.codehaus.jackson.JsonEncoding $r0, $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10;

        $r0 = new org.codehaus.jackson.JsonEncoding;

        specialinvoke $r0.<org.codehaus.jackson.JsonEncoding: void <init>(java.lang.String,int,java.lang.String,boolean)>("UTF8", 0, "UTF-8", 0);

        <org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding UTF8> = $r0;

        $r1 = new org.codehaus.jackson.JsonEncoding;

        specialinvoke $r1.<org.codehaus.jackson.JsonEncoding: void <init>(java.lang.String,int,java.lang.String,boolean)>("UTF16_BE", 1, "UTF-16BE", 1);

        <org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding UTF16_BE> = $r1;

        $r2 = new org.codehaus.jackson.JsonEncoding;

        specialinvoke $r2.<org.codehaus.jackson.JsonEncoding: void <init>(java.lang.String,int,java.lang.String,boolean)>("UTF16_LE", 2, "UTF-16LE", 0);

        <org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding UTF16_LE> = $r2;

        $r3 = new org.codehaus.jackson.JsonEncoding;

        specialinvoke $r3.<org.codehaus.jackson.JsonEncoding: void <init>(java.lang.String,int,java.lang.String,boolean)>("UTF32_BE", 3, "UTF-32BE", 1);

        <org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding UTF32_BE> = $r3;

        $r4 = new org.codehaus.jackson.JsonEncoding;

        specialinvoke $r4.<org.codehaus.jackson.JsonEncoding: void <init>(java.lang.String,int,java.lang.String,boolean)>("UTF32_LE", 4, "UTF-32LE", 0);

        <org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding UTF32_LE> = $r4;

        $r5 = newarray (org.codehaus.jackson.JsonEncoding)[5];

        $r6 = <org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding UTF8>;

        $r5[0] = $r6;

        $r7 = <org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding UTF16_BE>;

        $r5[1] = $r7;

        $r8 = <org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding UTF16_LE>;

        $r5[2] = $r8;

        $r9 = <org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding UTF32_BE>;

        $r5[3] = $r9;

        $r10 = <org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding UTF32_LE>;

        $r5[4] = $r10;

        <org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding[] $VALUES> = $r5;

        return;
    }
}
