public class org.springframework.beans.factory.config.BeanExpressionContext extends java.lang.Object
{
    private final org.springframework.beans.factory.config.ConfigurableBeanFactory beanFactory;
    private final org.springframework.beans.factory.config.Scope scope;

    public void <init>(org.springframework.beans.factory.config.ConfigurableBeanFactory, org.springframework.beans.factory.config.Scope)
    {
        org.springframework.beans.factory.config.Scope r2;
        org.springframework.beans.factory.config.BeanExpressionContext r0;
        org.springframework.beans.factory.config.ConfigurableBeanFactory r1;

        r0 := @this: org.springframework.beans.factory.config.BeanExpressionContext;

        r1 := @parameter0: org.springframework.beans.factory.config.ConfigurableBeanFactory;

        r2 := @parameter1: org.springframework.beans.factory.config.Scope;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "BeanFactory must not be null");

        r0.<org.springframework.beans.factory.config.BeanExpressionContext: org.springframework.beans.factory.config.ConfigurableBeanFactory beanFactory> = r1;

        r0.<org.springframework.beans.factory.config.BeanExpressionContext: org.springframework.beans.factory.config.Scope scope> = r2;

        return;
    }

    public final org.springframework.beans.factory.config.ConfigurableBeanFactory getBeanFactory()
    {
        org.springframework.beans.factory.config.BeanExpressionContext r0;
        org.springframework.beans.factory.config.ConfigurableBeanFactory $r1;

        r0 := @this: org.springframework.beans.factory.config.BeanExpressionContext;

        $r1 = r0.<org.springframework.beans.factory.config.BeanExpressionContext: org.springframework.beans.factory.config.ConfigurableBeanFactory beanFactory>;

        return $r1;
    }

    public final org.springframework.beans.factory.config.Scope getScope()
    {
        org.springframework.beans.factory.config.Scope $r1;
        org.springframework.beans.factory.config.BeanExpressionContext r0;

        r0 := @this: org.springframework.beans.factory.config.BeanExpressionContext;

        $r1 = r0.<org.springframework.beans.factory.config.BeanExpressionContext: org.springframework.beans.factory.config.Scope scope>;

        return $r1;
    }

    public boolean containsObject(java.lang.String)
    {
        org.springframework.beans.factory.config.Scope $r3, $r4;
        java.lang.Object $r5;
        java.lang.String r1;
        org.springframework.beans.factory.config.BeanExpressionContext r0;
        org.springframework.beans.factory.config.ConfigurableBeanFactory $r2;
        boolean $z0;

        r0 := @this: org.springframework.beans.factory.config.BeanExpressionContext;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.beans.factory.config.BeanExpressionContext: org.springframework.beans.factory.config.ConfigurableBeanFactory beanFactory>;

        $z0 = interfaceinvoke $r2.<org.springframework.beans.factory.config.ConfigurableBeanFactory: boolean containsBean(java.lang.String)>(r1);

        if $z0 != 0 goto label2;

        $r3 = r0.<org.springframework.beans.factory.config.BeanExpressionContext: org.springframework.beans.factory.config.Scope scope>;

        if $r3 == null goto label1;

        $r4 = r0.<org.springframework.beans.factory.config.BeanExpressionContext: org.springframework.beans.factory.config.Scope scope>;

        $r5 = interfaceinvoke $r4.<org.springframework.beans.factory.config.Scope: java.lang.Object resolveContextualObject(java.lang.String)>(r1);

        if $r5 != null goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public java.lang.Object getObject(java.lang.String)
    {
        org.springframework.beans.factory.config.Scope $r3, $r4;
        org.springframework.beans.factory.config.BeanExpressionContext r0;
        java.lang.Object $r5, $r7;
        java.lang.String r1;
        org.springframework.beans.factory.config.ConfigurableBeanFactory $r2, $r6;
        boolean $z0;

        r0 := @this: org.springframework.beans.factory.config.BeanExpressionContext;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.beans.factory.config.BeanExpressionContext: org.springframework.beans.factory.config.ConfigurableBeanFactory beanFactory>;

        $z0 = interfaceinvoke $r2.<org.springframework.beans.factory.config.ConfigurableBeanFactory: boolean containsBean(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $r6 = r0.<org.springframework.beans.factory.config.BeanExpressionContext: org.springframework.beans.factory.config.ConfigurableBeanFactory beanFactory>;

        $r7 = interfaceinvoke $r6.<org.springframework.beans.factory.config.ConfigurableBeanFactory: java.lang.Object getBean(java.lang.String)>(r1);

        return $r7;

     label1:
        $r3 = r0.<org.springframework.beans.factory.config.BeanExpressionContext: org.springframework.beans.factory.config.Scope scope>;

        if $r3 == null goto label2;

        $r4 = r0.<org.springframework.beans.factory.config.BeanExpressionContext: org.springframework.beans.factory.config.Scope scope>;

        $r5 = interfaceinvoke $r4.<org.springframework.beans.factory.config.Scope: java.lang.Object resolveContextualObject(java.lang.String)>(r1);

        return $r5;

     label2:
        return null;
    }

    public boolean equals(java.lang.Object)
    {
        org.springframework.beans.factory.config.Scope $r5, $r6;
        org.springframework.beans.factory.config.BeanExpressionContext r0, r2;
        java.lang.Object r1;
        org.springframework.beans.factory.config.ConfigurableBeanFactory $r3, $r4;
        boolean $z0;

        r0 := @this: org.springframework.beans.factory.config.BeanExpressionContext;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.springframework.beans.factory.config.BeanExpressionContext;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.springframework.beans.factory.config.BeanExpressionContext) r1;

        $r4 = r0.<org.springframework.beans.factory.config.BeanExpressionContext: org.springframework.beans.factory.config.ConfigurableBeanFactory beanFactory>;

        $r3 = r2.<org.springframework.beans.factory.config.BeanExpressionContext: org.springframework.beans.factory.config.ConfigurableBeanFactory beanFactory>;

        if $r4 != $r3 goto label3;

        $r6 = r0.<org.springframework.beans.factory.config.BeanExpressionContext: org.springframework.beans.factory.config.Scope scope>;

        $r5 = r2.<org.springframework.beans.factory.config.BeanExpressionContext: org.springframework.beans.factory.config.Scope scope>;

        if $r6 != $r5 goto label3;

        return 1;

     label3:
        return 0;
    }

    public int hashCode()
    {
        int $i0;
        org.springframework.beans.factory.config.BeanExpressionContext r0;
        org.springframework.beans.factory.config.ConfigurableBeanFactory $r1;

        r0 := @this: org.springframework.beans.factory.config.BeanExpressionContext;

        $r1 = r0.<org.springframework.beans.factory.config.BeanExpressionContext: org.springframework.beans.factory.config.ConfigurableBeanFactory beanFactory>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }
}
