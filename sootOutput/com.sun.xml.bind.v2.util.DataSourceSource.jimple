public final class com.sun.xml.bind.v2.util.DataSourceSource extends javax.xml.transform.stream.StreamSource
{
    private final javax.activation.DataSource source;
    private final java.lang.String charset;
    private java.io.Reader r;
    private java.io.InputStream is;

    public void <init>(javax.activation.DataHandler) throws javax.activation.MimeTypeParseException
    {
        javax.activation.DataSource $r2;
        com.sun.xml.bind.v2.util.DataSourceSource r0;
        javax.activation.DataHandler r1;

        r0 := @this: com.sun.xml.bind.v2.util.DataSourceSource;

        r1 := @parameter0: javax.activation.DataHandler;

        $r2 = virtualinvoke r1.<javax.activation.DataHandler: javax.activation.DataSource getDataSource()>();

        specialinvoke r0.<com.sun.xml.bind.v2.util.DataSourceSource: void <init>(javax.activation.DataSource)>($r2);

        return;
    }

    public void <init>(javax.activation.DataSource) throws javax.activation.MimeTypeParseException
    {
        javax.activation.MimeType $r3;
        javax.activation.DataSource r1;
        com.sun.xml.bind.v2.util.DataSourceSource r0;
        java.lang.String $r2, $r4;

        r0 := @this: com.sun.xml.bind.v2.util.DataSourceSource;

        r1 := @parameter0: javax.activation.DataSource;

        specialinvoke r0.<javax.xml.transform.stream.StreamSource: void <init>()>();

        r0.<com.sun.xml.bind.v2.util.DataSourceSource: javax.activation.DataSource source> = r1;

        $r2 = interfaceinvoke r1.<javax.activation.DataSource: java.lang.String getContentType()>();

        if $r2 != null goto label1;

        r0.<com.sun.xml.bind.v2.util.DataSourceSource: java.lang.String charset> = null;

        goto label2;

     label1:
        $r3 = new javax.activation.MimeType;

        specialinvoke $r3.<javax.activation.MimeType: void <init>(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<javax.activation.MimeType: java.lang.String getParameter(java.lang.String)>("charset");

        r0.<com.sun.xml.bind.v2.util.DataSourceSource: java.lang.String charset> = $r4;

     label2:
        return;
    }

    public void setReader(java.io.Reader)
    {
        java.lang.UnsupportedOperationException $r0;
        com.sun.xml.bind.v2.util.DataSourceSource r1;
        java.io.Reader r2;

        r1 := @this: com.sun.xml.bind.v2.util.DataSourceSource;

        r2 := @parameter0: java.io.Reader;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void setInputStream(java.io.InputStream)
    {
        java.lang.UnsupportedOperationException $r0;
        com.sun.xml.bind.v2.util.DataSourceSource r1;
        java.io.InputStream r2;

        r1 := @this: com.sun.xml.bind.v2.util.DataSourceSource;

        r2 := @parameter0: java.io.InputStream;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.io.Reader getReader()
    {
        java.io.IOException $r8;
        java.io.Reader $r2, $r3;
        java.lang.RuntimeException $r9;
        java.io.InputStreamReader $r4;
        javax.activation.DataSource $r5;
        com.sun.xml.bind.v2.util.DataSourceSource r0;
        java.lang.String $r1, $r7;
        java.io.InputStream $r6;

        r0 := @this: com.sun.xml.bind.v2.util.DataSourceSource;

     label1:
        $r1 = r0.<com.sun.xml.bind.v2.util.DataSourceSource: java.lang.String charset>;

        if $r1 != null goto label3;

     label2:
        return null;

     label3:
        $r2 = r0.<com.sun.xml.bind.v2.util.DataSourceSource: java.io.Reader r>;

        if $r2 != null goto label4;

        $r4 = new java.io.InputStreamReader;

        $r5 = r0.<com.sun.xml.bind.v2.util.DataSourceSource: javax.activation.DataSource source>;

        $r6 = interfaceinvoke $r5.<javax.activation.DataSource: java.io.InputStream getInputStream()>();

        $r7 = r0.<com.sun.xml.bind.v2.util.DataSourceSource: java.lang.String charset>;

        specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r6, $r7);

        r0.<com.sun.xml.bind.v2.util.DataSourceSource: java.io.Reader r> = $r4;

     label4:
        $r3 = r0.<com.sun.xml.bind.v2.util.DataSourceSource: java.io.Reader r>;

     label5:
        return $r3;

     label6:
        $r8 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

        catch java.io.IOException from label1 to label2 with label6;
        catch java.io.IOException from label3 to label5 with label6;
    }

    public java.io.InputStream getInputStream()
    {
        java.io.IOException $r6;
        java.lang.RuntimeException $r7;
        javax.activation.DataSource $r4;
        com.sun.xml.bind.v2.util.DataSourceSource r0;
        java.lang.String $r1;
        java.io.InputStream $r2, $r3, $r5;

        r0 := @this: com.sun.xml.bind.v2.util.DataSourceSource;

     label1:
        $r1 = r0.<com.sun.xml.bind.v2.util.DataSourceSource: java.lang.String charset>;

        if $r1 == null goto label3;

     label2:
        return null;

     label3:
        $r2 = r0.<com.sun.xml.bind.v2.util.DataSourceSource: java.io.InputStream is>;

        if $r2 != null goto label4;

        $r4 = r0.<com.sun.xml.bind.v2.util.DataSourceSource: javax.activation.DataSource source>;

        $r5 = interfaceinvoke $r4.<javax.activation.DataSource: java.io.InputStream getInputStream()>();

        r0.<com.sun.xml.bind.v2.util.DataSourceSource: java.io.InputStream is> = $r5;

     label4:
        $r3 = r0.<com.sun.xml.bind.v2.util.DataSourceSource: java.io.InputStream is>;

     label5:
        return $r3;

     label6:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

        catch java.io.IOException from label1 to label2 with label6;
        catch java.io.IOException from label3 to label5 with label6;
    }

    public javax.activation.DataSource getDataSource()
    {
        javax.activation.DataSource $r1;
        com.sun.xml.bind.v2.util.DataSourceSource r0;

        r0 := @this: com.sun.xml.bind.v2.util.DataSourceSource;

        $r1 = r0.<com.sun.xml.bind.v2.util.DataSourceSource: javax.activation.DataSource source>;

        return $r1;
    }
}
