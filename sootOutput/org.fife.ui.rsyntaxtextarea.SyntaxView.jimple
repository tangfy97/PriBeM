public class org.fife.ui.rsyntaxtextarea.SyntaxView extends javax.swing.text.View implements javax.swing.text.TabExpander, org.fife.ui.rsyntaxtextarea.TokenOrientedView, org.fife.ui.rsyntaxtextarea.RSTAView
{
    java.awt.Font font;
    protected java.awt.FontMetrics metrics;
    javax.swing.text.Element longLine;
    float longLineWidth;
    private int tabSize;
    protected int tabBase;
    private org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host;
    private int lineHeight;
    private int ascent;
    private int clipStart;
    private int clipEnd;

    public void <init>(javax.swing.text.Element)
    {
        org.fife.ui.rsyntaxtextarea.SyntaxView r0;
        javax.swing.text.Element r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.SyntaxView;

        r1 := @parameter0: javax.swing.text.Element;

        specialinvoke r0.<javax.swing.text.View: void <init>(javax.swing.text.Element)>(r1);

        r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int lineHeight> = 0;

        return;
    }

    void calculateLongestLine()
    {
        org.fife.ui.rsyntaxtextarea.SyntaxView r0;
        byte $b4;
        int $i0, $i1, $i2, $i3, i5, $i6;
        java.awt.Container $r1;
        java.awt.Font $r2, $r3;
        java.awt.FontMetrics $r4, $r5;
        float $f0, $f1;
        javax.swing.text.Element $r6, $r7;

        r0 := @this: org.fife.ui.rsyntaxtextarea.SyntaxView;

        $r1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: java.awt.Container getContainer()>();

        $r2 = virtualinvoke $r1.<java.awt.Component: java.awt.Font getFont()>();

        r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: java.awt.Font font> = $r2;

        $r3 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: java.awt.Font font>;

        $r4 = virtualinvoke $r1.<java.awt.Component: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r3);

        r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: java.awt.FontMetrics metrics> = $r4;

        $i0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int getTabSize()>();

        $r5 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: java.awt.FontMetrics metrics>;

        $i1 = virtualinvoke $r5.<java.awt.FontMetrics: int charWidth(char)>(32);

        $i2 = $i0 * $i1;

        r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int tabSize> = $i2;

        $r6 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: javax.swing.text.Element getElement()>();

        $i3 = interfaceinvoke $r6.<javax.swing.text.Element: int getElementCount()>();

        i5 = 0;

     label1:
        if i5 >= $i3 goto label3;

        $r7 = interfaceinvoke $r6.<javax.swing.text.Element: javax.swing.text.Element getElement(int)>(i5);

        $f0 = specialinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: float getLineWidth(int)>(i5);

        $f1 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: float longLineWidth>;

        $b4 = $f0 cmpl $f1;

        $i6 = (int) $b4;

        if $i6 <= 0 goto label2;

        r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: float longLineWidth> = $f0;

        r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: javax.swing.text.Element longLine> = $r7;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        return;
    }

    public void changedUpdate(javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory)
    {
        java.awt.Shape r2;
        org.fife.ui.rsyntaxtextarea.SyntaxView r0;
        javax.swing.text.ViewFactory r3;
        javax.swing.event.DocumentEvent r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.SyntaxView;

        r1 := @parameter0: javax.swing.event.DocumentEvent;

        r2 := @parameter1: java.awt.Shape;

        r3 := @parameter2: javax.swing.text.ViewFactory;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: void updateDamage(javax.swing.event.DocumentEvent,java.awt.Shape,javax.swing.text.ViewFactory)>(r1, r2, r3);

        return;
    }

    protected void damageLineRange(int, int, java.awt.Shape, java.awt.Component)
    {
        java.awt.Shape r0;
        java.awt.Rectangle $r2, $r3, $r5;
        java.awt.Component r4;
        org.fife.ui.rsyntaxtextarea.SyntaxView r1;
        int i0, i1, $i2, $i3, $i4, $i5;

        r1 := @this: org.fife.ui.rsyntaxtextarea.SyntaxView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: java.awt.Shape;

        r4 := @parameter3: java.awt.Component;

        if r0 == null goto label2;

        $r2 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.SyntaxView: java.awt.Rectangle lineToRect(java.awt.Shape,int)>(r0, i0);

        $r3 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.SyntaxView: java.awt.Rectangle lineToRect(java.awt.Shape,int)>(r0, i1);

        if $r2 == null goto label1;

        if $r3 == null goto label1;

        $r5 = virtualinvoke $r2.<java.awt.Rectangle: java.awt.Rectangle union(java.awt.Rectangle)>($r3);

        $i5 = $r5.<java.awt.Rectangle: int x>;

        $i4 = $r5.<java.awt.Rectangle: int y>;

        $i3 = $r5.<java.awt.Rectangle: int width>;

        $i2 = $r5.<java.awt.Rectangle: int height>;

        virtualinvoke r4.<java.awt.Component: void repaint(int,int,int,int)>($i5, $i4, $i3, $i2);

        goto label2;

     label1:
        virtualinvoke r4.<java.awt.Component: void repaint()>();

     label2:
        return;
    }

    public float drawLine(org.fife.ui.rsyntaxtextarea.Token, java.awt.Graphics2D, float, float)
    {
        java.awt.Color $r3;
        org.fife.ui.rsyntaxtextarea.SyntaxView r0;
        byte $b1;
        java.awt.Graphics2D r1;
        int $i0, $i2, $i3;
        boolean $z0, $z1;
        java.awt.Font $r5;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r2, $r4, $r6, $r8;
        float f0, f1, $f2, $f3, f4;
        org.fife.ui.rsyntaxtextarea.Token r7;

        r0 := @this: org.fife.ui.rsyntaxtextarea.SyntaxView;

        r7 := @parameter0: org.fife.ui.rsyntaxtextarea.Token;

        r1 := @parameter1: java.awt.Graphics2D;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        f4 = f0;

     label1:
        if r7 == null goto label2;

        $z0 = virtualinvoke r7.<org.fife.ui.rsyntaxtextarea.Token: boolean isPaintable()>();

        if $z0 == 0 goto label2;

        $i0 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int clipEnd>;

        $f2 = (float) $i0;

        $b1 = f4 cmpg $f2;

        $i3 = (int) $b1;

        if $i3 >= 0 goto label2;

        $r6 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $i2 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int clipStart>;

        $f3 = (float) $i2;

        f4 = virtualinvoke r7.<org.fife.ui.rsyntaxtextarea.Token: float paint(java.awt.Graphics2D,float,float,org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,javax.swing.text.TabExpander,float)>(r1, f4, f1, $r6, r0, $f3);

        r7 = virtualinvoke r7.<org.fife.ui.rsyntaxtextarea.Token: org.fife.ui.rsyntaxtextarea.Token getNextToken()>();

        goto label1;

     label2:
        $r8 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $z1 = virtualinvoke $r8.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: boolean getEOLMarkersVisible()>();

        if $z1 == 0 goto label3;

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $r3 = virtualinvoke $r2.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.awt.Color getForegroundForTokenType(int)>(21);

        virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r3);

        $r4 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $r5 = virtualinvoke $r4.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.awt.Font getFontForTokenType(int)>(21);

        virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r5);

        virtualinvoke r1.<java.awt.Graphics2D: void drawString(java.lang.String,float,float)>("\u00b6", f4, f1);

     label3:
        return f4;
    }

    private float getLineWidth(int)
    {
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r5;
        org.fife.ui.rsyntaxtextarea.RSyntaxDocument $r2;
        org.fife.ui.rsyntaxtextarea.SyntaxView r0;
        int i0;
        float $f0;
        javax.swing.text.Document $r1;
        java.awt.Container $r4;
        org.fife.ui.rsyntaxtextarea.Token $r3;

        r0 := @this: org.fife.ui.rsyntaxtextarea.SyntaxView;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: javax.swing.text.Document getDocument()>();

        $r2 = (org.fife.ui.rsyntaxtextarea.RSyntaxDocument) $r1;

        $r3 = virtualinvoke $r2.<org.fife.ui.rsyntaxtextarea.RSyntaxDocument: org.fife.ui.rsyntaxtextarea.Token getTokenListForLine(int)>(i0);

        $r4 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: java.awt.Container getContainer()>();

        $r5 = (org.fife.ui.rsyntaxtextarea.RSyntaxTextArea) $r4;

        $f0 = staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxUtilities: float getTokenListWidth(org.fife.ui.rsyntaxtextarea.Token,org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,javax.swing.text.TabExpander)>($r3, $r5, r0);

        return $f0;
    }

    public int getNextVisualPositionFrom(int, javax.swing.text.Position$Bias, java.awt.Shape, int, javax.swing.text.Position$Bias[]) throws javax.swing.text.BadLocationException
    {
        java.awt.Shape r1;
        org.fife.ui.rsyntaxtextarea.SyntaxView r3;
        javax.swing.text.Position$Bias[] r2;
        javax.swing.text.Position$Bias r0;
        int i0, i1, $i2;

        r3 := @this: org.fife.ui.rsyntaxtextarea.SyntaxView;

        i0 := @parameter0: int;

        r0 := @parameter1: javax.swing.text.Position$Bias;

        r1 := @parameter2: java.awt.Shape;

        i1 := @parameter3: int;

        r2 := @parameter4: javax.swing.text.Position$Bias[];

        $i2 = staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxUtilities: int getNextVisualPositionFrom(int,javax.swing.text.Position$Bias,java.awt.Shape,int,javax.swing.text.Position$Bias[],javax.swing.text.View)>(i0, r0, r1, i1, r2, r3);

        return $i2;
    }

    public float getPreferredSpan(int)
    {
        org.fife.ui.rsyntaxtextarea.SyntaxView r0;
        java.lang.StringBuffer $r10, $r11, $r12;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        java.lang.String $r13;
        boolean $z0, $z1;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r1, $r3, $r4, $r6, $r7;
        java.lang.IllegalArgumentException $r9;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager $r5;
        java.awt.FontMetrics $r8;
        float $f0, $f1, $f2, f3;
        javax.swing.text.Element $r2;

        r0 := @this: org.fife.ui.rsyntaxtextarea.SyntaxView;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: void updateMetrics()>();

        lookupswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label3;
            default: goto label7;
        };

     label1:
        $f1 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: float longLineWidth>;

        f3 = $f1 + 10.0F;

        $r7 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $z1 = virtualinvoke $r7.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: boolean getEOLMarkersVisible()>();

        if $z1 == 0 goto label2;

        $r8 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: java.awt.FontMetrics metrics>;

        $i5 = virtualinvoke $r8.<java.awt.FontMetrics: int charWidth(char)>(182);

        $f2 = (float) $i5;

        f3 = f3 + $f2;

     label2:
        return f3;

     label3:
        $r1 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        if $r1 == null goto label4;

        $r6 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $i6 = virtualinvoke $r6.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getLineHeight()>();

        goto label5;

     label4:
        $i6 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int lineHeight>;

     label5:
        r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int lineHeight> = $i6;

        $r2 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: javax.swing.text.Element getElement()>();

        $i1 = interfaceinvoke $r2.<javax.swing.text.Element: int getElementCount()>();

        i7 = $i1;

        $r3 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $z0 = virtualinvoke $r3.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: boolean isCodeFoldingEnabled()>();

        if $z0 == 0 goto label6;

        $r4 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $r5 = virtualinvoke $r4.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: org.fife.ui.rsyntaxtextarea.folding.FoldManager getFoldManager()>();

        $i4 = virtualinvoke $r5.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: int getHiddenLineCount()>();

        i7 = $i1 - $i4;

     label6:
        $i2 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int lineHeight>;

        $i3 = i7 * $i2;

        $f0 = (float) $i3;

        return $f0;

     label7:
        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid axis: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r9;
    }

    protected int getTabSize()
    {
        org.fife.ui.rsyntaxtextarea.SyntaxView r0;
        int $i0;
        java.lang.Object $r2;
        javax.swing.text.Document $r1;
        java.lang.Integer r3;

        r0 := @this: org.fife.ui.rsyntaxtextarea.SyntaxView;

        $r1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: javax.swing.text.Document getDocument()>();

        $r2 = interfaceinvoke $r1.<javax.swing.text.Document: java.lang.Object getProperty(java.lang.Object)>("tabSize");

        r3 = (java.lang.Integer) $r2;

        if r3 == null goto label1;

        $i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        goto label2;

     label1:
        $i0 = 5;

     label2:
        return $i0;
    }

    public org.fife.ui.rsyntaxtextarea.Token getTokenListForPhysicalLineAbove(int)
    {
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r4;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager $r5;
        org.fife.ui.rsyntaxtextarea.RSyntaxDocument r2;
        org.fife.ui.rsyntaxtextarea.SyntaxView r0;
        int i0, $i1, $i2, i3, $i5;
        javax.swing.text.Document $r1;
        javax.swing.text.Element $r3;
        org.fife.ui.rsyntaxtextarea.Token $r6, $r7;

        r0 := @this: org.fife.ui.rsyntaxtextarea.SyntaxView;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: javax.swing.text.Document getDocument()>();

        r2 = (org.fife.ui.rsyntaxtextarea.RSyntaxDocument) $r1;

        $r3 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.RSyntaxDocument: javax.swing.text.Element getDefaultRootElement()>();

        $i1 = interfaceinvoke $r3.<javax.swing.text.Element: int getElementIndex(int)>(i0);

        $r4 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $r5 = virtualinvoke $r4.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: org.fife.ui.rsyntaxtextarea.folding.FoldManager getFoldManager()>();

        if $r5 != null goto label1;

        $i5 = (int) -1;

        i3 = $i1 + $i5;

        if i3 < 0 goto label2;

        $r7 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.RSyntaxDocument: org.fife.ui.rsyntaxtextarea.Token getTokenListForLine(int)>(i3);

        return $r7;

     label1:
        $i2 = virtualinvoke $r5.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: int getVisibleLineAbove(int)>($i1);

        if $i2 < 0 goto label2;

        $r6 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.RSyntaxDocument: org.fife.ui.rsyntaxtextarea.Token getTokenListForLine(int)>($i2);

        return $r6;

     label2:
        return null;
    }

    public org.fife.ui.rsyntaxtextarea.Token getTokenListForPhysicalLineBelow(int)
    {
        org.fife.ui.rsyntaxtextarea.SyntaxView r0;
        int $i0, i1, $i2, $i3, $i4, $i5;
        boolean $z0;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r4, $r5;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager $r6;
        org.fife.ui.rsyntaxtextarea.RSyntaxDocument r2;
        javax.swing.text.Document $r1;
        javax.swing.text.Element $r3;
        org.fife.ui.rsyntaxtextarea.Token $r7, $r8;

        r0 := @this: org.fife.ui.rsyntaxtextarea.SyntaxView;

        i1 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: javax.swing.text.Document getDocument()>();

        r2 = (org.fife.ui.rsyntaxtextarea.RSyntaxDocument) $r1;

        $r3 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.RSyntaxDocument: javax.swing.text.Element getDefaultRootElement()>();

        $i0 = interfaceinvoke $r3.<javax.swing.text.Element: int getElementCount()>();

        $i2 = interfaceinvoke $r3.<javax.swing.text.Element: int getElementIndex(int)>(i1);

        $r4 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $z0 = virtualinvoke $r4.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: boolean isCodeFoldingEnabled()>();

        if $z0 != 0 goto label1;

        $i4 = $i0 - 1;

        if $i2 >= $i4 goto label2;

        $i5 = $i2 + 1;

        $r8 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.RSyntaxDocument: org.fife.ui.rsyntaxtextarea.Token getTokenListForLine(int)>($i5);

        return $r8;

     label1:
        $r5 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $r6 = virtualinvoke $r5.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: org.fife.ui.rsyntaxtextarea.folding.FoldManager getFoldManager()>();

        $i3 = virtualinvoke $r6.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: int getVisibleLineBelow(int)>($i2);

        if $i3 < 0 goto label2;

        if $i3 >= $i0 goto label2;

        $r7 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.RSyntaxDocument: org.fife.ui.rsyntaxtextarea.Token getTokenListForLine(int)>($i3);

        return $r7;

     label2:
        return null;
    }

    public void insertUpdate(javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory)
    {
        java.awt.Shape r2;
        org.fife.ui.rsyntaxtextarea.SyntaxView r0;
        javax.swing.text.ViewFactory r3;
        javax.swing.event.DocumentEvent r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.SyntaxView;

        r1 := @parameter0: javax.swing.event.DocumentEvent;

        r2 := @parameter1: java.awt.Shape;

        r3 := @parameter2: javax.swing.text.ViewFactory;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: void updateDamage(javax.swing.event.DocumentEvent,java.awt.Shape,javax.swing.text.ViewFactory)>(r1, r2, r3);

        return;
    }

    protected java.awt.Rectangle lineToRect(java.awt.Shape, int)
    {
        java.awt.Rectangle $r3, $r6, r10;
        org.fife.ui.rsyntaxtextarea.SyntaxView r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9;
        boolean $z0;
        java.awt.Shape r2;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r4, $r5, $r7, $r9;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager $r8;
        java.awt.FontMetrics $r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.SyntaxView;

        r2 := @parameter0: java.awt.Shape;

        i8 := @parameter1: int;

        r10 = null;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: void updateMetrics()>();

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: java.awt.FontMetrics metrics>;

        if $r1 == null goto label4;

        $r3 = interfaceinvoke r2.<java.awt.Shape: java.awt.Rectangle getBounds()>();

        $r4 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        if $r4 == null goto label1;

        $r9 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $i9 = virtualinvoke $r9.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getLineHeight()>();

        goto label2;

     label1:
        $i9 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int lineHeight>;

     label2:
        r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int lineHeight> = $i9;

        $r5 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $z0 = virtualinvoke $r5.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: boolean isCodeFoldingEnabled()>();

        if $z0 == 0 goto label3;

        $r7 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $r8 = virtualinvoke $r7.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: org.fife.ui.rsyntaxtextarea.folding.FoldManager getFoldManager()>();

        $i7 = virtualinvoke $r8.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: int getHiddenLineCountAbove(int)>(i8);

        i8 = i8 - $i7;

     label3:
        $r6 = new java.awt.Rectangle;

        $i6 = $r3.<java.awt.Rectangle: int x>;

        $i2 = $r3.<java.awt.Rectangle: int y>;

        $i0 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int lineHeight>;

        $i1 = i8 * $i0;

        $i5 = $i2 + $i1;

        $i4 = $r3.<java.awt.Rectangle: int width>;

        $i3 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int lineHeight>;

        specialinvoke $r6.<java.awt.Rectangle: void <init>(int,int,int,int)>($i6, $i5, $i4, $i3);

        r10 = $r6;

     label4:
        return r10;
    }

    public java.awt.Shape modelToView(int, java.awt.Shape, javax.swing.text.Position$Bias) throws javax.swing.text.BadLocationException
    {
        java.awt.Shape r5;
        java.awt.Rectangle $r6, $r9;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r8;
        org.fife.ui.rsyntaxtextarea.RSyntaxDocument r3;
        org.fife.ui.rsyntaxtextarea.SyntaxView r0;
        javax.swing.text.Position$Bias r10;
        int i0, $i1, $i2, $i3;
        javax.swing.text.Document $r2;
        java.awt.Container $r7;
        javax.swing.text.Element $r1;
        org.fife.ui.rsyntaxtextarea.Token $r4;

        r0 := @this: org.fife.ui.rsyntaxtextarea.SyntaxView;

        i0 := @parameter0: int;

        r5 := @parameter1: java.awt.Shape;

        r10 := @parameter2: javax.swing.text.Position$Bias;

        $r1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: javax.swing.text.Element getElement()>();

        $r2 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: javax.swing.text.Document getDocument()>();

        r3 = (org.fife.ui.rsyntaxtextarea.RSyntaxDocument) $r2;

        $i1 = interfaceinvoke $r1.<javax.swing.text.Element: int getElementIndex(int)>(i0);

        $r4 = virtualinvoke r3.<org.fife.ui.rsyntaxtextarea.RSyntaxDocument: org.fife.ui.rsyntaxtextarea.Token getTokenListForLine(int)>($i1);

        $r6 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: java.awt.Rectangle lineToRect(java.awt.Shape,int)>(r5, $i1);

        $i2 = $r6.<java.awt.Rectangle: int x>;

        r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int tabBase> = $i2;

        $r7 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: java.awt.Container getContainer()>();

        $r8 = (org.fife.ui.rsyntaxtextarea.RSyntaxTextArea) $r7;

        $i3 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int tabBase>;

        $r9 = virtualinvoke $r4.<org.fife.ui.rsyntaxtextarea.Token: java.awt.Rectangle listOffsetToView(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,javax.swing.text.TabExpander,int,int,java.awt.Rectangle)>($r8, r0, i0, $i3, $r6);

        return $r9;
    }

    public java.awt.Shape modelToView(int, javax.swing.text.Position$Bias, int, javax.swing.text.Position$Bias, java.awt.Shape) throws javax.swing.text.BadLocationException
    {
        javax.swing.text.Position$Bias r2, r4;
        boolean $z0, $z1, $z2, $z3;
        java.awt.Shape r1, $r3, r8;
        javax.swing.text.BadLocationException $r7;
        java.awt.Rectangle r5, $r6, $r9, $r10, r11, $r12, $r13;
        org.fife.ui.rsyntaxtextarea.SyntaxView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;

        r0 := @this: org.fife.ui.rsyntaxtextarea.SyntaxView;

        i0 := @parameter0: int;

        r2 := @parameter1: javax.swing.text.Position$Bias;

        i1 := @parameter2: int;

        r4 := @parameter3: javax.swing.text.Position$Bias;

        r1 := @parameter4: java.awt.Shape;

        $r3 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: java.awt.Shape modelToView(int,java.awt.Shape,javax.swing.text.Position$Bias)>(i0, r1, r2);

        $i2 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int getEndOffset()>();

        if i1 != $i2 goto label07;

     label01:
        r8 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: java.awt.Shape modelToView(int,java.awt.Shape,javax.swing.text.Position$Bias)>(i1, r1, r4);

     label02:
        goto label04;

     label03:
        $r7 := @caughtexception;

        r8 = null;

     label04:
        if r8 != null goto label08;

        $z2 = r1 instanceof java.awt.Rectangle;

        if $z2 == 0 goto label05;

        $r9 = (java.awt.Rectangle) r1;

        goto label06;

     label05:
        $r9 = interfaceinvoke r1.<java.awt.Shape: java.awt.Rectangle getBounds()>();

     label06:
        $r6 = new java.awt.Rectangle;

        $i11 = $r9.<java.awt.Rectangle: int x>;

        $i10 = $r9.<java.awt.Rectangle: int width>;

        $i12 = $i11 + $i10;

        $i15 = $i12 - 1;

        $i14 = $r9.<java.awt.Rectangle: int y>;

        $i13 = $r9.<java.awt.Rectangle: int height>;

        specialinvoke $r6.<java.awt.Rectangle: void <init>(int,int,int,int)>($i15, $i14, 1, $i13);

        r8 = $r6;

        goto label08;

     label07:
        r8 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: java.awt.Shape modelToView(int,java.awt.Shape,javax.swing.text.Position$Bias)>(i1, r1, r4);

     label08:
        $z3 = $r3 instanceof java.awt.Rectangle;

        if $z3 == 0 goto label09;

        $r10 = (java.awt.Rectangle) $r3;

        goto label10;

     label09:
        $r10 = interfaceinvoke $r3.<java.awt.Shape: java.awt.Rectangle getBounds()>();

     label10:
        r11 = $r10;

        $z0 = r8 instanceof java.awt.Rectangle;

        if $z0 == 0 goto label11;

        $r12 = (java.awt.Rectangle) r8;

        goto label12;

     label11:
        $r12 = interfaceinvoke r8.<java.awt.Shape: java.awt.Rectangle getBounds()>();

     label12:
        r5 = $r12;

        $i4 = r11.<java.awt.Rectangle: int y>;

        $i3 = $r12.<java.awt.Rectangle: int y>;

        if $i4 == $i3 goto label15;

        $z1 = r1 instanceof java.awt.Rectangle;

        if $z1 == 0 goto label13;

        $r13 = (java.awt.Rectangle) r1;

        goto label14;

     label13:
        $r13 = interfaceinvoke r1.<java.awt.Shape: java.awt.Rectangle getBounds()>();

     label14:
        $i8 = $r13.<java.awt.Rectangle: int x>;

        r11.<java.awt.Rectangle: int x> = $i8;

        $i9 = $r13.<java.awt.Rectangle: int width>;

        r11.<java.awt.Rectangle: int width> = $i9;

     label15:
        virtualinvoke r11.<java.awt.Rectangle: void add(java.awt.Rectangle)>(r5);

        if i1 <= i0 goto label16;

        $i6 = r11.<java.awt.Rectangle: int width>;

        $i5 = r5.<java.awt.Rectangle: int width>;

        $i7 = $i6 - $i5;

        r11.<java.awt.Rectangle: int width> = $i7;

     label16:
        return r11;

        catch javax.swing.text.BadLocationException from label01 to label02 with label03;
    }

    public float nextTabStop(float, int)
    {
        org.fife.ui.rsyntaxtextarea.SyntaxView r0;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, i11;
        float f0, $f1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.SyntaxView;

        f0 := @parameter0: float;

        i11 := @parameter1: int;

        $i0 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int tabSize>;

        if $i0 != 0 goto label1;

        return f0;

     label1:
        $i2 = (int) f0;

        $i1 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int tabBase>;

        $i4 = $i2 - $i1;

        $i3 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int tabSize>;

        i5 = $i4 / $i3;

        $i9 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int tabBase>;

        $i7 = i5 + 1;

        $i6 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int tabSize>;

        $i8 = $i7 * $i6;

        $i10 = $i9 + $i8;

        $f1 = (float) $i10;

        return $f1;
    }

    public void paint(java.awt.Graphics, java.awt.Shape)
    {
        java.awt.Color $r24;
        org.fife.ui.rsyntaxtextarea.RSyntaxDocument r2;
        java.awt.Container $r5;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager $r12;
        org.fife.ui.rsyntaxtextarea.Token $r22;
        boolean $z0, $z1;
        java.awt.Shape r3;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r6, $r9, $r10, $r11, $r15, $r21, $r23;
        javax.swing.text.Highlighter $r16;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter r17;
        java.awt.Graphics r7;
        float $f0, $f1;
        javax.swing.text.Document $r1;
        java.awt.Rectangle $r4, $r8, $r13;
        org.fife.ui.rsyntaxtextarea.SyntaxView r0;
        java.awt.Graphics2D r18;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, i37, i38, i39, $i40, $i41;
        org.fife.ui.rsyntaxtextarea.folding.Fold $r19, $r25, r26;
        javax.swing.text.Element $r14, $r20;

        r0 := @this: org.fife.ui.rsyntaxtextarea.SyntaxView;

        r7 := @parameter0: java.awt.Graphics;

        r3 := @parameter1: java.awt.Shape;

        $r1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: javax.swing.text.Document getDocument()>();

        r2 = (org.fife.ui.rsyntaxtextarea.RSyntaxDocument) $r1;

        $r4 = interfaceinvoke r3.<java.awt.Shape: java.awt.Rectangle getBounds()>();

        $i0 = $r4.<java.awt.Rectangle: int x>;

        r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int tabBase> = $i0;

        $r5 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: java.awt.Container getContainer()>();

        $r6 = (org.fife.ui.rsyntaxtextarea.RSyntaxTextArea) $r5;

        r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host> = $r6;

        $r8 = virtualinvoke r7.<java.awt.Graphics: java.awt.Rectangle getClipBounds()>();

        $i1 = $r8.<java.awt.Rectangle: int x>;

        r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int clipStart> = $i1;

        $i3 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int clipStart>;

        $i2 = $r8.<java.awt.Rectangle: int width>;

        $i4 = $i3 + $i2;

        r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int clipEnd> = $i4;

        $r9 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $i5 = virtualinvoke $r9.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getLineHeight()>();

        r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int lineHeight> = $i5;

        $r10 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $i6 = virtualinvoke $r10.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getMaxAscent()>();

        r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int ascent> = $i6;

        $i8 = $r8.<java.awt.Rectangle: int y>;

        $i7 = $r4.<java.awt.Rectangle: int y>;

        i9 = $i8 - $i7;

        $i10 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int lineHeight>;

        $i11 = i9 / $i10;

        $i12 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i11);

        $r11 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $r12 = virtualinvoke $r11.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: org.fife.ui.rsyntaxtextarea.folding.FoldManager getFoldManager()>();

        $i13 = virtualinvoke $r12.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: int getHiddenLineCountAbove(int,boolean)>($i12, 1);

        i37 = $i12 + $i13;

        $r13 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: java.awt.Rectangle lineToRect(java.awt.Shape,int)>(r3, i37);

        $i15 = $r13.<java.awt.Rectangle: int y>;

        $i14 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int ascent>;

        i38 = $i15 + $i14;

        i16 = $r13.<java.awt.Rectangle: int x>;

        $r14 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: javax.swing.text.Element getElement()>();

        $i17 = interfaceinvoke $r14.<javax.swing.text.Element: int getElementCount()>();

        $r15 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $r16 = virtualinvoke $r15.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: javax.swing.text.Highlighter getHighlighter()>();

        r17 = (org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter) $r16;

        r18 = (java.awt.Graphics2D) r7;

        i39 = i37;

     label1:
        $i19 = $r8.<java.awt.Rectangle: int y>;

        $i18 = $r8.<java.awt.Rectangle: int height>;

        $i21 = $i19 + $i18;

        $i20 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int lineHeight>;

        $i22 = $i21 + $i20;

        if i38 >= $i22 goto label5;

        if i39 >= $i17 goto label5;

        $r19 = virtualinvoke $r12.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: org.fife.ui.rsyntaxtextarea.folding.Fold getFoldForLine(int)>(i39);

        r26 = $r19;

        $r20 = interfaceinvoke $r14.<javax.swing.text.Element: javax.swing.text.Element getElement(int)>(i39);

        $i23 = interfaceinvoke $r20.<javax.swing.text.Element: int getStartOffset()>();

        $i24 = interfaceinvoke $r20.<javax.swing.text.Element: int getEndOffset()>();

        i25 = $i24 - 1;

        $r21 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        virtualinvoke r17.<org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaHighlighter: void paintLayeredHighlights(java.awt.Graphics,int,int,java.awt.Shape,javax.swing.text.JTextComponent,javax.swing.text.View)>(r18, $i23, i25, r3, $r21, r0);

        $r22 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.RSyntaxDocument: org.fife.ui.rsyntaxtextarea.Token getTokenListForLine(int)>(i39);

        $f1 = (float) i16;

        $f0 = (float) i38;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: float drawLine(org.fife.ui.rsyntaxtextarea.Token,java.awt.Graphics2D,float,float)>($r22, r18, $f1, $f0);

        if $r19 == null goto label4;

        $z0 = virtualinvoke $r19.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean isCollapsed()>();

        if $z0 == 0 goto label4;

        $r23 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $r24 = staticinvoke <org.fife.ui.rsyntaxtextarea.RSyntaxUtilities: java.awt.Color getFoldedLineBottomColor(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea)>($r23);

        if $r24 == null goto label2;

        virtualinvoke r7.<java.awt.Graphics: void setColor(java.awt.Color)>($r24);

        $i26 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int lineHeight>;

        $i28 = i38 + $i26;

        $i27 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int ascent>;

        $i29 = $i28 - $i27;

        $i36 = $i29 - 1;

        $i35 = $r4.<java.awt.Rectangle: int width>;

        $i30 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int lineHeight>;

        $i32 = i38 + $i30;

        $i31 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int ascent>;

        $i33 = $i32 - $i31;

        $i34 = $i33 - 1;

        virtualinvoke r7.<java.awt.Graphics: void drawLine(int,int,int,int)>(i16, $i36, $i35, $i34);

     label2:
        $i40 = virtualinvoke r26.<org.fife.ui.rsyntaxtextarea.folding.Fold: int getLineCount()>();

        if $i40 != 0 goto label3;

        goto label4;

     label3:
        i39 = i39 + $i40;

        $r25 = virtualinvoke $r12.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: org.fife.ui.rsyntaxtextarea.folding.Fold getFoldForLine(int)>(i39);

        r26 = $r25;

        if $r25 == null goto label4;

        $z1 = virtualinvoke $r25.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean isCollapsed()>();

        if $z1 != 0 goto label2;

     label4:
        $i41 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int lineHeight>;

        i38 = i38 + $i41;

        i39 = i39 + 1;

        goto label1;

     label5:
        return;
    }

    protected boolean possiblyUpdateLongLine(javax.swing.text.Element, int)
    {
        org.fife.ui.rsyntaxtextarea.SyntaxView r0;
        byte $b1;
        int i0, $i2;
        float $f0, $f1;
        javax.swing.text.Element r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.SyntaxView;

        r1 := @parameter0: javax.swing.text.Element;

        i0 := @parameter1: int;

        $f0 = specialinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: float getLineWidth(int)>(i0);

        $f1 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: float longLineWidth>;

        $b1 = $f0 cmpl $f1;

        $i2 = (int) $b1;

        if $i2 <= 0 goto label1;

        r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: float longLineWidth> = $f0;

        r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: javax.swing.text.Element longLine> = r1;

        return 1;

     label1:
        return 0;
    }

    public void removeUpdate(javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory)
    {
        java.awt.Shape r2;
        org.fife.ui.rsyntaxtextarea.SyntaxView r0;
        javax.swing.text.ViewFactory r3;
        javax.swing.event.DocumentEvent r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.SyntaxView;

        r1 := @parameter0: javax.swing.event.DocumentEvent;

        r2 := @parameter1: java.awt.Shape;

        r3 := @parameter2: javax.swing.text.ViewFactory;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: void updateDamage(javax.swing.event.DocumentEvent,java.awt.Shape,javax.swing.text.ViewFactory)>(r1, r2, r3);

        return;
    }

    public void setSize(float, float)
    {
        float f0, f1;
        org.fife.ui.rsyntaxtextarea.SyntaxView r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.SyntaxView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        specialinvoke r0.<javax.swing.text.View: void setSize(float,float)>(f0, f1);

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: void updateMetrics()>();

        return;
    }

    protected void updateDamage(javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory)
    {
        javax.swing.text.ViewFactory r22;
        boolean $z0;
        java.awt.Shape r10;
        float $f0;
        org.fife.ui.rsyntaxtextarea.SyntaxView r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11;
        java.awt.Container $r1;
        javax.swing.event.DocumentEvent r3;
        javax.swing.text.Element[] r5, r6, $r23, $r24;
        javax.swing.event.DocumentEvent$ElementChange $r4;
        javax.swing.event.DocumentEvent$EventType $r7, $r8, $r11, $r12, $r13, $r14;
        javax.swing.text.Element $r2, $r9, $r15, $r16, $r17, $r18, $r19, $r20, $r21;

        r0 := @this: org.fife.ui.rsyntaxtextarea.SyntaxView;

        r3 := @parameter0: javax.swing.event.DocumentEvent;

        r10 := @parameter1: java.awt.Shape;

        r22 := @parameter2: javax.swing.text.ViewFactory;

        $r1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: java.awt.Container getContainer()>();

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: void updateMetrics()>();

        $r2 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: javax.swing.text.Element getElement()>();

        $r4 = interfaceinvoke r3.<javax.swing.event.DocumentEvent: javax.swing.event.DocumentEvent$ElementChange getChange(javax.swing.text.Element)>($r2);

        if $r4 == null goto label01;

        $r23 = interfaceinvoke $r4.<javax.swing.event.DocumentEvent$ElementChange: javax.swing.text.Element[] getChildrenAdded()>();

        goto label02;

     label01:
        $r23 = null;

     label02:
        r5 = $r23;

        if $r4 == null goto label03;

        $r24 = interfaceinvoke $r4.<javax.swing.event.DocumentEvent$ElementChange: javax.swing.text.Element[] getChildrenRemoved()>();

        goto label04;

     label03:
        $r24 = null;

     label04:
        r6 = $r24;

        if r5 == null goto label05;

        $i9 = lengthof r5;

        if $i9 > 0 goto label06;

     label05:
        if r6 == null goto label12;

        $i4 = lengthof r6;

        if $i4 <= 0 goto label12;

     label06:
        if r5 == null goto label08;

        $i6 = interfaceinvoke $r4.<javax.swing.event.DocumentEvent$ElementChange: int getIndex()>();

        i10 = 0;

     label07:
        $i7 = lengthof r5;

        if i10 >= $i7 goto label08;

        $r21 = r5[i10];

        $i8 = $i6 + i10;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: boolean possiblyUpdateLongLine(javax.swing.text.Element,int)>($r21, $i8);

        i10 = i10 + 1;

        goto label07;

     label08:
        if r6 == null goto label11;

        i11 = 0;

     label09:
        $i5 = lengthof r6;

        if i11 >= $i5 goto label11;

        $r20 = r6[i11];

        $r19 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: javax.swing.text.Element longLine>;

        if $r20 != $r19 goto label10;

        r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: float longLineWidth> = -1.0F;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: void calculateLongestLine()>();

        goto label11;

     label10:
        i11 = i11 + 1;

        goto label09;

     label11:
        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: void preferenceChanged(javax.swing.text.View,boolean,boolean)>(null, 1, 1);

        virtualinvoke $r1.<java.awt.Component: void repaint()>();

        goto label17;

     label12:
        $r7 = interfaceinvoke r3.<javax.swing.event.DocumentEvent: javax.swing.event.DocumentEvent$EventType getType()>();

        $r8 = <javax.swing.event.DocumentEvent$EventType: javax.swing.event.DocumentEvent$EventType CHANGE>;

        if $r7 != $r8 goto label13;

        $i2 = interfaceinvoke r3.<javax.swing.event.DocumentEvent: int getOffset()>();

        $i3 = interfaceinvoke r3.<javax.swing.event.DocumentEvent: int getLength()>();

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: void damageLineRange(int,int,java.awt.Shape,java.awt.Component)>($i2, $i3, r10, $r1);

        goto label17;

     label13:
        $r9 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: javax.swing.text.Element getElement()>();

        $i0 = interfaceinvoke r3.<javax.swing.event.DocumentEvent: int getOffset()>();

        $i1 = interfaceinvoke $r9.<javax.swing.text.Element: int getElementIndex(int)>($i0);

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: void damageLineRange(int,int,java.awt.Shape,java.awt.Component)>($i1, $i1, r10, $r1);

        $r11 = interfaceinvoke r3.<javax.swing.event.DocumentEvent: javax.swing.event.DocumentEvent$EventType getType()>();

        $r12 = <javax.swing.event.DocumentEvent$EventType: javax.swing.event.DocumentEvent$EventType INSERT>;

        if $r11 != $r12 goto label16;

        $r17 = interfaceinvoke $r9.<javax.swing.text.Element: javax.swing.text.Element getElement(int)>($i1);

        $r18 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: javax.swing.text.Element longLine>;

        if $r17 != $r18 goto label14;

        $f0 = specialinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: float getLineWidth(int)>($i1);

        r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: float longLineWidth> = $f0;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: void preferenceChanged(javax.swing.text.View,boolean,boolean)>(null, 1, 0);

        goto label15;

     label14:
        $z0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: boolean possiblyUpdateLongLine(javax.swing.text.Element,int)>($r17, $i1);

        if $z0 == 0 goto label15;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: void preferenceChanged(javax.swing.text.View,boolean,boolean)>(null, 1, 0);

     label15:
        goto label17;

     label16:
        $r13 = interfaceinvoke r3.<javax.swing.event.DocumentEvent: javax.swing.event.DocumentEvent$EventType getType()>();

        $r14 = <javax.swing.event.DocumentEvent$EventType: javax.swing.event.DocumentEvent$EventType REMOVE>;

        if $r13 != $r14 goto label17;

        $r15 = interfaceinvoke $r9.<javax.swing.text.Element: javax.swing.text.Element getElement(int)>($i1);

        $r16 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: javax.swing.text.Element longLine>;

        if $r15 != $r16 goto label17;

        r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: float longLineWidth> = -1.0F;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: void calculateLongestLine()>();

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: void preferenceChanged(javax.swing.text.View,boolean,boolean)>(null, 1, 0);

     label17:
        return;
    }

    protected void updateMetrics()
    {
        org.fife.ui.rsyntaxtextarea.SyntaxView r0;
        java.awt.Font $r4, $r5;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r2, $r3;
        java.awt.Container $r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.SyntaxView;

        $r1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: java.awt.Container getContainer()>();

        $r2 = (org.fife.ui.rsyntaxtextarea.RSyntaxTextArea) $r1;

        r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host> = $r2;

        $r3 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $r4 = virtualinvoke $r3.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: java.awt.Font getFont()>();

        $r5 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: java.awt.Font font>;

        if $r5 == $r4 goto label1;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: void calculateLongestLine()>();

     label1:
        return;
    }

    public int viewToModel(float, float, java.awt.Shape, javax.swing.text.Position$Bias[])
    {
        javax.swing.text.Position$Bias $r1;
        java.awt.Shape r2;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r8, $r13, $r14, $r15;
        org.fife.ui.rsyntaxtextarea.RSyntaxDocument r6;
        float f0, f1, $f2, $f3;
        javax.swing.text.Document $r5;
        java.awt.Rectangle $r3;
        org.fife.ui.rsyntaxtextarea.SyntaxView r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, i27, $i28, $i30;
        java.awt.Container $r12;
        javax.swing.text.Position$Bias[] r0;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager $r9;
        javax.swing.text.Element $r7, $r10;
        org.fife.ui.rsyntaxtextarea.Token $r11;

        r4 := @this: org.fife.ui.rsyntaxtextarea.SyntaxView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r2 := @parameter2: java.awt.Shape;

        r0 := @parameter3: javax.swing.text.Position$Bias[];

        $r1 = <javax.swing.text.Position$Bias: javax.swing.text.Position$Bias Forward>;

        r0[0] = $r1;

        $r3 = interfaceinvoke r2.<java.awt.Shape: java.awt.Rectangle getBounds()>();

        $r5 = virtualinvoke r4.<org.fife.ui.rsyntaxtextarea.SyntaxView: javax.swing.text.Document getDocument()>();

        r6 = (org.fife.ui.rsyntaxtextarea.RSyntaxDocument) $r5;

        i0 = (int) f0;

        i1 = (int) f1;

        $i2 = $r3.<java.awt.Rectangle: int y>;

        if i1 >= $i2 goto label1;

        $i26 = virtualinvoke r4.<org.fife.ui.rsyntaxtextarea.SyntaxView: int getStartOffset()>();

        return $i26;

     label1:
        $i4 = $r3.<java.awt.Rectangle: int y>;

        $i3 = $r3.<java.awt.Rectangle: int height>;

        $i5 = $i4 + $i3;

        if i1 <= $i5 goto label2;

        $r15 = r4.<org.fife.ui.rsyntaxtextarea.SyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $i25 = virtualinvoke $r15.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getLastVisibleOffset()>();

        return $i25;

     label2:
        $r7 = virtualinvoke r6.<org.fife.ui.rsyntaxtextarea.RSyntaxDocument: javax.swing.text.Element getDefaultRootElement()>();

        $i6 = $r3.<java.awt.Rectangle: int y>;

        $i8 = i1 - $i6;

        $i7 = r4.<org.fife.ui.rsyntaxtextarea.SyntaxView: int lineHeight>;

        $i9 = $i8 / $i7;

        $i10 = staticinvoke <java.lang.Math: int abs(int)>($i9);

        $r8 = r4.<org.fife.ui.rsyntaxtextarea.SyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $r9 = virtualinvoke $r8.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: org.fife.ui.rsyntaxtextarea.folding.FoldManager getFoldManager()>();

        $i11 = virtualinvoke $r9.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: int getHiddenLineCountAbove(int,boolean)>($i10, 1);

        i27 = $i10 + $i11;

        $i12 = interfaceinvoke $r7.<javax.swing.text.Element: int getElementCount()>();

        if i27 < $i12 goto label3;

        $r14 = r4.<org.fife.ui.rsyntaxtextarea.SyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $i24 = virtualinvoke $r14.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getLastVisibleOffset()>();

        return $i24;

     label3:
        $r10 = interfaceinvoke $r7.<javax.swing.text.Element: javax.swing.text.Element getElement(int)>(i27);

        $i13 = $r3.<java.awt.Rectangle: int x>;

        if i0 >= $i13 goto label4;

        $i23 = interfaceinvoke $r10.<javax.swing.text.Element: int getStartOffset()>();

        return $i23;

     label4:
        $i15 = $r3.<java.awt.Rectangle: int x>;

        $i14 = $r3.<java.awt.Rectangle: int width>;

        $i16 = $i15 + $i14;

        if i0 <= $i16 goto label5;

        $i21 = interfaceinvoke $r10.<javax.swing.text.Element: int getEndOffset()>();

        $i22 = $i21 - 1;

        return $i22;

     label5:
        $i17 = interfaceinvoke $r10.<javax.swing.text.Element: int getStartOffset()>();

        $r11 = virtualinvoke r6.<org.fife.ui.rsyntaxtextarea.RSyntaxDocument: org.fife.ui.rsyntaxtextarea.Token getTokenListForLine(int)>(i27);

        $i18 = $r3.<java.awt.Rectangle: int x>;

        r4.<org.fife.ui.rsyntaxtextarea.SyntaxView: int tabBase> = $i18;

        $r12 = virtualinvoke r4.<org.fife.ui.rsyntaxtextarea.SyntaxView: java.awt.Container getContainer()>();

        $r13 = (org.fife.ui.rsyntaxtextarea.RSyntaxTextArea) $r12;

        $i19 = r4.<org.fife.ui.rsyntaxtextarea.SyntaxView: int tabBase>;

        $f3 = (float) $i19;

        $f2 = (float) i0;

        $i20 = virtualinvoke $r11.<org.fife.ui.rsyntaxtextarea.Token: int getListOffset(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,javax.swing.text.TabExpander,float,float)>($r13, r4, $f3, $f2);

        $i30 = (int) -1;

        if $i20 == $i30 goto label6;

        $i28 = $i20;

        goto label7;

     label6:
        $i28 = $i17;

     label7:
        return $i28;
    }

    public int yForLine(java.awt.Rectangle, int) throws javax.swing.text.BadLocationException
    {
        java.awt.Rectangle r5;
        org.fife.ui.rsyntaxtextarea.SyntaxView r0;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, i7, $i9;
        boolean $z0;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea $r2, $r3, $r6;
        org.fife.ui.rsyntaxtextarea.folding.FoldManager $r4;
        java.awt.FontMetrics $r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.SyntaxView;

        r5 := @parameter0: java.awt.Rectangle;

        i5 := @parameter1: int;

        virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: void updateMetrics()>();

        $r1 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: java.awt.FontMetrics metrics>;

        if $r1 == null goto label3;

        $r2 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        if $r2 == null goto label1;

        $r6 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $i6 = virtualinvoke $r6.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getLineHeight()>();

        goto label2;

     label1:
        $i6 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int lineHeight>;

     label2:
        r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int lineHeight> = $i6;

        $r3 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea host>;

        $r4 = virtualinvoke $r3.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: org.fife.ui.rsyntaxtextarea.folding.FoldManager getFoldManager()>();

        $z0 = virtualinvoke $r4.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: boolean isLineHidden(int)>(i5);

        if $z0 != 0 goto label3;

        $i0 = virtualinvoke $r4.<org.fife.ui.rsyntaxtextarea.folding.FoldManager: int getHiddenLineCountAbove(int)>(i5);

        i7 = i5 - $i0;

        $i3 = r5.<java.awt.Rectangle: int y>;

        $i1 = r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int lineHeight>;

        $i2 = i7 * $i1;

        $i4 = $i3 + $i2;

        return $i4;

     label3:
        $i9 = (int) -1;

        return $i9;
    }

    public int yForLineContaining(java.awt.Rectangle, int) throws javax.swing.text.BadLocationException
    {
        java.awt.Rectangle r2;
        org.fife.ui.rsyntaxtextarea.SyntaxView r0;
        int i0, $i1, $i2;
        javax.swing.text.Element $r1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.SyntaxView;

        r2 := @parameter0: java.awt.Rectangle;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: javax.swing.text.Element getElement()>();

        $i1 = interfaceinvoke $r1.<javax.swing.text.Element: int getElementIndex(int)>(i0);

        $i2 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.SyntaxView: int yForLine(java.awt.Rectangle,int)>(r2, $i1);

        return $i2;
    }
}
