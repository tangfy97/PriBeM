public class org.apache.poi.hwpf.model.PlfLfo extends java.lang.Object
{
    private static org.apache.poi.util.POILogger log;
    private int _lfoMac;
    private org.apache.poi.hwpf.model.LFO[] _rgLfo;
    private org.apache.poi.hwpf.model.LFOData[] _rgLfoData;

    void <init>(byte[], int, int)
    {
        byte[] r1;
        byte $b2, $b11;
        boolean $z0;
        org.apache.poi.util.POILogger $r4, $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r22;
        org.apache.poi.hwpf.model.PlfLfo r0;
        org.apache.poi.hwpf.model.LFOData[] $r3, $r15;
        long $l1;
        int i0, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i12, $i13, i14, i15, i16, $i17, $i18;
        java.lang.String $r11;
        org.apache.poi.hwpf.model.LFOData $r21;
        java.lang.UnsupportedOperationException $r19;
        org.apache.poi.hwpf.model.LFO[] $r2, $r13, $r17;
        org.apache.poi.hwpf.model.LFO $r14, $r20;

        r0 := @this: org.apache.poi.hwpf.model.PlfLfo;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i8 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $l1 = staticinvoke <org.apache.poi.util.LittleEndian: long getUInt(byte[],int)>(r1, i0);

        i14 = i0 + 4;

        $b2 = $l1 cmp 2147483647L;

        $i17 = (int) $b2;

        if $i17 <= 0 goto label1;

        $r19 = new java.lang.UnsupportedOperationException;

        specialinvoke $r19.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Apache POI doesn\'t support rgLfo/rgLfoData size large than 2147483647 elements");

        throw $r19;

     label1:
        $i3 = (int) $l1;

        r0.<org.apache.poi.hwpf.model.PlfLfo: int _lfoMac> = $i3;

        $i4 = r0.<org.apache.poi.hwpf.model.PlfLfo: int _lfoMac>;

        $r2 = newarray (org.apache.poi.hwpf.model.LFO)[$i4];

        r0.<org.apache.poi.hwpf.model.PlfLfo: org.apache.poi.hwpf.model.LFO[] _rgLfo> = $r2;

        $i5 = r0.<org.apache.poi.hwpf.model.PlfLfo: int _lfoMac>;

        $r3 = newarray (org.apache.poi.hwpf.model.LFOData)[$i5];

        r0.<org.apache.poi.hwpf.model.PlfLfo: org.apache.poi.hwpf.model.LFOData[] _rgLfoData> = $r3;

        i15 = 0;

     label2:
        $i6 = r0.<org.apache.poi.hwpf.model.PlfLfo: int _lfoMac>;

        if i15 >= $i6 goto label3;

        $r20 = new org.apache.poi.hwpf.model.LFO;

        specialinvoke $r20.<org.apache.poi.hwpf.model.LFO: void <init>(byte[],int)>(r1, i14);

        $i13 = staticinvoke <org.apache.poi.hwpf.model.LFO: int getSize()>();

        i14 = i14 + $i13;

        $r17 = r0.<org.apache.poi.hwpf.model.PlfLfo: org.apache.poi.hwpf.model.LFO[] _rgLfo>;

        $r17[i15] = $r20;

        i15 = i15 + 1;

        goto label2;

     label3:
        i16 = 0;

     label4:
        $i7 = r0.<org.apache.poi.hwpf.model.PlfLfo: int _lfoMac>;

        if i16 >= $i7 goto label5;

        $r21 = new org.apache.poi.hwpf.model.LFOData;

        $r13 = r0.<org.apache.poi.hwpf.model.PlfLfo: org.apache.poi.hwpf.model.LFO[] _rgLfo>;

        $r14 = $r13[i16];

        $b11 = virtualinvoke $r14.<org.apache.poi.hwpf.model.LFO: byte getClfolvl()>();

        $i18 = (int) $b11;

        specialinvoke $r21.<org.apache.poi.hwpf.model.LFOData: void <init>(byte[],int,int)>(r1, i14, $i18);

        $i12 = virtualinvoke $r21.<org.apache.poi.hwpf.model.LFOData: int getSizeInBytes()>();

        i14 = i14 + $i12;

        $r15 = r0.<org.apache.poi.hwpf.model.PlfLfo: org.apache.poi.hwpf.model.LFOData[] _rgLfoData>;

        $r15[i16] = $r21;

        i16 = i16 + 1;

        goto label4;

     label5:
        $i9 = i14 - i0;

        if $i9 == i8 goto label6;

        $r4 = <org.apache.poi.hwpf.model.PlfLfo: org.apache.poi.util.POILogger log>;

        $z0 = virtualinvoke $r4.<org.apache.poi.util.POILogger: boolean check(int)>(5);

        if $z0 == 0 goto label6;

        $r6 = <org.apache.poi.hwpf.model.PlfLfo: org.apache.poi.util.POILogger log>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Actual size of PlfLfo is ");

        $i10 = i14 - i0;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes, but expected ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, $r11);

     label6:
        return;
    }

    void add(org.apache.poi.hwpf.model.LFO, org.apache.poi.hwpf.model.LFOData)
    {
        org.apache.poi.hwpf.model.PlfLfo r0;
        java.lang.Object[] $r3, $r9;
        org.apache.poi.hwpf.model.LFOData[] $r7, $r8, $r10, $r12;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        org.apache.poi.hwpf.model.LFOData r11;
        org.apache.poi.hwpf.model.LFO[] $r1, $r2, $r4, $r6;
        org.apache.poi.hwpf.model.LFO r5;

        r0 := @this: org.apache.poi.hwpf.model.PlfLfo;

        r5 := @parameter0: org.apache.poi.hwpf.model.LFO;

        r11 := @parameter1: org.apache.poi.hwpf.model.LFOData;

        $i0 = r0.<org.apache.poi.hwpf.model.PlfLfo: int _lfoMac>;

        i1 = $i0 + 1;

        $r2 = r0.<org.apache.poi.hwpf.model.PlfLfo: org.apache.poi.hwpf.model.LFO[] _rgLfo>;

        $r1 = newarray (org.apache.poi.hwpf.model.LFO)[i1];

        $r3 = staticinvoke <org.apache.poi.util.ArrayUtil: java.lang.Object[] copyOf(java.lang.Object[],java.lang.Object[])>($r2, $r1);

        $r4 = (org.apache.poi.hwpf.model.LFO[]) $r3;

        r0.<org.apache.poi.hwpf.model.PlfLfo: org.apache.poi.hwpf.model.LFO[] _rgLfo> = $r4;

        $r6 = r0.<org.apache.poi.hwpf.model.PlfLfo: org.apache.poi.hwpf.model.LFO[] _rgLfo>;

        $i2 = r0.<org.apache.poi.hwpf.model.PlfLfo: int _lfoMac>;

        $i3 = $i2 + 1;

        $r6[$i3] = r5;

        $r8 = r0.<org.apache.poi.hwpf.model.PlfLfo: org.apache.poi.hwpf.model.LFOData[] _rgLfoData>;

        $i4 = r0.<org.apache.poi.hwpf.model.PlfLfo: int _lfoMac>;

        $i5 = $i4 + 1;

        $r7 = newarray (org.apache.poi.hwpf.model.LFOData)[$i5];

        $r9 = staticinvoke <org.apache.poi.util.ArrayUtil: java.lang.Object[] copyOf(java.lang.Object[],java.lang.Object[])>($r8, $r7);

        $r10 = (org.apache.poi.hwpf.model.LFOData[]) $r9;

        r0.<org.apache.poi.hwpf.model.PlfLfo: org.apache.poi.hwpf.model.LFOData[] _rgLfoData> = $r10;

        $r12 = r0.<org.apache.poi.hwpf.model.PlfLfo: org.apache.poi.hwpf.model.LFOData[] _rgLfoData>;

        $i6 = r0.<org.apache.poi.hwpf.model.PlfLfo: int _lfoMac>;

        $i7 = $i6 + 1;

        $r12[$i7] = r11;

        r0.<org.apache.poi.hwpf.model.PlfLfo: int _lfoMac> = i1;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.poi.hwpf.model.PlfLfo r0, r4;
        org.apache.poi.hwpf.model.LFOData[] $r7, $r8;
        org.apache.poi.hwpf.model.LFO[] $r5, $r6;
        int $i0, $i1;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.hwpf.model.PlfLfo;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

        return 0;

     label3:
        r4 = (org.apache.poi.hwpf.model.PlfLfo) r1;

        $i1 = r0.<org.apache.poi.hwpf.model.PlfLfo: int _lfoMac>;

        $i0 = r4.<org.apache.poi.hwpf.model.PlfLfo: int _lfoMac>;

        if $i1 == $i0 goto label4;

        return 0;

     label4:
        $r6 = r0.<org.apache.poi.hwpf.model.PlfLfo: org.apache.poi.hwpf.model.LFO[] _rgLfo>;

        $r5 = r4.<org.apache.poi.hwpf.model.PlfLfo: org.apache.poi.hwpf.model.LFO[] _rgLfo>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r6, $r5);

        if $z0 != 0 goto label5;

        return 0;

     label5:
        $r8 = r0.<org.apache.poi.hwpf.model.PlfLfo: org.apache.poi.hwpf.model.LFOData[] _rgLfoData>;

        $r7 = r4.<org.apache.poi.hwpf.model.PlfLfo: org.apache.poi.hwpf.model.LFOData[] _rgLfoData>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r8, $r7);

        if $z1 != 0 goto label6;

        return 0;

     label6:
        return 1;
    }

    public int getLfoMac()
    {
        int $i0;
        org.apache.poi.hwpf.model.PlfLfo r0;

        r0 := @this: org.apache.poi.hwpf.model.PlfLfo;

        $i0 = r0.<org.apache.poi.hwpf.model.PlfLfo: int _lfoMac>;

        return $i0;
    }

    public int getIlfoByLsid(int)
    {
        org.apache.poi.hwpf.model.PlfLfo r0;
        org.apache.poi.hwpf.model.LFO[] $r7;
        int $i0, i1, $i2, $i3, i4;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String $r6;
        org.apache.poi.hwpf.model.LFO $r8;
        java.util.NoSuchElementException $r1;

        r0 := @this: org.apache.poi.hwpf.model.PlfLfo;

        i1 := @parameter0: int;

        i4 = 0;

     label1:
        $i0 = r0.<org.apache.poi.hwpf.model.PlfLfo: int _lfoMac>;

        if i4 >= $i0 goto label3;

        $r7 = r0.<org.apache.poi.hwpf.model.PlfLfo: org.apache.poi.hwpf.model.LFO[] _rgLfo>;

        $r8 = $r7[i4];

        $i2 = virtualinvoke $r8.<org.apache.poi.hwpf.model.LFO: int getLsid()>();

        if $i2 != i1 goto label2;

        $i3 = i4 + 1;

        return $i3;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        $r1 = new java.util.NoSuchElementException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LFO with lsid ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>(java.lang.String)>($r6);

        throw $r1;
    }

    public org.apache.poi.hwpf.model.LFO getLfo(int) throws java.util.NoSuchElementException
    {
        org.apache.poi.hwpf.model.PlfLfo r5;
        org.apache.poi.hwpf.model.LFO[] $r8;
        int i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r6;
        java.lang.String $r7;
        org.apache.poi.hwpf.model.LFO $r9;
        java.util.NoSuchElementException $r0;

        r5 := @this: org.apache.poi.hwpf.model.PlfLfo;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        $i2 = r5.<org.apache.poi.hwpf.model.PlfLfo: int _lfoMac>;

        if i0 <= $i2 goto label2;

     label1:
        $r0 = new java.util.NoSuchElementException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LFO with ilfo ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found. lfoMac is ");

        $i1 = r5.<org.apache.poi.hwpf.model.PlfLfo: int _lfoMac>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.util.NoSuchElementException: void <init>(java.lang.String)>($r7);

        throw $r0;

     label2:
        $r8 = r5.<org.apache.poi.hwpf.model.PlfLfo: org.apache.poi.hwpf.model.LFO[] _rgLfo>;

        $i3 = i0 - 1;

        $r9 = $r8[$i3];

        return $r9;
    }

    public org.apache.poi.hwpf.model.LFOData getLfoData(int) throws java.util.NoSuchElementException
    {
        org.apache.poi.hwpf.model.PlfLfo r5;
        org.apache.poi.hwpf.model.LFOData[] $r8;
        int i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r6;
        java.lang.String $r7;
        java.util.NoSuchElementException $r0;
        org.apache.poi.hwpf.model.LFOData $r9;

        r5 := @this: org.apache.poi.hwpf.model.PlfLfo;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        $i2 = r5.<org.apache.poi.hwpf.model.PlfLfo: int _lfoMac>;

        if i0 <= $i2 goto label2;

     label1:
        $r0 = new java.util.NoSuchElementException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LFOData with ilfo ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found. lfoMac is ");

        $i1 = r5.<org.apache.poi.hwpf.model.PlfLfo: int _lfoMac>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.util.NoSuchElementException: void <init>(java.lang.String)>($r7);

        throw $r0;

     label2:
        $r8 = r5.<org.apache.poi.hwpf.model.PlfLfo: org.apache.poi.hwpf.model.LFOData[] _rgLfoData>;

        $i3 = i0 - 1;

        $r9 = $r8[$i3];

        return $r9;
    }

    public int hashCode()
    {
        org.apache.poi.hwpf.model.PlfLfo r0;
        org.apache.poi.hwpf.model.LFOData[] $r2;
        org.apache.poi.hwpf.model.LFO[] $r1;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7;

        r0 := @this: org.apache.poi.hwpf.model.PlfLfo;

        $i0 = r0.<org.apache.poi.hwpf.model.PlfLfo: int _lfoMac>;

        i5 = 31 + $i0;

        $i1 = 31 * i5;

        $r1 = r0.<org.apache.poi.hwpf.model.PlfLfo: org.apache.poi.hwpf.model.LFO[] _rgLfo>;

        $i2 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r1);

        i6 = $i1 + $i2;

        $i3 = 31 * i6;

        $r2 = r0.<org.apache.poi.hwpf.model.PlfLfo: org.apache.poi.hwpf.model.LFOData[] _rgLfoData>;

        $i4 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r2);

        i7 = $i3 + $i4;

        return i7;
    }

    void writeTo(org.apache.poi.hwpf.model.FileInformationBlock, org.apache.poi.hwpf.model.io.HWPFOutputStream) throws java.io.IOException
    {
        byte[] r3;
        org.apache.poi.hwpf.model.PlfLfo r2;
        org.apache.poi.hwpf.model.LFOData[] $r4;
        long $l2;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16;
        org.apache.poi.hwpf.model.LFOData $r5;
        org.apache.poi.hwpf.model.FileInformationBlock r1;
        org.apache.poi.hwpf.model.io.HWPFOutputStream r0;
        org.apache.poi.hwpf.model.LFO[] $r6;
        org.apache.poi.hwpf.model.LFO $r7;

        r2 := @this: org.apache.poi.hwpf.model.PlfLfo;

        r1 := @parameter0: org.apache.poi.hwpf.model.FileInformationBlock;

        r0 := @parameter1: org.apache.poi.hwpf.model.io.HWPFOutputStream;

        $i0 = virtualinvoke r0.<org.apache.poi.hwpf.model.io.HWPFOutputStream: int getOffset()>();

        virtualinvoke r1.<org.apache.poi.hwpf.model.FileInformationBlock: void setFcPlfLfo(int)>($i0);

        $i1 = r2.<org.apache.poi.hwpf.model.PlfLfo: int _lfoMac>;

        $l2 = (long) $i1;

        staticinvoke <org.apache.poi.util.LittleEndian: void putUInt(long,java.io.OutputStream)>($l2, r0);

        $i3 = staticinvoke <org.apache.poi.hwpf.model.LFO: int getSize()>();

        $i4 = r2.<org.apache.poi.hwpf.model.PlfLfo: int _lfoMac>;

        $i5 = $i3 * $i4;

        r3 = newarray (byte)[$i5];

        i15 = 0;

     label1:
        $i6 = r2.<org.apache.poi.hwpf.model.PlfLfo: int _lfoMac>;

        if i15 >= $i6 goto label2;

        $r6 = r2.<org.apache.poi.hwpf.model.PlfLfo: org.apache.poi.hwpf.model.LFO[] _rgLfo>;

        $r7 = $r6[i15];

        $i13 = staticinvoke <org.apache.poi.hwpf.model.LFO: int getSize()>();

        $i14 = i15 * $i13;

        virtualinvoke $r7.<org.apache.poi.hwpf.model.LFO: void serialize(byte[],int)>(r3, $i14);

        i15 = i15 + 1;

        goto label1;

     label2:
        $i7 = staticinvoke <org.apache.poi.hwpf.model.LFO: int getSize()>();

        $i8 = r2.<org.apache.poi.hwpf.model.PlfLfo: int _lfoMac>;

        $i9 = $i7 * $i8;

        virtualinvoke r0.<org.apache.poi.hwpf.model.io.HWPFOutputStream: void write(byte[],int,int)>(r3, 0, $i9);

        i16 = 0;

     label3:
        $i10 = r2.<org.apache.poi.hwpf.model.PlfLfo: int _lfoMac>;

        if i16 >= $i10 goto label4;

        $r4 = r2.<org.apache.poi.hwpf.model.PlfLfo: org.apache.poi.hwpf.model.LFOData[] _rgLfoData>;

        $r5 = $r4[i16];

        virtualinvoke $r5.<org.apache.poi.hwpf.model.LFOData: void writeTo(org.apache.poi.hwpf.model.io.HWPFOutputStream)>(r0);

        i16 = i16 + 1;

        goto label3;

     label4:
        $i11 = virtualinvoke r0.<org.apache.poi.hwpf.model.io.HWPFOutputStream: int getOffset()>();

        $i12 = $i11 - $i0;

        virtualinvoke r1.<org.apache.poi.hwpf.model.FileInformationBlock: void setLcbPlfLfo(int)>($i12);

        return;
    }

    static void <clinit>()
    {
        org.apache.poi.util.POILogger $r0;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/hwpf/model/PlfLfo;");

        <org.apache.poi.hwpf.model.PlfLfo: org.apache.poi.util.POILogger log> = $r0;

        return;
    }
}
