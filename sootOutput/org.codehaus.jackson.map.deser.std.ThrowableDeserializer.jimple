public class org.codehaus.jackson.map.deser.std.ThrowableDeserializer extends org.codehaus.jackson.map.deser.BeanDeserializer
{
    protected static final java.lang.String PROP_NAME_MESSAGE;

    public void <init>(org.codehaus.jackson.map.deser.BeanDeserializer)
    {
        org.codehaus.jackson.map.deser.std.ThrowableDeserializer r0;
        org.codehaus.jackson.map.deser.BeanDeserializer r1;

        r0 := @this: org.codehaus.jackson.map.deser.std.ThrowableDeserializer;

        r1 := @parameter0: org.codehaus.jackson.map.deser.BeanDeserializer;

        specialinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: void <init>(org.codehaus.jackson.map.deser.BeanDeserializer)>(r1);

        return;
    }

    protected void <init>(org.codehaus.jackson.map.deser.BeanDeserializer, boolean)
    {
        org.codehaus.jackson.map.deser.std.ThrowableDeserializer r0;
        org.codehaus.jackson.map.deser.BeanDeserializer r1;
        boolean z0;

        r0 := @this: org.codehaus.jackson.map.deser.std.ThrowableDeserializer;

        r1 := @parameter0: org.codehaus.jackson.map.deser.BeanDeserializer;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: void <init>(org.codehaus.jackson.map.deser.BeanDeserializer,boolean)>(r1, z0);

        return;
    }

    public org.codehaus.jackson.map.JsonDeserializer unwrappingDeserializer()
    {
        org.codehaus.jackson.map.deser.std.ThrowableDeserializer r0, $r2;
        java.lang.Class $r1;

        r0 := @this: org.codehaus.jackson.map.deser.std.ThrowableDeserializer;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == class "Lorg/codehaus/jackson/map/deser/std/ThrowableDeserializer;" goto label1;

        return r0;

     label1:
        $r2 = new org.codehaus.jackson.map.deser.std.ThrowableDeserializer;

        specialinvoke $r2.<org.codehaus.jackson.map.deser.std.ThrowableDeserializer: void <init>(org.codehaus.jackson.map.deser.BeanDeserializer,boolean)>(r0, 1);

        return $r2;
    }

    public java.lang.Object deserializeFromObject(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.SettableBeanProperty $r13, r50, r51;
        org.codehaus.jackson.map.deser.impl.PropertyBasedCreator $r1;
        java.lang.StringBuilder $r28, $r29, $r31, $r32, $r34, $r35, $r37, $r38;
        java.lang.Object[] r47;
        org.codehaus.jackson.map.JsonDeserializer $r2, $r41;
        java.lang.String $r11, $r14, $r21, $r33, $r39;
        org.codehaus.jackson.map.deser.ValueInstantiator $r4, $r5, $r7, $r10, $r20, $r42;
        org.codehaus.jackson.map.deser.std.ThrowableDeserializer r0;
        org.codehaus.jackson.JsonToken $r48, $r49;
        org.codehaus.jackson.map.deser.SettableAnyProperty $r16, $r18;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap $r12, $r26;
        org.codehaus.jackson.map.DeserializationContext r17;
        java.util.HashSet $r15, $r19;
        org.codehaus.jackson.map.JsonMappingException $r27, $r40;
        int $i0, i1, $i2, $i3, $i4, i5, i6, i7, i8, i9;
        org.codehaus.jackson.type.JavaType $r3, $r30, $r36;
        org.codehaus.jackson.JsonParser r6;
        java.lang.Object $r8, $r9, $r22, $r23, $r24, $r25, $r43, $r44, $r45, r46;

        r0 := @this: org.codehaus.jackson.map.deser.std.ThrowableDeserializer;

        r6 := @parameter0: org.codehaus.jackson.JsonParser;

        r17 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r1 = r0.<org.codehaus.jackson.map.deser.std.ThrowableDeserializer: org.codehaus.jackson.map.deser.impl.PropertyBasedCreator _propertyBasedCreator>;

        if $r1 == null goto label01;

        $r45 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.ThrowableDeserializer: java.lang.Object _deserializeUsingPropertyBased(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r6, r17);

        return $r45;

     label01:
        $r2 = r0.<org.codehaus.jackson.map.deser.std.ThrowableDeserializer: org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer>;

        if $r2 == null goto label02;

        $r42 = r0.<org.codehaus.jackson.map.deser.std.ThrowableDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $r41 = r0.<org.codehaus.jackson.map.deser.std.ThrowableDeserializer: org.codehaus.jackson.map.JsonDeserializer _delegateDeserializer>;

        $r43 = virtualinvoke $r41.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r6, r17);

        $r44 = virtualinvoke $r42.<org.codehaus.jackson.map.deser.ValueInstantiator: java.lang.Object createUsingDelegate(java.lang.Object)>($r43);

        return $r44;

     label02:
        $r3 = r0.<org.codehaus.jackson.map.deser.std.ThrowableDeserializer: org.codehaus.jackson.type.JavaType _beanType>;

        $z0 = virtualinvoke $r3.<org.codehaus.jackson.type.JavaType: boolean isAbstract()>();

        if $z0 == 0 goto label03;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not instantiate abstract type ");

        $r36 = r0.<org.codehaus.jackson.map.deser.std.ThrowableDeserializer: org.codehaus.jackson.type.JavaType _beanType>;

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (need to add/enable type information?)");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        $r40 = staticinvoke <org.codehaus.jackson.map.JsonMappingException: org.codehaus.jackson.map.JsonMappingException 'from'(org.codehaus.jackson.JsonParser,java.lang.String)>(r6, $r39);

        throw $r40;

     label03:
        $r4 = r0.<org.codehaus.jackson.map.deser.std.ThrowableDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $z1 = virtualinvoke $r4.<org.codehaus.jackson.map.deser.ValueInstantiator: boolean canCreateFromString()>();

        $r5 = r0.<org.codehaus.jackson.map.deser.std.ThrowableDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $z2 = virtualinvoke $r5.<org.codehaus.jackson.map.deser.ValueInstantiator: boolean canCreateUsingDefault()>();

        if $z1 != 0 goto label04;

        if $z2 != 0 goto label04;

        $r27 = new org.codehaus.jackson.map.JsonMappingException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not deserialize Throwable of type ");

        $r30 = r0.<org.codehaus.jackson.map.deser.std.ThrowableDeserializer: org.codehaus.jackson.type.JavaType _beanType>;

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" without having a default contructor, a single-String-arg constructor; or explicit @JsonCreator");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String)>($r33);

        throw $r27;

     label04:
        r46 = null;

        r47 = null;

        i5 = 0;

     label05:
        $r48 = virtualinvoke r6.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r49 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_OBJECT>;

        if $r48 == $r49 goto label15;

        $r11 = virtualinvoke r6.<org.codehaus.jackson.JsonParser: java.lang.String getCurrentName()>();

        $r12 = r0.<org.codehaus.jackson.map.deser.std.ThrowableDeserializer: org.codehaus.jackson.map.deser.impl.BeanPropertyMap _beanProperties>;

        $r13 = virtualinvoke $r12.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: org.codehaus.jackson.map.deser.SettableBeanProperty find(java.lang.String)>($r11);

        virtualinvoke r6.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        if $r13 == null goto label08;

        if r46 == null goto label06;

        virtualinvoke $r13.<org.codehaus.jackson.map.deser.SettableBeanProperty: void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>(r6, r17, r46);

        goto label14;

     label06:
        if r47 != null goto label07;

        $r26 = r0.<org.codehaus.jackson.map.deser.std.ThrowableDeserializer: org.codehaus.jackson.map.deser.impl.BeanPropertyMap _beanProperties>;

        $i3 = virtualinvoke $r26.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: int size()>();

        $i4 = $i3 + $i3;

        r47 = newarray (java.lang.Object)[$i4];

     label07:
        i6 = i5 + 1;

        r47[i5] = $r13;

        i5 = i6 + 1;

        $r25 = virtualinvoke $r13.<org.codehaus.jackson.map.deser.SettableBeanProperty: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r6, r17);

        r47[i6] = $r25;

        goto label14;

     label08:
        $r14 = "message";

        $z3 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z3 == 0 goto label11;

        if $z1 == 0 goto label11;

        $r20 = r0.<org.codehaus.jackson.map.deser.std.ThrowableDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        $r21 = virtualinvoke r6.<org.codehaus.jackson.JsonParser: java.lang.String getText()>();

        $r22 = virtualinvoke $r20.<org.codehaus.jackson.map.deser.ValueInstantiator: java.lang.Object createFromString(java.lang.String)>($r21);

        r46 = $r22;

        if r47 == null goto label14;

        i7 = 0;

        i1 = i5;

     label09:
        if i7 >= i1 goto label10;

        $r23 = r47[i7];

        r50 = (org.codehaus.jackson.map.deser.SettableBeanProperty) $r23;

        $i2 = i7 + 1;

        $r24 = r47[$i2];

        virtualinvoke r50.<org.codehaus.jackson.map.deser.SettableBeanProperty: void set(java.lang.Object,java.lang.Object)>($r22, $r24);

        i7 = i7 + 2;

        goto label09;

     label10:
        r47 = null;

        goto label14;

     label11:
        $r15 = r0.<org.codehaus.jackson.map.deser.std.ThrowableDeserializer: java.util.HashSet _ignorableProps>;

        if $r15 == null goto label12;

        $r19 = r0.<org.codehaus.jackson.map.deser.std.ThrowableDeserializer: java.util.HashSet _ignorableProps>;

        $z4 = virtualinvoke $r19.<java.util.HashSet: boolean contains(java.lang.Object)>($r11);

        if $z4 == 0 goto label12;

        virtualinvoke r6.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonParser skipChildren()>();

        goto label14;

     label12:
        $r16 = r0.<org.codehaus.jackson.map.deser.std.ThrowableDeserializer: org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter>;

        if $r16 == null goto label13;

        $r18 = r0.<org.codehaus.jackson.map.deser.std.ThrowableDeserializer: org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter>;

        virtualinvoke $r18.<org.codehaus.jackson.map.deser.SettableAnyProperty: void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String)>(r6, r17, r46, $r11);

        goto label14;

     label13:
        virtualinvoke r0.<org.codehaus.jackson.map.deser.std.ThrowableDeserializer: void handleUnknownProperty(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String)>(r6, r17, r46, $r11);

     label14:
        virtualinvoke r6.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        goto label05;

     label15:
        if r46 != null goto label19;

        if $z1 == 0 goto label16;

        $r10 = r0.<org.codehaus.jackson.map.deser.std.ThrowableDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        r46 = virtualinvoke $r10.<org.codehaus.jackson.map.deser.ValueInstantiator: java.lang.Object createFromString(java.lang.String)>(null);

        goto label17;

     label16:
        $r7 = r0.<org.codehaus.jackson.map.deser.std.ThrowableDeserializer: org.codehaus.jackson.map.deser.ValueInstantiator _valueInstantiator>;

        r46 = virtualinvoke $r7.<org.codehaus.jackson.map.deser.ValueInstantiator: java.lang.Object createUsingDefault()>();

     label17:
        if r47 == null goto label19;

        i8 = 0;

        i9 = i5;

     label18:
        if i8 >= i9 goto label19;

        $r8 = r47[i8];

        r51 = (org.codehaus.jackson.map.deser.SettableBeanProperty) $r8;

        $i0 = i8 + 1;

        $r9 = r47[$i0];

        virtualinvoke r51.<org.codehaus.jackson.map.deser.SettableBeanProperty: void set(java.lang.Object,java.lang.Object)>(r46, $r9);

        i8 = i8 + 2;

        goto label18;

     label19:
        return r46;
    }

    public static void <clinit>()
    {
        <org.codehaus.jackson.map.deser.std.ThrowableDeserializer: java.lang.String PROP_NAME_MESSAGE> = "message";

        return;
    }
}
