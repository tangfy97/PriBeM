public class org.springframework.context.support.SimpleThreadScope extends java.lang.Object implements org.springframework.beans.factory.config.Scope
{
    private static final org.apache.commons.logging.Log logger;
    private final java.lang.ThreadLocal threadScope;

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/springframework/context/support/SimpleThreadScope;");

        <org.springframework.context.support.SimpleThreadScope: org.apache.commons.logging.Log logger> = $r0;

        return;
    }

    public void <init>()
    {
        org.springframework.context.support.SimpleThreadScope$1 $r1;
        org.springframework.context.support.SimpleThreadScope r0;

        r0 := @this: org.springframework.context.support.SimpleThreadScope;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.springframework.context.support.SimpleThreadScope$1;

        specialinvoke $r1.<org.springframework.context.support.SimpleThreadScope$1: void <init>(org.springframework.context.support.SimpleThreadScope,java.lang.String)>(r0, "SimpleThreadScope");

        r0.<org.springframework.context.support.SimpleThreadScope: java.lang.ThreadLocal threadScope> = $r1;

        return;
    }

    public java.lang.Object get(java.lang.String, org.springframework.beans.factory.ObjectFactory)
    {
        java.lang.ThreadLocal $r1;
        org.springframework.beans.factory.ObjectFactory r6;
        org.springframework.context.support.SimpleThreadScope r0;
        java.util.Map r3;
        java.lang.Object $r2, $r5, $r7, r8;
        java.lang.String r4;

        r0 := @this: org.springframework.context.support.SimpleThreadScope;

        r4 := @parameter0: java.lang.String;

        r6 := @parameter1: org.springframework.beans.factory.ObjectFactory;

        $r1 = r0.<org.springframework.context.support.SimpleThreadScope: java.lang.ThreadLocal threadScope>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        r3 = (java.util.Map) $r2;

        $r5 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        r8 = $r5;

        if $r5 != null goto label1;

        $r7 = interfaceinvoke r6.<org.springframework.beans.factory.ObjectFactory: java.lang.Object getObject()>();

        r8 = $r7;

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r7);

     label1:
        return r8;
    }

    public java.lang.Object remove(java.lang.String)
    {
        java.lang.ThreadLocal $r1;
        org.springframework.context.support.SimpleThreadScope r0;
        java.util.Map r3;
        java.lang.Object $r2, $r5;
        java.lang.String r4;

        r0 := @this: org.springframework.context.support.SimpleThreadScope;

        r4 := @parameter0: java.lang.String;

        $r1 = r0.<org.springframework.context.support.SimpleThreadScope: java.lang.ThreadLocal threadScope>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        r3 = (java.util.Map) $r2;

        $r5 = interfaceinvoke r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r4);

        return $r5;
    }

    public void registerDestructionCallback(java.lang.String, java.lang.Runnable)
    {
        org.springframework.context.support.SimpleThreadScope r1;
        org.apache.commons.logging.Log $r0;
        java.lang.String r2;
        java.lang.Runnable r3;

        r1 := @this: org.springframework.context.support.SimpleThreadScope;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Runnable;

        $r0 = <org.springframework.context.support.SimpleThreadScope: org.apache.commons.logging.Log logger>;

        interfaceinvoke $r0.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("SimpleThreadScope does not support descruction callbacks. Consider using a RequestScope in a Web environment.");

        return;
    }

    public java.lang.Object resolveContextualObject(java.lang.String)
    {
        java.lang.String r1;
        org.springframework.context.support.SimpleThreadScope r0;

        r0 := @this: org.springframework.context.support.SimpleThreadScope;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public java.lang.String getConversationId()
    {
        java.lang.String $r1;
        org.springframework.context.support.SimpleThreadScope r2;
        java.lang.Thread $r0;

        r2 := @this: org.springframework.context.support.SimpleThreadScope;

        $r0 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r1 = virtualinvoke $r0.<java.lang.Thread: java.lang.String getName()>();

        return $r1;
    }
}
