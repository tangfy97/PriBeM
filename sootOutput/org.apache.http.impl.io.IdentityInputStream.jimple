public class org.apache.http.impl.io.IdentityInputStream extends java.io.InputStream
{
    private final org.apache.http.io.SessionInputBuffer in;
    private boolean closed;

    public void <init>(org.apache.http.io.SessionInputBuffer)
    {
        org.apache.http.impl.io.IdentityInputStream r0;
        java.lang.IllegalArgumentException $r2;
        org.apache.http.io.SessionInputBuffer r1;

        r0 := @this: org.apache.http.impl.io.IdentityInputStream;

        r1 := @parameter0: org.apache.http.io.SessionInputBuffer;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        r0.<org.apache.http.impl.io.IdentityInputStream: boolean closed> = 0;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Session input buffer may not be null");

        throw $r2;

     label1:
        r0.<org.apache.http.impl.io.IdentityInputStream: org.apache.http.io.SessionInputBuffer in> = r1;

        return;
    }

    public int available() throws java.io.IOException
    {
        org.apache.http.impl.io.IdentityInputStream r0;
        org.apache.http.io.BufferInfo $r3;
        int $i0;
        org.apache.http.io.SessionInputBuffer $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.http.impl.io.IdentityInputStream;

        $r1 = r0.<org.apache.http.impl.io.IdentityInputStream: org.apache.http.io.SessionInputBuffer in>;

        $z0 = $r1 instanceof org.apache.http.io.BufferInfo;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.http.impl.io.IdentityInputStream: org.apache.http.io.SessionInputBuffer in>;

        $r3 = (org.apache.http.io.BufferInfo) $r2;

        $i0 = interfaceinvoke $r3.<org.apache.http.io.BufferInfo: int length()>();

        return $i0;

     label1:
        return 0;
    }

    public void close() throws java.io.IOException
    {
        org.apache.http.impl.io.IdentityInputStream r0;

        r0 := @this: org.apache.http.impl.io.IdentityInputStream;

        r0.<org.apache.http.impl.io.IdentityInputStream: boolean closed> = 1;

        return;
    }

    public int read() throws java.io.IOException
    {
        org.apache.http.impl.io.IdentityInputStream r0;
        int $i0, $i2;
        org.apache.http.io.SessionInputBuffer $r1;
        boolean $z0;

        r0 := @this: org.apache.http.impl.io.IdentityInputStream;

        $z0 = r0.<org.apache.http.impl.io.IdentityInputStream: boolean closed>;

        if $z0 == 0 goto label1;

        $i2 = (int) -1;

        return $i2;

     label1:
        $r1 = r0.<org.apache.http.impl.io.IdentityInputStream: org.apache.http.io.SessionInputBuffer in>;

        $i0 = interfaceinvoke $r1.<org.apache.http.io.SessionInputBuffer: int read()>();

        return $i0;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        org.apache.http.impl.io.IdentityInputStream r0;
        org.apache.http.io.SessionInputBuffer $r2;
        int i0, i1, $i2, $i4;
        boolean $z0;

        r0 := @this: org.apache.http.impl.io.IdentityInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0.<org.apache.http.impl.io.IdentityInputStream: boolean closed>;

        if $z0 == 0 goto label1;

        $i4 = (int) -1;

        return $i4;

     label1:
        $r2 = r0.<org.apache.http.impl.io.IdentityInputStream: org.apache.http.io.SessionInputBuffer in>;

        $i2 = interfaceinvoke $r2.<org.apache.http.io.SessionInputBuffer: int read(byte[],int,int)>(r1, i0, i1);

        return $i2;
    }
}
