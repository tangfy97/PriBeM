public class com.jidesoft.plaf.eclipse.EclipseUtils extends java.lang.Object
{
    private static final java.awt.BasicStroke DOTTED_STROKE;
    static final double RATIO1;
    static final double RATIO2;
    static final double RATIO3;

    public void <init>()
    {
        com.jidesoft.plaf.eclipse.EclipseUtils r0;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.awt.Color getLighterColor(java.awt.Color)
    {
        java.awt.Color r0, $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;

        r0 := @parameter0: java.awt.Color;

        $i0 = virtualinvoke r0.<java.awt.Color: int getRed()>();

        $i1 = staticinvoke <com.jidesoft.plaf.eclipse.EclipseUtils: int getLighterColor(int)>($i0);

        i6 = $i1;

        $i2 = virtualinvoke r0.<java.awt.Color: int getGreen()>();

        $i3 = staticinvoke <com.jidesoft.plaf.eclipse.EclipseUtils: int getLighterColor(int)>($i2);

        i7 = $i3;

        $i4 = virtualinvoke r0.<java.awt.Color: int getBlue()>();

        $i5 = staticinvoke <com.jidesoft.plaf.eclipse.EclipseUtils: int getLighterColor(int)>($i4);

        i8 = $i5;

        if $i1 < 255 goto label1;

        i6 = 255;

     label1:
        if $i3 < 255 goto label2;

        i7 = 255;

     label2:
        if $i5 < 255 goto label3;

        i8 = 255;

     label3:
        $r1 = new java.awt.Color;

        specialinvoke $r1.<java.awt.Color: void <init>(int,int,int)>(i6, i7, i8);

        return $r1;
    }

    static int getLighterColor(int)
    {
        int i0, $i1;
        double $d0, $d1, $d2, $d3;

        i0 := @parameter0: int;

        $d0 = (double) i0;

        $d1 = $d0 * 36.0;

        $d2 = $d1 / 255.0;

        $d3 = $d2 + 219.5;

        $i1 = (int) $d3;

        return $i1;
    }

    static java.awt.Color getMenuSelectionColor(java.awt.Color)
    {
        java.awt.Color r0, $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;

        r0 := @parameter0: java.awt.Color;

        $i0 = virtualinvoke r0.<java.awt.Color: int getRed()>();

        $i1 = staticinvoke <com.jidesoft.plaf.eclipse.EclipseUtils: int getMenuSelectionValue(int)>($i0);

        i6 = $i1;

        $i2 = virtualinvoke r0.<java.awt.Color: int getGreen()>();

        $i3 = staticinvoke <com.jidesoft.plaf.eclipse.EclipseUtils: int getMenuSelectionValue(int)>($i2);

        i7 = $i3;

        $i4 = virtualinvoke r0.<java.awt.Color: int getBlue()>();

        $i5 = staticinvoke <com.jidesoft.plaf.eclipse.EclipseUtils: int getMenuSelectionValue(int)>($i4);

        i8 = $i5;

        if $i1 < 255 goto label1;

        i6 = 255;

     label1:
        if $i3 < 255 goto label2;

        i7 = 255;

     label2:
        if $i5 < 255 goto label3;

        i8 = 255;

     label3:
        $r1 = new java.awt.Color;

        specialinvoke $r1.<java.awt.Color: void <init>(int,int,int)>(i6, i7, i8);

        return $r1;
    }

    static int getMenuSelectionValue(int)
    {
        int i0, $i1;
        double $d0, $d1, $d2, $d3;

        i0 := @parameter0: int;

        $d0 = (double) i0;

        $d1 = $d0 * 76.0;

        $d2 = $d1 / 255.0;

        $d3 = $d2 + 179.5;

        $i1 = (int) $d3;

        return $i1;
    }

    static java.awt.Color getMenuBackgroundColor(java.awt.Color)
    {
        java.awt.Color r0, $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;

        r0 := @parameter0: java.awt.Color;

        $i0 = virtualinvoke r0.<java.awt.Color: int getRed()>();

        $i1 = staticinvoke <com.jidesoft.plaf.eclipse.EclipseUtils: int getMenuValue(int)>($i0);

        i6 = $i1;

        $i2 = virtualinvoke r0.<java.awt.Color: int getGreen()>();

        $i3 = staticinvoke <com.jidesoft.plaf.eclipse.EclipseUtils: int getMenuValue(int)>($i2);

        i7 = $i3;

        $i4 = virtualinvoke r0.<java.awt.Color: int getBlue()>();

        $i5 = staticinvoke <com.jidesoft.plaf.eclipse.EclipseUtils: int getMenuValue(int)>($i4);

        i8 = $i5;

        if $i1 < 255 goto label1;

        i6 = 255;

     label1:
        if $i3 < 255 goto label2;

        i7 = 255;

     label2:
        if $i5 < 255 goto label3;

        i8 = 255;

     label3:
        $r1 = new java.awt.Color;

        specialinvoke $r1.<java.awt.Color: void <init>(int,int,int)>(i6, i7, i8);

        return $r1;
    }

    static int getMenuValue(int)
    {
        int i0, $i1;
        double $d0, $d1, $d2, $d3;

        i0 := @parameter0: int;

        $d0 = (double) i0;

        $d1 = $d0 * 36.0;

        $d2 = $d1 / 255.0;

        $d3 = $d2 + 219.5;

        $i1 = (int) $d3;

        return $i1;
    }

    static java.awt.Color getDefaultBackgroundColor(java.awt.Color)
    {
        java.awt.Color r0, $r1, $r2, $r3, r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, i11, $i12, $i13, i14;

        r0 := @parameter0: java.awt.Color;

        $i0 = virtualinvoke r0.<java.awt.Color: int getRed()>();

        if $i0 != 212 goto label1;

        $i3 = virtualinvoke r0.<java.awt.Color: int getGreen()>();

        if $i3 != 208 goto label1;

        $i4 = virtualinvoke r0.<java.awt.Color: int getBlue()>();

        if $i4 != 200 goto label1;

        $r3 = new java.awt.Color;

        specialinvoke $r3.<java.awt.Color: void <init>(int,int,int)>(247, 243, 233);

        r4 = $r3;

        goto label6;

     label1:
        $i5 = virtualinvoke r0.<java.awt.Color: int getRed()>();

        if $i5 != 236 goto label2;

        $i1 = virtualinvoke r0.<java.awt.Color: int getGreen()>();

        if $i1 != 233 goto label2;

        $i2 = virtualinvoke r0.<java.awt.Color: int getBlue()>();

        if $i2 != 216 goto label2;

        $r2 = new java.awt.Color;

        specialinvoke $r2.<java.awt.Color: void <init>(int,int,int)>(255, 251, 233);

        r4 = $r2;

        goto label6;

     label2:
        $i6 = virtualinvoke r0.<java.awt.Color: int getRed()>();

        $i7 = $i6 + 35;

        i8 = $i7;

        $i9 = virtualinvoke r0.<java.awt.Color: int getGreen()>();

        $i10 = $i9 + 35;

        i11 = $i10;

        $i12 = virtualinvoke r0.<java.awt.Color: int getBlue()>();

        $i13 = $i12 + 35;

        i14 = $i13;

        if $i7 < 255 goto label3;

        i8 = 255;

     label3:
        if $i10 < 255 goto label4;

        i11 = 255;

     label4:
        if $i13 < 255 goto label5;

        i14 = 255;

     label5:
        $r1 = new java.awt.Color;

        specialinvoke $r1.<java.awt.Color: void <init>(int,int,int)>(i8, i11, i14);

        r4 = $r1;

     label6:
        return r4;
    }

    public static void fillRectWithHatch(java.awt.Graphics2D, java.awt.Rectangle, java.awt.Color)
    {
        java.awt.Color $r2, r4;
        java.awt.BasicStroke $r5;
        java.awt.Rectangle r3;
        java.awt.Graphics2D r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25;
        java.awt.Stroke $r1;

        r0 := @parameter0: java.awt.Graphics2D;

        r3 := @parameter1: java.awt.Rectangle;

        r4 := @parameter2: java.awt.Color;

        $r1 = virtualinvoke r0.<java.awt.Graphics2D: java.awt.Stroke getStroke()>();

        $r2 = <java.awt.Color: java.awt.Color white>;

        virtualinvoke r0.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r2);

        $i3 = r3.<java.awt.Rectangle: int x>;

        $i2 = r3.<java.awt.Rectangle: int y>;

        $i1 = r3.<java.awt.Rectangle: int width>;

        $i0 = r3.<java.awt.Rectangle: int height>;

        virtualinvoke r0.<java.awt.Graphics2D: void fillRect(int,int,int,int)>($i3, $i2, $i1, $i0);

        virtualinvoke r0.<java.awt.Graphics2D: void setColor(java.awt.Color)>(r4);

        $r5 = <com.jidesoft.plaf.eclipse.EclipseUtils: java.awt.BasicStroke DOTTED_STROKE>;

        virtualinvoke r0.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r5);

        i25 = 0;

     label1:
        $i4 = r3.<java.awt.Rectangle: int width>;

        if i25 >= $i4 goto label4;

        $i5 = i25 % 2;

        if $i5 != 0 goto label2;

        $i16 = r3.<java.awt.Rectangle: int x>;

        $i24 = $i16 + i25;

        $i23 = r3.<java.awt.Rectangle: int y>;

        $i17 = r3.<java.awt.Rectangle: int x>;

        $i22 = $i17 + i25;

        $i19 = r3.<java.awt.Rectangle: int y>;

        $i18 = r3.<java.awt.Rectangle: int height>;

        $i20 = $i19 + $i18;

        $i21 = $i20 - 1;

        virtualinvoke r0.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i24, $i23, $i22, $i21);

        goto label3;

     label2:
        $i6 = r3.<java.awt.Rectangle: int x>;

        $i15 = $i6 + i25;

        $i7 = r3.<java.awt.Rectangle: int y>;

        $i14 = $i7 + 1;

        $i8 = r3.<java.awt.Rectangle: int x>;

        $i13 = $i8 + i25;

        $i10 = r3.<java.awt.Rectangle: int y>;

        $i9 = r3.<java.awt.Rectangle: int height>;

        $i11 = $i10 + $i9;

        $i12 = $i11 - 1;

        virtualinvoke r0.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($i15, $i14, $i13, $i12);

     label3:
        i25 = i25 + 1;

        goto label1;

     label4:
        virtualinvoke r0.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r1);

        return;
    }

    static int getLightColor(int, double)
    {
        int i0, $i1, $i2;
        double d0, $d1, $d2, $d3, $d4;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        $i1 = 255 - i0;

        $d1 = (double) $i1;

        $d3 = $d1 * d0;

        $d2 = (double) i0;

        $d4 = $d3 + $d2;

        $i2 = (int) $d4;

        return $i2;
    }

    static java.awt.Color getLighterColor(java.awt.Color, double)
    {
        java.awt.Color r0, $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;
        double d0;

        r0 := @parameter0: java.awt.Color;

        d0 := @parameter1: double;

        $i0 = virtualinvoke r0.<java.awt.Color: int getRed()>();

        $i1 = staticinvoke <com.jidesoft.plaf.eclipse.EclipseUtils: int getLightColor(int,double)>($i0, d0);

        i6 = $i1;

        $i2 = virtualinvoke r0.<java.awt.Color: int getGreen()>();

        $i3 = staticinvoke <com.jidesoft.plaf.eclipse.EclipseUtils: int getLightColor(int,double)>($i2, d0);

        i7 = $i3 + 1;

        $i4 = virtualinvoke r0.<java.awt.Color: int getBlue()>();

        $i5 = staticinvoke <com.jidesoft.plaf.eclipse.EclipseUtils: int getLightColor(int,double)>($i4, d0);

        i8 = $i5;

        if $i1 < 255 goto label1;

        i6 = 255;

     label1:
        if i7 < 255 goto label2;

        i7 = 255;

     label2:
        if $i5 < 255 goto label3;

        i8 = 255;

     label3:
        $r1 = new java.awt.Color;

        specialinvoke $r1.<java.awt.Color: void <init>(int,int,int)>(i6, i7, i8);

        return $r1;
    }

    static java.awt.Color getSelectedAndFocusedButtonColor(java.awt.Color)
    {
        java.awt.Color r0, $r1;

        r0 := @parameter0: java.awt.Color;

        $r1 = staticinvoke <com.jidesoft.plaf.eclipse.EclipseUtils: java.awt.Color getLighterColor(java.awt.Color,double)>(r0, 0.67);

        return $r1;
    }

    static java.awt.Color getFocusedButtonColor(java.awt.Color)
    {
        java.awt.Color r0, $r1;

        r0 := @parameter0: java.awt.Color;

        $r1 = staticinvoke <com.jidesoft.plaf.eclipse.EclipseUtils: java.awt.Color getLighterColor(java.awt.Color,double)>(r0, 0.78);

        return $r1;
    }

    static java.awt.Color getSelectedButtonColor(java.awt.Color)
    {
        java.awt.Color r0, $r1;

        r0 := @parameter0: java.awt.Color;

        $r1 = staticinvoke <com.jidesoft.plaf.eclipse.EclipseUtils: java.awt.Color getLighterColor(java.awt.Color,double)>(r0, 0.86);

        return $r1;
    }

    static void <clinit>()
    {
        java.awt.BasicStroke $r0;
        float[] $r1;

        <com.jidesoft.plaf.eclipse.EclipseUtils: double RATIO3> = 0.86;

        <com.jidesoft.plaf.eclipse.EclipseUtils: double RATIO2> = 0.78;

        <com.jidesoft.plaf.eclipse.EclipseUtils: double RATIO1> = 0.67;

        $r0 = new java.awt.BasicStroke;

        $r1 = newarray (float)[4];

        $r1[0] = 0.0F;

        $r1[1] = 2.0F;

        $r1[2] = 0.0F;

        $r1[3] = 2.0F;

        specialinvoke $r0.<java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>(1.0F, 2, 1, 1.0F, $r1, 0.0F);

        <com.jidesoft.plaf.eclipse.EclipseUtils: java.awt.BasicStroke DOTTED_STROKE> = $r0;

        return;
    }
}
