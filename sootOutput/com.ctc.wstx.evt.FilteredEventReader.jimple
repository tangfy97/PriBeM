public class com.ctc.wstx.evt.FilteredEventReader extends java.lang.Object implements javax.xml.stream.XMLEventReader, javax.xml.stream.XMLStreamConstants
{
    final javax.xml.stream.XMLEventReader mReader;
    final javax.xml.stream.EventFilter mFilter;
    javax.xml.stream.events.XMLEvent mNextEvent;

    public void <init>(javax.xml.stream.XMLEventReader, javax.xml.stream.EventFilter)
    {
        com.ctc.wstx.evt.FilteredEventReader r0;
        javax.xml.stream.XMLEventReader r1;
        javax.xml.stream.EventFilter r2;

        r0 := @this: com.ctc.wstx.evt.FilteredEventReader;

        r1 := @parameter0: javax.xml.stream.XMLEventReader;

        r2 := @parameter1: javax.xml.stream.EventFilter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.ctc.wstx.evt.FilteredEventReader: javax.xml.stream.XMLEventReader mReader> = r1;

        r0.<com.ctc.wstx.evt.FilteredEventReader: javax.xml.stream.EventFilter mFilter> = r2;

        return;
    }

    public void close() throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.evt.FilteredEventReader r0;
        javax.xml.stream.XMLEventReader $r1;

        r0 := @this: com.ctc.wstx.evt.FilteredEventReader;

        $r1 = r0.<com.ctc.wstx.evt.FilteredEventReader: javax.xml.stream.XMLEventReader mReader>;

        interfaceinvoke $r1.<javax.xml.stream.XMLEventReader: void close()>();

        return;
    }

    public java.lang.String getElementText() throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.evt.FilteredEventReader r0;
        javax.xml.stream.XMLEventReader $r1;
        java.lang.String $r2;

        r0 := @this: com.ctc.wstx.evt.FilteredEventReader;

        $r1 = r0.<com.ctc.wstx.evt.FilteredEventReader: javax.xml.stream.XMLEventReader mReader>;

        $r2 = interfaceinvoke $r1.<javax.xml.stream.XMLEventReader: java.lang.String getElementText()>();

        return $r2;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        com.ctc.wstx.evt.FilteredEventReader r0;
        javax.xml.stream.XMLEventReader $r2;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.evt.FilteredEventReader;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.ctc.wstx.evt.FilteredEventReader: javax.xml.stream.XMLEventReader mReader>;

        $r3 = interfaceinvoke $r2.<javax.xml.stream.XMLEventReader: java.lang.Object getProperty(java.lang.String)>(r1);

        return $r3;
    }

    public boolean hasNext()
    {
        com.ctc.wstx.evt.FilteredEventReader r0;
        javax.xml.stream.events.XMLEvent $r1;
        javax.xml.stream.XMLStreamException $r2;
        boolean $z0;

        r0 := @this: com.ctc.wstx.evt.FilteredEventReader;

     label1:
        $r1 = virtualinvoke r0.<com.ctc.wstx.evt.FilteredEventReader: javax.xml.stream.events.XMLEvent peek()>();

        if $r1 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;

     label4:
        $r2 := @caughtexception;

        staticinvoke <com.ctc.wstx.exc.WstxLazyException: void throwLazily(javax.xml.stream.XMLStreamException)>($r2);

        return 0;

        catch javax.xml.stream.XMLStreamException from label1 to label3 with label4;
    }

    public javax.xml.stream.events.XMLEvent nextEvent() throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.evt.FilteredEventReader r0;
        javax.xml.stream.XMLEventReader $r1;
        javax.xml.stream.events.XMLEvent $r2;
        javax.xml.stream.EventFilter $r3;
        boolean $z0;

        r0 := @this: com.ctc.wstx.evt.FilteredEventReader;

     label1:
        $r1 = r0.<com.ctc.wstx.evt.FilteredEventReader: javax.xml.stream.XMLEventReader mReader>;

        $r2 = interfaceinvoke $r1.<javax.xml.stream.XMLEventReader: javax.xml.stream.events.XMLEvent nextEvent()>();

        if $r2 == null goto label2;

        $r3 = r0.<com.ctc.wstx.evt.FilteredEventReader: javax.xml.stream.EventFilter mFilter>;

        $z0 = interfaceinvoke $r3.<javax.xml.stream.EventFilter: boolean accept(javax.xml.stream.events.XMLEvent)>($r2);

        if $z0 == 0 goto label3;

     label2:
        return $r2;

     label3:
        goto label1;
    }

    public java.lang.Object next()
    {
        com.ctc.wstx.evt.FilteredEventReader r0;
        javax.xml.stream.events.XMLEvent $r1;
        javax.xml.stream.XMLStreamException $r2;

        r0 := @this: com.ctc.wstx.evt.FilteredEventReader;

     label1:
        $r1 = virtualinvoke r0.<com.ctc.wstx.evt.FilteredEventReader: javax.xml.stream.events.XMLEvent nextEvent()>();

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        staticinvoke <com.ctc.wstx.util.ExceptionUtil: void throwRuntimeException(java.lang.Throwable)>($r2);

        return null;

        catch javax.xml.stream.XMLStreamException from label1 to label2 with label3;
    }

    public javax.xml.stream.events.XMLEvent nextTag() throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.evt.FilteredEventReader r0;
        javax.xml.stream.XMLEventReader $r1;
        javax.xml.stream.events.XMLEvent $r2;
        javax.xml.stream.EventFilter $r3;
        boolean $z0;

        r0 := @this: com.ctc.wstx.evt.FilteredEventReader;

     label1:
        $r1 = r0.<com.ctc.wstx.evt.FilteredEventReader: javax.xml.stream.XMLEventReader mReader>;

        $r2 = interfaceinvoke $r1.<javax.xml.stream.XMLEventReader: javax.xml.stream.events.XMLEvent nextTag()>();

        if $r2 == null goto label2;

        $r3 = r0.<com.ctc.wstx.evt.FilteredEventReader: javax.xml.stream.EventFilter mFilter>;

        $z0 = interfaceinvoke $r3.<javax.xml.stream.EventFilter: boolean accept(javax.xml.stream.events.XMLEvent)>($r2);

        if $z0 == 0 goto label3;

     label2:
        return $r2;

     label3:
        goto label1;
    }

    public javax.xml.stream.events.XMLEvent peek() throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.evt.FilteredEventReader r0;
        javax.xml.stream.XMLEventReader $r1, $r4;
        javax.xml.stream.events.XMLEvent $r2;
        javax.xml.stream.EventFilter $r3;
        boolean $z0;

        r0 := @this: com.ctc.wstx.evt.FilteredEventReader;

     label1:
        $r1 = r0.<com.ctc.wstx.evt.FilteredEventReader: javax.xml.stream.XMLEventReader mReader>;

        $r2 = interfaceinvoke $r1.<javax.xml.stream.XMLEventReader: javax.xml.stream.events.XMLEvent peek()>();

        if $r2 == null goto label2;

        $r3 = r0.<com.ctc.wstx.evt.FilteredEventReader: javax.xml.stream.EventFilter mFilter>;

        $z0 = interfaceinvoke $r3.<javax.xml.stream.EventFilter: boolean accept(javax.xml.stream.events.XMLEvent)>($r2);

        if $z0 == 0 goto label3;

     label2:
        return $r2;

     label3:
        $r4 = r0.<com.ctc.wstx.evt.FilteredEventReader: javax.xml.stream.XMLEventReader mReader>;

        interfaceinvoke $r4.<javax.xml.stream.XMLEventReader: javax.xml.stream.events.XMLEvent nextEvent()>();

        goto label1;
    }

    public void remove()
    {
        com.ctc.wstx.evt.FilteredEventReader r0;
        javax.xml.stream.XMLEventReader $r1;

        r0 := @this: com.ctc.wstx.evt.FilteredEventReader;

        $r1 = r0.<com.ctc.wstx.evt.FilteredEventReader: javax.xml.stream.XMLEventReader mReader>;

        interfaceinvoke $r1.<javax.xml.stream.XMLEventReader: void remove()>();

        return;
    }
}
