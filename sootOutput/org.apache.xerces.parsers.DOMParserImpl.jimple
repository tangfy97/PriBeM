public class org.apache.xerces.parsers.DOMParserImpl extends org.apache.xerces.parsers.AbstractDOMParser implements org.w3c.dom.ls.LSParser, org.w3c.dom.DOMConfiguration
{
    protected static final java.lang.String NAMESPACES;
    protected static final java.lang.String VALIDATION_FEATURE;
    protected static final java.lang.String XMLSCHEMA;
    protected static final java.lang.String XMLSCHEMA_FULL_CHECKING;
    protected static final java.lang.String DYNAMIC_VALIDATION;
    protected static final java.lang.String NORMALIZE_DATA;
    protected static final java.lang.String DISALLOW_DOCTYPE_DECL_FEATURE;
    protected static final java.lang.String HONOUR_ALL_SCHEMALOCATIONS;
    protected static final java.lang.String NAMESPACE_GROWTH;
    protected static final java.lang.String TOLERATE_DUPLICATES;
    protected static final java.lang.String SYMBOL_TABLE;
    protected static final java.lang.String PSVI_AUGMENT;
    protected boolean fNamespaceDeclarations;
    protected java.lang.String fSchemaType;
    protected boolean fBusy;
    private boolean abortNow;
    private java.lang.Thread currentThread;
    protected static final boolean DEBUG;
    private java.lang.String fSchemaLocation;
    private org.w3c.dom.DOMStringList fRecognizedParameters;
    private boolean fNullFilterInUse;
    private org.apache.xerces.parsers.DOMParserImpl$AbortHandler abortHandler;

    public void <init>(java.lang.String, java.lang.String)
    {
        org.apache.xerces.parsers.DOMParserImpl r0;
        org.apache.xerces.xni.parser.XMLParserConfiguration $r3, $r8, $r10;
        java.lang.Object $r2;
        java.lang.String r1, r4, $r5, $r6, $r7, $r9, $r11;
        boolean $z0, $z1;

        r0 := @this: org.apache.xerces.parsers.DOMParserImpl;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.apache.xerces.parsers.ObjectFactory: java.lang.Object createObject(java.lang.String,java.lang.String)>("org.apache.xerces.xni.parser.XMLParserConfiguration", r1);

        $r3 = (org.apache.xerces.xni.parser.XMLParserConfiguration) $r2;

        specialinvoke r0.<org.apache.xerces.parsers.DOMParserImpl: void <init>(org.apache.xerces.xni.parser.XMLParserConfiguration)>($r3);

        if r4 == null goto label2;

        $r5 = <org.apache.xerces.impl.Constants: java.lang.String NS_DTD>;

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        $r10 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r9 = <org.apache.xerces.impl.Constants: java.lang.String NS_DTD>;

        interfaceinvoke $r10.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setProperty(java.lang.String,java.lang.Object)>("http://java.sun.com/xml/jaxp/properties/schemaLanguage", $r9);

        $r11 = <org.apache.xerces.impl.Constants: java.lang.String NS_DTD>;

        r0.<org.apache.xerces.parsers.DOMParserImpl: java.lang.String fSchemaType> = $r11;

        goto label2;

     label1:
        $r6 = <org.apache.xerces.impl.Constants: java.lang.String NS_XMLSCHEMA>;

        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label2;

        $r8 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r7 = <org.apache.xerces.impl.Constants: java.lang.String NS_XMLSCHEMA>;

        interfaceinvoke $r8.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setProperty(java.lang.String,java.lang.Object)>("http://java.sun.com/xml/jaxp/properties/schemaLanguage", $r7);

     label2:
        return;
    }

    public void <init>(org.apache.xerces.xni.parser.XMLParserConfiguration)
    {
        org.apache.xerces.xni.parser.XMLParserConfiguration r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;
        java.lang.String[] $r2;
        org.apache.xerces.xni.parser.XMLConfigurationException $r20;
        org.apache.xerces.parsers.DOMParserImpl r0;

        r0 := @this: org.apache.xerces.parsers.DOMParserImpl;

        r1 := @parameter0: org.apache.xerces.xni.parser.XMLParserConfiguration;

        specialinvoke r0.<org.apache.xerces.parsers.AbstractDOMParser: void <init>(org.apache.xerces.xni.parser.XMLParserConfiguration)>(r1);

        r0.<org.apache.xerces.parsers.DOMParserImpl: boolean fNamespaceDeclarations> = 1;

        r0.<org.apache.xerces.parsers.DOMParserImpl: java.lang.String fSchemaType> = null;

        r0.<org.apache.xerces.parsers.DOMParserImpl: boolean fBusy> = 0;

        r0.<org.apache.xerces.parsers.DOMParserImpl: boolean abortNow> = 0;

        r0.<org.apache.xerces.parsers.DOMParserImpl: java.lang.String fSchemaLocation> = null;

        r0.<org.apache.xerces.parsers.DOMParserImpl: boolean fNullFilterInUse> = 0;

        r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.parsers.DOMParserImpl$AbortHandler abortHandler> = null;

        $r2 = newarray (java.lang.String)[10];

        $r2[0] = "canonical-form";

        $r2[1] = "cdata-sections";

        $r2[2] = "charset-overrides-xml-encoding";

        $r2[3] = "infoset";

        $r2[4] = "namespace-declarations";

        $r2[5] = "split-cdata-sections";

        $r2[6] = "supported-media-types-only";

        $r2[7] = "certified";

        $r2[8] = "well-formed";

        $r2[9] = "ignore-unknown-character-denormalizations";

        $r3 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r3.<org.apache.xerces.xni.parser.XMLParserConfiguration: void addRecognizedFeatures(java.lang.String[])>($r2);

        $r4 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r4.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/dom/defer-node-expansion", 0);

        $r5 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r5.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("namespace-declarations", 1);

        $r6 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r6.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("well-formed", 1);

        $r7 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r7.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/include-comments", 1);

        $r8 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r8.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/dom/include-ignorable-whitespace", 1);

        $r9 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r9.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/namespaces", 1);

        $r10 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r10.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/validation/dynamic", 0);

        $r11 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r11.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/dom/create-entity-ref-nodes", 0);

        $r12 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r12.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/create-cdata-nodes", 0);

        $r13 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r13.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("canonical-form", 0);

        $r14 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r14.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("charset-overrides-xml-encoding", 1);

        $r15 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r15.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("split-cdata-sections", 1);

        $r16 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r16.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("supported-media-types-only", 0);

        $r17 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r17.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("ignore-unknown-character-denormalizations", 1);

        $r18 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r18.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("certified", 1);

     label1:
        $r19 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r19.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/validation/schema/normalized-value", 0);

     label2:
        goto label4;

     label3:
        $r20 := @caughtexception;

     label4:
        return;

        catch org.apache.xerces.xni.parser.XMLConfigurationException from label1 to label2 with label3;
    }

    public void <init>(org.apache.xerces.util.SymbolTable)
    {
        org.apache.xerces.util.SymbolTable r3;
        org.apache.xerces.parsers.DOMParserImpl r0;
        org.apache.xerces.xni.parser.XMLParserConfiguration $r2, $r4;
        java.lang.Object $r1;

        r0 := @this: org.apache.xerces.parsers.DOMParserImpl;

        r3 := @parameter0: org.apache.xerces.util.SymbolTable;

        $r1 = staticinvoke <org.apache.xerces.parsers.ObjectFactory: java.lang.Object createObject(java.lang.String,java.lang.String)>("org.apache.xerces.xni.parser.XMLParserConfiguration", "org.apache.xerces.parsers.XIncludeAwareParserConfiguration");

        $r2 = (org.apache.xerces.xni.parser.XMLParserConfiguration) $r1;

        specialinvoke r0.<org.apache.xerces.parsers.DOMParserImpl: void <init>(org.apache.xerces.xni.parser.XMLParserConfiguration)>($r2);

        $r4 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r4.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setProperty(java.lang.String,java.lang.Object)>("http://apache.org/xml/properties/internal/symbol-table", r3);

        return;
    }

    public void <init>(org.apache.xerces.util.SymbolTable, org.apache.xerces.xni.grammars.XMLGrammarPool)
    {
        org.apache.xerces.util.SymbolTable r3;
        org.apache.xerces.parsers.DOMParserImpl r0;
        org.apache.xerces.xni.parser.XMLParserConfiguration $r2, $r4, $r6;
        org.apache.xerces.xni.grammars.XMLGrammarPool r5;
        java.lang.Object $r1;

        r0 := @this: org.apache.xerces.parsers.DOMParserImpl;

        r3 := @parameter0: org.apache.xerces.util.SymbolTable;

        r5 := @parameter1: org.apache.xerces.xni.grammars.XMLGrammarPool;

        $r1 = staticinvoke <org.apache.xerces.parsers.ObjectFactory: java.lang.Object createObject(java.lang.String,java.lang.String)>("org.apache.xerces.xni.parser.XMLParserConfiguration", "org.apache.xerces.parsers.XIncludeAwareParserConfiguration");

        $r2 = (org.apache.xerces.xni.parser.XMLParserConfiguration) $r1;

        specialinvoke r0.<org.apache.xerces.parsers.DOMParserImpl: void <init>(org.apache.xerces.xni.parser.XMLParserConfiguration)>($r2);

        $r4 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r4.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setProperty(java.lang.String,java.lang.Object)>("http://apache.org/xml/properties/internal/symbol-table", r3);

        $r6 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r6.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setProperty(java.lang.String,java.lang.Object)>("http://apache.org/xml/properties/internal/grammar-pool", r5);

        return;
    }

    public void reset()
    {
        org.apache.xerces.parsers.DOMParserImpl r0;
        org.apache.xerces.xni.parser.XMLParserConfiguration $r1;
        java.util.Stack $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.xerces.parsers.DOMParserImpl;

        specialinvoke r0.<org.apache.xerces.parsers.AbstractDOMParser: void reset()>();

        $r1 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $z0 = interfaceinvoke $r1.<org.apache.xerces.xni.parser.XMLParserConfiguration: boolean getFeature(java.lang.String)>("namespace-declarations");

        r0.<org.apache.xerces.parsers.DOMParserImpl: boolean fNamespaceDeclarations> = $z0;

        $z1 = r0.<org.apache.xerces.parsers.DOMParserImpl: boolean fNullFilterInUse>;

        if $z1 == 0 goto label1;

        r0.<org.apache.xerces.parsers.DOMParserImpl: org.w3c.dom.ls.LSParserFilter fDOMFilter> = null;

        r0.<org.apache.xerces.parsers.DOMParserImpl: boolean fNullFilterInUse> = 0;

     label1:
        $r2 = r0.<org.apache.xerces.parsers.DOMParserImpl: java.util.Stack fSkippedElemStack>;

        if $r2 == null goto label2;

        $r3 = r0.<org.apache.xerces.parsers.DOMParserImpl: java.util.Stack fSkippedElemStack>;

        virtualinvoke $r3.<java.util.Stack: void removeAllElements()>();

     label2:
        r0.<org.apache.xerces.parsers.DOMParserImpl: int fRejectedElementDepth> = 0;

        r0.<org.apache.xerces.parsers.DOMParserImpl: boolean fFilterReject> = 0;

        r0.<org.apache.xerces.parsers.DOMParserImpl: java.lang.String fSchemaType> = null;

        return;
    }

    public org.w3c.dom.DOMConfiguration getDomConfig()
    {
        org.apache.xerces.parsers.DOMParserImpl r0;

        r0 := @this: org.apache.xerces.parsers.DOMParserImpl;

        return r0;
    }

    public org.w3c.dom.ls.LSParserFilter getFilter()
    {
        org.apache.xerces.parsers.DOMParserImpl r0;
        org.w3c.dom.ls.LSParserFilter $r1;
        boolean $z0;

        r0 := @this: org.apache.xerces.parsers.DOMParserImpl;

        $z0 = r0.<org.apache.xerces.parsers.DOMParserImpl: boolean fNullFilterInUse>;

        if $z0 != 0 goto label1;

        $r1 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.w3c.dom.ls.LSParserFilter fDOMFilter>;

        goto label2;

     label1:
        $r1 = null;

     label2:
        return $r1;
    }

    public void setFilter(org.w3c.dom.ls.LSParserFilter)
    {
        org.apache.xerces.parsers.DOMParserImpl$NullLSParserFilter $r4;
        org.apache.xerces.parsers.DOMParserImpl r0;
        org.w3c.dom.ls.LSParserFilter r1, $r3;
        java.util.Stack $r2, $r5;
        boolean $z0;

        r0 := @this: org.apache.xerces.parsers.DOMParserImpl;

        r1 := @parameter0: org.w3c.dom.ls.LSParserFilter;

        $z0 = r0.<org.apache.xerces.parsers.DOMParserImpl: boolean fBusy>;

        if $z0 == 0 goto label1;

        if r1 != null goto label1;

        $r3 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.w3c.dom.ls.LSParserFilter fDOMFilter>;

        if $r3 == null goto label1;

        r0.<org.apache.xerces.parsers.DOMParserImpl: boolean fNullFilterInUse> = 1;

        $r4 = <org.apache.xerces.parsers.DOMParserImpl$NullLSParserFilter: org.apache.xerces.parsers.DOMParserImpl$NullLSParserFilter INSTANCE>;

        r0.<org.apache.xerces.parsers.DOMParserImpl: org.w3c.dom.ls.LSParserFilter fDOMFilter> = $r4;

        goto label2;

     label1:
        r0.<org.apache.xerces.parsers.DOMParserImpl: org.w3c.dom.ls.LSParserFilter fDOMFilter> = r1;

     label2:
        $r5 = r0.<org.apache.xerces.parsers.DOMParserImpl: java.util.Stack fSkippedElemStack>;

        if $r5 != null goto label3;

        $r2 = new java.util.Stack;

        specialinvoke $r2.<java.util.Stack: void <init>()>();

        r0.<org.apache.xerces.parsers.DOMParserImpl: java.util.Stack fSkippedElemStack> = $r2;

     label3:
        return;
    }

    public void setParameter(java.lang.String, java.lang.Object) throws org.w3c.dom.DOMException
    {
        org.apache.xerces.xni.parser.XMLConfigurationException $r73, $r75, $r76, $r77, $r78, $r79, $r80;
        org.apache.xerces.parsers.DOMParserImpl r4;
        java.lang.Object[] $r31;
        java.util.ArrayList $r27;
        java.util.StringTokenizer $r24;
        java.lang.String r1, $r3, $r7, $r8, $r11, $r13, $r16, $r18, $r23, $r25, $r28, $r29, $r53, $r54, r82, r84;
        org.w3c.dom.DOMErrorHandler $r39;
        java.util.Locale $r2, $r46;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38;
        org.apache.xerces.util.DOMEntityResolverWrapper $r34;
        org.apache.xerces.xni.parser.XMLParserConfiguration $r5, $r6, $r9, $r10, $r12, $r14, $r15, $r17, $r19, $r20, $r21, $r26, $r30, $r32, $r36, $r41, $r47, $r48, $r49, $r50, $r51, $r52, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r83, $r85;
        org.w3c.dom.DOMException $r22, $r33, $r37, $r42, $r44, $r45, $r74, $r81, $r86;
        java.lang.Boolean $r43;
        org.apache.xerces.util.DOMErrorHandlerWrapper $r38, $r40;
        org.w3c.dom.ls.LSResourceResolver $r35;
        java.lang.Object r0;

        r4 := @this: org.apache.xerces.parsers.DOMParserImpl;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof java.lang.Boolean;

        if $z0 == 0 goto label25;

        $r43 = (java.lang.Boolean) r0;

        $z14 = virtualinvoke $r43.<java.lang.Boolean: boolean booleanValue()>();

     label01:
        $z15 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("comments");

        if $z15 == 0 goto label02;

        $r72 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r72.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/include-comments", $z14);

        goto label23;

     label02:
        $z16 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("datatype-normalization");

        if $z16 == 0 goto label03;

        $r71 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r71.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/validation/schema/normalized-value", $z14);

        goto label23;

     label03:
        $z17 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("entities");

        if $z17 == 0 goto label04;

        $r70 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r70.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/dom/create-entity-ref-nodes", $z14);

        goto label23;

     label04:
        $z18 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("disallow-doctype");

        if $z18 == 0 goto label05;

        $r69 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r69.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/disallow-doctype-decl", $z14);

        goto label23;

     label05:
        $z19 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("supported-media-types-only");

        if $z19 != 0 goto label06;

        $z20 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("normalize-characters");

        if $z20 != 0 goto label06;

        $z21 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("check-character-normalization");

        if $z21 != 0 goto label06;

        $z22 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("canonical-form");

        if $z22 == 0 goto label07;

     label06:
        if $z14 == 0 goto label23;

        $r44 = staticinvoke <org.apache.xerces.parsers.DOMParserImpl: org.w3c.dom.DOMException newFeatureNotSupportedError(java.lang.String)>(r1);

        throw $r44;

     label07:
        $z23 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("namespaces");

        if $z23 == 0 goto label08;

        $r68 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r68.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/namespaces", $z14);

        goto label23;

     label08:
        $z24 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("infoset");

        if $z24 == 0 goto label09;

        if $z14 == 0 goto label23;

        $r60 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r60.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/namespaces", 1);

        $r61 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r61.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("namespace-declarations", 1);

        $r62 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r62.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/include-comments", 1);

        $r63 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r63.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/dom/include-ignorable-whitespace", 1);

        $r64 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r64.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/validation/dynamic", 0);

        $r65 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r65.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/dom/create-entity-ref-nodes", 0);

        $r66 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r66.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/validation/schema/normalized-value", 0);

        $r67 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r67.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/create-cdata-nodes", 0);

        goto label23;

     label09:
        $z25 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("cdata-sections");

        if $z25 == 0 goto label10;

        $r59 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r59.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/create-cdata-nodes", $z14);

        goto label23;

     label10:
        $z26 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("namespace-declarations");

        if $z26 == 0 goto label11;

        $r58 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r58.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("namespace-declarations", $z14);

        goto label23;

     label11:
        $z27 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("well-formed");

        if $z27 != 0 goto label12;

        $z28 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("ignore-unknown-character-denormalizations");

        if $z28 == 0 goto label13;

     label12:
        if $z14 != 0 goto label23;

        $r45 = staticinvoke <org.apache.xerces.parsers.DOMParserImpl: org.w3c.dom.DOMException newFeatureNotSupportedError(java.lang.String)>(r1);

        throw $r45;

     label13:
        $z29 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("validate");

        if $z29 == 0 goto label15;

        $r52 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r52.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/validation", $z14);

        $r54 = r4.<org.apache.xerces.parsers.DOMParserImpl: java.lang.String fSchemaType>;

        $r53 = <org.apache.xerces.impl.Constants: java.lang.String NS_DTD>;

        if $r54 == $r53 goto label14;

        $r56 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r56.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/validation/schema", $z14);

        $r57 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r57.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/validation/schema-full-checking", $z14);

     label14:
        if $z14 == 0 goto label23;

        $r55 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r55.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/validation/dynamic", 0);

        goto label23;

     label15:
        $z30 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("validate-if-schema");

        if $z30 == 0 goto label16;

        $r50 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r50.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/validation/dynamic", $z14);

        if $z14 == 0 goto label23;

        $r51 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r51.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/validation", 0);

        goto label23;

     label16:
        $z31 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("element-content-whitespace");

        if $z31 == 0 goto label17;

        $r49 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r49.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/dom/include-ignorable-whitespace", $z14);

        goto label23;

     label17:
        $z32 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("psvi");

        if $z32 == 0 goto label18;

        $r47 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r47.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/validation/schema/augment-psvi", 1);

        $r48 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r48.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setProperty(java.lang.String,java.lang.Object)>("http://apache.org/xml/properties/dom/document-class-name", "org.apache.xerces.dom.PSVIDocumentImpl");

        goto label23;

     label18:
        $z33 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("http://apache.org/xml/features/honour-all-schemaLocations");

        if $z33 == 0 goto label19;

        r82 = "http://apache.org/xml/features/honour-all-schemaLocations";

        goto label22;

     label19:
        $z34 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://apache.org/xml/features/namespace-growth");

        if $z34 == 0 goto label20;

        r82 = "http://apache.org/xml/features/namespace-growth";

        goto label22;

     label20:
        $z35 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://apache.org/xml/features/internal/tolerate-duplicates");

        if $z35 == 0 goto label21;

        r82 = "http://apache.org/xml/features/internal/tolerate-duplicates";

        goto label22;

     label21:
        $r46 = <java.util.Locale: java.util.Locale ENGLISH>;

        r82 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r46);

     label22:
        $r83 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r83.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>(r82, $z14);

     label23:
        goto label60;

     label24:
        $r80 := @caughtexception;

        $r81 = staticinvoke <org.apache.xerces.parsers.DOMParserImpl: org.w3c.dom.DOMException newFeatureNotFoundError(java.lang.String)>(r1);

        throw $r81;

     label25:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("error-handler");

        if $z1 == 0 goto label30;

        $z13 = r0 instanceof org.w3c.dom.DOMErrorHandler;

        if $z13 != 0 goto label26;

        if r0 != null goto label29;

     label26:
        $r38 = new org.apache.xerces.util.DOMErrorHandlerWrapper;

        $r39 = (org.w3c.dom.DOMErrorHandler) r0;

        specialinvoke $r38.<org.apache.xerces.util.DOMErrorHandlerWrapper: void <init>(org.w3c.dom.DOMErrorHandler)>($r39);

        r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.util.DOMErrorHandlerWrapper fErrorHandler> = $r38;

        $r41 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r40 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.util.DOMErrorHandlerWrapper fErrorHandler>;

        interfaceinvoke $r41.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setProperty(java.lang.String,java.lang.Object)>("http://apache.org/xml/properties/internal/error-handler", $r40);

     label27:
        goto label60;

     label28:
        $r79 := @caughtexception;

        goto label60;

     label29:
        $r42 = staticinvoke <org.apache.xerces.parsers.DOMParserImpl: org.w3c.dom.DOMException newTypeMismatchError(java.lang.String)>(r1);

        throw $r42;

     label30:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("resource-resolver");

        if $z2 == 0 goto label35;

        $z12 = r0 instanceof org.w3c.dom.ls.LSResourceResolver;

        if $z12 != 0 goto label31;

        if r0 != null goto label34;

     label31:
        $r36 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r34 = new org.apache.xerces.util.DOMEntityResolverWrapper;

        $r35 = (org.w3c.dom.ls.LSResourceResolver) r0;

        specialinvoke $r34.<org.apache.xerces.util.DOMEntityResolverWrapper: void <init>(org.w3c.dom.ls.LSResourceResolver)>($r35);

        interfaceinvoke $r36.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setProperty(java.lang.String,java.lang.Object)>("http://apache.org/xml/properties/internal/entity-resolver", $r34);

     label32:
        goto label60;

     label33:
        $r78 := @caughtexception;

        goto label60;

     label34:
        $r37 = staticinvoke <org.apache.xerces.parsers.DOMParserImpl: org.w3c.dom.DOMException newTypeMismatchError(java.lang.String)>(r1);

        throw $r37;

     label35:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("schema-location");

        if $z3 == 0 goto label44;

        $z9 = r0 instanceof java.lang.String;

        if $z9 != 0 goto label36;

        if r0 != null goto label43;

     label36:
        if r0 != null goto label37;

        r4.<org.apache.xerces.parsers.DOMParserImpl: java.lang.String fSchemaLocation> = null;

        $r32 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r32.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setProperty(java.lang.String,java.lang.Object)>("http://java.sun.com/xml/jaxp/properties/schemaSource", null);

        goto label41;

     label37:
        $r23 = (java.lang.String) r0;

        r4.<org.apache.xerces.parsers.DOMParserImpl: java.lang.String fSchemaLocation> = $r23;

        $r24 = new java.util.StringTokenizer;

        $r25 = r4.<org.apache.xerces.parsers.DOMParserImpl: java.lang.String fSchemaLocation>;

        specialinvoke $r24.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r25, " \n\t\r");

        $z10 = virtualinvoke $r24.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z10 == 0 goto label40;

        $r27 = new java.util.ArrayList;

        specialinvoke $r27.<java.util.ArrayList: void <init>()>();

        $r28 = virtualinvoke $r24.<java.util.StringTokenizer: java.lang.String nextToken()>();

        virtualinvoke $r27.<java.util.ArrayList: boolean add(java.lang.Object)>($r28);

        goto label39;

     label38:
        $r29 = virtualinvoke $r24.<java.util.StringTokenizer: java.lang.String nextToken()>();

        virtualinvoke $r27.<java.util.ArrayList: boolean add(java.lang.Object)>($r29);

     label39:
        $z11 = virtualinvoke $r24.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z11 != 0 goto label38;

        $r30 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r31 = virtualinvoke $r27.<java.util.ArrayList: java.lang.Object[] toArray()>();

        interfaceinvoke $r30.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setProperty(java.lang.String,java.lang.Object)>("http://java.sun.com/xml/jaxp/properties/schemaSource", $r31);

        goto label41;

     label40:
        $r26 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r26.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setProperty(java.lang.String,java.lang.Object)>("http://java.sun.com/xml/jaxp/properties/schemaSource", r0);

     label41:
        goto label60;

     label42:
        $r77 := @caughtexception;

        goto label60;

     label43:
        $r33 = staticinvoke <org.apache.xerces.parsers.DOMParserImpl: org.w3c.dom.DOMException newTypeMismatchError(java.lang.String)>(r1);

        throw $r33;

     label44:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("schema-type");

        if $z4 == 0 goto label51;

        $z6 = r0 instanceof java.lang.String;

        if $z6 != 0 goto label45;

        if r0 != null goto label50;

     label45:
        if r0 != null goto label46;

        $r19 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r19.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/validation/schema", 0);

        $r20 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r20.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/validation/schema-full-checking", 0);

        $r21 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r21.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setProperty(java.lang.String,java.lang.Object)>("http://java.sun.com/xml/jaxp/properties/schemaLanguage", null);

        r4.<org.apache.xerces.parsers.DOMParserImpl: java.lang.String fSchemaType> = null;

        goto label48;

     label46:
        $r7 = <org.apache.xerces.impl.Constants: java.lang.String NS_XMLSCHEMA>;

        $z7 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z7 == 0 goto label47;

        $r14 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r14.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/validation/schema", 1);

        $r15 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r15.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/validation/schema-full-checking", 1);

        $r17 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r16 = <org.apache.xerces.impl.Constants: java.lang.String NS_XMLSCHEMA>;

        interfaceinvoke $r17.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setProperty(java.lang.String,java.lang.Object)>("http://java.sun.com/xml/jaxp/properties/schemaLanguage", $r16);

        $r18 = <org.apache.xerces.impl.Constants: java.lang.String NS_XMLSCHEMA>;

        r4.<org.apache.xerces.parsers.DOMParserImpl: java.lang.String fSchemaType> = $r18;

        goto label48;

     label47:
        $r8 = <org.apache.xerces.impl.Constants: java.lang.String NS_DTD>;

        $z8 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

        if $z8 == 0 goto label48;

        $r9 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r9.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/validation/schema", 0);

        $r10 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r10.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/validation/schema-full-checking", 0);

        $r12 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r11 = <org.apache.xerces.impl.Constants: java.lang.String NS_DTD>;

        interfaceinvoke $r12.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setProperty(java.lang.String,java.lang.Object)>("http://java.sun.com/xml/jaxp/properties/schemaLanguage", $r11);

        $r13 = <org.apache.xerces.impl.Constants: java.lang.String NS_DTD>;

        r4.<org.apache.xerces.parsers.DOMParserImpl: java.lang.String fSchemaType> = $r13;

     label48:
        goto label60;

     label49:
        $r76 := @caughtexception;

        goto label60;

     label50:
        $r22 = staticinvoke <org.apache.xerces.parsers.DOMParserImpl: org.w3c.dom.DOMException newTypeMismatchError(java.lang.String)>(r1);

        throw $r22;

     label51:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("http://apache.org/xml/properties/dom/document-class-name");

        if $z5 == 0 goto label52;

        $r6 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r6.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setProperty(java.lang.String,java.lang.Object)>("http://apache.org/xml/properties/dom/document-class-name", r0);

        goto label60;

     label52:
        $r2 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        r84 = $r3;

     label53:
        $r5 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r5.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setProperty(java.lang.String,java.lang.Object)>($r3, r0);

        return;

     label54:
        $r75 := @caughtexception;

     label55:
        $z36 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("http://apache.org/xml/features/honour-all-schemaLocations");

        if $z36 == 0 goto label56;

        r84 = "http://apache.org/xml/features/honour-all-schemaLocations";

        goto label58;

     label56:
        $z37 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://apache.org/xml/features/namespace-growth");

        if $z37 == 0 goto label57;

        r84 = "http://apache.org/xml/features/namespace-growth";

        goto label58;

     label57:
        $z38 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://apache.org/xml/features/internal/tolerate-duplicates");

        if $z38 == 0 goto label58;

        r84 = "http://apache.org/xml/features/internal/tolerate-duplicates";

     label58:
        $r85 = r4.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r85.<org.apache.xerces.xni.parser.XMLParserConfiguration: boolean getFeature(java.lang.String)>(r84);

        $r86 = staticinvoke <org.apache.xerces.parsers.DOMParserImpl: org.w3c.dom.DOMException newTypeMismatchError(java.lang.String)>(r1);

        throw $r86;

     label59:
        $r73 := @caughtexception;

        $r74 = staticinvoke <org.apache.xerces.parsers.DOMParserImpl: org.w3c.dom.DOMException newFeatureNotFoundError(java.lang.String)>(r1);

        throw $r74;

     label60:
        return;

        catch org.apache.xerces.xni.parser.XMLConfigurationException from label01 to label23 with label24;
        catch org.apache.xerces.xni.parser.XMLConfigurationException from label26 to label27 with label28;
        catch org.apache.xerces.xni.parser.XMLConfigurationException from label31 to label32 with label33;
        catch org.apache.xerces.xni.parser.XMLConfigurationException from label36 to label41 with label42;
        catch org.apache.xerces.xni.parser.XMLConfigurationException from label45 to label48 with label49;
        catch org.apache.xerces.xni.parser.XMLConfigurationException from label53 to label54 with label54;
        catch org.apache.xerces.xni.parser.XMLConfigurationException from label55 to label59 with label59;
    }

    public java.lang.Object getParameter(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.xerces.xni.parser.XMLEntityResolver r55;
        org.apache.xerces.xni.parser.XMLConfigurationException $r35, $r37, $r40;
        org.apache.xerces.parsers.DOMParserImpl r2;
        java.lang.String r0, $r8, $r53, r56;
        org.w3c.dom.DOMErrorHandler $r17;
        java.util.Locale $r3, $r52;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, $z45, $z46, $z47, $z48;
        org.apache.xerces.util.DOMEntityResolverWrapper $r13;
        org.apache.xerces.xni.parser.XMLParserConfiguration $r4, $r6, $r9, $r11, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r38, $r51, $r57;
        org.w3c.dom.DOMException $r36;
        java.lang.Boolean $r1, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r54, $r58;
        org.apache.xerces.util.DOMErrorHandlerWrapper $r15, $r16;
        org.w3c.dom.ls.LSResourceResolver $r14;
        java.lang.Object $r5, $r7, $r10, $r12, $r39;

        r2 := @this: org.apache.xerces.parsers.DOMParserImpl;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("comments");

        if $z0 == 0 goto label03;

        $r34 = r2.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $z45 = interfaceinvoke $r34.<org.apache.xerces.xni.parser.XMLParserConfiguration: boolean getFeature(java.lang.String)>("http://apache.org/xml/features/include-comments");

        if $z45 == 0 goto label01;

        $r41 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label02;

     label01:
        $r41 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label02:
        return $r41;

     label03:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("datatype-normalization");

        if $z1 == 0 goto label06;

        $r33 = r2.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $z44 = interfaceinvoke $r33.<org.apache.xerces.xni.parser.XMLParserConfiguration: boolean getFeature(java.lang.String)>("http://apache.org/xml/features/validation/schema/normalized-value");

        if $z44 == 0 goto label04;

        $r42 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label05;

     label04:
        $r42 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label05:
        return $r42;

     label06:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("entities");

        if $z2 == 0 goto label09;

        $r32 = r2.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $z43 = interfaceinvoke $r32.<org.apache.xerces.xni.parser.XMLParserConfiguration: boolean getFeature(java.lang.String)>("http://apache.org/xml/features/dom/create-entity-ref-nodes");

        if $z43 == 0 goto label07;

        $r43 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label08;

     label07:
        $r43 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label08:
        return $r43;

     label09:
        $z3 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("namespaces");

        if $z3 == 0 goto label12;

        $r31 = r2.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $z42 = interfaceinvoke $r31.<org.apache.xerces.xni.parser.XMLParserConfiguration: boolean getFeature(java.lang.String)>("http://xml.org/sax/features/namespaces");

        if $z42 == 0 goto label10;

        $r44 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label11;

     label10:
        $r44 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label11:
        return $r44;

     label12:
        $z4 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("validate");

        if $z4 == 0 goto label15;

        $r30 = r2.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $z41 = interfaceinvoke $r30.<org.apache.xerces.xni.parser.XMLParserConfiguration: boolean getFeature(java.lang.String)>("http://xml.org/sax/features/validation");

        if $z41 == 0 goto label13;

        $r45 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label14;

     label13:
        $r45 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label14:
        return $r45;

     label15:
        $z5 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("validate-if-schema");

        if $z5 == 0 goto label18;

        $r29 = r2.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $z40 = interfaceinvoke $r29.<org.apache.xerces.xni.parser.XMLParserConfiguration: boolean getFeature(java.lang.String)>("http://apache.org/xml/features/validation/dynamic");

        if $z40 == 0 goto label16;

        $r46 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label17;

     label16:
        $r46 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label17:
        return $r46;

     label18:
        $z6 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("element-content-whitespace");

        if $z6 == 0 goto label21;

        $r28 = r2.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $z39 = interfaceinvoke $r28.<org.apache.xerces.xni.parser.XMLParserConfiguration: boolean getFeature(java.lang.String)>("http://apache.org/xml/features/dom/include-ignorable-whitespace");

        if $z39 == 0 goto label19;

        $r47 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label20;

     label19:
        $r47 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label20:
        return $r47;

     label21:
        $z7 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("disallow-doctype");

        if $z7 == 0 goto label24;

        $r27 = r2.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $z38 = interfaceinvoke $r27.<org.apache.xerces.xni.parser.XMLParserConfiguration: boolean getFeature(java.lang.String)>("http://apache.org/xml/features/disallow-doctype-decl");

        if $z38 == 0 goto label22;

        $r48 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label23;

     label22:
        $r48 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label23:
        return $r48;

     label24:
        $z8 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("infoset");

        if $z8 == 0 goto label29;

        $r19 = r2.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $z30 = interfaceinvoke $r19.<org.apache.xerces.xni.parser.XMLParserConfiguration: boolean getFeature(java.lang.String)>("http://xml.org/sax/features/namespaces");

        if $z30 == 0 goto label25;

        $r20 = r2.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $z31 = interfaceinvoke $r20.<org.apache.xerces.xni.parser.XMLParserConfiguration: boolean getFeature(java.lang.String)>("namespace-declarations");

        if $z31 == 0 goto label25;

        $r21 = r2.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $z32 = interfaceinvoke $r21.<org.apache.xerces.xni.parser.XMLParserConfiguration: boolean getFeature(java.lang.String)>("http://apache.org/xml/features/include-comments");

        if $z32 == 0 goto label25;

        $r22 = r2.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $z33 = interfaceinvoke $r22.<org.apache.xerces.xni.parser.XMLParserConfiguration: boolean getFeature(java.lang.String)>("http://apache.org/xml/features/dom/include-ignorable-whitespace");

        if $z33 == 0 goto label25;

        $r23 = r2.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $z34 = interfaceinvoke $r23.<org.apache.xerces.xni.parser.XMLParserConfiguration: boolean getFeature(java.lang.String)>("http://apache.org/xml/features/validation/dynamic");

        if $z34 != 0 goto label25;

        $r24 = r2.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $z35 = interfaceinvoke $r24.<org.apache.xerces.xni.parser.XMLParserConfiguration: boolean getFeature(java.lang.String)>("http://apache.org/xml/features/dom/create-entity-ref-nodes");

        if $z35 != 0 goto label25;

        $r25 = r2.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $z36 = interfaceinvoke $r25.<org.apache.xerces.xni.parser.XMLParserConfiguration: boolean getFeature(java.lang.String)>("http://apache.org/xml/features/validation/schema/normalized-value");

        if $z36 != 0 goto label25;

        $r26 = r2.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $z37 = interfaceinvoke $r26.<org.apache.xerces.xni.parser.XMLParserConfiguration: boolean getFeature(java.lang.String)>("http://apache.org/xml/features/create-cdata-nodes");

        if $z37 != 0 goto label25;

        $z46 = 1;

        goto label26;

     label25:
        $z46 = 0;

     label26:
        if $z46 == 0 goto label27;

        $r49 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label28;

     label27:
        $r49 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label28:
        return $r49;

     label29:
        $z9 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("cdata-sections");

        if $z9 == 0 goto label32;

        $r18 = r2.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $z29 = interfaceinvoke $r18.<org.apache.xerces.xni.parser.XMLParserConfiguration: boolean getFeature(java.lang.String)>("http://apache.org/xml/features/create-cdata-nodes");

        if $z29 == 0 goto label30;

        $r50 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label31;

     label30:
        $r50 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label31:
        return $r50;

     label32:
        $z10 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("check-character-normalization");

        if $z10 != 0 goto label33;

        $z11 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("normalize-characters");

        if $z11 == 0 goto label34;

     label33:
        $r1 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r1;

     label34:
        $z12 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("namespace-declarations");

        if $z12 != 0 goto label35;

        $z13 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("well-formed");

        if $z13 != 0 goto label35;

        $z14 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("ignore-unknown-character-denormalizations");

        if $z14 != 0 goto label35;

        $z15 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("canonical-form");

        if $z15 != 0 goto label35;

        $z16 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("supported-media-types-only");

        if $z16 != 0 goto label35;

        $z17 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("split-cdata-sections");

        if $z17 != 0 goto label35;

        $z18 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("charset-overrides-xml-encoding");

        if $z18 == 0 goto label38;

     label35:
        $r51 = r2.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r52 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r53 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r52);

        $z47 = interfaceinvoke $r51.<org.apache.xerces.xni.parser.XMLParserConfiguration: boolean getFeature(java.lang.String)>($r53);

        if $z47 == 0 goto label36;

        $r54 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label37;

     label36:
        $r54 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label37:
        return $r54;

     label38:
        $z19 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("error-handler");

        if $z19 == 0 goto label40;

        $r15 = r2.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.util.DOMErrorHandlerWrapper fErrorHandler>;

        if $r15 == null goto label39;

        $r16 = r2.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.util.DOMErrorHandlerWrapper fErrorHandler>;

        $r17 = virtualinvoke $r16.<org.apache.xerces.util.DOMErrorHandlerWrapper: org.w3c.dom.DOMErrorHandler getErrorHandler()>();

        return $r17;

     label39:
        return null;

     label40:
        $z20 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("resource-resolver");

        if $z20 == 0 goto label45;

     label41:
        $r11 = r2.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r12 = interfaceinvoke $r11.<org.apache.xerces.xni.parser.XMLParserConfiguration: java.lang.Object getProperty(java.lang.String)>("http://apache.org/xml/properties/internal/entity-resolver");

        r55 = (org.apache.xerces.xni.parser.XMLEntityResolver) $r12;

        if r55 == null goto label42;

        $z28 = r55 instanceof org.apache.xerces.util.DOMEntityResolverWrapper;

        if $z28 == 0 goto label42;

        $r13 = (org.apache.xerces.util.DOMEntityResolverWrapper) r55;

        $r14 = virtualinvoke $r13.<org.apache.xerces.util.DOMEntityResolverWrapper: org.w3c.dom.ls.LSResourceResolver getEntityResolver()>();

        return $r14;

     label42:
        goto label44;

     label43:
        $r40 := @caughtexception;

     label44:
        return null;

     label45:
        $z21 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("schema-type");

        if $z21 == 0 goto label46;

        $r9 = r2.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r10 = interfaceinvoke $r9.<org.apache.xerces.xni.parser.XMLParserConfiguration: java.lang.Object getProperty(java.lang.String)>("http://java.sun.com/xml/jaxp/properties/schemaLanguage");

        return $r10;

     label46:
        $z22 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("schema-location");

        if $z22 == 0 goto label47;

        $r8 = r2.<org.apache.xerces.parsers.DOMParserImpl: java.lang.String fSchemaLocation>;

        return $r8;

     label47:
        $z23 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("http://apache.org/xml/properties/internal/symbol-table");

        if $z23 == 0 goto label48;

        $r6 = r2.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r7 = interfaceinvoke $r6.<org.apache.xerces.xni.parser.XMLParserConfiguration: java.lang.Object getProperty(java.lang.String)>("http://apache.org/xml/properties/internal/symbol-table");

        return $r7;

     label48:
        $z24 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("http://apache.org/xml/properties/dom/document-class-name");

        if $z24 == 0 goto label49;

        $r4 = r2.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r5 = interfaceinvoke $r4.<org.apache.xerces.xni.parser.XMLParserConfiguration: java.lang.Object getProperty(java.lang.String)>("http://apache.org/xml/properties/dom/document-class-name");

        return $r5;

     label49:
        $z25 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("http://apache.org/xml/features/honour-all-schemaLocations");

        if $z25 == 0 goto label50;

        r56 = "http://apache.org/xml/features/honour-all-schemaLocations";

        goto label53;

     label50:
        $z26 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("http://apache.org/xml/features/namespace-growth");

        if $z26 == 0 goto label51;

        r56 = "http://apache.org/xml/features/namespace-growth";

        goto label53;

     label51:
        $z27 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("http://apache.org/xml/features/internal/tolerate-duplicates");

        if $z27 == 0 goto label52;

        r56 = "http://apache.org/xml/features/internal/tolerate-duplicates";

        goto label53;

     label52:
        $r3 = <java.util.Locale: java.util.Locale ENGLISH>;

        r56 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r3);

     label53:
        $r57 = r2.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $z48 = interfaceinvoke $r57.<org.apache.xerces.xni.parser.XMLParserConfiguration: boolean getFeature(java.lang.String)>(r56);

        if $z48 == 0 goto label54;

        $r58 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label55;

     label54:
        $r58 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label55:
        return $r58;

     label56:
        $r37 := @caughtexception;

     label57:
        $r38 = r2.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r39 = interfaceinvoke $r38.<org.apache.xerces.xni.parser.XMLParserConfiguration: java.lang.Object getProperty(java.lang.String)>(r56);

        return $r39;

     label58:
        $r35 := @caughtexception;

        $r36 = staticinvoke <org.apache.xerces.parsers.DOMParserImpl: org.w3c.dom.DOMException newFeatureNotFoundError(java.lang.String)>(r0);

        throw $r36;

        catch org.apache.xerces.xni.parser.XMLConfigurationException from label41 to label42 with label43;
        catch org.apache.xerces.xni.parser.XMLConfigurationException from label53 to label56 with label56;
        catch org.apache.xerces.xni.parser.XMLConfigurationException from label57 to label58 with label58;
    }

    public boolean canSetParameter(java.lang.String, java.lang.Object)
    {
        java.util.Locale $r3, $r9;
        org.apache.xerces.xni.parser.XMLConfigurationException $r10, $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36;
        org.apache.xerces.parsers.DOMParserImpl r2;
        org.apache.xerces.xni.parser.XMLParserConfiguration $r4, $r13;
        java.lang.Boolean $r8;
        java.lang.String r1, $r5, $r6, $r7, r12;
        java.lang.Object r0;

        r2 := @this: org.apache.xerces.parsers.DOMParserImpl;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        if r0 != null goto label01;

        return 1;

     label01:
        $z0 = r0 instanceof java.lang.Boolean;

        if $z0 == 0 goto label17;

        $r8 = (java.lang.Boolean) r0;

        $z12 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        $z13 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("supported-media-types-only");

        if $z13 != 0 goto label02;

        $z14 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("normalize-characters");

        if $z14 != 0 goto label02;

        $z15 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("check-character-normalization");

        if $z15 != 0 goto label02;

        $z16 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("canonical-form");

        if $z16 == 0 goto label05;

     label02:
        if $z12 == 0 goto label03;

        $z35 = 0;

        goto label04;

     label03:
        $z35 = 1;

     label04:
        return $z35;

     label05:
        $z17 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("well-formed");

        if $z17 != 0 goto label06;

        $z18 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("ignore-unknown-character-denormalizations");

        if $z18 == 0 goto label09;

     label06:
        if $z12 == 0 goto label07;

        $z36 = 1;

        goto label08;

     label07:
        $z36 = 0;

     label08:
        return $z36;

     label09:
        $z19 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("cdata-sections");

        if $z19 != 0 goto label10;

        $z20 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("charset-overrides-xml-encoding");

        if $z20 != 0 goto label10;

        $z21 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("comments");

        if $z21 != 0 goto label10;

        $z22 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("datatype-normalization");

        if $z22 != 0 goto label10;

        $z23 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("disallow-doctype");

        if $z23 != 0 goto label10;

        $z24 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("entities");

        if $z24 != 0 goto label10;

        $z25 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("infoset");

        if $z25 != 0 goto label10;

        $z26 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("namespaces");

        if $z26 != 0 goto label10;

        $z27 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("namespace-declarations");

        if $z27 != 0 goto label10;

        $z28 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("validate");

        if $z28 != 0 goto label10;

        $z29 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("validate-if-schema");

        if $z29 != 0 goto label10;

        $z30 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("element-content-whitespace");

        if $z30 != 0 goto label10;

        $z31 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("xml-declaration");

        if $z31 == 0 goto label11;

     label10:
        return 1;

     label11:
        $z32 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("http://apache.org/xml/features/honour-all-schemaLocations");

        if $z32 == 0 goto label12;

        r12 = "http://apache.org/xml/features/honour-all-schemaLocations";

        goto label15;

     label12:
        $z33 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("http://apache.org/xml/features/namespace-growth");

        if $z33 == 0 goto label13;

        r12 = "http://apache.org/xml/features/namespace-growth";

        goto label15;

     label13:
        $z34 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("http://apache.org/xml/features/internal/tolerate-duplicates");

        if $z34 == 0 goto label14;

        r12 = "http://apache.org/xml/features/internal/tolerate-duplicates";

        goto label15;

     label14:
        $r9 = <java.util.Locale: java.util.Locale ENGLISH>;

        r12 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r9);

     label15:
        $r13 = r2.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r13.<org.apache.xerces.xni.parser.XMLParserConfiguration: boolean getFeature(java.lang.String)>(r12);

        return 1;

     label16:
        $r11 := @caughtexception;

        return 0;

     label17:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("error-handler");

        if $z1 == 0 goto label20;

        $z11 = r0 instanceof org.w3c.dom.DOMErrorHandler;

        if $z11 != 0 goto label18;

        if r0 != null goto label19;

     label18:
        return 1;

     label19:
        return 0;

     label20:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("resource-resolver");

        if $z2 == 0 goto label23;

        $z10 = r0 instanceof org.w3c.dom.ls.LSResourceResolver;

        if $z10 != 0 goto label21;

        if r0 != null goto label22;

     label21:
        return 1;

     label22:
        return 0;

     label23:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("schema-type");

        if $z3 == 0 goto label27;

        $z7 = r0 instanceof java.lang.String;

        if $z7 == 0 goto label24;

        $r6 = <org.apache.xerces.impl.Constants: java.lang.String NS_XMLSCHEMA>;

        $z8 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z8 != 0 goto label25;

        $r7 = <org.apache.xerces.impl.Constants: java.lang.String NS_DTD>;

        $z9 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z9 != 0 goto label25;

     label24:
        if r0 != null goto label26;

     label25:
        return 1;

     label26:
        return 0;

     label27:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("schema-location");

        if $z4 == 0 goto label30;

        $z6 = r0 instanceof java.lang.String;

        if $z6 != 0 goto label28;

        if r0 != null goto label29;

     label28:
        return 1;

     label29:
        return 0;

     label30:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("http://apache.org/xml/properties/dom/document-class-name");

        if $z5 == 0 goto label31;

        return 1;

     label31:
        $r4 = r2.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r3 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r3);

        interfaceinvoke $r4.<org.apache.xerces.xni.parser.XMLParserConfiguration: java.lang.Object getProperty(java.lang.String)>($r5);

        return 1;

     label32:
        $r10 := @caughtexception;

        return 0;

        catch org.apache.xerces.xni.parser.XMLConfigurationException from label11 to label16 with label16;
        catch org.apache.xerces.xni.parser.XMLConfigurationException from label31 to label32 with label32;
    }

    public org.w3c.dom.DOMStringList getParameterNames()
    {
        org.w3c.dom.DOMStringList $r1, $r2;
        org.apache.xerces.dom.DOMStringListImpl $r4;
        org.apache.xerces.parsers.DOMParserImpl r0;
        java.util.ArrayList $r3;

        r0 := @this: org.apache.xerces.parsers.DOMParserImpl;

        $r1 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.w3c.dom.DOMStringList fRecognizedParameters>;

        if $r1 != null goto label1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>("namespaces");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>("cdata-sections");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>("canonical-form");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>("namespace-declarations");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>("split-cdata-sections");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>("entities");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>("validate-if-schema");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>("validate");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>("datatype-normalization");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>("charset-overrides-xml-encoding");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>("check-character-normalization");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>("supported-media-types-only");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>("ignore-unknown-character-denormalizations");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>("normalize-characters");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>("well-formed");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>("infoset");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>("disallow-doctype");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>("element-content-whitespace");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>("comments");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>("error-handler");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>("resource-resolver");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>("schema-location");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>("schema-type");

        $r4 = new org.apache.xerces.dom.DOMStringListImpl;

        specialinvoke $r4.<org.apache.xerces.dom.DOMStringListImpl: void <init>(java.util.ArrayList)>($r3);

        r0.<org.apache.xerces.parsers.DOMParserImpl: org.w3c.dom.DOMStringList fRecognizedParameters> = $r4;

     label1:
        $r2 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.w3c.dom.DOMStringList fRecognizedParameters>;

        return $r2;
    }

    public org.w3c.dom.Document parseURI(java.lang.String) throws org.w3c.dom.ls.LSException
    {
        java.lang.Throwable $r16;
        org.w3c.dom.ls.LSException $r15, $r17;
        org.w3c.dom.Document $r4;
        java.lang.Thread $r3, $r5, $r14;
        org.w3c.dom.DOMException $r6;
        java.lang.String r2, $r11;
        org.apache.xerces.dom.DOMErrorImpl $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.xerces.util.DOMErrorHandlerWrapper $r9, $r12;
        org.apache.xerces.parsers.DOMParserImpl r0;
        org.apache.xerces.parsers.AbstractDOMParser$Abort $r8;
        org.apache.xerces.xni.parser.XMLInputSource $r1;
        java.lang.Exception $r7;
        org.w3c.dom.DOMErrorHandler $r13;

        r0 := @this: org.apache.xerces.parsers.DOMParserImpl;

        r2 := @parameter0: java.lang.String;

        $z0 = r0.<org.apache.xerces.parsers.DOMParserImpl: boolean fBusy>;

        if $z0 == 0 goto label1;

        $r6 = staticinvoke <org.apache.xerces.parsers.DOMParserImpl: org.w3c.dom.DOMException newInvalidStateError()>();

        throw $r6;

     label1:
        $r1 = new org.apache.xerces.xni.parser.XMLInputSource;

        specialinvoke $r1.<org.apache.xerces.xni.parser.XMLInputSource: void <init>(java.lang.String,java.lang.String,java.lang.String)>(null, r2, null);

     label2:
        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r0.<org.apache.xerces.parsers.DOMParserImpl: java.lang.Thread currentThread> = $r3;

        r0.<org.apache.xerces.parsers.DOMParserImpl: boolean fBusy> = 1;

        virtualinvoke r0.<org.apache.xerces.parsers.DOMParserImpl: void parse(org.apache.xerces.xni.parser.XMLInputSource)>($r1);

        r0.<org.apache.xerces.parsers.DOMParserImpl: boolean fBusy> = 0;

        $z1 = r0.<org.apache.xerces.parsers.DOMParserImpl: boolean abortNow>;

        if $z1 == 0 goto label3;

        $r5 = r0.<org.apache.xerces.parsers.DOMParserImpl: java.lang.Thread currentThread>;

        $z2 = virtualinvoke $r5.<java.lang.Thread: boolean isInterrupted()>();

        if $z2 == 0 goto label3;

        r0.<org.apache.xerces.parsers.DOMParserImpl: boolean abortNow> = 0;

        staticinvoke <java.lang.Thread: boolean interrupted()>();

     label3:
        goto label8;

     label4:
        $r7 := @caughtexception;

        r0.<org.apache.xerces.parsers.DOMParserImpl: boolean fBusy> = 0;

        $z3 = r0.<org.apache.xerces.parsers.DOMParserImpl: boolean abortNow>;

        if $z3 == 0 goto label5;

        $r14 = r0.<org.apache.xerces.parsers.DOMParserImpl: java.lang.Thread currentThread>;

        $z5 = virtualinvoke $r14.<java.lang.Thread: boolean isInterrupted()>();

        if $z5 == 0 goto label5;

        staticinvoke <java.lang.Thread: boolean interrupted()>();

     label5:
        $z6 = r0.<org.apache.xerces.parsers.DOMParserImpl: boolean abortNow>;

        if $z6 == 0 goto label6;

        r0.<org.apache.xerces.parsers.DOMParserImpl: boolean abortNow> = 0;

        specialinvoke r0.<org.apache.xerces.parsers.DOMParserImpl: void restoreHandlers()>();

        return null;

     label6:
        $r8 = <org.apache.xerces.parsers.AbstractDOMParser$Abort: org.apache.xerces.parsers.AbstractDOMParser$Abort INSTANCE>;

        if $r7 == $r8 goto label8;

        $z4 = $r7 instanceof org.apache.xerces.xni.parser.XMLParseException;

        if $z4 != 0 goto label7;

        $r9 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.util.DOMErrorHandlerWrapper fErrorHandler>;

        if $r9 == null goto label7;

        $r10 = new org.apache.xerces.dom.DOMErrorImpl;

        specialinvoke $r10.<org.apache.xerces.dom.DOMErrorImpl: void <init>()>();

        $r10.<org.apache.xerces.dom.DOMErrorImpl: java.lang.Exception fException> = $r7;

        $r11 = virtualinvoke $r7.<java.lang.Exception: java.lang.String getMessage()>();

        $r10.<org.apache.xerces.dom.DOMErrorImpl: java.lang.String fMessage> = $r11;

        $r10.<org.apache.xerces.dom.DOMErrorImpl: short fSeverity> = 3;

        $r12 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.util.DOMErrorHandlerWrapper fErrorHandler>;

        $r13 = virtualinvoke $r12.<org.apache.xerces.util.DOMErrorHandlerWrapper: org.w3c.dom.DOMErrorHandler getErrorHandler()>();

        interfaceinvoke $r13.<org.w3c.dom.DOMErrorHandler: boolean handleError(org.w3c.dom.DOMError)>($r10);

     label7:
        $r15 = staticinvoke <org.apache.xerces.util.DOMUtil: org.w3c.dom.ls.LSException createLSException(short,java.lang.Throwable)>(81, $r7);

        $r16 = virtualinvoke $r15.<org.w3c.dom.ls.LSException: java.lang.Throwable fillInStackTrace()>();

        $r17 = (org.w3c.dom.ls.LSException) $r16;

        throw $r17;

     label8:
        $r4 = virtualinvoke r0.<org.apache.xerces.parsers.DOMParserImpl: org.w3c.dom.Document getDocument()>();

        virtualinvoke r0.<org.apache.xerces.parsers.DOMParserImpl: void dropDocumentReferences()>();

        return $r4;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public org.w3c.dom.Document parse(org.w3c.dom.ls.LSInput) throws org.w3c.dom.ls.LSException
    {
        java.lang.Throwable $r16;
        org.w3c.dom.ls.LSException $r15, $r17;
        org.w3c.dom.Document $r4;
        java.lang.Thread $r3, $r5, $r14;
        org.w3c.dom.DOMException $r6;
        java.lang.String $r11;
        org.apache.xerces.dom.DOMErrorImpl $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.xerces.util.DOMErrorHandlerWrapper $r9, $r12;
        org.apache.xerces.parsers.DOMParserImpl r0;
        org.apache.xerces.parsers.AbstractDOMParser$Abort $r8;
        org.apache.xerces.xni.parser.XMLInputSource $r2;
        java.lang.Exception $r7;
        org.w3c.dom.DOMErrorHandler $r13;
        org.w3c.dom.ls.LSInput r1;

        r0 := @this: org.apache.xerces.parsers.DOMParserImpl;

        r1 := @parameter0: org.w3c.dom.ls.LSInput;

        $r2 = virtualinvoke r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLInputSource dom2xmlInputSource(org.w3c.dom.ls.LSInput)>(r1);

        $z0 = r0.<org.apache.xerces.parsers.DOMParserImpl: boolean fBusy>;

        if $z0 == 0 goto label1;

        $r6 = staticinvoke <org.apache.xerces.parsers.DOMParserImpl: org.w3c.dom.DOMException newInvalidStateError()>();

        throw $r6;

     label1:
        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r0.<org.apache.xerces.parsers.DOMParserImpl: java.lang.Thread currentThread> = $r3;

        r0.<org.apache.xerces.parsers.DOMParserImpl: boolean fBusy> = 1;

        virtualinvoke r0.<org.apache.xerces.parsers.DOMParserImpl: void parse(org.apache.xerces.xni.parser.XMLInputSource)>($r2);

        r0.<org.apache.xerces.parsers.DOMParserImpl: boolean fBusy> = 0;

        $z1 = r0.<org.apache.xerces.parsers.DOMParserImpl: boolean abortNow>;

        if $z1 == 0 goto label2;

        $r5 = r0.<org.apache.xerces.parsers.DOMParserImpl: java.lang.Thread currentThread>;

        $z2 = virtualinvoke $r5.<java.lang.Thread: boolean isInterrupted()>();

        if $z2 == 0 goto label2;

        r0.<org.apache.xerces.parsers.DOMParserImpl: boolean abortNow> = 0;

        staticinvoke <java.lang.Thread: boolean interrupted()>();

     label2:
        goto label7;

     label3:
        $r7 := @caughtexception;

        r0.<org.apache.xerces.parsers.DOMParserImpl: boolean fBusy> = 0;

        $z3 = r0.<org.apache.xerces.parsers.DOMParserImpl: boolean abortNow>;

        if $z3 == 0 goto label4;

        $r14 = r0.<org.apache.xerces.parsers.DOMParserImpl: java.lang.Thread currentThread>;

        $z5 = virtualinvoke $r14.<java.lang.Thread: boolean isInterrupted()>();

        if $z5 == 0 goto label4;

        staticinvoke <java.lang.Thread: boolean interrupted()>();

     label4:
        $z6 = r0.<org.apache.xerces.parsers.DOMParserImpl: boolean abortNow>;

        if $z6 == 0 goto label5;

        r0.<org.apache.xerces.parsers.DOMParserImpl: boolean abortNow> = 0;

        specialinvoke r0.<org.apache.xerces.parsers.DOMParserImpl: void restoreHandlers()>();

        return null;

     label5:
        $r8 = <org.apache.xerces.parsers.AbstractDOMParser$Abort: org.apache.xerces.parsers.AbstractDOMParser$Abort INSTANCE>;

        if $r7 == $r8 goto label7;

        $z4 = $r7 instanceof org.apache.xerces.xni.parser.XMLParseException;

        if $z4 != 0 goto label6;

        $r9 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.util.DOMErrorHandlerWrapper fErrorHandler>;

        if $r9 == null goto label6;

        $r10 = new org.apache.xerces.dom.DOMErrorImpl;

        specialinvoke $r10.<org.apache.xerces.dom.DOMErrorImpl: void <init>()>();

        $r10.<org.apache.xerces.dom.DOMErrorImpl: java.lang.Exception fException> = $r7;

        $r11 = virtualinvoke $r7.<java.lang.Exception: java.lang.String getMessage()>();

        $r10.<org.apache.xerces.dom.DOMErrorImpl: java.lang.String fMessage> = $r11;

        $r10.<org.apache.xerces.dom.DOMErrorImpl: short fSeverity> = 3;

        $r12 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.util.DOMErrorHandlerWrapper fErrorHandler>;

        $r13 = virtualinvoke $r12.<org.apache.xerces.util.DOMErrorHandlerWrapper: org.w3c.dom.DOMErrorHandler getErrorHandler()>();

        interfaceinvoke $r13.<org.w3c.dom.DOMErrorHandler: boolean handleError(org.w3c.dom.DOMError)>($r10);

     label6:
        $r15 = staticinvoke <org.apache.xerces.util.DOMUtil: org.w3c.dom.ls.LSException createLSException(short,java.lang.Throwable)>(81, $r7);

        $r16 = virtualinvoke $r15.<org.w3c.dom.ls.LSException: java.lang.Throwable fillInStackTrace()>();

        $r17 = (org.w3c.dom.ls.LSException) $r16;

        throw $r17;

     label7:
        $r4 = virtualinvoke r0.<org.apache.xerces.parsers.DOMParserImpl: org.w3c.dom.Document getDocument()>();

        virtualinvoke r0.<org.apache.xerces.parsers.DOMParserImpl: void dropDocumentReferences()>();

        return $r4;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void restoreHandlers()
    {
        org.apache.xerces.parsers.DOMParserImpl r0;
        org.apache.xerces.xni.parser.XMLParserConfiguration $r1, $r2, $r3;

        r0 := @this: org.apache.xerces.parsers.DOMParserImpl;

        $r1 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r1.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setDocumentHandler(org.apache.xerces.xni.XMLDocumentHandler)>(r0);

        $r2 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r2.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setDTDHandler(org.apache.xerces.xni.XMLDTDHandler)>(r0);

        $r3 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        interfaceinvoke $r3.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setDTDContentModelHandler(org.apache.xerces.xni.XMLDTDContentModelHandler)>(r0);

        return;
    }

    public org.w3c.dom.Node parseWithContext(org.w3c.dom.ls.LSInput, org.w3c.dom.Node, short) throws org.w3c.dom.DOMException, org.w3c.dom.ls.LSException
    {
        short s0;
        org.w3c.dom.DOMException $r0;
        org.w3c.dom.Node r3;
        org.apache.xerces.parsers.DOMParserImpl r1;
        org.w3c.dom.ls.LSInput r2;

        r1 := @this: org.apache.xerces.parsers.DOMParserImpl;

        r2 := @parameter0: org.w3c.dom.ls.LSInput;

        r3 := @parameter1: org.w3c.dom.Node;

        s0 := @parameter2: short;

        $r0 = new org.w3c.dom.DOMException;

        specialinvoke $r0.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(9, "Not supported");

        throw $r0;
    }

    org.apache.xerces.xni.parser.XMLInputSource dom2xmlInputSource(org.w3c.dom.ls.LSInput)
    {
        org.w3c.dom.ls.LSException $r8;
        org.apache.xerces.dom.DOMErrorImpl $r9;
        org.apache.xerces.parsers.DOMParserImpl r6;
        java.io.Reader $r1, $r35;
        org.apache.xerces.xni.parser.XMLInputSource $r13, $r19, $r25, $r31, r36;
        int $i0, $i1, $i2;
        java.lang.String $r3, $r4, $r5, $r12, $r14, $r15, $r16, $r17, $r18, $r20, $r21, $r22, $r24, $r26, $r27, $r28, $r30, $r32, $r33, $r34;
        org.apache.xerces.util.DOMErrorHandlerWrapper $r7, $r10;
        java.io.StringReader $r23;
        org.w3c.dom.DOMErrorHandler $r11;
        org.w3c.dom.ls.LSInput r0;
        java.io.InputStream $r2, $r29;

        r6 := @this: org.apache.xerces.parsers.DOMParserImpl;

        r0 := @parameter0: org.w3c.dom.ls.LSInput;

        $r1 = interfaceinvoke r0.<org.w3c.dom.ls.LSInput: java.io.Reader getCharacterStream()>();

        if $r1 == null goto label1;

        $r31 = new org.apache.xerces.xni.parser.XMLInputSource;

        $r32 = interfaceinvoke r0.<org.w3c.dom.ls.LSInput: java.lang.String getPublicId()>();

        $r33 = interfaceinvoke r0.<org.w3c.dom.ls.LSInput: java.lang.String getSystemId()>();

        $r34 = interfaceinvoke r0.<org.w3c.dom.ls.LSInput: java.lang.String getBaseURI()>();

        $r35 = interfaceinvoke r0.<org.w3c.dom.ls.LSInput: java.io.Reader getCharacterStream()>();

        specialinvoke $r31.<org.apache.xerces.xni.parser.XMLInputSource: void <init>(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.lang.String)>($r32, $r33, $r34, $r35, "UTF-16");

        r36 = $r31;

        goto label8;

     label1:
        $r2 = interfaceinvoke r0.<org.w3c.dom.ls.LSInput: java.io.InputStream getByteStream()>();

        if $r2 == null goto label2;

        $r25 = new org.apache.xerces.xni.parser.XMLInputSource;

        $r26 = interfaceinvoke r0.<org.w3c.dom.ls.LSInput: java.lang.String getPublicId()>();

        $r27 = interfaceinvoke r0.<org.w3c.dom.ls.LSInput: java.lang.String getSystemId()>();

        $r28 = interfaceinvoke r0.<org.w3c.dom.ls.LSInput: java.lang.String getBaseURI()>();

        $r29 = interfaceinvoke r0.<org.w3c.dom.ls.LSInput: java.io.InputStream getByteStream()>();

        $r30 = interfaceinvoke r0.<org.w3c.dom.ls.LSInput: java.lang.String getEncoding()>();

        specialinvoke $r25.<org.apache.xerces.xni.parser.XMLInputSource: void <init>(java.lang.String,java.lang.String,java.lang.String,java.io.InputStream,java.lang.String)>($r26, $r27, $r28, $r29, $r30);

        r36 = $r25;

        goto label8;

     label2:
        $r3 = interfaceinvoke r0.<org.w3c.dom.ls.LSInput: java.lang.String getStringData()>();

        if $r3 == null goto label3;

        $r18 = interfaceinvoke r0.<org.w3c.dom.ls.LSInput: java.lang.String getStringData()>();

        $i2 = virtualinvoke $r18.<java.lang.String: int length()>();

        if $i2 <= 0 goto label3;

        $r19 = new org.apache.xerces.xni.parser.XMLInputSource;

        $r20 = interfaceinvoke r0.<org.w3c.dom.ls.LSInput: java.lang.String getPublicId()>();

        $r21 = interfaceinvoke r0.<org.w3c.dom.ls.LSInput: java.lang.String getSystemId()>();

        $r22 = interfaceinvoke r0.<org.w3c.dom.ls.LSInput: java.lang.String getBaseURI()>();

        $r23 = new java.io.StringReader;

        $r24 = interfaceinvoke r0.<org.w3c.dom.ls.LSInput: java.lang.String getStringData()>();

        specialinvoke $r23.<java.io.StringReader: void <init>(java.lang.String)>($r24);

        specialinvoke $r19.<org.apache.xerces.xni.parser.XMLInputSource: void <init>(java.lang.String,java.lang.String,java.lang.String,java.io.Reader,java.lang.String)>($r20, $r21, $r22, $r23, "UTF-16");

        r36 = $r19;

        goto label8;

     label3:
        $r4 = interfaceinvoke r0.<org.w3c.dom.ls.LSInput: java.lang.String getSystemId()>();

        if $r4 == null goto label4;

        $r17 = interfaceinvoke r0.<org.w3c.dom.ls.LSInput: java.lang.String getSystemId()>();

        $i1 = virtualinvoke $r17.<java.lang.String: int length()>();

        if $i1 > 0 goto label5;

     label4:
        $r5 = interfaceinvoke r0.<org.w3c.dom.ls.LSInput: java.lang.String getPublicId()>();

        if $r5 == null goto label6;

        $r12 = interfaceinvoke r0.<org.w3c.dom.ls.LSInput: java.lang.String getPublicId()>();

        $i0 = virtualinvoke $r12.<java.lang.String: int length()>();

        if $i0 <= 0 goto label6;

     label5:
        $r13 = new org.apache.xerces.xni.parser.XMLInputSource;

        $r14 = interfaceinvoke r0.<org.w3c.dom.ls.LSInput: java.lang.String getPublicId()>();

        $r15 = interfaceinvoke r0.<org.w3c.dom.ls.LSInput: java.lang.String getSystemId()>();

        $r16 = interfaceinvoke r0.<org.w3c.dom.ls.LSInput: java.lang.String getBaseURI()>();

        specialinvoke $r13.<org.apache.xerces.xni.parser.XMLInputSource: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r14, $r15, $r16);

        r36 = $r13;

        goto label8;

     label6:
        $r7 = r6.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.util.DOMErrorHandlerWrapper fErrorHandler>;

        if $r7 == null goto label7;

        $r9 = new org.apache.xerces.dom.DOMErrorImpl;

        specialinvoke $r9.<org.apache.xerces.dom.DOMErrorImpl: void <init>()>();

        $r9.<org.apache.xerces.dom.DOMErrorImpl: java.lang.String fType> = "no-input-specified";

        $r9.<org.apache.xerces.dom.DOMErrorImpl: java.lang.String fMessage> = "no-input-specified";

        $r9.<org.apache.xerces.dom.DOMErrorImpl: short fSeverity> = 3;

        $r10 = r6.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.util.DOMErrorHandlerWrapper fErrorHandler>;

        $r11 = virtualinvoke $r10.<org.apache.xerces.util.DOMErrorHandlerWrapper: org.w3c.dom.DOMErrorHandler getErrorHandler()>();

        interfaceinvoke $r11.<org.w3c.dom.DOMErrorHandler: boolean handleError(org.w3c.dom.DOMError)>($r9);

     label7:
        $r8 = new org.w3c.dom.ls.LSException;

        specialinvoke $r8.<org.w3c.dom.ls.LSException: void <init>(short,java.lang.String)>(81, "no-input-specified");

        throw $r8;

     label8:
        return r36;
    }

    public boolean getAsync()
    {
        org.apache.xerces.parsers.DOMParserImpl r0;

        r0 := @this: org.apache.xerces.parsers.DOMParserImpl;

        return 0;
    }

    public boolean getBusy()
    {
        org.apache.xerces.parsers.DOMParserImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xerces.parsers.DOMParserImpl;

        $z0 = r0.<org.apache.xerces.parsers.DOMParserImpl: boolean fBusy>;

        return $z0;
    }

    public void abort()
    {
        org.apache.xerces.parsers.DOMParserImpl r0;
        org.apache.xerces.xni.parser.XMLParserConfiguration $r4, $r6, $r8;
        org.apache.xerces.parsers.AbstractDOMParser$Abort $r12;
        java.lang.Thread $r1, $r9, $r10, $r11;
        org.apache.xerces.parsers.DOMParserImpl$AbortHandler $r2, $r3, $r5, $r7, $r13;
        boolean $z0;

        r0 := @this: org.apache.xerces.parsers.DOMParserImpl;

        $z0 = r0.<org.apache.xerces.parsers.DOMParserImpl: boolean fBusy>;

        if $z0 == 0 goto label3;

        r0.<org.apache.xerces.parsers.DOMParserImpl: boolean fBusy> = 0;

        $r1 = r0.<org.apache.xerces.parsers.DOMParserImpl: java.lang.Thread currentThread>;

        if $r1 == null goto label3;

        r0.<org.apache.xerces.parsers.DOMParserImpl: boolean abortNow> = 1;

        $r2 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.parsers.DOMParserImpl$AbortHandler abortHandler>;

        if $r2 != null goto label1;

        $r13 = new org.apache.xerces.parsers.DOMParserImpl$AbortHandler;

        specialinvoke $r13.<org.apache.xerces.parsers.DOMParserImpl$AbortHandler: void <init>(org.apache.xerces.parsers.DOMParserImpl$1)>(null);

        r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.parsers.DOMParserImpl$AbortHandler abortHandler> = $r13;

     label1:
        $r4 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r3 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.parsers.DOMParserImpl$AbortHandler abortHandler>;

        interfaceinvoke $r4.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setDocumentHandler(org.apache.xerces.xni.XMLDocumentHandler)>($r3);

        $r6 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r5 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.parsers.DOMParserImpl$AbortHandler abortHandler>;

        interfaceinvoke $r6.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setDTDHandler(org.apache.xerces.xni.XMLDTDHandler)>($r5);

        $r8 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.xni.parser.XMLParserConfiguration fConfiguration>;

        $r7 = r0.<org.apache.xerces.parsers.DOMParserImpl: org.apache.xerces.parsers.DOMParserImpl$AbortHandler abortHandler>;

        interfaceinvoke $r8.<org.apache.xerces.xni.parser.XMLParserConfiguration: void setDTDContentModelHandler(org.apache.xerces.xni.XMLDTDContentModelHandler)>($r7);

        $r9 = r0.<org.apache.xerces.parsers.DOMParserImpl: java.lang.Thread currentThread>;

        $r10 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        if $r9 != $r10 goto label2;

        $r12 = <org.apache.xerces.parsers.AbstractDOMParser$Abort: org.apache.xerces.parsers.AbstractDOMParser$Abort INSTANCE>;

        throw $r12;

     label2:
        $r11 = r0.<org.apache.xerces.parsers.DOMParserImpl: java.lang.Thread currentThread>;

        virtualinvoke $r11.<java.lang.Thread: void interrupt()>();

     label3:
        return;
    }

    public void startElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations)
    {
        org.apache.xerces.parsers.DOMParserImpl r0;
        org.apache.xerces.xni.XMLAttributes r2;
        org.apache.xerces.xni.Augmentations r3;
        int $i0, i1, $i3;
        java.lang.String $r4, $r5, $r6, $r7;
        org.apache.xerces.xni.QName r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.xerces.parsers.DOMParserImpl;

        r1 := @parameter0: org.apache.xerces.xni.QName;

        r2 := @parameter1: org.apache.xerces.xni.XMLAttributes;

        r3 := @parameter2: org.apache.xerces.xni.Augmentations;

        $z0 = r0.<org.apache.xerces.parsers.DOMParserImpl: boolean fNamespaceDeclarations>;

        if $z0 != 0 goto label5;

        $z1 = r0.<org.apache.xerces.parsers.DOMParserImpl: boolean fNamespaceAware>;

        if $z1 == 0 goto label5;

        $i0 = interfaceinvoke r2.<org.apache.xerces.xni.XMLAttributes: int getLength()>();

        i1 = $i0 - 1;

        goto label4;

     label1:
        $r4 = <org.apache.xerces.util.XMLSymbols: java.lang.String PREFIX_XMLNS>;

        $r5 = interfaceinvoke r2.<org.apache.xerces.xni.XMLAttributes: java.lang.String getPrefix(int)>(i1);

        if $r4 == $r5 goto label2;

        $r6 = <org.apache.xerces.util.XMLSymbols: java.lang.String PREFIX_XMLNS>;

        $r7 = interfaceinvoke r2.<org.apache.xerces.xni.XMLAttributes: java.lang.String getQName(int)>(i1);

        if $r6 != $r7 goto label3;

     label2:
        interfaceinvoke r2.<org.apache.xerces.xni.XMLAttributes: void removeAttributeAt(int)>(i1);

     label3:
        $i3 = (int) -1;

        i1 = i1 + $i3;

     label4:
        if i1 >= 0 goto label1;

     label5:
        specialinvoke r0.<org.apache.xerces.parsers.AbstractDOMParser: void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)>(r1, r2, r3);

        return;
    }

    private static org.w3c.dom.DOMException newInvalidStateError()
    {
        java.lang.String $r0;
        org.w3c.dom.DOMException $r1;

        $r0 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "INVALID_STATE_ERR", null);

        $r1 = new org.w3c.dom.DOMException;

        specialinvoke $r1.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(11, $r0);

        throw $r1;
    }

    private static org.w3c.dom.DOMException newFeatureNotSupportedError(java.lang.String)
    {
        java.lang.Object[] $r0;
        org.w3c.dom.DOMException $r3;
        java.lang.String r1, $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = newarray (java.lang.Object)[1];

        $r0[0] = r1;

        $r2 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "FEATURE_NOT_SUPPORTED", $r0);

        $r3 = new org.w3c.dom.DOMException;

        specialinvoke $r3.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(9, $r2);

        return $r3;
    }

    private static org.w3c.dom.DOMException newFeatureNotFoundError(java.lang.String)
    {
        java.lang.Object[] $r0;
        org.w3c.dom.DOMException $r3;
        java.lang.String r1, $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = newarray (java.lang.Object)[1];

        $r0[0] = r1;

        $r2 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "FEATURE_NOT_FOUND", $r0);

        $r3 = new org.w3c.dom.DOMException;

        specialinvoke $r3.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(8, $r2);

        return $r3;
    }

    private static org.w3c.dom.DOMException newTypeMismatchError(java.lang.String)
    {
        java.lang.Object[] $r0;
        org.w3c.dom.DOMException $r3;
        java.lang.String r1, $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = newarray (java.lang.Object)[1];

        $r0[0] = r1;

        $r2 = staticinvoke <org.apache.xerces.dom.DOMMessageFormatter: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.Object[])>("http://www.w3.org/dom/DOMTR", "TYPE_MISMATCH_ERR", $r0);

        $r3 = new org.w3c.dom.DOMException;

        specialinvoke $r3.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(17, $r2);

        return $r3;
    }

    public static void <clinit>()
    {
        <org.apache.xerces.parsers.DOMParserImpl: boolean DEBUG> = 0;

        <org.apache.xerces.parsers.DOMParserImpl: java.lang.String PSVI_AUGMENT> = "http://apache.org/xml/features/validation/schema/augment-psvi";

        <org.apache.xerces.parsers.DOMParserImpl: java.lang.String SYMBOL_TABLE> = "http://apache.org/xml/properties/internal/symbol-table";

        <org.apache.xerces.parsers.DOMParserImpl: java.lang.String TOLERATE_DUPLICATES> = "http://apache.org/xml/features/internal/tolerate-duplicates";

        <org.apache.xerces.parsers.DOMParserImpl: java.lang.String NAMESPACE_GROWTH> = "http://apache.org/xml/features/namespace-growth";

        <org.apache.xerces.parsers.DOMParserImpl: java.lang.String HONOUR_ALL_SCHEMALOCATIONS> = "http://apache.org/xml/features/honour-all-schemaLocations";

        <org.apache.xerces.parsers.DOMParserImpl: java.lang.String DISALLOW_DOCTYPE_DECL_FEATURE> = "http://apache.org/xml/features/disallow-doctype-decl";

        <org.apache.xerces.parsers.DOMParserImpl: java.lang.String NORMALIZE_DATA> = "http://apache.org/xml/features/validation/schema/normalized-value";

        <org.apache.xerces.parsers.DOMParserImpl: java.lang.String DYNAMIC_VALIDATION> = "http://apache.org/xml/features/validation/dynamic";

        <org.apache.xerces.parsers.DOMParserImpl: java.lang.String XMLSCHEMA_FULL_CHECKING> = "http://apache.org/xml/features/validation/schema-full-checking";

        <org.apache.xerces.parsers.DOMParserImpl: java.lang.String XMLSCHEMA> = "http://apache.org/xml/features/validation/schema";

        <org.apache.xerces.parsers.DOMParserImpl: java.lang.String VALIDATION_FEATURE> = "http://xml.org/sax/features/validation";

        <org.apache.xerces.parsers.DOMParserImpl: java.lang.String NAMESPACES> = "http://xml.org/sax/features/namespaces";

        return;
    }
}
