public final class org.joda.time.Instant extends org.joda.time.base.AbstractInstant implements org.joda.time.ReadableInstant, java.io.Serializable
{
    private static final long serialVersionUID;
    private final long iMillis;

    public void <init>()
    {
        long $l0;
        org.joda.time.Instant r0;

        r0 := @this: org.joda.time.Instant;

        specialinvoke r0.<org.joda.time.base.AbstractInstant: void <init>()>();

        $l0 = staticinvoke <org.joda.time.DateTimeUtils: long currentTimeMillis()>();

        r0.<org.joda.time.Instant: long iMillis> = $l0;

        return;
    }

    public void <init>(long)
    {
        long l0;
        org.joda.time.Instant r0;

        r0 := @this: org.joda.time.Instant;

        l0 := @parameter0: long;

        specialinvoke r0.<org.joda.time.base.AbstractInstant: void <init>()>();

        r0.<org.joda.time.Instant: long iMillis> = l0;

        return;
    }

    public void <init>(java.lang.Object)
    {
        org.joda.time.Instant r0;
        org.joda.time.convert.ConverterManager $r1;
        org.joda.time.chrono.ISOChronology $r4;
        java.lang.Object r2;
        long $l0;
        org.joda.time.convert.InstantConverter $r3;

        r0 := @this: org.joda.time.Instant;

        r2 := @parameter0: java.lang.Object;

        specialinvoke r0.<org.joda.time.base.AbstractInstant: void <init>()>();

        $r1 = staticinvoke <org.joda.time.convert.ConverterManager: org.joda.time.convert.ConverterManager getInstance()>();

        $r3 = virtualinvoke $r1.<org.joda.time.convert.ConverterManager: org.joda.time.convert.InstantConverter getInstantConverter(java.lang.Object)>(r2);

        $r4 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>();

        $l0 = interfaceinvoke $r3.<org.joda.time.convert.InstantConverter: long getInstantMillis(java.lang.Object,org.joda.time.Chronology)>(r2, $r4);

        r0.<org.joda.time.Instant: long iMillis> = $l0;

        return;
    }

    public org.joda.time.Instant toInstant()
    {
        org.joda.time.Instant r0;

        r0 := @this: org.joda.time.Instant;

        return r0;
    }

    public org.joda.time.Instant withMillis(long)
    {
        byte $b2;
        org.joda.time.Instant r0, $r1;
        long l0, $l1;

        r0 := @this: org.joda.time.Instant;

        l0 := @parameter0: long;

        $l1 = r0.<org.joda.time.Instant: long iMillis>;

        $b2 = l0 cmp $l1;

        if $b2 != 0 goto label1;

        $r1 = r0;

        goto label2;

     label1:
        $r1 = new org.joda.time.Instant;

        specialinvoke $r1.<org.joda.time.Instant: void <init>(long)>(l0);

     label2:
        return $r1;
    }

    public org.joda.time.Instant withDurationAdded(long, int)
    {
        org.joda.time.Chronology $r1;
        long l0, $l3, $l4;
        byte $b1;
        org.joda.time.Instant r0, $r2;
        int i2;

        r0 := @this: org.joda.time.Instant;

        l0 := @parameter0: long;

        i2 := @parameter1: int;

        $b1 = l0 cmp 0L;

        if $b1 == 0 goto label1;

        if i2 != 0 goto label2;

     label1:
        return r0;

     label2:
        $r1 = virtualinvoke r0.<org.joda.time.Instant: org.joda.time.Chronology getChronology()>();

        $l3 = virtualinvoke r0.<org.joda.time.Instant: long getMillis()>();

        $l4 = virtualinvoke $r1.<org.joda.time.Chronology: long add(long,long,int)>($l3, l0, i2);

        $r2 = virtualinvoke r0.<org.joda.time.Instant: org.joda.time.Instant withMillis(long)>($l4);

        return $r2;
    }

    public org.joda.time.Instant withDurationAdded(org.joda.time.ReadableDuration, int)
    {
        org.joda.time.ReadableDuration r0;
        org.joda.time.Instant r1, $r2;
        int i0;
        long $l1;

        r1 := @this: org.joda.time.Instant;

        r0 := @parameter0: org.joda.time.ReadableDuration;

        i0 := @parameter1: int;

        if r0 == null goto label1;

        if i0 != 0 goto label2;

     label1:
        return r1;

     label2:
        $l1 = interfaceinvoke r0.<org.joda.time.ReadableDuration: long getMillis()>();

        $r2 = virtualinvoke r1.<org.joda.time.Instant: org.joda.time.Instant withDurationAdded(long,int)>($l1, i0);

        return $r2;
    }

    public org.joda.time.Instant plus(long)
    {
        long l0;
        org.joda.time.Instant r0, $r1;

        r0 := @this: org.joda.time.Instant;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<org.joda.time.Instant: org.joda.time.Instant withDurationAdded(long,int)>(l0, 1);

        return $r1;
    }

    public org.joda.time.Instant plus(org.joda.time.ReadableDuration)
    {
        org.joda.time.ReadableDuration r1;
        org.joda.time.Instant r0, $r2;

        r0 := @this: org.joda.time.Instant;

        r1 := @parameter0: org.joda.time.ReadableDuration;

        $r2 = virtualinvoke r0.<org.joda.time.Instant: org.joda.time.Instant withDurationAdded(org.joda.time.ReadableDuration,int)>(r1, 1);

        return $r2;
    }

    public org.joda.time.Instant minus(long)
    {
        org.joda.time.Instant r0, $r1;
        int $i2;
        long l0;

        r0 := @this: org.joda.time.Instant;

        l0 := @parameter0: long;

        $i2 = (int) -1;

        $r1 = virtualinvoke r0.<org.joda.time.Instant: org.joda.time.Instant withDurationAdded(long,int)>(l0, $i2);

        return $r1;
    }

    public org.joda.time.Instant minus(org.joda.time.ReadableDuration)
    {
        org.joda.time.ReadableDuration r1;
        org.joda.time.Instant r0, $r2;
        int $i1;

        r0 := @this: org.joda.time.Instant;

        r1 := @parameter0: org.joda.time.ReadableDuration;

        $i1 = (int) -1;

        $r2 = virtualinvoke r0.<org.joda.time.Instant: org.joda.time.Instant withDurationAdded(org.joda.time.ReadableDuration,int)>(r1, $i1);

        return $r2;
    }

    public long getMillis()
    {
        long $l0;
        org.joda.time.Instant r0;

        r0 := @this: org.joda.time.Instant;

        $l0 = r0.<org.joda.time.Instant: long iMillis>;

        return $l0;
    }

    public org.joda.time.Chronology getChronology()
    {
        org.joda.time.chrono.ISOChronology $r0;
        org.joda.time.Instant r1;

        r1 := @this: org.joda.time.Instant;

        $r0 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>();

        return $r0;
    }

    public org.joda.time.DateTime toDateTime()
    {
        org.joda.time.Instant r1;
        org.joda.time.DateTime $r0;
        org.joda.time.chrono.ISOChronology $r2;
        long $l0;

        r1 := @this: org.joda.time.Instant;

        $r0 = new org.joda.time.DateTime;

        $l0 = virtualinvoke r1.<org.joda.time.Instant: long getMillis()>();

        $r2 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstance()>();

        specialinvoke $r0.<org.joda.time.DateTime: void <init>(long,org.joda.time.Chronology)>($l0, $r2);

        return $r0;
    }

    public org.joda.time.DateTime toDateTimeISO()
    {
        org.joda.time.DateTime $r1;
        org.joda.time.Instant r0;

        r0 := @this: org.joda.time.Instant;

        $r1 = virtualinvoke r0.<org.joda.time.Instant: org.joda.time.DateTime toDateTime()>();

        return $r1;
    }

    public org.joda.time.MutableDateTime toMutableDateTime()
    {
        org.joda.time.Instant r1;
        org.joda.time.chrono.ISOChronology $r2;
        long $l0;
        org.joda.time.MutableDateTime $r0;

        r1 := @this: org.joda.time.Instant;

        $r0 = new org.joda.time.MutableDateTime;

        $l0 = virtualinvoke r1.<org.joda.time.Instant: long getMillis()>();

        $r2 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstance()>();

        specialinvoke $r0.<org.joda.time.MutableDateTime: void <init>(long,org.joda.time.Chronology)>($l0, $r2);

        return $r0;
    }

    public org.joda.time.MutableDateTime toMutableDateTimeISO()
    {
        org.joda.time.MutableDateTime $r1;
        org.joda.time.Instant r0;

        r0 := @this: org.joda.time.Instant;

        $r1 = virtualinvoke r0.<org.joda.time.Instant: org.joda.time.MutableDateTime toMutableDateTime()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <org.joda.time.Instant: long serialVersionUID> = 3299096530934209741L;

        return;
    }
}
