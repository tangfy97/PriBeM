public class org.apache.commons.compress.archivers.sevenz.SevenZFile extends java.lang.Object implements java.io.Closeable
{
    static final int SIGNATURE_HEADER_SIZE;
    private java.io.RandomAccessFile file;
    private final org.apache.commons.compress.archivers.sevenz.Archive archive;
    private int currentEntryIndex;
    private int currentFolderIndex;
    private java.io.InputStream currentFolderInputStream;
    private java.io.InputStream currentEntryInputStream;
    private byte[] password;
    static final byte[] sevenZSignature;

    public void <init>(java.io.File, byte[]) throws java.io.IOException
    {
        java.lang.Throwable $r8;
        byte[] r3, $r6, $r7;
        java.io.RandomAccessFile $r5, $r9, $r10;
        java.io.File r2;
        org.apache.commons.compress.archivers.sevenz.SevenZFile r0;
        org.apache.commons.compress.archivers.sevenz.Archive $r4;
        int $i0, $i1, $i3, $i5;

        r0 := @this: org.apache.commons.compress.archivers.sevenz.SevenZFile;

        r2 := @parameter0: java.io.File;

        r3 := @parameter1: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i3 = (int) -1;

        r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: int currentEntryIndex> = $i3;

        $i5 = (int) -1;

        r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: int currentFolderIndex> = $i5;

        r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.InputStream currentFolderInputStream> = null;

        r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.InputStream currentEntryInputStream> = null;

        $r10 = new java.io.RandomAccessFile;

        specialinvoke $r10.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>(r2, "r");

        r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.RandomAccessFile file> = $r10;

     label1:
        $r4 = specialinvoke r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: org.apache.commons.compress.archivers.sevenz.Archive readHeaders(byte[])>(r3);

        r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: org.apache.commons.compress.archivers.sevenz.Archive archive> = $r4;

        if r3 == null goto label2;

        $i0 = lengthof r3;

        $r6 = newarray (byte)[$i0];

        r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: byte[] password> = $r6;

        $r7 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: byte[] password>;

        $i1 = lengthof r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, $r7, 0, $i1);

        goto label3;

     label2:
        r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: byte[] password> = null;

     label3:
        if 1 != 0 goto label7;

        $r5 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.RandomAccessFile file>;

        virtualinvoke $r5.<java.io.RandomAccessFile: void close()>();

        goto label7;

     label4:
        $r8 := @caughtexception;

     label5:
        if 0 != 0 goto label6;

        $r9 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.RandomAccessFile file>;

        virtualinvoke $r9.<java.io.RandomAccessFile: void close()>();

     label6:
        throw $r8;

     label7:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void <init>(java.io.File) throws java.io.IOException
    {
        org.apache.commons.compress.archivers.sevenz.SevenZFile r0;
        java.io.File r1;

        r0 := @this: org.apache.commons.compress.archivers.sevenz.SevenZFile;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: void <init>(java.io.File,byte[])>(r1, null);

        return;
    }

    public void close() throws java.io.IOException
    {
        java.lang.Throwable $r5;
        java.io.RandomAccessFile $r1, $r2;
        byte[] $r3, $r4, $r6, $r7;
        org.apache.commons.compress.archivers.sevenz.SevenZFile r0;

        r0 := @this: org.apache.commons.compress.archivers.sevenz.SevenZFile;

        $r1 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.RandomAccessFile file>;

        if $r1 == null goto label7;

     label1:
        $r2 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.RandomAccessFile file>;

        virtualinvoke $r2.<java.io.RandomAccessFile: void close()>();

     label2:
        r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.RandomAccessFile file> = null;

        $r3 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: byte[] password>;

        if $r3 == null goto label3;

        $r4 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: byte[] password>;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>($r4, 0);

     label3:
        r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: byte[] password> = null;

        goto label7;

     label4:
        $r5 := @caughtexception;

     label5:
        r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.RandomAccessFile file> = null;

        $r6 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: byte[] password>;

        if $r6 == null goto label6;

        $r7 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: byte[] password>;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>($r7, 0);

     label6:
        r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: byte[] password> = null;

        throw $r5;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry getNextEntry() throws java.io.IOException
    {
        org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry[] $r2, $r4;
        org.apache.commons.compress.archivers.sevenz.SevenZFile r0;
        org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry r5;
        org.apache.commons.compress.archivers.sevenz.Archive $r1, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.apache.commons.compress.archivers.sevenz.SevenZFile;

        $i2 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: int currentEntryIndex>;

        $r1 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: org.apache.commons.compress.archivers.sevenz.Archive archive>;

        $r2 = $r1.<org.apache.commons.compress.archivers.sevenz.Archive: org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry[] files>;

        $i0 = lengthof $r2;

        $i1 = $i0 - 1;

        if $i2 < $i1 goto label1;

        return null;

     label1:
        $i3 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: int currentEntryIndex>;

        $i4 = $i3 + 1;

        r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: int currentEntryIndex> = $i4;

        $r3 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: org.apache.commons.compress.archivers.sevenz.Archive archive>;

        $r4 = $r3.<org.apache.commons.compress.archivers.sevenz.Archive: org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry[] files>;

        $i5 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: int currentEntryIndex>;

        r5 = $r4[$i5];

        specialinvoke r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: void buildDecodingStream()>();

        return r5;
    }

    private org.apache.commons.compress.archivers.sevenz.Archive readHeaders(byte[]) throws java.io.IOException
    {
        byte[] r0, $r3, r9, r16;
        java.io.RandomAccessFile $r2, $r4, $r5, $r6, $r8, $r10;
        byte $b0, $b1, $b10, $b15;
        java.io.ByteArrayInputStream $r12;
        org.apache.commons.compress.archivers.sevenz.Archive $r14, $r18, r32;
        java.lang.Byte $r27, $r28;
        boolean $z0;
        org.apache.commons.compress.archivers.sevenz.StartHeader $r7;
        java.lang.StringBuilder $r21, $r22, $r23;
        java.io.DataInputStream $r13, $r17, r31;
        java.lang.Object[] $r26;
        long $l4, l5, $l6, $l8, $l9, $l11, $l12, $l13, $l14, $l17;
        org.apache.commons.compress.archivers.sevenz.SevenZFile r1;
        int $i2, $i3, i7, $i16, i18;
        java.lang.String $r24, $r29;
        java.io.IOException $r15, $r19, $r20, $r25, $r30;
        java.util.zip.CRC32 $r11;

        r1 := @this: org.apache.commons.compress.archivers.sevenz.SevenZFile;

        r16 := @parameter0: byte[];

        r0 = newarray (byte)[6];

        $r2 = r1.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.RandomAccessFile file>;

        virtualinvoke $r2.<java.io.RandomAccessFile: void readFully(byte[])>(r0);

        $r3 = <org.apache.commons.compress.archivers.sevenz.SevenZFile: byte[] sevenZSignature>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r0, $r3);

        if $z0 != 0 goto label1;

        $r30 = new java.io.IOException;

        specialinvoke $r30.<java.io.IOException: void <init>(java.lang.String)>("Bad 7z signature");

        throw $r30;

     label1:
        $r4 = r1.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.RandomAccessFile file>;

        $b0 = virtualinvoke $r4.<java.io.RandomAccessFile: byte readByte()>();

        $r5 = r1.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.RandomAccessFile file>;

        $b1 = virtualinvoke $r5.<java.io.RandomAccessFile: byte readByte()>();

        if $b0 == 0 goto label2;

        $r25 = new java.io.IOException;

        $r26 = newarray (java.lang.Object)[2];

        $r27 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

        $r26[0] = $r27;

        $r28 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r26[1] = $r28;

        $r29 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unsupported 7z version (%d,%d)", $r26);

        specialinvoke $r25.<java.io.IOException: void <init>(java.lang.String)>($r29);

        throw $r25;

     label2:
        $r6 = r1.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.RandomAccessFile file>;

        $i2 = virtualinvoke $r6.<java.io.RandomAccessFile: int readInt()>();

        $i3 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i2);

        $l4 = (long) $i3;

        l5 = 4294967295L & $l4;

        $r7 = specialinvoke r1.<org.apache.commons.compress.archivers.sevenz.SevenZFile: org.apache.commons.compress.archivers.sevenz.StartHeader readStartHeader(long)>(l5);

        $l6 = $r7.<org.apache.commons.compress.archivers.sevenz.StartHeader: long nextHeaderSize>;

        i7 = (int) $l6;

        $l9 = (long) i7;

        $l8 = $r7.<org.apache.commons.compress.archivers.sevenz.StartHeader: long nextHeaderSize>;

        $b10 = $l9 cmp $l8;

        if $b10 == 0 goto label3;

        $r20 = new java.io.IOException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot handle nextHeaderSize ");

        $l17 = $r7.<org.apache.commons.compress.archivers.sevenz.StartHeader: long nextHeaderSize>;

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l17);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.io.IOException: void <init>(java.lang.String)>($r24);

        throw $r20;

     label3:
        $r8 = r1.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.RandomAccessFile file>;

        $l11 = $r7.<org.apache.commons.compress.archivers.sevenz.StartHeader: long nextHeaderOffset>;

        $l12 = 32L + $l11;

        virtualinvoke $r8.<java.io.RandomAccessFile: void seek(long)>($l12);

        r9 = newarray (byte)[i7];

        $r10 = r1.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.RandomAccessFile file>;

        virtualinvoke $r10.<java.io.RandomAccessFile: void readFully(byte[])>(r9);

        $r11 = new java.util.zip.CRC32;

        specialinvoke $r11.<java.util.zip.CRC32: void <init>()>();

        virtualinvoke $r11.<java.util.zip.CRC32: void update(byte[])>(r9);

        $l13 = $r7.<org.apache.commons.compress.archivers.sevenz.StartHeader: long nextHeaderCrc>;

        $l14 = virtualinvoke $r11.<java.util.zip.CRC32: long getValue()>();

        $b15 = $l13 cmp $l14;

        if $b15 == 0 goto label4;

        $r19 = new java.io.IOException;

        specialinvoke $r19.<java.io.IOException: void <init>(java.lang.String)>("NextHeader CRC mismatch");

        throw $r19;

     label4:
        $r12 = new java.io.ByteArrayInputStream;

        specialinvoke $r12.<java.io.ByteArrayInputStream: void <init>(byte[])>(r9);

        $r13 = new java.io.DataInputStream;

        specialinvoke $r13.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r12);

        r31 = $r13;

        $r14 = new org.apache.commons.compress.archivers.sevenz.Archive;

        specialinvoke $r14.<org.apache.commons.compress.archivers.sevenz.Archive: void <init>()>();

        r32 = $r14;

        $i16 = virtualinvoke $r13.<java.io.DataInputStream: int readUnsignedByte()>();

        i18 = $i16;

        if $i16 != 23 goto label5;

        $r17 = specialinvoke r1.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.DataInputStream readEncodedHeader(java.io.DataInputStream,org.apache.commons.compress.archivers.sevenz.Archive,byte[])>($r13, $r14, r16);

        r31 = $r17;

        $r18 = new org.apache.commons.compress.archivers.sevenz.Archive;

        specialinvoke $r18.<org.apache.commons.compress.archivers.sevenz.Archive: void <init>()>();

        r32 = $r18;

        i18 = virtualinvoke $r17.<java.io.DataInputStream: int readUnsignedByte()>();

     label5:
        if i18 != 1 goto label6;

        specialinvoke r1.<org.apache.commons.compress.archivers.sevenz.SevenZFile: void readHeader(java.io.DataInput,org.apache.commons.compress.archivers.sevenz.Archive)>(r31, r32);

        virtualinvoke r31.<java.io.DataInputStream: void close()>();

        goto label7;

     label6:
        $r15 = new java.io.IOException;

        specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>("Broken or unsupported archive: no Header");

        throw $r15;

     label7:
        return r32;
    }

    private org.apache.commons.compress.archivers.sevenz.StartHeader readStartHeader(long) throws java.io.IOException
    {
        java.lang.Throwable $r6;
        java.io.DataInputStream $r1, r7;
        java.io.RandomAccessFile $r5;
        long l0, $l1, $l2, $l3, $l4, $l7, $l8;
        org.apache.commons.compress.archivers.sevenz.SevenZFile r4;
        org.apache.commons.compress.utils.CRC32VerifyingInputStream $r2;
        int $i5, $i6;
        org.apache.commons.compress.archivers.sevenz.StartHeader $r0;
        org.apache.commons.compress.archivers.sevenz.BoundedRandomAccessFileInputStream $r3;

        r4 := @this: org.apache.commons.compress.archivers.sevenz.SevenZFile;

        l0 := @parameter0: long;

        $r0 = new org.apache.commons.compress.archivers.sevenz.StartHeader;

        specialinvoke $r0.<org.apache.commons.compress.archivers.sevenz.StartHeader: void <init>()>();

        r7 = null;

     label1:
        $r1 = new java.io.DataInputStream;

        $r2 = new org.apache.commons.compress.utils.CRC32VerifyingInputStream;

        $r3 = new org.apache.commons.compress.archivers.sevenz.BoundedRandomAccessFileInputStream;

        $r5 = r4.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.RandomAccessFile file>;

        specialinvoke $r3.<org.apache.commons.compress.archivers.sevenz.BoundedRandomAccessFileInputStream: void <init>(java.io.RandomAccessFile,long)>($r5, 20L);

        specialinvoke $r2.<org.apache.commons.compress.utils.CRC32VerifyingInputStream: void <init>(java.io.InputStream,long,long)>($r3, 20L, l0);

        specialinvoke $r1.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r2);

        r7 = $r1;

        $l1 = virtualinvoke $r1.<java.io.DataInputStream: long readLong()>();

        $l2 = staticinvoke <java.lang.Long: long reverseBytes(long)>($l1);

        $r0.<org.apache.commons.compress.archivers.sevenz.StartHeader: long nextHeaderOffset> = $l2;

        $l3 = virtualinvoke $r1.<java.io.DataInputStream: long readLong()>();

        $l4 = staticinvoke <java.lang.Long: long reverseBytes(long)>($l3);

        $r0.<org.apache.commons.compress.archivers.sevenz.StartHeader: long nextHeaderSize> = $l4;

        $i5 = virtualinvoke $r1.<java.io.DataInputStream: int readInt()>();

        $i6 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i5);

        $l7 = (long) $i6;

        $l8 = 4294967295L & $l7;

        $r0.<org.apache.commons.compress.archivers.sevenz.StartHeader: long nextHeaderCrc> = $l8;

     label2:
        if $r1 == null goto label3;

        virtualinvoke $r1.<java.io.DataInputStream: void close()>();

     label3:
        return $r0;

     label4:
        $r6 := @caughtexception;

     label5:
        if r7 == null goto label6;

        virtualinvoke r7.<java.io.DataInputStream: void close()>();

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void readHeader(java.io.DataInput, org.apache.commons.compress.archivers.sevenz.Archive) throws java.io.IOException
    {
        org.apache.commons.compress.archivers.sevenz.SevenZFile r2;
        org.apache.commons.compress.archivers.sevenz.Archive r3;
        java.io.DataInput r0;
        int $i0, i1;
        java.io.IOException $r1, $r4;

        r2 := @this: org.apache.commons.compress.archivers.sevenz.SevenZFile;

        r0 := @parameter0: java.io.DataInput;

        r3 := @parameter1: org.apache.commons.compress.archivers.sevenz.Archive;

        $i0 = interfaceinvoke r0.<java.io.DataInput: int readUnsignedByte()>();

        i1 = $i0;

        if $i0 != 2 goto label1;

        specialinvoke r2.<org.apache.commons.compress.archivers.sevenz.SevenZFile: void readArchiveProperties(java.io.DataInput)>(r0);

        i1 = interfaceinvoke r0.<java.io.DataInput: int readUnsignedByte()>();

     label1:
        if i1 != 3 goto label2;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("Additional streams unsupported");

        throw $r4;

     label2:
        if i1 != 4 goto label3;

        specialinvoke r2.<org.apache.commons.compress.archivers.sevenz.SevenZFile: void readStreamsInfo(java.io.DataInput,org.apache.commons.compress.archivers.sevenz.Archive)>(r0, r3);

        i1 = interfaceinvoke r0.<java.io.DataInput: int readUnsignedByte()>();

     label3:
        if i1 != 5 goto label4;

        specialinvoke r2.<org.apache.commons.compress.archivers.sevenz.SevenZFile: void readFilesInfo(java.io.DataInput,org.apache.commons.compress.archivers.sevenz.Archive)>(r0, r3);

        i1 = interfaceinvoke r0.<java.io.DataInput: int readUnsignedByte()>();

     label4:
        if i1 == 0 goto label5;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("Badly terminated header");

        throw $r1;

     label5:
        return;
    }

    private void readArchiveProperties(java.io.DataInput) throws java.io.IOException
    {
        byte[] r1;
        org.apache.commons.compress.archivers.sevenz.SevenZFile r2;
        java.io.DataInput r0;
        int $i1, i2;
        long $l0;

        r2 := @this: org.apache.commons.compress.archivers.sevenz.SevenZFile;

        r0 := @parameter0: java.io.DataInput;

        i2 = interfaceinvoke r0.<java.io.DataInput: int readUnsignedByte()>();

     label1:
        if i2 == 0 goto label2;

        $l0 = staticinvoke <org.apache.commons.compress.archivers.sevenz.SevenZFile: long readUint64(java.io.DataInput)>(r0);

        $i1 = (int) $l0;

        r1 = newarray (byte)[$i1];

        interfaceinvoke r0.<java.io.DataInput: void readFully(byte[])>(r1);

        i2 = interfaceinvoke r0.<java.io.DataInput: int readUnsignedByte()>();

        goto label1;

     label2:
        return;
    }

    private java.io.DataInputStream readEncodedHeader(java.io.DataInputStream, org.apache.commons.compress.archivers.sevenz.Archive, byte[]) throws java.io.IOException
    {
        java.io.RandomAccessFile $r5, $r8;
        byte[] $r15, r18;
        org.apache.commons.compress.archivers.sevenz.Folder r4;
        java.io.ByteArrayInputStream $r13;
        byte $b9, $b11;
        org.apache.commons.compress.archivers.sevenz.Archive r2;
        org.apache.commons.compress.archivers.sevenz.Folder[] $r3;
        boolean $z0, $z1;
        org.apache.commons.compress.archivers.sevenz.Coder r21;
        org.apache.commons.compress.archivers.sevenz.BoundedRandomAccessFileInputStream $r6;
        java.lang.Throwable $r19;
        java.io.DataInputStream r1, $r11, $r12;
        long $l0, $l1, l2, $l3, $l4, $l6, $l7, $l8, $l10;
        java.lang.Iterable $r9;
        org.apache.commons.compress.archivers.sevenz.SevenZFile r0;
        long[] $r7;
        org.apache.commons.compress.utils.CRC32VerifyingInputStream $r14;
        int $i5;
        java.util.Iterator $r10;
        java.io.IOException $r17;
        java.lang.Object $r16;
        java.io.InputStream r20;

        r0 := @this: org.apache.commons.compress.archivers.sevenz.SevenZFile;

        r1 := @parameter0: java.io.DataInputStream;

        r2 := @parameter1: org.apache.commons.compress.archivers.sevenz.Archive;

        r18 := @parameter2: byte[];

        specialinvoke r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: void readStreamsInfo(java.io.DataInput,org.apache.commons.compress.archivers.sevenz.Archive)>(r1, r2);

        $r3 = r2.<org.apache.commons.compress.archivers.sevenz.Archive: org.apache.commons.compress.archivers.sevenz.Folder[] folders>;

        r4 = $r3[0];

        $l0 = r2.<org.apache.commons.compress.archivers.sevenz.Archive: long packPos>;

        $l1 = 32L + $l0;

        l2 = $l1 + 0L;

        $r5 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.RandomAccessFile file>;

        virtualinvoke $r5.<java.io.RandomAccessFile: void seek(long)>(l2);

        $r6 = new org.apache.commons.compress.archivers.sevenz.BoundedRandomAccessFileInputStream;

        $r8 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.RandomAccessFile file>;

        $r7 = r2.<org.apache.commons.compress.archivers.sevenz.Archive: long[] packSizes>;

        $l3 = $r7[0];

        specialinvoke $r6.<org.apache.commons.compress.archivers.sevenz.BoundedRandomAccessFileInputStream: void <init>(java.io.RandomAccessFile,long)>($r8, $l3);

        r20 = $r6;

        $r9 = virtualinvoke r4.<org.apache.commons.compress.archivers.sevenz.Folder: java.lang.Iterable getOrderedCoders()>();

        $r10 = interfaceinvoke $r9.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r16 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r21 = (org.apache.commons.compress.archivers.sevenz.Coder) $r16;

        $l8 = r21.<org.apache.commons.compress.archivers.sevenz.Coder: long numInStreams>;

        $b9 = $l8 cmp 1L;

        if $b9 != 0 goto label02;

        $l10 = r21.<org.apache.commons.compress.archivers.sevenz.Coder: long numOutStreams>;

        $b11 = $l10 cmp 1L;

        if $b11 == 0 goto label03;

     label02:
        $r17 = new java.io.IOException;

        specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>("Multi input/output stream coders are not yet supported");

        throw $r17;

     label03:
        r20 = staticinvoke <org.apache.commons.compress.archivers.sevenz.Coders: java.io.InputStream addDecoder(java.io.InputStream,org.apache.commons.compress.archivers.sevenz.Coder,byte[])>(r20, r21, r18);

        goto label01;

     label04:
        $z1 = r4.<org.apache.commons.compress.archivers.sevenz.Folder: boolean hasCrc>;

        if $z1 == 0 goto label05;

        $r14 = new org.apache.commons.compress.utils.CRC32VerifyingInputStream;

        $l6 = virtualinvoke r4.<org.apache.commons.compress.archivers.sevenz.Folder: long getUnpackSize()>();

        $l7 = r4.<org.apache.commons.compress.archivers.sevenz.Folder: long crc>;

        specialinvoke $r14.<org.apache.commons.compress.utils.CRC32VerifyingInputStream: void <init>(java.io.InputStream,long,long)>(r20, $l6, $l7);

        r20 = $r14;

     label05:
        $l4 = virtualinvoke r4.<org.apache.commons.compress.archivers.sevenz.Folder: long getUnpackSize()>();

        $i5 = (int) $l4;

        $r15 = newarray (byte)[$i5];

        $r11 = new java.io.DataInputStream;

        specialinvoke $r11.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r20);

     label06:
        virtualinvoke $r11.<java.io.DataInputStream: void readFully(byte[])>($r15);

     label07:
        virtualinvoke $r11.<java.io.DataInputStream: void close()>();

        goto label10;

     label08:
        $r19 := @caughtexception;

     label09:
        virtualinvoke $r11.<java.io.DataInputStream: void close()>();

        throw $r19;

     label10:
        $r12 = new java.io.DataInputStream;

        $r13 = new java.io.ByteArrayInputStream;

        specialinvoke $r13.<java.io.ByteArrayInputStream: void <init>(byte[])>($r15);

        specialinvoke $r12.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r13);

        return $r12;

        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private void readStreamsInfo(java.io.DataInput, org.apache.commons.compress.archivers.sevenz.Archive) throws java.io.IOException
    {
        org.apache.commons.compress.archivers.sevenz.SevenZFile r4;
        org.apache.commons.compress.archivers.sevenz.Archive r1;
        java.io.DataInput r0;
        int $i0, i1;
        org.apache.commons.compress.archivers.sevenz.Folder[] $r2;
        java.io.IOException $r3;

        r4 := @this: org.apache.commons.compress.archivers.sevenz.SevenZFile;

        r0 := @parameter0: java.io.DataInput;

        r1 := @parameter1: org.apache.commons.compress.archivers.sevenz.Archive;

        $i0 = interfaceinvoke r0.<java.io.DataInput: int readUnsignedByte()>();

        i1 = $i0;

        if $i0 != 6 goto label1;

        specialinvoke r4.<org.apache.commons.compress.archivers.sevenz.SevenZFile: void readPackInfo(java.io.DataInput,org.apache.commons.compress.archivers.sevenz.Archive)>(r0, r1);

        i1 = interfaceinvoke r0.<java.io.DataInput: int readUnsignedByte()>();

     label1:
        if i1 != 7 goto label2;

        specialinvoke r4.<org.apache.commons.compress.archivers.sevenz.SevenZFile: void readUnpackInfo(java.io.DataInput,org.apache.commons.compress.archivers.sevenz.Archive)>(r0, r1);

        i1 = interfaceinvoke r0.<java.io.DataInput: int readUnsignedByte()>();

        goto label3;

     label2:
        $r2 = newarray (org.apache.commons.compress.archivers.sevenz.Folder)[0];

        r1.<org.apache.commons.compress.archivers.sevenz.Archive: org.apache.commons.compress.archivers.sevenz.Folder[] folders> = $r2;

     label3:
        if i1 != 8 goto label4;

        specialinvoke r4.<org.apache.commons.compress.archivers.sevenz.SevenZFile: void readSubStreamsInfo(java.io.DataInput,org.apache.commons.compress.archivers.sevenz.Archive)>(r0, r1);

        i1 = interfaceinvoke r0.<java.io.DataInput: int readUnsignedByte()>();

     label4:
        if i1 == 0 goto label5;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Badly terminated StreamsInfo");

        throw $r3;

     label5:
        return;
    }

    private void readPackInfo(java.io.DataInput, org.apache.commons.compress.archivers.sevenz.Archive) throws java.io.IOException
    {
        org.apache.commons.compress.archivers.sevenz.Archive r0;
        boolean $z0;
        java.io.DataInput r1;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        long $l0, $l1, $l8, $l9, $l12;
        org.apache.commons.compress.archivers.sevenz.SevenZFile r8;
        long[] $r10, $r12, $r13, $r14, $r15;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i10, $i11, i13, i14, i15;
        java.lang.String $r7;
        java.io.IOException $r2;
        java.util.BitSet $r9, $r11;

        r8 := @this: org.apache.commons.compress.archivers.sevenz.SevenZFile;

        r1 := @parameter0: java.io.DataInput;

        r0 := @parameter1: org.apache.commons.compress.archivers.sevenz.Archive;

        $l0 = staticinvoke <org.apache.commons.compress.archivers.sevenz.SevenZFile: long readUint64(java.io.DataInput)>(r1);

        r0.<org.apache.commons.compress.archivers.sevenz.Archive: long packPos> = $l0;

        $l1 = staticinvoke <org.apache.commons.compress.archivers.sevenz.SevenZFile: long readUint64(java.io.DataInput)>(r1);

        $i2 = interfaceinvoke r1.<java.io.DataInput: int readUnsignedByte()>();

        i13 = $i2;

        if $i2 != 9 goto label3;

        $i10 = (int) $l1;

        $r13 = newarray (long)[$i10];

        r0.<org.apache.commons.compress.archivers.sevenz.Archive: long[] packSizes> = $r13;

        i14 = 0;

     label1:
        $r14 = r0.<org.apache.commons.compress.archivers.sevenz.Archive: long[] packSizes>;

        $i11 = lengthof $r14;

        if i14 >= $i11 goto label2;

        $r15 = r0.<org.apache.commons.compress.archivers.sevenz.Archive: long[] packSizes>;

        $l12 = staticinvoke <org.apache.commons.compress.archivers.sevenz.SevenZFile: long readUint64(java.io.DataInput)>(r1);

        $r15[i14] = $l12;

        i14 = i14 + 1;

        goto label1;

     label2:
        i13 = interfaceinvoke r1.<java.io.DataInput: int readUnsignedByte()>();

     label3:
        if i13 != 10 goto label7;

        $i3 = (int) $l1;

        $r9 = specialinvoke r8.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.util.BitSet readAllOrBits(java.io.DataInput,int)>(r1, $i3);

        r0.<org.apache.commons.compress.archivers.sevenz.Archive: java.util.BitSet packCrcsDefined> = $r9;

        $i4 = (int) $l1;

        $r10 = newarray (long)[$i4];

        r0.<org.apache.commons.compress.archivers.sevenz.Archive: long[] packCrcs> = $r10;

        i15 = 0;

     label4:
        $i5 = (int) $l1;

        if i15 >= $i5 goto label6;

        $r11 = r0.<org.apache.commons.compress.archivers.sevenz.Archive: java.util.BitSet packCrcsDefined>;

        $z0 = virtualinvoke $r11.<java.util.BitSet: boolean get(int)>(i15);

        if $z0 == 0 goto label5;

        $r12 = r0.<org.apache.commons.compress.archivers.sevenz.Archive: long[] packCrcs>;

        $i6 = interfaceinvoke r1.<java.io.DataInput: int readInt()>();

        $i7 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i6);

        $l8 = (long) $i7;

        $l9 = 4294967295L & $l8;

        $r12[i15] = $l9;

     label5:
        i15 = i15 + 1;

        goto label4;

     label6:
        i13 = interfaceinvoke r1.<java.io.DataInput: int readUnsignedByte()>();

     label7:
        if i13 == 0 goto label8;

        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Badly terminated PackInfo (");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i13);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label8:
        return;
    }

    private void readUnpackInfo(java.io.DataInput, org.apache.commons.compress.archivers.sevenz.Archive) throws java.io.IOException
    {
        org.apache.commons.compress.archivers.sevenz.Folder $r6, $r7, $r8, r9, $r17;
        byte $b17;
        org.apache.commons.compress.archivers.sevenz.Archive r2;
        org.apache.commons.compress.archivers.sevenz.Folder[] r1;
        boolean $z0;
        java.io.DataInput r0;
        java.lang.StringBuilder $r14, $r15, $r21, $r22, $r24, $r27;
        long $l1, $l11, $l12, $l13, $l15, $l16, $l18;
        org.apache.commons.compress.archivers.sevenz.SevenZFile r4;
        long[] $r10, $r11;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i14, i19, i20, i21, i22, i23, i24, $i25;
        java.lang.String $r16, $r23;
        java.io.IOException $r25, $r26, $r28, $r29;
        java.util.BitSet $r5;

        r4 := @this: org.apache.commons.compress.archivers.sevenz.SevenZFile;

        r0 := @parameter0: java.io.DataInput;

        r2 := @parameter1: org.apache.commons.compress.archivers.sevenz.Archive;

        $i0 = interfaceinvoke r0.<java.io.DataInput: int readUnsignedByte()>();

        if $i0 == 11 goto label01;

        $r25 = new java.io.IOException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected kFolder, got ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<java.io.IOException: void <init>(java.lang.String)>($r23);

        throw $r25;

     label01:
        $l1 = staticinvoke <org.apache.commons.compress.archivers.sevenz.SevenZFile: long readUint64(java.io.DataInput)>(r0);

        $i2 = (int) $l1;

        r1 = newarray (org.apache.commons.compress.archivers.sevenz.Folder)[$i2];

        r2.<org.apache.commons.compress.archivers.sevenz.Archive: org.apache.commons.compress.archivers.sevenz.Folder[] folders> = r1;

        $i3 = interfaceinvoke r0.<java.io.DataInput: int readUnsignedByte()>();

        if $i3 == 0 goto label02;

        $r26 = new java.io.IOException;

        specialinvoke $r26.<java.io.IOException: void <init>(java.lang.String)>("External unsupported");

        throw $r26;

     label02:
        i19 = 0;

     label03:
        $i4 = (int) $l1;

        if i19 >= $i4 goto label04;

        $r17 = specialinvoke r4.<org.apache.commons.compress.archivers.sevenz.SevenZFile: org.apache.commons.compress.archivers.sevenz.Folder readFolder(java.io.DataInput)>(r0);

        r1[i19] = $r17;

        i19 = i19 + 1;

        goto label03;

     label04:
        $i5 = interfaceinvoke r0.<java.io.DataInput: int readUnsignedByte()>();

        if $i5 == 12 goto label05;

        $r28 = new java.io.IOException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected kCodersUnpackSize, got ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<java.io.IOException: void <init>(java.lang.String)>($r16);

        throw $r28;

     label05:
        i20 = lengthof r1;

        i21 = 0;

     label06:
        if i21 >= i20 goto label09;

        r9 = r1[i21];

        $l13 = r9.<org.apache.commons.compress.archivers.sevenz.Folder: long totalOutputStreams>;

        $i14 = (int) $l13;

        $r10 = newarray (long)[$i14];

        r9.<org.apache.commons.compress.archivers.sevenz.Folder: long[] unpackSizes> = $r10;

        i22 = 0;

     label07:
        $l16 = (long) i22;

        $l15 = r9.<org.apache.commons.compress.archivers.sevenz.Folder: long totalOutputStreams>;

        $b17 = $l16 cmp $l15;

        $i25 = (int) $b17;

        if $i25 >= 0 goto label08;

        $r11 = r9.<org.apache.commons.compress.archivers.sevenz.Folder: long[] unpackSizes>;

        $l18 = staticinvoke <org.apache.commons.compress.archivers.sevenz.SevenZFile: long readUint64(java.io.DataInput)>(r0);

        $r11[i22] = $l18;

        i22 = i22 + 1;

        goto label07;

     label08:
        i21 = i21 + 1;

        goto label06;

     label09:
        $i6 = interfaceinvoke r0.<java.io.DataInput: int readUnsignedByte()>();

        i23 = $i6;

        if $i6 != 10 goto label14;

        $i7 = (int) $l1;

        $r5 = specialinvoke r4.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.util.BitSet readAllOrBits(java.io.DataInput,int)>(r0, $i7);

        i24 = 0;

     label10:
        $i8 = (int) $l1;

        if i24 >= $i8 goto label13;

        $z0 = virtualinvoke $r5.<java.util.BitSet: boolean get(int)>(i24);

        if $z0 == 0 goto label11;

        $r7 = r1[i24];

        $r7.<org.apache.commons.compress.archivers.sevenz.Folder: boolean hasCrc> = 1;

        $r8 = r1[i24];

        $i9 = interfaceinvoke r0.<java.io.DataInput: int readInt()>();

        $i10 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i9);

        $l11 = (long) $i10;

        $l12 = 4294967295L & $l11;

        $r8.<org.apache.commons.compress.archivers.sevenz.Folder: long crc> = $l12;

        goto label12;

     label11:
        $r6 = r1[i24];

        $r6.<org.apache.commons.compress.archivers.sevenz.Folder: boolean hasCrc> = 0;

     label12:
        i24 = i24 + 1;

        goto label10;

     label13:
        i23 = interfaceinvoke r0.<java.io.DataInput: int readUnsignedByte()>();

     label14:
        if i23 == 0 goto label15;

        $r29 = new java.io.IOException;

        specialinvoke $r29.<java.io.IOException: void <init>(java.lang.String)>("Badly terminated UnpackInfo");

        throw $r29;

     label15:
        return;
    }

    private void readSubStreamsInfo(java.io.DataInput, org.apache.commons.compress.archivers.sevenz.Archive) throws java.io.IOException
    {
        org.apache.commons.compress.archivers.sevenz.Folder r11, r21, r23, r24, r25;
        org.apache.commons.compress.archivers.sevenz.Archive r0;
        org.apache.commons.compress.archivers.sevenz.Folder[] $r1, r10, $r16, $r19, r20, r22;
        long $l2, $l3, $l6, $l7, $l13, $l14, $l17, $l20, $l22, $l23, l32;
        java.io.IOException $r7;
        boolean $z0, $z1, $z2, $z3;
        java.io.DataInput r2;
        org.apache.commons.compress.archivers.sevenz.SevenZFile r8;
        long[] $r4, $r6, $r13, $r15, $r17, $r18, r26;
        int $i0, $i1, $i4, $i5, $i8, $i9, $i10, $i11, $i12, $i15, $i16, $i18, $i19, $i21, i24, i25, i26, i27, i28, i29, i30, i31, i33, i34, i35, i36, i37, i38, i39, i40, i41, $i42;
        org.apache.commons.compress.archivers.sevenz.SubStreamsInfo $r3;
        java.util.BitSet $r5, $r9, $r12, $r14;

        r8 := @this: org.apache.commons.compress.archivers.sevenz.SevenZFile;

        r2 := @parameter0: java.io.DataInput;

        r0 := @parameter1: org.apache.commons.compress.archivers.sevenz.Archive;

        r20 = r0.<org.apache.commons.compress.archivers.sevenz.Archive: org.apache.commons.compress.archivers.sevenz.Folder[] folders>;

        i24 = lengthof r20;

        i25 = 0;

     label01:
        if i25 >= i24 goto label02;

        r21 = r20[i25];

        r21.<org.apache.commons.compress.archivers.sevenz.Folder: int numUnpackSubStreams> = 1;

        i25 = i25 + 1;

        goto label01;

     label02:
        $r1 = r0.<org.apache.commons.compress.archivers.sevenz.Archive: org.apache.commons.compress.archivers.sevenz.Folder[] folders>;

        i26 = lengthof $r1;

        $i0 = interfaceinvoke r2.<java.io.DataInput: int readUnsignedByte()>();

        i27 = $i0;

        if $i0 != 13 goto label05;

        i26 = 0;

        r22 = r0.<org.apache.commons.compress.archivers.sevenz.Archive: org.apache.commons.compress.archivers.sevenz.Folder[] folders>;

        i28 = lengthof r22;

        i29 = 0;

     label03:
        if i29 >= i28 goto label04;

        r23 = r22[i29];

        $l20 = staticinvoke <org.apache.commons.compress.archivers.sevenz.SevenZFile: long readUint64(java.io.DataInput)>(r2);

        $i21 = (int) $l20;

        r23.<org.apache.commons.compress.archivers.sevenz.Folder: int numUnpackSubStreams> = $i21;

        $l22 = (long) i26;

        $l23 = $l22 + $l20;

        i26 = (int) $l23;

        i29 = i29 + 1;

        goto label03;

     label04:
        i27 = interfaceinvoke r2.<java.io.DataInput: int readUnsignedByte()>();

     label05:
        $r3 = new org.apache.commons.compress.archivers.sevenz.SubStreamsInfo;

        specialinvoke $r3.<org.apache.commons.compress.archivers.sevenz.SubStreamsInfo: void <init>()>();

        $r4 = newarray (long)[i26];

        $r3.<org.apache.commons.compress.archivers.sevenz.SubStreamsInfo: long[] unpackSizes> = $r4;

        $r5 = new java.util.BitSet;

        specialinvoke $r5.<java.util.BitSet: void <init>(int)>(i26);

        $r3.<org.apache.commons.compress.archivers.sevenz.SubStreamsInfo: java.util.BitSet hasCrc> = $r5;

        $r6 = newarray (long)[i26];

        $r3.<org.apache.commons.compress.archivers.sevenz.SubStreamsInfo: long[] crcs> = $r6;

        i30 = 0;

        $r19 = r0.<org.apache.commons.compress.archivers.sevenz.Archive: org.apache.commons.compress.archivers.sevenz.Folder[] folders>;

        $i19 = lengthof $r19;

        i31 = 0;

     label06:
        if i31 >= $i19 goto label11;

        r24 = $r19[i31];

        $i11 = r24.<org.apache.commons.compress.archivers.sevenz.Folder: int numUnpackSubStreams>;

        if $i11 != 0 goto label07;

        goto label10;

     label07:
        l32 = 0L;

        if i27 != 9 goto label09;

        i33 = 0;

     label08:
        $i15 = r24.<org.apache.commons.compress.archivers.sevenz.Folder: int numUnpackSubStreams>;

        $i16 = $i15 - 1;

        if i33 >= $i16 goto label09;

        $l17 = staticinvoke <org.apache.commons.compress.archivers.sevenz.SevenZFile: long readUint64(java.io.DataInput)>(r2);

        $r18 = $r3.<org.apache.commons.compress.archivers.sevenz.SubStreamsInfo: long[] unpackSizes>;

        $i18 = i30;

        i30 = i30 + 1;

        $r18[$i18] = $l17;

        l32 = l32 + $l17;

        i33 = i33 + 1;

        goto label08;

     label09:
        $r17 = $r3.<org.apache.commons.compress.archivers.sevenz.SubStreamsInfo: long[] unpackSizes>;

        $i12 = i30;

        i30 = i30 + 1;

        $l13 = virtualinvoke r24.<org.apache.commons.compress.archivers.sevenz.Folder: long getUnpackSize()>();

        $l14 = $l13 - l32;

        $r17[$i12] = $l14;

     label10:
        i31 = i31 + 1;

        goto label06;

     label11:
        if i27 != 9 goto label12;

        i27 = interfaceinvoke r2.<java.io.DataInput: int readUnsignedByte()>();

     label12:
        i34 = 0;

        $r16 = r0.<org.apache.commons.compress.archivers.sevenz.Archive: org.apache.commons.compress.archivers.sevenz.Folder[] folders>;

        $i10 = lengthof $r16;

        i35 = 0;

     label13:
        if i35 >= $i10 goto label16;

        r25 = $r16[i35];

        $i8 = r25.<org.apache.commons.compress.archivers.sevenz.Folder: int numUnpackSubStreams>;

        if $i8 != 1 goto label14;

        $z3 = r25.<org.apache.commons.compress.archivers.sevenz.Folder: boolean hasCrc>;

        if $z3 != 0 goto label15;

     label14:
        $i9 = r25.<org.apache.commons.compress.archivers.sevenz.Folder: int numUnpackSubStreams>;

        i34 = i34 + $i9;

     label15:
        i35 = i35 + 1;

        goto label13;

     label16:
        if i27 != 10 goto label25;

        $r9 = specialinvoke r8.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.util.BitSet readAllOrBits(java.io.DataInput,int)>(r2, i34);

        r26 = newarray (long)[i34];

        i36 = 0;

     label17:
        if i36 >= i34 goto label19;

        $z2 = virtualinvoke $r9.<java.util.BitSet: boolean get(int)>(i36);

        if $z2 == 0 goto label18;

        $i4 = interfaceinvoke r2.<java.io.DataInput: int readInt()>();

        $i5 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i4);

        $l6 = (long) $i5;

        $l7 = 4294967295L & $l6;

        r26[i36] = $l7;

     label18:
        i36 = i36 + 1;

        goto label17;

     label19:
        i37 = 0;

        i38 = 0;

        r10 = r0.<org.apache.commons.compress.archivers.sevenz.Archive: org.apache.commons.compress.archivers.sevenz.Folder[] folders>;

        i39 = lengthof r10;

        i40 = 0;

     label20:
        if i40 >= i39 goto label24;

        r11 = r10[i40];

        $i1 = r11.<org.apache.commons.compress.archivers.sevenz.Folder: int numUnpackSubStreams>;

        if $i1 != 1 goto label21;

        $z1 = r11.<org.apache.commons.compress.archivers.sevenz.Folder: boolean hasCrc>;

        if $z1 == 0 goto label21;

        $r14 = $r3.<org.apache.commons.compress.archivers.sevenz.SubStreamsInfo: java.util.BitSet hasCrc>;

        virtualinvoke $r14.<java.util.BitSet: void set(int,boolean)>(i37, 1);

        $r15 = $r3.<org.apache.commons.compress.archivers.sevenz.SubStreamsInfo: long[] crcs>;

        $l3 = r11.<org.apache.commons.compress.archivers.sevenz.Folder: long crc>;

        $r15[i37] = $l3;

        i37 = i37 + 1;

        goto label23;

     label21:
        i41 = 0;

     label22:
        $i42 = r11.<org.apache.commons.compress.archivers.sevenz.Folder: int numUnpackSubStreams>;

        if i41 >= $i42 goto label23;

        $r12 = $r3.<org.apache.commons.compress.archivers.sevenz.SubStreamsInfo: java.util.BitSet hasCrc>;

        $z0 = virtualinvoke $r9.<java.util.BitSet: boolean get(int)>(i38);

        virtualinvoke $r12.<java.util.BitSet: void set(int,boolean)>(i37, $z0);

        $r13 = $r3.<org.apache.commons.compress.archivers.sevenz.SubStreamsInfo: long[] crcs>;

        $l2 = r26[i38];

        $r13[i37] = $l2;

        i37 = i37 + 1;

        i38 = i38 + 1;

        i41 = i41 + 1;

        goto label22;

     label23:
        i40 = i40 + 1;

        goto label20;

     label24:
        i27 = interfaceinvoke r2.<java.io.DataInput: int readUnsignedByte()>();

     label25:
        if i27 == 0 goto label26;

        $r7 = new java.io.IOException;

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("Badly terminated SubStreamsInfo");

        throw $r7;

     label26:
        r0.<org.apache.commons.compress.archivers.sevenz.Archive: org.apache.commons.compress.archivers.sevenz.SubStreamsInfo subStreamsInfo> = $r3;

        return;
    }

    private org.apache.commons.compress.archivers.sevenz.Folder readFolder(java.io.DataInput) throws java.io.IOException
    {
        byte[] $r10, $r13, $r19, $r22;
        org.apache.commons.compress.archivers.sevenz.Folder $r28;
        org.apache.commons.compress.archivers.sevenz.BindPair[] r26;
        byte $b3, $b6, $b8;
        long $l0, $l10, $l13, $l15, $l16, $l21, $l22, $l23, $l24, $l25, l27, l28, l31, l33;
        java.io.IOException $r30, $r31, $r33, $r34;
        org.apache.commons.compress.archivers.sevenz.Coder[] r2;
        boolean z0, $z1, z2, $z3, $z4, z5;
        org.apache.commons.compress.archivers.sevenz.Coder $r11, $r12, $r14, $r15, $r16, $r17, $r20, $r21, $r23, $r24, $r29;
        java.io.DataInput r1;
        org.apache.commons.compress.archivers.sevenz.SevenZFile r25;
        long[] r27;
        int $i1, $i2, $i4, $i5, $i7, $i9, $i11, $i12, $i14, $i17, $i18, $i19, $i20, $i26, i29, i30, i32, i34, i35, $i36;
        org.apache.commons.compress.archivers.sevenz.BindPair $r6, $r7, $r32;

        r25 := @this: org.apache.commons.compress.archivers.sevenz.SevenZFile;

        r1 := @parameter0: java.io.DataInput;

        $r28 = new org.apache.commons.compress.archivers.sevenz.Folder;

        specialinvoke $r28.<org.apache.commons.compress.archivers.sevenz.Folder: void <init>()>();

        $l0 = staticinvoke <org.apache.commons.compress.archivers.sevenz.SevenZFile: long readUint64(java.io.DataInput)>(r1);

        $i1 = (int) $l0;

        r2 = newarray (org.apache.commons.compress.archivers.sevenz.Coder)[$i1];

        l27 = 0L;

        l28 = 0L;

        i29 = 0;

     label01:
        $i2 = lengthof r2;

        if i29 >= $i2 goto label12;

        $r29 = new org.apache.commons.compress.archivers.sevenz.Coder;

        specialinvoke $r29.<org.apache.commons.compress.archivers.sevenz.Coder: void <init>()>();

        r2[i29] = $r29;

        $i17 = interfaceinvoke r1.<java.io.DataInput: int readUnsignedByte()>();

        i30 = $i17 & 15;

        $i18 = $i17 & 16;

        if $i18 != 0 goto label02;

        $z1 = 1;

        goto label03;

     label02:
        $z1 = 0;

     label03:
        z2 = $z1;

        $i19 = $i17 & 32;

        if $i19 == 0 goto label04;

        $z3 = 1;

        goto label05;

     label04:
        $z3 = 0;

     label05:
        z0 = $z3;

        $i20 = $i17 & 128;

        if $i20 == 0 goto label06;

        $z4 = 1;

        goto label07;

     label06:
        $z4 = 0;

     label07:
        z5 = $z4;

        $r11 = r2[i29];

        $r10 = newarray (byte)[i30];

        $r11.<org.apache.commons.compress.archivers.sevenz.Coder: byte[] decompressionMethodId> = $r10;

        $r12 = r2[i29];

        $r13 = $r12.<org.apache.commons.compress.archivers.sevenz.Coder: byte[] decompressionMethodId>;

        interfaceinvoke r1.<java.io.DataInput: void readFully(byte[])>($r13);

        if z2 == 0 goto label08;

        $r23 = r2[i29];

        $r23.<org.apache.commons.compress.archivers.sevenz.Coder: long numInStreams> = 1L;

        $r24 = r2[i29];

        $r24.<org.apache.commons.compress.archivers.sevenz.Coder: long numOutStreams> = 1L;

        goto label09;

     label08:
        $r14 = r2[i29];

        $l21 = staticinvoke <org.apache.commons.compress.archivers.sevenz.SevenZFile: long readUint64(java.io.DataInput)>(r1);

        $r14.<org.apache.commons.compress.archivers.sevenz.Coder: long numInStreams> = $l21;

        $r15 = r2[i29];

        $l22 = staticinvoke <org.apache.commons.compress.archivers.sevenz.SevenZFile: long readUint64(java.io.DataInput)>(r1);

        $r15.<org.apache.commons.compress.archivers.sevenz.Coder: long numOutStreams> = $l22;

     label09:
        $r16 = r2[i29];

        $l23 = $r16.<org.apache.commons.compress.archivers.sevenz.Coder: long numInStreams>;

        l27 = l27 + $l23;

        $r17 = r2[i29];

        $l24 = $r17.<org.apache.commons.compress.archivers.sevenz.Coder: long numOutStreams>;

        l28 = l28 + $l24;

        if z0 == 0 goto label10;

        $l25 = staticinvoke <org.apache.commons.compress.archivers.sevenz.SevenZFile: long readUint64(java.io.DataInput)>(r1);

        $r20 = r2[i29];

        $i26 = (int) $l25;

        $r19 = newarray (byte)[$i26];

        $r20.<org.apache.commons.compress.archivers.sevenz.Coder: byte[] properties> = $r19;

        $r21 = r2[i29];

        $r22 = $r21.<org.apache.commons.compress.archivers.sevenz.Coder: byte[] properties>;

        interfaceinvoke r1.<java.io.DataInput: void readFully(byte[])>($r22);

     label10:
        if z5 == 0 goto label11;

        $r30 = new java.io.IOException;

        specialinvoke $r30.<java.io.IOException: void <init>(java.lang.String)>("Alternative methods are unsupported, please report. The reference implementation doesn\'t support them either.");

        throw $r30;

     label11:
        i29 = i29 + 1;

        goto label01;

     label12:
        $r28.<org.apache.commons.compress.archivers.sevenz.Folder: org.apache.commons.compress.archivers.sevenz.Coder[] coders> = r2;

        $r28.<org.apache.commons.compress.archivers.sevenz.Folder: long totalInputStreams> = l27;

        $r28.<org.apache.commons.compress.archivers.sevenz.Folder: long totalOutputStreams> = l28;

        $b3 = l28 cmp 0L;

        if $b3 != 0 goto label13;

        $r31 = new java.io.IOException;

        specialinvoke $r31.<java.io.IOException: void <init>(java.lang.String)>("Total output streams can\'t be 0");

        throw $r31;

     label13:
        l31 = l28 - 1L;

        $i4 = (int) l31;

        r26 = newarray (org.apache.commons.compress.archivers.sevenz.BindPair)[$i4];

        i32 = 0;

     label14:
        $i5 = lengthof r26;

        if i32 >= $i5 goto label15;

        $r32 = new org.apache.commons.compress.archivers.sevenz.BindPair;

        specialinvoke $r32.<org.apache.commons.compress.archivers.sevenz.BindPair: void <init>()>();

        r26[i32] = $r32;

        $r6 = r26[i32];

        $l15 = staticinvoke <org.apache.commons.compress.archivers.sevenz.SevenZFile: long readUint64(java.io.DataInput)>(r1);

        $r6.<org.apache.commons.compress.archivers.sevenz.BindPair: long inIndex> = $l15;

        $r7 = r26[i32];

        $l16 = staticinvoke <org.apache.commons.compress.archivers.sevenz.SevenZFile: long readUint64(java.io.DataInput)>(r1);

        $r7.<org.apache.commons.compress.archivers.sevenz.BindPair: long outIndex> = $l16;

        i32 = i32 + 1;

        goto label14;

     label15:
        $r28.<org.apache.commons.compress.archivers.sevenz.Folder: org.apache.commons.compress.archivers.sevenz.BindPair[] bindPairs> = r26;

        $b6 = l27 cmp l31;

        $i36 = (int) $b6;

        if $i36 >= 0 goto label16;

        $r33 = new java.io.IOException;

        specialinvoke $r33.<java.io.IOException: void <init>(java.lang.String)>("Total input streams can\'t be less than the number of bind pairs");

        throw $r33;

     label16:
        l33 = l27 - l31;

        $i7 = (int) l33;

        r27 = newarray (long)[$i7];

        $b8 = l33 cmp 1L;

        if $b8 != 0 goto label21;

        i34 = 0;

     label17:
        $i11 = (int) l27;

        if i34 >= $i11 goto label19;

        $i14 = virtualinvoke $r28.<org.apache.commons.compress.archivers.sevenz.Folder: int findBindPairForInStream(int)>(i34);

        if $i14 >= 0 goto label18;

        goto label19;

     label18:
        i34 = i34 + 1;

        goto label17;

     label19:
        $i12 = (int) l27;

        if i34 != $i12 goto label20;

        $r34 = new java.io.IOException;

        specialinvoke $r34.<java.io.IOException: void <init>(java.lang.String)>("Couldn\'t find stream\'s bind pair index");

        throw $r34;

     label20:
        $l13 = (long) i34;

        r27[0] = $l13;

        goto label23;

     label21:
        i35 = 0;

     label22:
        $i9 = (int) l33;

        if i35 >= $i9 goto label23;

        $l10 = staticinvoke <org.apache.commons.compress.archivers.sevenz.SevenZFile: long readUint64(java.io.DataInput)>(r1);

        r27[i35] = $l10;

        i35 = i35 + 1;

        goto label22;

     label23:
        $r28.<org.apache.commons.compress.archivers.sevenz.Folder: long[] packedStreams> = r27;

        return $r28;
    }

    private java.util.BitSet readAllOrBits(java.io.DataInput, int) throws java.io.IOException
    {
        org.apache.commons.compress.archivers.sevenz.SevenZFile r1;
        java.io.DataInput r0;
        int $i0, i1, i2;
        java.util.BitSet $r2, r3;

        r1 := @this: org.apache.commons.compress.archivers.sevenz.SevenZFile;

        r0 := @parameter0: java.io.DataInput;

        i1 := @parameter1: int;

        $i0 = interfaceinvoke r0.<java.io.DataInput: int readUnsignedByte()>();

        if $i0 == 0 goto label3;

        $r2 = new java.util.BitSet;

        specialinvoke $r2.<java.util.BitSet: void <init>(int)>(i1);

        r3 = $r2;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        virtualinvoke $r2.<java.util.BitSet: void set(int,boolean)>(i2, 1);

        i2 = i2 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        r3 = specialinvoke r1.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.util.BitSet readBits(java.io.DataInput,int)>(r0, i1);

     label4:
        return r3;
    }

    private java.util.BitSet readBits(java.io.DataInput, int) throws java.io.IOException
    {
        org.apache.commons.compress.archivers.sevenz.SevenZFile r2;
        int i0, $i1, $i2, i3, i4, i5;
        java.io.DataInput r1;
        java.util.BitSet $r0;
        boolean $z0;

        r2 := @this: org.apache.commons.compress.archivers.sevenz.SevenZFile;

        r1 := @parameter0: java.io.DataInput;

        i0 := @parameter1: int;

        $r0 = new java.util.BitSet;

        specialinvoke $r0.<java.util.BitSet: void <init>(int)>(i0);

        i3 = 0;

        i4 = 0;

        i5 = 0;

     label1:
        if i5 >= i0 goto label5;

        if i3 != 0 goto label2;

        i3 = 128;

        i4 = interfaceinvoke r1.<java.io.DataInput: int readUnsignedByte()>();

     label2:
        $i2 = i5;

        $i1 = i4 & i3;

        if $i1 == 0 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        virtualinvoke $r0.<java.util.BitSet: void set(int,boolean)>($i2, $z0);

        i3 = i3 >>> 1;

        i5 = i5 + 1;

        goto label1;

     label5:
        return $r0;
    }

    private void readFilesInfo(java.io.DataInput, org.apache.commons.compress.archivers.sevenz.Archive) throws java.io.IOException
    {
        byte[] r56;
        byte $b28, $b34, $b36;
        java.lang.StringBuilder $r33, $r34, $r35;
        long $l0, $l4, $l13, $l14, $l18, $l19, $l23, $l24, $l26, $l27, $l29, $l43, $l44;
        java.io.IOException $r2, $r3, $r9, $r14, $r19, $r24, $r25, $r28, $r29, $r30, $r31, $r32;
        org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry[] r1;
        org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry $r6, $r7, $r8, $r11, $r12, $r13, $r16, $r17, $r18, $r21, $r22, $r23, $r27, $r38, $r39, $r40, $r41, $r42, $r45, $r48, $r51, $r52, $r57, $r58, $r59;
        java.io.DataInput r0;
        org.apache.commons.compress.archivers.sevenz.SevenZFile r4;
        long[] $r47, $r50;
        int $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i15, $i16, $i17, $i20, $i21, $i22, $i25, $i30, $i31, $i32, $i33, $i35, $i37, $i38, $i39, $i40, $i41, $i42, i45, i46, i47, i48, i49, i50, i51, i52, i53, i54, i55;
        org.apache.commons.compress.archivers.sevenz.SubStreamsInfo $r43, $r46, $r49;
        java.util.BitSet $r5, $r10, $r15, $r20, $r44, r53, r54, r55;
        org.apache.commons.compress.archivers.sevenz.Archive r37;
        java.lang.String $r26, $r36;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;

        r4 := @this: org.apache.commons.compress.archivers.sevenz.SevenZFile;

        r0 := @parameter0: java.io.DataInput;

        r37 := @parameter1: org.apache.commons.compress.archivers.sevenz.Archive;

        $l0 = staticinvoke <org.apache.commons.compress.archivers.sevenz.SevenZFile: long readUint64(java.io.DataInput)>(r0);

        $i1 = (int) $l0;

        r1 = newarray (org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry)[$i1];

        i45 = 0;

     label01:
        $i2 = lengthof r1;

        if i45 >= $i2 goto label02;

        $r52 = new org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry;

        specialinvoke $r52.<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: void <init>()>();

        r1[i45] = $r52;

        i45 = i45 + 1;

        goto label01;

     label02:
        r53 = null;

        r54 = null;

        r55 = null;

     label03:
        $i3 = interfaceinvoke r0.<java.io.DataInput: int readUnsignedByte()>();

        if $i3 != 0 goto label04;

        goto label42;

     label04:
        $l4 = staticinvoke <org.apache.commons.compress.archivers.sevenz.SevenZFile: long readUint64(java.io.DataInput)>(r0);

        tableswitch($i3)
        {
            case 14: goto label05;
            case 15: goto label06;
            case 16: goto label08;
            case 17: goto label10;
            case 18: goto label18;
            case 19: goto label23;
            case 20: goto label28;
            case 21: goto label33;
            case 22: goto label40;
            case 23: goto label40;
            case 24: goto label38;
            case 25: goto label39;
            default: goto label40;
        };

     label05:
        $i41 = lengthof r1;

        r53 = specialinvoke r4.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.util.BitSet readBits(java.io.DataInput,int)>(r0, $i41);

        goto label41;

     label06:
        if r53 != null goto label07;

        $r31 = new java.io.IOException;

        specialinvoke $r31.<java.io.IOException: void <init>(java.lang.String)>("Header format error: kEmptyStream must appear before kEmptyFile");

        throw $r31;

     label07:
        $i40 = virtualinvoke r53.<java.util.BitSet: int cardinality()>();

        r54 = specialinvoke r4.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.util.BitSet readBits(java.io.DataInput,int)>(r0, $i40);

        goto label41;

     label08:
        if r53 != null goto label09;

        $r30 = new java.io.IOException;

        specialinvoke $r30.<java.io.IOException: void <init>(java.lang.String)>("Header format error: kEmptyStream must appear before kAnti");

        throw $r30;

     label09:
        $i39 = virtualinvoke r53.<java.util.BitSet: int cardinality()>();

        r55 = specialinvoke r4.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.util.BitSet readBits(java.io.DataInput,int)>(r0, $i39);

        goto label41;

     label10:
        $i25 = interfaceinvoke r0.<java.io.DataInput: int readUnsignedByte()>();

        if $i25 == 0 goto label11;

        $r29 = new java.io.IOException;

        specialinvoke $r29.<java.io.IOException: void <init>(java.lang.String)>("Not implemented");

        throw $r29;

     label11:
        $l26 = $l4 - 1L;

        $l27 = $l26 & 1L;

        $b28 = $l27 cmp 0L;

        if $b28 == 0 goto label12;

        $r28 = new java.io.IOException;

        specialinvoke $r28.<java.io.IOException: void <init>(java.lang.String)>("File names length invalid");

        throw $r28;

     label12:
        $l29 = $l4 - 1L;

        $i30 = (int) $l29;

        r56 = newarray (byte)[$i30];

        interfaceinvoke r0.<java.io.DataInput: void readFully(byte[])>(r56);

        i46 = 0;

        i47 = 0;

        i48 = 0;

     label13:
        $i31 = lengthof r56;

        if i48 >= $i31 goto label15;

        $b34 = r56[i48];

        if $b34 != 0 goto label14;

        $i35 = i48 + 1;

        $b36 = r56[$i35];

        if $b36 != 0 goto label14;

        $i37 = i46;

        i46 = i46 + 1;

        $r27 = r1[$i37];

        $r26 = new java.lang.String;

        $i38 = i48 - i47;

        specialinvoke $r26.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r56, i47, $i38, "UTF-16LE");

        virtualinvoke $r27.<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: void setName(java.lang.String)>($r26);

        i47 = i48 + 2;

     label14:
        i48 = i48 + 2;

        goto label13;

     label15:
        $i32 = lengthof r56;

        if i47 != $i32 goto label16;

        $i33 = lengthof r1;

        if i46 == $i33 goto label17;

     label16:
        $r25 = new java.io.IOException;

        specialinvoke $r25.<java.io.IOException: void <init>(java.lang.String)>("Error parsing file names");

        throw $r25;

     label17:
        goto label41;

     label18:
        $i20 = lengthof r1;

        $r20 = specialinvoke r4.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.util.BitSet readAllOrBits(java.io.DataInput,int)>(r0, $i20);

        $i21 = interfaceinvoke r0.<java.io.DataInput: int readUnsignedByte()>();

        if $i21 == 0 goto label19;

        $r24 = new java.io.IOException;

        specialinvoke $r24.<java.io.IOException: void <init>(java.lang.String)>("Unimplemented");

        throw $r24;

     label19:
        i49 = 0;

     label20:
        $i22 = lengthof r1;

        if i49 >= $i22 goto label22;

        $r21 = r1[i49];

        $z6 = virtualinvoke $r20.<java.util.BitSet: boolean get(int)>(i49);

        virtualinvoke $r21.<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: void setHasCreationDate(boolean)>($z6);

        $r22 = r1[i49];

        $z7 = virtualinvoke $r22.<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: boolean getHasCreationDate()>();

        if $z7 == 0 goto label21;

        $r23 = r1[i49];

        $l23 = interfaceinvoke r0.<java.io.DataInput: long readLong()>();

        $l24 = staticinvoke <java.lang.Long: long reverseBytes(long)>($l23);

        virtualinvoke $r23.<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: void setCreationDate(long)>($l24);

     label21:
        i49 = i49 + 1;

        goto label20;

     label22:
        goto label41;

     label23:
        $i15 = lengthof r1;

        $r15 = specialinvoke r4.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.util.BitSet readAllOrBits(java.io.DataInput,int)>(r0, $i15);

        $i16 = interfaceinvoke r0.<java.io.DataInput: int readUnsignedByte()>();

        if $i16 == 0 goto label24;

        $r19 = new java.io.IOException;

        specialinvoke $r19.<java.io.IOException: void <init>(java.lang.String)>("Unimplemented");

        throw $r19;

     label24:
        i50 = 0;

     label25:
        $i17 = lengthof r1;

        if i50 >= $i17 goto label27;

        $r16 = r1[i50];

        $z4 = virtualinvoke $r15.<java.util.BitSet: boolean get(int)>(i50);

        virtualinvoke $r16.<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: void setHasAccessDate(boolean)>($z4);

        $r17 = r1[i50];

        $z5 = virtualinvoke $r17.<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: boolean getHasAccessDate()>();

        if $z5 == 0 goto label26;

        $r18 = r1[i50];

        $l18 = interfaceinvoke r0.<java.io.DataInput: long readLong()>();

        $l19 = staticinvoke <java.lang.Long: long reverseBytes(long)>($l18);

        virtualinvoke $r18.<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: void setAccessDate(long)>($l19);

     label26:
        i50 = i50 + 1;

        goto label25;

     label27:
        goto label41;

     label28:
        $i10 = lengthof r1;

        $r10 = specialinvoke r4.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.util.BitSet readAllOrBits(java.io.DataInput,int)>(r0, $i10);

        $i11 = interfaceinvoke r0.<java.io.DataInput: int readUnsignedByte()>();

        if $i11 == 0 goto label29;

        $r14 = new java.io.IOException;

        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>("Unimplemented");

        throw $r14;

     label29:
        i51 = 0;

     label30:
        $i12 = lengthof r1;

        if i51 >= $i12 goto label32;

        $r11 = r1[i51];

        $z2 = virtualinvoke $r10.<java.util.BitSet: boolean get(int)>(i51);

        virtualinvoke $r11.<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: void setHasLastModifiedDate(boolean)>($z2);

        $r12 = r1[i51];

        $z3 = virtualinvoke $r12.<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: boolean getHasLastModifiedDate()>();

        if $z3 == 0 goto label31;

        $r13 = r1[i51];

        $l13 = interfaceinvoke r0.<java.io.DataInput: long readLong()>();

        $l14 = staticinvoke <java.lang.Long: long reverseBytes(long)>($l13);

        virtualinvoke $r13.<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: void setLastModifiedDate(long)>($l14);

     label31:
        i51 = i51 + 1;

        goto label30;

     label32:
        goto label41;

     label33:
        $i5 = lengthof r1;

        $r5 = specialinvoke r4.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.util.BitSet readAllOrBits(java.io.DataInput,int)>(r0, $i5);

        $i6 = interfaceinvoke r0.<java.io.DataInput: int readUnsignedByte()>();

        if $i6 == 0 goto label34;

        $r9 = new java.io.IOException;

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>("Unimplemented");

        throw $r9;

     label34:
        i52 = 0;

     label35:
        $i7 = lengthof r1;

        if i52 >= $i7 goto label37;

        $r6 = r1[i52];

        $z0 = virtualinvoke $r5.<java.util.BitSet: boolean get(int)>(i52);

        virtualinvoke $r6.<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: void setHasWindowsAttributes(boolean)>($z0);

        $r7 = r1[i52];

        $z1 = virtualinvoke $r7.<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: boolean getHasWindowsAttributes()>();

        if $z1 == 0 goto label36;

        $r8 = r1[i52];

        $i8 = interfaceinvoke r0.<java.io.DataInput: int readInt()>();

        $i9 = staticinvoke <java.lang.Integer: int reverseBytes(int)>($i8);

        virtualinvoke $r8.<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: void setWindowsAttributes(int)>($i9);

     label36:
        i52 = i52 + 1;

        goto label35;

     label37:
        goto label41;

     label38:
        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("kStartPos is unsupported, please report");

        throw $r3;

     label39:
        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("kDummy is unsupported, please report");

        throw $r2;

     label40:
        $r32 = new java.io.IOException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown property ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.io.IOException: void <init>(java.lang.String)>($r36);

        throw $r32;

     label41:
        goto label03;

     label42:
        i53 = 0;

        i54 = 0;

        i55 = 0;

     label43:
        $i42 = lengthof r1;

        if i55 >= $i42 goto label54;

        $r57 = r1[i55];

        if r53 != null goto label44;

        $z11 = 1;

        goto label46;

     label44:
        $z8 = virtualinvoke r53.<java.util.BitSet: boolean get(int)>(i55);

        if $z8 != 0 goto label45;

        $z11 = 1;

        goto label46;

     label45:
        $z11 = 0;

     label46:
        virtualinvoke $r57.<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: void setHasStream(boolean)>($z11);

        $r58 = r1[i55];

        $z12 = virtualinvoke $r58.<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: boolean hasStream()>();

        if $z12 == 0 goto label47;

        $r41 = r1[i55];

        virtualinvoke $r41.<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: void setDirectory(boolean)>(0);

        $r42 = r1[i55];

        virtualinvoke $r42.<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: void setAntiItem(boolean)>(0);

        $r45 = r1[i55];

        $r43 = r37.<org.apache.commons.compress.archivers.sevenz.Archive: org.apache.commons.compress.archivers.sevenz.SubStreamsInfo subStreamsInfo>;

        $r44 = $r43.<org.apache.commons.compress.archivers.sevenz.SubStreamsInfo: java.util.BitSet hasCrc>;

        $z10 = virtualinvoke $r44.<java.util.BitSet: boolean get(int)>(i53);

        virtualinvoke $r45.<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: void setHasCrc(boolean)>($z10);

        $r48 = r1[i55];

        $r46 = r37.<org.apache.commons.compress.archivers.sevenz.Archive: org.apache.commons.compress.archivers.sevenz.SubStreamsInfo subStreamsInfo>;

        $r47 = $r46.<org.apache.commons.compress.archivers.sevenz.SubStreamsInfo: long[] crcs>;

        $l43 = $r47[i53];

        virtualinvoke $r48.<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: void setCrcValue(long)>($l43);

        $r51 = r1[i55];

        $r49 = r37.<org.apache.commons.compress.archivers.sevenz.Archive: org.apache.commons.compress.archivers.sevenz.SubStreamsInfo subStreamsInfo>;

        $r50 = $r49.<org.apache.commons.compress.archivers.sevenz.SubStreamsInfo: long[] unpackSizes>;

        $l44 = $r50[i53];

        virtualinvoke $r51.<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: void setSize(long)>($l44);

        i53 = i53 + 1;

        goto label53;

     label47:
        $r59 = r1[i55];

        if r54 != null goto label48;

        $z13 = 1;

        goto label50;

     label48:
        $z9 = virtualinvoke r54.<java.util.BitSet: boolean get(int)>(i54);

        if $z9 != 0 goto label49;

        $z13 = 1;

        goto label50;

     label49:
        $z13 = 0;

     label50:
        virtualinvoke $r59.<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: void setDirectory(boolean)>($z13);

        $r38 = r1[i55];

        if r55 != null goto label51;

        $z14 = 0;

        goto label52;

     label51:
        $z14 = virtualinvoke r55.<java.util.BitSet: boolean get(int)>(i54);

     label52:
        virtualinvoke $r38.<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: void setAntiItem(boolean)>($z14);

        $r39 = r1[i55];

        virtualinvoke $r39.<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: void setHasCrc(boolean)>(0);

        $r40 = r1[i55];

        virtualinvoke $r40.<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: void setSize(long)>(0L);

        i54 = i54 + 1;

     label53:
        i55 = i55 + 1;

        goto label43;

     label54:
        r37.<org.apache.commons.compress.archivers.sevenz.Archive: org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry[] files> = r1;

        specialinvoke r4.<org.apache.commons.compress.archivers.sevenz.SevenZFile: void calculateStreamMap(org.apache.commons.compress.archivers.sevenz.Archive)>(r37);

        return;
    }

    private void calculateStreamMap(org.apache.commons.compress.archivers.sevenz.Archive) throws java.io.IOException
    {
        org.apache.commons.compress.archivers.sevenz.Folder $r16, $r22, $r29;
        int[] $r3, $r6, $r8, $r12, $r20, $r23, $r27;
        org.apache.commons.compress.archivers.sevenz.Archive r1;
        org.apache.commons.compress.archivers.sevenz.Folder[] $r2, $r15, $r17, $r18, $r21, $r28, $r31;
        boolean $z0, $z1;
        org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry[] $r7, $r9, $r10, $r13;
        org.apache.commons.compress.archivers.sevenz.StreamMap $r33;
        org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry $r11, $r14;
        long $l8, l13;
        org.apache.commons.compress.archivers.sevenz.SevenZFile r32;
        long[] $r4, $r5, $r24, $r25, $r26, $r30;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, i10, $i11, i12, $i14, i15, i16, i17, i18, $i20;
        java.io.IOException $r34;

        r32 := @this: org.apache.commons.compress.archivers.sevenz.SevenZFile;

        r1 := @parameter0: org.apache.commons.compress.archivers.sevenz.Archive;

        $r33 = new org.apache.commons.compress.archivers.sevenz.StreamMap;

        specialinvoke $r33.<org.apache.commons.compress.archivers.sevenz.StreamMap: void <init>()>();

        i10 = 0;

        $r2 = r1.<org.apache.commons.compress.archivers.sevenz.Archive: org.apache.commons.compress.archivers.sevenz.Folder[] folders>;

        if $r2 == null goto label01;

        $r31 = r1.<org.apache.commons.compress.archivers.sevenz.Archive: org.apache.commons.compress.archivers.sevenz.Folder[] folders>;

        $i11 = lengthof $r31;

        goto label02;

     label01:
        $i11 = 0;

     label02:
        i0 = $i11;

        $r3 = newarray (int)[$i11];

        $r33.<org.apache.commons.compress.archivers.sevenz.StreamMap: int[] folderFirstPackStreamIndex> = $r3;

        i12 = 0;

     label03:
        if i12 >= i0 goto label04;

        $r27 = $r33.<org.apache.commons.compress.archivers.sevenz.StreamMap: int[] folderFirstPackStreamIndex>;

        $r27[i12] = i10;

        $r28 = r1.<org.apache.commons.compress.archivers.sevenz.Archive: org.apache.commons.compress.archivers.sevenz.Folder[] folders>;

        $r29 = $r28[i12];

        $r30 = $r29.<org.apache.commons.compress.archivers.sevenz.Folder: long[] packedStreams>;

        $i9 = lengthof $r30;

        i10 = i10 + $i9;

        i12 = i12 + 1;

        goto label03;

     label04:
        l13 = 0L;

        $r4 = r1.<org.apache.commons.compress.archivers.sevenz.Archive: long[] packSizes>;

        if $r4 == null goto label05;

        $r26 = r1.<org.apache.commons.compress.archivers.sevenz.Archive: long[] packSizes>;

        $i14 = lengthof $r26;

        goto label06;

     label05:
        $i14 = 0;

     label06:
        i1 = $i14;

        $r5 = newarray (long)[$i14];

        $r33.<org.apache.commons.compress.archivers.sevenz.StreamMap: long[] packStreamOffsets> = $r5;

        i15 = 0;

     label07:
        if i15 >= i1 goto label08;

        $r24 = $r33.<org.apache.commons.compress.archivers.sevenz.StreamMap: long[] packStreamOffsets>;

        $r24[i15] = l13;

        $r25 = r1.<org.apache.commons.compress.archivers.sevenz.Archive: long[] packSizes>;

        $l8 = $r25[i15];

        l13 = l13 + $l8;

        i15 = i15 + 1;

        goto label07;

     label08:
        $r6 = newarray (int)[i0];

        $r33.<org.apache.commons.compress.archivers.sevenz.StreamMap: int[] folderFirstFileIndex> = $r6;

        $r7 = r1.<org.apache.commons.compress.archivers.sevenz.Archive: org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry[] files>;

        $i2 = lengthof $r7;

        $r8 = newarray (int)[$i2];

        $r33.<org.apache.commons.compress.archivers.sevenz.StreamMap: int[] fileFolderIndex> = $r8;

        i16 = 0;

        i17 = 0;

        i18 = 0;

     label09:
        $r9 = r1.<org.apache.commons.compress.archivers.sevenz.Archive: org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry[] files>;

        $i3 = lengthof $r9;

        if i18 >= $i3 goto label17;

        $r10 = r1.<org.apache.commons.compress.archivers.sevenz.Archive: org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry[] files>;

        $r11 = $r10[i18];

        $z0 = virtualinvoke $r11.<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: boolean hasStream()>();

        if $z0 != 0 goto label10;

        if i17 != 0 goto label10;

        $r23 = $r33.<org.apache.commons.compress.archivers.sevenz.StreamMap: int[] fileFolderIndex>;

        $i20 = (int) -1;

        $r23[i18] = $i20;

        goto label16;

     label10:
        if i17 != 0 goto label14;

     label11:
        $r17 = r1.<org.apache.commons.compress.archivers.sevenz.Archive: org.apache.commons.compress.archivers.sevenz.Folder[] folders>;

        $i5 = lengthof $r17;

        if i16 >= $i5 goto label13;

        $r20 = $r33.<org.apache.commons.compress.archivers.sevenz.StreamMap: int[] folderFirstFileIndex>;

        $r20[i16] = i18;

        $r21 = r1.<org.apache.commons.compress.archivers.sevenz.Archive: org.apache.commons.compress.archivers.sevenz.Folder[] folders>;

        $r22 = $r21[i16];

        $i7 = $r22.<org.apache.commons.compress.archivers.sevenz.Folder: int numUnpackSubStreams>;

        if $i7 <= 0 goto label12;

        goto label13;

     label12:
        i16 = i16 + 1;

        goto label11;

     label13:
        $r18 = r1.<org.apache.commons.compress.archivers.sevenz.Archive: org.apache.commons.compress.archivers.sevenz.Folder[] folders>;

        $i6 = lengthof $r18;

        if i16 < $i6 goto label14;

        $r34 = new java.io.IOException;

        specialinvoke $r34.<java.io.IOException: void <init>(java.lang.String)>("Too few folders in archive");

        throw $r34;

     label14:
        $r12 = $r33.<org.apache.commons.compress.archivers.sevenz.StreamMap: int[] fileFolderIndex>;

        $r12[i18] = i16;

        $r13 = r1.<org.apache.commons.compress.archivers.sevenz.Archive: org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry[] files>;

        $r14 = $r13[i18];

        $z1 = virtualinvoke $r14.<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: boolean hasStream()>();

        if $z1 != 0 goto label15;

        goto label16;

     label15:
        i17 = i17 + 1;

        $r15 = r1.<org.apache.commons.compress.archivers.sevenz.Archive: org.apache.commons.compress.archivers.sevenz.Folder[] folders>;

        $r16 = $r15[i16];

        $i4 = $r16.<org.apache.commons.compress.archivers.sevenz.Folder: int numUnpackSubStreams>;

        if i17 < $i4 goto label16;

        i16 = i16 + 1;

        i17 = 0;

     label16:
        i18 = i18 + 1;

        goto label09;

     label17:
        r1.<org.apache.commons.compress.archivers.sevenz.Archive: org.apache.commons.compress.archivers.sevenz.StreamMap streamMap> = $r33;

        return;
    }

    private void buildDecodingStream() throws java.io.IOException
    {
        byte[] $r27;
        org.apache.commons.compress.archivers.sevenz.Folder $r20;
        java.io.ByteArrayInputStream $r26;
        int[] $r3, $r12;
        org.apache.commons.compress.archivers.sevenz.Archive $r1, $r4, $r8, $r10, $r13, $r14, $r21;
        org.apache.commons.compress.archivers.sevenz.Folder[] $r9;
        boolean $z0;
        org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry[] $r5, $r22;
        org.apache.commons.compress.archivers.sevenz.StreamMap $r2, $r11, $r15;
        org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry r6, $r23;
        long $l4, $l5, $l6, $l7, $l8, $l10, $l13;
        java.lang.Iterable $r24;
        org.apache.commons.compress.archivers.sevenz.SevenZFile r0;
        long[] $r16;
        org.apache.commons.compress.utils.CRC32VerifyingInputStream $r18;
        int $i0, i1, $i2, $i3, $i9, $i11, $i12;
        org.apache.commons.compress.utils.BoundedInputStream $r25, $r28;
        java.io.InputStream $r7, $r17, $r19, $r29;

        r0 := @this: org.apache.commons.compress.archivers.sevenz.SevenZFile;

        $r1 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: org.apache.commons.compress.archivers.sevenz.Archive archive>;

        $r2 = $r1.<org.apache.commons.compress.archivers.sevenz.Archive: org.apache.commons.compress.archivers.sevenz.StreamMap streamMap>;

        $r3 = $r2.<org.apache.commons.compress.archivers.sevenz.StreamMap: int[] fileFolderIndex>;

        $i0 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: int currentEntryIndex>;

        i1 = $r3[$i0];

        if i1 >= 0 goto label1;

        $r25 = new org.apache.commons.compress.utils.BoundedInputStream;

        $r26 = new java.io.ByteArrayInputStream;

        $r27 = newarray (byte)[0];

        specialinvoke $r26.<java.io.ByteArrayInputStream: void <init>(byte[])>($r27);

        specialinvoke $r25.<org.apache.commons.compress.utils.BoundedInputStream: void <init>(java.io.InputStream,long)>($r26, 0L);

        r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.InputStream currentEntryInputStream> = $r25;

        return;

     label1:
        $r4 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: org.apache.commons.compress.archivers.sevenz.Archive archive>;

        $r5 = $r4.<org.apache.commons.compress.archivers.sevenz.Archive: org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry[] files>;

        $i2 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: int currentEntryIndex>;

        r6 = $r5[$i2];

        $i3 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: int currentFolderIndex>;

        if $i3 != i1 goto label2;

        specialinvoke r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: void drainPreviousEntry()>();

        $r21 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: org.apache.commons.compress.archivers.sevenz.Archive archive>;

        $r22 = $r21.<org.apache.commons.compress.archivers.sevenz.Archive: org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry[] files>;

        $i11 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: int currentEntryIndex>;

        $i12 = $i11 - 1;

        $r23 = $r22[$i12];

        $r24 = virtualinvoke $r23.<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: java.lang.Iterable getContentMethods()>();

        virtualinvoke r6.<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: void setContentMethods(java.lang.Iterable)>($r24);

        goto label4;

     label2:
        r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: int currentFolderIndex> = i1;

        $r7 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.InputStream currentFolderInputStream>;

        if $r7 == null goto label3;

        $r19 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.InputStream currentFolderInputStream>;

        virtualinvoke $r19.<java.io.InputStream: void close()>();

        r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.InputStream currentFolderInputStream> = null;

     label3:
        $r8 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: org.apache.commons.compress.archivers.sevenz.Archive archive>;

        $r9 = $r8.<org.apache.commons.compress.archivers.sevenz.Archive: org.apache.commons.compress.archivers.sevenz.Folder[] folders>;

        $r20 = $r9[i1];

        $r10 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: org.apache.commons.compress.archivers.sevenz.Archive archive>;

        $r11 = $r10.<org.apache.commons.compress.archivers.sevenz.Archive: org.apache.commons.compress.archivers.sevenz.StreamMap streamMap>;

        $r12 = $r11.<org.apache.commons.compress.archivers.sevenz.StreamMap: int[] folderFirstPackStreamIndex>;

        $i9 = $r12[i1];

        $r13 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: org.apache.commons.compress.archivers.sevenz.Archive archive>;

        $l4 = $r13.<org.apache.commons.compress.archivers.sevenz.Archive: long packPos>;

        $l6 = 32L + $l4;

        $r14 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: org.apache.commons.compress.archivers.sevenz.Archive archive>;

        $r15 = $r14.<org.apache.commons.compress.archivers.sevenz.Archive: org.apache.commons.compress.archivers.sevenz.StreamMap streamMap>;

        $r16 = $r15.<org.apache.commons.compress.archivers.sevenz.StreamMap: long[] packStreamOffsets>;

        $l5 = $r16[$i9];

        $l10 = $l6 + $l5;

        $r17 = specialinvoke r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.InputStream buildDecoderStack(org.apache.commons.compress.archivers.sevenz.Folder,long,int,org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry)>($r20, $l10, $i9, r6);

        r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.InputStream currentFolderInputStream> = $r17;

     label4:
        $r28 = new org.apache.commons.compress.utils.BoundedInputStream;

        $r29 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.InputStream currentFolderInputStream>;

        $l13 = virtualinvoke r6.<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: long getSize()>();

        specialinvoke $r28.<org.apache.commons.compress.utils.BoundedInputStream: void <init>(java.io.InputStream,long)>($r29, $l13);

        $z0 = virtualinvoke r6.<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: boolean getHasCrc()>();

        if $z0 == 0 goto label5;

        $r18 = new org.apache.commons.compress.utils.CRC32VerifyingInputStream;

        $l7 = virtualinvoke r6.<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: long getSize()>();

        $l8 = virtualinvoke r6.<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: long getCrcValue()>();

        specialinvoke $r18.<org.apache.commons.compress.utils.CRC32VerifyingInputStream: void <init>(java.io.InputStream,long,long)>($r28, $l7, $l8);

        r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.InputStream currentEntryInputStream> = $r18;

        goto label6;

     label5:
        r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.InputStream currentEntryInputStream> = $r28;

     label6:
        return;
    }

    private void drainPreviousEntry() throws java.io.IOException
    {
        org.apache.commons.compress.archivers.sevenz.SevenZFile r0;
        java.io.InputStream $r1, $r2, $r3;

        r0 := @this: org.apache.commons.compress.archivers.sevenz.SevenZFile;

        $r1 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.InputStream currentEntryInputStream>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.InputStream currentEntryInputStream>;

        staticinvoke <org.apache.commons.compress.utils.IOUtils: long skip(java.io.InputStream,long)>($r2, 9223372036854775807L);

        $r3 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.InputStream currentEntryInputStream>;

        virtualinvoke $r3.<java.io.InputStream: void close()>();

        r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.InputStream currentEntryInputStream> = null;

     label1:
        return;
    }

    private java.io.InputStream buildDecoderStack(org.apache.commons.compress.archivers.sevenz.Folder, long, int, org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry) throws java.io.IOException
    {
        java.io.RandomAccessFile $r1, $r5;
        byte[] $r15, $r17;
        org.apache.commons.compress.archivers.sevenz.Folder r7;
        byte $b6, $b8;
        org.apache.commons.compress.archivers.sevenz.Archive $r3;
        boolean $z0, $z1;
        org.apache.commons.compress.archivers.sevenz.Coder r13;
        org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry r10;
        org.apache.commons.compress.archivers.sevenz.BoundedRandomAccessFileInputStream $r2;
        org.apache.commons.compress.archivers.sevenz.CoderBase $r20;
        long l0, $l2, $l3, $l4, $l5, $l7;
        java.lang.Iterable $r8;
        org.apache.commons.compress.archivers.sevenz.SevenZFile r0;
        long[] $r4;
        org.apache.commons.compress.utils.CRC32VerifyingInputStream $r11;
        int i1;
        java.util.LinkedList $r6;
        java.util.Iterator $r9;
        org.apache.commons.compress.archivers.sevenz.SevenZMethod $r16;
        org.apache.commons.compress.archivers.sevenz.SevenZMethodConfiguration $r19;
        java.io.IOException $r14;
        java.lang.Object $r12, $r21;
        java.io.InputStream $r18, r22;

        r0 := @this: org.apache.commons.compress.archivers.sevenz.SevenZFile;

        r7 := @parameter0: org.apache.commons.compress.archivers.sevenz.Folder;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        r10 := @parameter3: org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry;

        $r1 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.RandomAccessFile file>;

        virtualinvoke $r1.<java.io.RandomAccessFile: void seek(long)>(l0);

        $r2 = new org.apache.commons.compress.archivers.sevenz.BoundedRandomAccessFileInputStream;

        $r5 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.RandomAccessFile file>;

        $r3 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: org.apache.commons.compress.archivers.sevenz.Archive archive>;

        $r4 = $r3.<org.apache.commons.compress.archivers.sevenz.Archive: long[] packSizes>;

        $l2 = $r4[i1];

        specialinvoke $r2.<org.apache.commons.compress.archivers.sevenz.BoundedRandomAccessFileInputStream: void <init>(java.io.RandomAccessFile,long)>($r5, $l2);

        r22 = $r2;

        $r6 = new java.util.LinkedList;

        specialinvoke $r6.<java.util.LinkedList: void <init>()>();

        $r8 = virtualinvoke r7.<org.apache.commons.compress.archivers.sevenz.Folder: java.lang.Iterable getOrderedCoders()>();

        $r9 = interfaceinvoke $r8.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r12 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.apache.commons.compress.archivers.sevenz.Coder) $r12;

        $l5 = r13.<org.apache.commons.compress.archivers.sevenz.Coder: long numInStreams>;

        $b6 = $l5 cmp 1L;

        if $b6 != 0 goto label2;

        $l7 = r13.<org.apache.commons.compress.archivers.sevenz.Coder: long numOutStreams>;

        $b8 = $l7 cmp 1L;

        if $b8 == 0 goto label3;

     label2:
        $r14 = new java.io.IOException;

        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>("Multi input/output stream coders are not yet supported");

        throw $r14;

     label3:
        $r15 = r13.<org.apache.commons.compress.archivers.sevenz.Coder: byte[] decompressionMethodId>;

        $r16 = staticinvoke <org.apache.commons.compress.archivers.sevenz.SevenZMethod: org.apache.commons.compress.archivers.sevenz.SevenZMethod byId(byte[])>($r15);

        $r17 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: byte[] password>;

        $r18 = staticinvoke <org.apache.commons.compress.archivers.sevenz.Coders: java.io.InputStream addDecoder(java.io.InputStream,org.apache.commons.compress.archivers.sevenz.Coder,byte[])>(r22, r13, $r17);

        r22 = $r18;

        $r19 = new org.apache.commons.compress.archivers.sevenz.SevenZMethodConfiguration;

        $r20 = staticinvoke <org.apache.commons.compress.archivers.sevenz.Coders: org.apache.commons.compress.archivers.sevenz.CoderBase findByMethod(org.apache.commons.compress.archivers.sevenz.SevenZMethod)>($r16);

        $r21 = virtualinvoke $r20.<org.apache.commons.compress.archivers.sevenz.CoderBase: java.lang.Object getOptionsFromCoder(org.apache.commons.compress.archivers.sevenz.Coder,java.io.InputStream)>(r13, $r18);

        specialinvoke $r19.<org.apache.commons.compress.archivers.sevenz.SevenZMethodConfiguration: void <init>(org.apache.commons.compress.archivers.sevenz.SevenZMethod,java.lang.Object)>($r16, $r21);

        virtualinvoke $r6.<java.util.LinkedList: void addFirst(java.lang.Object)>($r19);

        goto label1;

     label4:
        virtualinvoke r10.<org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry: void setContentMethods(java.lang.Iterable)>($r6);

        $z1 = r7.<org.apache.commons.compress.archivers.sevenz.Folder: boolean hasCrc>;

        if $z1 == 0 goto label5;

        $r11 = new org.apache.commons.compress.utils.CRC32VerifyingInputStream;

        $l3 = virtualinvoke r7.<org.apache.commons.compress.archivers.sevenz.Folder: long getUnpackSize()>();

        $l4 = r7.<org.apache.commons.compress.archivers.sevenz.Folder: long crc>;

        specialinvoke $r11.<org.apache.commons.compress.utils.CRC32VerifyingInputStream: void <init>(java.io.InputStream,long,long)>(r22, $l3, $l4);

        return $r11;

     label5:
        return r22;
    }

    public int read() throws java.io.IOException
    {
        org.apache.commons.compress.archivers.sevenz.SevenZFile r0;
        java.lang.IllegalStateException $r3;
        int $i0;
        java.io.InputStream $r1, $r2;

        r0 := @this: org.apache.commons.compress.archivers.sevenz.SevenZFile;

        $r1 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.InputStream currentEntryInputStream>;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No current 7z entry");

        throw $r3;

     label1:
        $r2 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.InputStream currentEntryInputStream>;

        $i0 = virtualinvoke $r2.<java.io.InputStream: int read()>();

        return $i0;
    }

    public int read(byte[]) throws java.io.IOException
    {
        org.apache.commons.compress.archivers.sevenz.SevenZFile r0;
        byte[] r1;
        int $i0, $i1;

        r0 := @this: org.apache.commons.compress.archivers.sevenz.SevenZFile;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        $i1 = virtualinvoke r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: int read(byte[],int,int)>(r1, 0, $i0);

        return $i1;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        byte[] r2;
        java.lang.IllegalStateException $r4;
        org.apache.commons.compress.archivers.sevenz.SevenZFile r0;
        int i0, i1, $i2;
        java.io.InputStream $r1, $r3;

        r0 := @this: org.apache.commons.compress.archivers.sevenz.SevenZFile;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.InputStream currentEntryInputStream>;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No current 7z entry");

        throw $r4;

     label1:
        $r3 = r0.<org.apache.commons.compress.archivers.sevenz.SevenZFile: java.io.InputStream currentEntryInputStream>;

        $i2 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>(r2, i0, i1);

        return $i2;
    }

    private static long readUint64(java.io.DataInput) throws java.io.IOException
    {
        long l1, $l2, $l3, l6, $l8, $l10, $l12, $l13, $l14, l16;
        byte $b4;
        int $i0, $i5, $i7, $i9, $i11, i15, i17;
        java.io.DataInput r0;

        r0 := @parameter0: java.io.DataInput;

        $i0 = interfaceinvoke r0.<java.io.DataInput: int readUnsignedByte()>();

        l1 = (long) $i0;

        i15 = 128;

        l16 = 0L;

        i17 = 0;

     label1:
        if i17 >= 8 goto label3;

        $l2 = (long) i15;

        $l3 = l1 & $l2;

        $b4 = $l3 cmp 0L;

        if $b4 != 0 goto label2;

        $i9 = i15 - 1;

        $l10 = (long) $i9;

        $l12 = l1 & $l10;

        $i11 = 8 * i17;

        $l13 = $l12 << $i11;

        $l14 = l16 | $l13;

        return $l14;

     label2:
        $i5 = interfaceinvoke r0.<java.io.DataInput: int readUnsignedByte()>();

        l6 = (long) $i5;

        $i7 = 8 * i17;

        $l8 = l6 << $i7;

        l16 = l16 | $l8;

        i15 = i15 >>> 1;

        i17 = i17 + 1;

        goto label1;

     label3:
        return l16;
    }

    public static boolean matches(byte[], int)
    {
        byte[] $r0, $r1, r2, $r3;
        byte $b3, $b4;
        int i0, $i1, $i2, i5, $i6, $i7;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        $r0 = <org.apache.commons.compress.archivers.sevenz.SevenZFile: byte[] sevenZSignature>;

        $i1 = lengthof $r0;

        if i0 >= $i1 goto label1;

        return 0;

     label1:
        i5 = 0;

     label2:
        $r1 = <org.apache.commons.compress.archivers.sevenz.SevenZFile: byte[] sevenZSignature>;

        $i2 = lengthof $r1;

        if i5 >= $i2 goto label4;

        $b4 = r2[i5];

        $r3 = <org.apache.commons.compress.archivers.sevenz.SevenZFile: byte[] sevenZSignature>;

        $b3 = $r3[i5];

        $i6 = (int) $b4;

        $i7 = (int) $b3;

        if $i6 == $i7 goto label3;

        return 0;

     label3:
        i5 = i5 + 1;

        goto label2;

     label4:
        return 1;
    }

    static void <clinit>()
    {
        byte[] $r0;

        <org.apache.commons.compress.archivers.sevenz.SevenZFile: int SIGNATURE_HEADER_SIZE> = 32;

        $r0 = newarray (byte)[6];

        $r0[0] = 55;

        $r0[1] = 122;

        $r0[2] = -68;

        $r0[3] = -81;

        $r0[4] = 39;

        $r0[5] = 28;

        <org.apache.commons.compress.archivers.sevenz.SevenZFile: byte[] sevenZSignature> = $r0;

        return;
    }
}
