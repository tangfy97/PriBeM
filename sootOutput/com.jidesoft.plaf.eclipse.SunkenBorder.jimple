public class com.jidesoft.plaf.eclipse.SunkenBorder extends java.lang.Object implements javax.swing.border.Border, javax.swing.plaf.UIResource
{
    protected java.awt.Color _highlight;
    protected java.awt.Color _lightHighlight;
    protected java.awt.Color _shadow;
    protected java.awt.Color _darkShadow;
    protected java.awt.Insets _insets;

    public void <init>(java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Insets)
    {
        java.awt.Color r1, r2, r3, r4;
        java.awt.Insets r5;
        com.jidesoft.plaf.eclipse.SunkenBorder r0;

        r0 := @this: com.jidesoft.plaf.eclipse.SunkenBorder;

        r1 := @parameter0: java.awt.Color;

        r2 := @parameter1: java.awt.Color;

        r3 := @parameter2: java.awt.Color;

        r4 := @parameter3: java.awt.Color;

        r5 := @parameter4: java.awt.Insets;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.jidesoft.plaf.eclipse.SunkenBorder: java.awt.Color _highlight> = r1;

        r0.<com.jidesoft.plaf.eclipse.SunkenBorder: java.awt.Color _lightHighlight> = r2;

        r0.<com.jidesoft.plaf.eclipse.SunkenBorder: java.awt.Color _shadow> = r3;

        r0.<com.jidesoft.plaf.eclipse.SunkenBorder: java.awt.Color _darkShadow> = r4;

        r0.<com.jidesoft.plaf.eclipse.SunkenBorder: java.awt.Insets _insets> = r5;

        return;
    }

    public java.awt.Insets getBorderInsets(java.awt.Component)
    {
        java.awt.Insets $r1;
        java.awt.Component r2;
        com.jidesoft.plaf.eclipse.SunkenBorder r0;

        r0 := @this: com.jidesoft.plaf.eclipse.SunkenBorder;

        r2 := @parameter0: java.awt.Component;

        $r1 = r0.<com.jidesoft.plaf.eclipse.SunkenBorder: java.awt.Insets _insets>;

        return $r1;
    }

    public boolean isBorderOpaque()
    {
        com.jidesoft.plaf.eclipse.SunkenBorder r0;

        r0 := @this: com.jidesoft.plaf.eclipse.SunkenBorder;

        return 1;
    }

    public void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int)
    {
        java.awt.Color $r6, $r7, $r8, $r9;
        java.awt.Insets $r1, $r2, $r3, $r4;
        com.jidesoft.plaf.eclipse.SunkenBorder r0;
        int $i0, $i1, $i2, $i3, i4, i5, $i6, i7, $i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        java.awt.Component r10;
        java.awt.Graphics r5;

        r0 := @this: com.jidesoft.plaf.eclipse.SunkenBorder;

        r10 := @parameter0: java.awt.Component;

        r5 := @parameter1: java.awt.Graphics;

        i4 := @parameter2: int;

        i7 := @parameter3: int;

        i5 := @parameter4: int;

        i9 := @parameter5: int;

        $r1 = r0.<com.jidesoft.plaf.eclipse.SunkenBorder: java.awt.Insets _insets>;

        $i0 = $r1.<java.awt.Insets: int top>;

        if $i0 <= 0 goto label1;

        $r9 = r0.<com.jidesoft.plaf.eclipse.SunkenBorder: java.awt.Color _shadow>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r9);

        $i19 = i4 + i5;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, i7, $i19, i7);

     label1:
        $r2 = r0.<com.jidesoft.plaf.eclipse.SunkenBorder: java.awt.Insets _insets>;

        $i1 = $r2.<java.awt.Insets: int left>;

        if $i1 <= 0 goto label2;

        $r8 = r0.<com.jidesoft.plaf.eclipse.SunkenBorder: java.awt.Color _shadow>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r8);

        $i18 = i7 + i9;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, i7, i4, $i18);

     label2:
        $r3 = r0.<com.jidesoft.plaf.eclipse.SunkenBorder: java.awt.Insets _insets>;

        $i2 = $r3.<java.awt.Insets: int bottom>;

        if $i2 <= 0 goto label3;

        $r7 = r0.<com.jidesoft.plaf.eclipse.SunkenBorder: java.awt.Color _lightHighlight>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r7);

        $i13 = i7 + i9;

        $i17 = $i13 - 1;

        $i16 = i4 + i5;

        $i14 = i7 + i9;

        $i15 = $i14 - 1;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>(i4, $i17, $i16, $i15);

     label3:
        $r4 = r0.<com.jidesoft.plaf.eclipse.SunkenBorder: java.awt.Insets _insets>;

        $i3 = $r4.<java.awt.Insets: int right>;

        if $i3 <= 0 goto label4;

        $r6 = r0.<com.jidesoft.plaf.eclipse.SunkenBorder: java.awt.Color _lightHighlight>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r6);

        $i6 = i4 + i5;

        $i12 = $i6 - 1;

        $i8 = i4 + i5;

        $i11 = $i8 - 1;

        $i10 = i7 + i9;

        virtualinvoke r5.<java.awt.Graphics: void drawLine(int,int,int,int)>($i12, i7, $i11, $i10);

     label4:
        return;
    }
}
