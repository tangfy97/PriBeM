public class org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory extends org.apache.lucene.analysis.util.TokenFilterFactory implements org.apache.lucene.analysis.util.ResourceLoaderAware
{
    private org.apache.lucene.analysis.util.CharArraySet commonWords;
    private final java.lang.String commonWordFiles;
    private final java.lang.String format;
    private final boolean ignoreCase;

    public void <init>(java.util.Map)
    {
        java.lang.IllegalArgumentException $r4;
        org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory r0;
        java.util.Map r1;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r2, $r3, $r8;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<org.apache.lucene.analysis.util.TokenFilterFactory: void <init>(java.util.Map)>(r1);

        $r2 = virtualinvoke r0.<org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory: java.lang.String get(java.util.Map,java.lang.String)>(r1, "words");

        r0.<org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory: java.lang.String commonWordFiles> = $r2;

        $r3 = virtualinvoke r0.<org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory: java.lang.String get(java.util.Map,java.lang.String)>(r1, "format");

        r0.<org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory: java.lang.String format> = $r3;

        $z0 = virtualinvoke r0.<org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory: boolean getBoolean(java.util.Map,java.lang.String,boolean)>(r1, "ignoreCase", 0);

        r0.<org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory: boolean ignoreCase> = $z0;

        $z1 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown parameters: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label1:
        return;
    }

    public void inform(org.apache.lucene.analysis.util.ResourceLoader) throws java.io.IOException
    {
        org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory r0;
        org.apache.lucene.analysis.util.CharArraySet $r2, $r7, $r9;
        org.apache.lucene.analysis.util.ResourceLoader r5;
        java.lang.String $r1, $r3, $r4, $r6, $r8;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory;

        r5 := @parameter0: org.apache.lucene.analysis.util.ResourceLoader;

        $r1 = r0.<org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory: java.lang.String commonWordFiles>;

        if $r1 == null goto label2;

        $r4 = "snowball";

        $r3 = r0.<org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory: java.lang.String format>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z0 == 0 goto label1;

        $r8 = r0.<org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory: java.lang.String commonWordFiles>;

        $z2 = r0.<org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory: boolean ignoreCase>;

        $r9 = virtualinvoke r0.<org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory: org.apache.lucene.analysis.util.CharArraySet getSnowballWordSet(org.apache.lucene.analysis.util.ResourceLoader,java.lang.String,boolean)>(r5, $r8, $z2);

        r0.<org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory: org.apache.lucene.analysis.util.CharArraySet commonWords> = $r9;

        goto label3;

     label1:
        $r6 = r0.<org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory: java.lang.String commonWordFiles>;

        $z1 = r0.<org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory: boolean ignoreCase>;

        $r7 = virtualinvoke r0.<org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory: org.apache.lucene.analysis.util.CharArraySet getWordSet(org.apache.lucene.analysis.util.ResourceLoader,java.lang.String,boolean)>(r5, $r6, $z1);

        r0.<org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory: org.apache.lucene.analysis.util.CharArraySet commonWords> = $r7;

        goto label3;

     label2:
        $r2 = <org.apache.lucene.analysis.core.StopAnalyzer: org.apache.lucene.analysis.util.CharArraySet ENGLISH_STOP_WORDS_SET>;

        r0.<org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory: org.apache.lucene.analysis.util.CharArraySet commonWords> = $r2;

     label3:
        return;
    }

    public boolean isIgnoreCase()
    {
        org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory;

        $z0 = r0.<org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory: boolean ignoreCase>;

        return $z0;
    }

    public org.apache.lucene.analysis.util.CharArraySet getCommonWords()
    {
        org.apache.lucene.analysis.util.CharArraySet $r1;
        org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory r0;

        r0 := @this: org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory;

        $r1 = r0.<org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory: org.apache.lucene.analysis.util.CharArraySet commonWords>;

        return $r1;
    }

    public org.apache.lucene.analysis.TokenFilter create(org.apache.lucene.analysis.TokenStream)
    {
        org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory r1;
        org.apache.lucene.analysis.TokenStream r2;
        org.apache.lucene.analysis.util.CharArraySet $r3;
        org.apache.lucene.analysis.commongrams.CommonGramsFilter $r0;
        org.apache.lucene.util.Version $r4;

        r1 := @this: org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory;

        r2 := @parameter0: org.apache.lucene.analysis.TokenStream;

        $r0 = new org.apache.lucene.analysis.commongrams.CommonGramsFilter;

        $r4 = r1.<org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory: org.apache.lucene.util.Version luceneMatchVersion>;

        $r3 = r1.<org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory: org.apache.lucene.analysis.util.CharArraySet commonWords>;

        specialinvoke $r0.<org.apache.lucene.analysis.commongrams.CommonGramsFilter: void <init>(org.apache.lucene.util.Version,org.apache.lucene.analysis.TokenStream,org.apache.lucene.analysis.util.CharArraySet)>($r4, r2, $r3);

        return $r0;
    }

    public volatile org.apache.lucene.analysis.TokenStream create(org.apache.lucene.analysis.TokenStream)
    {
        org.apache.lucene.analysis.TokenFilter $r2;
        org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory r0;
        org.apache.lucene.analysis.TokenStream r1;

        r0 := @this: org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory;

        r1 := @parameter0: org.apache.lucene.analysis.TokenStream;

        $r2 = virtualinvoke r0.<org.apache.lucene.analysis.commongrams.CommonGramsFilterFactory: org.apache.lucene.analysis.TokenFilter create(org.apache.lucene.analysis.TokenStream)>(r1);

        return $r2;
    }
}
