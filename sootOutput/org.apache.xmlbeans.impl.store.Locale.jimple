public final class org.apache.xmlbeans.impl.store.Locale extends java.lang.Object implements org.w3c.dom.DOMImplementation, org.apache.xmlbeans.impl.store.Saaj$SaajCallback, org.apache.xmlbeans.impl.common.XmlLocale
{
    static final int ROOT;
    static final int ELEM;
    static final int ATTR;
    static final int COMMENT;
    static final int PROCINST;
    static final int TEXT;
    static final int WS_UNSPECIFIED;
    static final int WS_PRESERVE;
    static final int WS_REPLACE;
    static final int WS_COLLAPSE;
    static final java.lang.String _xsi;
    static final java.lang.String _schema;
    static final java.lang.String _openFragUri;
    static final java.lang.String _xml1998Uri;
    static final java.lang.String _xmlnsUri;
    static final javax.xml.namespace.QName _xsiNil;
    static final javax.xml.namespace.QName _xsiType;
    static final javax.xml.namespace.QName _xsiLoc;
    static final javax.xml.namespace.QName _xsiNoLoc;
    static final javax.xml.namespace.QName _openuriFragment;
    static final javax.xml.namespace.QName _xmlFragment;
    public static final java.lang.String USE_SAME_LOCALE;
    public static final java.lang.String COPY_USE_NEW_LOCALE;
    private static java.lang.ThreadLocal tl_scrubBuffer;
    boolean _noSync;
    org.apache.xmlbeans.SchemaTypeLoader _schemaTypeLoader;
    private java.lang.ref.ReferenceQueue _refQueue;
    private int _entryCount;
    int _numTempFramesLeft;
    org.apache.xmlbeans.impl.store.Cur[] _tempFrames;
    org.apache.xmlbeans.impl.store.Cur _curPool;
    int _curPoolCount;
    org.apache.xmlbeans.impl.store.Cur _registered;
    org.apache.xmlbeans.impl.store.Locale$ChangeListener _changeListeners;
    long _versionAll;
    long _versionSansText;
    org.apache.xmlbeans.impl.store.Cur$Locations _locations;
    private org.apache.xmlbeans.impl.store.CharUtil _charUtil;
    int _offSrc;
    int _cchSrc;
    org.apache.xmlbeans.impl.store.Saaj _saaj;
    org.apache.xmlbeans.impl.store.DomImpl$Dom _ownerDoc;
    org.apache.xmlbeans.impl.store.QNameFactory _qnameFactory;
    boolean _validateOnSet;
    int _posTemp;
    org.apache.xmlbeans.impl.store.Locale$nthCache _nthCache_A;
    org.apache.xmlbeans.impl.store.Locale$nthCache _nthCache_B;
    org.apache.xmlbeans.impl.store.Locale$domNthCache _domNthCache_A;
    org.apache.xmlbeans.impl.store.Locale$domNthCache _domNthCache_B;
    static final boolean $assertionsDisabled;
    static java.lang.Class class$org$apache$xmlbeans$impl$store$Locale;
    static java.lang.Class class$org$apache$xmlbeans$impl$store$Locale$DocProps;

    private void <init>(org.apache.xmlbeans.SchemaTypeLoader, org.apache.xmlbeans.XmlOptions)
    {
        java.lang.IllegalStateException $r13;
        org.apache.xmlbeans.impl.store.Cur$Locations $r8;
        org.apache.xmlbeans.impl.store.Cur[] $r6;
        org.apache.xmlbeans.impl.store.Locale$domNthCache $r3, $r4;
        java.lang.StringBuffer $r14, $r15, $r16;
        java.lang.String $r17;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.store.Locale$nthCache $r1, $r2;
        org.apache.xmlbeans.SchemaTypeLoader r9;
        org.apache.xmlbeans.impl.store.Locale$DefaultQNameFactory $r7;
        org.apache.xmlbeans.impl.store.Saaj $r11, $r12;
        org.apache.xmlbeans.XmlOptions $r5, r18;
        org.apache.xmlbeans.impl.store.Locale r0;
        java.lang.Object $r10;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        r9 := @parameter0: org.apache.xmlbeans.SchemaTypeLoader;

        r18 := @parameter1: org.apache.xmlbeans.XmlOptions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.xmlbeans.impl.store.Locale$nthCache;

        specialinvoke $r1.<org.apache.xmlbeans.impl.store.Locale$nthCache: void <init>(org.apache.xmlbeans.impl.store.Locale)>(r0);

        r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$nthCache _nthCache_A> = $r1;

        $r2 = new org.apache.xmlbeans.impl.store.Locale$nthCache;

        specialinvoke $r2.<org.apache.xmlbeans.impl.store.Locale$nthCache: void <init>(org.apache.xmlbeans.impl.store.Locale)>(r0);

        r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$nthCache _nthCache_B> = $r2;

        $r3 = new org.apache.xmlbeans.impl.store.Locale$domNthCache;

        specialinvoke $r3.<org.apache.xmlbeans.impl.store.Locale$domNthCache: void <init>(org.apache.xmlbeans.impl.store.Locale)>(r0);

        r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$domNthCache _domNthCache_A> = $r3;

        $r4 = new org.apache.xmlbeans.impl.store.Locale$domNthCache;

        specialinvoke $r4.<org.apache.xmlbeans.impl.store.Locale$domNthCache: void <init>(org.apache.xmlbeans.impl.store.Locale)>(r0);

        r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$domNthCache _domNthCache_B> = $r4;

        $r5 = staticinvoke <org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions maskNull(org.apache.xmlbeans.XmlOptions)>(r18);

        $z0 = virtualinvoke $r5.<org.apache.xmlbeans.XmlOptions: boolean hasOption(java.lang.Object)>("UNSYNCHRONIZED");

        r0.<org.apache.xmlbeans.impl.store.Locale: boolean _noSync> = $z0;

        r0.<org.apache.xmlbeans.impl.store.Locale: int _numTempFramesLeft> = 8;

        $r6 = newarray (org.apache.xmlbeans.impl.store.Cur)[8];

        r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur[] _tempFrames> = $r6;

        $r7 = new org.apache.xmlbeans.impl.store.Locale$DefaultQNameFactory;

        specialinvoke $r7.<org.apache.xmlbeans.impl.store.Locale$DefaultQNameFactory: void <init>(org.apache.xmlbeans.impl.store.Locale$1)>(null);

        r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.QNameFactory _qnameFactory> = $r7;

        $r8 = new org.apache.xmlbeans.impl.store.Cur$Locations;

        specialinvoke $r8.<org.apache.xmlbeans.impl.store.Cur$Locations: void <init>(org.apache.xmlbeans.impl.store.Locale)>(r0);

        r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur$Locations _locations> = $r8;

        r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.SchemaTypeLoader _schemaTypeLoader> = r9;

        $z1 = virtualinvoke $r5.<org.apache.xmlbeans.XmlOptions: boolean hasOption(java.lang.Object)>("VALIDATE_ON_SET");

        r0.<org.apache.xmlbeans.impl.store.Locale: boolean _validateOnSet> = $z1;

        $r10 = virtualinvoke $r5.<org.apache.xmlbeans.XmlOptions: java.lang.Object get(java.lang.Object)>("SAAJ_IMPL");

        if $r10 == null goto label2;

        $z2 = $r10 instanceof org.apache.xmlbeans.impl.store.Saaj;

        if $z2 != 0 goto label1;

        $r13 = new java.lang.IllegalStateException;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Saaj impl not correct type: ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r10);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r17);

        throw $r13;

     label1:
        $r11 = (org.apache.xmlbeans.impl.store.Saaj) $r10;

        r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Saaj _saaj> = $r11;

        $r12 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Saaj _saaj>;

        interfaceinvoke $r12.<org.apache.xmlbeans.impl.store.Saaj: void setCallback(org.apache.xmlbeans.impl.store.Saaj$SaajCallback)>(r0);

     label2:
        return;
    }

    static org.apache.xmlbeans.impl.store.Locale getLocale(org.apache.xmlbeans.SchemaTypeLoader, org.apache.xmlbeans.XmlOptions)
    {
        java.lang.StringBuffer $r4, $r5, $r6;
        java.lang.String $r7;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.xmlbeans.XmlTokenSource $r8;
        org.apache.xmlbeans.SchemaTypeLoader $r10, r17;
        java.lang.IllegalArgumentException $r3, $r12, $r15, $r16;
        org.apache.xmlbeans.impl.store.Saaj $r11, $r13;
        org.apache.xmlbeans.XmlOptions $r0, r18;
        org.apache.xmlbeans.impl.store.Locale $r1, r19;
        java.lang.Object $r2, $r9, $r14;

        r17 := @parameter0: org.apache.xmlbeans.SchemaTypeLoader;

        r18 := @parameter1: org.apache.xmlbeans.XmlOptions;

        if r17 != null goto label1;

        r17 = staticinvoke <org.apache.xmlbeans.XmlBeans: org.apache.xmlbeans.SchemaTypeLoader getContextTypeLoader()>();

     label1:
        $r0 = staticinvoke <org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions maskNull(org.apache.xmlbeans.XmlOptions)>(r18);

        $z0 = virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: boolean hasOption(java.lang.Object)>("USE_SAME_LOCALE");

        if $z0 == 0 goto label8;

        $r2 = virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: java.lang.Object get(java.lang.Object)>("USE_SAME_LOCALE");

        $z1 = $r2 instanceof org.apache.xmlbeans.impl.store.Locale;

        if $z1 == 0 goto label2;

        r19 = (org.apache.xmlbeans.impl.store.Locale) $r2;

        goto label4;

     label2:
        $z2 = $r2 instanceof org.apache.xmlbeans.XmlTokenSource;

        if $z2 == 0 goto label3;

        $r8 = (org.apache.xmlbeans.XmlTokenSource) $r2;

        $r9 = interfaceinvoke $r8.<org.apache.xmlbeans.XmlTokenSource: java.lang.Object monitor()>();

        r19 = (org.apache.xmlbeans.impl.store.Locale) $r9;

        goto label4;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Source locale not understood: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label4:
        $r10 = r19.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.SchemaTypeLoader _schemaTypeLoader>;

        if $r10 == r17 goto label5;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Source locale does not support same schema type loader");

        throw $r16;

     label5:
        $r11 = r19.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Saaj _saaj>;

        if $r11 == null goto label6;

        $r13 = r19.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Saaj _saaj>;

        $r14 = virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: java.lang.Object get(java.lang.Object)>("SAAJ_IMPL");

        if $r13 == $r14 goto label6;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Source locale does not support same saaj");

        throw $r15;

     label6:
        $z3 = r19.<org.apache.xmlbeans.impl.store.Locale: boolean _validateOnSet>;

        if $z3 == 0 goto label7;

        $z4 = virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: boolean hasOption(java.lang.Object)>("VALIDATE_ON_SET");

        if $z4 != 0 goto label7;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Source locale does not support same validate on set");

        throw $r12;

     label7:
        goto label9;

     label8:
        $r1 = new org.apache.xmlbeans.impl.store.Locale;

        specialinvoke $r1.<org.apache.xmlbeans.impl.store.Locale: void <init>(org.apache.xmlbeans.SchemaTypeLoader,org.apache.xmlbeans.XmlOptions)>(r17, $r0);

        r19 = $r1;

     label9:
        return r19;
    }

    static void associateSourceName(org.apache.xmlbeans.impl.store.Cur, org.apache.xmlbeans.XmlOptions)
    {
        org.apache.xmlbeans.XmlDocumentProperties $r4;
        org.apache.xmlbeans.XmlOptions r0;
        java.lang.Object $r1;
        java.lang.String r2;
        org.apache.xmlbeans.impl.store.Cur r3;

        r3 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        r0 := @parameter1: org.apache.xmlbeans.XmlOptions;

        $r1 = staticinvoke <org.apache.xmlbeans.XmlOptions: java.lang.Object safeGet(org.apache.xmlbeans.XmlOptions,java.lang.Object)>(r0, "DOCUMENT_SOURCE_NAME");

        r2 = (java.lang.String) $r1;

        if r2 == null goto label1;

        $r4 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.XmlDocumentProperties getDocProps(org.apache.xmlbeans.impl.store.Cur,boolean)>(r3, 1);

        virtualinvoke $r4.<org.apache.xmlbeans.XmlDocumentProperties: void setSourceName(java.lang.String)>(r2);

     label1:
        return;
    }

    static void autoTypeDocument(org.apache.xmlbeans.impl.store.Cur, org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.XmlOptions) throws org.apache.xmlbeans.XmlException
    {
        org.apache.xmlbeans.SchemaType r2, $r14, $r28, r31, $r32, r33, $r35;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        javax.xml.namespace.QName $r4, $r7, $r8, $r11, $r15, $r27, $r34;
        org.apache.xmlbeans.impl.store.Cur r3;
        java.lang.AssertionError $r26, $r29;
        java.lang.StringBuffer $r17, $r18, $r20, $r21, $r23, $r24;
        java.lang.String $r19, $r22, $r25;
        org.apache.xmlbeans.SchemaTypeLoader $r6, $r10, $r13;
        org.apache.xmlbeans.XmlException $r16;
        org.apache.xmlbeans.XmlOptions $r0, r30;
        org.apache.xmlbeans.impl.store.Locale $r5, $r9, $r12;
        java.lang.Object $r1;

        r3 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        r2 := @parameter1: org.apache.xmlbeans.SchemaType;

        r30 := @parameter2: org.apache.xmlbeans.XmlOptions;

        $z0 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $z14 = virtualinvoke r3.<org.apache.xmlbeans.impl.store.Cur: boolean isRoot()>();

        if $z14 != 0 goto label01;

        $r29 = new java.lang.AssertionError;

        specialinvoke $r29.<java.lang.AssertionError: void <init>()>();

        throw $r29;

     label01:
        $r0 = staticinvoke <org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions maskNull(org.apache.xmlbeans.XmlOptions)>(r30);

        $r1 = virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: java.lang.Object get(java.lang.Object)>("DOCUMENT_TYPE");

        $r28 = (org.apache.xmlbeans.SchemaType) $r1;

        if $r28 == null goto label02;

        virtualinvoke r3.<org.apache.xmlbeans.impl.store.Cur: void setType(org.apache.xmlbeans.SchemaType)>($r28);

        return;

     label02:
        r31 = null;

        if r2 == null goto label03;

        $r27 = interfaceinvoke r2.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        if $r27 == null goto label07;

     label03:
        $r4 = virtualinvoke r3.<org.apache.xmlbeans.impl.store.Cur: javax.xml.namespace.QName getXsiTypeName()>();

        if $r4 != null goto label04;

        $r32 = null;

        goto label05;

     label04:
        $r5 = r3.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r6 = $r5.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.SchemaTypeLoader _schemaTypeLoader>;

        $r32 = interfaceinvoke $r6.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaType findType(javax.xml.namespace.QName)>($r4);

     label05:
        r33 = $r32;

        if r2 == null goto label06;

        $z13 = interfaceinvoke r2.<org.apache.xmlbeans.SchemaType: boolean isAssignableFrom(org.apache.xmlbeans.SchemaType)>($r32);

        if $z13 == 0 goto label07;

     label06:
        r31 = r33;

     label07:
        if r31 != null goto label12;

        if r2 == null goto label08;

        $z12 = interfaceinvoke r2.<org.apache.xmlbeans.SchemaType: boolean isDocumentType()>();

        if $z12 == 0 goto label12;

     label08:
        $z5 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z5 != 0 goto label09;

        $z11 = virtualinvoke r3.<org.apache.xmlbeans.impl.store.Cur: boolean isRoot()>();

        if $z11 != 0 goto label09;

        $r26 = new java.lang.AssertionError;

        specialinvoke $r26.<java.lang.AssertionError: void <init>()>();

        throw $r26;

     label09:
        virtualinvoke r3.<org.apache.xmlbeans.impl.store.Cur: void push()>();

        $z6 = virtualinvoke r3.<org.apache.xmlbeans.impl.store.Cur: boolean hasAttrs()>();

        if $z6 != 0 goto label10;

        $z9 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: boolean toFirstChildElement(org.apache.xmlbeans.impl.store.Cur)>(r3);

        if $z9 == 0 goto label10;

        $z10 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: boolean toNextSiblingElement(org.apache.xmlbeans.impl.store.Cur)>(r3);

        if $z10 != 0 goto label10;

        $r34 = virtualinvoke r3.<org.apache.xmlbeans.impl.store.Cur: javax.xml.namespace.QName getName()>();

        goto label11;

     label10:
        $r34 = null;

     label11:
        virtualinvoke r3.<org.apache.xmlbeans.impl.store.Cur: boolean pop()>();

        if $r34 == null goto label12;

        $r12 = r3.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r13 = $r12.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.SchemaTypeLoader _schemaTypeLoader>;

        $r14 = interfaceinvoke $r13.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaType findDocumentType(javax.xml.namespace.QName)>($r34);

        r31 = $r14;

        if $r14 == null goto label12;

        if r2 == null goto label12;

        $r15 = interfaceinvoke r2.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getDocumentElementName()>();

        $z7 = virtualinvoke $r15.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r34);

        if $z7 != 0 goto label12;

        $z8 = interfaceinvoke r2.<org.apache.xmlbeans.SchemaType: boolean isValidSubstitution(javax.xml.namespace.QName)>($r34);

        if $z8 != 0 goto label12;

        $r16 = new org.apache.xmlbeans.XmlException;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Element ");

        $r19 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>($r34);

        $r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is not a valid ");

        $r22 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>($r15);

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" document or a valid substitution.");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r16.<org.apache.xmlbeans.XmlException: void <init>(java.lang.String)>($r25);

        throw $r16;

     label12:
        if r31 != null goto label15;

        if r2 != null goto label15;

        virtualinvoke r3.<org.apache.xmlbeans.impl.store.Cur: void push()>();

        $z3 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: boolean toFirstNormalAttr(org.apache.xmlbeans.impl.store.Cur)>(r3);

        if $z3 == 0 goto label13;

        $z4 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: boolean toNextNormalAttr(org.apache.xmlbeans.impl.store.Cur)>(r3);

        if $z4 != 0 goto label13;

        $r9 = r3.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r10 = $r9.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.SchemaTypeLoader _schemaTypeLoader>;

        $r11 = virtualinvoke r3.<org.apache.xmlbeans.impl.store.Cur: javax.xml.namespace.QName getName()>();

        $r35 = interfaceinvoke $r10.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaType findAttributeType(javax.xml.namespace.QName)>($r11);

        goto label14;

     label13:
        $r35 = null;

     label14:
        r31 = $r35;

        virtualinvoke r3.<org.apache.xmlbeans.impl.store.Cur: boolean pop()>();

     label15:
        if r31 != null goto label16;

        r31 = r2;

     label16:
        if r31 != null goto label17;

        r31 = <org.apache.xmlbeans.XmlBeans: org.apache.xmlbeans.SchemaType NO_TYPE>;

     label17:
        virtualinvoke r3.<org.apache.xmlbeans.impl.store.Cur: void setType(org.apache.xmlbeans.SchemaType)>(r31);

        if r2 == null goto label19;

        $z1 = interfaceinvoke r31.<org.apache.xmlbeans.SchemaType: boolean isDocumentType()>();

        if $z1 == 0 goto label18;

        $r8 = interfaceinvoke r31.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getDocumentElementName()>();

        staticinvoke <org.apache.xmlbeans.impl.store.Locale: void verifyDocumentType(org.apache.xmlbeans.impl.store.Cur,javax.xml.namespace.QName)>(r3, $r8);

        goto label19;

     label18:
        $z2 = interfaceinvoke r31.<org.apache.xmlbeans.SchemaType: boolean isAttributeType()>();

        if $z2 == 0 goto label19;

        $r7 = interfaceinvoke r31.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getAttributeTypeAttributeName()>();

        staticinvoke <org.apache.xmlbeans.impl.store.Locale: void verifyAttributeType(org.apache.xmlbeans.impl.store.Cur,javax.xml.namespace.QName)>(r3, $r7);

     label19:
        return;
    }

    private static boolean namespacesSame(javax.xml.namespace.QName, javax.xml.namespace.QName)
    {
        javax.xml.namespace.QName r0, r1;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7;
        boolean $z0;

        r0 := @parameter0: javax.xml.namespace.QName;

        r1 := @parameter1: javax.xml.namespace.QName;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r0 == null goto label2;

        if r1 != null goto label3;

     label2:
        return 0;

     label3:
        $r2 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r3 = virtualinvoke r1.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        if $r2 != $r3 goto label4;

        return 1;

     label4:
        $r4 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        if $r4 == null goto label5;

        $r5 = virtualinvoke r1.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        if $r5 != null goto label6;

     label5:
        return 0;

     label6:
        $r6 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r7 = virtualinvoke r1.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        return $z0;
    }

    private static void addNamespace(java.lang.StringBuffer, javax.xml.namespace.QName)
    {
        java.lang.StringBuffer r2;
        javax.xml.namespace.QName r0;
        java.lang.String $r1, $r3;

        r2 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: javax.xml.namespace.QName;

        $r1 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        if $r1 != null goto label1;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<no namespace>");

        goto label2;

     label1:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r3 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

     label2:
        return;
    }

    private static void verifyDocumentType(org.apache.xmlbeans.impl.store.Cur, javax.xml.namespace.QName) throws org.apache.xmlbeans.XmlException
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.apache.xmlbeans.XmlError $r6;
        javax.xml.namespace.QName r2, $r9;
        org.apache.xmlbeans.impl.store.Cur r0;
        java.lang.Throwable $r26;
        java.lang.AssertionError $r25;
        java.lang.StringBuffer $r1, $r10, $r15, $r16, $r18, $r20, $r21, $r23, r27;
        java.lang.String $r3, $r4, $r8, $r11, $r12, $r13, $r14, $r17, $r19, $r22, $r24, $r28;
        org.apache.xmlbeans.XmlException $r7;
        org.apache.xmlbeans.impl.store.Cursor $r5;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        r2 := @parameter1: javax.xml.namespace.QName;

        $z0 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $z7 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isRoot()>();

        if $z7 != 0 goto label01;

        $r25 = new java.lang.AssertionError;

        specialinvoke $r25.<java.lang.AssertionError: void <init>()>();

        throw $r25;

     label01:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void push()>();

     label02:
        r27 = null;

        $z1 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: boolean toFirstChildElement(org.apache.xmlbeans.impl.store.Cur)>(r0);

        if $z1 == 0 goto label03;

        $z3 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: boolean toNextSiblingElement(org.apache.xmlbeans.impl.store.Cur)>(r0);

        if $z3 == 0 goto label06;

     label03:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        r27 = $r1;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The document is not a ");

        $r3 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>(r2);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isRoot()>();

        if $z2 == 0 goto label04;

        $r28 = ": no document element";

        goto label05;

     label04:
        $r28 = ": multiple document elements";

     label05:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r28);

        goto label09;

     label06:
        $r9 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: javax.xml.namespace.QName getName()>();

        $z4 = virtualinvoke $r9.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>(r2);

        if $z4 != 0 goto label09;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        r27 = $r10;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The document is not a ");

        $r11 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>(r2);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r12 = virtualinvoke r2.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r13 = virtualinvoke $r9.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z5 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z5 == 0 goto label07;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": document element namespace mismatch ");

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("expected ");

        staticinvoke <org.apache.xmlbeans.impl.store.Locale: void addNamespace(java.lang.StringBuffer,javax.xml.namespace.QName)>($r10, r2);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" got ");

        staticinvoke <org.apache.xmlbeans.impl.store.Locale: void addNamespace(java.lang.StringBuffer,javax.xml.namespace.QName)>($r10, $r9);

        goto label09;

     label07:
        $z6 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: boolean namespacesSame(javax.xml.namespace.QName,javax.xml.namespace.QName)>(r2, $r9);

        if $z6 == 0 goto label08;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": document element local name mismatch ");

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("expected ");

        $r17 = virtualinvoke r2.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" got ");

        $r22 = virtualinvoke $r9.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        goto label09;

     label08:
        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": document element mismatch ");

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("got ");

        $r14 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>($r9);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

     label09:
        if r27 == null goto label10;

        $r4 = virtualinvoke r27.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = new org.apache.xmlbeans.impl.store.Cursor;

        specialinvoke $r5.<org.apache.xmlbeans.impl.store.Cursor: void <init>(org.apache.xmlbeans.impl.store.Cur)>(r0);

        $r6 = staticinvoke <org.apache.xmlbeans.XmlError: org.apache.xmlbeans.XmlError forCursor(java.lang.String,org.apache.xmlbeans.XmlCursor)>($r4, $r5);

        $r7 = new org.apache.xmlbeans.XmlException;

        $r8 = virtualinvoke $r6.<org.apache.xmlbeans.XmlError: java.lang.String toString()>();

        specialinvoke $r7.<org.apache.xmlbeans.XmlException: void <init>(java.lang.String,java.lang.Throwable,org.apache.xmlbeans.XmlError)>($r8, null, $r6);

        throw $r7;

     label10:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean pop()>();

        goto label13;

     label11:
        $r26 := @caughtexception;

     label12:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean pop()>();

        throw $r26;

     label13:
        return;

        catch java.lang.Throwable from label02 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    private static void verifyAttributeType(org.apache.xmlbeans.impl.store.Cur, javax.xml.namespace.QName) throws org.apache.xmlbeans.XmlException
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.apache.xmlbeans.XmlError $r6;
        javax.xml.namespace.QName r2, $r9;
        org.apache.xmlbeans.impl.store.Cur r0;
        java.lang.Throwable $r26;
        java.lang.AssertionError $r25;
        java.lang.StringBuffer $r1, $r10, $r15, $r16, $r18, $r20, $r21, $r23, r27;
        java.lang.String $r3, $r4, $r8, $r11, $r12, $r13, $r14, $r17, $r19, $r22, $r24, $r28;
        org.apache.xmlbeans.XmlException $r7;
        org.apache.xmlbeans.impl.store.Cursor $r5;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        r2 := @parameter1: javax.xml.namespace.QName;

        $z0 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $z7 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isRoot()>();

        if $z7 != 0 goto label01;

        $r25 = new java.lang.AssertionError;

        specialinvoke $r25.<java.lang.AssertionError: void <init>()>();

        throw $r25;

     label01:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void push()>();

     label02:
        r27 = null;

        $z1 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: boolean toFirstNormalAttr(org.apache.xmlbeans.impl.store.Cur)>(r0);

        if $z1 == 0 goto label03;

        $z3 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: boolean toNextNormalAttr(org.apache.xmlbeans.impl.store.Cur)>(r0);

        if $z3 == 0 goto label06;

     label03:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        r27 = $r1;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The document is not a ");

        $r3 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>(r2);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isRoot()>();

        if $z2 == 0 goto label04;

        $r28 = ": no attributes";

        goto label05;

     label04:
        $r28 = ": multiple attributes";

     label05:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r28);

        goto label09;

     label06:
        $r9 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: javax.xml.namespace.QName getName()>();

        $z4 = virtualinvoke $r9.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>(r2);

        if $z4 != 0 goto label09;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        r27 = $r10;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The document is not a ");

        $r11 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>(r2);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r12 = virtualinvoke r2.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r13 = virtualinvoke $r9.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z5 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z5 == 0 goto label07;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": attribute namespace mismatch ");

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("expected ");

        staticinvoke <org.apache.xmlbeans.impl.store.Locale: void addNamespace(java.lang.StringBuffer,javax.xml.namespace.QName)>($r10, r2);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" got ");

        staticinvoke <org.apache.xmlbeans.impl.store.Locale: void addNamespace(java.lang.StringBuffer,javax.xml.namespace.QName)>($r10, $r9);

        goto label09;

     label07:
        $z6 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: boolean namespacesSame(javax.xml.namespace.QName,javax.xml.namespace.QName)>(r2, $r9);

        if $z6 == 0 goto label08;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": attribute local name mismatch ");

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("expected ");

        $r17 = virtualinvoke r2.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" got ");

        $r22 = virtualinvoke $r9.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        goto label09;

     label08:
        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": attribute element mismatch ");

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("got ");

        $r14 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>($r9);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

     label09:
        if r27 == null goto label10;

        $r4 = virtualinvoke r27.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = new org.apache.xmlbeans.impl.store.Cursor;

        specialinvoke $r5.<org.apache.xmlbeans.impl.store.Cursor: void <init>(org.apache.xmlbeans.impl.store.Cur)>(r0);

        $r6 = staticinvoke <org.apache.xmlbeans.XmlError: org.apache.xmlbeans.XmlError forCursor(java.lang.String,org.apache.xmlbeans.XmlCursor)>($r4, $r5);

        $r7 = new org.apache.xmlbeans.XmlException;

        $r8 = virtualinvoke $r6.<org.apache.xmlbeans.XmlError: java.lang.String toString()>();

        specialinvoke $r7.<org.apache.xmlbeans.XmlException: void <init>(java.lang.String,java.lang.Throwable,org.apache.xmlbeans.XmlError)>($r8, null, $r6);

        throw $r7;

     label10:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean pop()>();

        goto label13;

     label11:
        $r26 := @caughtexception;

     label12:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean pop()>();

        throw $r26;

     label13:
        return;

        catch java.lang.Throwable from label02 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    static boolean isFragmentQName(javax.xml.namespace.QName)
    {
        javax.xml.namespace.QName r0, $r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: javax.xml.namespace.QName;

        $r1 = <org.apache.xmlbeans.impl.store.Locale: javax.xml.namespace.QName _openuriFragment>;

        $z0 = virtualinvoke r0.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r2 = <org.apache.xmlbeans.impl.store.Locale: javax.xml.namespace.QName _xmlFragment>;

        $z1 = virtualinvoke r0.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    static boolean isFragment(org.apache.xmlbeans.impl.store.Cur, org.apache.xmlbeans.impl.store.Cur)
    {
        java.lang.AssertionError $r5, $r6;
        int $i0, i1, $i3;
        java.lang.String $r3;
        boolean $z0, $z1, $z2, $z3, z4, $z5, $z6;
        org.apache.xmlbeans.impl.store.Cur r0, r1;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter1: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $z3 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: boolean isAttr()>();

        if $z3 == 0 goto label01;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label01:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void push()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: void push()>();

        i1 = 0;

        z4 = 0;

     label02:
        $z5 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isSamePos(org.apache.xmlbeans.impl.store.Cur)>(r1);

        if $z5 != 0 goto label08;

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: int kind()>();

        if $i0 != 3 goto label03;

        goto label08;

     label03:
        if $i0 != 0 goto label04;

        $i3 = (int) -1;

        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: java.lang.String getCharsAsString(int)>($i3);

        $z2 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: boolean isWhiteSpace(java.lang.String)>($r3);

        if $z2 != 0 goto label04;

        z4 = 1;

        goto label08;

     label04:
        if $i0 != 2 goto label05;

        i1 = i1 + 1;

        if i1 <= 1 goto label05;

        z4 = 1;

        goto label08;

     label05:
        $z1 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z1 != 0 goto label06;

        if $i0 != 3 goto label06;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label06:
        if $i0 == 0 goto label07;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void toEnd()>();

     label07:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean next()>();

        goto label02;

     label08:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean pop()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Cur: boolean pop()>();

        if z4 != 0 goto label09;

        if i1 == 1 goto label10;

     label09:
        $z6 = 1;

        goto label11;

     label10:
        $z6 = 0;

     label11:
        return $z6;
    }

    public static org.apache.xmlbeans.XmlObject newInstance(org.apache.xmlbeans.SchemaTypeLoader, org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.XmlOptions)
    {
        java.lang.Throwable $r6, $r7, $r8;
        org.apache.xmlbeans.SchemaTypeLoader r0;
        org.apache.xmlbeans.XmlOptions r1;
        org.apache.xmlbeans.impl.store.Locale $r2;
        org.apache.xmlbeans.XmlObject $r4, $r5;
        org.apache.xmlbeans.SchemaType r3;
        boolean $z0;

        r0 := @parameter0: org.apache.xmlbeans.SchemaTypeLoader;

        r3 := @parameter1: org.apache.xmlbeans.SchemaType;

        r1 := @parameter2: org.apache.xmlbeans.XmlOptions;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale getLocale(org.apache.xmlbeans.SchemaTypeLoader,org.apache.xmlbeans.XmlOptions)>(r0, r1);

        $z0 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: boolean noSync()>();

        if $z0 == 0 goto label05;

        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void enter()>();

     label01:
        $r5 = specialinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.XmlObject newInstance(org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>(r3, r1);

     label02:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        return $r5;

     label03:
        $r8 := @caughtexception;

     label04:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        throw $r8;

     label05:
        entermonitor $r2;

     label06:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void enter()>();

     label07:
        $r4 = specialinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.XmlObject newInstance(org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>(r3, r1);

     label08:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        exitmonitor $r2;

     label09:
        return $r4;

     label10:
        $r7 := @caughtexception;

     label11:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        throw $r7;

     label12:
        $r6 := @caughtexception;

        exitmonitor $r2;

     label13:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label06 to label09 with label12;
        catch java.lang.Throwable from label10 to label13 with label12;
    }

    private org.apache.xmlbeans.XmlObject newInstance(org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.XmlOptions)
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.XmlOptions $r0, r7;
        org.apache.xmlbeans.impl.store.Locale r1;
        java.lang.Object $r3;
        org.apache.xmlbeans.XmlObject $r5;
        org.apache.xmlbeans.SchemaType r6, r8, $r9;
        org.apache.xmlbeans.impl.store.Cur $r2;
        boolean $z0;

        r1 := @this: org.apache.xmlbeans.impl.store.Locale;

        r6 := @parameter0: org.apache.xmlbeans.SchemaType;

        r7 := @parameter1: org.apache.xmlbeans.XmlOptions;

        $r0 = staticinvoke <org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions maskNull(org.apache.xmlbeans.XmlOptions)>(r7);

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur tempCur()>();

        $r3 = virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: java.lang.Object get(java.lang.Object)>("DOCUMENT_TYPE");

        r8 = (org.apache.xmlbeans.SchemaType) $r3;

        if r8 != null goto label3;

        if r6 != null goto label1;

        $r9 = <org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.SchemaType type>;

        goto label2;

     label1:
        $r9 = r6;

     label2:
        r8 = $r9;

     label3:
        $z0 = interfaceinvoke r8.<org.apache.xmlbeans.SchemaType: boolean isDocumentType()>();

        if $z0 == 0 goto label4;

        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Cur: void createDomDocumentRoot()>();

        goto label5;

     label4:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Cur: void createRoot()>();

     label5:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Cur: void setType(org.apache.xmlbeans.SchemaType)>(r8);

        $r4 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.values.TypeStoreUser getUser()>();

        $r5 = (org.apache.xmlbeans.XmlObject) $r4;

        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Cur: void release()>();

        return $r5;
    }

    public static org.w3c.dom.DOMImplementation newDomImplementation(org.apache.xmlbeans.SchemaTypeLoader, org.apache.xmlbeans.XmlOptions)
    {
        org.apache.xmlbeans.impl.store.Locale $r2;
        org.apache.xmlbeans.XmlOptions r1;
        org.apache.xmlbeans.SchemaTypeLoader r0;

        r0 := @parameter0: org.apache.xmlbeans.SchemaTypeLoader;

        r1 := @parameter1: org.apache.xmlbeans.XmlOptions;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale getLocale(org.apache.xmlbeans.SchemaTypeLoader,org.apache.xmlbeans.XmlOptions)>(r0, r1);

        return $r2;
    }

    public static org.apache.xmlbeans.XmlObject parseToXmlObject(org.apache.xmlbeans.SchemaTypeLoader, java.lang.String, org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.XmlOptions) throws org.apache.xmlbeans.XmlException
    {
        java.lang.Throwable $r7, $r8, $r9;
        org.apache.xmlbeans.SchemaTypeLoader r0;
        org.apache.xmlbeans.XmlOptions r1;
        org.apache.xmlbeans.impl.store.Locale $r2;
        java.lang.String r3;
        org.apache.xmlbeans.XmlObject $r5, $r6;
        org.apache.xmlbeans.SchemaType r4;
        boolean $z0;

        r0 := @parameter0: org.apache.xmlbeans.SchemaTypeLoader;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: org.apache.xmlbeans.SchemaType;

        r1 := @parameter3: org.apache.xmlbeans.XmlOptions;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale getLocale(org.apache.xmlbeans.SchemaTypeLoader,org.apache.xmlbeans.XmlOptions)>(r0, r1);

        $z0 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: boolean noSync()>();

        if $z0 == 0 goto label05;

        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void enter()>();

     label01:
        $r6 = specialinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.XmlObject parseToXmlObject(java.lang.String,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>(r3, r4, r1);

     label02:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        return $r6;

     label03:
        $r9 := @caughtexception;

     label04:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        throw $r9;

     label05:
        entermonitor $r2;

     label06:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void enter()>();

     label07:
        $r5 = specialinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.XmlObject parseToXmlObject(java.lang.String,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>(r3, r4, r1);

     label08:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        exitmonitor $r2;

     label09:
        return $r5;

     label10:
        $r8 := @caughtexception;

     label11:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        throw $r8;

     label12:
        $r7 := @caughtexception;

        exitmonitor $r2;

     label13:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label06 to label09 with label12;
        catch java.lang.Throwable from label10 to label13 with label12;
    }

    private org.apache.xmlbeans.XmlObject parseToXmlObject(java.lang.String, org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.XmlOptions) throws org.apache.xmlbeans.XmlException
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r5;
        org.apache.xmlbeans.XmlOptions r3;
        org.apache.xmlbeans.impl.store.Locale r0;
        java.lang.String r1;
        org.apache.xmlbeans.XmlObject r6;
        org.apache.xmlbeans.SchemaType r2;
        org.apache.xmlbeans.impl.store.Cur $r4;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.xmlbeans.SchemaType;

        r3 := @parameter2: org.apache.xmlbeans.XmlOptions;

        $r4 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur parse(java.lang.String,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>(r1, r2, r3);

        $r5 = virtualinvoke $r4.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.values.TypeStoreUser getUser()>();

        r6 = (org.apache.xmlbeans.XmlObject) $r5;

        virtualinvoke $r4.<org.apache.xmlbeans.impl.store.Cur: void release()>();

        return r6;
    }

    org.apache.xmlbeans.impl.store.Cur parse(java.lang.String, org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.XmlOptions) throws org.apache.xmlbeans.XmlException
    {
        java.lang.Throwable $r9;
        java.lang.AssertionError $r13;
        java.lang.String r1, $r12;
        org.apache.xmlbeans.SchemaType r7;
        boolean $z0;
        org.apache.xmlbeans.impl.store.Locale$SaxLoader $r3;
        org.xml.sax.InputSource $r5;
        java.io.IOException $r8, $r10, $r14;
        org.apache.xmlbeans.XmlException $r11;
        java.io.StringReader $r0;
        org.apache.xmlbeans.XmlOptions r2;
        org.apache.xmlbeans.impl.store.Locale r4;
        org.apache.xmlbeans.impl.store.Cur $r6;

        r4 := @this: org.apache.xmlbeans.impl.store.Locale;

        r1 := @parameter0: java.lang.String;

        r7 := @parameter1: org.apache.xmlbeans.SchemaType;

        r2 := @parameter2: org.apache.xmlbeans.XmlOptions;

        $r0 = new java.io.StringReader;

        specialinvoke $r0.<java.io.StringReader: void <init>(java.lang.String)>(r1);

     label01:
        $r3 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$SaxLoader getSaxLoader(org.apache.xmlbeans.XmlOptions)>(r2);

        $r5 = new org.xml.sax.InputSource;

        specialinvoke $r5.<org.xml.sax.InputSource: void <init>(java.io.Reader)>($r0);

        $r6 = virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Locale$SaxLoader: org.apache.xmlbeans.impl.store.Cur load(org.apache.xmlbeans.impl.store.Locale,org.xml.sax.InputSource,org.apache.xmlbeans.XmlOptions)>(r4, $r5, r2);

        staticinvoke <org.apache.xmlbeans.impl.store.Locale: void autoTypeDocument(org.apache.xmlbeans.impl.store.Cur,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>($r6, r7, r2);

     label02:
        virtualinvoke $r0.<java.io.Reader: void close()>();

     label03:
        goto label05;

     label04:
        $r14 := @caughtexception;

     label05:
        return $r6;

     label06:
        $r10 := @caughtexception;

        $z0 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z0 != 0 goto label07;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>(java.lang.Object)>("StringReader should not throw IOException");

        throw $r13;

     label07:
        $r11 = new org.apache.xmlbeans.XmlException;

        $r12 = virtualinvoke $r10.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r11.<org.apache.xmlbeans.XmlException: void <init>(java.lang.String,java.lang.Throwable)>($r12, $r10);

        throw $r11;

     label08:
        $r9 := @caughtexception;

     label09:
        virtualinvoke $r0.<java.io.Reader: void close()>();

     label10:
        goto label12;

     label11:
        $r8 := @caughtexception;

     label12:
        throw $r9;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.io.IOException from label01 to label02 with label06;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.lang.Throwable from label06 to label09 with label08;
    }

    public static org.apache.xmlbeans.XmlObject parseToXmlObject(org.apache.xmlbeans.SchemaTypeLoader, org.apache.xmlbeans.xml.stream.XMLInputStream, org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.XmlOptions) throws org.apache.xmlbeans.XmlException, org.apache.xmlbeans.xml.stream.XMLStreamException
    {
        java.lang.Throwable $r7, $r8, $r9;
        org.apache.xmlbeans.xml.stream.XMLInputStream r3;
        org.apache.xmlbeans.SchemaTypeLoader r0;
        org.apache.xmlbeans.XmlOptions r1;
        org.apache.xmlbeans.impl.store.Locale $r2;
        org.apache.xmlbeans.XmlObject $r5, $r6;
        org.apache.xmlbeans.SchemaType r4;
        boolean $z0;

        r0 := @parameter0: org.apache.xmlbeans.SchemaTypeLoader;

        r3 := @parameter1: org.apache.xmlbeans.xml.stream.XMLInputStream;

        r4 := @parameter2: org.apache.xmlbeans.SchemaType;

        r1 := @parameter3: org.apache.xmlbeans.XmlOptions;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale getLocale(org.apache.xmlbeans.SchemaTypeLoader,org.apache.xmlbeans.XmlOptions)>(r0, r1);

        $z0 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: boolean noSync()>();

        if $z0 == 0 goto label05;

        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void enter()>();

     label01:
        $r6 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.XmlObject parseToXmlObject(org.apache.xmlbeans.xml.stream.XMLInputStream,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>(r3, r4, r1);

     label02:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        return $r6;

     label03:
        $r9 := @caughtexception;

     label04:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        throw $r9;

     label05:
        entermonitor $r2;

     label06:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void enter()>();

     label07:
        $r5 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.XmlObject parseToXmlObject(org.apache.xmlbeans.xml.stream.XMLInputStream,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>(r3, r4, r1);

     label08:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        exitmonitor $r2;

     label09:
        return $r5;

     label10:
        $r8 := @caughtexception;

     label11:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        throw $r8;

     label12:
        $r7 := @caughtexception;

        exitmonitor $r2;

     label13:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label06 to label09 with label12;
        catch java.lang.Throwable from label10 to label13 with label12;
    }

    public org.apache.xmlbeans.XmlObject parseToXmlObject(org.apache.xmlbeans.xml.stream.XMLInputStream, org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.XmlOptions) throws org.apache.xmlbeans.XmlException, org.apache.xmlbeans.xml.stream.XMLStreamException
    {
        org.apache.xmlbeans.xml.stream.XMLStreamException $r6;
        org.apache.xmlbeans.xml.stream.XMLInputStream r1;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r5;
        org.apache.xmlbeans.XmlException $r7;
        org.apache.xmlbeans.XmlOptions r2;
        org.apache.xmlbeans.impl.store.Locale r0;
        java.lang.String $r8;
        org.apache.xmlbeans.XmlObject r9;
        org.apache.xmlbeans.SchemaType r4;
        org.apache.xmlbeans.impl.store.Cur $r3;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        r1 := @parameter0: org.apache.xmlbeans.xml.stream.XMLInputStream;

        r4 := @parameter1: org.apache.xmlbeans.SchemaType;

        r2 := @parameter2: org.apache.xmlbeans.XmlOptions;

     label1:
        $r3 = specialinvoke r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur loadXMLInputStream(org.apache.xmlbeans.xml.stream.XMLInputStream,org.apache.xmlbeans.XmlOptions)>(r1, r2);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new org.apache.xmlbeans.XmlException;

        $r8 = virtualinvoke $r6.<org.apache.xmlbeans.xml.stream.XMLStreamException: java.lang.String getMessage()>();

        specialinvoke $r7.<org.apache.xmlbeans.XmlException: void <init>(java.lang.String,java.lang.Throwable)>($r8, $r6);

        throw $r7;

     label4:
        staticinvoke <org.apache.xmlbeans.impl.store.Locale: void autoTypeDocument(org.apache.xmlbeans.impl.store.Cur,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>($r3, r4, r2);

        $r5 = virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.values.TypeStoreUser getUser()>();

        r9 = (org.apache.xmlbeans.XmlObject) $r5;

        virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Cur: void release()>();

        return r9;

        catch org.apache.xmlbeans.xml.stream.XMLStreamException from label1 to label2 with label3;
    }

    public static org.apache.xmlbeans.XmlObject parseToXmlObject(org.apache.xmlbeans.SchemaTypeLoader, javax.xml.stream.XMLStreamReader, org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.XmlOptions) throws org.apache.xmlbeans.XmlException
    {
        java.lang.Throwable $r7, $r8, $r9;
        org.apache.xmlbeans.SchemaTypeLoader r0;
        org.apache.xmlbeans.XmlOptions r1;
        javax.xml.stream.XMLStreamReader r3;
        org.apache.xmlbeans.impl.store.Locale $r2;
        org.apache.xmlbeans.XmlObject $r5, $r6;
        org.apache.xmlbeans.SchemaType r4;
        boolean $z0;

        r0 := @parameter0: org.apache.xmlbeans.SchemaTypeLoader;

        r3 := @parameter1: javax.xml.stream.XMLStreamReader;

        r4 := @parameter2: org.apache.xmlbeans.SchemaType;

        r1 := @parameter3: org.apache.xmlbeans.XmlOptions;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale getLocale(org.apache.xmlbeans.SchemaTypeLoader,org.apache.xmlbeans.XmlOptions)>(r0, r1);

        $z0 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: boolean noSync()>();

        if $z0 == 0 goto label05;

        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void enter()>();

     label01:
        $r6 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.XmlObject parseToXmlObject(javax.xml.stream.XMLStreamReader,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>(r3, r4, r1);

     label02:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        return $r6;

     label03:
        $r9 := @caughtexception;

     label04:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        throw $r9;

     label05:
        entermonitor $r2;

     label06:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void enter()>();

     label07:
        $r5 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.XmlObject parseToXmlObject(javax.xml.stream.XMLStreamReader,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>(r3, r4, r1);

     label08:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        exitmonitor $r2;

     label09:
        return $r5;

     label10:
        $r8 := @caughtexception;

     label11:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        throw $r8;

     label12:
        $r7 := @caughtexception;

        exitmonitor $r2;

     label13:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label06 to label09 with label12;
        catch java.lang.Throwable from label10 to label13 with label12;
    }

    public org.apache.xmlbeans.XmlObject parseToXmlObject(javax.xml.stream.XMLStreamReader, org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.XmlOptions) throws org.apache.xmlbeans.XmlException
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r5;
        org.apache.xmlbeans.XmlException $r7;
        javax.xml.stream.XMLStreamReader r1;
        org.apache.xmlbeans.XmlOptions r2;
        javax.xml.stream.XMLStreamException $r6;
        org.apache.xmlbeans.impl.store.Locale r0;
        java.lang.String $r8;
        org.apache.xmlbeans.XmlObject r9;
        org.apache.xmlbeans.SchemaType r4;
        org.apache.xmlbeans.impl.store.Cur $r3;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        r1 := @parameter0: javax.xml.stream.XMLStreamReader;

        r4 := @parameter1: org.apache.xmlbeans.SchemaType;

        r2 := @parameter2: org.apache.xmlbeans.XmlOptions;

     label1:
        $r3 = specialinvoke r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur loadXMLStreamReader(javax.xml.stream.XMLStreamReader,org.apache.xmlbeans.XmlOptions)>(r1, r2);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new org.apache.xmlbeans.XmlException;

        $r8 = virtualinvoke $r6.<javax.xml.stream.XMLStreamException: java.lang.String getMessage()>();

        specialinvoke $r7.<org.apache.xmlbeans.XmlException: void <init>(java.lang.String,java.lang.Throwable)>($r8, $r6);

        throw $r7;

     label4:
        staticinvoke <org.apache.xmlbeans.impl.store.Locale: void autoTypeDocument(org.apache.xmlbeans.impl.store.Cur,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>($r3, r4, r2);

        $r5 = virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.values.TypeStoreUser getUser()>();

        r9 = (org.apache.xmlbeans.XmlObject) $r5;

        virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Cur: void release()>();

        return r9;

        catch javax.xml.stream.XMLStreamException from label1 to label2 with label3;
    }

    private static void lineNumber(org.apache.xmlbeans.xml.stream.XMLEvent, org.apache.xmlbeans.impl.store.Locale$LoadContext)
    {
        org.apache.xmlbeans.xml.stream.Location $r1;
        int $i0, $i1, $i3;
        org.apache.xmlbeans.xml.stream.XMLEvent r0;
        org.apache.xmlbeans.impl.store.Locale$LoadContext r2;

        r0 := @parameter0: org.apache.xmlbeans.xml.stream.XMLEvent;

        r2 := @parameter1: org.apache.xmlbeans.impl.store.Locale$LoadContext;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.xml.stream.XMLEvent: org.apache.xmlbeans.xml.stream.Location getLocation()>();

        if $r1 == null goto label1;

        $i0 = interfaceinvoke $r1.<org.apache.xmlbeans.xml.stream.Location: int getLineNumber()>();

        $i1 = interfaceinvoke $r1.<org.apache.xmlbeans.xml.stream.Location: int getColumnNumber()>();

        $i3 = (int) -1;

        virtualinvoke r2.<org.apache.xmlbeans.impl.store.Locale$LoadContext: void lineNumber(int,int,int)>($i0, $i1, $i3);

     label1:
        return;
    }

    private static void lineNumber(javax.xml.stream.XMLStreamReader, org.apache.xmlbeans.impl.store.Locale$LoadContext)
    {
        javax.xml.stream.XMLStreamReader r0;
        javax.xml.stream.Location $r1;
        int $i0, $i1, $i2;
        org.apache.xmlbeans.impl.store.Locale$LoadContext r2;

        r0 := @parameter0: javax.xml.stream.XMLStreamReader;

        r2 := @parameter1: org.apache.xmlbeans.impl.store.Locale$LoadContext;

        $r1 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: javax.xml.stream.Location getLocation()>();

        if $r1 == null goto label1;

        $i0 = interfaceinvoke $r1.<javax.xml.stream.Location: int getLineNumber()>();

        $i1 = interfaceinvoke $r1.<javax.xml.stream.Location: int getColumnNumber()>();

        $i2 = interfaceinvoke $r1.<javax.xml.stream.Location: int getCharacterOffset()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.store.Locale$LoadContext: void lineNumber(int,int,int)>($i0, $i1, $i2);

     label1:
        return;
    }

    private void doAttributes(javax.xml.stream.XMLStreamReader, org.apache.xmlbeans.impl.store.Locale$LoadContext)
    {
        javax.xml.stream.XMLStreamReader r0;
        int $i0, i1;
        org.apache.xmlbeans.impl.store.Locale r6;
        java.lang.String $r2, $r3, $r4, $r5;
        org.apache.xmlbeans.impl.store.Locale$LoadContext r1;

        r6 := @this: org.apache.xmlbeans.impl.store.Locale;

        r0 := @parameter0: javax.xml.stream.XMLStreamReader;

        r1 := @parameter1: org.apache.xmlbeans.impl.store.Locale$LoadContext;

        $i0 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: int getAttributeCount()>();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r2 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: java.lang.String getAttributeLocalName(int)>(i1);

        $r3 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: java.lang.String getAttributeNamespace(int)>(i1);

        $r4 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: java.lang.String getAttributePrefix(int)>(i1);

        $r5 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: java.lang.String getAttributeValue(int)>(i1);

        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Locale$LoadContext: void attr(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r2, $r3, $r4, $r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void doNamespaces(javax.xml.stream.XMLStreamReader, org.apache.xmlbeans.impl.store.Locale$LoadContext)
    {
        javax.xml.stream.XMLStreamReader r0;
        int $i0, $i1, i2;
        org.apache.xmlbeans.impl.store.Locale r5;
        java.lang.String $r1, $r3, $r4;
        org.apache.xmlbeans.impl.store.Locale$LoadContext r2;

        r5 := @this: org.apache.xmlbeans.impl.store.Locale;

        r0 := @parameter0: javax.xml.stream.XMLStreamReader;

        r2 := @parameter1: org.apache.xmlbeans.impl.store.Locale$LoadContext;

        $i0 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: int getNamespaceCount()>();

        i2 = 0;

     label1:
        if i2 >= $i0 goto label5;

        $r1 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: java.lang.String getNamespacePrefix(int)>(i2);

        if $r1 == null goto label2;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 != 0 goto label3;

     label2:
        $r3 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: java.lang.String getNamespaceURI(int)>(i2);

        virtualinvoke r2.<org.apache.xmlbeans.impl.store.Locale$LoadContext: void attr(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("xmlns", "http://www.w3.org/2000/xmlns/", null, $r3);

        goto label4;

     label3:
        $r4 = interfaceinvoke r0.<javax.xml.stream.XMLStreamReader: java.lang.String getNamespaceURI(int)>(i2);

        virtualinvoke r2.<org.apache.xmlbeans.impl.store.Locale$LoadContext: void attr(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r1, "http://www.w3.org/2000/xmlns/", "xmlns", $r4);

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        return;
    }

    private org.apache.xmlbeans.impl.store.Cur loadXMLInputStream(org.apache.xmlbeans.xml.stream.XMLInputStream, org.apache.xmlbeans.XmlOptions) throws org.apache.xmlbeans.xml.stream.XMLStreamException
    {
        org.apache.xmlbeans.xml.stream.XMLInputStream r1;
        org.apache.xmlbeans.xml.stream.Attribute $r16, $r20;
        java.util.Map $r31;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, $z8;
        org.apache.xmlbeans.xml.stream.AttributeIterator $r13, $r15;
        org.apache.xmlbeans.xml.stream.StartElement $r12, $r14, $r30;
        org.apache.xmlbeans.xml.stream.Comment r44;
        org.apache.xmlbeans.XmlDocumentProperties $r47;
        org.apache.xmlbeans.xml.stream.XMLEvent $r2, r40;
        javax.xml.namespace.QName $r11, $r22;
        org.apache.xmlbeans.impl.store.Cur $r46;
        org.apache.xmlbeans.impl.store.Cur$CurLoadContext $r39;
        java.util.HashMap $r32;
        org.apache.xmlbeans.xml.stream.StartDocument r41;
        org.apache.xmlbeans.xml.stream.XMLName $r10, $r17, $r21;
        java.lang.StringBuffer $r25, $r26, $r28;
        int $i0, $i1, $i2;
        org.apache.xmlbeans.xml.stream.CharacterData $r7;
        java.lang.String $r5, $r6, $r8, $r9, $r18, $r19, $r23, $r27, $r29, r36, r37, r38, r42, $r43;
        org.apache.xmlbeans.xml.stream.Space $r4;
        java.lang.RuntimeException $r24;
        org.apache.xmlbeans.XmlOptions $r0, $r33, r34, r35;
        org.apache.xmlbeans.impl.store.Locale r3;
        org.apache.xmlbeans.xml.stream.ProcessingInstruction r45;

        r3 := @this: org.apache.xmlbeans.impl.store.Locale;

        r1 := @parameter0: org.apache.xmlbeans.xml.stream.XMLInputStream;

        r34 := @parameter1: org.apache.xmlbeans.XmlOptions;

        $r0 = staticinvoke <org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions maskNull(org.apache.xmlbeans.XmlOptions)>(r34);

        r35 = $r0;

        $z0 = virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: boolean hasOption(java.lang.Object)>("LOAD_LINE_NUMBERS");

        $r2 = interfaceinvoke r1.<org.apache.xmlbeans.xml.stream.XMLInputStream: org.apache.xmlbeans.xml.stream.XMLEvent peek()>();

        if $r2 == null goto label01;

        $i1 = interfaceinvoke $r2.<org.apache.xmlbeans.xml.stream.XMLEvent: int getType()>();

        if $i1 != 2 goto label01;

        $r30 = (org.apache.xmlbeans.xml.stream.StartElement) $r2;

        $r31 = interfaceinvoke $r30.<org.apache.xmlbeans.xml.stream.StartElement: java.util.Map getNamespaceMap()>();

        if $r31 == null goto label01;

        $i2 = interfaceinvoke $r31.<java.util.Map: int size()>();

        if $i2 <= 0 goto label01;

        $r32 = new java.util.HashMap;

        specialinvoke $r32.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r32.<java.util.Map: void putAll(java.util.Map)>($r31);

        $r33 = new org.apache.xmlbeans.XmlOptions;

        specialinvoke $r33.<org.apache.xmlbeans.XmlOptions: void <init>(org.apache.xmlbeans.XmlOptions)>($r0);

        r35 = $r33;

        virtualinvoke $r33.<org.apache.xmlbeans.XmlOptions: void put(java.lang.Object,java.lang.Object)>("LOAD_ADDITIONAL_NAMESPACES", $r32);

     label01:
        r36 = null;

        r37 = null;

        r38 = null;

        z7 = 1;

        $r39 = new org.apache.xmlbeans.impl.store.Cur$CurLoadContext;

        specialinvoke $r39.<org.apache.xmlbeans.impl.store.Cur$CurLoadContext: void <init>(org.apache.xmlbeans.impl.store.Locale,org.apache.xmlbeans.XmlOptions)>(r3, r35);

        r40 = interfaceinvoke r1.<org.apache.xmlbeans.xml.stream.XMLInputStream: org.apache.xmlbeans.xml.stream.XMLEvent next()>();

     label02:
        if r40 == null goto label21;

        $i0 = interfaceinvoke r40.<org.apache.xmlbeans.xml.stream.XMLEvent: int getType()>();

        lookupswitch($i0)
        {
            case 1: goto label18;
            case 2: goto label06;
            case 4: goto label13;
            case 8: goto label17;
            case 16: goto label15;
            case 32: goto label16;
            case 64: goto label14;
            case 128: goto label05;
            case 256: goto label03;
            case 512: goto label04;
            case 1024: goto label18;
            case 2048: goto label18;
            case 4096: goto label18;
            case 8192: goto label18;
            default: goto label19;
        };

     label03:
        r41 = (org.apache.xmlbeans.xml.stream.StartDocument) r40;

        r36 = interfaceinvoke r41.<org.apache.xmlbeans.xml.stream.StartDocument: java.lang.String getSystemId()>();

        r37 = interfaceinvoke r41.<org.apache.xmlbeans.xml.stream.StartDocument: java.lang.String getCharacterEncodingScheme()>();

        r38 = interfaceinvoke r41.<org.apache.xmlbeans.xml.stream.StartDocument: java.lang.String getVersion()>();

        interfaceinvoke r41.<org.apache.xmlbeans.xml.stream.StartDocument: boolean isStandalone()>();

        z7 = interfaceinvoke r41.<org.apache.xmlbeans.xml.stream.StartDocument: boolean isStandalone()>();

        if $z0 == 0 goto label20;

        staticinvoke <org.apache.xmlbeans.impl.store.Locale: void lineNumber(org.apache.xmlbeans.xml.stream.XMLEvent,org.apache.xmlbeans.impl.store.Locale$LoadContext)>(r40, $r39);

        goto label20;

     label04:
        if $z0 == 0 goto label21;

        staticinvoke <org.apache.xmlbeans.impl.store.Locale: void lineNumber(org.apache.xmlbeans.xml.stream.XMLEvent,org.apache.xmlbeans.impl.store.Locale$LoadContext)>(r40, $r39);

        goto label21;

     label05:
        $z1 = interfaceinvoke r1.<org.apache.xmlbeans.xml.stream.XMLInputStream: boolean hasNext()>();

        if $z1 != 0 goto label20;

        goto label21;

     label06:
        $r10 = interfaceinvoke r40.<org.apache.xmlbeans.xml.stream.XMLEvent: org.apache.xmlbeans.xml.stream.XMLName getName()>();

        $r11 = staticinvoke <org.apache.xmlbeans.impl.common.XMLNameHelper: javax.xml.namespace.QName getQName(org.apache.xmlbeans.xml.stream.XMLName)>($r10);

        virtualinvoke $r39.<org.apache.xmlbeans.impl.store.Locale$LoadContext: void startElement(javax.xml.namespace.QName)>($r11);

        if $z0 == 0 goto label07;

        staticinvoke <org.apache.xmlbeans.impl.store.Locale: void lineNumber(org.apache.xmlbeans.xml.stream.XMLEvent,org.apache.xmlbeans.impl.store.Locale$LoadContext)>(r40, $r39);

     label07:
        $r12 = (org.apache.xmlbeans.xml.stream.StartElement) r40;

        $r13 = interfaceinvoke $r12.<org.apache.xmlbeans.xml.stream.StartElement: org.apache.xmlbeans.xml.stream.AttributeIterator getAttributes()>();

     label08:
        $z8 = interfaceinvoke $r13.<org.apache.xmlbeans.xml.stream.AttributeIterator: boolean hasNext()>();

        if $z8 == 0 goto label09;

        $r20 = interfaceinvoke $r13.<org.apache.xmlbeans.xml.stream.AttributeIterator: org.apache.xmlbeans.xml.stream.Attribute next()>();

        $r21 = interfaceinvoke $r20.<org.apache.xmlbeans.xml.stream.Attribute: org.apache.xmlbeans.xml.stream.XMLName getName()>();

        $r22 = staticinvoke <org.apache.xmlbeans.impl.common.XMLNameHelper: javax.xml.namespace.QName getQName(org.apache.xmlbeans.xml.stream.XMLName)>($r21);

        $r23 = interfaceinvoke $r20.<org.apache.xmlbeans.xml.stream.Attribute: java.lang.String getValue()>();

        virtualinvoke $r39.<org.apache.xmlbeans.impl.store.Locale$LoadContext: void attr(javax.xml.namespace.QName,java.lang.String)>($r22, $r23);

        goto label08;

     label09:
        $r14 = (org.apache.xmlbeans.xml.stream.StartElement) r40;

        $r15 = interfaceinvoke $r14.<org.apache.xmlbeans.xml.stream.StartElement: org.apache.xmlbeans.xml.stream.AttributeIterator getNamespaces()>();

     label10:
        $z5 = interfaceinvoke $r15.<org.apache.xmlbeans.xml.stream.AttributeIterator: boolean hasNext()>();

        if $z5 == 0 goto label12;

        $r16 = interfaceinvoke $r15.<org.apache.xmlbeans.xml.stream.AttributeIterator: org.apache.xmlbeans.xml.stream.Attribute next()>();

        $r17 = interfaceinvoke $r16.<org.apache.xmlbeans.xml.stream.Attribute: org.apache.xmlbeans.xml.stream.XMLName getName()>();

        $r18 = interfaceinvoke $r17.<org.apache.xmlbeans.xml.stream.XMLName: java.lang.String getLocalName()>();

        r42 = $r18;

        $r19 = interfaceinvoke $r17.<org.apache.xmlbeans.xml.stream.XMLName: java.lang.String getPrefix()>();

        if $r19 != null goto label11;

        $z6 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z6 == 0 goto label11;

        r42 = "";

     label11:
        $r43 = interfaceinvoke $r16.<org.apache.xmlbeans.xml.stream.Attribute: java.lang.String getValue()>();

        virtualinvoke $r39.<org.apache.xmlbeans.impl.store.Locale$LoadContext: void xmlns(java.lang.String,java.lang.String)>(r42, $r43);

        goto label10;

     label12:
        goto label20;

     label13:
        virtualinvoke $r39.<org.apache.xmlbeans.impl.store.Locale$LoadContext: void endElement()>();

        if $z0 == 0 goto label20;

        staticinvoke <org.apache.xmlbeans.impl.store.Locale: void lineNumber(org.apache.xmlbeans.xml.stream.XMLEvent,org.apache.xmlbeans.impl.store.Locale$LoadContext)>(r40, $r39);

        goto label20;

     label14:
        $r4 = (org.apache.xmlbeans.xml.stream.Space) r40;

        $z2 = interfaceinvoke $r4.<org.apache.xmlbeans.xml.stream.Space: boolean ignorable()>();

        if $z2 == 0 goto label15;

        goto label20;

     label15:
        $r7 = (org.apache.xmlbeans.xml.stream.CharacterData) r40;

        $z3 = interfaceinvoke $r7.<org.apache.xmlbeans.xml.stream.CharacterData: boolean hasContent()>();

        if $z3 == 0 goto label20;

        $r5 = interfaceinvoke $r7.<org.apache.xmlbeans.xml.stream.CharacterData: java.lang.String getContent()>();

        virtualinvoke $r39.<org.apache.xmlbeans.impl.store.Locale$LoadContext: void text(java.lang.String)>($r5);

        if $z0 == 0 goto label20;

        staticinvoke <org.apache.xmlbeans.impl.store.Locale: void lineNumber(org.apache.xmlbeans.xml.stream.XMLEvent,org.apache.xmlbeans.impl.store.Locale$LoadContext)>(r40, $r39);

        goto label20;

     label16:
        r44 = (org.apache.xmlbeans.xml.stream.Comment) r40;

        $z4 = interfaceinvoke r44.<org.apache.xmlbeans.xml.stream.Comment: boolean hasContent()>();

        if $z4 == 0 goto label20;

        $r6 = interfaceinvoke r44.<org.apache.xmlbeans.xml.stream.Comment: java.lang.String getContent()>();

        virtualinvoke $r39.<org.apache.xmlbeans.impl.store.Locale$LoadContext: void comment(java.lang.String)>($r6);

        if $z0 == 0 goto label20;

        staticinvoke <org.apache.xmlbeans.impl.store.Locale: void lineNumber(org.apache.xmlbeans.xml.stream.XMLEvent,org.apache.xmlbeans.impl.store.Locale$LoadContext)>(r40, $r39);

        goto label20;

     label17:
        r45 = (org.apache.xmlbeans.xml.stream.ProcessingInstruction) r40;

        $r8 = interfaceinvoke r45.<org.apache.xmlbeans.xml.stream.ProcessingInstruction: java.lang.String getTarget()>();

        $r9 = interfaceinvoke r45.<org.apache.xmlbeans.xml.stream.ProcessingInstruction: java.lang.String getData()>();

        virtualinvoke $r39.<org.apache.xmlbeans.impl.store.Locale$LoadContext: void procInst(java.lang.String,java.lang.String)>($r8, $r9);

        if $z0 == 0 goto label20;

        staticinvoke <org.apache.xmlbeans.impl.store.Locale: void lineNumber(org.apache.xmlbeans.xml.stream.XMLEvent,org.apache.xmlbeans.impl.store.Locale$LoadContext)>(r40, $r39);

        goto label20;

     label18:
        goto label20;

     label19:
        $r24 = new java.lang.RuntimeException;

        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unhandled xml event type: ");

        $r27 = interfaceinvoke r40.<org.apache.xmlbeans.xml.stream.XMLEvent: java.lang.String getTypeAsString()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.String)>($r29);

        throw $r24;

     label20:
        r40 = interfaceinvoke r1.<org.apache.xmlbeans.xml.stream.XMLInputStream: org.apache.xmlbeans.xml.stream.XMLEvent next()>();

        goto label02;

     label21:
        $r46 = virtualinvoke $r39.<org.apache.xmlbeans.impl.store.Locale$LoadContext: org.apache.xmlbeans.impl.store.Cur finish()>();

        staticinvoke <org.apache.xmlbeans.impl.store.Locale: void associateSourceName(org.apache.xmlbeans.impl.store.Cur,org.apache.xmlbeans.XmlOptions)>($r46, r35);

        $r47 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.XmlDocumentProperties getDocProps(org.apache.xmlbeans.impl.store.Cur,boolean)>($r46, 1);

        virtualinvoke $r47.<org.apache.xmlbeans.XmlDocumentProperties: void setDoctypeSystemId(java.lang.String)>(r36);

        virtualinvoke $r47.<org.apache.xmlbeans.XmlDocumentProperties: void setEncoding(java.lang.String)>(r37);

        virtualinvoke $r47.<org.apache.xmlbeans.XmlDocumentProperties: void setVersion(java.lang.String)>(r38);

        virtualinvoke $r47.<org.apache.xmlbeans.XmlDocumentProperties: void setStandalone(boolean)>(z7);

        return $r46;
    }

    private org.apache.xmlbeans.impl.store.Cur loadXMLStreamReader(javax.xml.stream.XMLStreamReader, org.apache.xmlbeans.XmlOptions) throws javax.xml.stream.XMLStreamException
    {
        org.apache.xmlbeans.impl.store.Cur$CurLoadContext $r20;
        javax.xml.stream.XMLStreamReader r3;
        java.lang.StringBuffer $r12, $r13, $r21;
        int $i0, $i1, i2, i3, $i5;
        java.lang.String $r4, $r5, $r7, $r8, $r14, r16, r17;
        boolean $z0, z1, $z2;
        java.lang.RuntimeException $r22;
        org.apache.xmlbeans.XmlDocumentProperties $r19;
        org.apache.xmlbeans.XmlOptions $r0, r15;
        org.apache.xmlbeans.impl.store.Locale r2;
        char[] $r6;
        javax.xml.namespace.QName $r9;
        org.apache.xmlbeans.impl.store.Cur $r18;

        r2 := @this: org.apache.xmlbeans.impl.store.Locale;

        r3 := @parameter0: javax.xml.stream.XMLStreamReader;

        r15 := @parameter1: org.apache.xmlbeans.XmlOptions;

        $r0 = staticinvoke <org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions maskNull(org.apache.xmlbeans.XmlOptions)>(r15);

        $z0 = virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: boolean hasOption(java.lang.Object)>("LOAD_LINE_NUMBERS");

        r16 = null;

        r17 = null;

        z1 = 0;

        $r20 = new org.apache.xmlbeans.impl.store.Cur$CurLoadContext;

        specialinvoke $r20.<org.apache.xmlbeans.impl.store.Cur$CurLoadContext: void <init>(org.apache.xmlbeans.impl.store.Locale,org.apache.xmlbeans.XmlOptions)>(r2, $r0);

        i2 = 0;

        i3 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: int getEventType()>();

     label01:
        tableswitch(i3)
        {
            case 1: goto label04;
            case 2: goto label06;
            case 3: goto label09;
            case 4: goto label07;
            case 5: goto label08;
            case 6: goto label13;
            case 7: goto label02;
            case 8: goto label03;
            case 9: goto label12;
            case 10: goto label10;
            case 11: goto label13;
            case 12: goto label07;
            case 13: goto label11;
            default: goto label14;
        };

     label02:
        i2 = i2 + 1;

        r16 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: java.lang.String getCharacterEncodingScheme()>();

        r17 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: java.lang.String getVersion()>();

        z1 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: boolean isStandalone()>();

        if $z0 == 0 goto label15;

        staticinvoke <org.apache.xmlbeans.impl.store.Locale: void lineNumber(javax.xml.stream.XMLStreamReader,org.apache.xmlbeans.impl.store.Locale$LoadContext)>(r3, $r20);

        goto label15;

     label03:
        if $z0 == 0 goto label17;

        staticinvoke <org.apache.xmlbeans.impl.store.Locale: void lineNumber(javax.xml.stream.XMLStreamReader,org.apache.xmlbeans.impl.store.Locale$LoadContext)>(r3, $r20);

        goto label17;

     label04:
        i2 = i2 + 1;

        $r9 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: javax.xml.namespace.QName getName()>();

        virtualinvoke $r20.<org.apache.xmlbeans.impl.store.Locale$LoadContext: void startElement(javax.xml.namespace.QName)>($r9);

        if $z0 == 0 goto label05;

        staticinvoke <org.apache.xmlbeans.impl.store.Locale: void lineNumber(javax.xml.stream.XMLStreamReader,org.apache.xmlbeans.impl.store.Locale$LoadContext)>(r3, $r20);

     label05:
        specialinvoke r2.<org.apache.xmlbeans.impl.store.Locale: void doAttributes(javax.xml.stream.XMLStreamReader,org.apache.xmlbeans.impl.store.Locale$LoadContext)>(r3, $r20);

        specialinvoke r2.<org.apache.xmlbeans.impl.store.Locale: void doNamespaces(javax.xml.stream.XMLStreamReader,org.apache.xmlbeans.impl.store.Locale$LoadContext)>(r3, $r20);

        goto label15;

     label06:
        $i5 = (int) -1;

        i2 = i2 + $i5;

        virtualinvoke $r20.<org.apache.xmlbeans.impl.store.Locale$LoadContext: void endElement()>();

        if $z0 == 0 goto label15;

        staticinvoke <org.apache.xmlbeans.impl.store.Locale: void lineNumber(javax.xml.stream.XMLStreamReader,org.apache.xmlbeans.impl.store.Locale$LoadContext)>(r3, $r20);

        goto label15;

     label07:
        $r6 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: char[] getTextCharacters()>();

        $i0 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: int getTextStart()>();

        $i1 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: int getTextLength()>();

        virtualinvoke $r20.<org.apache.xmlbeans.impl.store.Locale$LoadContext: void text(char[],int,int)>($r6, $i0, $i1);

        if $z0 == 0 goto label15;

        staticinvoke <org.apache.xmlbeans.impl.store.Locale: void lineNumber(javax.xml.stream.XMLStreamReader,org.apache.xmlbeans.impl.store.Locale$LoadContext)>(r3, $r20);

        goto label15;

     label08:
        $r5 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: java.lang.String getText()>();

        virtualinvoke $r20.<org.apache.xmlbeans.impl.store.Locale$LoadContext: void comment(java.lang.String)>($r5);

        if $z0 == 0 goto label15;

        staticinvoke <org.apache.xmlbeans.impl.store.Locale: void lineNumber(javax.xml.stream.XMLStreamReader,org.apache.xmlbeans.impl.store.Locale$LoadContext)>(r3, $r20);

        goto label15;

     label09:
        $r7 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: java.lang.String getPITarget()>();

        $r8 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: java.lang.String getPIData()>();

        virtualinvoke $r20.<org.apache.xmlbeans.impl.store.Locale$LoadContext: void procInst(java.lang.String,java.lang.String)>($r7, $r8);

        if $z0 == 0 goto label15;

        staticinvoke <org.apache.xmlbeans.impl.store.Locale: void lineNumber(javax.xml.stream.XMLStreamReader,org.apache.xmlbeans.impl.store.Locale$LoadContext)>(r3, $r20);

        goto label15;

     label10:
        specialinvoke r2.<org.apache.xmlbeans.impl.store.Locale: void doAttributes(javax.xml.stream.XMLStreamReader,org.apache.xmlbeans.impl.store.Locale$LoadContext)>(r3, $r20);

        goto label15;

     label11:
        specialinvoke r2.<org.apache.xmlbeans.impl.store.Locale: void doNamespaces(javax.xml.stream.XMLStreamReader,org.apache.xmlbeans.impl.store.Locale$LoadContext)>(r3, $r20);

        goto label15;

     label12:
        $r4 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: java.lang.String getText()>();

        virtualinvoke $r20.<org.apache.xmlbeans.impl.store.Locale$LoadContext: void text(java.lang.String)>($r4);

        goto label15;

     label13:
        goto label15;

     label14:
        $r22 = new java.lang.RuntimeException;

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unhandled xml event type: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i3);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14);

        throw $r22;

     label15:
        $z2 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: boolean hasNext()>();

        if $z2 == 0 goto label17;

        if i2 > 0 goto label16;

        goto label17;

     label16:
        i3 = interfaceinvoke r3.<javax.xml.stream.XMLStreamReader: int next()>();

        goto label01;

     label17:
        $r18 = virtualinvoke $r20.<org.apache.xmlbeans.impl.store.Locale$LoadContext: org.apache.xmlbeans.impl.store.Cur finish()>();

        staticinvoke <org.apache.xmlbeans.impl.store.Locale: void associateSourceName(org.apache.xmlbeans.impl.store.Cur,org.apache.xmlbeans.XmlOptions)>($r18, $r0);

        $r19 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.XmlDocumentProperties getDocProps(org.apache.xmlbeans.impl.store.Cur,boolean)>($r18, 1);

        virtualinvoke $r19.<org.apache.xmlbeans.XmlDocumentProperties: void setEncoding(java.lang.String)>(r16);

        virtualinvoke $r19.<org.apache.xmlbeans.XmlDocumentProperties: void setVersion(java.lang.String)>(r17);

        virtualinvoke $r19.<org.apache.xmlbeans.XmlDocumentProperties: void setStandalone(boolean)>(z1);

        return $r18;
    }

    public static org.apache.xmlbeans.XmlObject parseToXmlObject(org.apache.xmlbeans.SchemaTypeLoader, java.io.InputStream, org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.XmlOptions) throws org.apache.xmlbeans.XmlException, java.io.IOException
    {
        java.lang.Throwable $r7, $r8, $r9;
        org.apache.xmlbeans.SchemaTypeLoader r0;
        org.apache.xmlbeans.XmlOptions r1;
        org.apache.xmlbeans.impl.store.Locale $r2;
        org.apache.xmlbeans.XmlObject $r5, $r6;
        org.apache.xmlbeans.SchemaType r4;
        boolean $z0;
        java.io.InputStream r3;

        r0 := @parameter0: org.apache.xmlbeans.SchemaTypeLoader;

        r3 := @parameter1: java.io.InputStream;

        r4 := @parameter2: org.apache.xmlbeans.SchemaType;

        r1 := @parameter3: org.apache.xmlbeans.XmlOptions;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale getLocale(org.apache.xmlbeans.SchemaTypeLoader,org.apache.xmlbeans.XmlOptions)>(r0, r1);

        $z0 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: boolean noSync()>();

        if $z0 == 0 goto label05;

        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void enter()>();

     label01:
        $r6 = specialinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.XmlObject parseToXmlObject(java.io.InputStream,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>(r3, r4, r1);

     label02:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        return $r6;

     label03:
        $r9 := @caughtexception;

     label04:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        throw $r9;

     label05:
        entermonitor $r2;

     label06:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void enter()>();

     label07:
        $r5 = specialinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.XmlObject parseToXmlObject(java.io.InputStream,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>(r3, r4, r1);

     label08:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        exitmonitor $r2;

     label09:
        return $r5;

     label10:
        $r8 := @caughtexception;

     label11:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        throw $r8;

     label12:
        $r7 := @caughtexception;

        exitmonitor $r2;

     label13:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label06 to label09 with label12;
        catch java.lang.Throwable from label10 to label13 with label12;
    }

    private org.apache.xmlbeans.XmlObject parseToXmlObject(java.io.InputStream, org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.XmlOptions) throws org.apache.xmlbeans.XmlException, java.io.IOException
    {
        org.apache.xmlbeans.impl.store.Locale$SaxLoader $r1;
        org.xml.sax.InputSource $r3;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r7;
        org.apache.xmlbeans.XmlOptions r0;
        org.apache.xmlbeans.impl.store.Locale r2;
        org.apache.xmlbeans.XmlObject r8;
        org.apache.xmlbeans.SchemaType r6;
        java.io.InputStream r4;
        org.apache.xmlbeans.impl.store.Cur $r5;

        r2 := @this: org.apache.xmlbeans.impl.store.Locale;

        r4 := @parameter0: java.io.InputStream;

        r6 := @parameter1: org.apache.xmlbeans.SchemaType;

        r0 := @parameter2: org.apache.xmlbeans.XmlOptions;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$SaxLoader getSaxLoader(org.apache.xmlbeans.XmlOptions)>(r0);

        $r3 = new org.xml.sax.InputSource;

        specialinvoke $r3.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>(r4);

        $r5 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Locale$SaxLoader: org.apache.xmlbeans.impl.store.Cur load(org.apache.xmlbeans.impl.store.Locale,org.xml.sax.InputSource,org.apache.xmlbeans.XmlOptions)>(r2, $r3, r0);

        staticinvoke <org.apache.xmlbeans.impl.store.Locale: void autoTypeDocument(org.apache.xmlbeans.impl.store.Cur,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>($r5, r6, r0);

        $r7 = virtualinvoke $r5.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.values.TypeStoreUser getUser()>();

        r8 = (org.apache.xmlbeans.XmlObject) $r7;

        virtualinvoke $r5.<org.apache.xmlbeans.impl.store.Cur: void release()>();

        return r8;
    }

    public static org.apache.xmlbeans.XmlObject parseToXmlObject(org.apache.xmlbeans.SchemaTypeLoader, java.io.Reader, org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.XmlOptions) throws org.apache.xmlbeans.XmlException, java.io.IOException
    {
        java.lang.Throwable $r7, $r8, $r9;
        org.apache.xmlbeans.SchemaTypeLoader r0;
        java.io.Reader r3;
        org.apache.xmlbeans.XmlOptions r1;
        org.apache.xmlbeans.impl.store.Locale $r2;
        org.apache.xmlbeans.XmlObject $r5, $r6;
        org.apache.xmlbeans.SchemaType r4;
        boolean $z0;

        r0 := @parameter0: org.apache.xmlbeans.SchemaTypeLoader;

        r3 := @parameter1: java.io.Reader;

        r4 := @parameter2: org.apache.xmlbeans.SchemaType;

        r1 := @parameter3: org.apache.xmlbeans.XmlOptions;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale getLocale(org.apache.xmlbeans.SchemaTypeLoader,org.apache.xmlbeans.XmlOptions)>(r0, r1);

        $z0 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: boolean noSync()>();

        if $z0 == 0 goto label05;

        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void enter()>();

     label01:
        $r6 = specialinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.XmlObject parseToXmlObject(java.io.Reader,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>(r3, r4, r1);

     label02:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        return $r6;

     label03:
        $r9 := @caughtexception;

     label04:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        throw $r9;

     label05:
        entermonitor $r2;

     label06:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void enter()>();

     label07:
        $r5 = specialinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.XmlObject parseToXmlObject(java.io.Reader,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>(r3, r4, r1);

     label08:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        exitmonitor $r2;

     label09:
        return $r5;

     label10:
        $r8 := @caughtexception;

     label11:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        throw $r8;

     label12:
        $r7 := @caughtexception;

        exitmonitor $r2;

     label13:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label06 to label09 with label12;
        catch java.lang.Throwable from label10 to label13 with label12;
    }

    private org.apache.xmlbeans.XmlObject parseToXmlObject(java.io.Reader, org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.XmlOptions) throws org.apache.xmlbeans.XmlException, java.io.IOException
    {
        org.apache.xmlbeans.impl.store.Locale$SaxLoader $r1;
        org.xml.sax.InputSource $r3;
        java.io.Reader r4;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r7;
        org.apache.xmlbeans.XmlOptions r0;
        org.apache.xmlbeans.impl.store.Locale r2;
        org.apache.xmlbeans.XmlObject r8;
        org.apache.xmlbeans.SchemaType r6;
        org.apache.xmlbeans.impl.store.Cur $r5;

        r2 := @this: org.apache.xmlbeans.impl.store.Locale;

        r4 := @parameter0: java.io.Reader;

        r6 := @parameter1: org.apache.xmlbeans.SchemaType;

        r0 := @parameter2: org.apache.xmlbeans.XmlOptions;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$SaxLoader getSaxLoader(org.apache.xmlbeans.XmlOptions)>(r0);

        $r3 = new org.xml.sax.InputSource;

        specialinvoke $r3.<org.xml.sax.InputSource: void <init>(java.io.Reader)>(r4);

        $r5 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Locale$SaxLoader: org.apache.xmlbeans.impl.store.Cur load(org.apache.xmlbeans.impl.store.Locale,org.xml.sax.InputSource,org.apache.xmlbeans.XmlOptions)>(r2, $r3, r0);

        staticinvoke <org.apache.xmlbeans.impl.store.Locale: void autoTypeDocument(org.apache.xmlbeans.impl.store.Cur,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>($r5, r6, r0);

        $r7 = virtualinvoke $r5.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.values.TypeStoreUser getUser()>();

        r8 = (org.apache.xmlbeans.XmlObject) $r7;

        virtualinvoke $r5.<org.apache.xmlbeans.impl.store.Cur: void release()>();

        return r8;
    }

    public static org.apache.xmlbeans.XmlObject parseToXmlObject(org.apache.xmlbeans.SchemaTypeLoader, org.w3c.dom.Node, org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.XmlOptions) throws org.apache.xmlbeans.XmlException
    {
        java.lang.Throwable $r7, $r8, $r9;
        org.apache.xmlbeans.SchemaTypeLoader r0;
        org.apache.xmlbeans.XmlOptions r1;
        org.w3c.dom.Node r3;
        org.apache.xmlbeans.impl.store.Locale $r2;
        org.apache.xmlbeans.XmlObject $r5, $r6;
        org.apache.xmlbeans.SchemaType r4;
        boolean $z0;

        r0 := @parameter0: org.apache.xmlbeans.SchemaTypeLoader;

        r3 := @parameter1: org.w3c.dom.Node;

        r4 := @parameter2: org.apache.xmlbeans.SchemaType;

        r1 := @parameter3: org.apache.xmlbeans.XmlOptions;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale getLocale(org.apache.xmlbeans.SchemaTypeLoader,org.apache.xmlbeans.XmlOptions)>(r0, r1);

        $z0 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: boolean noSync()>();

        if $z0 == 0 goto label05;

        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void enter()>();

     label01:
        $r6 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.XmlObject parseToXmlObject(org.w3c.dom.Node,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>(r3, r4, r1);

     label02:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        return $r6;

     label03:
        $r9 := @caughtexception;

     label04:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        throw $r9;

     label05:
        entermonitor $r2;

     label06:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void enter()>();

     label07:
        $r5 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.XmlObject parseToXmlObject(org.w3c.dom.Node,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>(r3, r4, r1);

     label08:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        exitmonitor $r2;

     label09:
        return $r5;

     label10:
        $r8 := @caughtexception;

     label11:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        throw $r8;

     label12:
        $r7 := @caughtexception;

        exitmonitor $r2;

     label13:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label06 to label09 with label12;
        catch java.lang.Throwable from label10 to label13 with label12;
    }

    public org.apache.xmlbeans.XmlObject parseToXmlObject(org.w3c.dom.Node, org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.XmlOptions) throws org.apache.xmlbeans.XmlException
    {
        org.apache.xmlbeans.impl.store.Cur$CurLoadContext $r0;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r6;
        org.apache.xmlbeans.XmlOptions r2;
        org.w3c.dom.Node r3;
        org.apache.xmlbeans.impl.store.Locale r1;
        org.apache.xmlbeans.XmlObject r7;
        org.apache.xmlbeans.SchemaType r5;
        org.apache.xmlbeans.impl.store.Cur $r4;

        r1 := @this: org.apache.xmlbeans.impl.store.Locale;

        r3 := @parameter0: org.w3c.dom.Node;

        r5 := @parameter1: org.apache.xmlbeans.SchemaType;

        r2 := @parameter2: org.apache.xmlbeans.XmlOptions;

        $r0 = new org.apache.xmlbeans.impl.store.Cur$CurLoadContext;

        specialinvoke $r0.<org.apache.xmlbeans.impl.store.Cur$CurLoadContext: void <init>(org.apache.xmlbeans.impl.store.Locale,org.apache.xmlbeans.XmlOptions)>(r1, r2);

        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Locale: void loadNode(org.w3c.dom.Node,org.apache.xmlbeans.impl.store.Locale$LoadContext)>(r3, $r0);

        $r4 = virtualinvoke $r0.<org.apache.xmlbeans.impl.store.Locale$LoadContext: org.apache.xmlbeans.impl.store.Cur finish()>();

        staticinvoke <org.apache.xmlbeans.impl.store.Locale: void associateSourceName(org.apache.xmlbeans.impl.store.Cur,org.apache.xmlbeans.XmlOptions)>($r4, r2);

        staticinvoke <org.apache.xmlbeans.impl.store.Locale: void autoTypeDocument(org.apache.xmlbeans.impl.store.Cur,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>($r4, r5, r2);

        $r6 = virtualinvoke $r4.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.values.TypeStoreUser getUser()>();

        r7 = (org.apache.xmlbeans.XmlObject) $r6;

        virtualinvoke $r4.<org.apache.xmlbeans.impl.store.Cur: void release()>();

        return r7;
    }

    private void loadNodeChildren(org.w3c.dom.Node, org.apache.xmlbeans.impl.store.Locale$LoadContext)
    {
        org.w3c.dom.Node r0, r3;
        org.apache.xmlbeans.impl.store.Locale r1;
        org.apache.xmlbeans.impl.store.Locale$LoadContext r2;

        r1 := @this: org.apache.xmlbeans.impl.store.Locale;

        r0 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: org.apache.xmlbeans.impl.store.Locale$LoadContext;

        r3 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

     label1:
        if r3 == null goto label2;

        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Locale: void loadNode(org.w3c.dom.Node,org.apache.xmlbeans.impl.store.Locale$LoadContext)>(r3, r2);

        r3 = interfaceinvoke r3.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label1;

     label2:
        return;
    }

    void loadNode(org.w3c.dom.Node, org.apache.xmlbeans.impl.store.Locale$LoadContext)
    {
        short $s0;
        org.w3c.dom.Node r0, $r12;
        int $i1, $i2, i3, $i4;
        org.w3c.dom.NamedNodeMap $r11;
        java.lang.String $r2, $r3, $r4, $r6, $r8, $r9, $r13, $r14, $r15, $r16, $r18;
        boolean $z0;
        java.lang.RuntimeException $r19;
        org.apache.xmlbeans.impl.store.Locale r5;
        javax.xml.namespace.QName $r10, $r17;
        org.apache.xmlbeans.impl.store.Locale$LoadContext r1;

        r5 := @this: org.apache.xmlbeans.impl.store.Locale;

        r0 := @parameter0: org.w3c.dom.Node;

        r1 := @parameter1: org.apache.xmlbeans.impl.store.Locale$LoadContext;

        $s0 = interfaceinvoke r0.<org.w3c.dom.Node: short getNodeType()>();

        $i4 = (int) $s0;

        tableswitch($i4)
        {
            case 1: goto label02;
            case 2: goto label11;
            case 3: goto label08;
            case 4: goto label08;
            case 5: goto label01;
            case 6: goto label11;
            case 7: goto label10;
            case 8: goto label09;
            case 9: goto label01;
            case 10: goto label11;
            case 11: goto label01;
            case 12: goto label11;
            default: goto label12;
        };

     label01:
        specialinvoke r5.<org.apache.xmlbeans.impl.store.Locale: void loadNodeChildren(org.w3c.dom.Node,org.apache.xmlbeans.impl.store.Locale$LoadContext)>(r0, r1);

        goto label12;

     label02:
        $r8 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        $r9 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r10 = virtualinvoke r5.<org.apache.xmlbeans.impl.store.Locale: javax.xml.namespace.QName makeQualifiedQName(java.lang.String,java.lang.String)>($r8, $r9);

        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Locale$LoadContext: void startElement(javax.xml.namespace.QName)>($r10);

        $r11 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>();

        i3 = 0;

     label03:
        $i1 = interfaceinvoke $r11.<org.w3c.dom.NamedNodeMap: int getLength()>();

        if i3 >= $i1 goto label07;

        $r12 = interfaceinvoke $r11.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i3);

        $r13 = interfaceinvoke $r12.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r14 = interfaceinvoke $r12.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r15 = virtualinvoke $r13.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r15.<java.lang.String: boolean startsWith(java.lang.String)>("xmlns");

        if $z0 == 0 goto label05;

        $i2 = virtualinvoke $r13.<java.lang.String: int length()>();

        if $i2 != 5 goto label04;

        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Locale$LoadContext: void xmlns(java.lang.String,java.lang.String)>(null, $r14);

        goto label06;

     label04:
        $r18 = virtualinvoke $r13.<java.lang.String: java.lang.String substring(int)>(6);

        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Locale$LoadContext: void xmlns(java.lang.String,java.lang.String)>($r18, $r14);

        goto label06;

     label05:
        $r16 = interfaceinvoke $r12.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        $r17 = virtualinvoke r5.<org.apache.xmlbeans.impl.store.Locale: javax.xml.namespace.QName makeQualifiedQName(java.lang.String,java.lang.String)>($r16, $r13);

        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Locale$LoadContext: void attr(javax.xml.namespace.QName,java.lang.String)>($r17, $r14);

     label06:
        i3 = i3 + 1;

        goto label03;

     label07:
        specialinvoke r5.<org.apache.xmlbeans.impl.store.Locale: void loadNodeChildren(org.w3c.dom.Node,org.apache.xmlbeans.impl.store.Locale$LoadContext)>(r0, r1);

        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Locale$LoadContext: void endElement()>();

        goto label12;

     label08:
        $r6 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Locale$LoadContext: void text(java.lang.String)>($r6);

        goto label12;

     label09:
        $r2 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Locale$LoadContext: void comment(java.lang.String)>($r2);

        goto label12;

     label10:
        $r3 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r4 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Locale$LoadContext: void procInst(java.lang.String,java.lang.String)>($r3, $r4);

        goto label12;

     label11:
        $r19 = new java.lang.RuntimeException;

        specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String)>("Unexpected node");

        throw $r19;

     label12:
        return;
    }

    public static org.apache.xmlbeans.XmlSaxHandler newSaxHandler(org.apache.xmlbeans.SchemaTypeLoader, org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.XmlOptions)
    {
        java.lang.Throwable $r6, $r7, $r8;
        org.apache.xmlbeans.SchemaTypeLoader r0;
        org.apache.xmlbeans.XmlSaxHandler $r4, $r5;
        org.apache.xmlbeans.XmlOptions r1;
        org.apache.xmlbeans.impl.store.Locale $r2;
        org.apache.xmlbeans.SchemaType r3;
        boolean $z0;

        r0 := @parameter0: org.apache.xmlbeans.SchemaTypeLoader;

        r3 := @parameter1: org.apache.xmlbeans.SchemaType;

        r1 := @parameter2: org.apache.xmlbeans.XmlOptions;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale getLocale(org.apache.xmlbeans.SchemaTypeLoader,org.apache.xmlbeans.XmlOptions)>(r0, r1);

        $z0 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: boolean noSync()>();

        if $z0 == 0 goto label05;

        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void enter()>();

     label01:
        $r5 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.XmlSaxHandler newSaxHandler(org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>(r3, r1);

     label02:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        return $r5;

     label03:
        $r8 := @caughtexception;

     label04:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        throw $r8;

     label05:
        entermonitor $r2;

     label06:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void enter()>();

     label07:
        $r4 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.XmlSaxHandler newSaxHandler(org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>(r3, r1);

     label08:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        exitmonitor $r2;

     label09:
        return $r4;

     label10:
        $r7 := @caughtexception;

     label11:
        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        throw $r7;

     label12:
        $r6 := @caughtexception;

        exitmonitor $r2;

     label13:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label06 to label09 with label12;
        catch java.lang.Throwable from label10 to label13 with label12;
    }

    public org.apache.xmlbeans.XmlSaxHandler newSaxHandler(org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.XmlOptions)
    {
        org.apache.xmlbeans.impl.store.Locale$XmlSaxHandlerImpl $r0;
        org.apache.xmlbeans.XmlOptions r3;
        org.apache.xmlbeans.impl.store.Locale r1;
        org.apache.xmlbeans.SchemaType r2;

        r1 := @this: org.apache.xmlbeans.impl.store.Locale;

        r2 := @parameter0: org.apache.xmlbeans.SchemaType;

        r3 := @parameter1: org.apache.xmlbeans.XmlOptions;

        $r0 = new org.apache.xmlbeans.impl.store.Locale$XmlSaxHandlerImpl;

        specialinvoke $r0.<org.apache.xmlbeans.impl.store.Locale$XmlSaxHandlerImpl: void <init>(org.apache.xmlbeans.impl.store.Locale,org.apache.xmlbeans.impl.store.Locale,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>(r1, r1, r2, r3);

        return $r0;
    }

    javax.xml.namespace.QName makeQName(java.lang.String, java.lang.String)
    {
        java.lang.AssertionError $r5;
        org.apache.xmlbeans.impl.store.QNameFactory $r3;
        org.apache.xmlbeans.impl.store.Locale r0;
        int $i0;
        java.lang.String r1, r2;
        javax.xml.namespace.QName $r4;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if r2 == null goto label1;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 > 0 goto label2;

     label1:
        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label2:
        $r3 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.QNameFactory _qnameFactory>;

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.impl.store.QNameFactory: javax.xml.namespace.QName getQName(java.lang.String,java.lang.String)>(r1, r2);

        return $r4;
    }

    javax.xml.namespace.QName makeQNameNoCheck(java.lang.String, java.lang.String)
    {
        org.apache.xmlbeans.impl.store.QNameFactory $r3;
        org.apache.xmlbeans.impl.store.Locale r0;
        java.lang.String r1, r2;
        javax.xml.namespace.QName $r4;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.QNameFactory _qnameFactory>;

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.impl.store.QNameFactory: javax.xml.namespace.QName getQName(java.lang.String,java.lang.String)>(r1, r2);

        return $r4;
    }

    javax.xml.namespace.QName makeQName(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.xmlbeans.impl.store.QNameFactory $r4;
        org.apache.xmlbeans.impl.store.Locale r0;
        java.lang.String r1, r2, r3, $r6;
        javax.xml.namespace.QName $r5;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.QNameFactory _qnameFactory>;

        if r3 != null goto label1;

        $r6 = "";

        goto label2;

     label1:
        $r6 = r3;

     label2:
        $r5 = interfaceinvoke $r4.<org.apache.xmlbeans.impl.store.QNameFactory: javax.xml.namespace.QName getQName(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, $r6);

        return $r5;
    }

    javax.xml.namespace.QName makeQualifiedQName(java.lang.String, java.lang.String)
    {
        org.apache.xmlbeans.impl.store.QNameFactory $r2, $r5;
        int $i0, $i1;
        org.apache.xmlbeans.impl.store.Locale r0;
        java.lang.String r1, $r3, $r4, r6;
        javax.xml.namespace.QName $r7;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        if r6 != null goto label1;

        r6 = "";

     label1:
        $i0 = virtualinvoke r6.<java.lang.String: int indexOf(int)>(58);

        if $i0 >= 0 goto label2;

        $r5 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.QNameFactory _qnameFactory>;

        $r7 = interfaceinvoke $r5.<org.apache.xmlbeans.impl.store.QNameFactory: javax.xml.namespace.QName getQName(java.lang.String,java.lang.String)>(r1, r6);

        goto label3;

     label2:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.QNameFactory _qnameFactory>;

        $i1 = $i0 + 1;

        $r3 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int)>($i1);

        $r4 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r7 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.store.QNameFactory: javax.xml.namespace.QName getQName(java.lang.String,java.lang.String,java.lang.String)>(r1, $r3, $r4);

     label3:
        return $r7;
    }

    static org.apache.xmlbeans.XmlDocumentProperties getDocProps(org.apache.xmlbeans.impl.store.Cur, boolean)
    {
        org.apache.xmlbeans.impl.store.Locale$DocProps $r4, $r5, r7;
        java.lang.Class $r1, $r3, $r6, $r8;
        java.lang.Object $r2;
        org.apache.xmlbeans.impl.store.Cur r0;
        boolean $z0, z1;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        z1 := @parameter1: boolean;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void push()>();

     label1:
        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean toParent()>();

        if $z0 == 0 goto label2;

        goto label1;

     label2:
        $r1 = <org.apache.xmlbeans.impl.store.Locale: java.lang.Class class$org$apache$xmlbeans$impl$store$Locale$DocProps>;

        if $r1 != null goto label3;

        $r6 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.store.Locale$DocProps");

        <org.apache.xmlbeans.impl.store.Locale: java.lang.Class class$org$apache$xmlbeans$impl$store$Locale$DocProps> = $r6;

        goto label4;

     label3:
        $r6 = <org.apache.xmlbeans.impl.store.Locale: java.lang.Class class$org$apache$xmlbeans$impl$store$Locale$DocProps>;

     label4:
        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: java.lang.Object getBookmark(java.lang.Object)>($r6);

        $r5 = (org.apache.xmlbeans.impl.store.Locale$DocProps) $r2;

        r7 = $r5;

        if $r5 != null goto label7;

        if z1 == 0 goto label7;

        $r3 = <org.apache.xmlbeans.impl.store.Locale: java.lang.Class class$org$apache$xmlbeans$impl$store$Locale$DocProps>;

        if $r3 != null goto label5;

        $r8 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.store.Locale$DocProps");

        <org.apache.xmlbeans.impl.store.Locale: java.lang.Class class$org$apache$xmlbeans$impl$store$Locale$DocProps> = $r8;

        goto label6;

     label5:
        $r8 = <org.apache.xmlbeans.impl.store.Locale: java.lang.Class class$org$apache$xmlbeans$impl$store$Locale$DocProps>;

     label6:
        $r4 = new org.apache.xmlbeans.impl.store.Locale$DocProps;

        specialinvoke $r4.<org.apache.xmlbeans.impl.store.Locale$DocProps: void <init>(org.apache.xmlbeans.impl.store.Locale$1)>(null);

        r7 = $r4;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj$Bookmark setBookmark(java.lang.Object,java.lang.Object)>($r8, $r4);

     label7:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean pop()>();

        return r7;
    }

    void registerForChange(org.apache.xmlbeans.impl.store.Locale$ChangeListener)
    {
        org.apache.xmlbeans.impl.store.Locale$ChangeListener r0, $r1, $r3, $r4;
        org.apache.xmlbeans.impl.store.Locale r2;

        r2 := @this: org.apache.xmlbeans.impl.store.Locale;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.Locale$ChangeListener;

        $r1 = interfaceinvoke r0.<org.apache.xmlbeans.impl.store.Locale$ChangeListener: org.apache.xmlbeans.impl.store.Locale$ChangeListener getNextChangeListener()>();

        if $r1 != null goto label3;

        $r3 = r2.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$ChangeListener _changeListeners>;

        if $r3 != null goto label1;

        interfaceinvoke r0.<org.apache.xmlbeans.impl.store.Locale$ChangeListener: void setNextChangeListener(org.apache.xmlbeans.impl.store.Locale$ChangeListener)>(r0);

        goto label2;

     label1:
        $r4 = r2.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$ChangeListener _changeListeners>;

        interfaceinvoke r0.<org.apache.xmlbeans.impl.store.Locale$ChangeListener: void setNextChangeListener(org.apache.xmlbeans.impl.store.Locale$ChangeListener)>($r4);

     label2:
        r2.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$ChangeListener _changeListeners> = r0;

     label3:
        return;
    }

    void notifyChange()
    {
        org.apache.xmlbeans.impl.store.Cur$Locations $r2;
        org.apache.xmlbeans.impl.store.Locale$ChangeListener $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        org.apache.xmlbeans.impl.store.Locale r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$ChangeListener _changeListeners>;

        if $r1 == null goto label3;

        $r3 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$ChangeListener _changeListeners>;

        interfaceinvoke $r3.<org.apache.xmlbeans.impl.store.Locale$ChangeListener: void notifyChange()>();

        $r4 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$ChangeListener _changeListeners>;

        $r5 = interfaceinvoke $r4.<org.apache.xmlbeans.impl.store.Locale$ChangeListener: org.apache.xmlbeans.impl.store.Locale$ChangeListener getNextChangeListener()>();

        $r6 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$ChangeListener _changeListeners>;

        if $r5 != $r6 goto label2;

        $r10 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$ChangeListener _changeListeners>;

        interfaceinvoke $r10.<org.apache.xmlbeans.impl.store.Locale$ChangeListener: void setNextChangeListener(org.apache.xmlbeans.impl.store.Locale$ChangeListener)>(null);

     label2:
        $r7 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$ChangeListener _changeListeners>;

        $r8 = interfaceinvoke $r7.<org.apache.xmlbeans.impl.store.Locale$ChangeListener: org.apache.xmlbeans.impl.store.Locale$ChangeListener getNextChangeListener()>();

        $r9 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$ChangeListener _changeListeners>;

        interfaceinvoke $r9.<org.apache.xmlbeans.impl.store.Locale$ChangeListener: void setNextChangeListener(org.apache.xmlbeans.impl.store.Locale$ChangeListener)>(null);

        r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$ChangeListener _changeListeners> = $r8;

        goto label1;

     label3:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur$Locations _locations>;

        virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Cur$Locations: void notifyChange()>();

        return;
    }

    static java.lang.String getTextValue(org.apache.xmlbeans.impl.store.Cur)
    {
        java.lang.AssertionError $r9;
        java.lang.StringBuffer $r10;
        int $i0, $i1, $i2, $i3, $i5;
        java.lang.String $r2, $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.xmlbeans.impl.store.Xobj $r3, $r4, $r6;
        java.lang.Object $r5;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        $z0 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z6 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNode()>();

        if $z6 != 0 goto label1;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label1:
        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean hasChildren()>();

        if $z1 != 0 goto label2;

        $r7 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: java.lang.String getValueAsString()>();

        return $r7;

     label2:
        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void push()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean next()>();

     label3:
        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isAtEndOfLastPush()>();

        if $z2 != 0 goto label7;

        $z3 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isText()>();

        if $z3 == 0 goto label6;

        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $z4 = virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Xobj: boolean isComment()>();

        if $z4 != 0 goto label4;

        $r6 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $z5 = virtualinvoke $r6.<org.apache.xmlbeans.impl.store.Xobj: boolean isProcinst()>();

        if $z5 == 0 goto label5;

     label4:
        $i1 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $r4 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $i0 = $r4.<org.apache.xmlbeans.impl.store.Xobj: int _cchValue>;

        if $i1 >= $i0 goto label5;

        goto label6;

     label5:
        $i5 = (int) -1;

        $r5 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: java.lang.Object getChars(int)>($i5);

        $i3 = r0.<org.apache.xmlbeans.impl.store.Cur: int _offSrc>;

        $i2 = r0.<org.apache.xmlbeans.impl.store.Cur: int _cchSrc>;

        staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: void getString(java.lang.StringBuffer,java.lang.Object,int,int)>($r10, $r5, $i3, $i2);

     label6:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean next()>();

        goto label3;

     label7:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean pop()>();

        $r2 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    static int getTextValue(org.apache.xmlbeans.impl.store.Cur, int, char[], int, int)
    {
        java.lang.AssertionError $r4;
        org.apache.xmlbeans.impl.store.Xobj $r1;
        int i0, $i1, i2, i3, i4;
        char[] r3;
        java.lang.String $r2;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        i0 := @parameter1: int;

        r3 := @parameter2: char[];

        i3 := @parameter3: int;

        i2 := @parameter4: int;

        $z0 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNode()>();

        if $z1 != 0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r2 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Xobj: java.lang.String getValueAsString(int)>(i0);

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        i4 = $i1;

        if $i1 <= i2 goto label2;

        i4 = i2;

     label2:
        if i4 > 0 goto label3;

        return 0;

     label3:
        virtualinvoke $r2.<java.lang.String: void getChars(int,int,char[],int)>(0, i4, r3, i3);

        return i4;
    }

    static java.lang.String applyWhiteSpaceRule(java.lang.String, int)
    {
        int i0, i1, $i3, $i7, i8, i9, $i10, $i11, $i12;
        java.lang.String r0, $r1, $r2, $r3;
        boolean $z0, $z1, $z2, z3;
        char $c2, $c4, $c5, $c6;

        r0 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        if r0 != null goto label01;

        $i7 = 0;

        goto label02;

     label01:
        $i7 = virtualinvoke r0.<java.lang.String: int length()>();

     label02:
        i0 = $i7;

        if $i7 == 0 goto label03;

        if i1 != 1 goto label04;

     label03:
        return r0;

     label04:
        if i1 != 2 goto label09;

        i8 = 0;

     label05:
        if i8 >= i0 goto label08;

        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i8);

        $i10 = (int) $c6;

        if $i10 == 10 goto label06;

        $i11 = (int) $c6;

        if $i11 == 13 goto label06;

        $i12 = (int) $c6;

        if $i12 != 9 goto label07;

     label06:
        $r3 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: java.lang.String processWhiteSpaceRule(java.lang.String,int)>(r0, i1);

        return $r3;

     label07:
        i8 = i8 + 1;

        goto label05;

     label08:
        goto label14;

     label09:
        if i1 != 3 goto label14;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $z0 = staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: boolean isWhiteSpace(char)>($c2);

        if $z0 != 0 goto label10;

        $i3 = $i7 - 1;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3);

        $z1 = staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: boolean isWhiteSpace(char)>($c4);

        if $z1 == 0 goto label11;

     label10:
        $r1 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: java.lang.String processWhiteSpaceRule(java.lang.String,int)>(r0, i1);

        return $r1;

     label11:
        z3 = 0;

        i9 = 1;

     label12:
        if i9 >= i0 goto label14;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i9);

        $z2 = staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: boolean isWhiteSpace(char)>($c5);

        if $z2 == 0 goto label13;

        if z3 == 0 goto label13;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: java.lang.String processWhiteSpaceRule(java.lang.String,int)>(r0, i1);

        return $r2;

     label13:
        z3 = $z2;

        i9 = i9 + 1;

        goto label12;

     label14:
        return r0;
    }

    static java.lang.String processWhiteSpaceRule(java.lang.String, int)
    {
        org.apache.xmlbeans.impl.store.Locale$ScrubBuffer $r0;
        int i0, $i1;
        java.lang.String r1, $r2;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r0 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$ScrubBuffer getScrubBuffer(int)>(i0);

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        virtualinvoke $r0.<org.apache.xmlbeans.impl.store.Locale$ScrubBuffer: void scrub(java.lang.Object,int,int)>(r1, 0, $i1);

        $r2 = virtualinvoke $r0.<org.apache.xmlbeans.impl.store.Locale$ScrubBuffer: java.lang.String getResultAsString()>();

        return $r2;
    }

    static org.apache.xmlbeans.impl.store.Locale$ScrubBuffer getScrubBuffer(int)
    {
        java.lang.ThreadLocal $r0, $r6;
        org.apache.xmlbeans.impl.store.Locale$ScrubBuffer $r4, r7;
        int i0;
        java.lang.Object $r1, $r3;
        java.lang.ref.SoftReference r2, $r5;

        i0 := @parameter0: int;

        $r0 = <org.apache.xmlbeans.impl.store.Locale: java.lang.ThreadLocal tl_scrubBuffer>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        r2 = (java.lang.ref.SoftReference) $r1;

        $r3 = virtualinvoke r2.<java.lang.ref.SoftReference: java.lang.Object get()>();

        r7 = (org.apache.xmlbeans.impl.store.Locale$ScrubBuffer) $r3;

        if r7 != null goto label1;

        $r4 = new org.apache.xmlbeans.impl.store.Locale$ScrubBuffer;

        specialinvoke $r4.<org.apache.xmlbeans.impl.store.Locale$ScrubBuffer: void <init>()>();

        r7 = $r4;

        $r6 = <org.apache.xmlbeans.impl.store.Locale: java.lang.ThreadLocal tl_scrubBuffer>;

        $r5 = new java.lang.ref.SoftReference;

        specialinvoke $r5.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>($r4);

        virtualinvoke $r6.<java.lang.ThreadLocal: void set(java.lang.Object)>($r5);

     label1:
        virtualinvoke r7.<org.apache.xmlbeans.impl.store.Locale$ScrubBuffer: void init(int)>(i0);

        return r7;
    }

    static boolean pushToContainer(org.apache.xmlbeans.impl.store.Cur)
    {
        int $i0;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void push()>();

     label1:
        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: int kind()>();

        tableswitch($i0)
        {
            case -2: goto label3;
            case -1: goto label3;
            case 0: goto label5;
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label5;
            case 4: goto label4;
            case 5: goto label4;
            default: goto label5;
        };

     label2:
        return 1;

     label3:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean pop()>();

        return 0;

     label4:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean skip()>();

        goto label1;

     label5:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean nextWithAttrs()>();

        goto label1;
    }

    static boolean toFirstNormalAttr(org.apache.xmlbeans.impl.store.Cur)
    {
        org.apache.xmlbeans.impl.store.Cur r0;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void push()>();

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean toFirstAttr()>();

        if $z0 == 0 goto label3;

     label1:
        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isXmlns()>();

        if $z1 != 0 goto label2;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void popButStay()>();

        return 1;

     label2:
        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean toNextAttr()>();

        if $z2 != 0 goto label1;

     label3:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean pop()>();

        return 0;
    }

    static boolean toPrevNormalAttr(org.apache.xmlbeans.impl.store.Cur)
    {
        java.lang.AssertionError $r1;
        org.apache.xmlbeans.impl.store.Cur r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isAttr()>();

        if $z0 == 0 goto label6;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void push()>();

     label1:
        $z1 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $z5 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isAttr()>();

        if $z5 != 0 goto label2;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label2:
        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean prev()>();

        if $z2 != 0 goto label3;

        goto label5;

     label3:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean prev()>();

        $z3 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isAttr()>();

        if $z3 != 0 goto label4;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean prev()>();

     label4:
        $z4 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNormalAttr()>();

        if $z4 == 0 goto label1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void popButStay()>();

        return 1;

     label5:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean pop()>();

     label6:
        return 0;
    }

    static boolean toNextNormalAttr(org.apache.xmlbeans.impl.store.Cur)
    {
        org.apache.xmlbeans.impl.store.Cur r0;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void push()>();

     label1:
        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean toNextAttr()>();

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isXmlns()>();

        if $z1 != 0 goto label1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void popButStay()>();

        return 1;

     label2:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean pop()>();

        return 0;
    }

    org.apache.xmlbeans.impl.store.Xobj findNthChildElem(org.apache.xmlbeans.impl.store.Xobj, javax.xml.namespace.QName, org.apache.xmlbeans.QNameSet, int)
    {
        java.lang.AssertionError $r11, $r12;
        org.apache.xmlbeans.QNameSet r3;
        int i0, $i1, $i2;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Locale$nthCache $r4, $r5, $r6, r8, $r9, $r10;
        org.apache.xmlbeans.impl.store.Xobj r0, r7, $r13;
        org.apache.xmlbeans.impl.store.Locale r1;
        javax.xml.namespace.QName r2;

        r1 := @this: org.apache.xmlbeans.impl.store.Locale;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.Xobj;

        r2 := @parameter1: javax.xml.namespace.QName;

        r3 := @parameter2: org.apache.xmlbeans.QNameSet;

        i0 := @parameter3: int;

        $z0 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r2 == null goto label1;

        if r3 == null goto label1;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label1:
        $z1 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        if i0 >= 0 goto label2;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label2:
        if r0 != null goto label3;

        return null;

     label3:
        $r4 = r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$nthCache _nthCache_A>;

        $i1 = virtualinvoke $r4.<org.apache.xmlbeans.impl.store.Locale$nthCache: int distance(org.apache.xmlbeans.impl.store.Xobj,javax.xml.namespace.QName,org.apache.xmlbeans.QNameSet,int)>(r0, r2, r3, i0);

        $r5 = r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$nthCache _nthCache_B>;

        $i2 = virtualinvoke $r5.<org.apache.xmlbeans.impl.store.Locale$nthCache: int distance(org.apache.xmlbeans.impl.store.Xobj,javax.xml.namespace.QName,org.apache.xmlbeans.QNameSet,int)>(r0, r2, r3, i0);

        if $i1 > $i2 goto label4;

        $r10 = r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$nthCache _nthCache_A>;

        $r13 = virtualinvoke $r10.<org.apache.xmlbeans.impl.store.Locale$nthCache: org.apache.xmlbeans.impl.store.Xobj fetch(org.apache.xmlbeans.impl.store.Xobj,javax.xml.namespace.QName,org.apache.xmlbeans.QNameSet,int)>(r0, r2, r3, i0);

        goto label5;

     label4:
        $r6 = r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$nthCache _nthCache_B>;

        $r13 = virtualinvoke $r6.<org.apache.xmlbeans.impl.store.Locale$nthCache: org.apache.xmlbeans.impl.store.Xobj fetch(org.apache.xmlbeans.impl.store.Xobj,javax.xml.namespace.QName,org.apache.xmlbeans.QNameSet,int)>(r0, r2, r3, i0);

     label5:
        r7 = $r13;

        if $i1 != $i2 goto label6;

        r8 = r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$nthCache _nthCache_A>;

        $r9 = r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$nthCache _nthCache_B>;

        r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$nthCache _nthCache_A> = $r9;

        r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$nthCache _nthCache_B> = r8;

     label6:
        return r7;
    }

    int count(org.apache.xmlbeans.impl.store.Xobj, javax.xml.namespace.QName, org.apache.xmlbeans.QNameSet)
    {
        org.apache.xmlbeans.QNameSet r3;
        org.apache.xmlbeans.impl.store.Xobj r1, r6;
        org.apache.xmlbeans.impl.store.Locale r0;
        int i0;
        javax.xml.namespace.QName r2, $r4, $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Xobj;

        r2 := @parameter1: javax.xml.namespace.QName;

        r3 := @parameter2: org.apache.xmlbeans.QNameSet;

        i0 = 0;

        r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Xobj findNthChildElem(org.apache.xmlbeans.impl.store.Xobj,javax.xml.namespace.QName,org.apache.xmlbeans.QNameSet,int)>(r1, r2, r3, 0);

     label1:
        if r6 == null goto label4;

        $z0 = virtualinvoke r6.<org.apache.xmlbeans.impl.store.Xobj: boolean isElem()>();

        if $z0 == 0 goto label3;

        if r3 != null goto label2;

        $r5 = r6.<org.apache.xmlbeans.impl.store.Xobj: javax.xml.namespace.QName _name>;

        $z2 = virtualinvoke $r5.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label3;

        i0 = i0 + 1;

        goto label3;

     label2:
        $r4 = r6.<org.apache.xmlbeans.impl.store.Xobj: javax.xml.namespace.QName _name>;

        $z1 = virtualinvoke r3.<org.apache.xmlbeans.QNameSet: boolean contains(javax.xml.namespace.QName)>($r4);

        if $z1 == 0 goto label3;

        i0 = i0 + 1;

     label3:
        r6 = r6.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Xobj _nextSibling>;

        goto label1;

     label4:
        return i0;
    }

    static boolean toChild(org.apache.xmlbeans.impl.store.Cur, javax.xml.namespace.QName, int)
    {
        org.apache.xmlbeans.impl.store.Xobj $r2, $r4;
        int i0;
        org.apache.xmlbeans.impl.store.Locale $r3;
        javax.xml.namespace.QName r1;
        org.apache.xmlbeans.impl.store.Cur r0;
        boolean $z0;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        r1 := @parameter1: javax.xml.namespace.QName;

        i0 := @parameter2: int;

        if i0 < 0 goto label1;

        $z0 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: boolean pushToContainer(org.apache.xmlbeans.impl.store.Cur)>(r0);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r2 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r4 = virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Xobj findNthChildElem(org.apache.xmlbeans.impl.store.Xobj,javax.xml.namespace.QName,org.apache.xmlbeans.QNameSet,int)>($r2, r1, null, i0);

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean pop()>();

        if $r4 == null goto label1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj)>($r4);

        return 1;

     label1:
        return 0;
    }

    static boolean toFirstChildElement(org.apache.xmlbeans.impl.store.Cur)
    {
        org.apache.xmlbeans.impl.store.Xobj r1;
        int i0, $i1;
        org.apache.xmlbeans.impl.store.Cur r0;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

     label1:
        $i1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: int kind()>();

        tableswitch($i1)
        {
            case -2: goto label3;
            case -1: goto label3;
            case 0: goto label5;
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label5;
            case 4: goto label4;
            case 5: goto label4;
            default: goto label5;
        };

     label2:
        goto label6;

     label3:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj,int)>(r1, i0);

        return 0;

     label4:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean skip()>();

        goto label1;

     label5:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean nextWithAttrs()>();

        goto label1;

     label6:
        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean toFirstChild()>();

        if $z0 == 0 goto label7;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isElem()>();

        if $z1 != 0 goto label8;

        $z2 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: boolean toNextSiblingElement(org.apache.xmlbeans.impl.store.Cur)>(r0);

        if $z2 != 0 goto label8;

     label7:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj,int)>(r1, i0);

        return 0;

     label8:
        return 1;
    }

    static boolean toLastChildElement(org.apache.xmlbeans.impl.store.Cur)
    {
        org.apache.xmlbeans.impl.store.Cur r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        $z0 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: boolean pushToContainer(org.apache.xmlbeans.impl.store.Cur)>(r0);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean toLastChild()>();

        if $z1 == 0 goto label2;

        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isElem()>();

        if $z2 != 0 goto label3;

        $z3 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: boolean toPrevSiblingElement(org.apache.xmlbeans.impl.store.Cur)>(r0);

        if $z3 != 0 goto label3;

     label2:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean pop()>();

        return 0;

     label3:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void popButStay()>();

        return 1;
    }

    static boolean toPrevSiblingElement(org.apache.xmlbeans.impl.store.Cur)
    {
        int $i0, $i1, $i2, $i4;
        org.apache.xmlbeans.impl.store.Cur r0, $r1;
        boolean $z0, $z1, z2;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean hasParent()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur tempCur()>();

        z2 = 0;

        $i0 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: int kind()>();

        if $i0 == 3 goto label5;

     label2:
        $z1 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: boolean prev()>();

        if $z1 != 0 goto label3;

        goto label5;

     label3:
        $i1 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: int kind()>();

        if $i1 == 1 goto label5;

        if $i1 != 2 goto label4;

        goto label5;

     label4:
        $i2 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: int kind()>();

        $i4 = (int) -2;

        if $i2 != $i4 goto label2;

        virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: boolean toParent()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveToCur(org.apache.xmlbeans.impl.store.Cur)>($r1);

        z2 = 1;

        goto label5;

     label5:
        virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: void release()>();

        return z2;
    }

    static boolean toNextSiblingElement(org.apache.xmlbeans.impl.store.Cur)
    {
        int $i0, $i1;
        org.apache.xmlbeans.impl.store.Cur r0;
        boolean $z0;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean hasParent()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void push()>();

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: int kind()>();

        if $i0 != 3 goto label2;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean toParent()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean next()>();

        goto label3;

     label2:
        if $i0 != 2 goto label3;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean skip()>();

     label3:
        $i1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: int kind()>();

        if $i1 < 0 goto label6;

        if $i1 != 2 goto label4;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void popButStay()>();

        return 1;

     label4:
        if $i1 <= 0 goto label5;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void toEnd()>();

     label5:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean next()>();

        goto label3;

     label6:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean pop()>();

        return 0;
    }

    static boolean toNextSiblingElement(org.apache.xmlbeans.impl.store.Cur, org.apache.xmlbeans.impl.store.Xobj)
    {
        org.apache.xmlbeans.impl.store.Xobj r1, r2;
        int i0, $i1, $i2;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        r2 := @parameter1: org.apache.xmlbeans.impl.store.Xobj;

        r1 = r0.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        i0 = r0.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $i1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: int kind()>();

        if $i1 != 3 goto label1;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj)>(r2);

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean next()>();

        goto label2;

     label1:
        if $i1 != 2 goto label2;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean skip()>();

     label2:
        $i2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: int kind()>();

        if $i2 < 0 goto label5;

        if $i2 != 2 goto label3;

        return 1;

     label3:
        if $i2 <= 0 goto label4;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void toEnd()>();

     label4:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean next()>();

        goto label2;

     label5:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void moveTo(org.apache.xmlbeans.impl.store.Xobj,int)>(r1, i0);

        return 0;
    }

    static void applyNamespaces(org.apache.xmlbeans.impl.store.Cur, java.util.Map)
    {
        java.lang.AssertionError $r12;
        java.util.Map r0;
        java.lang.String r4, $r5, $r7, $r11;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r2;
        java.util.Set $r1;
        org.apache.xmlbeans.impl.store.Locale $r8;
        java.lang.Object $r3, $r10;
        javax.xml.namespace.QName $r9;
        org.apache.xmlbeans.impl.store.Cur r6;

        r6 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        r0 := @parameter1: java.util.Map;

        $z0 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z2 = virtualinvoke r6.<org.apache.xmlbeans.impl.store.Cur: boolean isContainer()>();

        if $z2 != 0 goto label1;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label1:
        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set keySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r3;

        $r5 = virtualinvoke r4.<java.lang.String: java.lang.String toLowerCase()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("xml");

        if $z1 != 0 goto label3;

        $r7 = virtualinvoke r6.<org.apache.xmlbeans.impl.store.Cur: java.lang.String namespaceForPrefix(java.lang.String,boolean)>(r4, 0);

        if $r7 != null goto label3;

        virtualinvoke r6.<org.apache.xmlbeans.impl.store.Cur: void push()>();

        virtualinvoke r6.<org.apache.xmlbeans.impl.store.Cur: boolean next()>();

        $r8 = r6.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        $r9 = virtualinvoke $r8.<org.apache.xmlbeans.impl.store.Locale: javax.xml.namespace.QName createXmlns(java.lang.String)>(r4);

        virtualinvoke r6.<org.apache.xmlbeans.impl.store.Cur: void createAttr(javax.xml.namespace.QName)>($r9);

        virtualinvoke r6.<org.apache.xmlbeans.impl.store.Cur: boolean next()>();

        $r10 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        $r11 = (java.lang.String) $r10;

        virtualinvoke r6.<org.apache.xmlbeans.impl.store.Cur: void insertString(java.lang.String)>($r11);

        virtualinvoke r6.<org.apache.xmlbeans.impl.store.Cur: boolean pop()>();

     label3:
        goto label2;

     label4:
        return;
    }

    static java.util.Map getAllNamespaces(org.apache.xmlbeans.impl.store.Cur, java.util.Map)
    {
        java.util.HashMap $r3;
        java.lang.AssertionError $r5, $r6;
        java.util.Map r7;
        int $i0, $i1, $i2;
        java.lang.String $r1, $r2, $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        javax.xml.namespace.QName $r8;
        org.apache.xmlbeans.impl.store.Cur r0;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        r7 := @parameter1: java.util.Map;

        $z0 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z8 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isNode()>();

        if $z8 != 0 goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: void push()>();

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isContainer()>();

        if $z1 != 0 goto label2;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean toParent()>();

     label2:
        $z2 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z2 != 0 goto label3;

        $z7 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isContainer()>();

        if $z7 != 0 goto label3;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label3:
        $r8 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: javax.xml.namespace.QName getName()>();

     label4:
        $z9 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean toNextAttr()>();

        if $z9 == 0 goto label8;

        $z5 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isXmlns()>();

        if $z5 == 0 goto label4;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: java.lang.String getXmlnsPrefix()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: java.lang.String getXmlnsUri()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label5;

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i1 <= 0 goto label5;

        if $r8 == null goto label5;

        $r4 = virtualinvoke $r8.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $i2 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i2 <= 0 goto label5;

        goto label4;

     label5:
        if r7 != null goto label6;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r7 = $r3;

     label6:
        $z6 = interfaceinvoke r7.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        if $z6 != 0 goto label7;

        interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

     label7:
        goto label4;

     label8:
        $z3 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean isContainer()>();

        if $z3 != 0 goto label9;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean toParentRaw()>();

     label9:
        $z4 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean toParentRaw()>();

        if $z4 != 0 goto label3;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Cur: boolean pop()>();

        return r7;
    }

    org.apache.xmlbeans.impl.store.DomImpl$Dom findDomNthChild(org.apache.xmlbeans.impl.store.DomImpl$Dom, int)
    {
        org.apache.xmlbeans.impl.store.Locale$domNthCache $r2, $r3, $r4, $r5, $r6, r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r16;
        boolean $z0, z1, $z2, $z3;
        org.apache.xmlbeans.impl.store.DomImpl$Dom r0, r17;
        java.lang.AssertionError $r15;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        org.apache.xmlbeans.impl.store.Locale r1;

        r1 := @this: org.apache.xmlbeans.impl.store.Locale;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.DomImpl$Dom;

        i0 := @parameter1: int;

        $z0 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        if i0 >= 0 goto label01;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>()>();

        throw $r15;

     label01:
        if r0 != null goto label02;

        return null;

     label02:
        $r2 = r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$domNthCache _domNthCache_A>;

        $i1 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale$domNthCache: int distance(org.apache.xmlbeans.impl.store.DomImpl$Dom,int)>(r0, i0);

        $r3 = r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$domNthCache _domNthCache_B>;

        $i2 = virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Locale$domNthCache: int distance(org.apache.xmlbeans.impl.store.DomImpl$Dom,int)>(r0, i0);

        $r4 = r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$domNthCache _domNthCache_B>;

        $i3 = staticinvoke <org.apache.xmlbeans.impl.store.Locale$domNthCache: int access$200(org.apache.xmlbeans.impl.store.Locale$domNthCache)>($r4);

        $i4 = $i3 / 2;

        $i5 = $i2 - $i4;

        if $i5 <= 0 goto label03;

        $r14 = r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$domNthCache _domNthCache_B>;

        $i10 = staticinvoke <org.apache.xmlbeans.impl.store.Locale$domNthCache: int access$200(org.apache.xmlbeans.impl.store.Locale$domNthCache)>($r14);

        $i11 = $i10 / 2;

        $i12 = $i2 - $i11;

        $i13 = $i12 - 40;

        if $i13 <= 0 goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        z1 = $z2;

        $r16 = r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$domNthCache _domNthCache_A>;

        $i14 = staticinvoke <org.apache.xmlbeans.impl.store.Locale$domNthCache: int access$200(org.apache.xmlbeans.impl.store.Locale$domNthCache)>($r16);

        $i15 = $i14 / 2;

        $i16 = $i1 - $i15;

        if $i16 <= 0 goto label05;

        $r13 = r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$domNthCache _domNthCache_A>;

        $i6 = staticinvoke <org.apache.xmlbeans.impl.store.Locale$domNthCache: int access$200(org.apache.xmlbeans.impl.store.Locale$domNthCache)>($r13);

        $i7 = $i6 / 2;

        $i8 = $i1 - $i7;

        $i9 = $i8 - 40;

        if $i9 <= 0 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        if $i1 > $i2 goto label08;

        if $z3 != 0 goto label07;

        $r12 = r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$domNthCache _domNthCache_A>;

        r17 = virtualinvoke $r12.<org.apache.xmlbeans.impl.store.Locale$domNthCache: org.apache.xmlbeans.impl.store.DomImpl$Dom fetch(org.apache.xmlbeans.impl.store.DomImpl$Dom,int)>(r0, i0);

        goto label10;

     label07:
        $r10 = r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$domNthCache _domNthCache_B>;

        staticinvoke <org.apache.xmlbeans.impl.store.Locale$domNthCache: long access$302(org.apache.xmlbeans.impl.store.Locale$domNthCache,long)>($r10, -1L);

        $r11 = r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$domNthCache _domNthCache_B>;

        r17 = virtualinvoke $r11.<org.apache.xmlbeans.impl.store.Locale$domNthCache: org.apache.xmlbeans.impl.store.DomImpl$Dom fetch(org.apache.xmlbeans.impl.store.DomImpl$Dom,int)>(r0, i0);

        goto label10;

     label08:
        if z1 != 0 goto label09;

        $r9 = r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$domNthCache _domNthCache_B>;

        r17 = virtualinvoke $r9.<org.apache.xmlbeans.impl.store.Locale$domNthCache: org.apache.xmlbeans.impl.store.DomImpl$Dom fetch(org.apache.xmlbeans.impl.store.DomImpl$Dom,int)>(r0, i0);

        goto label10;

     label09:
        $r5 = r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$domNthCache _domNthCache_A>;

        staticinvoke <org.apache.xmlbeans.impl.store.Locale$domNthCache: long access$302(org.apache.xmlbeans.impl.store.Locale$domNthCache,long)>($r5, -1L);

        $r6 = r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$domNthCache _domNthCache_A>;

        r17 = virtualinvoke $r6.<org.apache.xmlbeans.impl.store.Locale$domNthCache: org.apache.xmlbeans.impl.store.DomImpl$Dom fetch(org.apache.xmlbeans.impl.store.DomImpl$Dom,int)>(r0, i0);

     label10:
        if $i1 != $i2 goto label11;

        r7 = r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$domNthCache _domNthCache_A>;

        $r8 = r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$domNthCache _domNthCache_B>;

        r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$domNthCache _domNthCache_A> = $r8;

        r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$domNthCache _domNthCache_B> = r7;

     label11:
        return r17;
    }

    int domLength(org.apache.xmlbeans.impl.store.DomImpl$Dom)
    {
        org.apache.xmlbeans.impl.store.DomImpl$Dom r0;
        org.apache.xmlbeans.impl.store.Locale$domNthCache $r2, $r3, $r4, r5, $r6, $r7;
        org.apache.xmlbeans.impl.store.Locale r1;
        int $i0, $i1, i2, $i3;

        r1 := @this: org.apache.xmlbeans.impl.store.Locale;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.DomImpl$Dom;

        if r0 != null goto label1;

        return 0;

     label1:
        $r2 = r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$domNthCache _domNthCache_A>;

        $i0 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Locale$domNthCache: int distance(org.apache.xmlbeans.impl.store.DomImpl$Dom,int)>(r0, 0);

        $r3 = r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$domNthCache _domNthCache_B>;

        $i1 = virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Locale$domNthCache: int distance(org.apache.xmlbeans.impl.store.DomImpl$Dom,int)>(r0, 0);

        if $i0 > $i1 goto label2;

        $r7 = r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$domNthCache _domNthCache_A>;

        $i3 = virtualinvoke $r7.<org.apache.xmlbeans.impl.store.Locale$domNthCache: int length(org.apache.xmlbeans.impl.store.DomImpl$Dom)>(r0);

        goto label3;

     label2:
        $r4 = r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$domNthCache _domNthCache_B>;

        $i3 = virtualinvoke $r4.<org.apache.xmlbeans.impl.store.Locale$domNthCache: int length(org.apache.xmlbeans.impl.store.DomImpl$Dom)>(r0);

     label3:
        i2 = $i3;

        if $i0 != $i1 goto label4;

        r5 = r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$domNthCache _domNthCache_A>;

        $r6 = r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$domNthCache _domNthCache_B>;

        r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$domNthCache _domNthCache_A> = $r6;

        r1.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$domNthCache _domNthCache_B> = r5;

     label4:
        return i2;
    }

    void invalidateDomCaches(org.apache.xmlbeans.impl.store.DomImpl$Dom)
    {
        org.apache.xmlbeans.impl.store.DomImpl$Dom $r2, r3, $r5;
        org.apache.xmlbeans.impl.store.Locale$domNthCache $r1, $r4, $r6, $r7;
        org.apache.xmlbeans.impl.store.Locale r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        r3 := @parameter0: org.apache.xmlbeans.impl.store.DomImpl$Dom;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$domNthCache _domNthCache_A>;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.store.Locale$domNthCache: org.apache.xmlbeans.impl.store.DomImpl$Dom access$400(org.apache.xmlbeans.impl.store.Locale$domNthCache)>($r1);

        if $r2 != r3 goto label1;

        $r7 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$domNthCache _domNthCache_A>;

        staticinvoke <org.apache.xmlbeans.impl.store.Locale$domNthCache: long access$302(org.apache.xmlbeans.impl.store.Locale$domNthCache,long)>($r7, -1L);

     label1:
        $r4 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$domNthCache _domNthCache_B>;

        $r5 = staticinvoke <org.apache.xmlbeans.impl.store.Locale$domNthCache: org.apache.xmlbeans.impl.store.DomImpl$Dom access$400(org.apache.xmlbeans.impl.store.Locale$domNthCache)>($r4);

        if $r5 != r3 goto label2;

        $r6 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$domNthCache _domNthCache_B>;

        staticinvoke <org.apache.xmlbeans.impl.store.Locale$domNthCache: long access$302(org.apache.xmlbeans.impl.store.Locale$domNthCache,long)>($r6, -1L);

     label2:
        return;
    }

    boolean isDomCached(org.apache.xmlbeans.impl.store.DomImpl$Dom)
    {
        org.apache.xmlbeans.impl.store.DomImpl$Dom $r2, r3, $r5;
        org.apache.xmlbeans.impl.store.Locale$domNthCache $r1, $r4;
        org.apache.xmlbeans.impl.store.Locale r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        r3 := @parameter0: org.apache.xmlbeans.impl.store.DomImpl$Dom;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$domNthCache _domNthCache_A>;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.store.Locale$domNthCache: org.apache.xmlbeans.impl.store.DomImpl$Dom access$400(org.apache.xmlbeans.impl.store.Locale$domNthCache)>($r1);

        if $r2 == r3 goto label1;

        $r4 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$domNthCache _domNthCache_B>;

        $r5 = staticinvoke <org.apache.xmlbeans.impl.store.Locale$domNthCache: org.apache.xmlbeans.impl.store.DomImpl$Dom access$400(org.apache.xmlbeans.impl.store.Locale$domNthCache)>($r4);

        if $r5 != r3 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    org.apache.xmlbeans.impl.store.CharUtil getCharUtil()
    {
        org.apache.xmlbeans.impl.store.Locale r0;
        org.apache.xmlbeans.impl.store.CharUtil $r1, $r2, $r3;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.CharUtil _charUtil>;

        if $r1 != null goto label1;

        $r3 = new org.apache.xmlbeans.impl.store.CharUtil;

        specialinvoke $r3.<org.apache.xmlbeans.impl.store.CharUtil: void <init>(int)>(1024);

        r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.CharUtil _charUtil> = $r3;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.CharUtil _charUtil>;

        return $r2;
    }

    long version()
    {
        org.apache.xmlbeans.impl.store.Locale r0;
        long $l0;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        $l0 = r0.<org.apache.xmlbeans.impl.store.Locale: long _versionAll>;

        return $l0;
    }

    org.apache.xmlbeans.impl.store.Cur weakCur(java.lang.Object)
    {
        org.apache.xmlbeans.impl.store.Locale$Ref $r4, $r11;
        java.lang.AssertionError $r8, $r9, $r10;
        org.apache.xmlbeans.impl.store.Locale r0;
        int $i0, $i2;
        java.lang.Object r3;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xmlbeans.impl.store.Cur $r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        r3 := @parameter0: java.lang.Object;

        $z0 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if r3 == null goto label1;

        $z3 = r3 instanceof org.apache.xmlbeans.impl.store.Locale$Ref;

        if $z3 == 0 goto label2;

     label1:
        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label2:
        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur getCur()>();

        $z1 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        $i0 = $r1.<org.apache.xmlbeans.impl.store.Cur: int _tempFrame>;

        $i2 = (int) -1;

        if $i0 == $i2 goto label3;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label3:
        $z2 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z2 != 0 goto label4;

        $r4 = $r1.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale$Ref _ref>;

        if $r4 == null goto label4;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label4:
        $r11 = new org.apache.xmlbeans.impl.store.Locale$Ref;

        specialinvoke $r11.<org.apache.xmlbeans.impl.store.Locale$Ref: void <init>(org.apache.xmlbeans.impl.store.Cur,java.lang.Object)>($r1, r3);

        $r1.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale$Ref _ref> = $r11;

        return $r1;
    }

    final java.lang.ref.ReferenceQueue refQueue()
    {
        org.apache.xmlbeans.impl.store.Locale r0;
        java.lang.ref.ReferenceQueue $r1, $r2, $r3;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Locale: java.lang.ref.ReferenceQueue _refQueue>;

        if $r1 != null goto label1;

        $r3 = new java.lang.ref.ReferenceQueue;

        specialinvoke $r3.<java.lang.ref.ReferenceQueue: void <init>()>();

        r0.<org.apache.xmlbeans.impl.store.Locale: java.lang.ref.ReferenceQueue _refQueue> = $r3;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Locale: java.lang.ref.ReferenceQueue _refQueue>;

        return $r2;
    }

    org.apache.xmlbeans.impl.store.Cur tempCur()
    {
        org.apache.xmlbeans.impl.store.Locale r0;
        org.apache.xmlbeans.impl.store.Cur $r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur tempCur(java.lang.String)>(null);

        return $r1;
    }

    org.apache.xmlbeans.impl.store.Cur tempCur(java.lang.String)
    {
        java.lang.AssertionError $r16, $r17, $r18, $r19, $r20;
        org.apache.xmlbeans.impl.store.Cur[] $r2, $r3, $r10, $r12, $r15;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9;
        java.lang.String r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.xmlbeans.impl.store.Locale r0;
        org.apache.xmlbeans.impl.store.Cur $r1, $r5, $r7, $r11;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        r4 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur getCur()>();

        $z0 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i7 = $r1.<org.apache.xmlbeans.impl.store.Cur: int _tempFrame>;

        $i9 = (int) -1;

        if $i7 == $i9 goto label1;

        $r16 = new java.lang.AssertionError;

        specialinvoke $r16.<java.lang.AssertionError: void <init>()>();

        throw $r16;

     label1:
        $z1 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $i5 = r0.<org.apache.xmlbeans.impl.store.Locale: int _numTempFramesLeft>;

        $r12 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur[] _tempFrames>;

        $i4 = lengthof $r12;

        if $i5 < $i4 goto label2;

        $r17 = new java.lang.AssertionError;

        specialinvoke $r17.<java.lang.AssertionError: void <init>(java.lang.Object)>("Temp frame not pushed");

        throw $r17;

     label2:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur[] _tempFrames>;

        $i1 = lengthof $r2;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Locale: int _numTempFramesLeft>;

        $i2 = $i1 - $i0;

        $i6 = $i2 - 1;

        $z2 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z2 != 0 goto label4;

        if $i6 < 0 goto label3;

        $r10 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur[] _tempFrames>;

        $i3 = lengthof $r10;

        if $i6 < $i3 goto label4;

     label3:
        $r18 = new java.lang.AssertionError;

        specialinvoke $r18.<java.lang.AssertionError: void <init>()>();

        throw $r18;

     label4:
        $r3 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur[] _tempFrames>;

        $r11 = $r3[$i6];

        $r1.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _nextTemp> = $r11;

        $z3 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z3 != 0 goto label5;

        $r7 = $r1.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _prevTemp>;

        if $r7 == null goto label5;

        $r19 = new java.lang.AssertionError;

        specialinvoke $r19.<java.lang.AssertionError: void <init>()>();

        throw $r19;

     label5:
        if $r11 == null goto label7;

        $z4 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z4 != 0 goto label6;

        $r5 = $r11.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _prevTemp>;

        if $r5 == null goto label6;

        $r20 = new java.lang.AssertionError;

        specialinvoke $r20.<java.lang.AssertionError: void <init>()>();

        throw $r20;

     label6:
        $r11.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _prevTemp> = $r1;

     label7:
        $r15 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur[] _tempFrames>;

        $r15[$i6] = $r1;

        $r1.<org.apache.xmlbeans.impl.store.Cur: int _tempFrame> = $i6;

        $r1.<org.apache.xmlbeans.impl.store.Cur: java.lang.String _id> = r4;

        return $r1;
    }

    org.apache.xmlbeans.impl.store.Cur getCur()
    {
        org.apache.xmlbeans.impl.store.Locale$Ref $r6;
        java.lang.AssertionError $r19, $r21, $r22, $r23, $r24;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.xmlbeans.impl.store.Xobj $r8;
        org.apache.xmlbeans.impl.store.Locale r0;
        org.apache.xmlbeans.impl.store.Cur $r1, $r2, $r3, $r4, $r5, $r10, $r12, $r15, $r17, r18, $r20;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        $z0 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r15 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur _curPool>;

        if $r15 == null goto label1;

        $i4 = r0.<org.apache.xmlbeans.impl.store.Locale: int _curPoolCount>;

        if $i4 > 0 goto label1;

        $r19 = new java.lang.AssertionError;

        specialinvoke $r19.<java.lang.AssertionError: void <init>()>();

        throw $r19;

     label1:
        $r17 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur _curPool>;

        if $r17 != null goto label2;

        $r20 = new org.apache.xmlbeans.impl.store.Cur;

        specialinvoke $r20.<org.apache.xmlbeans.impl.store.Cur: void <init>(org.apache.xmlbeans.impl.store.Locale)>(r0);

        r18 = $r20;

        goto label3;

     label2:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur _curPool>;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur _curPool>;

        r18 = $r1;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur listRemove(org.apache.xmlbeans.impl.store.Cur)>($r1);

        r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur _curPool> = $r3;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Locale: int _curPoolCount>;

        $i1 = $i0 - 1;

        r0.<org.apache.xmlbeans.impl.store.Locale: int _curPoolCount> = $i1;

     label3:
        $z1 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z1 != 0 goto label4;

        $i3 = r18.<org.apache.xmlbeans.impl.store.Cur: int _state>;

        if $i3 == 0 goto label4;

        $r21 = new java.lang.AssertionError;

        specialinvoke $r21.<java.lang.AssertionError: void <init>()>();

        throw $r21;

     label4:
        $z2 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z2 != 0 goto label6;

        $r10 = r18.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _prev>;

        if $r10 != null goto label5;

        $r12 = r18.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur _next>;

        if $r12 == null goto label6;

     label5:
        $r22 = new java.lang.AssertionError;

        specialinvoke $r22.<java.lang.AssertionError: void <init>()>();

        throw $r22;

     label6:
        $z3 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z3 != 0 goto label8;

        $r8 = r18.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        if $r8 != null goto label7;

        $i2 = r18.<org.apache.xmlbeans.impl.store.Cur: int _pos>;

        $i6 = (int) -2;

        if $i2 == $i6 goto label8;

     label7:
        $r23 = new java.lang.AssertionError;

        specialinvoke $r23.<java.lang.AssertionError: void <init>()>();

        throw $r23;

     label8:
        $z4 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z4 != 0 goto label9;

        $r6 = r18.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale$Ref _ref>;

        if $r6 == null goto label9;

        $r24 = new java.lang.AssertionError;

        specialinvoke $r24.<java.lang.AssertionError: void <init>()>();

        throw $r24;

     label9:
        $r4 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur _registered>;

        $r5 = virtualinvoke r18.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur listInsert(org.apache.xmlbeans.impl.store.Cur)>($r4);

        r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur _registered> = $r5;

        r18.<org.apache.xmlbeans.impl.store.Cur: int _state> = 1;

        return r18;
    }

    void embedCurs()
    {
        java.lang.AssertionError $r9;
        org.apache.xmlbeans.impl.store.Xobj $r4, $r6, $r8;
        org.apache.xmlbeans.impl.store.Locale r0;
        org.apache.xmlbeans.impl.store.Cur $r1, $r2, $r3, $r5, $r7;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur _registered>;

        if $r1 == null goto label3;

        $z0 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $r8 = $r1.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        if $r8 != null goto label2;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label2:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur _registered>;

        $r3 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur listRemove(org.apache.xmlbeans.impl.store.Cur)>($r2);

        r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur _registered> = $r3;

        $r6 = $r1.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r4 = $r1.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Xobj _xobj>;

        $r5 = $r4.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Cur _embedded>;

        $r7 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Cur listInsert(org.apache.xmlbeans.impl.store.Cur)>($r5);

        $r6.<org.apache.xmlbeans.impl.store.Xobj: org.apache.xmlbeans.impl.store.Cur _embedded> = $r7;

        $r1.<org.apache.xmlbeans.impl.store.Cur: int _state> = 2;

        goto label1;

     label3:
        return;
    }

    org.apache.xmlbeans.impl.store.DomImpl$TextNode createTextNode()
    {
        org.apache.xmlbeans.impl.store.Saaj $r1;
        org.apache.xmlbeans.impl.store.Locale r0;
        org.apache.xmlbeans.impl.store.DomImpl$SaajTextNode $r4;
        org.apache.xmlbeans.impl.store.DomImpl$TextNode $r2, $r3;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Saaj _saaj>;

        if $r1 != null goto label1;

        $r3 = new org.apache.xmlbeans.impl.store.DomImpl$TextNode;

        $r2 = $r3;

        specialinvoke $r3.<org.apache.xmlbeans.impl.store.DomImpl$TextNode: void <init>(org.apache.xmlbeans.impl.store.Locale)>(r0);

        goto label2;

     label1:
        $r4 = new org.apache.xmlbeans.impl.store.DomImpl$SaajTextNode;

        $r2 = $r4;

        specialinvoke $r4.<org.apache.xmlbeans.impl.store.DomImpl$SaajTextNode: void <init>(org.apache.xmlbeans.impl.store.Locale)>(r0);

     label2:
        return $r2;
    }

    org.apache.xmlbeans.impl.store.DomImpl$CdataNode createCdataNode()
    {
        org.apache.xmlbeans.impl.store.Saaj $r1;
        org.apache.xmlbeans.impl.store.DomImpl$CdataNode $r2, $r3;
        org.apache.xmlbeans.impl.store.Locale r0;
        org.apache.xmlbeans.impl.store.DomImpl$SaajCdataNode $r4;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Saaj _saaj>;

        if $r1 != null goto label1;

        $r3 = new org.apache.xmlbeans.impl.store.DomImpl$CdataNode;

        $r2 = $r3;

        specialinvoke $r3.<org.apache.xmlbeans.impl.store.DomImpl$CdataNode: void <init>(org.apache.xmlbeans.impl.store.Locale)>(r0);

        goto label2;

     label1:
        $r4 = new org.apache.xmlbeans.impl.store.DomImpl$SaajCdataNode;

        $r2 = $r4;

        specialinvoke $r4.<org.apache.xmlbeans.impl.store.DomImpl$SaajCdataNode: void <init>(org.apache.xmlbeans.impl.store.Locale)>(r0);

     label2:
        return $r2;
    }

    boolean entered()
    {
        org.apache.xmlbeans.impl.store.Locale r0;
        int $i0, $i1, $i2;
        org.apache.xmlbeans.impl.store.Cur[] $r1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur[] _tempFrames>;

        $i1 = lengthof $r1;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Locale: int _numTempFramesLeft>;

        $i2 = $i1 - $i0;

        if $i2 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void enter(org.apache.xmlbeans.impl.store.Locale)
    {
        org.apache.xmlbeans.impl.store.Locale r0, r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Locale;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Locale: void enter()>();

        if r1 == r0 goto label1;

        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Locale: void enter()>();

     label1:
        return;
    }

    public void enter()
    {
        java.lang.AssertionError $r5;
        org.apache.xmlbeans.impl.store.Cur[] $r1, r2, $r3, $r4;
        org.apache.xmlbeans.impl.store.Locale r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        $z0 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i7 = r0.<org.apache.xmlbeans.impl.store.Locale: int _numTempFramesLeft>;

        if $i7 >= 0 goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        $i0 = r0.<org.apache.xmlbeans.impl.store.Locale: int _numTempFramesLeft>;

        $i1 = $i0 - 1;

        r0.<org.apache.xmlbeans.impl.store.Locale: int _numTempFramesLeft> = $i1;

        if $i1 > 0 goto label2;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur[] _tempFrames>;

        $i4 = lengthof $r1;

        r0.<org.apache.xmlbeans.impl.store.Locale: int _numTempFramesLeft> = $i4;

        $i5 = $i4 * 2;

        r2 = newarray (org.apache.xmlbeans.impl.store.Cur)[$i5];

        $r4 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur[] _tempFrames>;

        $r3 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur[] _tempFrames>;

        $i6 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r2, 0, $i6);

        r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur[] _tempFrames> = r2;

     label2:
        $i2 = r0.<org.apache.xmlbeans.impl.store.Locale: int _entryCount>;

        $i3 = $i2 + 1;

        r0.<org.apache.xmlbeans.impl.store.Locale: int _entryCount> = $i3;

        if $i3 <= 1000 goto label3;

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Locale: void pollQueue()>();

        r0.<org.apache.xmlbeans.impl.store.Locale: int _entryCount> = 0;

     label3:
        return;
    }

    private void pollQueue()
    {
        java.lang.ref.Reference $r3;
        org.apache.xmlbeans.impl.store.Locale$Ref $r5;
        org.apache.xmlbeans.impl.store.Locale r0;
        java.lang.ref.ReferenceQueue $r1, $r2;
        org.apache.xmlbeans.impl.store.Cur $r4, $r6;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Locale: java.lang.ref.ReferenceQueue _refQueue>;

        if $r1 == null goto label4;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Locale: java.lang.ref.ReferenceQueue _refQueue>;

        $r3 = virtualinvoke $r2.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>();

        $r5 = (org.apache.xmlbeans.impl.store.Locale$Ref) $r3;

        if $r5 != null goto label2;

        goto label4;

     label2:
        $r4 = $r5.<org.apache.xmlbeans.impl.store.Locale$Ref: org.apache.xmlbeans.impl.store.Cur _cur>;

        if $r4 == null goto label3;

        $r6 = $r5.<org.apache.xmlbeans.impl.store.Locale$Ref: org.apache.xmlbeans.impl.store.Cur _cur>;

        virtualinvoke $r6.<org.apache.xmlbeans.impl.store.Cur: void release()>();

     label3:
        goto label1;

     label4:
        return;
    }

    public void exit(org.apache.xmlbeans.impl.store.Locale)
    {
        org.apache.xmlbeans.impl.store.Locale r0, r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Locale;

        virtualinvoke r0.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        if r1 == r0 goto label1;

        virtualinvoke r1.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

     label1:
        return;
    }

    public void exit()
    {
        java.lang.AssertionError $r4;
        org.apache.xmlbeans.impl.store.Cur[] $r1, $r2, $r9, $r10;
        java.lang.StringBuffer $r5, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r8;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.store.Locale r0;
        org.apache.xmlbeans.impl.store.Cur $r3, $r11;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        $z0 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $i3 = r0.<org.apache.xmlbeans.impl.store.Locale: int _numTempFramesLeft>;

        if $i3 < 0 goto label1;

        $i6 = r0.<org.apache.xmlbeans.impl.store.Locale: int _numTempFramesLeft>;

        $r9 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur[] _tempFrames>;

        $i4 = lengthof $r9;

        $i5 = $i4 - 1;

        if $i6 <= $i5 goto label2;

     label1:
        $r4 = new java.lang.AssertionError;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" Temp frames mismanaged. Impossible stack frame. Unsynchronized: ");

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Locale: boolean noSync()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>($r8);

        throw $r4;

     label2:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur[] _tempFrames>;

        $i2 = lengthof $r1;

        $i0 = r0.<org.apache.xmlbeans.impl.store.Locale: int _numTempFramesLeft>;

        $i1 = $i0 + 1;

        r0.<org.apache.xmlbeans.impl.store.Locale: int _numTempFramesLeft> = $i1;

        $i7 = $i2 - $i1;

     label3:
        $r10 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur[] _tempFrames>;

        $r11 = $r10[$i7];

        if $r11 == null goto label4;

        $r2 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Cur[] _tempFrames>;

        $r3 = $r2[$i7];

        virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Cur: void release()>();

        goto label3;

     label4:
        return;
    }

    public boolean noSync()
    {
        org.apache.xmlbeans.impl.store.Locale r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        $z0 = r0.<org.apache.xmlbeans.impl.store.Locale: boolean _noSync>;

        return $z0;
    }

    public boolean sync()
    {
        org.apache.xmlbeans.impl.store.Locale r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        $z0 = r0.<org.apache.xmlbeans.impl.store.Locale: boolean _noSync>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    static final boolean isWhiteSpace(java.lang.String)
    {
        int $i0, i2, $i4;
        char $c1;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i2 = virtualinvoke r0.<java.lang.String: int length()>();

     label1:
        $i0 = i2;

        $i4 = (int) -1;

        i2 = i2 + $i4;

        if $i0 <= 0 goto label2;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $z0 = staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: boolean isWhiteSpace(char)>($c1);

        if $z0 != 0 goto label1;

        return 0;

     label2:
        return 1;
    }

    static final boolean isWhiteSpace(java.lang.StringBuffer)
    {
        java.lang.StringBuffer r0;
        int $i0, i2, $i4;
        char $c1;
        boolean $z0;

        r0 := @parameter0: java.lang.StringBuffer;

        i2 = virtualinvoke r0.<java.lang.StringBuffer: int length()>();

     label1:
        $i0 = i2;

        $i4 = (int) -1;

        i2 = i2 + $i4;

        if $i0 <= 0 goto label2;

        $c1 = virtualinvoke r0.<java.lang.StringBuffer: char charAt(int)>(i2);

        $z0 = staticinvoke <org.apache.xmlbeans.impl.store.CharUtil: boolean isWhiteSpace(char)>($c1);

        if $z0 != 0 goto label1;

        return 0;

     label2:
        return 1;
    }

    static boolean beginsWithXml(java.lang.String)
    {
        char $c1, $c2, $c3;
        int $i0, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 >= 3 goto label1;

        return 0;

     label1:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i4 = (int) $c1;

        if $i4 == 120 goto label2;

        $i5 = (int) $c1;

        if $i5 != 88 goto label5;

     label2:
        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i6 = (int) $c2;

        if $i6 == 109 goto label3;

        $i7 = (int) $c2;

        if $i7 != 77 goto label5;

     label3:
        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i8 = (int) $c3;

        if $i8 == 108 goto label4;

        $i9 = (int) $c3;

        if $i9 != 76 goto label5;

     label4:
        return 1;

     label5:
        return 0;
    }

    static boolean isXmlns(javax.xml.namespace.QName)
    {
        int $i0;
        javax.xml.namespace.QName r0;
        java.lang.String $r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: javax.xml.namespace.QName;

        $r1 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        $r2 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    javax.xml.namespace.QName createXmlns(java.lang.String)
    {
        int $i0;
        org.apache.xmlbeans.impl.store.Locale r0;
        java.lang.String r1;
        javax.xml.namespace.QName $r2;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        r1 = "";

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Locale: javax.xml.namespace.QName makeQName(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/2000/xmlns/", "xmlns", "");

        goto label3;

     label2:
        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Locale: javax.xml.namespace.QName makeQName(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/2000/xmlns/", r1, "xmlns");

     label3:
        return $r2;
    }

    static java.lang.String xmlnsPrefix(javax.xml.namespace.QName)
    {
        javax.xml.namespace.QName r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @parameter0: javax.xml.namespace.QName;

        $r1 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        goto label2;

     label1:
        $r2 = "";

     label2:
        return $r2;
    }

    private static org.apache.xmlbeans.impl.store.Locale$SaxLoader getPiccoloSaxLoader()
    {
        org.apache.xmlbeans.impl.store.Locale$SaxLoader r4;
        org.apache.xmlbeans.impl.store.Locale$PiccoloSaxLoader $r2;
        org.apache.xmlbeans.impl.common.SystemCache $r0, $r3;
        java.lang.Object $r1;

        $r0 = staticinvoke <org.apache.xmlbeans.impl.common.SystemCache: org.apache.xmlbeans.impl.common.SystemCache get()>();

        $r1 = virtualinvoke $r0.<org.apache.xmlbeans.impl.common.SystemCache: java.lang.Object getSaxLoader()>();

        r4 = (org.apache.xmlbeans.impl.store.Locale$SaxLoader) $r1;

        if r4 != null goto label1;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.store.Locale$PiccoloSaxLoader: org.apache.xmlbeans.impl.store.Locale$PiccoloSaxLoader newInstance()>();

        r4 = $r2;

        $r3 = staticinvoke <org.apache.xmlbeans.impl.common.SystemCache: org.apache.xmlbeans.impl.common.SystemCache get()>();

        virtualinvoke $r3.<org.apache.xmlbeans.impl.common.SystemCache: void setSaxLoader(java.lang.Object)>($r2);

     label1:
        return r4;
    }

    private static org.apache.xmlbeans.impl.store.Locale$SaxLoader getSaxLoader(org.apache.xmlbeans.XmlOptions)
    {
        org.apache.xmlbeans.impl.store.Locale$SaxLoader $r1, r10;
        org.apache.xmlbeans.impl.store.Locale$XmlReaderSaxLoader $r4;
        org.apache.xmlbeans.impl.store.Locale$DefaultEntityResolver $r7;
        java.lang.IllegalArgumentException $r5;
        org.xml.sax.XMLReader r3;
        org.apache.xmlbeans.XmlOptions $r0, r8;
        java.lang.Object $r2, $r6;
        org.xml.sax.EntityResolver r9;
        boolean $z0, $z1;

        r8 := @parameter0: org.apache.xmlbeans.XmlOptions;

        $r0 = staticinvoke <org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions maskNull(org.apache.xmlbeans.XmlOptions)>(r8);

        r9 = null;

        $z0 = virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: boolean hasOption(java.lang.Object)>("LOAD_USE_DEFAULT_RESOLVER");

        if $z0 != 0 goto label2;

        $r6 = virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: java.lang.Object get(java.lang.Object)>("ENTITY_RESOLVER");

        r9 = (org.xml.sax.EntityResolver) $r6;

        if r9 != null goto label1;

        r9 = staticinvoke <org.apache.xmlbeans.impl.common.ResolverUtil: org.xml.sax.EntityResolver getGlobalEntityResolver()>();

     label1:
        if r9 != null goto label2;

        $r7 = new org.apache.xmlbeans.impl.store.Locale$DefaultEntityResolver;

        specialinvoke $r7.<org.apache.xmlbeans.impl.store.Locale$DefaultEntityResolver: void <init>(org.apache.xmlbeans.impl.store.Locale$1)>(null);

        r9 = $r7;

     label2:
        $z1 = virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: boolean hasOption(java.lang.Object)>("LOAD_USE_XMLREADER");

        if $z1 == 0 goto label5;

        $r2 = virtualinvoke $r0.<org.apache.xmlbeans.XmlOptions: java.lang.Object get(java.lang.Object)>("LOAD_USE_XMLREADER");

        r3 = (org.xml.sax.XMLReader) $r2;

        if r3 != null goto label3;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("XMLReader is null");

        throw $r5;

     label3:
        $r4 = new org.apache.xmlbeans.impl.store.Locale$XmlReaderSaxLoader;

        specialinvoke $r4.<org.apache.xmlbeans.impl.store.Locale$XmlReaderSaxLoader: void <init>(org.xml.sax.XMLReader)>(r3);

        r10 = $r4;

        if r9 == null goto label4;

        interfaceinvoke r3.<org.xml.sax.XMLReader: void setEntityResolver(org.xml.sax.EntityResolver)>(r9);

     label4:
        goto label6;

     label5:
        $r1 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$SaxLoader getPiccoloSaxLoader()>();

        r10 = $r1;

        virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Locale$SaxLoader: void setEntityResolver(org.xml.sax.EntityResolver)>(r9);

     label6:
        return r10;
    }

    private org.apache.xmlbeans.impl.store.DomImpl$Dom load(org.xml.sax.InputSource, org.apache.xmlbeans.XmlOptions) throws org.apache.xmlbeans.XmlException, java.io.IOException
    {
        org.apache.xmlbeans.impl.store.DomImpl$Dom $r5;
        org.apache.xmlbeans.impl.store.Locale$SaxLoader $r1;
        org.xml.sax.InputSource r3;
        org.apache.xmlbeans.XmlOptions r0;
        org.apache.xmlbeans.impl.store.Locale r2;
        org.apache.xmlbeans.impl.store.Cur $r4;

        r2 := @this: org.apache.xmlbeans.impl.store.Locale;

        r3 := @parameter0: org.xml.sax.InputSource;

        r0 := @parameter1: org.apache.xmlbeans.XmlOptions;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.Locale$SaxLoader getSaxLoader(org.apache.xmlbeans.XmlOptions)>(r0);

        $r4 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Locale$SaxLoader: org.apache.xmlbeans.impl.store.Cur load(org.apache.xmlbeans.impl.store.Locale,org.xml.sax.InputSource,org.apache.xmlbeans.XmlOptions)>(r2, r3, r0);

        $r5 = virtualinvoke $r4.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.DomImpl$Dom getDom()>();

        return $r5;
    }

    public org.apache.xmlbeans.impl.store.DomImpl$Dom load(java.io.Reader) throws org.apache.xmlbeans.XmlException, java.io.IOException
    {
        org.apache.xmlbeans.impl.store.Locale r0;
        org.apache.xmlbeans.impl.store.DomImpl$Dom $r2;
        java.io.Reader r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        r1 := @parameter0: java.io.Reader;

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.DomImpl$Dom load(java.io.Reader,org.apache.xmlbeans.XmlOptions)>(r1, null);

        return $r2;
    }

    public org.apache.xmlbeans.impl.store.DomImpl$Dom load(java.io.Reader, org.apache.xmlbeans.XmlOptions) throws org.apache.xmlbeans.XmlException, java.io.IOException
    {
        org.apache.xmlbeans.impl.store.DomImpl$Dom $r4;
        org.xml.sax.InputSource $r1;
        org.apache.xmlbeans.XmlOptions r3;
        org.apache.xmlbeans.impl.store.Locale r0;
        java.io.Reader r2;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        r2 := @parameter0: java.io.Reader;

        r3 := @parameter1: org.apache.xmlbeans.XmlOptions;

        $r1 = new org.xml.sax.InputSource;

        specialinvoke $r1.<org.xml.sax.InputSource: void <init>(java.io.Reader)>(r2);

        $r4 = specialinvoke r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.DomImpl$Dom load(org.xml.sax.InputSource,org.apache.xmlbeans.XmlOptions)>($r1, r3);

        return $r4;
    }

    public org.apache.xmlbeans.impl.store.DomImpl$Dom load(java.io.InputStream) throws org.apache.xmlbeans.XmlException, java.io.IOException
    {
        org.apache.xmlbeans.impl.store.Locale r0;
        org.apache.xmlbeans.impl.store.DomImpl$Dom $r2;
        java.io.InputStream r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        r1 := @parameter0: java.io.InputStream;

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.DomImpl$Dom load(java.io.InputStream,org.apache.xmlbeans.XmlOptions)>(r1, null);

        return $r2;
    }

    public org.apache.xmlbeans.impl.store.DomImpl$Dom load(java.io.InputStream, org.apache.xmlbeans.XmlOptions) throws org.apache.xmlbeans.XmlException, java.io.IOException
    {
        org.apache.xmlbeans.impl.store.DomImpl$Dom $r4;
        org.xml.sax.InputSource $r1;
        org.apache.xmlbeans.XmlOptions r3;
        org.apache.xmlbeans.impl.store.Locale r0;
        java.io.InputStream r2;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        r2 := @parameter0: java.io.InputStream;

        r3 := @parameter1: org.apache.xmlbeans.XmlOptions;

        $r1 = new org.xml.sax.InputSource;

        specialinvoke $r1.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>(r2);

        $r4 = specialinvoke r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.DomImpl$Dom load(org.xml.sax.InputSource,org.apache.xmlbeans.XmlOptions)>($r1, r3);

        return $r4;
    }

    public org.apache.xmlbeans.impl.store.DomImpl$Dom load(java.lang.String) throws org.apache.xmlbeans.XmlException
    {
        org.apache.xmlbeans.impl.store.Locale r0;
        org.apache.xmlbeans.impl.store.DomImpl$Dom $r2;
        java.lang.String r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.DomImpl$Dom load(java.lang.String,org.apache.xmlbeans.XmlOptions)>(r1, null);

        return $r2;
    }

    public org.apache.xmlbeans.impl.store.DomImpl$Dom load(java.lang.String, org.apache.xmlbeans.XmlOptions) throws org.apache.xmlbeans.XmlException
    {
        org.apache.xmlbeans.impl.store.DomImpl$Dom $r4;
        java.lang.Throwable $r6;
        java.io.IOException $r5, $r7, $r11;
        java.lang.AssertionError $r10;
        org.apache.xmlbeans.XmlException $r8;
        java.io.StringReader $r0;
        org.apache.xmlbeans.XmlOptions r3;
        org.apache.xmlbeans.impl.store.Locale r2;
        java.lang.String r1, $r9;
        boolean $z0;

        r2 := @this: org.apache.xmlbeans.impl.store.Locale;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: org.apache.xmlbeans.XmlOptions;

        $r0 = new java.io.StringReader;

        specialinvoke $r0.<java.io.StringReader: void <init>(java.lang.String)>(r1);

     label01:
        $r4 = virtualinvoke r2.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.DomImpl$Dom load(java.io.Reader,org.apache.xmlbeans.XmlOptions)>($r0, r3);

     label02:
        virtualinvoke $r0.<java.io.Reader: void close()>();

     label03:
        goto label05;

     label04:
        $r11 := @caughtexception;

     label05:
        return $r4;

     label06:
        $r7 := @caughtexception;

        $z0 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z0 != 0 goto label07;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>("StringReader should not throw IOException");

        throw $r10;

     label07:
        $r8 = new org.apache.xmlbeans.XmlException;

        $r9 = virtualinvoke $r7.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r8.<org.apache.xmlbeans.XmlException: void <init>(java.lang.String,java.lang.Throwable)>($r9, $r7);

        throw $r8;

     label08:
        $r6 := @caughtexception;

     label09:
        virtualinvoke $r0.<java.io.Reader: void close()>();

     label10:
        goto label12;

     label11:
        $r5 := @caughtexception;

     label12:
        throw $r6;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.io.IOException from label01 to label02 with label06;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.lang.Throwable from label06 to label09 with label08;
    }

    public org.w3c.dom.Document createDocument(java.lang.String, java.lang.String, org.w3c.dom.DocumentType)
    {
        org.w3c.dom.Document $r4;
        org.apache.xmlbeans.impl.store.Locale r0;
        java.lang.String r1, r2;
        org.w3c.dom.DocumentType r3;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.w3c.dom.DocumentType;

        $r4 = staticinvoke <org.apache.xmlbeans.impl.store.DomImpl: org.w3c.dom.Document _domImplementation_createDocument(org.apache.xmlbeans.impl.store.Locale,java.lang.String,java.lang.String,org.w3c.dom.DocumentType)>(r0, r1, r2, r3);

        return $r4;
    }

    public org.w3c.dom.DocumentType createDocumentType(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.xmlbeans.impl.store.Locale r1;
        java.lang.RuntimeException $r0;
        java.lang.String r2, r3, r4;

        r1 := @this: org.apache.xmlbeans.impl.store.Locale;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented");

        throw $r0;
    }

    public boolean hasFeature(java.lang.String, java.lang.String)
    {
        org.apache.xmlbeans.impl.store.Locale r0;
        java.lang.String r1, r2;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = staticinvoke <org.apache.xmlbeans.impl.store.DomImpl: boolean _domImplementation_hasFeature(org.apache.xmlbeans.impl.store.Locale,java.lang.String,java.lang.String)>(r0, r1, r2);

        return $z0;
    }

    public java.lang.Object getFeature(java.lang.String, java.lang.String)
    {
        org.apache.xmlbeans.impl.store.Locale r1;
        java.lang.RuntimeException $r0;
        java.lang.String r2, r3;

        r1 := @this: org.apache.xmlbeans.impl.store.Locale;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("DOM Level 3 Not implemented");

        throw $r0;
    }

    private static org.apache.xmlbeans.impl.store.DomImpl$Dom checkNode(org.w3c.dom.Node)
    {
        org.apache.xmlbeans.impl.store.DomImpl$Dom $r1;
        org.w3c.dom.Node r0;
        java.lang.IllegalArgumentException $r2, $r3;
        boolean $z0;

        r0 := @parameter0: org.w3c.dom.Node;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Node is null");

        throw $r3;

     label1:
        $z0 = r0 instanceof org.apache.xmlbeans.impl.store.DomImpl$Dom;

        if $z0 != 0 goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Node is not an XmlBeans node");

        throw $r2;

     label2:
        $r1 = (org.apache.xmlbeans.impl.store.DomImpl$Dom) r0;

        return $r1;
    }

    public static org.apache.xmlbeans.XmlCursor nodeToCursor(org.w3c.dom.Node)
    {
        org.apache.xmlbeans.impl.store.DomImpl$Dom $r1;
        org.w3c.dom.Node r0;
        org.apache.xmlbeans.XmlCursor $r2;

        r0 := @parameter0: org.w3c.dom.Node;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.DomImpl$Dom checkNode(org.w3c.dom.Node)>(r0);

        $r2 = staticinvoke <org.apache.xmlbeans.impl.store.DomImpl: org.apache.xmlbeans.XmlCursor _getXmlCursor(org.apache.xmlbeans.impl.store.DomImpl$Dom)>($r1);

        return $r2;
    }

    public static org.apache.xmlbeans.XmlObject nodeToXmlObject(org.w3c.dom.Node)
    {
        org.apache.xmlbeans.impl.store.DomImpl$Dom $r1;
        org.apache.xmlbeans.XmlObject $r2;
        org.w3c.dom.Node r0;

        r0 := @parameter0: org.w3c.dom.Node;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.DomImpl$Dom checkNode(org.w3c.dom.Node)>(r0);

        $r2 = staticinvoke <org.apache.xmlbeans.impl.store.DomImpl: org.apache.xmlbeans.XmlObject _getXmlObject(org.apache.xmlbeans.impl.store.DomImpl$Dom)>($r1);

        return $r2;
    }

    public static javax.xml.stream.XMLStreamReader nodeToXmlStream(org.w3c.dom.Node)
    {
        org.apache.xmlbeans.impl.store.DomImpl$Dom $r1;
        javax.xml.stream.XMLStreamReader $r2;
        org.w3c.dom.Node r0;

        r0 := @parameter0: org.w3c.dom.Node;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.DomImpl$Dom checkNode(org.w3c.dom.Node)>(r0);

        $r2 = staticinvoke <org.apache.xmlbeans.impl.store.DomImpl: javax.xml.stream.XMLStreamReader _getXmlStreamReader(org.apache.xmlbeans.impl.store.DomImpl$Dom)>($r1);

        return $r2;
    }

    public static org.w3c.dom.Node streamToNode(javax.xml.stream.XMLStreamReader)
    {
        javax.xml.stream.XMLStreamReader r0;
        org.w3c.dom.Node $r1;

        r0 := @parameter0: javax.xml.stream.XMLStreamReader;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.store.Jsr173: org.w3c.dom.Node nodeFromStream(javax.xml.stream.XMLStreamReader)>(r0);

        return $r1;
    }

    public void setSaajData(org.w3c.dom.Node, java.lang.Object)
    {
        org.apache.xmlbeans.impl.store.DomImpl$Dom $r2;
        org.w3c.dom.Node r0;
        org.apache.xmlbeans.impl.store.Locale r4;
        java.lang.Object r1;
        java.lang.AssertionError $r3;
        boolean $z0, $z1;

        r4 := @this: org.apache.xmlbeans.impl.store.Locale;

        r0 := @parameter0: org.w3c.dom.Node;

        r1 := @parameter1: java.lang.Object;

        $z0 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = r0 instanceof org.apache.xmlbeans.impl.store.DomImpl$Dom;

        if $z1 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r2 = (org.apache.xmlbeans.impl.store.DomImpl$Dom) r0;

        staticinvoke <org.apache.xmlbeans.impl.store.DomImpl: void saajCallback_setSaajData(org.apache.xmlbeans.impl.store.DomImpl$Dom,java.lang.Object)>($r2, r1);

        return;
    }

    public java.lang.Object getSaajData(org.w3c.dom.Node)
    {
        org.apache.xmlbeans.impl.store.DomImpl$Dom $r1;
        org.w3c.dom.Node r0;
        org.apache.xmlbeans.impl.store.Locale r4;
        java.lang.Object $r2;
        java.lang.AssertionError $r3;
        boolean $z0, $z1;

        r4 := @this: org.apache.xmlbeans.impl.store.Locale;

        r0 := @parameter0: org.w3c.dom.Node;

        $z0 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = r0 instanceof org.apache.xmlbeans.impl.store.DomImpl$Dom;

        if $z1 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r1 = (org.apache.xmlbeans.impl.store.DomImpl$Dom) r0;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.store.DomImpl: java.lang.Object saajCallback_getSaajData(org.apache.xmlbeans.impl.store.DomImpl$Dom)>($r1);

        return $r2;
    }

    public org.w3c.dom.Element createSoapElement(javax.xml.namespace.QName, javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.store.DomImpl$Dom $r3, $r5;
        java.lang.AssertionError $r6;
        org.w3c.dom.Element $r4;
        org.apache.xmlbeans.impl.store.Locale r0;
        javax.xml.namespace.QName r1, r2;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.store.Locale;

        r1 := @parameter0: javax.xml.namespace.QName;

        r2 := @parameter1: javax.xml.namespace.QName;

        $z0 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r5 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.DomImpl$Dom _ownerDoc>;

        if $r5 != null goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label1:
        $r3 = r0.<org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.impl.store.DomImpl$Dom _ownerDoc>;

        $r4 = staticinvoke <org.apache.xmlbeans.impl.store.DomImpl: org.w3c.dom.Element saajCallback_createSoapElement(org.apache.xmlbeans.impl.store.DomImpl$Dom,javax.xml.namespace.QName,javax.xml.namespace.QName)>($r3, r1, r2);

        return $r4;
    }

    public org.w3c.dom.Element importSoapElement(org.w3c.dom.Document, org.w3c.dom.Element, boolean, javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.store.DomImpl$Dom $r3;
        java.lang.AssertionError $r5;
        org.w3c.dom.Element r1, $r4;
        org.w3c.dom.Document r0;
        org.apache.xmlbeans.impl.store.Locale r6;
        javax.xml.namespace.QName r2;
        boolean $z0, z1, $z2;

        r6 := @this: org.apache.xmlbeans.impl.store.Locale;

        r0 := @parameter0: org.w3c.dom.Document;

        r1 := @parameter1: org.w3c.dom.Element;

        z1 := @parameter2: boolean;

        r2 := @parameter3: javax.xml.namespace.QName;

        $z0 = <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z2 = r0 instanceof org.apache.xmlbeans.impl.store.DomImpl$Dom;

        if $z2 != 0 goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        $r3 = (org.apache.xmlbeans.impl.store.DomImpl$Dom) r0;

        $r4 = staticinvoke <org.apache.xmlbeans.impl.store.DomImpl: org.w3c.dom.Element saajCallback_importSoapElement(org.apache.xmlbeans.impl.store.DomImpl$Dom,org.w3c.dom.Element,boolean,javax.xml.namespace.QName)>($r3, r1, z1, r2);

        return $r4;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        org.apache.xmlbeans.impl.store.Locale$1 $r7;
        java.lang.Class $r0, $r8;
        javax.xml.namespace.QName $r1, $r2, $r3, $r4, $r5, $r6;
        boolean $z0, $z1;

        <org.apache.xmlbeans.impl.store.Locale: java.lang.String COPY_USE_NEW_LOCALE> = "COPY_USE_NEW_LOCALE";

        <org.apache.xmlbeans.impl.store.Locale: java.lang.String USE_SAME_LOCALE> = "USE_SAME_LOCALE";

        <org.apache.xmlbeans.impl.store.Locale: java.lang.String _xmlnsUri> = "http://www.w3.org/2000/xmlns/";

        <org.apache.xmlbeans.impl.store.Locale: java.lang.String _xml1998Uri> = "http://www.w3.org/XML/1998/namespace";

        <org.apache.xmlbeans.impl.store.Locale: java.lang.String _openFragUri> = "http://www.openuri.org/fragment";

        <org.apache.xmlbeans.impl.store.Locale: java.lang.String _schema> = "http://www.w3.org/2001/XMLSchema";

        <org.apache.xmlbeans.impl.store.Locale: java.lang.String _xsi> = "http://www.w3.org/2001/XMLSchema-instance";

        <org.apache.xmlbeans.impl.store.Locale: int WS_COLLAPSE> = 3;

        <org.apache.xmlbeans.impl.store.Locale: int WS_REPLACE> = 2;

        <org.apache.xmlbeans.impl.store.Locale: int WS_PRESERVE> = 1;

        <org.apache.xmlbeans.impl.store.Locale: int WS_UNSPECIFIED> = 0;

        <org.apache.xmlbeans.impl.store.Locale: int TEXT> = 0;

        <org.apache.xmlbeans.impl.store.Locale: int PROCINST> = 5;

        <org.apache.xmlbeans.impl.store.Locale: int COMMENT> = 4;

        <org.apache.xmlbeans.impl.store.Locale: int ATTR> = 3;

        <org.apache.xmlbeans.impl.store.Locale: int ELEM> = 2;

        <org.apache.xmlbeans.impl.store.Locale: int ROOT> = 1;

        $r0 = <org.apache.xmlbeans.impl.store.Locale: java.lang.Class class$org$apache$xmlbeans$impl$store$Locale>;

        if $r0 != null goto label1;

        $r8 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.store.Locale");

        <org.apache.xmlbeans.impl.store.Locale: java.lang.Class class$org$apache$xmlbeans$impl$store$Locale> = $r8;

        goto label2;

     label1:
        $r8 = <org.apache.xmlbeans.impl.store.Locale: java.lang.Class class$org$apache$xmlbeans$impl$store$Locale>;

     label2:
        $z0 = virtualinvoke $r8.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.impl.store.Locale: boolean $assertionsDisabled> = $z1;

        $r1 = new javax.xml.namespace.QName;

        specialinvoke $r1.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema-instance", "nil", "xsi");

        <org.apache.xmlbeans.impl.store.Locale: javax.xml.namespace.QName _xsiNil> = $r1;

        $r2 = new javax.xml.namespace.QName;

        specialinvoke $r2.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema-instance", "type", "xsi");

        <org.apache.xmlbeans.impl.store.Locale: javax.xml.namespace.QName _xsiType> = $r2;

        $r3 = new javax.xml.namespace.QName;

        specialinvoke $r3.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema-instance", "schemaLocation", "xsi");

        <org.apache.xmlbeans.impl.store.Locale: javax.xml.namespace.QName _xsiLoc> = $r3;

        $r4 = new javax.xml.namespace.QName;

        specialinvoke $r4.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema-instance", "noNamespaceSchemaLocation", "xsi");

        <org.apache.xmlbeans.impl.store.Locale: javax.xml.namespace.QName _xsiNoLoc> = $r4;

        $r5 = new javax.xml.namespace.QName;

        specialinvoke $r5.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String,java.lang.String)>("http://www.openuri.org/fragment", "fragment", "frag");

        <org.apache.xmlbeans.impl.store.Locale: javax.xml.namespace.QName _openuriFragment> = $r5;

        $r6 = new javax.xml.namespace.QName;

        specialinvoke $r6.<javax.xml.namespace.QName: void <init>(java.lang.String)>("xml-fragment");

        <org.apache.xmlbeans.impl.store.Locale: javax.xml.namespace.QName _xmlFragment> = $r6;

        $r7 = new org.apache.xmlbeans.impl.store.Locale$1;

        specialinvoke $r7.<org.apache.xmlbeans.impl.store.Locale$1: void <init>()>();

        <org.apache.xmlbeans.impl.store.Locale: java.lang.ThreadLocal tl_scrubBuffer> = $r7;

        return;
    }
}
