public class org.apache.lucene.queryparser.flexible.core.QueryParserHelper extends java.lang.Object
{
    private org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor processor;
    private org.apache.lucene.queryparser.flexible.core.parser.SyntaxParser syntaxParser;
    private org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder builder;
    private org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler config;

    public void <init>(org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler, org.apache.lucene.queryparser.flexible.core.parser.SyntaxParser, org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor, org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder)
    {
        org.apache.lucene.queryparser.flexible.core.QueryParserHelper r0;
        org.apache.lucene.queryparser.flexible.core.parser.SyntaxParser r1;
        org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler r2;
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor r3;
        org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder r4;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.QueryParserHelper;

        r2 := @parameter0: org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler;

        r1 := @parameter1: org.apache.lucene.queryparser.flexible.core.parser.SyntaxParser;

        r3 := @parameter2: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor;

        r4 := @parameter3: org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.queryparser.flexible.core.QueryParserHelper: org.apache.lucene.queryparser.flexible.core.parser.SyntaxParser syntaxParser> = r1;

        r0.<org.apache.lucene.queryparser.flexible.core.QueryParserHelper: org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler config> = r2;

        r0.<org.apache.lucene.queryparser.flexible.core.QueryParserHelper: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor processor> = r3;

        r0.<org.apache.lucene.queryparser.flexible.core.QueryParserHelper: org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder builder> = r4;

        if r3 == null goto label1;

        interfaceinvoke r3.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor: void setQueryConfigHandler(org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler)>(r2);

     label1:
        return;
    }

    public org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor getQueryNodeProcessor()
    {
        org.apache.lucene.queryparser.flexible.core.QueryParserHelper r0;
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor $r1;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.QueryParserHelper;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.core.QueryParserHelper: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor processor>;

        return $r1;
    }

    public void setQueryNodeProcessor(org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor)
    {
        org.apache.lucene.queryparser.flexible.core.QueryParserHelper r0;
        org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler $r3;
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor r1, $r2;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.QueryParserHelper;

        r1 := @parameter0: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor;

        r0.<org.apache.lucene.queryparser.flexible.core.QueryParserHelper: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor processor> = r1;

        $r2 = r0.<org.apache.lucene.queryparser.flexible.core.QueryParserHelper: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor processor>;

        $r3 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.QueryParserHelper: org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler getQueryConfigHandler()>();

        interfaceinvoke $r2.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor: void setQueryConfigHandler(org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler)>($r3);

        return;
    }

    public void setSyntaxParser(org.apache.lucene.queryparser.flexible.core.parser.SyntaxParser)
    {
        org.apache.lucene.queryparser.flexible.core.QueryParserHelper r1;
        org.apache.lucene.queryparser.flexible.core.parser.SyntaxParser r0;
        java.lang.IllegalArgumentException $r2;

        r1 := @this: org.apache.lucene.queryparser.flexible.core.QueryParserHelper;

        r0 := @parameter0: org.apache.lucene.queryparser.flexible.core.parser.SyntaxParser;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("textParser should not be null!");

        throw $r2;

     label1:
        r1.<org.apache.lucene.queryparser.flexible.core.QueryParserHelper: org.apache.lucene.queryparser.flexible.core.parser.SyntaxParser syntaxParser> = r0;

        return;
    }

    public void setQueryBuilder(org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder)
    {
        org.apache.lucene.queryparser.flexible.core.QueryParserHelper r1;
        java.lang.IllegalArgumentException $r2;
        org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder r0;

        r1 := @this: org.apache.lucene.queryparser.flexible.core.QueryParserHelper;

        r0 := @parameter0: org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("queryBuilder should not be null!");

        throw $r2;

     label1:
        r1.<org.apache.lucene.queryparser.flexible.core.QueryParserHelper: org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder builder> = r0;

        return;
    }

    public org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler getQueryConfigHandler()
    {
        org.apache.lucene.queryparser.flexible.core.QueryParserHelper r0;
        org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler $r1;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.QueryParserHelper;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.core.QueryParserHelper: org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler config>;

        return $r1;
    }

    public org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder getQueryBuilder()
    {
        org.apache.lucene.queryparser.flexible.core.QueryParserHelper r0;
        org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder $r1;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.QueryParserHelper;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.core.QueryParserHelper: org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder builder>;

        return $r1;
    }

    public org.apache.lucene.queryparser.flexible.core.parser.SyntaxParser getSyntaxParser()
    {
        org.apache.lucene.queryparser.flexible.core.QueryParserHelper r0;
        org.apache.lucene.queryparser.flexible.core.parser.SyntaxParser $r1;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.QueryParserHelper;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.core.QueryParserHelper: org.apache.lucene.queryparser.flexible.core.parser.SyntaxParser syntaxParser>;

        return $r1;
    }

    public void setQueryConfigHandler(org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler)
    {
        org.apache.lucene.queryparser.flexible.core.QueryParserHelper r0;
        org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler r1;
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor $r2;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.QueryParserHelper;

        r1 := @parameter0: org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler;

        r0.<org.apache.lucene.queryparser.flexible.core.QueryParserHelper: org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler config> = r1;

        $r2 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.QueryParserHelper: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor getQueryNodeProcessor()>();

        if $r2 == null goto label1;

        interfaceinvoke $r2.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor: void setQueryConfigHandler(org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler)>(r1);

     label1:
        return;
    }

    public java.lang.Object parse(java.lang.String, java.lang.String) throws org.apache.lucene.queryparser.flexible.core.QueryNodeException
    {
        org.apache.lucene.queryparser.flexible.core.parser.SyntaxParser $r1;
        org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder $r6;
        org.apache.lucene.queryparser.flexible.core.QueryParserHelper r0;
        org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor $r5;
        java.lang.Object $r7;
        java.lang.String r2, r3;
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode $r4, r8;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.QueryParserHelper;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.QueryParserHelper: org.apache.lucene.queryparser.flexible.core.parser.SyntaxParser getSyntaxParser()>();

        $r4 = interfaceinvoke $r1.<org.apache.lucene.queryparser.flexible.core.parser.SyntaxParser: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode parse(java.lang.CharSequence,java.lang.CharSequence)>(r2, r3);

        r8 = $r4;

        $r5 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.QueryParserHelper: org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor getQueryNodeProcessor()>();

        if $r5 == null goto label1;

        r8 = interfaceinvoke $r5.<org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode process(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)>($r4);

     label1:
        $r6 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.QueryParserHelper: org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder getQueryBuilder()>();

        $r7 = interfaceinvoke $r6.<org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder: java.lang.Object build(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)>(r8);

        return $r7;
    }
}
