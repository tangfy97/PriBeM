public class org.fife.ui.rtextarea.ColorBackgroundPainterStrategy extends java.lang.Object implements org.fife.ui.rtextarea.BackgroundPainterStrategy
{
    private java.awt.Color color;

    public void <init>(java.awt.Color)
    {
        java.awt.Color r1;
        org.fife.ui.rtextarea.ColorBackgroundPainterStrategy r0;

        r0 := @this: org.fife.ui.rtextarea.ColorBackgroundPainterStrategy;

        r1 := @parameter0: java.awt.Color;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.fife.ui.rtextarea.ColorBackgroundPainterStrategy: void setColor(java.awt.Color)>(r1);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.awt.Color $r3, $r4;
        org.fife.ui.rtextarea.ColorBackgroundPainterStrategy r1, $r2;
        java.lang.Object r0;
        boolean $z0, $z1, $z2;

        r1 := @this: org.fife.ui.rtextarea.ColorBackgroundPainterStrategy;

        r0 := @parameter0: java.lang.Object;

        if r0 == null goto label1;

        $z0 = r0 instanceof org.fife.ui.rtextarea.ColorBackgroundPainterStrategy;

        if $z0 == 0 goto label1;

        $r3 = r1.<org.fife.ui.rtextarea.ColorBackgroundPainterStrategy: java.awt.Color color>;

        $r2 = (org.fife.ui.rtextarea.ColorBackgroundPainterStrategy) r0;

        $r4 = virtualinvoke $r2.<org.fife.ui.rtextarea.ColorBackgroundPainterStrategy: java.awt.Color getColor()>();

        $z1 = virtualinvoke $r3.<java.awt.Color: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public java.awt.Color getColor()
    {
        java.awt.Color $r1;
        org.fife.ui.rtextarea.ColorBackgroundPainterStrategy r0;

        r0 := @this: org.fife.ui.rtextarea.ColorBackgroundPainterStrategy;

        $r1 = r0.<org.fife.ui.rtextarea.ColorBackgroundPainterStrategy: java.awt.Color color>;

        return $r1;
    }

    public int hashCode()
    {
        java.awt.Color $r1;
        int $i0;
        org.fife.ui.rtextarea.ColorBackgroundPainterStrategy r0;

        r0 := @this: org.fife.ui.rtextarea.ColorBackgroundPainterStrategy;

        $r1 = r0.<org.fife.ui.rtextarea.ColorBackgroundPainterStrategy: java.awt.Color color>;

        $i0 = virtualinvoke $r1.<java.awt.Color: int hashCode()>();

        return $i0;
    }

    public void paint(java.awt.Graphics, java.awt.Rectangle)
    {
        java.awt.Color $r1, $r3;
        java.awt.Rectangle r4;
        org.fife.ui.rtextarea.ColorBackgroundPainterStrategy r2;
        java.awt.Graphics r0;
        int $i0, $i1, $i2, $i3;

        r2 := @this: org.fife.ui.rtextarea.ColorBackgroundPainterStrategy;

        r0 := @parameter0: java.awt.Graphics;

        r4 := @parameter1: java.awt.Rectangle;

        $r1 = virtualinvoke r0.<java.awt.Graphics: java.awt.Color getColor()>();

        $r3 = r2.<org.fife.ui.rtextarea.ColorBackgroundPainterStrategy: java.awt.Color color>;

        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r3);

        $i3 = r4.<java.awt.Rectangle: int x>;

        $i2 = r4.<java.awt.Rectangle: int y>;

        $i1 = r4.<java.awt.Rectangle: int width>;

        $i0 = r4.<java.awt.Rectangle: int height>;

        virtualinvoke r0.<java.awt.Graphics: void fillRect(int,int,int,int)>($i3, $i2, $i1, $i0);

        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r1);

        return;
    }

    public void setColor(java.awt.Color)
    {
        java.awt.Color r1;
        org.fife.ui.rtextarea.ColorBackgroundPainterStrategy r0;

        r0 := @this: org.fife.ui.rtextarea.ColorBackgroundPainterStrategy;

        r1 := @parameter0: java.awt.Color;

        r0.<org.fife.ui.rtextarea.ColorBackgroundPainterStrategy: java.awt.Color color> = r1;

        return;
    }
}
