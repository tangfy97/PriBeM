public class com.mycila.inject.internal.asm.util.TraceAnnotationVisitor extends com.mycila.inject.internal.asm.util.TraceAbstractVisitor implements com.mycila.inject.internal.asm.AnnotationVisitor
{
    protected com.mycila.inject.internal.asm.AnnotationVisitor av;
    private int valueNumber;

    public void <init>()
    {
        com.mycila.inject.internal.asm.util.TraceAnnotationVisitor r0;

        r0 := @this: com.mycila.inject.internal.asm.util.TraceAnnotationVisitor;

        specialinvoke r0.<com.mycila.inject.internal.asm.util.TraceAbstractVisitor: void <init>()>();

        r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: int valueNumber> = 0;

        return;
    }

    public void visit(java.lang.String, java.lang.Object)
    {
        byte[] $r14, r27;
        java.lang.Float $r17;
        java.lang.Integer $r18;
        byte $b14, $b19;
        java.lang.Character $r19;
        java.lang.Long $r16;
        java.lang.Double $r15;
        double[] $r7, r34;
        float[] $r8, r33;
        long $l5, $l15;
        short $s11, $s18;
        java.lang.StringBuffer $r1, $r6, $r25, $r26, $r35, $r37;
        java.lang.String r2, $r24, $r38;
        boolean[] $r13, r28;
        char[] $r11, r30;
        com.mycila.inject.internal.asm.util.TraceAnnotationVisitor r0;
        int[] $r10, r31;
        java.lang.Short $r20;
        java.lang.Byte $r22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20;
        java.util.List $r36;
        float $f0, $f1;
        short[] $r12, r29;
        com.mycila.inject.internal.asm.Type $r23;
        long[] $r9, r32;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i10, $i12, $i13, $i16, i20, i21, i22, i23, i24, i25, i26, i27;
        com.mycila.inject.internal.asm.AnnotationVisitor $r5, $r39;
        java.lang.Boolean $r21;
        double $d0, $d1;
        char $c9, $c17;
        java.lang.Object r3;
        java.lang.Class $r4;

        r0 := @this: com.mycila.inject.internal.asm.util.TraceAnnotationVisitor;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        $r1 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $i0 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: int valueNumber>;

        $i1 = $i0 + 1;

        r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: int valueNumber> = $i1;

        specialinvoke r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: void appendComa(int)>($i0);

        if r2 == null goto label01;

        $r25 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.lang.StringBuffer buf>;

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(61);

     label01:
        $z0 = r3 instanceof java.lang.String;

        if $z0 == 0 goto label02;

        $r24 = (java.lang.String) r3;

        specialinvoke r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: void visitString(java.lang.String)>($r24);

        goto label35;

     label02:
        $z1 = r3 instanceof com.mycila.inject.internal.asm.Type;

        if $z1 == 0 goto label03;

        $r23 = (com.mycila.inject.internal.asm.Type) r3;

        specialinvoke r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: void visitType(com.mycila.inject.internal.asm.Type)>($r23);

        goto label35;

     label03:
        $z2 = r3 instanceof java.lang.Byte;

        if $z2 == 0 goto label04;

        $r22 = (java.lang.Byte) r3;

        $b19 = virtualinvoke $r22.<java.lang.Byte: byte byteValue()>();

        specialinvoke r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: void visitByte(byte)>($b19);

        goto label35;

     label04:
        $z3 = r3 instanceof java.lang.Boolean;

        if $z3 == 0 goto label05;

        $r21 = (java.lang.Boolean) r3;

        $z20 = virtualinvoke $r21.<java.lang.Boolean: boolean booleanValue()>();

        specialinvoke r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: void visitBoolean(boolean)>($z20);

        goto label35;

     label05:
        $z4 = r3 instanceof java.lang.Short;

        if $z4 == 0 goto label06;

        $r20 = (java.lang.Short) r3;

        $s18 = virtualinvoke $r20.<java.lang.Short: short shortValue()>();

        specialinvoke r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: void visitShort(short)>($s18);

        goto label35;

     label06:
        $z5 = r3 instanceof java.lang.Character;

        if $z5 == 0 goto label07;

        $r19 = (java.lang.Character) r3;

        $c17 = virtualinvoke $r19.<java.lang.Character: char charValue()>();

        specialinvoke r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: void visitChar(char)>($c17);

        goto label35;

     label07:
        $z6 = r3 instanceof java.lang.Integer;

        if $z6 == 0 goto label08;

        $r18 = (java.lang.Integer) r3;

        $i16 = virtualinvoke $r18.<java.lang.Integer: int intValue()>();

        specialinvoke r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: void visitInt(int)>($i16);

        goto label35;

     label08:
        $z7 = r3 instanceof java.lang.Float;

        if $z7 == 0 goto label09;

        $r17 = (java.lang.Float) r3;

        $f1 = virtualinvoke $r17.<java.lang.Float: float floatValue()>();

        specialinvoke r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: void visitFloat(float)>($f1);

        goto label35;

     label09:
        $z8 = r3 instanceof java.lang.Long;

        if $z8 == 0 goto label10;

        $r16 = (java.lang.Long) r3;

        $l15 = virtualinvoke $r16.<java.lang.Long: long longValue()>();

        specialinvoke r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: void visitLong(long)>($l15);

        goto label35;

     label10:
        $z9 = r3 instanceof java.lang.Double;

        if $z9 == 0 goto label11;

        $r15 = (java.lang.Double) r3;

        $d1 = virtualinvoke $r15.<java.lang.Double: double doubleValue()>();

        specialinvoke r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: void visitDouble(double)>($d1);

        goto label35;

     label11:
        $r4 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $z10 = virtualinvoke $r4.<java.lang.Class: boolean isArray()>();

        if $z10 == 0 goto label35;

        $r6 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.lang.StringBuffer buf>;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(123);

        $z11 = r3 instanceof byte[];

        if $z11 == 0 goto label14;

        $r14 = (byte[]) r3;

        r27 = (byte[]) $r14;

        i20 = 0;

     label12:
        $i13 = lengthof r27;

        if i20 >= $i13 goto label13;

        specialinvoke r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: void appendComa(int)>(i20);

        $b14 = r27[i20];

        specialinvoke r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: void visitByte(byte)>($b14);

        i20 = i20 + 1;

        goto label12;

     label13:
        goto label34;

     label14:
        $z12 = r3 instanceof boolean[];

        if $z12 == 0 goto label17;

        $r13 = (boolean[]) r3;

        r28 = (boolean[]) $r13;

        i21 = 0;

     label15:
        $i12 = lengthof r28;

        if i21 >= $i12 goto label16;

        specialinvoke r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: void appendComa(int)>(i21);

        $z19 = r28[i21];

        specialinvoke r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: void visitBoolean(boolean)>($z19);

        i21 = i21 + 1;

        goto label15;

     label16:
        goto label34;

     label17:
        $z13 = r3 instanceof short[];

        if $z13 == 0 goto label20;

        $r12 = (short[]) r3;

        r29 = (short[]) $r12;

        i22 = 0;

     label18:
        $i10 = lengthof r29;

        if i22 >= $i10 goto label19;

        specialinvoke r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: void appendComa(int)>(i22);

        $s11 = r29[i22];

        specialinvoke r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: void visitShort(short)>($s11);

        i22 = i22 + 1;

        goto label18;

     label19:
        goto label34;

     label20:
        $z14 = r3 instanceof char[];

        if $z14 == 0 goto label23;

        $r11 = (char[]) r3;

        r30 = (char[]) $r11;

        i23 = 0;

     label21:
        $i8 = lengthof r30;

        if i23 >= $i8 goto label22;

        specialinvoke r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: void appendComa(int)>(i23);

        $c9 = r30[i23];

        specialinvoke r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: void visitChar(char)>($c9);

        i23 = i23 + 1;

        goto label21;

     label22:
        goto label34;

     label23:
        $z15 = r3 instanceof int[];

        if $z15 == 0 goto label26;

        $r10 = (int[]) r3;

        r31 = (int[]) $r10;

        i24 = 0;

     label24:
        $i6 = lengthof r31;

        if i24 >= $i6 goto label25;

        specialinvoke r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: void appendComa(int)>(i24);

        $i7 = r31[i24];

        specialinvoke r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: void visitInt(int)>($i7);

        i24 = i24 + 1;

        goto label24;

     label25:
        goto label34;

     label26:
        $z16 = r3 instanceof long[];

        if $z16 == 0 goto label29;

        $r9 = (long[]) r3;

        r32 = (long[]) $r9;

        i25 = 0;

     label27:
        $i4 = lengthof r32;

        if i25 >= $i4 goto label28;

        specialinvoke r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: void appendComa(int)>(i25);

        $l5 = r32[i25];

        specialinvoke r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: void visitLong(long)>($l5);

        i25 = i25 + 1;

        goto label27;

     label28:
        goto label34;

     label29:
        $z17 = r3 instanceof float[];

        if $z17 == 0 goto label32;

        $r8 = (float[]) r3;

        r33 = (float[]) $r8;

        i26 = 0;

     label30:
        $i3 = lengthof r33;

        if i26 >= $i3 goto label31;

        specialinvoke r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: void appendComa(int)>(i26);

        $f0 = r33[i26];

        specialinvoke r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: void visitFloat(float)>($f0);

        i26 = i26 + 1;

        goto label30;

     label31:
        goto label34;

     label32:
        $z18 = r3 instanceof double[];

        if $z18 == 0 goto label34;

        $r7 = (double[]) r3;

        r34 = (double[]) $r7;

        i27 = 0;

     label33:
        $i2 = lengthof r34;

        if i27 >= $i2 goto label34;

        specialinvoke r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: void appendComa(int)>(i27);

        $d0 = r34[i27];

        specialinvoke r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: void visitDouble(double)>($d0);

        i27 = i27 + 1;

        goto label33;

     label34:
        $r35 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.lang.StringBuffer buf>;

        virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

     label35:
        $r36 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.util.List text>;

        $r37 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.lang.StringBuffer buf>;

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r36.<java.util.List: boolean add(java.lang.Object)>($r38);

        $r39 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: com.mycila.inject.internal.asm.AnnotationVisitor av>;

        if $r39 == null goto label36;

        $r5 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: com.mycila.inject.internal.asm.AnnotationVisitor av>;

        interfaceinvoke $r5.<com.mycila.inject.internal.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(r2, r3);

     label36:
        return;
    }

    private void visitInt(int)
    {
        int i0;
        com.mycila.inject.internal.asm.util.TraceAnnotationVisitor r0;
        java.lang.StringBuffer $r1;

        r0 := @this: com.mycila.inject.internal.asm.util.TraceAnnotationVisitor;

        i0 := @parameter0: int;

        $r1 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        return;
    }

    private void visitLong(long)
    {
        com.mycila.inject.internal.asm.util.TraceAnnotationVisitor r0;
        java.lang.StringBuffer $r1, $r2;
        long l0;

        r0 := @this: com.mycila.inject.internal.asm.util.TraceAnnotationVisitor;

        l0 := @parameter0: long;

        $r1 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.lang.StringBuffer buf>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>(l0);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(76);

        return;
    }

    private void visitFloat(float)
    {
        com.mycila.inject.internal.asm.util.TraceAnnotationVisitor r0;
        java.lang.StringBuffer $r1, $r2;
        float f0;

        r0 := @this: com.mycila.inject.internal.asm.util.TraceAnnotationVisitor;

        f0 := @parameter0: float;

        $r1 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.lang.StringBuffer buf>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>(f0);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(70);

        return;
    }

    private void visitDouble(double)
    {
        com.mycila.inject.internal.asm.util.TraceAnnotationVisitor r0;
        java.lang.StringBuffer $r1, $r2;
        double d0;

        r0 := @this: com.mycila.inject.internal.asm.util.TraceAnnotationVisitor;

        d0 := @parameter0: double;

        $r1 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.lang.StringBuffer buf>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>(d0);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(68);

        return;
    }

    private void visitChar(char)
    {
        com.mycila.inject.internal.asm.util.TraceAnnotationVisitor r0;
        java.lang.StringBuffer $r1, $r2;
        int $i1;
        char c0;

        r0 := @this: com.mycila.inject.internal.asm.util.TraceAnnotationVisitor;

        c0 := @parameter0: char;

        $r1 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.lang.StringBuffer buf>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(char)");

        $i1 = (int) c0;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        return;
    }

    private void visitShort(short)
    {
        short s0;
        com.mycila.inject.internal.asm.util.TraceAnnotationVisitor r0;
        java.lang.StringBuffer $r1, $r2;
        int $i1;

        r0 := @this: com.mycila.inject.internal.asm.util.TraceAnnotationVisitor;

        s0 := @parameter0: short;

        $r1 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.lang.StringBuffer buf>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(short)");

        $i1 = (int) s0;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        return;
    }

    private void visitByte(byte)
    {
        com.mycila.inject.internal.asm.util.TraceAnnotationVisitor r0;
        byte b0;
        java.lang.StringBuffer $r1, $r2;
        int $i1;

        r0 := @this: com.mycila.inject.internal.asm.util.TraceAnnotationVisitor;

        b0 := @parameter0: byte;

        $r1 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.lang.StringBuffer buf>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(byte)");

        $i1 = (int) b0;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        return;
    }

    private void visitBoolean(boolean)
    {
        com.mycila.inject.internal.asm.util.TraceAnnotationVisitor r0;
        java.lang.StringBuffer $r1;
        boolean z0;

        r0 := @this: com.mycila.inject.internal.asm.util.TraceAnnotationVisitor;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>(z0);

        return;
    }

    private void visitString(java.lang.String)
    {
        java.lang.String r1;
        com.mycila.inject.internal.asm.util.TraceAnnotationVisitor r0;
        java.lang.StringBuffer $r2;

        r0 := @this: com.mycila.inject.internal.asm.util.TraceAnnotationVisitor;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.lang.StringBuffer buf>;

        staticinvoke <com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: void appendString(java.lang.StringBuffer,java.lang.String)>($r2, r1);

        return;
    }

    private void visitType(com.mycila.inject.internal.asm.Type)
    {
        com.mycila.inject.internal.asm.util.TraceAnnotationVisitor r0;
        java.lang.StringBuffer $r2, $r4;
        com.mycila.inject.internal.asm.Type r1;
        java.lang.String $r3;

        r0 := @this: com.mycila.inject.internal.asm.util.TraceAnnotationVisitor;

        r1 := @parameter0: com.mycila.inject.internal.asm.Type;

        $r2 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.lang.StringBuffer buf>;

        $r3 = virtualinvoke r1.<com.mycila.inject.internal.asm.Type: java.lang.String getClassName()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".class");

        return;
    }

    public void visitEnum(java.lang.String, java.lang.String, java.lang.String)
    {
        com.mycila.inject.internal.asm.util.TraceAnnotationVisitor r0;
        java.lang.StringBuffer $r1, $r4, $r5, $r7, $r12, $r13;
        int $i0, $i1;
        com.mycila.inject.internal.asm.AnnotationVisitor $r10, $r11;
        java.lang.String r2, r3, r6, $r9;
        java.util.List $r8;

        r0 := @this: com.mycila.inject.internal.asm.util.TraceAnnotationVisitor;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.String;

        $r1 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $i0 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: int valueNumber>;

        $i1 = $i0 + 1;

        r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: int valueNumber> = $i1;

        specialinvoke r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: void appendComa(int)>($i0);

        if r2 == null goto label1;

        $r12 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.lang.StringBuffer buf>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(61);

     label1:
        virtualinvoke r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: void appendDescriptor(int,java.lang.String)>(1, r3);

        $r4 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.lang.StringBuffer buf>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r8 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.util.List text>;

        $r7 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.lang.StringBuffer buf>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r10 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: com.mycila.inject.internal.asm.AnnotationVisitor av>;

        if $r10 == null goto label2;

        $r11 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: com.mycila.inject.internal.asm.AnnotationVisitor av>;

        interfaceinvoke $r11.<com.mycila.inject.internal.asm.AnnotationVisitor: void visitEnum(java.lang.String,java.lang.String,java.lang.String)>(r2, r3, r6);

     label2:
        return;
    }

    public com.mycila.inject.internal.asm.AnnotationVisitor visitAnnotation(java.lang.String, java.lang.String)
    {
        com.mycila.inject.internal.asm.util.TraceAnnotationVisitor r0, $r9;
        java.lang.StringBuffer $r1, $r3, $r5, $r6, $r16, $r17;
        int $i0, $i1;
        com.mycila.inject.internal.asm.AnnotationVisitor $r13, $r14, $r15;
        java.lang.String r2, r4, $r8;
        java.util.List $r7, $r10, $r11, $r12;

        r0 := @this: com.mycila.inject.internal.asm.util.TraceAnnotationVisitor;

        r2 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r1 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $i0 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: int valueNumber>;

        $i1 = $i0 + 1;

        r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: int valueNumber> = $i1;

        specialinvoke r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: void appendComa(int)>($i0);

        if r2 == null goto label1;

        $r16 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.lang.StringBuffer buf>;

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(61);

     label1:
        $r3 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.lang.StringBuffer buf>;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(64);

        virtualinvoke r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: void appendDescriptor(int,java.lang.String)>(1, r4);

        $r5 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.lang.StringBuffer buf>;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(40);

        $r7 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.util.List text>;

        $r6 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.lang.StringBuffer buf>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r8);

        $r9 = virtualinvoke r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: com.mycila.inject.internal.asm.util.TraceAnnotationVisitor createTraceAnnotationVisitor()>();

        $r10 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.util.List text>;

        $r11 = virtualinvoke $r9.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.util.List getText()>();

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r12 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.util.List text>;

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>(")");

        $r13 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: com.mycila.inject.internal.asm.AnnotationVisitor av>;

        if $r13 == null goto label2;

        $r14 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: com.mycila.inject.internal.asm.AnnotationVisitor av>;

        $r15 = interfaceinvoke $r14.<com.mycila.inject.internal.asm.AnnotationVisitor: com.mycila.inject.internal.asm.AnnotationVisitor visitAnnotation(java.lang.String,java.lang.String)>(r2, r4);

        $r9.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: com.mycila.inject.internal.asm.AnnotationVisitor av> = $r15;

     label2:
        return $r9;
    }

    public com.mycila.inject.internal.asm.AnnotationVisitor visitArray(java.lang.String)
    {
        com.mycila.inject.internal.asm.util.TraceAnnotationVisitor r0, $r7;
        java.lang.StringBuffer $r1, $r3, $r4, $r14, $r15;
        int $i0, $i1;
        com.mycila.inject.internal.asm.AnnotationVisitor $r11, $r12, $r13;
        java.lang.String r2, $r6;
        java.util.List $r5, $r8, $r9, $r10;

        r0 := @this: com.mycila.inject.internal.asm.util.TraceAnnotationVisitor;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $i0 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: int valueNumber>;

        $i1 = $i0 + 1;

        r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: int valueNumber> = $i1;

        specialinvoke r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: void appendComa(int)>($i0);

        if r2 == null goto label1;

        $r14 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.lang.StringBuffer buf>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(61);

     label1:
        $r3 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.lang.StringBuffer buf>;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(123);

        $r5 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.util.List text>;

        $r4 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.lang.StringBuffer buf>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r7 = virtualinvoke r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: com.mycila.inject.internal.asm.util.TraceAnnotationVisitor createTraceAnnotationVisitor()>();

        $r8 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.util.List text>;

        $r9 = virtualinvoke $r7.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.util.List getText()>();

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r10 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.util.List text>;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>("}");

        $r11 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: com.mycila.inject.internal.asm.AnnotationVisitor av>;

        if $r11 == null goto label2;

        $r12 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: com.mycila.inject.internal.asm.AnnotationVisitor av>;

        $r13 = interfaceinvoke $r12.<com.mycila.inject.internal.asm.AnnotationVisitor: com.mycila.inject.internal.asm.AnnotationVisitor visitArray(java.lang.String)>(r2);

        $r7.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: com.mycila.inject.internal.asm.AnnotationVisitor av> = $r13;

     label2:
        return $r7;
    }

    public void visitEnd()
    {
        com.mycila.inject.internal.asm.AnnotationVisitor $r1, $r2;
        com.mycila.inject.internal.asm.util.TraceAnnotationVisitor r0;

        r0 := @this: com.mycila.inject.internal.asm.util.TraceAnnotationVisitor;

        $r1 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: com.mycila.inject.internal.asm.AnnotationVisitor av>;

        if $r1 == null goto label1;

        $r2 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: com.mycila.inject.internal.asm.AnnotationVisitor av>;

        interfaceinvoke $r2.<com.mycila.inject.internal.asm.AnnotationVisitor: void visitEnd()>();

     label1:
        return;
    }

    private void appendComa(int)
    {
        int i0;
        com.mycila.inject.internal.asm.util.TraceAnnotationVisitor r0;
        java.lang.StringBuffer $r1;

        r0 := @this: com.mycila.inject.internal.asm.util.TraceAnnotationVisitor;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        $r1 = r0.<com.mycila.inject.internal.asm.util.TraceAnnotationVisitor: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label1:
        return;
    }
}
