class org.apache.tika.parser.image.ImageMetadataExtractor$DimensionsHandler extends java.lang.Object implements org.apache.tika.parser.image.ImageMetadataExtractor$DirectoryHandler
{
    private final java.util.regex.Pattern LEADING_NUMBERS;

    void <init>()
    {
        org.apache.tika.parser.image.ImageMetadataExtractor$DimensionsHandler r0;
        java.util.regex.Pattern $r1;

        r0 := @this: org.apache.tika.parser.image.ImageMetadataExtractor$DimensionsHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\d+)\\s*.*");

        r0.<org.apache.tika.parser.image.ImageMetadataExtractor$DimensionsHandler: java.util.regex.Pattern LEADING_NUMBERS> = $r1;

        return;
    }

    public boolean supports(java.lang.Class)
    {
        java.lang.Class r0;
        org.apache.tika.parser.image.ImageMetadataExtractor$DimensionsHandler r1;
        boolean $z0;

        r1 := @this: org.apache.tika.parser.image.ImageMetadataExtractor$DimensionsHandler;

        r0 := @parameter0: java.lang.Class;

        if r0 == class "Lcom/drew/metadata/jpeg/JpegDirectory;" goto label1;

        if r0 == class "Lcom/drew/metadata/exif/ExifSubIFDDirectory;" goto label1;

        if r0 == class "Lcom/drew/metadata/exif/ExifThumbnailDirectory;" goto label1;

        if r0 != class "Lcom/drew/metadata/exif/ExifIFD0Directory;" goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public void handle(com.drew.metadata.Directory, org.apache.tika.metadata.Metadata) throws com.drew.metadata.MetadataException
    {
        org.apache.tika.parser.image.ImageMetadataExtractor$DimensionsHandler r0;
        org.apache.tika.metadata.Metadata r2;
        com.drew.metadata.Directory r1;
        org.apache.tika.metadata.Property $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        r0 := @this: org.apache.tika.parser.image.ImageMetadataExtractor$DimensionsHandler;

        r1 := @parameter0: com.drew.metadata.Directory;

        r2 := @parameter1: org.apache.tika.metadata.Metadata;

        $r3 = <org.apache.tika.metadata.Metadata: org.apache.tika.metadata.Property IMAGE_WIDTH>;

        specialinvoke r0.<org.apache.tika.parser.image.ImageMetadataExtractor$DimensionsHandler: void set(com.drew.metadata.Directory,org.apache.tika.metadata.Metadata,int,org.apache.tika.metadata.Property)>(r1, r2, 256, $r3);

        $r4 = <org.apache.tika.metadata.Metadata: org.apache.tika.metadata.Property IMAGE_WIDTH>;

        specialinvoke r0.<org.apache.tika.parser.image.ImageMetadataExtractor$DimensionsHandler: void set(com.drew.metadata.Directory,org.apache.tika.metadata.Metadata,int,org.apache.tika.metadata.Property)>(r1, r2, 3, $r4);

        $r5 = <org.apache.tika.metadata.Metadata: org.apache.tika.metadata.Property IMAGE_LENGTH>;

        specialinvoke r0.<org.apache.tika.parser.image.ImageMetadataExtractor$DimensionsHandler: void set(com.drew.metadata.Directory,org.apache.tika.metadata.Metadata,int,org.apache.tika.metadata.Property)>(r1, r2, 257, $r5);

        $r6 = <org.apache.tika.metadata.Metadata: org.apache.tika.metadata.Property IMAGE_LENGTH>;

        specialinvoke r0.<org.apache.tika.parser.image.ImageMetadataExtractor$DimensionsHandler: void set(com.drew.metadata.Directory,org.apache.tika.metadata.Metadata,int,org.apache.tika.metadata.Property)>(r1, r2, 1, $r6);

        $r7 = <org.apache.tika.metadata.Metadata: org.apache.tika.metadata.Property BITS_PER_SAMPLE>;

        specialinvoke r0.<org.apache.tika.parser.image.ImageMetadataExtractor$DimensionsHandler: void set(com.drew.metadata.Directory,org.apache.tika.metadata.Metadata,int,org.apache.tika.metadata.Property)>(r1, r2, 0, $r7);

        $r8 = <org.apache.tika.metadata.Metadata: org.apache.tika.metadata.Property BITS_PER_SAMPLE>;

        specialinvoke r0.<org.apache.tika.parser.image.ImageMetadataExtractor$DimensionsHandler: void set(com.drew.metadata.Directory,org.apache.tika.metadata.Metadata,int,org.apache.tika.metadata.Property)>(r1, r2, 258, $r8);

        $r9 = <org.apache.tika.metadata.Metadata: org.apache.tika.metadata.Property SAMPLES_PER_PIXEL>;

        specialinvoke r0.<org.apache.tika.parser.image.ImageMetadataExtractor$DimensionsHandler: void set(com.drew.metadata.Directory,org.apache.tika.metadata.Metadata,int,org.apache.tika.metadata.Property)>(r1, r2, 277, $r9);

        return;
    }

    private void set(com.drew.metadata.Directory, org.apache.tika.metadata.Metadata, int, org.apache.tika.metadata.Property)
    {
        org.apache.tika.parser.image.ImageMetadataExtractor$DimensionsHandler r1;
        org.apache.tika.metadata.Metadata r5;
        com.drew.metadata.Directory r0;
        java.util.regex.Matcher $r4;
        org.apache.tika.metadata.Property r6;
        int i0;
        java.util.regex.Pattern $r2;
        java.lang.String $r3, $r7;
        boolean $z0, $z1;

        r1 := @this: org.apache.tika.parser.image.ImageMetadataExtractor$DimensionsHandler;

        r0 := @parameter0: com.drew.metadata.Directory;

        r5 := @parameter1: org.apache.tika.metadata.Metadata;

        i0 := @parameter2: int;

        r6 := @parameter3: org.apache.tika.metadata.Property;

        $z0 = virtualinvoke r0.<com.drew.metadata.Directory: boolean containsTag(int)>(i0);

        if $z0 == 0 goto label1;

        $r2 = r1.<org.apache.tika.parser.image.ImageMetadataExtractor$DimensionsHandler: java.util.regex.Pattern LEADING_NUMBERS>;

        $r3 = virtualinvoke r0.<com.drew.metadata.Directory: java.lang.String getString(int)>(i0);

        $r4 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r3);

        $z1 = virtualinvoke $r4.<java.util.regex.Matcher: boolean matches()>();

        if $z1 == 0 goto label1;

        $r7 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        virtualinvoke r5.<org.apache.tika.metadata.Metadata: void set(org.apache.tika.metadata.Property,java.lang.String)>(r6, $r7);

     label1:
        return;
    }
}
