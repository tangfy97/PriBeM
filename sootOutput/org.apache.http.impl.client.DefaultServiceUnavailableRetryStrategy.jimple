public class org.apache.http.impl.client.DefaultServiceUnavailableRetryStrategy extends java.lang.Object implements org.apache.http.client.ServiceUnavailableRetryStrategy
{
    private final int maxRetries;
    private final long retryInterval;

    public void <init>(int, int)
    {
        int i0, i1;
        long $l2;
        java.lang.IllegalArgumentException $r1, $r2;
        org.apache.http.impl.client.DefaultServiceUnavailableRetryStrategy r0;

        r0 := @this: org.apache.http.impl.client.DefaultServiceUnavailableRetryStrategy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 >= 1 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("MaxRetries must be greater than 1");

        throw $r2;

     label1:
        if i1 >= 1 goto label2;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Retry interval must be greater than 1");

        throw $r1;

     label2:
        r0.<org.apache.http.impl.client.DefaultServiceUnavailableRetryStrategy: int maxRetries> = i0;

        $l2 = (long) i1;

        r0.<org.apache.http.impl.client.DefaultServiceUnavailableRetryStrategy: long retryInterval> = $l2;

        return;
    }

    public void <init>()
    {
        org.apache.http.impl.client.DefaultServiceUnavailableRetryStrategy r0;

        r0 := @this: org.apache.http.impl.client.DefaultServiceUnavailableRetryStrategy;

        specialinvoke r0.<org.apache.http.impl.client.DefaultServiceUnavailableRetryStrategy: void <init>(int,int)>(1, 1000);

        return;
    }

    public boolean retryRequest(org.apache.http.HttpResponse, int, org.apache.http.protocol.HttpContext)
    {
        org.apache.http.StatusLine $r2;
        org.apache.http.protocol.HttpContext r3;
        int i0, $i1, $i2;
        org.apache.http.HttpResponse r1;
        org.apache.http.impl.client.DefaultServiceUnavailableRetryStrategy r0;
        boolean $z0;

        r0 := @this: org.apache.http.impl.client.DefaultServiceUnavailableRetryStrategy;

        r1 := @parameter0: org.apache.http.HttpResponse;

        i0 := @parameter1: int;

        r3 := @parameter2: org.apache.http.protocol.HttpContext;

        $i1 = r0.<org.apache.http.impl.client.DefaultServiceUnavailableRetryStrategy: int maxRetries>;

        if i0 > $i1 goto label1;

        $r2 = interfaceinvoke r1.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i2 = interfaceinvoke $r2.<org.apache.http.StatusLine: int getStatusCode()>();

        if $i2 != 503 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public long getRetryInterval()
    {
        long $l0;
        org.apache.http.impl.client.DefaultServiceUnavailableRetryStrategy r0;

        r0 := @this: org.apache.http.impl.client.DefaultServiceUnavailableRetryStrategy;

        $l0 = r0.<org.apache.http.impl.client.DefaultServiceUnavailableRetryStrategy: long retryInterval>;

        return $l0;
    }
}
