public class org.apache.batik.css.parser.DefaultPseudoClassCondition extends org.apache.batik.css.parser.AbstractAttributeCondition
{
    protected java.lang.String namespaceURI;

    public void <init>(java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2;
        org.apache.batik.css.parser.DefaultPseudoClassCondition r0;

        r0 := @this: org.apache.batik.css.parser.DefaultPseudoClassCondition;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.batik.css.parser.AbstractAttributeCondition: void <init>(java.lang.String)>(r1);

        r0.<org.apache.batik.css.parser.DefaultPseudoClassCondition: java.lang.String namespaceURI> = r2;

        return;
    }

    public short getConditionType()
    {
        org.apache.batik.css.parser.DefaultPseudoClassCondition r0;

        r0 := @this: org.apache.batik.css.parser.DefaultPseudoClassCondition;

        return 10;
    }

    public java.lang.String getNamespaceURI()
    {
        java.lang.String $r1;
        org.apache.batik.css.parser.DefaultPseudoClassCondition r0;

        r0 := @this: org.apache.batik.css.parser.DefaultPseudoClassCondition;

        $r1 = r0.<org.apache.batik.css.parser.DefaultPseudoClassCondition: java.lang.String namespaceURI>;

        return $r1;
    }

    public java.lang.String getLocalName()
    {
        org.apache.batik.css.parser.DefaultPseudoClassCondition r0;

        r0 := @this: org.apache.batik.css.parser.DefaultPseudoClassCondition;

        return null;
    }

    public boolean getSpecified()
    {
        org.apache.batik.css.parser.DefaultPseudoClassCondition r0;

        r0 := @this: org.apache.batik.css.parser.DefaultPseudoClassCondition;

        return 0;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r0, $r1, $r4;
        java.lang.String $r3, $r5;
        org.apache.batik.css.parser.DefaultPseudoClassCondition r2;

        r2 := @this: org.apache.batik.css.parser.DefaultPseudoClassCondition;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r3 = virtualinvoke r2.<org.apache.batik.css.parser.AbstractAttributeCondition: java.lang.String getValue()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }
}
