public abstract class com.uwyn.jhighlight.pcj.AbstractCharCollection extends java.lang.Object implements com.uwyn.jhighlight.pcj.CharCollection
{

    protected void <init>()
    {
        com.uwyn.jhighlight.pcj.AbstractCharCollection r0;

        r0 := @this: com.uwyn.jhighlight.pcj.AbstractCharCollection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean add(char)
    {
        char c0;
        com.uwyn.jhighlight.pcj.AbstractCharCollection r0;

        r0 := @this: com.uwyn.jhighlight.pcj.AbstractCharCollection;

        c0 := @parameter0: char;

        staticinvoke <com.uwyn.jhighlight.pcj.util.Exceptions: void unsupported(java.lang.String)>("add");

        return 0;
    }

    public boolean addAll(com.uwyn.jhighlight.pcj.CharCollection)
    {
        com.uwyn.jhighlight.pcj.CharCollection r0;
        com.uwyn.jhighlight.pcj.CharIterator $r1;
        char $c0;
        com.uwyn.jhighlight.pcj.AbstractCharCollection r2;
        boolean $z0, $z1, z2;

        r2 := @this: com.uwyn.jhighlight.pcj.AbstractCharCollection;

        r0 := @parameter0: com.uwyn.jhighlight.pcj.CharCollection;

        $r1 = interfaceinvoke r0.<com.uwyn.jhighlight.pcj.CharCollection: com.uwyn.jhighlight.pcj.CharIterator iterator()>();

        z2 = 0;

     label1:
        $z0 = interfaceinvoke $r1.<com.uwyn.jhighlight.pcj.CharIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $c0 = interfaceinvoke $r1.<com.uwyn.jhighlight.pcj.CharIterator: char next()>();

        $z1 = virtualinvoke r2.<com.uwyn.jhighlight.pcj.AbstractCharCollection: boolean add(char)>($c0);

        z2 = z2 | $z1;

        goto label1;

     label2:
        return z2;
    }

    public void clear()
    {
        com.uwyn.jhighlight.pcj.CharIterator $r1;
        com.uwyn.jhighlight.pcj.AbstractCharCollection r0;
        boolean $z0;

        r0 := @this: com.uwyn.jhighlight.pcj.AbstractCharCollection;

        $r1 = virtualinvoke r0.<com.uwyn.jhighlight.pcj.AbstractCharCollection: com.uwyn.jhighlight.pcj.CharIterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<com.uwyn.jhighlight.pcj.CharIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        interfaceinvoke $r1.<com.uwyn.jhighlight.pcj.CharIterator: char next()>();

        interfaceinvoke $r1.<com.uwyn.jhighlight.pcj.CharIterator: void remove()>();

        goto label1;

     label2:
        return;
    }

    public boolean contains(char)
    {
        int $i2, $i3;
        com.uwyn.jhighlight.pcj.CharIterator $r1;
        char $c0, c1;
        com.uwyn.jhighlight.pcj.AbstractCharCollection r0;
        boolean $z0;

        r0 := @this: com.uwyn.jhighlight.pcj.AbstractCharCollection;

        c1 := @parameter0: char;

        $r1 = virtualinvoke r0.<com.uwyn.jhighlight.pcj.AbstractCharCollection: com.uwyn.jhighlight.pcj.CharIterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<com.uwyn.jhighlight.pcj.CharIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $c0 = interfaceinvoke $r1.<com.uwyn.jhighlight.pcj.CharIterator: char next()>();

        $i2 = (int) $c0;

        $i3 = (int) c1;

        if $i2 != $i3 goto label1;

        return 1;

     label2:
        return 0;
    }

    public boolean containsAll(com.uwyn.jhighlight.pcj.CharCollection)
    {
        com.uwyn.jhighlight.pcj.CharCollection r0;
        com.uwyn.jhighlight.pcj.CharIterator $r1;
        char $c0;
        com.uwyn.jhighlight.pcj.AbstractCharCollection r2;
        boolean $z0, $z1;

        r2 := @this: com.uwyn.jhighlight.pcj.AbstractCharCollection;

        r0 := @parameter0: com.uwyn.jhighlight.pcj.CharCollection;

        $r1 = interfaceinvoke r0.<com.uwyn.jhighlight.pcj.CharCollection: com.uwyn.jhighlight.pcj.CharIterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<com.uwyn.jhighlight.pcj.CharIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $c0 = interfaceinvoke $r1.<com.uwyn.jhighlight.pcj.CharIterator: char next()>();

        $z1 = virtualinvoke r2.<com.uwyn.jhighlight.pcj.AbstractCharCollection: boolean contains(char)>($c0);

        if $z1 != 0 goto label1;

        return 0;

     label2:
        return 1;
    }

    public boolean isEmpty()
    {
        int $i0;
        com.uwyn.jhighlight.pcj.AbstractCharCollection r0;
        boolean $z0;

        r0 := @this: com.uwyn.jhighlight.pcj.AbstractCharCollection;

        $i0 = virtualinvoke r0.<com.uwyn.jhighlight.pcj.AbstractCharCollection: int size()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean remove(char)
    {
        com.uwyn.jhighlight.pcj.CharIterator $r1;
        char $c0, c1;
        int $i2, $i3;
        com.uwyn.jhighlight.pcj.AbstractCharCollection r0;
        boolean $z0, z1;

        r0 := @this: com.uwyn.jhighlight.pcj.AbstractCharCollection;

        c1 := @parameter0: char;

        $r1 = virtualinvoke r0.<com.uwyn.jhighlight.pcj.AbstractCharCollection: com.uwyn.jhighlight.pcj.CharIterator iterator()>();

        z1 = 0;

     label1:
        $z0 = interfaceinvoke $r1.<com.uwyn.jhighlight.pcj.CharIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $c0 = interfaceinvoke $r1.<com.uwyn.jhighlight.pcj.CharIterator: char next()>();

        $i2 = (int) $c0;

        $i3 = (int) c1;

        if $i2 != $i3 goto label1;

        interfaceinvoke $r1.<com.uwyn.jhighlight.pcj.CharIterator: void remove()>();

        z1 = 1;

        goto label2;

     label2:
        return z1;
    }

    public boolean removeAll(com.uwyn.jhighlight.pcj.CharCollection)
    {
        com.uwyn.jhighlight.pcj.CharCollection r0;
        com.uwyn.jhighlight.pcj.CharIterator $r2;
        char $c0;
        com.uwyn.jhighlight.pcj.AbstractCharCollection r1;
        boolean $z0, z1, $z2;

        r1 := @this: com.uwyn.jhighlight.pcj.AbstractCharCollection;

        r0 := @parameter0: com.uwyn.jhighlight.pcj.CharCollection;

        if r0 != null goto label1;

        staticinvoke <com.uwyn.jhighlight.pcj.util.Exceptions: void nullArgument(java.lang.String)>("collection");

     label1:
        $r2 = virtualinvoke r1.<com.uwyn.jhighlight.pcj.AbstractCharCollection: com.uwyn.jhighlight.pcj.CharIterator iterator()>();

        z1 = 0;

     label2:
        $z2 = interfaceinvoke $r2.<com.uwyn.jhighlight.pcj.CharIterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $c0 = interfaceinvoke $r2.<com.uwyn.jhighlight.pcj.CharIterator: char next()>();

        $z0 = interfaceinvoke r0.<com.uwyn.jhighlight.pcj.CharCollection: boolean contains(char)>($c0);

        if $z0 == 0 goto label2;

        interfaceinvoke $r2.<com.uwyn.jhighlight.pcj.CharIterator: void remove()>();

        z1 = 1;

        goto label2;

     label3:
        return z1;
    }

    public boolean retainAll(com.uwyn.jhighlight.pcj.CharCollection)
    {
        com.uwyn.jhighlight.pcj.CharCollection r0;
        com.uwyn.jhighlight.pcj.CharIterator $r2;
        char $c0;
        com.uwyn.jhighlight.pcj.AbstractCharCollection r1;
        boolean $z0, z1, $z2;

        r1 := @this: com.uwyn.jhighlight.pcj.AbstractCharCollection;

        r0 := @parameter0: com.uwyn.jhighlight.pcj.CharCollection;

        if r0 != null goto label1;

        staticinvoke <com.uwyn.jhighlight.pcj.util.Exceptions: void nullArgument(java.lang.String)>("collection");

     label1:
        $r2 = virtualinvoke r1.<com.uwyn.jhighlight.pcj.AbstractCharCollection: com.uwyn.jhighlight.pcj.CharIterator iterator()>();

        z1 = 0;

     label2:
        $z2 = interfaceinvoke $r2.<com.uwyn.jhighlight.pcj.CharIterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $c0 = interfaceinvoke $r2.<com.uwyn.jhighlight.pcj.CharIterator: char next()>();

        $z0 = interfaceinvoke r0.<com.uwyn.jhighlight.pcj.CharCollection: boolean contains(char)>($c0);

        if $z0 != 0 goto label2;

        interfaceinvoke $r2.<com.uwyn.jhighlight.pcj.CharIterator: void remove()>();

        z1 = 1;

        goto label2;

     label3:
        return z1;
    }

    public int size()
    {
        int i0;
        com.uwyn.jhighlight.pcj.CharIterator $r1;
        com.uwyn.jhighlight.pcj.AbstractCharCollection r0;
        boolean $z0;

        r0 := @this: com.uwyn.jhighlight.pcj.AbstractCharCollection;

        $r1 = virtualinvoke r0.<com.uwyn.jhighlight.pcj.AbstractCharCollection: com.uwyn.jhighlight.pcj.CharIterator iterator()>();

        i0 = 0;

     label1:
        $z0 = interfaceinvoke $r1.<com.uwyn.jhighlight.pcj.CharIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        interfaceinvoke $r1.<com.uwyn.jhighlight.pcj.CharIterator: char next()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        return i0;
    }

    public char[] toArray()
    {
        char[] $r1;
        com.uwyn.jhighlight.pcj.AbstractCharCollection r0;

        r0 := @this: com.uwyn.jhighlight.pcj.AbstractCharCollection;

        $r1 = virtualinvoke r0.<com.uwyn.jhighlight.pcj.AbstractCharCollection: char[] toArray(char[])>(null);

        return $r1;
    }

    public char[] toArray(char[])
    {
        char $c1;
        com.uwyn.jhighlight.pcj.CharIterator $r2;
        int $i0, $i2, i3;
        char[] r1;
        com.uwyn.jhighlight.pcj.AbstractCharCollection r0;
        boolean $z0;

        r0 := @this: com.uwyn.jhighlight.pcj.AbstractCharCollection;

        r1 := @parameter0: char[];

        $i0 = virtualinvoke r0.<com.uwyn.jhighlight.pcj.AbstractCharCollection: int size()>();

        if r1 == null goto label1;

        $i2 = lengthof r1;

        if $i2 >= $i0 goto label2;

     label1:
        r1 = newarray (char)[$i0];

     label2:
        $r2 = virtualinvoke r0.<com.uwyn.jhighlight.pcj.AbstractCharCollection: com.uwyn.jhighlight.pcj.CharIterator iterator()>();

        i3 = 0;

     label3:
        $z0 = interfaceinvoke $r2.<com.uwyn.jhighlight.pcj.CharIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $c1 = interfaceinvoke $r2.<com.uwyn.jhighlight.pcj.CharIterator: char next()>();

        r1[i3] = $c1;

        i3 = i3 + 1;

        goto label3;

     label4:
        return r1;
    }

    public void trimToSize()
    {
        com.uwyn.jhighlight.pcj.AbstractCharCollection r0;

        r0 := @this: com.uwyn.jhighlight.pcj.AbstractCharCollection;

        return;
    }

    public java.lang.String toString()
    {
        com.uwyn.jhighlight.pcj.CharIterator $r2;
        char $c1;
        java.lang.StringBuffer $r0;
        int $i0;
        com.uwyn.jhighlight.pcj.AbstractCharCollection r1;
        java.lang.String $r3, $r4;
        boolean $z0;

        r1 := @this: com.uwyn.jhighlight.pcj.AbstractCharCollection;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(91);

        $r2 = virtualinvoke r1.<com.uwyn.jhighlight.pcj.AbstractCharCollection: com.uwyn.jhighlight.pcj.CharIterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<com.uwyn.jhighlight.pcj.CharIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke $r0.<java.lang.StringBuffer: int length()>();

        if $i0 <= 1 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

     label2:
        $c1 = interfaceinvoke $r2.<com.uwyn.jhighlight.pcj.CharIterator: char next()>();

        $r4 = staticinvoke <com.uwyn.jhighlight.pcj.util.Display: java.lang.String display(char)>($c1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        goto label1;

     label3:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93);

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }
}
