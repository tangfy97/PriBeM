public class org.codehaus.jackson.format.InputAccessor$Std extends java.lang.Object implements org.codehaus.jackson.format.InputAccessor
{
    protected final java.io.InputStream _in;
    protected final byte[] _buffer;
    protected int _bufferedAmount;
    protected int _ptr;

    public void <init>(java.io.InputStream, byte[])
    {
        byte[] r2;
        org.codehaus.jackson.format.InputAccessor$Std r0;
        java.io.InputStream r1;

        r0 := @this: org.codehaus.jackson.format.InputAccessor$Std;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.format.InputAccessor$Std: java.io.InputStream _in> = r1;

        r0.<org.codehaus.jackson.format.InputAccessor$Std: byte[] _buffer> = r2;

        r0.<org.codehaus.jackson.format.InputAccessor$Std: int _bufferedAmount> = 0;

        return;
    }

    public void <init>(byte[])
    {
        int $i0;
        byte[] r1;
        org.codehaus.jackson.format.InputAccessor$Std r0;

        r0 := @this: org.codehaus.jackson.format.InputAccessor$Std;

        r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.format.InputAccessor$Std: java.io.InputStream _in> = null;

        r0.<org.codehaus.jackson.format.InputAccessor$Std: byte[] _buffer> = r1;

        $i0 = lengthof r1;

        r0.<org.codehaus.jackson.format.InputAccessor$Std: int _bufferedAmount> = $i0;

        return;
    }

    public boolean hasMoreBytes() throws java.io.IOException
    {
        byte[] $r1, $r2;
        org.codehaus.jackson.format.InputAccessor$Std r0;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8;
        java.io.InputStream $r3;

        r0 := @this: org.codehaus.jackson.format.InputAccessor$Std;

        $i1 = r0.<org.codehaus.jackson.format.InputAccessor$Std: int _ptr>;

        $i0 = r0.<org.codehaus.jackson.format.InputAccessor$Std: int _bufferedAmount>;

        if $i1 >= $i0 goto label1;

        return 1;

     label1:
        $r1 = r0.<org.codehaus.jackson.format.InputAccessor$Std: byte[] _buffer>;

        $i3 = lengthof $r1;

        $i2 = r0.<org.codehaus.jackson.format.InputAccessor$Std: int _ptr>;

        i4 = $i3 - $i2;

        if i4 >= 1 goto label2;

        return 0;

     label2:
        $r3 = r0.<org.codehaus.jackson.format.InputAccessor$Std: java.io.InputStream _in>;

        $r2 = r0.<org.codehaus.jackson.format.InputAccessor$Std: byte[] _buffer>;

        $i5 = r0.<org.codehaus.jackson.format.InputAccessor$Std: int _ptr>;

        $i6 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>($r2, $i5, i4);

        if $i6 > 0 goto label3;

        return 0;

     label3:
        $i7 = r0.<org.codehaus.jackson.format.InputAccessor$Std: int _bufferedAmount>;

        $i8 = $i7 + $i6;

        r0.<org.codehaus.jackson.format.InputAccessor$Std: int _bufferedAmount> = $i8;

        return 1;
    }

    public byte nextByte() throws java.io.IOException
    {
        byte[] $r1, $r7;
        byte $b5;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7;
        java.lang.String $r10;
        boolean $z0;
        org.codehaus.jackson.format.InputAccessor$Std r0;
        java.io.EOFException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r8, $r9;

        r0 := @this: org.codehaus.jackson.format.InputAccessor$Std;

        $i2 = r0.<org.codehaus.jackson.format.InputAccessor$Std: int _ptr>;

        $i0 = r0.<org.codehaus.jackson.format.InputAccessor$Std: int _bufferedAmount>;

        $i1 = neg $i0;

        if $i2 <= $i1 goto label1;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.format.InputAccessor$Std: boolean hasMoreBytes()>();

        if $z0 != 0 goto label1;

        $r2 = new java.io.EOFException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not read more than ");

        $i6 = r0.<org.codehaus.jackson.format.InputAccessor$Std: int _ptr>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes (max buffer size: ");

        $r7 = r0.<org.codehaus.jackson.format.InputAccessor$Std: byte[] _buffer>;

        $i7 = lengthof $r7;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.EOFException: void <init>(java.lang.String)>($r10);

        throw $r2;

     label1:
        $r1 = r0.<org.codehaus.jackson.format.InputAccessor$Std: byte[] _buffer>;

        $i3 = r0.<org.codehaus.jackson.format.InputAccessor$Std: int _ptr>;

        $i4 = $i3 + 1;

        r0.<org.codehaus.jackson.format.InputAccessor$Std: int _ptr> = $i4;

        $b5 = $r1[$i3];

        return $b5;
    }

    public void reset()
    {
        org.codehaus.jackson.format.InputAccessor$Std r0;

        r0 := @this: org.codehaus.jackson.format.InputAccessor$Std;

        r0.<org.codehaus.jackson.format.InputAccessor$Std: int _ptr> = 0;

        return;
    }

    public org.codehaus.jackson.format.DataFormatMatcher createMatcher(org.codehaus.jackson.JsonFactory, org.codehaus.jackson.format.MatchStrength)
    {
        byte[] $r4;
        org.codehaus.jackson.format.MatchStrength r3;
        int $i0;
        org.codehaus.jackson.format.DataFormatMatcher $r0;
        org.codehaus.jackson.format.InputAccessor$Std r1;
        org.codehaus.jackson.JsonFactory r2;
        java.io.InputStream $r5;

        r1 := @this: org.codehaus.jackson.format.InputAccessor$Std;

        r2 := @parameter0: org.codehaus.jackson.JsonFactory;

        r3 := @parameter1: org.codehaus.jackson.format.MatchStrength;

        $r0 = new org.codehaus.jackson.format.DataFormatMatcher;

        $r5 = r1.<org.codehaus.jackson.format.InputAccessor$Std: java.io.InputStream _in>;

        $r4 = r1.<org.codehaus.jackson.format.InputAccessor$Std: byte[] _buffer>;

        $i0 = r1.<org.codehaus.jackson.format.InputAccessor$Std: int _bufferedAmount>;

        specialinvoke $r0.<org.codehaus.jackson.format.DataFormatMatcher: void <init>(java.io.InputStream,byte[],int,org.codehaus.jackson.JsonFactory,org.codehaus.jackson.format.MatchStrength)>($r5, $r4, $i0, r2, r3);

        return $r0;
    }
}
