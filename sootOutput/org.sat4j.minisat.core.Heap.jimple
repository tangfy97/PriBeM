public final class org.sat4j.minisat.core.Heap extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private final org.sat4j.specs.IVecInt heap;
    private final org.sat4j.specs.IVecInt indices;
    private final double[] activity;
    static final boolean $assertionsDisabled;

    private static final int left(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 << 1;

        return $i1;
    }

    private static final int right(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = i0 << 1;

        $i2 = $i1 ^ 1;

        return $i2;
    }

    private static final int parent(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 >> 1;

        return $i1;
    }

    private final boolean comp(int, int)
    {
        double[] $r1, $r2;
        org.sat4j.minisat.core.Heap r0;
        byte $b2;
        int i0, i1, $i3;
        double $d0, $d1;
        boolean $z0;

        r0 := @this: org.sat4j.minisat.core.Heap;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.sat4j.minisat.core.Heap: double[] activity>;

        $d1 = $r1[i0];

        $r2 = r0.<org.sat4j.minisat.core.Heap: double[] activity>;

        $d0 = $r2[i1];

        $b2 = $d1 cmpl $d0;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    final void percolateUp(int)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        boolean $z0;
        org.sat4j.specs.IVecInt $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        org.sat4j.minisat.core.Heap r0;

        r0 := @this: org.sat4j.minisat.core.Heap;

        i7 := @parameter0: int;

        $r1 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt heap>;

        $i0 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: int get(int)>(i7);

     label1:
        $i1 = staticinvoke <org.sat4j.minisat.core.Heap: int parent(int)>(i7);

        if $i1 == 0 goto label2;

        $r4 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt heap>;

        $i2 = staticinvoke <org.sat4j.minisat.core.Heap: int parent(int)>(i7);

        $i3 = interfaceinvoke $r4.<org.sat4j.specs.IVecInt: int get(int)>($i2);

        $z0 = specialinvoke r0.<org.sat4j.minisat.core.Heap: boolean comp(int,int)>($i0, $i3);

        if $z0 == 0 goto label2;

        $r5 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt heap>;

        $r6 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt heap>;

        $i4 = staticinvoke <org.sat4j.minisat.core.Heap: int parent(int)>(i7);

        $i5 = interfaceinvoke $r6.<org.sat4j.specs.IVecInt: int get(int)>($i4);

        interfaceinvoke $r5.<org.sat4j.specs.IVecInt: void set(int,int)>(i7, $i5);

        $r8 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt indices>;

        $r7 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt heap>;

        $i6 = interfaceinvoke $r7.<org.sat4j.specs.IVecInt: int get(int)>(i7);

        interfaceinvoke $r8.<org.sat4j.specs.IVecInt: void set(int,int)>($i6, i7);

        i7 = staticinvoke <org.sat4j.minisat.core.Heap: int parent(int)>(i7);

        goto label1;

     label2:
        $r2 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt heap>;

        interfaceinvoke $r2.<org.sat4j.specs.IVecInt: void set(int,int)>(i7, $i0);

        $r3 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt indices>;

        interfaceinvoke $r3.<org.sat4j.specs.IVecInt: void set(int,int)>($i0, i7);

        return;
    }

    final void percolateDown(int)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12, $i13;
        boolean $z0, $z1;
        org.sat4j.specs.IVecInt $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        org.sat4j.minisat.core.Heap r0;

        r0 := @this: org.sat4j.minisat.core.Heap;

        i11 := @parameter0: int;

        $r1 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt heap>;

        $i0 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: int get(int)>(i11);

     label1:
        $i1 = staticinvoke <org.sat4j.minisat.core.Heap: int left(int)>(i11);

        $r2 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt heap>;

        $i2 = interfaceinvoke $r2.<org.sat4j.specs.IVecInt: int size()>();

        if $i1 >= $i2 goto label5;

        $i3 = staticinvoke <org.sat4j.minisat.core.Heap: int right(int)>(i11);

        $r5 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt heap>;

        $i4 = interfaceinvoke $r5.<org.sat4j.specs.IVecInt: int size()>();

        if $i3 >= $i4 goto label2;

        $r10 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt heap>;

        $i7 = staticinvoke <org.sat4j.minisat.core.Heap: int right(int)>(i11);

        $i8 = interfaceinvoke $r10.<org.sat4j.specs.IVecInt: int get(int)>($i7);

        $r11 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt heap>;

        $i9 = staticinvoke <org.sat4j.minisat.core.Heap: int left(int)>(i11);

        $i10 = interfaceinvoke $r11.<org.sat4j.specs.IVecInt: int get(int)>($i9);

        $z0 = specialinvoke r0.<org.sat4j.minisat.core.Heap: boolean comp(int,int)>($i8, $i10);

        if $z0 == 0 goto label2;

        $i12 = staticinvoke <org.sat4j.minisat.core.Heap: int right(int)>(i11);

        goto label3;

     label2:
        $i12 = staticinvoke <org.sat4j.minisat.core.Heap: int left(int)>(i11);

     label3:
        $r12 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt heap>;

        $i13 = interfaceinvoke $r12.<org.sat4j.specs.IVecInt: int get(int)>($i12);

        $z1 = specialinvoke r0.<org.sat4j.minisat.core.Heap: boolean comp(int,int)>($i13, $i0);

        if $z1 != 0 goto label4;

        goto label5;

     label4:
        $r7 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt heap>;

        $r6 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt heap>;

        $i5 = interfaceinvoke $r6.<org.sat4j.specs.IVecInt: int get(int)>($i12);

        interfaceinvoke $r7.<org.sat4j.specs.IVecInt: void set(int,int)>(i11, $i5);

        $r9 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt indices>;

        $r8 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt heap>;

        $i6 = interfaceinvoke $r8.<org.sat4j.specs.IVecInt: int get(int)>(i11);

        interfaceinvoke $r9.<org.sat4j.specs.IVecInt: void set(int,int)>($i6, i11);

        i11 = $i12;

        goto label1;

     label5:
        $r3 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt heap>;

        interfaceinvoke $r3.<org.sat4j.specs.IVecInt: void set(int,int)>(i11, $i0);

        $r4 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt indices>;

        interfaceinvoke $r4.<org.sat4j.specs.IVecInt: void set(int,int)>($i0, i11);

        return;
    }

    boolean ok(int)
    {
        org.sat4j.minisat.core.Heap r0;
        int i0, $i1;
        org.sat4j.specs.IVecInt $r1;
        boolean $z0;

        r0 := @this: org.sat4j.minisat.core.Heap;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r1 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt indices>;

        $i1 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: int size()>();

        if i0 >= $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void <init>(double[])
    {
        org.sat4j.minisat.core.Heap r0;
        double[] r3;
        org.sat4j.specs.IVecInt $r4;
        int $i1;
        org.sat4j.core.VecInt $r5, $r6;

        r0 := @this: org.sat4j.minisat.core.Heap;

        r3 := @parameter0: double[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new org.sat4j.core.VecInt;

        specialinvoke $r5.<org.sat4j.core.VecInt: void <init>()>();

        r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt heap> = $r5;

        $r6 = new org.sat4j.core.VecInt;

        specialinvoke $r6.<org.sat4j.core.VecInt: void <init>()>();

        r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt indices> = $r6;

        r0.<org.sat4j.minisat.core.Heap: double[] activity> = r3;

        $r4 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt heap>;

        $i1 = (int) -1;

        interfaceinvoke $r4.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>($i1);

        return;
    }

    public void setBounds(int)
    {
        org.sat4j.minisat.core.Heap r0;
        int i0;
        org.sat4j.specs.IVecInt $r1;
        java.lang.AssertionError $r2;
        boolean $z0;

        r0 := @this: org.sat4j.minisat.core.Heap;

        i0 := @parameter0: int;

        $z0 = <org.sat4j.minisat.core.Heap: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if i0 >= 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $r1 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt indices>;

        interfaceinvoke $r1.<org.sat4j.specs.IVecInt: void growTo(int,int)>(i0, 0);

        return;
    }

    public boolean inHeap(int)
    {
        org.sat4j.specs.IVecInt $r1;
        java.lang.AssertionError $r2;
        org.sat4j.minisat.core.Heap r0;
        int i0, $i1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.sat4j.minisat.core.Heap;

        i0 := @parameter0: int;

        $z0 = <org.sat4j.minisat.core.Heap: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.sat4j.minisat.core.Heap: boolean ok(int)>(i0);

        if $z1 != 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $r1 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt indices>;

        $i1 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: int get(int)>(i0);

        if $i1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public void increase(int)
    {
        org.sat4j.specs.IVecInt $r1;
        java.lang.AssertionError $r2, $r3;
        org.sat4j.minisat.core.Heap r0;
        int i0, $i1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.sat4j.minisat.core.Heap;

        i0 := @parameter0: int;

        $z0 = <org.sat4j.minisat.core.Heap: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z3 = virtualinvoke r0.<org.sat4j.minisat.core.Heap: boolean ok(int)>(i0);

        if $z3 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $z1 = <org.sat4j.minisat.core.Heap: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r0.<org.sat4j.minisat.core.Heap: boolean inHeap(int)>(i0);

        if $z2 != 0 goto label2;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label2:
        $r1 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt indices>;

        $i1 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: int get(int)>(i0);

        virtualinvoke r0.<org.sat4j.minisat.core.Heap: void percolateUp(int)>($i1);

        return;
    }

    public boolean empty()
    {
        org.sat4j.minisat.core.Heap r0;
        org.sat4j.specs.IVecInt $r1;
        int $i0;
        boolean $z0;

        r0 := @this: org.sat4j.minisat.core.Heap;

        $r1 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt heap>;

        $i0 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: int size()>();

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int size()
    {
        org.sat4j.minisat.core.Heap r0;
        org.sat4j.specs.IVecInt $r1;
        int $i0, $i1;

        r0 := @this: org.sat4j.minisat.core.Heap;

        $r1 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt heap>;

        $i0 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: int size()>();

        $i1 = $i0 - 1;

        return $i1;
    }

    public int get(int)
    {
        org.sat4j.specs.IVecInt $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        org.sat4j.minisat.core.Heap r0;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.sat4j.minisat.core.Heap;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt heap>;

        $i1 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: int get(int)>(i0);

        $r3 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt heap>;

        $r2 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt heap>;

        $i2 = interfaceinvoke $r2.<org.sat4j.specs.IVecInt: int last()>();

        interfaceinvoke $r3.<org.sat4j.specs.IVecInt: void set(int,int)>(i0, $i2);

        $r5 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt indices>;

        $r4 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt heap>;

        $i3 = interfaceinvoke $r4.<org.sat4j.specs.IVecInt: int get(int)>(i0);

        interfaceinvoke $r5.<org.sat4j.specs.IVecInt: void set(int,int)>($i3, i0);

        $r6 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt indices>;

        interfaceinvoke $r6.<org.sat4j.specs.IVecInt: void set(int,int)>($i1, 0);

        $r7 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt heap>;

        interfaceinvoke $r7.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt pop()>();

        $r8 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt heap>;

        $i4 = interfaceinvoke $r8.<org.sat4j.specs.IVecInt: int size()>();

        if $i4 <= 1 goto label1;

        virtualinvoke r0.<org.sat4j.minisat.core.Heap: void percolateDown(int)>(1);

     label1:
        return $i1;
    }

    public void insert(int)
    {
        org.sat4j.specs.IVecInt $r1, $r2, $r3, $r4;
        java.lang.AssertionError $r5;
        org.sat4j.minisat.core.Heap r0;
        int i0, $i1, $i2;
        boolean $z0, $z1;

        r0 := @this: org.sat4j.minisat.core.Heap;

        i0 := @parameter0: int;

        $z0 = <org.sat4j.minisat.core.Heap: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.sat4j.minisat.core.Heap: boolean ok(int)>(i0);

        if $z1 != 0 goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        $r2 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt indices>;

        $r1 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt heap>;

        $i1 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: int size()>();

        interfaceinvoke $r2.<org.sat4j.specs.IVecInt: void set(int,int)>(i0, $i1);

        $r3 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt heap>;

        interfaceinvoke $r3.<org.sat4j.specs.IVecInt: org.sat4j.specs.IVecInt push(int)>(i0);

        $r4 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt indices>;

        $i2 = interfaceinvoke $r4.<org.sat4j.specs.IVecInt: int get(int)>(i0);

        virtualinvoke r0.<org.sat4j.minisat.core.Heap: void percolateUp(int)>($i2);

        return;
    }

    public int getmin()
    {
        int $i0;
        org.sat4j.minisat.core.Heap r0;

        r0 := @this: org.sat4j.minisat.core.Heap;

        $i0 = virtualinvoke r0.<org.sat4j.minisat.core.Heap: int get(int)>(1);

        return $i0;
    }

    public boolean heapProperty()
    {
        org.sat4j.minisat.core.Heap r0;
        boolean $z0;

        r0 := @this: org.sat4j.minisat.core.Heap;

        $z0 = virtualinvoke r0.<org.sat4j.minisat.core.Heap: boolean heapProperty(int)>(1);

        return $z0;
    }

    public boolean heapProperty(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0, $z1, $z2, $z3;
        org.sat4j.specs.IVecInt $r1, $r2, $r3;
        org.sat4j.minisat.core.Heap r0;

        r0 := @this: org.sat4j.minisat.core.Heap;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt heap>;

        $i1 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: int size()>();

        if i0 >= $i1 goto label2;

        $i2 = staticinvoke <org.sat4j.minisat.core.Heap: int parent(int)>(i0);

        if $i2 == 0 goto label1;

        $r2 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt heap>;

        $i5 = interfaceinvoke $r2.<org.sat4j.specs.IVecInt: int get(int)>(i0);

        $r3 = r0.<org.sat4j.minisat.core.Heap: org.sat4j.specs.IVecInt heap>;

        $i6 = staticinvoke <org.sat4j.minisat.core.Heap: int parent(int)>(i0);

        $i7 = interfaceinvoke $r3.<org.sat4j.specs.IVecInt: int get(int)>($i6);

        $z2 = specialinvoke r0.<org.sat4j.minisat.core.Heap: boolean comp(int,int)>($i5, $i7);

        if $z2 != 0 goto label3;

     label1:
        $i3 = staticinvoke <org.sat4j.minisat.core.Heap: int left(int)>(i0);

        $z0 = virtualinvoke r0.<org.sat4j.minisat.core.Heap: boolean heapProperty(int)>($i3);

        if $z0 == 0 goto label3;

        $i4 = staticinvoke <org.sat4j.minisat.core.Heap: int right(int)>(i0);

        $z1 = virtualinvoke r0.<org.sat4j.minisat.core.Heap: boolean heapProperty(int)>($i4);

        if $z1 == 0 goto label3;

     label2:
        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.sat4j.minisat.core.Heap: long serialVersionUID> = 1L;

        $r0 = class "Lorg/sat4j/minisat/core/Heap;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.sat4j.minisat.core.Heap: boolean $assertionsDisabled> = $z1;

        return;
    }
}
