public class org.apache.http.protocol.ResponseContent extends java.lang.Object implements org.apache.http.HttpResponseInterceptor
{
    private final boolean overwrite;

    public void <init>()
    {
        org.apache.http.protocol.ResponseContent r0;

        r0 := @this: org.apache.http.protocol.ResponseContent;

        specialinvoke r0.<org.apache.http.protocol.ResponseContent: void <init>(boolean)>(0);

        return;
    }

    public void <init>(boolean)
    {
        org.apache.http.protocol.ResponseContent r0;
        boolean z0;

        r0 := @this: org.apache.http.protocol.ResponseContent;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.http.protocol.ResponseContent: boolean overwrite> = z0;

        return;
    }

    public void process(org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException
    {
        org.apache.http.HttpVersion $r9;
        org.apache.http.ProtocolException $r17, $r18;
        long $l1, $l3;
        org.apache.http.StatusLine $r2, $r5;
        org.apache.http.Header $r6, $r7, $r14, $r15;
        byte $b2;
        int $i0, $i4;
        org.apache.http.protocol.ResponseContent r1;
        java.lang.String $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.http.HttpEntity $r4;
        java.lang.IllegalArgumentException $r16;
        org.apache.http.ProtocolVersion $r3;
        org.apache.http.protocol.HttpContext r13;
        org.apache.http.HttpResponse r0;

        r1 := @this: org.apache.http.protocol.ResponseContent;

        r0 := @parameter0: org.apache.http.HttpResponse;

        r13 := @parameter1: org.apache.http.protocol.HttpContext;

        if r0 != null goto label01;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP response may not be null");

        throw $r16;

     label01:
        $z0 = r1.<org.apache.http.protocol.ResponseContent: boolean overwrite>;

        if $z0 == 0 goto label02;

        interfaceinvoke r0.<org.apache.http.HttpResponse: void removeHeaders(java.lang.String)>("Transfer-Encoding");

        interfaceinvoke r0.<org.apache.http.HttpResponse: void removeHeaders(java.lang.String)>("Content-Length");

        goto label04;

     label02:
        $z1 = interfaceinvoke r0.<org.apache.http.HttpResponse: boolean containsHeader(java.lang.String)>("Transfer-Encoding");

        if $z1 == 0 goto label03;

        $r17 = new org.apache.http.ProtocolException;

        specialinvoke $r17.<org.apache.http.ProtocolException: void <init>(java.lang.String)>("Transfer-encoding header already present");

        throw $r17;

     label03:
        $z2 = interfaceinvoke r0.<org.apache.http.HttpResponse: boolean containsHeader(java.lang.String)>("Content-Length");

        if $z2 == 0 goto label04;

        $r18 = new org.apache.http.ProtocolException;

        specialinvoke $r18.<org.apache.http.ProtocolException: void <init>(java.lang.String)>("Content-Length header already present");

        throw $r18;

     label04:
        $r2 = interfaceinvoke r0.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $r3 = interfaceinvoke $r2.<org.apache.http.StatusLine: org.apache.http.ProtocolVersion getProtocolVersion()>();

        $r4 = interfaceinvoke r0.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        if $r4 == null goto label09;

        $l1 = interfaceinvoke $r4.<org.apache.http.HttpEntity: long getContentLength()>();

        $z3 = interfaceinvoke $r4.<org.apache.http.HttpEntity: boolean isChunked()>();

        if $z3 == 0 goto label05;

        $r9 = <org.apache.http.HttpVersion: org.apache.http.HttpVersion HTTP_1_0>;

        $z6 = virtualinvoke $r3.<org.apache.http.ProtocolVersion: boolean lessEquals(org.apache.http.ProtocolVersion)>($r9);

        if $z6 != 0 goto label05;

        interfaceinvoke r0.<org.apache.http.HttpResponse: void addHeader(java.lang.String,java.lang.String)>("Transfer-Encoding", "chunked");

        goto label06;

     label05:
        $b2 = $l1 cmp 0L;

        $i4 = (int) $b2;

        if $i4 < 0 goto label06;

        $l3 = interfaceinvoke $r4.<org.apache.http.HttpEntity: long getContentLength()>();

        $r8 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l3);

        interfaceinvoke r0.<org.apache.http.HttpResponse: void addHeader(java.lang.String,java.lang.String)>("Content-Length", $r8);

     label06:
        $r14 = interfaceinvoke $r4.<org.apache.http.HttpEntity: org.apache.http.Header getContentType()>();

        if $r14 == null goto label07;

        $z5 = interfaceinvoke r0.<org.apache.http.HttpResponse: boolean containsHeader(java.lang.String)>("Content-Type");

        if $z5 != 0 goto label07;

        $r7 = interfaceinvoke $r4.<org.apache.http.HttpEntity: org.apache.http.Header getContentType()>();

        interfaceinvoke r0.<org.apache.http.HttpResponse: void addHeader(org.apache.http.Header)>($r7);

     label07:
        $r15 = interfaceinvoke $r4.<org.apache.http.HttpEntity: org.apache.http.Header getContentEncoding()>();

        if $r15 == null goto label08;

        $z4 = interfaceinvoke r0.<org.apache.http.HttpResponse: boolean containsHeader(java.lang.String)>("Content-Encoding");

        if $z4 != 0 goto label08;

        $r6 = interfaceinvoke $r4.<org.apache.http.HttpEntity: org.apache.http.Header getContentEncoding()>();

        interfaceinvoke r0.<org.apache.http.HttpResponse: void addHeader(org.apache.http.Header)>($r6);

     label08:
        goto label10;

     label09:
        $r5 = interfaceinvoke r0.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r5.<org.apache.http.StatusLine: int getStatusCode()>();

        if $i0 == 204 goto label10;

        if $i0 == 304 goto label10;

        if $i0 == 205 goto label10;

        interfaceinvoke r0.<org.apache.http.HttpResponse: void addHeader(java.lang.String,java.lang.String)>("Content-Length", "0");

     label10:
        return;
    }
}
