class com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver extends java.lang.Object
{
    private final java.util.Map declToBridge;

    public void <init>(java.util.Map)
    {
        com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver r0;
        java.util.Map r1;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver: java.util.Map declToBridge> = r1;

        return;
    }

    public java.util.Map resolveAll()
    {
        com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver r1;
        java.util.HashMap $r0;
        com.mycila.inject.internal.asm.ClassReader $r11;
        com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder $r13;
        java.util.Map $r2;
        java.lang.String $r12;
        boolean $z0;
        java.util.Map$Entry r6;
        java.util.Iterator $r4;
        java.util.Set $r3, r10;
        java.io.IOException $r14;
        java.lang.Object $r5, $r7, $r9;
        java.lang.Class r8;

        r1 := @this: com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r2 = r1.<com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver: java.util.Map declToBridge>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        r8 = (java.lang.Class) $r7;

        $r9 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        r10 = (java.util.Set) $r9;

     label2:
        $r11 = new com.mycila.inject.internal.asm.ClassReader;

        $r12 = virtualinvoke r8.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r11.<com.mycila.inject.internal.asm.ClassReader: void <init>(java.lang.String)>($r12);

        $r13 = new com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder;

        specialinvoke $r13.<com.mycila.inject.internal.cglib.proxy.BridgeMethodResolver$BridgedFinder: void <init>(java.util.Set,java.util.Map)>(r10, $r0);

        virtualinvoke $r11.<com.mycila.inject.internal.asm.ClassReader: void accept(com.mycila.inject.internal.asm.ClassVisitor,int)>($r13, 6);

     label3:
        goto label5;

     label4:
        $r14 := @caughtexception;

     label5:
        goto label1;

     label6:
        return $r0;

        catch java.io.IOException from label2 to label3 with label4;
    }
}
