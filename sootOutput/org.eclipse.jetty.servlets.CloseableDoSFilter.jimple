public class org.eclipse.jetty.servlets.CloseableDoSFilter extends org.eclipse.jetty.servlets.DoSFilter
{
    private static final org.eclipse.jetty.util.log.Logger LOG;

    public void <init>()
    {
        org.eclipse.jetty.servlets.CloseableDoSFilter r0;

        r0 := @this: org.eclipse.jetty.servlets.CloseableDoSFilter;

        specialinvoke r0.<org.eclipse.jetty.servlets.DoSFilter: void <init>()>();

        return;
    }

    protected void closeConnection(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Thread)
    {
        org.eclipse.jetty.server.Request $r9;
        org.eclipse.jetty.io.EndPoint $r3;
        org.eclipse.jetty.server.AbstractHttpConnection $r1, $r2;
        javax.servlet.http.HttpServletResponse r7;
        java.io.IOException $r4;
        javax.servlet.http.HttpServletRequest r0;
        org.eclipse.jetty.servlets.CloseableDoSFilter r6;
        java.lang.Thread r8;
        org.eclipse.jetty.util.log.Logger $r5;
        boolean $z0;

        r6 := @this: org.eclipse.jetty.servlets.CloseableDoSFilter;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        r7 := @parameter1: javax.servlet.http.HttpServletResponse;

        r8 := @parameter2: java.lang.Thread;

     label1:
        $z0 = r0 instanceof org.eclipse.jetty.server.Request;

        if $z0 == 0 goto label2;

        $r9 = (org.eclipse.jetty.server.Request) r0;

        goto label3;

     label2:
        $r1 = staticinvoke <org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.server.AbstractHttpConnection getCurrentConnection()>();

        $r9 = virtualinvoke $r1.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.server.Request getRequest()>();

     label3:
        $r2 = virtualinvoke $r9.<org.eclipse.jetty.server.Request: org.eclipse.jetty.server.AbstractHttpConnection getConnection()>();

        $r3 = virtualinvoke $r2.<org.eclipse.jetty.server.AbstractHttpConnection: org.eclipse.jetty.io.EndPoint getEndPoint()>();

        interfaceinvoke $r3.<org.eclipse.jetty.io.EndPoint: void close()>();

     label4:
        goto label6;

     label5:
        $r4 := @caughtexception;

        $r5 = <org.eclipse.jetty.servlets.CloseableDoSFilter: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r5.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>($r4);

     label6:
        return;

        catch java.io.IOException from label1 to label4 with label5;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/servlets/CloseableDoSFilter;");

        <org.eclipse.jetty.servlets.CloseableDoSFilter: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
