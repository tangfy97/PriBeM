public final class org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray extends java.lang.Object implements java.lang.Cloneable
{
    public char[][] values;
    public int elementSize;
    public int threshold;

    public void <init>()
    {
        org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: void <init>(int)>(13);

        return;
    }

    public void <init>(int)
    {
        int $i0, $i1, $i2, i3;
        char[][] $r1;
        org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray;

        i3 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i3 >= 3 goto label1;

        i3 = 3;

     label1:
        r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: int elementSize> = 0;

        $i0 = i3 + 1;

        r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: int threshold> = $i0;

        $i1 = 2 * i3;

        $i2 = $i1 + 1;

        $r1 = newarray (char[])[$i2];

        r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: char[][] values> = $r1;

        return;
    }

    public java.lang.Object add(char[])
    {
        char[][] $r1, $r3, $r4, $r5;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        char[] r2, $r6;
        org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray r0;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray;

        r2 := @parameter0: char[];

        $r1 = r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: char[][] values>;

        i0 = lengthof $r1;

        $i1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int hashCode(char[])>(r2);

        $i2 = $i1 & 2147483647;

        i6 = $i2 % i0;

        goto label3;

     label1:
        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r6, r2);

        if $z0 == 0 goto label2;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: char[][] values>;

        $r3[i6] = r2;

        return r2;

     label2:
        i6 = i6 + 1;

        if i6 != i0 goto label3;

        i6 = 0;

     label3:
        $r5 = r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: char[][] values>;

        $r6 = $r5[i6];

        if $r6 != null goto label1;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: char[][] values>;

        $r4[i6] = r2;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: int elementSize>;

        $i4 = $i3 + 1;

        r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: int elementSize> = $i4;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: int threshold>;

        if $i4 <= $i5 goto label4;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: void rehash()>();

     label4:
        return r2;
    }

    public void asArray(java.lang.Object[])
    {
        java.lang.Object[] r1;
        char[][] $r2, $r3, $r5;
        java.lang.IllegalArgumentException $r8;
        int $i0, $i1, i2, i3, i4, $i6;
        char[] $r4, $r6;
        org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray;

        r1 := @parameter0: java.lang.Object[];

        $i1 = r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: int elementSize>;

        $i0 = lengthof r1;

        if $i1 == $i0 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r8;

     label1:
        i3 = r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: int elementSize>;

        i4 = 0;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: char[][] values>;

        i2 = lengthof $r2;

        goto label4;

     label2:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: char[][] values>;

        $r4 = $r3[i4];

        if $r4 == null goto label3;

        $i6 = (int) -1;

        i3 = i3 + $i6;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: char[][] values>;

        $r6 = $r5[i4];

        r1[i3] = $r6;

     label3:
        i4 = i4 + 1;

     label4:
        if i4 >= i2 goto label5;

        if i3 > 0 goto label2;

     label5:
        return;
    }

    public void clear()
    {
        int i0, $i2;
        char[][] $r1, $r2;
        org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: char[][] values>;

        i0 = lengthof $r1;

        goto label2;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: char[][] values>;

        $r2[i0] = null;

     label2:
        $i2 = (int) -1;

        i0 = i0 + $i2;

        if i0 >= 0 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: int elementSize> = 0;

        return;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        char[][] $r3, $r4, $r5, $r6;
        int $i0, $i1, i2;
        java.lang.Object $r1;
        org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray r0, r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r2 = (org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray) $r1;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: int elementSize>;

        r2.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: int elementSize> = $i0;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: int threshold>;

        r2.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: int threshold> = $i1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: char[][] values>;

        i2 = lengthof $r3;

        $r4 = newarray (char[])[i2];

        r2.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: char[][] values> = $r4;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: char[][] values>;

        $r5 = r2.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: char[][] values>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r5, 0, i2);

        return r2;
    }

    public char[] get(char[])
    {
        char[][] $r1, $r3, $r4;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        char[] r2, $r5;
        org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray r0;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray;

        r2 := @parameter0: char[];

        $r1 = r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: char[][] values>;

        i0 = lengthof $r1;

        $i1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int hashCode(char[])>(r2);

        $i2 = $i1 & 2147483647;

        i6 = $i2 % i0;

        goto label3;

     label1:
        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r5, r2);

        if $z0 == 0 goto label2;

        return $r5;

     label2:
        i6 = i6 + 1;

        if i6 != i0 goto label3;

        i6 = 0;

     label3:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: char[][] values>;

        $r5 = $r4[i6];

        if $r5 != null goto label1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: char[][] values>;

        $r3[i6] = r2;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: int elementSize>;

        $i4 = $i3 + 1;

        r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: int elementSize> = $i4;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: int threshold>;

        if $i4 <= $i5 goto label4;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: void rehash()>();

     label4:
        return r2;
    }

    public boolean includes(char[])
    {
        char[][] $r1, $r3;
        int i0, $i1, $i2, i3;
        char[] r2, $r4;
        org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray r0;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray;

        r2 := @parameter0: char[];

        $r1 = r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: char[][] values>;

        i0 = lengthof $r1;

        $i1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int hashCode(char[])>(r2);

        $i2 = $i1 & 2147483647;

        i3 = $i2 % i0;

        goto label3;

     label1:
        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r4, r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i3 = i3 + 1;

        if i3 != i0 goto label3;

        i3 = 0;

     label3:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: char[][] values>;

        $r4 = $r3[i3];

        if $r4 != null goto label1;

        return 0;
    }

    public char[] remove(char[])
    {
        char[][] $r1, $r3, $r5, $r6, $r8;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, $i7;
        org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray r0;
        boolean $z0;
        char[] r2, r4, $r7, $r9;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray;

        r2 := @parameter0: char[];

        $r1 = r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: char[][] values>;

        i0 = lengthof $r1;

        $i1 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int hashCode(char[])>(r2);

        $i2 = $i1 & 2147483647;

        i6 = $i2 % i0;

        goto label6;

     label1:
        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r9, r2);

        if $z0 == 0 goto label5;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: int elementSize>;

        $i4 = $i3 - 1;

        r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: int elementSize> = $i4;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: char[][] values>;

        r4 = $r3[i6];

        $r5 = r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: char[][] values>;

        $r5[i6] = null;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: char[][] values>;

        $i5 = i6 + 1;

        if $i5 != i0 goto label2;

        $i7 = 0;

        goto label3;

     label2:
        $i7 = i6 + 1;

     label3:
        $r7 = $r6[$i7];

        if $r7 == null goto label4;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: void rehash()>();

     label4:
        return r4;

     label5:
        i6 = i6 + 1;

        if i6 != i0 goto label6;

        i6 = 0;

     label6:
        $r8 = r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: char[][] values>;

        $r9 = $r8[i6];

        if $r9 != null goto label1;

        return null;
    }

    private void rehash()
    {
        char[][] $r2, $r3, $r5;
        int $i0, $i1, $i2, $i3, i4, $i6;
        char[] $r4;
        org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray r1, $r6;

        r1 := @this: org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray;

        $r6 = new org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: int elementSize>;

        $i1 = $i0 * 2;

        specialinvoke $r6.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: void <init>(int)>($i1);

        $r2 = r1.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: char[][] values>;

        i4 = lengthof $r2;

        goto label2;

     label1:
        $r3 = r1.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: char[][] values>;

        $r4 = $r3[i4];

        if $r4 == null goto label2;

        virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: java.lang.Object add(char[])>($r4);

     label2:
        $i6 = (int) -1;

        i4 = i4 + $i6;

        if i4 >= 0 goto label1;

        $r5 = $r6.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: char[][] values>;

        r1.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: char[][] values> = $r5;

        $i2 = $r6.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: int elementSize>;

        r1.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: int elementSize> = $i2;

        $i3 = $r6.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: int threshold>;

        r1.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: int threshold> = $i3;

        return;
    }

    public java.lang.String toString()
    {
        char[][] $r1, $r2;
        java.lang.StringBuffer $r4, $r7, $r8;
        int i0, i1;
        char[] $r3;
        java.lang.String $r5, $r6, r9;
        org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray;

        r9 = "";

        i1 = 0;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: char[][] values>;

        i0 = lengthof $r1;

        goto label3;

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray: char[][] values>;

        $r3 = $r2[i1];

        if $r3 == null goto label2;

        $r4 = new java.lang.StringBuffer;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r9);

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>($r5);

        $r6 = new java.lang.String;

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r3);

        $r7 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        i1 = i1 + 1;

     label3:
        if i1 < i0 goto label1;

        return r9;
    }
}
