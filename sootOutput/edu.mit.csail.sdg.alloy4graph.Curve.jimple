final class edu.mit.csail.sdg.alloy4graph.Curve extends java.lang.Object
{
    public double startX;
    public double startY;
    public double endX;
    public double endY;
    public final java.util.List list;

    public void <init>(double, double)
    {
        edu.mit.csail.sdg.alloy4graph.Curve r0;
        java.util.ArrayList $r1;
        double d0, d1;

        r0 := @this: edu.mit.csail.sdg.alloy4graph.Curve;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list> = $r1;

        r0.<edu.mit.csail.sdg.alloy4graph.Curve: double startX> = d0;

        r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endX> = d0;

        r0.<edu.mit.csail.sdg.alloy4graph.Curve: double startY> = d1;

        r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endY> = d1;

        return;
    }

    public edu.mit.csail.sdg.alloy4graph.Curve dup()
    {
        java.util.Iterator $r3;
        java.awt.geom.CubicCurve2D$Double r5, $r6;
        java.util.List $r2, $r7;
        edu.mit.csail.sdg.alloy4graph.Curve $r0, r1;
        java.lang.Object $r4;
        double $d0, $d1, $d2, $d3;
        boolean $z0;

        r1 := @this: edu.mit.csail.sdg.alloy4graph.Curve;

        $r0 = new edu.mit.csail.sdg.alloy4graph.Curve;

        $d1 = r1.<edu.mit.csail.sdg.alloy4graph.Curve: double startX>;

        $d0 = r1.<edu.mit.csail.sdg.alloy4graph.Curve: double startY>;

        specialinvoke $r0.<edu.mit.csail.sdg.alloy4graph.Curve: void <init>(double,double)>($d1, $d0);

        $d2 = r1.<edu.mit.csail.sdg.alloy4graph.Curve: double endX>;

        $r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endX> = $d2;

        $d3 = r1.<edu.mit.csail.sdg.alloy4graph.Curve: double endY>;

        $r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endY> = $d3;

        $r2 = r1.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.awt.geom.CubicCurve2D$Double) $r4;

        $r6 = new java.awt.geom.CubicCurve2D$Double;

        specialinvoke $r6.<java.awt.geom.CubicCurve2D$Double: void <init>()>();

        virtualinvoke $r6.<java.awt.geom.CubicCurve2D$Double: void setCurve(java.awt.geom.CubicCurve2D)>(r5);

        $r7 = $r0.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        return $r0;
    }

    edu.mit.csail.sdg.alloy4graph.Curve join(edu.mit.csail.sdg.alloy4graph.Curve)
    {
        java.util.List $r2, $r3, $r5, $r6;
        edu.mit.csail.sdg.alloy4graph.Curve $r0, r1, r4;
        double $d0, $d1, $d2, $d3;

        r1 := @this: edu.mit.csail.sdg.alloy4graph.Curve;

        r4 := @parameter0: edu.mit.csail.sdg.alloy4graph.Curve;

        $r0 = new edu.mit.csail.sdg.alloy4graph.Curve;

        $d1 = r1.<edu.mit.csail.sdg.alloy4graph.Curve: double startX>;

        $d0 = r1.<edu.mit.csail.sdg.alloy4graph.Curve: double startY>;

        specialinvoke $r0.<edu.mit.csail.sdg.alloy4graph.Curve: void <init>(double,double)>($d1, $d0);

        $r3 = $r0.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        $r2 = r1.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>($r2);

        $r6 = $r0.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        $r5 = r4.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        interfaceinvoke $r6.<java.util.List: boolean addAll(java.util.Collection)>($r5);

        $d2 = r4.<edu.mit.csail.sdg.alloy4graph.Curve: double endX>;

        $r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endX> = $d2;

        $d3 = r4.<edu.mit.csail.sdg.alloy4graph.Curve: double endY>;

        $r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endY> = $d3;

        return $r0;
    }

    private static java.awt.geom.CubicCurve2D$Double makeline(double, double, double, double)
    {
        double d0, d1, d2, $d3, $d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        java.awt.geom.CubicCurve2D$Double $r0;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d5 := @parameter3: double;

        $r0 = new java.awt.geom.CubicCurve2D$Double;

        $d3 = d2 - d0;

        $d4 = $d3 * 0.3;

        $d15 = $d4 + d0;

        $d6 = d5 - d1;

        $d7 = $d6 * 0.3;

        $d14 = $d7 + d1;

        $d8 = d2 - d0;

        $d9 = $d8 * 0.6;

        $d13 = $d9 + d0;

        $d10 = d5 - d1;

        $d11 = $d10 * 0.6;

        $d12 = $d11 + d1;

        specialinvoke $r0.<java.awt.geom.CubicCurve2D$Double: void <init>(double,double,double,double,double,double,double,double)>(d0, d1, $d15, $d14, $d13, $d12, d2, d5);

        return $r0;
    }

    public edu.mit.csail.sdg.alloy4graph.Curve lineTo(double, double)
    {
        java.util.List $r1;
        java.awt.geom.CubicCurve2D$Double $r2;
        edu.mit.csail.sdg.alloy4graph.Curve r0;
        double d0, d1, $d2, $d3;

        r0 := @this: edu.mit.csail.sdg.alloy4graph.Curve;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r1 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        $d3 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endX>;

        $d2 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endY>;

        $r2 = staticinvoke <edu.mit.csail.sdg.alloy4graph.Curve: java.awt.geom.CubicCurve2D$Double makeline(double,double,double,double)>($d3, $d2, d0, d1);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endX> = d0;

        r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endY> = d1;

        return r0;
    }

    public edu.mit.csail.sdg.alloy4graph.Curve cubicTo(double, double, double, double, double, double)
    {
        java.awt.geom.CubicCurve2D$Double $r1;
        java.util.List $r2;
        edu.mit.csail.sdg.alloy4graph.Curve r0;
        double d0, d1, d2, d3, d4, d5, $d6, $d7;

        r0 := @this: edu.mit.csail.sdg.alloy4graph.Curve;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        $r2 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        $r1 = new java.awt.geom.CubicCurve2D$Double;

        $d7 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endX>;

        $d6 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endY>;

        specialinvoke $r1.<java.awt.geom.CubicCurve2D$Double: void <init>(double,double,double,double,double,double,double,double)>($d7, $d6, d0, d1, d2, d3, d4, d5);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endX> = d4;

        r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endY> = d5;

        return r0;
    }

    private static boolean intersects(double, double, double, double, double, double, double)
    {
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8;
        int $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, d11, d12, d13;

        d0 := @parameter0: double;

        d4 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d1 := @parameter4: double;

        d11 := @parameter5: double;

        d12 := @parameter6: double;

        $b0 = d11 cmpg d12;

        $i9 = (int) $b0;

        if $i9 < 0 goto label1;

        d13 = d11;

        d11 = d12;

        d12 = d13;

     label1:
        $b1 = d0 cmpg d1;

        $i10 = (int) $b1;

        if $i10 > 0 goto label2;

        $b8 = d1 cmpg d2;

        $i11 = (int) $b8;

        if $i11 <= 0 goto label4;

     label2:
        $b2 = d2 cmpg d1;

        $i12 = (int) $b2;

        if $i12 > 0 goto label3;

        $b3 = d1 cmpg d0;

        $i13 = (int) $b3;

        if $i13 <= 0 goto label4;

     label3:
        return 0;

     label4:
        $d6 = d3 - d4;

        $d5 = d2 - d0;

        $d9 = $d6 / $d5;

        $d7 = d1 - d0;

        $d8 = $d7 * $d9;

        $d10 = $d8 + d4;

        $b4 = d11 cmpg $d10;

        $i14 = (int) $b4;

        if $i14 > 0 goto label5;

        $b7 = $d10 cmpg d12;

        $i15 = (int) $b7;

        if $i15 <= 0 goto label6;

     label5:
        $b5 = d12 cmpg $d10;

        $i16 = (int) $b5;

        if $i16 > 0 goto label7;

        $b6 = $d10 cmpg d11;

        $i17 = (int) $b6;

        if $i17 > 0 goto label7;

     label6:
        return 1;

     label7:
        return 0;
    }

    void bendUp(double, double, double, double)
    {
        edu.mit.csail.sdg.alloy4graph.Curve r0;
        int $i0, $i1, i2;
        double d0, d1, d2, $d3, $d4, $d5, $d6, d7, $d8, $d9, $d10, $d11, $d12, $d13;
        boolean $z0;
        java.awt.geom.CubicCurve2D$Double r4, $r6, $r8;
        java.util.List $r1, $r2, $r5, $r7;
        java.lang.Object $r3;

        r0 := @this: edu.mit.csail.sdg.alloy4graph.Curve;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d7 := @parameter3: double;

        i2 = 0;

     label1:
        $r1 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i2 >= $i0 goto label3;

        $r2 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i2);

        r4 = (java.awt.geom.CubicCurve2D$Double) $r3;

        $d6 = r4.<java.awt.geom.CubicCurve2D$Double: double x1>;

        $d5 = r4.<java.awt.geom.CubicCurve2D$Double: double y1>;

        $d4 = r4.<java.awt.geom.CubicCurve2D$Double: double x2>;

        $d3 = r4.<java.awt.geom.CubicCurve2D$Double: double y2>;

        $z0 = staticinvoke <edu.mit.csail.sdg.alloy4graph.Curve: boolean intersects(double,double,double,double,double,double,double)>($d6, $d5, $d4, $d3, d0, d1, d2);

        if $z0 == 0 goto label2;

        $r5 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        $d10 = r4.<java.awt.geom.CubicCurve2D$Double: double x1>;

        $d9 = r4.<java.awt.geom.CubicCurve2D$Double: double y1>;

        $d8 = d1 - d7;

        $r6 = staticinvoke <edu.mit.csail.sdg.alloy4graph.Curve: java.awt.geom.CubicCurve2D$Double makeline(double,double,double,double)>($d10, $d9, d0, $d8);

        interfaceinvoke $r5.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i2, $r6);

        $r7 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        $i1 = i2 + 1;

        $d13 = d1 - d7;

        $d12 = r4.<java.awt.geom.CubicCurve2D$Double: double x2>;

        $d11 = r4.<java.awt.geom.CubicCurve2D$Double: double y2>;

        $r8 = staticinvoke <edu.mit.csail.sdg.alloy4graph.Curve: java.awt.geom.CubicCurve2D$Double makeline(double,double,double,double)>(d0, $d13, $d12, $d11);

        interfaceinvoke $r7.<java.util.List: void add(int,java.lang.Object)>($i1, $r8);

        return;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    void bendDown(double, double, double, double)
    {
        edu.mit.csail.sdg.alloy4graph.Curve r0;
        int $i0, $i1, i2;
        double d0, d1, d2, $d3, $d4, $d5, $d6, d7, $d8, $d9, $d10, $d11, $d12, $d13;
        boolean $z0;
        java.awt.geom.CubicCurve2D$Double r4, $r6, $r8;
        java.util.List $r1, $r2, $r5, $r7;
        java.lang.Object $r3;

        r0 := @this: edu.mit.csail.sdg.alloy4graph.Curve;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d7 := @parameter3: double;

        i2 = 0;

     label1:
        $r1 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i2 >= $i0 goto label3;

        $r2 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i2);

        r4 = (java.awt.geom.CubicCurve2D$Double) $r3;

        $d6 = r4.<java.awt.geom.CubicCurve2D$Double: double x1>;

        $d5 = r4.<java.awt.geom.CubicCurve2D$Double: double y1>;

        $d4 = r4.<java.awt.geom.CubicCurve2D$Double: double x2>;

        $d3 = r4.<java.awt.geom.CubicCurve2D$Double: double y2>;

        $z0 = staticinvoke <edu.mit.csail.sdg.alloy4graph.Curve: boolean intersects(double,double,double,double,double,double,double)>($d6, $d5, $d4, $d3, d0, d1, d2);

        if $z0 == 0 goto label2;

        $r5 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        $d10 = r4.<java.awt.geom.CubicCurve2D$Double: double x1>;

        $d9 = r4.<java.awt.geom.CubicCurve2D$Double: double y1>;

        $d8 = d2 + d7;

        $r6 = staticinvoke <edu.mit.csail.sdg.alloy4graph.Curve: java.awt.geom.CubicCurve2D$Double makeline(double,double,double,double)>($d10, $d9, d0, $d8);

        interfaceinvoke $r5.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i2, $r6);

        $r7 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        $i1 = i2 + 1;

        $d13 = d2 + d7;

        $d12 = r4.<java.awt.geom.CubicCurve2D$Double: double x2>;

        $d11 = r4.<java.awt.geom.CubicCurve2D$Double: double y2>;

        $r8 = staticinvoke <edu.mit.csail.sdg.alloy4graph.Curve: java.awt.geom.CubicCurve2D$Double makeline(double,double,double,double)>(d0, $d13, $d12, $d11);

        interfaceinvoke $r7.<java.util.List: void add(int,java.lang.Object)>($i1, $r8);

        return;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    public void chopStart(double)
    {
        edu.mit.csail.sdg.alloy4graph.Curve r0;
        boolean $z0, $z1;
        java.awt.geom.CubicCurve2D$Double $r7, $r10, $r16, $r17, $r18;
        java.util.List $r1, $r2, $r4, $r8, $r12, $r13, $r14, $r15;
        int $i0, i1, $i3;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, d13, d14;
        java.lang.Object $r5, $r9;

        r0 := @this: edu.mit.csail.sdg.alloy4graph.Curve;

        d13 := @parameter0: double;

        $r1 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $d0 = (double) $i0;

        d14 = d13 * $d0;

        $d1 = staticinvoke <java.lang.StrictMath: double floor(double)>(d14);

        i1 = (int) $d1;

        if i1 >= 0 goto label1;

        return;

     label1:
        if i1 < $i0 goto label2;

        $r15 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        interfaceinvoke $r15.<java.util.List: void clear()>();

     label2:
        if i1 <= 0 goto label3;

        $r13 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        $z1 = interfaceinvoke $r13.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label3;

        $r14 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        interfaceinvoke $r14.<java.util.List: java.lang.Object remove(int)>(0);

        $i3 = (int) -1;

        i1 = i1 + $i3;

        goto label2;

     label3:
        $r2 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label4;

        $r12 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        $r16 = new java.awt.geom.CubicCurve2D$Double;

        $d5 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endX>;

        r0.<edu.mit.csail.sdg.alloy4graph.Curve: double startX> = $d5;

        $d6 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endY>;

        r0.<edu.mit.csail.sdg.alloy4graph.Curve: double startY> = $d6;

        $d12 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endX>;

        $d11 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endY>;

        $d10 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endX>;

        $d9 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endY>;

        $d8 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endX>;

        $d7 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endY>;

        specialinvoke $r16.<java.awt.geom.CubicCurve2D$Double: void <init>(double,double,double,double,double,double,double,double)>($d5, $d6, $d12, $d11, $d10, $d9, $d8, $d7);

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r16);

        return;

     label4:
        $r17 = new java.awt.geom.CubicCurve2D$Double;

        specialinvoke $r17.<java.awt.geom.CubicCurve2D$Double: void <init>()>();

        $d2 = d14 - $d1;

        $r4 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (java.awt.geom.CubicCurve2D$Double) $r5;

        $r18 = new java.awt.geom.CubicCurve2D$Double;

        specialinvoke $r18.<java.awt.geom.CubicCurve2D$Double: void <init>()>();

        staticinvoke <edu.mit.csail.sdg.alloy4graph.Curve: void divide(double,java.awt.geom.CubicCurve2D$Double,java.awt.geom.CubicCurve2D$Double,java.awt.geom.CubicCurve2D$Double)>($d2, $r7, $r18, $r17);

        $r8 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(0);

        $r10 = (java.awt.geom.CubicCurve2D$Double) $r9;

        virtualinvoke $r10.<java.awt.geom.CubicCurve2D$Double: void setCurve(java.awt.geom.CubicCurve2D)>($r17);

        $d3 = $r17.<java.awt.geom.CubicCurve2D$Double: double x1>;

        r0.<edu.mit.csail.sdg.alloy4graph.Curve: double startX> = $d3;

        $d4 = $r17.<java.awt.geom.CubicCurve2D$Double: double y1>;

        r0.<edu.mit.csail.sdg.alloy4graph.Curve: double startY> = $d4;

        return;
    }

    public void chopEnd(double)
    {
        edu.mit.csail.sdg.alloy4graph.Curve r0;
        boolean $z0;
        java.awt.geom.CubicCurve2D$Double $r4, $r7, $r8, $r11, $r12;
        java.util.List $r1, $r2, $r3, $r5, $r9, $r13, $r14, $r15;
        int $i0, i1, $i2, $i3, $i4;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, d15, d16;
        java.lang.Object $r6, $r10;

        r0 := @this: edu.mit.csail.sdg.alloy4graph.Curve;

        d15 := @parameter0: double;

        $r1 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $d0 = (double) $i0;

        d16 = d15 * $d0;

        $d1 = staticinvoke <java.lang.StrictMath: double floor(double)>(d16);

        i1 = (int) $d1;

        if i1 >= 0 goto label1;

        $r15 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        interfaceinvoke $r15.<java.util.List: void clear()>();

     label1:
        if i1 < $i0 goto label2;

        return;

     label2:
        $i2 = i1 + 1;

        $r2 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        $i3 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i2 >= $i3 goto label3;

        $r14 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        $i4 = i1 + 1;

        interfaceinvoke $r14.<java.util.List: java.lang.Object remove(int)>($i4);

        goto label2;

     label3:
        $r3 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label4;

        $d5 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: double startX>;

        r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endX> = $d5;

        $d6 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: double startY>;

        r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endY> = $d6;

        $r13 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        $r12 = new java.awt.geom.CubicCurve2D$Double;

        $d14 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endX>;

        $d13 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endY>;

        $d12 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endX>;

        $d11 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endY>;

        $d10 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endX>;

        $d9 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endY>;

        $d8 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endX>;

        $d7 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endY>;

        specialinvoke $r12.<java.awt.geom.CubicCurve2D$Double: void <init>(double,double,double,double,double,double,double,double)>($d14, $d13, $d12, $d11, $d10, $d9, $d8, $d7);

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r12);

        return;

     label4:
        $r4 = new java.awt.geom.CubicCurve2D$Double;

        specialinvoke $r4.<java.awt.geom.CubicCurve2D$Double: void <init>()>();

        $d2 = d16 - $d1;

        $r5 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i1);

        $r8 = (java.awt.geom.CubicCurve2D$Double) $r6;

        $r7 = new java.awt.geom.CubicCurve2D$Double;

        specialinvoke $r7.<java.awt.geom.CubicCurve2D$Double: void <init>()>();

        staticinvoke <edu.mit.csail.sdg.alloy4graph.Curve: void divide(double,java.awt.geom.CubicCurve2D$Double,java.awt.geom.CubicCurve2D$Double,java.awt.geom.CubicCurve2D$Double)>($d2, $r8, $r4, $r7);

        $r9 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i1);

        $r11 = (java.awt.geom.CubicCurve2D$Double) $r10;

        virtualinvoke $r11.<java.awt.geom.CubicCurve2D$Double: void setCurve(java.awt.geom.CubicCurve2D)>($r4);

        $d3 = $r4.<java.awt.geom.CubicCurve2D$Double: double x2>;

        r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endX> = $d3;

        $d4 = $r4.<java.awt.geom.CubicCurve2D$Double: double y2>;

        r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endY> = $d4;

        return;
    }

    public double getXatY(double, double, double, double)
    {
        byte $b0, $b1, $b2, $b3, $b4, $b5;
        edu.mit.csail.sdg.alloy4graph.Curve r0;
        int $i6, $i7, $i8, $i9, $i10;
        double d0, d1, $d2, $d3, d4, d5, $d6, $d7, $d8, $d9, $d10, d11, d12, d13, d14, d15;

        r0 := @this: edu.mit.csail.sdg.alloy4graph.Curve;

        d4 := @parameter0: double;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d5 := @parameter3: double;

        d11 = d0;

        d12 = d1;

        $d2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4graph.Curve: double getY(double)>(d0);

        d13 = $d2;

        $d3 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4graph.Curve: double getY(double)>(d1);

        d14 = $d3;

        $b0 = $d2 cmpl $d3;

        $i6 = (int) $b0;

        if $i6 <= 0 goto label1;

        d13 = $d3;

        d14 = $d2;

        d11 = d1;

        d12 = d0;

     label1:
        $b1 = d13 cmpg d4;

        $i7 = (int) $b1;

        if $i7 > 0 goto label2;

        $b2 = d4 cmpg d14;

        $i8 = (int) $b2;

        if $i8 <= 0 goto label3;

     label2:
        return d5;

     label3:
        $d6 = d11 - d12;

        $d7 = staticinvoke <java.lang.StrictMath: double abs(double)>($d6);

        $b3 = $d7 cmpl 0.001;

        $i9 = (int) $b3;

        if $i9 <= 0 goto label7;

        $d9 = d11 + d12;

        d15 = $d9 / 2.0;

        $d10 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4graph.Curve: double getY(double)>(d15);

        $b4 = $d10 cmpl d4;

        if $b4 != 0 goto label4;

        d11 = d15;

        goto label7;

     label4:
        $b5 = $d10 cmpg d4;

        $i10 = (int) $b5;

        if $i10 >= 0 goto label5;

        d11 = d15;

        goto label6;

     label5:
        d12 = d15;

     label6:
        goto label3;

     label7:
        $d8 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4graph.Curve: double getX(double)>(d11);

        return $d8;
    }

    public double getX(double)
    {
        java.awt.geom.CubicCurve2D$Double $r4;
        java.util.List $r1, $r2;
        edu.mit.csail.sdg.alloy4graph.Curve r0;
        int $i0, i1;
        java.lang.Object $r3;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6, d7;

        r0 := @this: edu.mit.csail.sdg.alloy4graph.Curve;

        d6 := @parameter0: double;

        $r1 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $d0 = (double) $i0;

        d7 = d6 * $d0;

        $d1 = staticinvoke <java.lang.StrictMath: double floor(double)>(d7);

        i1 = (int) $d1;

        if i1 >= 0 goto label1;

        $d5 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: double startX>;

        return $d5;

     label1:
        if i1 < $i0 goto label2;

        $d4 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endX>;

        return $d4;

     label2:
        $r2 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        $r4 = (java.awt.geom.CubicCurve2D$Double) $r3;

        $d2 = d7 - $d1;

        $d3 = specialinvoke r0.<edu.mit.csail.sdg.alloy4graph.Curve: double getX(java.awt.geom.CubicCurve2D$Double,double)>($r4, $d2);

        return $d3;
    }

    public double getY(double)
    {
        java.awt.geom.CubicCurve2D$Double $r4;
        java.util.List $r1, $r2;
        edu.mit.csail.sdg.alloy4graph.Curve r0;
        int $i0, i1;
        java.lang.Object $r3;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6, d7;

        r0 := @this: edu.mit.csail.sdg.alloy4graph.Curve;

        d6 := @parameter0: double;

        $r1 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $d0 = (double) $i0;

        d7 = d6 * $d0;

        $d1 = staticinvoke <java.lang.StrictMath: double floor(double)>(d7);

        i1 = (int) $d1;

        if i1 >= 0 goto label1;

        $d5 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: double startY>;

        return $d5;

     label1:
        if i1 < $i0 goto label2;

        $d4 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: double endY>;

        return $d4;

     label2:
        $r2 = r0.<edu.mit.csail.sdg.alloy4graph.Curve: java.util.List list>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        $r4 = (java.awt.geom.CubicCurve2D$Double) $r3;

        $d2 = d7 - $d1;

        $d3 = specialinvoke r0.<edu.mit.csail.sdg.alloy4graph.Curve: double getY(java.awt.geom.CubicCurve2D$Double,double)>($r4, $d2);

        return $d3;
    }

    private double getX(java.awt.geom.CubicCurve2D$Double, double)
    {
        edu.mit.csail.sdg.alloy4graph.Curve r1;
        double $d0, $d1, d2, $d3, $d4, $d5, d6, $d7, $d8, $d9, $d10, $d11, d12, $d13, $d14, $d15, $d16, $d17, d18, $d19, $d20, d21, $d22, $d23, d24, $d25, $d26, $d27;
        java.awt.geom.CubicCurve2D$Double r0;

        r1 := @this: edu.mit.csail.sdg.alloy4graph.Curve;

        r0 := @parameter0: java.awt.geom.CubicCurve2D$Double;

        d2 := @parameter1: double;

        $d1 = r0.<java.awt.geom.CubicCurve2D$Double: double ctrlx1>;

        $d0 = r0.<java.awt.geom.CubicCurve2D$Double: double x1>;

        $d3 = $d1 - $d0;

        $d5 = $d3 * d2;

        $d4 = r0.<java.awt.geom.CubicCurve2D$Double: double x1>;

        d6 = $d5 + $d4;

        $d8 = r0.<java.awt.geom.CubicCurve2D$Double: double ctrlx2>;

        $d7 = r0.<java.awt.geom.CubicCurve2D$Double: double ctrlx1>;

        $d9 = $d8 - $d7;

        $d11 = $d9 * d2;

        $d10 = r0.<java.awt.geom.CubicCurve2D$Double: double ctrlx1>;

        d12 = $d11 + $d10;

        $d14 = r0.<java.awt.geom.CubicCurve2D$Double: double x2>;

        $d13 = r0.<java.awt.geom.CubicCurve2D$Double: double ctrlx2>;

        $d15 = $d14 - $d13;

        $d17 = $d15 * d2;

        $d16 = r0.<java.awt.geom.CubicCurve2D$Double: double ctrlx2>;

        d18 = $d17 + $d16;

        $d19 = d12 - d6;

        $d20 = $d19 * d2;

        d21 = $d20 + d6;

        $d22 = d18 - d12;

        $d23 = $d22 * d2;

        d24 = $d23 + d12;

        $d25 = d24 - d21;

        $d26 = $d25 * d2;

        $d27 = $d26 + d21;

        return $d27;
    }

    private double getY(java.awt.geom.CubicCurve2D$Double, double)
    {
        edu.mit.csail.sdg.alloy4graph.Curve r1;
        double $d0, $d1, d2, $d3, $d4, $d5, d6, $d7, $d8, $d9, $d10, $d11, d12, $d13, $d14, $d15, $d16, $d17, d18, $d19, $d20, d21, $d22, $d23, d24, $d25, $d26, $d27;
        java.awt.geom.CubicCurve2D$Double r0;

        r1 := @this: edu.mit.csail.sdg.alloy4graph.Curve;

        r0 := @parameter0: java.awt.geom.CubicCurve2D$Double;

        d2 := @parameter1: double;

        $d1 = r0.<java.awt.geom.CubicCurve2D$Double: double ctrly1>;

        $d0 = r0.<java.awt.geom.CubicCurve2D$Double: double y1>;

        $d3 = $d1 - $d0;

        $d5 = $d3 * d2;

        $d4 = r0.<java.awt.geom.CubicCurve2D$Double: double y1>;

        d6 = $d5 + $d4;

        $d8 = r0.<java.awt.geom.CubicCurve2D$Double: double ctrly2>;

        $d7 = r0.<java.awt.geom.CubicCurve2D$Double: double ctrly1>;

        $d9 = $d8 - $d7;

        $d11 = $d9 * d2;

        $d10 = r0.<java.awt.geom.CubicCurve2D$Double: double ctrly1>;

        d12 = $d11 + $d10;

        $d14 = r0.<java.awt.geom.CubicCurve2D$Double: double y2>;

        $d13 = r0.<java.awt.geom.CubicCurve2D$Double: double ctrly2>;

        $d15 = $d14 - $d13;

        $d17 = $d15 * d2;

        $d16 = r0.<java.awt.geom.CubicCurve2D$Double: double ctrly2>;

        d18 = $d17 + $d16;

        $d19 = d12 - d6;

        $d20 = $d19 * d2;

        d21 = $d20 + d6;

        $d22 = d18 - d12;

        $d23 = $d22 * d2;

        d24 = $d23 + d12;

        $d25 = d24 - d21;

        $d26 = $d25 * d2;

        $d27 = $d26 + d21;

        return $d27;
    }

    public static void divide(double, java.awt.geom.CubicCurve2D$Double, java.awt.geom.CubicCurve2D$Double, java.awt.geom.CubicCurve2D$Double)
    {
        java.awt.geom.CubicCurve2D$Double r0, r1, r2;
        double $d0, $d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72;

        d2 := @parameter0: double;

        r1 := @parameter1: java.awt.geom.CubicCurve2D$Double;

        r0 := @parameter2: java.awt.geom.CubicCurve2D$Double;

        r2 := @parameter3: java.awt.geom.CubicCurve2D$Double;

        $d0 = r1.<java.awt.geom.CubicCurve2D$Double: double x1>;

        r0.<java.awt.geom.CubicCurve2D$Double: double x1> = $d0;

        $d1 = r1.<java.awt.geom.CubicCurve2D$Double: double x2>;

        r2.<java.awt.geom.CubicCurve2D$Double: double x2> = $d1;

        $d4 = 1.0 - d2;

        $d3 = r1.<java.awt.geom.CubicCurve2D$Double: double x1>;

        $d7 = $d4 * $d3;

        $d5 = r1.<java.awt.geom.CubicCurve2D$Double: double ctrlx1>;

        $d6 = d2 * $d5;

        $d8 = $d7 + $d6;

        r0.<java.awt.geom.CubicCurve2D$Double: double ctrlx1> = $d8;

        $d10 = 1.0 - d2;

        $d9 = r1.<java.awt.geom.CubicCurve2D$Double: double ctrlx1>;

        $d13 = $d10 * $d9;

        $d11 = r1.<java.awt.geom.CubicCurve2D$Double: double ctrlx2>;

        $d12 = d2 * $d11;

        d14 = $d13 + $d12;

        $d16 = 1.0 - d2;

        $d15 = r1.<java.awt.geom.CubicCurve2D$Double: double ctrlx2>;

        $d19 = $d16 * $d15;

        $d17 = r1.<java.awt.geom.CubicCurve2D$Double: double x2>;

        $d18 = d2 * $d17;

        $d20 = $d19 + $d18;

        r2.<java.awt.geom.CubicCurve2D$Double: double ctrlx2> = $d20;

        $d22 = 1.0 - d2;

        $d21 = r0.<java.awt.geom.CubicCurve2D$Double: double ctrlx1>;

        $d24 = $d22 * $d21;

        $d23 = d2 * d14;

        $d25 = $d24 + $d23;

        r0.<java.awt.geom.CubicCurve2D$Double: double ctrlx2> = $d25;

        $d26 = 1.0 - d2;

        $d29 = $d26 * d14;

        $d27 = r2.<java.awt.geom.CubicCurve2D$Double: double ctrlx2>;

        $d28 = d2 * $d27;

        $d30 = $d29 + $d28;

        r2.<java.awt.geom.CubicCurve2D$Double: double ctrlx1> = $d30;

        $d32 = 1.0 - d2;

        $d31 = r0.<java.awt.geom.CubicCurve2D$Double: double ctrlx2>;

        $d35 = $d32 * $d31;

        $d33 = r2.<java.awt.geom.CubicCurve2D$Double: double ctrlx1>;

        $d34 = d2 * $d33;

        $d36 = $d35 + $d34;

        r0.<java.awt.geom.CubicCurve2D$Double: double x2> = $d36;

        r2.<java.awt.geom.CubicCurve2D$Double: double x1> = $d36;

        $d37 = r1.<java.awt.geom.CubicCurve2D$Double: double y1>;

        r0.<java.awt.geom.CubicCurve2D$Double: double y1> = $d37;

        $d38 = r1.<java.awt.geom.CubicCurve2D$Double: double y2>;

        r2.<java.awt.geom.CubicCurve2D$Double: double y2> = $d38;

        $d40 = 1.0 - d2;

        $d39 = r1.<java.awt.geom.CubicCurve2D$Double: double y1>;

        $d43 = $d40 * $d39;

        $d41 = r1.<java.awt.geom.CubicCurve2D$Double: double ctrly1>;

        $d42 = d2 * $d41;

        $d44 = $d43 + $d42;

        r0.<java.awt.geom.CubicCurve2D$Double: double ctrly1> = $d44;

        $d46 = 1.0 - d2;

        $d45 = r1.<java.awt.geom.CubicCurve2D$Double: double ctrly1>;

        $d49 = $d46 * $d45;

        $d47 = r1.<java.awt.geom.CubicCurve2D$Double: double ctrly2>;

        $d48 = d2 * $d47;

        d50 = $d49 + $d48;

        $d52 = 1.0 - d2;

        $d51 = r1.<java.awt.geom.CubicCurve2D$Double: double ctrly2>;

        $d55 = $d52 * $d51;

        $d53 = r1.<java.awt.geom.CubicCurve2D$Double: double y2>;

        $d54 = d2 * $d53;

        $d56 = $d55 + $d54;

        r2.<java.awt.geom.CubicCurve2D$Double: double ctrly2> = $d56;

        $d58 = 1.0 - d2;

        $d57 = r0.<java.awt.geom.CubicCurve2D$Double: double ctrly1>;

        $d60 = $d58 * $d57;

        $d59 = d2 * d50;

        $d61 = $d60 + $d59;

        r0.<java.awt.geom.CubicCurve2D$Double: double ctrly2> = $d61;

        $d62 = 1.0 - d2;

        $d65 = $d62 * d50;

        $d63 = r2.<java.awt.geom.CubicCurve2D$Double: double ctrly2>;

        $d64 = d2 * $d63;

        $d66 = $d65 + $d64;

        r2.<java.awt.geom.CubicCurve2D$Double: double ctrly1> = $d66;

        $d68 = 1.0 - d2;

        $d67 = r0.<java.awt.geom.CubicCurve2D$Double: double ctrly2>;

        $d71 = $d68 * $d67;

        $d69 = r2.<java.awt.geom.CubicCurve2D$Double: double ctrly1>;

        $d70 = d2 * $d69;

        $d72 = $d71 + $d70;

        r0.<java.awt.geom.CubicCurve2D$Double: double y2> = $d72;

        r2.<java.awt.geom.CubicCurve2D$Double: double y1> = $d72;

        return;
    }
}
