public class org.springframework.beans.PropertyBatchUpdateException extends org.springframework.beans.BeansException
{
    private org.springframework.beans.PropertyAccessException[] propertyAccessExceptions;

    public void <init>(org.springframework.beans.PropertyAccessException[])
    {
        org.springframework.beans.PropertyAccessException[] r1;
        org.springframework.beans.PropertyBatchUpdateException r0;

        r0 := @this: org.springframework.beans.PropertyBatchUpdateException;

        r1 := @parameter0: org.springframework.beans.PropertyAccessException[];

        specialinvoke r0.<org.springframework.beans.BeansException: void <init>(java.lang.String)>(null);

        staticinvoke <org.springframework.util.Assert: void notEmpty(java.lang.Object[],java.lang.String)>(r1, "At least 1 PropertyAccessException required");

        r0.<org.springframework.beans.PropertyBatchUpdateException: org.springframework.beans.PropertyAccessException[] propertyAccessExceptions> = r1;

        return;
    }

    public final int getExceptionCount()
    {
        int $i0;
        org.springframework.beans.PropertyAccessException[] $r1;
        org.springframework.beans.PropertyBatchUpdateException r0;

        r0 := @this: org.springframework.beans.PropertyBatchUpdateException;

        $r1 = r0.<org.springframework.beans.PropertyBatchUpdateException: org.springframework.beans.PropertyAccessException[] propertyAccessExceptions>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public final org.springframework.beans.PropertyAccessException[] getPropertyAccessExceptions()
    {
        org.springframework.beans.PropertyAccessException[] $r1;
        org.springframework.beans.PropertyBatchUpdateException r0;

        r0 := @this: org.springframework.beans.PropertyBatchUpdateException;

        $r1 = r0.<org.springframework.beans.PropertyBatchUpdateException: org.springframework.beans.PropertyAccessException[] propertyAccessExceptions>;

        return $r1;
    }

    public org.springframework.beans.PropertyAccessException getPropertyAccessException(java.lang.String)
    {
        org.springframework.beans.PropertyAccessException r2;
        org.springframework.beans.PropertyAccessException[] $r1;
        org.springframework.beans.PropertyBatchUpdateException r0;
        int i0, i1;
        java.lang.String r3, $r4;
        boolean $z0;

        r0 := @this: org.springframework.beans.PropertyBatchUpdateException;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.springframework.beans.PropertyBatchUpdateException: org.springframework.beans.PropertyAccessException[] propertyAccessExceptions>;

        i0 = lengthof $r1;

        i1 = 0;

        goto label3;

     label1:
        r2 = $r1[i1];

        $r4 = virtualinvoke r2.<org.springframework.beans.PropertyAccessException: java.lang.String getPropertyName()>();

        $z0 = staticinvoke <org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>(r3, $r4);

        if $z0 == 0 goto label2;

        return r2;

     label2:
        i1 = i1 + 1;

     label3:
        if i1 < i0 goto label1;

        return null;
    }

    public java.lang.String getMessage()
    {
        org.springframework.beans.PropertyAccessException $r3;
        org.springframework.beans.PropertyAccessException[] $r2, $r5, $r7;
        org.springframework.beans.PropertyBatchUpdateException r1;
        int $i0, $i1, i2, $i3;
        java.lang.StringBuilder $r0;
        java.lang.String $r4, $r6;

        r1 := @this: org.springframework.beans.PropertyBatchUpdateException;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed properties: ");

        i2 = 0;

        goto label3;

     label1:
        $r2 = r1.<org.springframework.beans.PropertyBatchUpdateException: org.springframework.beans.PropertyAccessException[] propertyAccessExceptions>;

        $r3 = $r2[i2];

        $r4 = virtualinvoke $r3.<org.springframework.beans.PropertyAccessException: java.lang.String getMessage()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5 = r1.<org.springframework.beans.PropertyBatchUpdateException: org.springframework.beans.PropertyAccessException[] propertyAccessExceptions>;

        $i0 = lengthof $r5;

        $i1 = $i0 - 1;

        if i2 >= $i1 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

     label2:
        i2 = i2 + 1;

     label3:
        $r7 = r1.<org.springframework.beans.PropertyBatchUpdateException: org.springframework.beans.PropertyAccessException[] propertyAccessExceptions>;

        $i3 = lengthof $r7;

        if i2 < $i3 goto label1;

        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public java.lang.String toString()
    {
        org.springframework.beans.PropertyAccessException[] $r6, $r10;
        org.springframework.beans.PropertyBatchUpdateException r1;
        int $i0, $i1, $i2, i3;
        java.lang.String $r3, $r12;
        org.springframework.beans.PropertyAccessException $r11;
        java.lang.StringBuilder $r0, $r4, $r5, $r7, $r8, $r9;
        java.lang.Class $r2;

        r1 := @this: org.springframework.beans.PropertyBatchUpdateException;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; nested PropertyAccessExceptions (");

        $i0 = virtualinvoke r1.<org.springframework.beans.PropertyBatchUpdateException: int getExceptionCount()>();

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") are:");

        i3 = 0;

        goto label2;

     label1:
        $r7 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PropertyAccessException ");

        $i2 = i3 + 1;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r10 = r1.<org.springframework.beans.PropertyBatchUpdateException: org.springframework.beans.PropertyAccessException[] propertyAccessExceptions>;

        $r11 = $r10[i3];

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        i3 = i3 + 1;

     label2:
        $r6 = r1.<org.springframework.beans.PropertyBatchUpdateException: org.springframework.beans.PropertyAccessException[] propertyAccessExceptions>;

        $i1 = lengthof $r6;

        if i3 < $i1 goto label1;

        $r12 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public void printStackTrace(java.io.PrintStream)
    {
        java.lang.Throwable $r17;
        org.springframework.beans.PropertyAccessException[] $r10, $r15;
        org.springframework.beans.PropertyBatchUpdateException r2;
        int $i0, $i1, $i2, i3;
        java.lang.String $r4, $r5, $r9, $r14;
        java.io.PrintStream r0;
        org.springframework.beans.PropertyAccessException $r16;
        java.lang.StringBuilder $r1, $r6, $r7, $r8, $r11, $r12, $r13;
        java.lang.Class $r3;

        r2 := @this: org.springframework.beans.PropertyBatchUpdateException;

        r0 := @parameter0: java.io.PrintStream;

        entermonitor r0;

     label1:
        $r1 = new java.lang.StringBuilder;

        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; nested PropertyAccessException details (");

        $i0 = virtualinvoke r2.<org.springframework.beans.PropertyBatchUpdateException: int getExceptionCount()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") are:");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>($r9);

        i3 = 0;

        goto label3;

     label2:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("PropertyAccessException ");

        $i2 = i3 + 1;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>($r14);

        $r15 = r2.<org.springframework.beans.PropertyBatchUpdateException: org.springframework.beans.PropertyAccessException[] propertyAccessExceptions>;

        $r16 = $r15[i3];

        virtualinvoke $r16.<org.springframework.beans.PropertyAccessException: void printStackTrace(java.io.PrintStream)>(r0);

        i3 = i3 + 1;

     label3:
        $r10 = r2.<org.springframework.beans.PropertyBatchUpdateException: org.springframework.beans.PropertyAccessException[] propertyAccessExceptions>;

        $i1 = lengthof $r10;

        if i3 < $i1 goto label2;

        exitmonitor r0;

     label4:
        goto label7;

     label5:
        $r17 := @caughtexception;

        exitmonitor r0;

     label6:
        throw $r17;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void printStackTrace(java.io.PrintWriter)
    {
        java.lang.Throwable $r17;
        org.springframework.beans.PropertyAccessException[] $r10, $r15;
        org.springframework.beans.PropertyBatchUpdateException r2;
        int $i0, $i1, $i2, i3;
        java.lang.String $r4, $r5, $r9, $r14;
        java.io.PrintWriter r0;
        org.springframework.beans.PropertyAccessException $r16;
        java.lang.StringBuilder $r1, $r6, $r7, $r8, $r11, $r12, $r13;
        java.lang.Class $r3;

        r2 := @this: org.springframework.beans.PropertyBatchUpdateException;

        r0 := @parameter0: java.io.PrintWriter;

        entermonitor r0;

     label1:
        $r1 = new java.lang.StringBuilder;

        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; nested PropertyAccessException details (");

        $i0 = virtualinvoke r2.<org.springframework.beans.PropertyBatchUpdateException: int getExceptionCount()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") are:");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        i3 = 0;

        goto label3;

     label2:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("PropertyAccessException ");

        $i2 = i3 + 1;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        $r15 = r2.<org.springframework.beans.PropertyBatchUpdateException: org.springframework.beans.PropertyAccessException[] propertyAccessExceptions>;

        $r16 = $r15[i3];

        virtualinvoke $r16.<org.springframework.beans.PropertyAccessException: void printStackTrace(java.io.PrintWriter)>(r0);

        i3 = i3 + 1;

     label3:
        $r10 = r2.<org.springframework.beans.PropertyBatchUpdateException: org.springframework.beans.PropertyAccessException[] propertyAccessExceptions>;

        $i1 = lengthof $r10;

        if i3 < $i1 goto label2;

        exitmonitor r0;

     label4:
        goto label7;

     label5:
        $r17 := @caughtexception;

        exitmonitor r0;

     label6:
        throw $r17;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean contains(java.lang.Class)
    {
        org.springframework.beans.PropertyAccessException r3;
        org.springframework.beans.PropertyAccessException[] $r2;
        org.springframework.beans.PropertyBatchUpdateException r1;
        int i0, i1;
        java.lang.Class r0;
        boolean $z0, $z1;

        r1 := @this: org.springframework.beans.PropertyBatchUpdateException;

        r0 := @parameter0: java.lang.Class;

        if r0 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r0.<java.lang.Class: boolean isInstance(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $r2 = r1.<org.springframework.beans.PropertyBatchUpdateException: org.springframework.beans.PropertyAccessException[] propertyAccessExceptions>;

        i0 = lengthof $r2;

        i1 = 0;

        goto label5;

     label3:
        r3 = $r2[i1];

        $z1 = virtualinvoke r3.<org.springframework.beans.PropertyAccessException: boolean contains(java.lang.Class)>(r0);

        if $z1 == 0 goto label4;

        return 1;

     label4:
        i1 = i1 + 1;

     label5:
        if i1 < i0 goto label3;

        return 0;
    }
}
