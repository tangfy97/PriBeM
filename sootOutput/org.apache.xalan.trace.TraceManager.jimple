public class org.apache.xalan.trace.TraceManager extends java.lang.Object
{
    private org.apache.xalan.transformer.TransformerImpl m_transformer;
    private java.util.Vector m_traceListeners;

    public void <init>(org.apache.xalan.transformer.TransformerImpl)
    {
        org.apache.xalan.trace.TraceManager r0;
        org.apache.xalan.transformer.TransformerImpl r1;

        r0 := @this: org.apache.xalan.trace.TraceManager;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xalan.trace.TraceManager: java.util.Vector m_traceListeners> = null;

        r0.<org.apache.xalan.trace.TraceManager: org.apache.xalan.transformer.TransformerImpl m_transformer> = r1;

        return;
    }

    public void addTraceListener(org.apache.xalan.trace.TraceListener) throws java.util.TooManyListenersException
    {
        org.apache.xalan.trace.TraceListener r2;
        java.util.Vector $r1, $r3, $r4;
        org.apache.xalan.trace.TraceManager r0;

        r0 := @this: org.apache.xalan.trace.TraceManager;

        r2 := @parameter0: org.apache.xalan.trace.TraceListener;

        <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG> = 1;

        $r1 = r0.<org.apache.xalan.trace.TraceManager: java.util.Vector m_traceListeners>;

        if null != $r1 goto label1;

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        r0.<org.apache.xalan.trace.TraceManager: java.util.Vector m_traceListeners> = $r4;

     label1:
        $r3 = r0.<org.apache.xalan.trace.TraceManager: java.util.Vector m_traceListeners>;

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>(r2);

        return;
    }

    public void removeTraceListener(org.apache.xalan.trace.TraceListener)
    {
        org.apache.xalan.trace.TraceListener r2;
        java.util.Vector $r1, $r3, $r4;
        int $i0;
        org.apache.xalan.trace.TraceManager r0;

        r0 := @this: org.apache.xalan.trace.TraceManager;

        r2 := @parameter0: org.apache.xalan.trace.TraceListener;

        $r1 = r0.<org.apache.xalan.trace.TraceManager: java.util.Vector m_traceListeners>;

        if null == $r1 goto label1;

        $r3 = r0.<org.apache.xalan.trace.TraceManager: java.util.Vector m_traceListeners>;

        virtualinvoke $r3.<java.util.Vector: boolean removeElement(java.lang.Object)>(r2);

        $r4 = r0.<org.apache.xalan.trace.TraceManager: java.util.Vector m_traceListeners>;

        $i0 = virtualinvoke $r4.<java.util.Vector: int size()>();

        if 0 != $i0 goto label1;

        r0.<org.apache.xalan.trace.TraceManager: java.util.Vector m_traceListeners> = null;

     label1:
        return;
    }

    public void fireGenerateEvent(org.apache.xalan.trace.GenerateEvent)
    {
        org.apache.xalan.trace.TraceListener r5;
        org.apache.xalan.trace.GenerateEvent r6;
        org.apache.xalan.trace.TraceManager r0;
        java.util.Vector $r1, $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;

        r0 := @this: org.apache.xalan.trace.TraceManager;

        r6 := @parameter0: org.apache.xalan.trace.GenerateEvent;

        $r1 = r0.<org.apache.xalan.trace.TraceManager: java.util.Vector m_traceListeners>;

        if null == $r1 goto label3;

        $r2 = r0.<org.apache.xalan.trace.TraceManager: java.util.Vector m_traceListeners>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        i1 = 0;

        goto label2;

     label1:
        $r3 = r0.<org.apache.xalan.trace.TraceManager: java.util.Vector m_traceListeners>;

        $r4 = virtualinvoke $r3.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r5 = (org.apache.xalan.trace.TraceListener) $r4;

        interfaceinvoke r5.<org.apache.xalan.trace.TraceListener: void generated(org.apache.xalan.trace.GenerateEvent)>(r6);

        i1 = i1 + 1;

     label2:
        if i1 < $i0 goto label1;

     label3:
        return;
    }

    public boolean hasTraceListeners()
    {
        java.util.Vector $r1;
        org.apache.xalan.trace.TraceManager r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.trace.TraceManager;

        $r1 = r0.<org.apache.xalan.trace.TraceManager: java.util.Vector m_traceListeners>;

        if null == $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void fireTraceEvent(org.apache.xalan.templates.ElemTemplateElement)
    {
        org.apache.xml.utils.QName $r10;
        org.apache.xalan.templates.ElemTemplateElement r11;
        org.apache.xalan.trace.TraceManager r0;
        org.apache.xpath.XPathContext $r2, $r4;
        org.w3c.dom.Node $r6;
        int $i0;
        org.apache.xml.dtm.DTM $r5;
        org.apache.xalan.trace.TracerEvent $r7;
        boolean $z0;
        org.apache.xalan.transformer.TransformerImpl $r1, $r3, $r8, $r9;

        r0 := @this: org.apache.xalan.trace.TraceManager;

        r11 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        $z0 = virtualinvoke r0.<org.apache.xalan.trace.TraceManager: boolean hasTraceListeners()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.xalan.trace.TraceManager: org.apache.xalan.transformer.TransformerImpl m_transformer>;

        $r2 = virtualinvoke $r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        $i0 = virtualinvoke $r2.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        $r3 = r0.<org.apache.xalan.trace.TraceManager: org.apache.xalan.transformer.TransformerImpl m_transformer>;

        $r4 = virtualinvoke $r3.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        $r5 = virtualinvoke $r4.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>($i0);

        $r6 = interfaceinvoke $r5.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>($i0);

        $r7 = new org.apache.xalan.trace.TracerEvent;

        $r9 = r0.<org.apache.xalan.trace.TraceManager: org.apache.xalan.transformer.TransformerImpl m_transformer>;

        $r8 = r0.<org.apache.xalan.trace.TraceManager: org.apache.xalan.transformer.TransformerImpl m_transformer>;

        $r10 = virtualinvoke $r8.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.QName getMode()>();

        specialinvoke $r7.<org.apache.xalan.trace.TracerEvent: void <init>(org.apache.xalan.transformer.TransformerImpl,org.w3c.dom.Node,org.apache.xml.utils.QName,org.apache.xalan.templates.ElemTemplateElement)>($r9, $r6, $r10, r11);

        virtualinvoke r0.<org.apache.xalan.trace.TraceManager: void fireTraceEvent(org.apache.xalan.trace.TracerEvent)>($r7);

     label1:
        return;
    }

    public void fireTraceEndEvent(org.apache.xalan.templates.ElemTemplateElement)
    {
        org.apache.xml.utils.QName $r10;
        org.apache.xalan.templates.ElemTemplateElement r11;
        org.apache.xalan.trace.TraceManager r0;
        org.apache.xpath.XPathContext $r2, $r4;
        org.w3c.dom.Node $r6;
        int $i0;
        org.apache.xml.dtm.DTM $r5;
        org.apache.xalan.trace.TracerEvent $r7;
        boolean $z0;
        org.apache.xalan.transformer.TransformerImpl $r1, $r3, $r8, $r9;

        r0 := @this: org.apache.xalan.trace.TraceManager;

        r11 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        $z0 = virtualinvoke r0.<org.apache.xalan.trace.TraceManager: boolean hasTraceListeners()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.xalan.trace.TraceManager: org.apache.xalan.transformer.TransformerImpl m_transformer>;

        $r2 = virtualinvoke $r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        $i0 = virtualinvoke $r2.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        $r3 = r0.<org.apache.xalan.trace.TraceManager: org.apache.xalan.transformer.TransformerImpl m_transformer>;

        $r4 = virtualinvoke $r3.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        $r5 = virtualinvoke $r4.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>($i0);

        $r6 = interfaceinvoke $r5.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>($i0);

        $r7 = new org.apache.xalan.trace.TracerEvent;

        $r9 = r0.<org.apache.xalan.trace.TraceManager: org.apache.xalan.transformer.TransformerImpl m_transformer>;

        $r8 = r0.<org.apache.xalan.trace.TraceManager: org.apache.xalan.transformer.TransformerImpl m_transformer>;

        $r10 = virtualinvoke $r8.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.QName getMode()>();

        specialinvoke $r7.<org.apache.xalan.trace.TracerEvent: void <init>(org.apache.xalan.transformer.TransformerImpl,org.w3c.dom.Node,org.apache.xml.utils.QName,org.apache.xalan.templates.ElemTemplateElement)>($r9, $r6, $r10, r11);

        virtualinvoke r0.<org.apache.xalan.trace.TraceManager: void fireTraceEndEvent(org.apache.xalan.trace.TracerEvent)>($r7);

     label1:
        return;
    }

    public void fireTraceEndEvent(org.apache.xalan.trace.TracerEvent)
    {
        org.apache.xalan.trace.TraceListener r4;
        org.apache.xalan.trace.TraceListenerEx2 $r6;
        org.apache.xalan.trace.TraceManager r0;
        java.util.Vector $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        org.apache.xalan.trace.TracerEvent r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.xalan.trace.TraceManager;

        r5 := @parameter0: org.apache.xalan.trace.TracerEvent;

        $z0 = virtualinvoke r0.<org.apache.xalan.trace.TraceManager: boolean hasTraceListeners()>();

        if $z0 == 0 goto label4;

        $r1 = r0.<org.apache.xalan.trace.TraceManager: java.util.Vector m_traceListeners>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        i1 = 0;

        goto label3;

     label1:
        $r2 = r0.<org.apache.xalan.trace.TraceManager: java.util.Vector m_traceListeners>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r4 = (org.apache.xalan.trace.TraceListener) $r3;

        $z1 = r4 instanceof org.apache.xalan.trace.TraceListenerEx2;

        if $z1 == 0 goto label2;

        $r6 = (org.apache.xalan.trace.TraceListenerEx2) r4;

        interfaceinvoke $r6.<org.apache.xalan.trace.TraceListenerEx2: void traceEnd(org.apache.xalan.trace.TracerEvent)>(r5);

     label2:
        i1 = i1 + 1;

     label3:
        if i1 < $i0 goto label1;

     label4:
        return;
    }

    public void fireTraceEvent(org.apache.xalan.trace.TracerEvent)
    {
        org.apache.xalan.trace.TraceListener r4;
        org.apache.xalan.trace.TraceManager r0;
        java.util.Vector $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        org.apache.xalan.trace.TracerEvent r5;
        boolean $z0;

        r0 := @this: org.apache.xalan.trace.TraceManager;

        r5 := @parameter0: org.apache.xalan.trace.TracerEvent;

        $z0 = virtualinvoke r0.<org.apache.xalan.trace.TraceManager: boolean hasTraceListeners()>();

        if $z0 == 0 goto label3;

        $r1 = r0.<org.apache.xalan.trace.TraceManager: java.util.Vector m_traceListeners>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        i1 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xalan.trace.TraceManager: java.util.Vector m_traceListeners>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r4 = (org.apache.xalan.trace.TraceListener) $r3;

        interfaceinvoke r4.<org.apache.xalan.trace.TraceListener: void trace(org.apache.xalan.trace.TracerEvent)>(r5);

        i1 = i1 + 1;

     label2:
        if i1 < $i0 goto label1;

     label3:
        return;
    }

    public void fireSelectedEvent(int, org.apache.xalan.templates.ElemTemplateElement, java.lang.String, org.apache.xpath.XPath, org.apache.xpath.objects.XObject) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemTemplateElement r6;
        org.apache.xpath.XPath r8;
        org.apache.xalan.trace.TraceManager r0;
        org.apache.xpath.XPathContext $r2;
        org.w3c.dom.Node $r4;
        int i0;
        org.apache.xml.dtm.DTM $r3;
        org.apache.xpath.objects.XObject r9;
        java.lang.String r7;
        org.apache.xalan.trace.SelectionEvent $r5;
        boolean $z0;
        org.apache.xalan.transformer.TransformerImpl $r1, $r10;

        r0 := @this: org.apache.xalan.trace.TraceManager;

        i0 := @parameter0: int;

        r6 := @parameter1: org.apache.xalan.templates.ElemTemplateElement;

        r7 := @parameter2: java.lang.String;

        r8 := @parameter3: org.apache.xpath.XPath;

        r9 := @parameter4: org.apache.xpath.objects.XObject;

        $z0 = virtualinvoke r0.<org.apache.xalan.trace.TraceManager: boolean hasTraceListeners()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.xalan.trace.TraceManager: org.apache.xalan.transformer.TransformerImpl m_transformer>;

        $r2 = virtualinvoke $r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        $r3 = virtualinvoke $r2.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i0);

        $r4 = interfaceinvoke $r3.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>(i0);

        $r5 = new org.apache.xalan.trace.SelectionEvent;

        $r10 = r0.<org.apache.xalan.trace.TraceManager: org.apache.xalan.transformer.TransformerImpl m_transformer>;

        specialinvoke $r5.<org.apache.xalan.trace.SelectionEvent: void <init>(org.apache.xalan.transformer.TransformerImpl,org.w3c.dom.Node,org.apache.xalan.templates.ElemTemplateElement,java.lang.String,org.apache.xpath.XPath,org.apache.xpath.objects.XObject)>($r10, $r4, r6, r7, r8, r9);

        virtualinvoke r0.<org.apache.xalan.trace.TraceManager: void fireSelectedEvent(org.apache.xalan.trace.SelectionEvent)>($r5);

     label1:
        return;
    }

    public void fireSelectedEndEvent(int, org.apache.xalan.templates.ElemTemplateElement, java.lang.String, org.apache.xpath.XPath, org.apache.xpath.objects.XObject) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemTemplateElement r6;
        org.apache.xpath.XPath r8;
        org.apache.xalan.trace.EndSelectionEvent $r5;
        org.apache.xalan.trace.TraceManager r0;
        org.apache.xpath.XPathContext $r2;
        org.w3c.dom.Node $r4;
        int i0;
        org.apache.xml.dtm.DTM $r3;
        org.apache.xpath.objects.XObject r9;
        java.lang.String r7;
        boolean $z0;
        org.apache.xalan.transformer.TransformerImpl $r1, $r10;

        r0 := @this: org.apache.xalan.trace.TraceManager;

        i0 := @parameter0: int;

        r6 := @parameter1: org.apache.xalan.templates.ElemTemplateElement;

        r7 := @parameter2: java.lang.String;

        r8 := @parameter3: org.apache.xpath.XPath;

        r9 := @parameter4: org.apache.xpath.objects.XObject;

        $z0 = virtualinvoke r0.<org.apache.xalan.trace.TraceManager: boolean hasTraceListeners()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<org.apache.xalan.trace.TraceManager: org.apache.xalan.transformer.TransformerImpl m_transformer>;

        $r2 = virtualinvoke $r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        $r3 = virtualinvoke $r2.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i0);

        $r4 = interfaceinvoke $r3.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>(i0);

        $r5 = new org.apache.xalan.trace.EndSelectionEvent;

        $r10 = r0.<org.apache.xalan.trace.TraceManager: org.apache.xalan.transformer.TransformerImpl m_transformer>;

        specialinvoke $r5.<org.apache.xalan.trace.EndSelectionEvent: void <init>(org.apache.xalan.transformer.TransformerImpl,org.w3c.dom.Node,org.apache.xalan.templates.ElemTemplateElement,java.lang.String,org.apache.xpath.XPath,org.apache.xpath.objects.XObject)>($r10, $r4, r6, r7, r8, r9);

        virtualinvoke r0.<org.apache.xalan.trace.TraceManager: void fireSelectedEndEvent(org.apache.xalan.trace.EndSelectionEvent)>($r5);

     label1:
        return;
    }

    public void fireSelectedEndEvent(org.apache.xalan.trace.EndSelectionEvent) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.trace.TraceListener r4;
        org.apache.xalan.trace.EndSelectionEvent r5;
        org.apache.xalan.trace.TraceListenerEx $r6;
        org.apache.xalan.trace.TraceManager r0;
        java.util.Vector $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.xalan.trace.TraceManager;

        r5 := @parameter0: org.apache.xalan.trace.EndSelectionEvent;

        $z0 = virtualinvoke r0.<org.apache.xalan.trace.TraceManager: boolean hasTraceListeners()>();

        if $z0 == 0 goto label4;

        $r1 = r0.<org.apache.xalan.trace.TraceManager: java.util.Vector m_traceListeners>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        i1 = 0;

        goto label3;

     label1:
        $r2 = r0.<org.apache.xalan.trace.TraceManager: java.util.Vector m_traceListeners>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r4 = (org.apache.xalan.trace.TraceListener) $r3;

        $z1 = r4 instanceof org.apache.xalan.trace.TraceListenerEx;

        if $z1 == 0 goto label2;

        $r6 = (org.apache.xalan.trace.TraceListenerEx) r4;

        interfaceinvoke $r6.<org.apache.xalan.trace.TraceListenerEx: void selectEnd(org.apache.xalan.trace.EndSelectionEvent)>(r5);

     label2:
        i1 = i1 + 1;

     label3:
        if i1 < $i0 goto label1;

     label4:
        return;
    }

    public void fireSelectedEvent(org.apache.xalan.trace.SelectionEvent) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.trace.TraceListener r4;
        org.apache.xalan.trace.TraceManager r0;
        java.util.Vector $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        org.apache.xalan.trace.SelectionEvent r5;
        boolean $z0;

        r0 := @this: org.apache.xalan.trace.TraceManager;

        r5 := @parameter0: org.apache.xalan.trace.SelectionEvent;

        $z0 = virtualinvoke r0.<org.apache.xalan.trace.TraceManager: boolean hasTraceListeners()>();

        if $z0 == 0 goto label3;

        $r1 = r0.<org.apache.xalan.trace.TraceManager: java.util.Vector m_traceListeners>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        i1 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xalan.trace.TraceManager: java.util.Vector m_traceListeners>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r4 = (org.apache.xalan.trace.TraceListener) $r3;

        interfaceinvoke r4.<org.apache.xalan.trace.TraceListener: void selected(org.apache.xalan.trace.SelectionEvent)>(r5);

        i1 = i1 + 1;

     label2:
        if i1 < $i0 goto label1;

     label3:
        return;
    }

    public void fireExtensionEndEvent(java.lang.reflect.Method, java.lang.Object, java.lang.Object[])
    {
        org.apache.xalan.trace.TraceListener r9;
        java.lang.Object[] r4;
        org.apache.xalan.trace.ExtensionEvent $r0;
        org.apache.xalan.trace.TraceManager r1;
        org.apache.xalan.trace.TraceListenerEx3 $r10;
        java.util.Vector $r6, $r7;
        int $i0, i1;
        java.lang.Object r3, $r8;
        java.lang.reflect.Method r2;
        org.apache.xalan.transformer.TransformerImpl $r5;
        boolean $z0, $z1;

        r1 := @this: org.apache.xalan.trace.TraceManager;

        r2 := @parameter0: java.lang.reflect.Method;

        r3 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.lang.Object[];

        $r0 = new org.apache.xalan.trace.ExtensionEvent;

        $r5 = r1.<org.apache.xalan.trace.TraceManager: org.apache.xalan.transformer.TransformerImpl m_transformer>;

        specialinvoke $r0.<org.apache.xalan.trace.ExtensionEvent: void <init>(org.apache.xalan.transformer.TransformerImpl,java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>($r5, r2, r3, r4);

        $z0 = virtualinvoke r1.<org.apache.xalan.trace.TraceManager: boolean hasTraceListeners()>();

        if $z0 == 0 goto label4;

        $r6 = r1.<org.apache.xalan.trace.TraceManager: java.util.Vector m_traceListeners>;

        $i0 = virtualinvoke $r6.<java.util.Vector: int size()>();

        i1 = 0;

        goto label3;

     label1:
        $r7 = r1.<org.apache.xalan.trace.TraceManager: java.util.Vector m_traceListeners>;

        $r8 = virtualinvoke $r7.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r9 = (org.apache.xalan.trace.TraceListener) $r8;

        $z1 = r9 instanceof org.apache.xalan.trace.TraceListenerEx3;

        if $z1 == 0 goto label2;

        $r10 = (org.apache.xalan.trace.TraceListenerEx3) r9;

        interfaceinvoke $r10.<org.apache.xalan.trace.TraceListenerEx3: void extensionEnd(org.apache.xalan.trace.ExtensionEvent)>($r0);

     label2:
        i1 = i1 + 1;

     label3:
        if i1 < $i0 goto label1;

     label4:
        return;
    }

    public void fireExtensionEvent(java.lang.reflect.Method, java.lang.Object, java.lang.Object[])
    {
        org.apache.xalan.trace.TraceListener r9;
        java.lang.Object[] r4;
        org.apache.xalan.trace.ExtensionEvent $r0;
        org.apache.xalan.trace.TraceManager r1;
        org.apache.xalan.trace.TraceListenerEx3 $r10;
        java.util.Vector $r6, $r7;
        int $i0, i1;
        java.lang.Object r3, $r8;
        java.lang.reflect.Method r2;
        org.apache.xalan.transformer.TransformerImpl $r5;
        boolean $z0, $z1;

        r1 := @this: org.apache.xalan.trace.TraceManager;

        r2 := @parameter0: java.lang.reflect.Method;

        r3 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.lang.Object[];

        $r0 = new org.apache.xalan.trace.ExtensionEvent;

        $r5 = r1.<org.apache.xalan.trace.TraceManager: org.apache.xalan.transformer.TransformerImpl m_transformer>;

        specialinvoke $r0.<org.apache.xalan.trace.ExtensionEvent: void <init>(org.apache.xalan.transformer.TransformerImpl,java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>($r5, r2, r3, r4);

        $z0 = virtualinvoke r1.<org.apache.xalan.trace.TraceManager: boolean hasTraceListeners()>();

        if $z0 == 0 goto label4;

        $r6 = r1.<org.apache.xalan.trace.TraceManager: java.util.Vector m_traceListeners>;

        $i0 = virtualinvoke $r6.<java.util.Vector: int size()>();

        i1 = 0;

        goto label3;

     label1:
        $r7 = r1.<org.apache.xalan.trace.TraceManager: java.util.Vector m_traceListeners>;

        $r8 = virtualinvoke $r7.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r9 = (org.apache.xalan.trace.TraceListener) $r8;

        $z1 = r9 instanceof org.apache.xalan.trace.TraceListenerEx3;

        if $z1 == 0 goto label2;

        $r10 = (org.apache.xalan.trace.TraceListenerEx3) r9;

        interfaceinvoke $r10.<org.apache.xalan.trace.TraceListenerEx3: void extension(org.apache.xalan.trace.ExtensionEvent)>($r0);

     label2:
        i1 = i1 + 1;

     label3:
        if i1 < $i0 goto label1;

     label4:
        return;
    }

    public void fireExtensionEndEvent(org.apache.xalan.trace.ExtensionEvent)
    {
        org.apache.xalan.trace.TraceListener r4;
        org.apache.xalan.trace.ExtensionEvent r5;
        org.apache.xalan.trace.TraceManager r0;
        org.apache.xalan.trace.TraceListenerEx3 $r6;
        java.util.Vector $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.xalan.trace.TraceManager;

        r5 := @parameter0: org.apache.xalan.trace.ExtensionEvent;

        $z0 = virtualinvoke r0.<org.apache.xalan.trace.TraceManager: boolean hasTraceListeners()>();

        if $z0 == 0 goto label4;

        $r1 = r0.<org.apache.xalan.trace.TraceManager: java.util.Vector m_traceListeners>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        i1 = 0;

        goto label3;

     label1:
        $r2 = r0.<org.apache.xalan.trace.TraceManager: java.util.Vector m_traceListeners>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r4 = (org.apache.xalan.trace.TraceListener) $r3;

        $z1 = r4 instanceof org.apache.xalan.trace.TraceListenerEx3;

        if $z1 == 0 goto label2;

        $r6 = (org.apache.xalan.trace.TraceListenerEx3) r4;

        interfaceinvoke $r6.<org.apache.xalan.trace.TraceListenerEx3: void extensionEnd(org.apache.xalan.trace.ExtensionEvent)>(r5);

     label2:
        i1 = i1 + 1;

     label3:
        if i1 < $i0 goto label1;

     label4:
        return;
    }

    public void fireExtensionEvent(org.apache.xalan.trace.ExtensionEvent)
    {
        org.apache.xalan.trace.TraceListener r4;
        org.apache.xalan.trace.ExtensionEvent r5;
        org.apache.xalan.trace.TraceManager r0;
        org.apache.xalan.trace.TraceListenerEx3 $r6;
        java.util.Vector $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.xalan.trace.TraceManager;

        r5 := @parameter0: org.apache.xalan.trace.ExtensionEvent;

        $z0 = virtualinvoke r0.<org.apache.xalan.trace.TraceManager: boolean hasTraceListeners()>();

        if $z0 == 0 goto label4;

        $r1 = r0.<org.apache.xalan.trace.TraceManager: java.util.Vector m_traceListeners>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        i1 = 0;

        goto label3;

     label1:
        $r2 = r0.<org.apache.xalan.trace.TraceManager: java.util.Vector m_traceListeners>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r4 = (org.apache.xalan.trace.TraceListener) $r3;

        $z1 = r4 instanceof org.apache.xalan.trace.TraceListenerEx3;

        if $z1 == 0 goto label2;

        $r6 = (org.apache.xalan.trace.TraceListenerEx3) r4;

        interfaceinvoke $r6.<org.apache.xalan.trace.TraceListenerEx3: void extension(org.apache.xalan.trace.ExtensionEvent)>(r5);

     label2:
        i1 = i1 + 1;

     label3:
        if i1 < $i0 goto label1;

     label4:
        return;
    }
}
