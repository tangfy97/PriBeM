public abstract class org.wiztools.restclient.ui.EscapableDialog extends javax.swing.JDialog implements java.awt.event.KeyListener, java.awt.event.ContainerListener
{
    private final java.awt.Frame _frame;

    public void <init>(java.awt.Frame, boolean)
    {
        org.wiztools.restclient.ui.EscapableDialog$1 $r2;
        org.wiztools.restclient.ui.EscapableDialog r0;
        java.awt.Frame r1;
        boolean z0;

        r0 := @this: org.wiztools.restclient.ui.EscapableDialog;

        r1 := @parameter0: java.awt.Frame;

        z0 := @parameter1: boolean;

        specialinvoke r0.<javax.swing.JDialog: void <init>(java.awt.Frame,boolean)>(r1, z0);

        r0.<org.wiztools.restclient.ui.EscapableDialog: java.awt.Frame _frame> = r1;

        specialinvoke r0.<org.wiztools.restclient.ui.EscapableDialog: void registerKeyAction(java.awt.Component)>(r0);

        $r2 = new org.wiztools.restclient.ui.EscapableDialog$1;

        specialinvoke $r2.<org.wiztools.restclient.ui.EscapableDialog$1: void <init>(org.wiztools.restclient.ui.EscapableDialog)>(r0);

        virtualinvoke r0.<org.wiztools.restclient.ui.EscapableDialog: void addWindowListener(java.awt.event.WindowListener)>($r2);

        return;
    }

    public abstract void doEscape(java.awt.AWTEvent);

    public void keyPressed(java.awt.event.KeyEvent)
    {
        int $i0;
        org.wiztools.restclient.ui.EscapableDialog r1;
        java.awt.event.KeyEvent r0;

        r1 := @this: org.wiztools.restclient.ui.EscapableDialog;

        r0 := @parameter0: java.awt.event.KeyEvent;

        $i0 = virtualinvoke r0.<java.awt.event.KeyEvent: int getKeyCode()>();

        if $i0 != 27 goto label1;

        virtualinvoke r1.<org.wiztools.restclient.ui.EscapableDialog: void doEscape(java.awt.AWTEvent)>(r0);

     label1:
        return;
    }

    public void keyReleased(java.awt.event.KeyEvent)
    {
        org.wiztools.restclient.ui.EscapableDialog r0;
        java.awt.event.KeyEvent r1;

        r0 := @this: org.wiztools.restclient.ui.EscapableDialog;

        r1 := @parameter0: java.awt.event.KeyEvent;

        return;
    }

    public void keyTyped(java.awt.event.KeyEvent)
    {
        org.wiztools.restclient.ui.EscapableDialog r0;
        java.awt.event.KeyEvent r1;

        r0 := @this: org.wiztools.restclient.ui.EscapableDialog;

        r1 := @parameter0: java.awt.event.KeyEvent;

        return;
    }

    public void componentAdded(java.awt.event.ContainerEvent)
    {
        org.wiztools.restclient.ui.EscapableDialog r0;
        java.awt.event.ContainerEvent r1;
        java.awt.Component $r2;

        r0 := @this: org.wiztools.restclient.ui.EscapableDialog;

        r1 := @parameter0: java.awt.event.ContainerEvent;

        $r2 = virtualinvoke r1.<java.awt.event.ContainerEvent: java.awt.Component getChild()>();

        specialinvoke r0.<org.wiztools.restclient.ui.EscapableDialog: void registerKeyAction(java.awt.Component)>($r2);

        return;
    }

    public void componentRemoved(java.awt.event.ContainerEvent)
    {
        org.wiztools.restclient.ui.EscapableDialog r0;
        java.awt.event.ContainerEvent r1;
        java.awt.Component $r2;

        r0 := @this: org.wiztools.restclient.ui.EscapableDialog;

        r1 := @parameter0: java.awt.event.ContainerEvent;

        $r2 = virtualinvoke r1.<java.awt.event.ContainerEvent: java.awt.Component getChild()>();

        specialinvoke r0.<org.wiztools.restclient.ui.EscapableDialog: void registerKeyAction(java.awt.Component)>($r2);

        return;
    }

    private void registerKeyAction(java.awt.Component)
    {
        org.wiztools.restclient.ui.EscapableDialog r2;
        java.awt.Component r0, $r4;
        java.awt.Component[] $r3;
        int $i0, i1;
        java.awt.Container r1;
        boolean $z0, $z1;

        r2 := @this: org.wiztools.restclient.ui.EscapableDialog;

        r0 := @parameter0: java.awt.Component;

        $z0 = r0 instanceof org.wiztools.restclient.ui.EscapableDialog;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<java.awt.Component: void removeKeyListener(java.awt.event.KeyListener)>(r2);

        virtualinvoke r0.<java.awt.Component: void addKeyListener(java.awt.event.KeyListener)>(r2);

     label1:
        $z1 = r0 instanceof java.awt.Container;

        if $z1 == 0 goto label3;

        r1 = (java.awt.Container) r0;

        virtualinvoke r1.<java.awt.Container: void removeContainerListener(java.awt.event.ContainerListener)>(r2);

        virtualinvoke r1.<java.awt.Container: void addContainerListener(java.awt.event.ContainerListener)>(r2);

        $r3 = virtualinvoke r1.<java.awt.Container: java.awt.Component[] getComponents()>();

        i1 = 0;

     label2:
        $i0 = lengthof $r3;

        if i1 >= $i0 goto label3;

        $r4 = $r3[i1];

        specialinvoke r2.<org.wiztools.restclient.ui.EscapableDialog: void registerKeyAction(java.awt.Component)>($r4);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    public void setVisible(boolean)
    {
        org.wiztools.restclient.ui.EscapableDialog r0;
        java.awt.Frame $r1;
        boolean z0;

        r0 := @this: org.wiztools.restclient.ui.EscapableDialog;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r1 = r0.<org.wiztools.restclient.ui.EscapableDialog: java.awt.Frame _frame>;

        virtualinvoke r0.<org.wiztools.restclient.ui.EscapableDialog: void setLocationRelativeTo(java.awt.Component)>($r1);

     label1:
        specialinvoke r0.<javax.swing.JDialog: void setVisible(boolean)>(z0);

        return;
    }
}
