class com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$3 extends com.sun.xml.bind.v2.schemagen.Tree$Term
{
    final javax.xml.namespace.QName val$ename;
    final com.sun.xml.bind.v2.model.core.ElementPropertyInfo val$ep;
    final com.sun.xml.bind.v2.schemagen.Tree val$choice;
    final com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace this$1;

    void <init>(com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace, javax.xml.namespace.QName, com.sun.xml.bind.v2.model.core.ElementPropertyInfo, com.sun.xml.bind.v2.schemagen.Tree)
    {
        com.sun.xml.bind.v2.model.core.ElementPropertyInfo r3;
        javax.xml.namespace.QName r2;
        com.sun.xml.bind.v2.schemagen.Tree r4;
        com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$3 r0;
        com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace r1;

        r0 := @this: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$3;

        r1 := @parameter0: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace;

        r2 := @parameter1: javax.xml.namespace.QName;

        r3 := @parameter2: com.sun.xml.bind.v2.model.core.ElementPropertyInfo;

        r4 := @parameter3: com.sun.xml.bind.v2.schemagen.Tree;

        r0.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$3: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace this$1> = r1;

        r0.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$3: javax.xml.namespace.QName val$ename> = r2;

        r0.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$3: com.sun.xml.bind.v2.model.core.ElementPropertyInfo val$ep> = r3;

        r0.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$3: com.sun.xml.bind.v2.schemagen.Tree val$choice> = r4;

        specialinvoke r0.<com.sun.xml.bind.v2.schemagen.Tree$Term: void <init>()>();

        return;
    }

    protected void write(com.sun.xml.bind.v2.schemagen.xmlschema.ContentModelContainer, boolean, boolean)
    {
        com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement $r1;
        int $i0;
        java.lang.String $r4, $r6, $r15, $r17, $r20, $r22;
        com.sun.xml.bind.v2.schemagen.Form $r8;
        boolean $z0, $z1, z2, $z3, z4, $z5;
        com.sun.xml.bind.v2.model.core.ElementPropertyInfo $r10, $r11;
        com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$3 r2;
        com.sun.xml.bind.v2.schemagen.xmlschema.ComplexType $r12;
        com.sun.xml.bind.v2.schemagen.xmlschema.ContentModelContainer r0;
        javax.xml.namespace.QName $r3, $r5, $r9, $r14, $r18, $r19, $r21;
        com.sun.xml.bind.v2.schemagen.Tree $r13;
        com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace $r7, $r16;

        r2 := @this: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$3;

        r0 := @parameter0: com.sun.xml.bind.v2.schemagen.xmlschema.ContentModelContainer;

        z4 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        $r1 = interfaceinvoke r0.<com.sun.xml.bind.v2.schemagen.xmlschema.ContentModelContainer: com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement element()>();

        $r3 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$3: javax.xml.namespace.QName val$ename>;

        $r4 = virtualinvoke $r3.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r14 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$3: javax.xml.namespace.QName val$ename>;

        $r15 = virtualinvoke $r14.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r16 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$3: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace this$1>;

        $r17 = $r16.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace: java.lang.String uri>;

        $z3 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z3 != 0 goto label1;

        $r18 = new javax.xml.namespace.QName;

        $r19 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$3: javax.xml.namespace.QName val$ename>;

        $r20 = virtualinvoke $r19.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r21 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$3: javax.xml.namespace.QName val$ename>;

        $r22 = virtualinvoke $r21.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke $r18.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r20, $r22);

        interfaceinvoke $r1.<com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement: com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement ref(javax.xml.namespace.QName)>($r18);

        return;

     label1:
        $r5 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$3: javax.xml.namespace.QName val$ename>;

        $r6 = virtualinvoke $r5.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        interfaceinvoke $r1.<com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement: com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement name(java.lang.String)>($r6);

        $r7 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$3: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace this$1>;

        $r8 = staticinvoke <com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace: com.sun.xml.bind.v2.schemagen.Form access$1900(com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace)>($r7);

        $r9 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$3: javax.xml.namespace.QName val$ename>;

        virtualinvoke $r8.<com.sun.xml.bind.v2.schemagen.Form: void writeForm(com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement,javax.xml.namespace.QName)>($r1, $r9);

        $r10 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$3: com.sun.xml.bind.v2.model.core.ElementPropertyInfo val$ep>;

        $z0 = interfaceinvoke $r10.<com.sun.xml.bind.v2.model.core.ElementPropertyInfo: boolean isCollectionNillable()>();

        if $z0 == 0 goto label2;

        interfaceinvoke $r1.<com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement: com.sun.xml.bind.v2.schemagen.xmlschema.Element nillable(boolean)>(1);

     label2:
        $r11 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$3: com.sun.xml.bind.v2.model.core.ElementPropertyInfo val$ep>;

        $z1 = interfaceinvoke $r11.<com.sun.xml.bind.v2.model.core.ElementPropertyInfo: boolean isCollectionRequired()>();

        if $z1 != 0 goto label3;

        $z5 = 1;

        goto label4;

     label3:
        $z5 = 0;

     label4:
        virtualinvoke r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$3: void writeOccurs(com.sun.xml.bind.v2.schemagen.xmlschema.Occurs,boolean,boolean)>($r1, $z5, z2);

        $r12 = interfaceinvoke $r1.<com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement: com.sun.xml.bind.v2.schemagen.xmlschema.ComplexType complexType()>();

        $r13 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$3: com.sun.xml.bind.v2.schemagen.Tree val$choice>;

        virtualinvoke $r13.<com.sun.xml.bind.v2.schemagen.Tree: void write(com.sun.xml.bind.v2.schemagen.xmlschema.TypeDefParticle)>($r12);

        return;
    }
}
