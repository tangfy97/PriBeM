public class org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage extends java.lang.Object
{
    private static final org.apache.commons.logging.Log LOG;
    private org.apache.pdfbox.util.ImageParameters params;
    private byte[] imageData;

    public void <init>()
    {
        org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage r0;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.pdfbox.util.ImageParameters getImageParameters()
    {
        org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage r0;
        org.apache.pdfbox.util.ImageParameters $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage;

        $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage: org.apache.pdfbox.util.ImageParameters params>;

        return $r1;
    }

    public void setImageParameters(org.apache.pdfbox.util.ImageParameters)
    {
        org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage r0;
        org.apache.pdfbox.util.ImageParameters r1;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage;

        r1 := @parameter0: org.apache.pdfbox.util.ImageParameters;

        r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage: org.apache.pdfbox.util.ImageParameters params> = r1;

        return;
    }

    public byte[] getImageData()
    {
        byte[] $r1;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage r0;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage;

        $r1 = r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage: byte[] imageData>;

        return $r1;
    }

    public void setImageData(byte[])
    {
        byte[] r1;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage r0;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage;

        r1 := @parameter0: byte[];

        r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage: byte[] imageData> = r1;

        return;
    }

    public java.awt.image.BufferedImage createImage() throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage r0;
        java.awt.image.BufferedImage $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage: java.awt.image.BufferedImage createImage(java.util.Map)>(null);

        return $r1;
    }

    public java.awt.image.BufferedImage createImage(java.util.Map) throws java.io.IOException
    {
        byte[] $r4, $r5, $r13, $r15, $r22, $r29, r37;
        java.awt.image.DataBufferByte r39;
        byte $b5;
        java.util.Map r1;
        java.awt.image.IndexColorModel $r42;
        org.apache.pdfbox.filter.Filter $r25;
        org.apache.pdfbox.cos.COSBase $r11;
        java.io.ByteArrayOutputStream $r44;
        java.awt.image.DataBufferInt r40;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage r0;
        java.lang.String $r24;
        org.apache.pdfbox.util.ImageParameters $r2, $r7, $r17, $r18, $r26, $r30, $r32, $r35;
        org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace $r3;
        java.io.ByteArrayInputStream r38, $r43, $r46;
        int[] $r21;
        boolean $z0, $z1, $z2, z3, z4, z5;
        org.apache.pdfbox.filter.FilterManager $r45;
        java.awt.image.BufferedImage $r47;
        org.apache.pdfbox.cos.COSDictionary $r8, $r27;
        java.util.List $r36;
        java.awt.image.DataBuffer $r20;
        org.apache.pdfbox.cos.COSArray r34;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, $i17, $i19;
        org.apache.pdfbox.cos.COSName $r9, $r10;
        java.awt.image.ColorModel r33;
        java.awt.image.WritableRaster $r19;
        java.lang.Object $r23;
        org.apache.commons.logging.Log $r31;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage;

        r1 := @parameter0: java.util.Map;

        $r2 = r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage: org.apache.pdfbox.util.ImageParameters params>;

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.util.ImageParameters: org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace(java.util.Map)>(r1);

        if $r3 == null goto label01;

        $r32 = r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage: org.apache.pdfbox.util.ImageParameters params>;

        $i14 = virtualinvoke $r32.<org.apache.pdfbox.util.ImageParameters: int getBitsPerComponent()>();

        r33 = virtualinvoke $r3.<org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace: java.awt.image.ColorModel createColorModel(int)>($i14);

        goto label02;

     label01:
        $r4 = newarray (byte)[2];

        $r4[0] = -1;

        $r4[1] = -1;

        $r5 = newarray (byte)[2];

        $r5[0] = 0;

        $r5[1] = -1;

        $r42 = new java.awt.image.IndexColorModel;

        specialinvoke $r42.<java.awt.image.IndexColorModel: void <init>(int,int,byte[],byte[],byte[],byte[])>(1, 2, $r5, $r5, $r5, $r4);

        r33 = $r42;

     label02:
        z3 = 0;

        z5 = 0;

        z4 = 0;

        $r7 = r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage: org.apache.pdfbox.util.ImageParameters params>;

        $r8 = virtualinvoke $r7.<org.apache.pdfbox.util.ImageParameters: org.apache.pdfbox.cos.COSDictionary getDictionary()>();

        $r10 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DECODE>;

        $r9 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName D>;

        $r11 = virtualinvoke $r8.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)>($r10, $r9);

        if $r11 == null goto label04;

        $z2 = $r11 instanceof org.apache.pdfbox.cos.COSArray;

        if $z2 == 0 goto label04;

        r34 = (org.apache.pdfbox.cos.COSArray) $r11;

        $i12 = virtualinvoke r34.<org.apache.pdfbox.cos.COSArray: int getInt(int)>(0);

        if $i12 != 1 goto label04;

        $r30 = r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage: org.apache.pdfbox.util.ImageParameters params>;

        $i13 = virtualinvoke $r30.<org.apache.pdfbox.util.ImageParameters: int getBitsPerComponent()>();

        if $i13 != 1 goto label03;

        z3 = 1;

        z5 = 1;

        z4 = 1;

        goto label04;

     label03:
        $r31 = <org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r31.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("decode array is not implemented for BPC > 1");

     label04:
        $r35 = r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage: org.apache.pdfbox.util.ImageParameters params>;

        $r36 = virtualinvoke $r35.<org.apache.pdfbox.util.ImageParameters: java.util.List getFilters()>();

        if $r36 != null goto label05;

        r37 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage: byte[] getImageData()>();

        goto label08;

     label05:
        $r43 = new java.io.ByteArrayInputStream;

        $r13 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage: byte[] getImageData()>();

        specialinvoke $r43.<java.io.ByteArrayInputStream: void <init>(byte[])>($r13);

        r38 = $r43;

        $r44 = new java.io.ByteArrayOutputStream;

        $r15 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage: byte[] getImageData()>();

        $i0 = lengthof $r15;

        specialinvoke $r44.<java.io.ByteArrayOutputStream: void <init>(int)>($i0);

        $r45 = new org.apache.pdfbox.filter.FilterManager;

        specialinvoke $r45.<org.apache.pdfbox.filter.FilterManager: void <init>()>();

        i15 = 0;

     label06:
        $i1 = interfaceinvoke $r36.<java.util.List: int size()>();

        if i15 >= $i1 goto label07;

        virtualinvoke $r44.<java.io.ByteArrayOutputStream: void reset()>();

        $r23 = interfaceinvoke $r36.<java.util.List: java.lang.Object get(int)>(i15);

        $r24 = (java.lang.String) $r23;

        $r25 = virtualinvoke $r45.<org.apache.pdfbox.filter.FilterManager: org.apache.pdfbox.filter.Filter getFilter(java.lang.String)>($r24);

        $r26 = r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage: org.apache.pdfbox.util.ImageParameters params>;

        $r27 = virtualinvoke $r26.<org.apache.pdfbox.util.ImageParameters: org.apache.pdfbox.cos.COSDictionary getDictionary()>();

        interfaceinvoke $r25.<org.apache.pdfbox.filter.Filter: void decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)>(r38, $r44, $r27, i15);

        $r46 = new java.io.ByteArrayInputStream;

        $r29 = virtualinvoke $r44.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r46.<java.io.ByteArrayInputStream: void <init>(byte[])>($r29);

        r38 = $r46;

        i15 = i15 + 1;

        goto label06;

     label07:
        r37 = virtualinvoke $r44.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label08:
        $r17 = r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage: org.apache.pdfbox.util.ImageParameters params>;

        $i2 = virtualinvoke $r17.<org.apache.pdfbox.util.ImageParameters: int getWidth()>();

        $r18 = r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage: org.apache.pdfbox.util.ImageParameters params>;

        $i3 = virtualinvoke $r18.<org.apache.pdfbox.util.ImageParameters: int getHeight()>();

        $r19 = virtualinvoke r33.<java.awt.image.ColorModel: java.awt.image.WritableRaster createCompatibleWritableRaster(int,int)>($i2, $i3);

        $r20 = virtualinvoke $r19.<java.awt.image.WritableRaster: java.awt.image.DataBuffer getDataBuffer()>();

        $z0 = $r20 instanceof java.awt.image.DataBufferByte;

        if $z0 == 0 goto label10;

        r39 = (java.awt.image.DataBufferByte) $r20;

        $r22 = virtualinvoke r39.<java.awt.image.DataBufferByte: byte[] getData()>();

        $i11 = lengthof $r22;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r37, 0, $r22, 0, $i11);

        if z4 == 0 goto label09;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage: void invertBitmap(byte[])>($r22);

     label09:
        goto label13;

     label10:
        $z1 = $r20 instanceof java.awt.image.DataBufferInt;

        if $z1 == 0 goto label13;

        r40 = (java.awt.image.DataBufferInt) $r20;

        $r21 = virtualinvoke r40.<java.awt.image.DataBufferInt: int[] getData()>();

        i16 = 0;

     label11:
        $i4 = lengthof r37;

        if i16 >= $i4 goto label13;

        $b5 = r37[i16];

        $i17 = (int) $b5;

        $i6 = $i17 + 256;

        $i7 = $i6 % 256;

        $r21[i16] = $i7;

        if z5 == 0 goto label12;

        $i8 = $r21[i16];

        $i19 = (int) -1;

        $i9 = $i8 ^ $i19;

        $i10 = $i9 & 255;

        $r21[i16] = $i10;

     label12:
        i16 = i16 + 1;

        goto label11;

     label13:
        $r47 = new java.awt.image.BufferedImage;

        specialinvoke $r47.<java.awt.image.BufferedImage: void <init>(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)>(r33, $r19, 0, null);

        virtualinvoke $r47.<java.awt.image.BufferedImage: void setData(java.awt.image.Raster)>($r19);

        return $r47;
    }

    private void invertBitmap(byte[])
    {
        byte[] r0;
        short $s3, $s6;
        byte $b1, $b2, $b4;
        org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage r1;
        int i0, i5;

        r1 := @this: org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage;

        r0 := @parameter0: byte[];

        i5 = 0;

        i0 = lengthof r0;

     label1:
        if i5 >= i0 goto label2;

        $b1 = r0[i5];

        $b2 = $b1 ^ -1;

        $s6 = (short) $b2;

        $s3 = $s6 & 255;

        $b4 = (byte) $s3;

        r0[i5] = $b4;

        i5 = i5 + 1;

        goto label1;

     label2:
        return;
    }

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/apache/pdfbox/pdmodel/graphics/xobject/PDInlinedImage;");

        <org.apache.pdfbox.pdmodel.graphics.xobject.PDInlinedImage: org.apache.commons.logging.Log LOG> = $r0;

        return;
    }
}
