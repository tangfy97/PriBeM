class ucar.nc2.iosp.uf.Ray$UF_field_header2 extends java.lang.Object
{
    short dataOffset;
    short scaleFactor;
    short startRange;
    short startRange1;
    short binSpacing;
    short binCount;
    short pulseWidth;
    short HorizontalBeamWidth;
    short verticalBeamWidth;
    short receiverBandwidth;
    short polarization;
    short waveLength;
    short sampleSize;
    java.lang.String typeOfData;
    short thresholdValue;
    short scale;
    java.lang.String editCode;
    short prt;
    short bits;
    final ucar.nc2.iosp.uf.Ray this$0;

    void <init>(ucar.nc2.iosp.uf.Ray, byte[])
    {
        byte[] r2;
        short $s0, $s1, $s2, $s3, $s4, $s5, $s6, $s7, $s8, $s9, $s10, $s11, $s12, $s13, $s14, $s15, $s16;
        ucar.nc2.iosp.uf.Ray r1;
        java.lang.String $r3, $r4;
        ucar.nc2.iosp.uf.Ray$UF_field_header2 r0;

        r0 := @this: ucar.nc2.iosp.uf.Ray$UF_field_header2;

        r1 := @parameter0: ucar.nc2.iosp.uf.Ray;

        r2 := @parameter1: byte[];

        r0.<ucar.nc2.iosp.uf.Ray$UF_field_header2: ucar.nc2.iosp.uf.Ray this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $s0 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r2, 0);

        r0.<ucar.nc2.iosp.uf.Ray$UF_field_header2: short dataOffset> = $s0;

        $s1 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r2, 2);

        r0.<ucar.nc2.iosp.uf.Ray$UF_field_header2: short scaleFactor> = $s1;

        $s2 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r2, 4);

        r0.<ucar.nc2.iosp.uf.Ray$UF_field_header2: short startRange> = $s2;

        $s3 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r2, 6);

        r0.<ucar.nc2.iosp.uf.Ray$UF_field_header2: short startRange1> = $s3;

        $s4 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r2, 8);

        r0.<ucar.nc2.iosp.uf.Ray$UF_field_header2: short binSpacing> = $s4;

        $s5 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r2, 10);

        r0.<ucar.nc2.iosp.uf.Ray$UF_field_header2: short binCount> = $s5;

        $s6 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r2, 12);

        r0.<ucar.nc2.iosp.uf.Ray$UF_field_header2: short pulseWidth> = $s6;

        $s7 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r2, 14);

        r0.<ucar.nc2.iosp.uf.Ray$UF_field_header2: short HorizontalBeamWidth> = $s7;

        $s8 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r2, 16);

        r0.<ucar.nc2.iosp.uf.Ray$UF_field_header2: short verticalBeamWidth> = $s8;

        $s9 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r2, 18);

        r0.<ucar.nc2.iosp.uf.Ray$UF_field_header2: short receiverBandwidth> = $s9;

        $s10 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r2, 20);

        r0.<ucar.nc2.iosp.uf.Ray$UF_field_header2: short polarization> = $s10;

        $s11 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r2, 22);

        r0.<ucar.nc2.iosp.uf.Ray$UF_field_header2: short waveLength> = $s11;

        $s12 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r2, 24);

        r0.<ucar.nc2.iosp.uf.Ray$UF_field_header2: short sampleSize> = $s12;

        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(byte[],int,int)>(r2, 26, 2);

        r0.<ucar.nc2.iosp.uf.Ray$UF_field_header2: java.lang.String typeOfData> = $r3;

        $s13 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r2, 28);

        r0.<ucar.nc2.iosp.uf.Ray$UF_field_header2: short thresholdValue> = $s13;

        $s14 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r2, 30);

        r0.<ucar.nc2.iosp.uf.Ray$UF_field_header2: short scale> = $s14;

        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int)>(r2, 32, 2);

        r0.<ucar.nc2.iosp.uf.Ray$UF_field_header2: java.lang.String editCode> = $r4;

        $s15 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r2, 34);

        r0.<ucar.nc2.iosp.uf.Ray$UF_field_header2: short prt> = $s15;

        $s16 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r2, 36);

        r0.<ucar.nc2.iosp.uf.Ray$UF_field_header2: short bits> = $s16;

        return;
    }
}
