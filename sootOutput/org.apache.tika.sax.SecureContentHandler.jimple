public class org.apache.tika.sax.SecureContentHandler extends org.apache.tika.sax.ContentHandlerDecorator
{
    private final org.apache.tika.io.TikaInputStream stream;
    private long characterCount;
    private int currentDepth;
    private java.util.LinkedList packageEntryDepths;
    private long threshold;
    private long ratio;
    private int maxDepth;
    private int maxPackageEntryDepth;

    public void <init>(org.xml.sax.ContentHandler, org.apache.tika.io.TikaInputStream)
    {
        org.apache.tika.sax.SecureContentHandler r0;
        org.apache.tika.io.TikaInputStream r3;
        org.xml.sax.ContentHandler r1;
        java.util.LinkedList $r2;

        r0 := @this: org.apache.tika.sax.SecureContentHandler;

        r1 := @parameter0: org.xml.sax.ContentHandler;

        r3 := @parameter1: org.apache.tika.io.TikaInputStream;

        specialinvoke r0.<org.apache.tika.sax.ContentHandlerDecorator: void <init>(org.xml.sax.ContentHandler)>(r1);

        r0.<org.apache.tika.sax.SecureContentHandler: long characterCount> = 0L;

        r0.<org.apache.tika.sax.SecureContentHandler: int currentDepth> = 0;

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.tika.sax.SecureContentHandler: java.util.LinkedList packageEntryDepths> = $r2;

        r0.<org.apache.tika.sax.SecureContentHandler: long threshold> = 1000000L;

        r0.<org.apache.tika.sax.SecureContentHandler: long ratio> = 100L;

        r0.<org.apache.tika.sax.SecureContentHandler: int maxDepth> = 100;

        r0.<org.apache.tika.sax.SecureContentHandler: int maxPackageEntryDepth> = 10;

        r0.<org.apache.tika.sax.SecureContentHandler: org.apache.tika.io.TikaInputStream stream> = r3;

        return;
    }

    public long getOutputThreshold()
    {
        long $l0;
        org.apache.tika.sax.SecureContentHandler r0;

        r0 := @this: org.apache.tika.sax.SecureContentHandler;

        $l0 = r0.<org.apache.tika.sax.SecureContentHandler: long threshold>;

        return $l0;
    }

    public void setOutputThreshold(long)
    {
        long l0;
        org.apache.tika.sax.SecureContentHandler r0;

        r0 := @this: org.apache.tika.sax.SecureContentHandler;

        l0 := @parameter0: long;

        r0.<org.apache.tika.sax.SecureContentHandler: long threshold> = l0;

        return;
    }

    public long getMaximumCompressionRatio()
    {
        long $l0;
        org.apache.tika.sax.SecureContentHandler r0;

        r0 := @this: org.apache.tika.sax.SecureContentHandler;

        $l0 = r0.<org.apache.tika.sax.SecureContentHandler: long ratio>;

        return $l0;
    }

    public void setMaximumCompressionRatio(long)
    {
        long l0;
        org.apache.tika.sax.SecureContentHandler r0;

        r0 := @this: org.apache.tika.sax.SecureContentHandler;

        l0 := @parameter0: long;

        r0.<org.apache.tika.sax.SecureContentHandler: long ratio> = l0;

        return;
    }

    public int getMaximumDepth()
    {
        int $i0;
        org.apache.tika.sax.SecureContentHandler r0;

        r0 := @this: org.apache.tika.sax.SecureContentHandler;

        $i0 = r0.<org.apache.tika.sax.SecureContentHandler: int maxDepth>;

        return $i0;
    }

    public void setMaximumPackageEntryDepth(int)
    {
        int i0;
        org.apache.tika.sax.SecureContentHandler r0;

        r0 := @this: org.apache.tika.sax.SecureContentHandler;

        i0 := @parameter0: int;

        r0.<org.apache.tika.sax.SecureContentHandler: int maxPackageEntryDepth> = i0;

        return;
    }

    public int getMaximumPackageEntryDepth()
    {
        int $i0;
        org.apache.tika.sax.SecureContentHandler r0;

        r0 := @this: org.apache.tika.sax.SecureContentHandler;

        $i0 = r0.<org.apache.tika.sax.SecureContentHandler: int maxPackageEntryDepth>;

        return $i0;
    }

    public void setMaximumDepth(int)
    {
        int i0;
        org.apache.tika.sax.SecureContentHandler r0;

        r0 := @this: org.apache.tika.sax.SecureContentHandler;

        i0 := @parameter0: int;

        r0.<org.apache.tika.sax.SecureContentHandler: int maxDepth> = i0;

        return;
    }

    public void throwIfCauseOf(org.xml.sax.SAXException) throws org.apache.tika.exception.TikaException
    {
        org.apache.tika.sax.SecureContentHandler r1;
        org.apache.tika.exception.TikaException $r3;
        org.xml.sax.SAXException r0;
        org.apache.tika.sax.SecureContentHandler$SecureSAXException $r2;
        boolean $z0, $z1;

        r1 := @this: org.apache.tika.sax.SecureContentHandler;

        r0 := @parameter0: org.xml.sax.SAXException;

        $z0 = r0 instanceof org.apache.tika.sax.SecureContentHandler$SecureSAXException;

        if $z0 == 0 goto label1;

        $r2 = (org.apache.tika.sax.SecureContentHandler$SecureSAXException) r0;

        $z1 = virtualinvoke $r2.<org.apache.tika.sax.SecureContentHandler$SecureSAXException: boolean isCausedBy(org.apache.tika.sax.SecureContentHandler)>(r1);

        if $z1 == 0 goto label1;

        $r3 = new org.apache.tika.exception.TikaException;

        specialinvoke $r3.<org.apache.tika.exception.TikaException: void <init>(java.lang.String,java.lang.Throwable)>("Zip bomb detected!", r0);

        throw $r3;

     label1:
        return;
    }

    private long getByteCount() throws org.xml.sax.SAXException
    {
        long $l0, $l1;
        java.io.IOException $r4;
        org.apache.tika.sax.SecureContentHandler r0;
        org.xml.sax.SAXException $r5;
        org.apache.tika.io.TikaInputStream $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.tika.sax.SecureContentHandler;

     label1:
        $r1 = r0.<org.apache.tika.sax.SecureContentHandler: org.apache.tika.io.TikaInputStream stream>;

        $z0 = virtualinvoke $r1.<org.apache.tika.io.TikaInputStream: boolean hasLength()>();

        if $z0 == 0 goto label3;

        $r3 = r0.<org.apache.tika.sax.SecureContentHandler: org.apache.tika.io.TikaInputStream stream>;

        $l1 = virtualinvoke $r3.<org.apache.tika.io.TikaInputStream: long getLength()>();

     label2:
        return $l1;

     label3:
        $r2 = r0.<org.apache.tika.sax.SecureContentHandler: org.apache.tika.io.TikaInputStream stream>;

        $l0 = virtualinvoke $r2.<org.apache.tika.io.TikaInputStream: long getPosition()>();

     label4:
        return $l0;

     label5:
        $r4 := @caughtexception;

        $r5 = new org.xml.sax.SAXException;

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.String,java.lang.Exception)>("Unable to get stream length", $r4);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }

    private void advance(int) throws org.xml.sax.SAXException
    {
        long $l1, $l2, $l3, $l4, $l5, $l6, $l8, $l9, $l10, $l12;
        byte $b7, $b11;
        int i0, $i13, $i14;
        java.lang.String $r8;
        org.apache.tika.sax.SecureContentHandler r0;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r9;
        org.apache.tika.sax.SecureContentHandler$SecureSAXException $r10;

        r0 := @this: org.apache.tika.sax.SecureContentHandler;

        i0 := @parameter0: int;

        $l2 = r0.<org.apache.tika.sax.SecureContentHandler: long characterCount>;

        $l1 = (long) i0;

        $l3 = $l2 + $l1;

        r0.<org.apache.tika.sax.SecureContentHandler: long characterCount> = $l3;

        $l4 = specialinvoke r0.<org.apache.tika.sax.SecureContentHandler: long getByteCount()>();

        $l6 = r0.<org.apache.tika.sax.SecureContentHandler: long characterCount>;

        $l5 = r0.<org.apache.tika.sax.SecureContentHandler: long threshold>;

        $b7 = $l6 cmp $l5;

        $i13 = (int) $b7;

        if $i13 <= 0 goto label1;

        $l10 = r0.<org.apache.tika.sax.SecureContentHandler: long characterCount>;

        $l8 = r0.<org.apache.tika.sax.SecureContentHandler: long ratio>;

        $l9 = $l4 * $l8;

        $b11 = $l10 cmp $l9;

        $i14 = (int) $b11;

        if $i14 <= 0 goto label1;

        $r10 = new org.apache.tika.sax.SecureContentHandler$SecureSAXException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Suspected zip bomb: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" input bytes produced ");

        $l12 = r0.<org.apache.tika.sax.SecureContentHandler: long characterCount>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l12);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" output characters");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<org.apache.tika.sax.SecureContentHandler$SecureSAXException: void <init>(org.apache.tika.sax.SecureContentHandler,java.lang.String)>(r0, $r8);

        throw $r10;

     label1:
        return;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        java.lang.Integer $r9;
        boolean $z0, $z1;
        org.apache.tika.sax.SecureContentHandler r0;
        java.lang.StringBuilder $r12, $r13, $r15, $r16, $r19, $r20, $r21, $r22;
        org.apache.tika.sax.SecureContentHandler$SecureSAXException $r11, $r18;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        org.xml.sax.Attributes r5;
        java.lang.String r1, $r2, r3, r4, $r6, $r7, $r17, $r23;
        java.util.LinkedList $r8, $r10, $r14;

        r0 := @this: org.apache.tika.sax.SecureContentHandler;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r5 := @parameter3: org.xml.sax.Attributes;

        $i0 = r0.<org.apache.tika.sax.SecureContentHandler: int currentDepth>;

        $i1 = $i0 + 1;

        r0.<org.apache.tika.sax.SecureContentHandler: int currentDepth> = $i1;

        $i3 = r0.<org.apache.tika.sax.SecureContentHandler: int currentDepth>;

        $i2 = r0.<org.apache.tika.sax.SecureContentHandler: int maxDepth>;

        if $i3 < $i2 goto label1;

        $r18 = new org.apache.tika.sax.SecureContentHandler$SecureSAXException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Suspected zip bomb: ");

        $i8 = r0.<org.apache.tika.sax.SecureContentHandler: int currentDepth>;

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" levels of XML element nesting");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<org.apache.tika.sax.SecureContentHandler$SecureSAXException: void <init>(org.apache.tika.sax.SecureContentHandler,java.lang.String)>(r0, $r23);

        throw $r18;

     label1:
        $r2 = "div";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r6 = "package-entry";

        $r7 = interfaceinvoke r5.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("class");

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label2;

        $r8 = r0.<org.apache.tika.sax.SecureContentHandler: java.util.LinkedList packageEntryDepths>;

        $i4 = r0.<org.apache.tika.sax.SecureContentHandler: int currentDepth>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        virtualinvoke $r8.<java.util.LinkedList: void addLast(java.lang.Object)>($r9);

        $r10 = r0.<org.apache.tika.sax.SecureContentHandler: java.util.LinkedList packageEntryDepths>;

        $i5 = virtualinvoke $r10.<java.util.LinkedList: int size()>();

        $i6 = r0.<org.apache.tika.sax.SecureContentHandler: int maxPackageEntryDepth>;

        if $i5 < $i6 goto label2;

        $r11 = new org.apache.tika.sax.SecureContentHandler$SecureSAXException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Suspected zip bomb: ");

        $r14 = r0.<org.apache.tika.sax.SecureContentHandler: java.util.LinkedList packageEntryDepths>;

        $i7 = virtualinvoke $r14.<java.util.LinkedList: int size()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" levels of package entry nesting");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<org.apache.tika.sax.SecureContentHandler$SecureSAXException: void <init>(org.apache.tika.sax.SecureContentHandler,java.lang.String)>(r0, $r17);

        throw $r11;

     label2:
        specialinvoke r0.<org.apache.tika.sax.ContentHandlerDecorator: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>(r3, r4, r1, r5);

        return;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.Integer $r7;
        org.apache.tika.sax.SecureContentHandler r0;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r6;
        java.lang.String r1, r2, r3;
        java.util.LinkedList $r4, $r5, $r8;
        boolean $z0;

        r0 := @this: org.apache.tika.sax.SecureContentHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<org.apache.tika.sax.ContentHandlerDecorator: void endElement(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        $r4 = r0.<org.apache.tika.sax.SecureContentHandler: java.util.LinkedList packageEntryDepths>;

        $z0 = virtualinvoke $r4.<java.util.LinkedList: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r5 = r0.<org.apache.tika.sax.SecureContentHandler: java.util.LinkedList packageEntryDepths>;

        $r6 = virtualinvoke $r5.<java.util.LinkedList: java.lang.Object getLast()>();

        $r7 = (java.lang.Integer) $r6;

        $i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        $i1 = r0.<org.apache.tika.sax.SecureContentHandler: int currentDepth>;

        if $i0 != $i1 goto label1;

        $r8 = r0.<org.apache.tika.sax.SecureContentHandler: java.util.LinkedList packageEntryDepths>;

        virtualinvoke $r8.<java.util.LinkedList: java.lang.Object removeLast()>();

     label1:
        $i2 = r0.<org.apache.tika.sax.SecureContentHandler: int currentDepth>;

        $i3 = $i2 - 1;

        r0.<org.apache.tika.sax.SecureContentHandler: int currentDepth> = $i3;

        return;
    }

    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.tika.sax.SecureContentHandler r0;
        int i0, i1;
        char[] r1;

        r0 := @this: org.apache.tika.sax.SecureContentHandler;

        r1 := @parameter0: char[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        specialinvoke r0.<org.apache.tika.sax.SecureContentHandler: void advance(int)>(i0);

        specialinvoke r0.<org.apache.tika.sax.ContentHandlerDecorator: void characters(char[],int,int)>(r1, i1, i0);

        return;
    }

    public void ignorableWhitespace(char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.tika.sax.SecureContentHandler r0;
        int i0, i1;
        char[] r1;

        r0 := @this: org.apache.tika.sax.SecureContentHandler;

        r1 := @parameter0: char[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        specialinvoke r0.<org.apache.tika.sax.SecureContentHandler: void advance(int)>(i0);

        specialinvoke r0.<org.apache.tika.sax.ContentHandlerDecorator: void ignorableWhitespace(char[],int,int)>(r1, i1, i0);

        return;
    }
}
