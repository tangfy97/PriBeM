final class org.waveprotocol.wave.common.logging.LoggerBundle$1 extends java.lang.Object implements org.waveprotocol.wave.common.logging.LoggerBundle
{

    void <init>()
    {
        org.waveprotocol.wave.common.logging.LoggerBundle$1 r0;

        r0 := @this: org.waveprotocol.wave.common.logging.LoggerBundle$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.wave.common.logging.Logger error()
    {
        org.waveprotocol.wave.common.logging.LoggerBundle$1 r1;
        org.waveprotocol.wave.common.logging.Logger $r0;

        r1 := @this: org.waveprotocol.wave.common.logging.LoggerBundle$1;

        $r0 = <org.waveprotocol.wave.common.logging.Logger: org.waveprotocol.wave.common.logging.Logger NOP_IMPL>;

        return $r0;
    }

    public org.waveprotocol.wave.common.logging.Logger fatal()
    {
        org.waveprotocol.wave.common.logging.LoggerBundle$1 r1;
        org.waveprotocol.wave.common.logging.Logger $r0;

        r1 := @this: org.waveprotocol.wave.common.logging.LoggerBundle$1;

        $r0 = <org.waveprotocol.wave.common.logging.Logger: org.waveprotocol.wave.common.logging.Logger NOP_IMPL>;

        return $r0;
    }

    public org.waveprotocol.wave.common.logging.Logger trace()
    {
        org.waveprotocol.wave.common.logging.LoggerBundle$1 r1;
        org.waveprotocol.wave.common.logging.Logger $r0;

        r1 := @this: org.waveprotocol.wave.common.logging.LoggerBundle$1;

        $r0 = <org.waveprotocol.wave.common.logging.Logger: org.waveprotocol.wave.common.logging.Logger NOP_IMPL>;

        return $r0;
    }

    public boolean isModuleEnabled()
    {
        org.waveprotocol.wave.common.logging.LoggerBundle$1 r0;

        r0 := @this: org.waveprotocol.wave.common.logging.LoggerBundle$1;

        return 0;
    }

    public transient void log(org.waveprotocol.wave.common.logging.AbstractLogger$Level, java.lang.Object[])
    {
        org.waveprotocol.wave.common.logging.LoggerBundle$1 r0;
        java.lang.Object[] r2;
        org.waveprotocol.wave.common.logging.AbstractLogger$Level r1;

        r0 := @this: org.waveprotocol.wave.common.logging.LoggerBundle$1;

        r1 := @parameter0: org.waveprotocol.wave.common.logging.AbstractLogger$Level;

        r2 := @parameter1: java.lang.Object[];

        return;
    }
}
