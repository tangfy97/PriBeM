public class groovyjarjarantlr.TreeParser extends java.lang.Object
{
    public static groovyjarjarantlr.ASTNULLType ASTNULL;
    protected groovyjarjarantlr.collections.AST _retTree;
    protected groovyjarjarantlr.TreeParserSharedInputState inputState;
    protected java.lang.String[] tokenNames;
    protected groovyjarjarantlr.collections.AST returnAST;
    protected groovyjarjarantlr.ASTFactory astFactory;
    protected int traceDepth;

    public void <init>()
    {
        groovyjarjarantlr.TreeParser r0;
        groovyjarjarantlr.ASTFactory $r1;
        groovyjarjarantlr.TreeParserSharedInputState $r2;

        r0 := @this: groovyjarjarantlr.TreeParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new groovyjarjarantlr.ASTFactory;

        specialinvoke $r1.<groovyjarjarantlr.ASTFactory: void <init>()>();

        r0.<groovyjarjarantlr.TreeParser: groovyjarjarantlr.ASTFactory astFactory> = $r1;

        r0.<groovyjarjarantlr.TreeParser: int traceDepth> = 0;

        $r2 = new groovyjarjarantlr.TreeParserSharedInputState;

        specialinvoke $r2.<groovyjarjarantlr.TreeParserSharedInputState: void <init>()>();

        r0.<groovyjarjarantlr.TreeParser: groovyjarjarantlr.TreeParserSharedInputState inputState> = $r2;

        return;
    }

    public groovyjarjarantlr.collections.AST getAST()
    {
        groovyjarjarantlr.TreeParser r0;
        groovyjarjarantlr.collections.AST $r1;

        r0 := @this: groovyjarjarantlr.TreeParser;

        $r1 = r0.<groovyjarjarantlr.TreeParser: groovyjarjarantlr.collections.AST returnAST>;

        return $r1;
    }

    public groovyjarjarantlr.ASTFactory getASTFactory()
    {
        groovyjarjarantlr.TreeParser r0;
        groovyjarjarantlr.ASTFactory $r1;

        r0 := @this: groovyjarjarantlr.TreeParser;

        $r1 = r0.<groovyjarjarantlr.TreeParser: groovyjarjarantlr.ASTFactory astFactory>;

        return $r1;
    }

    public java.lang.String getTokenName(int)
    {
        groovyjarjarantlr.TreeParser r0;
        int i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: groovyjarjarantlr.TreeParser;

        i0 := @parameter0: int;

        $r1 = r0.<groovyjarjarantlr.TreeParser: java.lang.String[] tokenNames>;

        $r2 = $r1[i0];

        return $r2;
    }

    public java.lang.String[] getTokenNames()
    {
        groovyjarjarantlr.TreeParser r0;
        java.lang.String[] $r1;

        r0 := @this: groovyjarjarantlr.TreeParser;

        $r1 = r0.<groovyjarjarantlr.TreeParser: java.lang.String[] tokenNames>;

        return $r1;
    }

    protected void match(groovyjarjarantlr.collections.AST, int) throws groovyjarjarantlr.MismatchedTokenException
    {
        groovyjarjarantlr.TreeParser r1;
        int i0, $i1;
        groovyjarjarantlr.ASTNULLType $r2;
        groovyjarjarantlr.MismatchedTokenException $r3;
        java.lang.String[] $r4;
        groovyjarjarantlr.collections.AST r0;

        r1 := @this: groovyjarjarantlr.TreeParser;

        r0 := @parameter0: groovyjarjarantlr.collections.AST;

        i0 := @parameter1: int;

        if r0 == null goto label1;

        $r2 = <groovyjarjarantlr.TreeParser: groovyjarjarantlr.ASTNULLType ASTNULL>;

        if r0 == $r2 goto label1;

        $i1 = interfaceinvoke r0.<groovyjarjarantlr.collections.AST: int getType()>();

        if $i1 == i0 goto label2;

     label1:
        $r3 = new groovyjarjarantlr.MismatchedTokenException;

        $r4 = virtualinvoke r1.<groovyjarjarantlr.TreeParser: java.lang.String[] getTokenNames()>();

        specialinvoke $r3.<groovyjarjarantlr.MismatchedTokenException: void <init>(java.lang.String[],groovyjarjarantlr.collections.AST,int,boolean)>($r4, r0, i0, 0);

        throw $r3;

     label2:
        return;
    }

    public void match(groovyjarjarantlr.collections.AST, groovyjarjarantlr.collections.impl.BitSet) throws groovyjarjarantlr.MismatchedTokenException
    {
        java.lang.String[] $r5;
        groovyjarjarantlr.collections.impl.BitSet r2;
        groovyjarjarantlr.TreeParser r1;
        groovyjarjarantlr.ASTNULLType $r3;
        int $i0;
        groovyjarjarantlr.MismatchedTokenException $r4;
        groovyjarjarantlr.collections.AST r0;
        boolean $z0;

        r1 := @this: groovyjarjarantlr.TreeParser;

        r0 := @parameter0: groovyjarjarantlr.collections.AST;

        r2 := @parameter1: groovyjarjarantlr.collections.impl.BitSet;

        if r0 == null goto label1;

        $r3 = <groovyjarjarantlr.TreeParser: groovyjarjarantlr.ASTNULLType ASTNULL>;

        if r0 == $r3 goto label1;

        $i0 = interfaceinvoke r0.<groovyjarjarantlr.collections.AST: int getType()>();

        $z0 = virtualinvoke r2.<groovyjarjarantlr.collections.impl.BitSet: boolean member(int)>($i0);

        if $z0 != 0 goto label2;

     label1:
        $r4 = new groovyjarjarantlr.MismatchedTokenException;

        $r5 = virtualinvoke r1.<groovyjarjarantlr.TreeParser: java.lang.String[] getTokenNames()>();

        specialinvoke $r4.<groovyjarjarantlr.MismatchedTokenException: void <init>(java.lang.String[],groovyjarjarantlr.collections.AST,groovyjarjarantlr.collections.impl.BitSet,boolean)>($r5, r0, r2, 0);

        throw $r4;

     label2:
        return;
    }

    protected void matchNot(groovyjarjarantlr.collections.AST, int) throws groovyjarjarantlr.MismatchedTokenException
    {
        groovyjarjarantlr.TreeParser r1;
        int i0, $i1;
        groovyjarjarantlr.ASTNULLType $r2;
        groovyjarjarantlr.MismatchedTokenException $r3;
        java.lang.String[] $r4;
        groovyjarjarantlr.collections.AST r0;

        r1 := @this: groovyjarjarantlr.TreeParser;

        r0 := @parameter0: groovyjarjarantlr.collections.AST;

        i0 := @parameter1: int;

        if r0 == null goto label1;

        $r2 = <groovyjarjarantlr.TreeParser: groovyjarjarantlr.ASTNULLType ASTNULL>;

        if r0 == $r2 goto label1;

        $i1 = interfaceinvoke r0.<groovyjarjarantlr.collections.AST: int getType()>();

        if $i1 != i0 goto label2;

     label1:
        $r3 = new groovyjarjarantlr.MismatchedTokenException;

        $r4 = virtualinvoke r1.<groovyjarjarantlr.TreeParser: java.lang.String[] getTokenNames()>();

        specialinvoke $r3.<groovyjarjarantlr.MismatchedTokenException: void <init>(java.lang.String[],groovyjarjarantlr.collections.AST,int,boolean)>($r4, r0, i0, 1);

        throw $r3;

     label2:
        return;
    }

    public static void panic()
    {
        java.io.PrintStream $r0;

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("TreeWalker: panic");

        staticinvoke <groovyjarjarantlr.Utils: void error(java.lang.String)>("");

        return;
    }

    public void reportError(groovyjarjarantlr.RecognitionException)
    {
        java.io.PrintStream $r1;
        groovyjarjarantlr.TreeParser r3;
        java.lang.String $r2;
        groovyjarjarantlr.RecognitionException r0;

        r3 := @this: groovyjarjarantlr.TreeParser;

        r0 := @parameter0: groovyjarjarantlr.RecognitionException;

        $r1 = <java.lang.System: java.io.PrintStream err>;

        $r2 = virtualinvoke r0.<groovyjarjarantlr.RecognitionException: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r2);

        return;
    }

    public void reportError(java.lang.String)
    {
        java.io.PrintStream $r1;
        groovyjarjarantlr.TreeParser r6;
        java.lang.StringBuffer $r0, $r2, $r4;
        java.lang.String r3, $r5;

        r6 := @this: groovyjarjarantlr.TreeParser;

        r3 := @parameter0: java.lang.String;

        $r1 = <java.lang.System: java.io.PrintStream err>;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("error: ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);

        return;
    }

    public void reportWarning(java.lang.String)
    {
        java.io.PrintStream $r1;
        groovyjarjarantlr.TreeParser r6;
        java.lang.StringBuffer $r0, $r2, $r4;
        java.lang.String r3, $r5;

        r6 := @this: groovyjarjarantlr.TreeParser;

        r3 := @parameter0: java.lang.String;

        $r1 = <java.lang.System: java.io.PrintStream err>;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("warning: ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);

        return;
    }

    public void setASTFactory(groovyjarjarantlr.ASTFactory)
    {
        groovyjarjarantlr.TreeParser r0;
        groovyjarjarantlr.ASTFactory r1;

        r0 := @this: groovyjarjarantlr.TreeParser;

        r1 := @parameter0: groovyjarjarantlr.ASTFactory;

        r0.<groovyjarjarantlr.TreeParser: groovyjarjarantlr.ASTFactory astFactory> = r1;

        return;
    }

    public void setASTNodeType(java.lang.String)
    {
        groovyjarjarantlr.TreeParser r0;
        java.lang.String r1;

        r0 := @this: groovyjarjarantlr.TreeParser;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<groovyjarjarantlr.TreeParser: void setASTNodeClass(java.lang.String)>(r1);

        return;
    }

    public void setASTNodeClass(java.lang.String)
    {
        groovyjarjarantlr.TreeParser r0;
        java.lang.String r1;
        groovyjarjarantlr.ASTFactory $r2;

        r0 := @this: groovyjarjarantlr.TreeParser;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<groovyjarjarantlr.TreeParser: groovyjarjarantlr.ASTFactory astFactory>;

        virtualinvoke $r2.<groovyjarjarantlr.ASTFactory: void setASTNodeType(java.lang.String)>(r1);

        return;
    }

    public void traceIndent()
    {
        groovyjarjarantlr.TreeParser r0;
        java.io.PrintStream $r1;
        int $i0, i1;

        r0 := @this: groovyjarjarantlr.TreeParser;

        i1 = 0;

     label1:
        $i0 = r0.<groovyjarjarantlr.TreeParser: int traceDepth>;

        if i1 >= $i0 goto label2;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>(" ");

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void traceIn(java.lang.String, groovyjarjarantlr.collections.AST)
    {
        java.lang.StringBuffer $r1, $r3, $r5, $r6, $r8, $r9, $r11;
        int $i0, $i1, $i2;
        java.lang.String r4, $r12, $r13, $r14;
        java.io.PrintStream $r2;
        groovyjarjarantlr.TreeParser r0;
        groovyjarjarantlr.collections.AST r7;
        groovyjarjarantlr.TreeParserSharedInputState $r10;

        r0 := @this: groovyjarjarantlr.TreeParser;

        r4 := @parameter0: java.lang.String;

        r7 := @parameter1: groovyjarjarantlr.collections.AST;

        $i0 = r0.<groovyjarjarantlr.TreeParser: int traceDepth>;

        $i1 = $i0 + 1;

        r0.<groovyjarjarantlr.TreeParser: int traceDepth> = $i1;

        virtualinvoke r0.<groovyjarjarantlr.TreeParser: void traceIndent()>();

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("> ");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        if r7 == null goto label1;

        $r13 = virtualinvoke r7.<java.lang.Object: java.lang.String toString()>();

        goto label2;

     label1:
        $r13 = "null";

     label2:
        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r10 = r0.<groovyjarjarantlr.TreeParser: groovyjarjarantlr.TreeParserSharedInputState inputState>;

        $i2 = $r10.<groovyjarjarantlr.TreeParserSharedInputState: int guessing>;

        if $i2 <= 0 goto label3;

        $r14 = " [guessing]";

        goto label4;

     label3:
        $r14 = "";

     label4:
        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r12);

        return;
    }

    public void traceOut(java.lang.String, groovyjarjarantlr.collections.AST)
    {
        java.lang.StringBuffer $r1, $r3, $r5, $r6, $r8, $r9, $r11;
        int $i0, $i1, $i2;
        java.lang.String r4, $r12, $r13, $r14;
        java.io.PrintStream $r2;
        groovyjarjarantlr.TreeParser r0;
        groovyjarjarantlr.collections.AST r7;
        groovyjarjarantlr.TreeParserSharedInputState $r10;

        r0 := @this: groovyjarjarantlr.TreeParser;

        r4 := @parameter0: java.lang.String;

        r7 := @parameter1: groovyjarjarantlr.collections.AST;

        virtualinvoke r0.<groovyjarjarantlr.TreeParser: void traceIndent()>();

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("< ");

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        if r7 == null goto label1;

        $r13 = virtualinvoke r7.<java.lang.Object: java.lang.String toString()>();

        goto label2;

     label1:
        $r13 = "null";

     label2:
        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r10 = r0.<groovyjarjarantlr.TreeParser: groovyjarjarantlr.TreeParserSharedInputState inputState>;

        $i0 = $r10.<groovyjarjarantlr.TreeParserSharedInputState: int guessing>;

        if $i0 <= 0 goto label3;

        $r14 = " [guessing]";

        goto label4;

     label3:
        $r14 = "";

     label4:
        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r12);

        $i1 = r0.<groovyjarjarantlr.TreeParser: int traceDepth>;

        $i2 = $i1 - 1;

        r0.<groovyjarjarantlr.TreeParser: int traceDepth> = $i2;

        return;
    }

    static void <clinit>()
    {
        groovyjarjarantlr.ASTNULLType $r0;

        $r0 = new groovyjarjarantlr.ASTNULLType;

        specialinvoke $r0.<groovyjarjarantlr.ASTNULLType: void <init>()>();

        <groovyjarjarantlr.TreeParser: groovyjarjarantlr.ASTNULLType ASTNULL> = $r0;

        return;
    }
}
