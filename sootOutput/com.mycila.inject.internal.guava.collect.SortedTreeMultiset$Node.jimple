final class com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node extends com.mycila.inject.internal.guava.collect.BstNode
{
    private final int elemOccurrences;
    private final int size;
    private final int distinct;
    final com.mycila.inject.internal.guava.collect.SortedTreeMultiset this$0;

    private void <init>(com.mycila.inject.internal.guava.collect.SortedTreeMultiset, java.lang.Object, int, com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node, com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node)
    {
        com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node r0, r4, r5;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;
        com.mycila.inject.internal.guava.collect.SortedTreeMultiset r1;
        java.lang.Object r2, $r3;

        r0 := @this: com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.SortedTreeMultiset;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        r4 := @parameter3: com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node;

        r5 := @parameter4: com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node;

        r0.<com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node: com.mycila.inject.internal.guava.collect.SortedTreeMultiset this$0> = r1;

        $r3 = virtualinvoke r1.<com.mycila.inject.internal.guava.collect.SortedTreeMultiset: java.lang.Object checkElement(java.lang.Object)>(r2);

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.BstNode: void <init>(java.lang.Object,com.mycila.inject.internal.guava.collect.BstNode,com.mycila.inject.internal.guava.collect.BstNode)>($r3, r4, r5);

        if i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: void checkArgument(boolean)>($z0);

        r0.<com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node: int elemOccurrences> = i0;

        $i1 = staticinvoke <com.mycila.inject.internal.guava.collect.SortedTreeMultiset: int access$600(com.mycila.inject.internal.guava.collect.SortedTreeMultiset,com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node)>(r1, r4);

        $i2 = i0 + $i1;

        $i3 = staticinvoke <com.mycila.inject.internal.guava.collect.SortedTreeMultiset: int access$600(com.mycila.inject.internal.guava.collect.SortedTreeMultiset,com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node)>(r1, r5);

        $i4 = $i2 + $i3;

        r0.<com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node: int size> = $i4;

        $i5 = staticinvoke <com.mycila.inject.internal.guava.collect.SortedTreeMultiset: int access$700(com.mycila.inject.internal.guava.collect.SortedTreeMultiset,com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node)>(r1, r4);

        $i6 = 1 + $i5;

        $i7 = staticinvoke <com.mycila.inject.internal.guava.collect.SortedTreeMultiset: int access$700(com.mycila.inject.internal.guava.collect.SortedTreeMultiset,com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node)>(r1, r5);

        $i8 = $i6 + $i7;

        r0.<com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node: int distinct> = $i8;

        return;
    }

    private void <init>(com.mycila.inject.internal.guava.collect.SortedTreeMultiset, java.lang.Object, int)
    {
        com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node r0;
        int i0;
        com.mycila.inject.internal.guava.collect.SortedTreeMultiset r1;
        java.lang.Object r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.SortedTreeMultiset;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node: void <init>(com.mycila.inject.internal.guava.collect.SortedTreeMultiset,java.lang.Object,int,com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node,com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node)>(r1, r2, i0, null, null);

        return;
    }

    static int access$000(com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node)
    {
        int $i0;
        com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node r0;

        r0 := @parameter0: com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node;

        $i0 = r0.<com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node: int elemOccurrences>;

        return $i0;
    }

    static int access$800(com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node)
    {
        int $i0;
        com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node r0;

        r0 := @parameter0: com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node;

        $i0 = r0.<com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node: int size>;

        return $i0;
    }

    static int access$900(com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node)
    {
        int $i0;
        com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node r0;

        r0 := @parameter0: com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node;

        $i0 = r0.<com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node: int distinct>;

        return $i0;
    }

    void <init>(com.mycila.inject.internal.guava.collect.SortedTreeMultiset, java.lang.Object, int, com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node, com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node, com.mycila.inject.internal.guava.collect.SortedTreeMultiset$1)
    {
        com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node r0, r3, r4;
        int i0;
        com.mycila.inject.internal.guava.collect.SortedTreeMultiset r1;
        java.lang.Object r2;
        com.mycila.inject.internal.guava.collect.SortedTreeMultiset$1 r5;

        r0 := @this: com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.SortedTreeMultiset;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        r3 := @parameter3: com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node;

        r4 := @parameter4: com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node;

        r5 := @parameter5: com.mycila.inject.internal.guava.collect.SortedTreeMultiset$1;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node: void <init>(com.mycila.inject.internal.guava.collect.SortedTreeMultiset,java.lang.Object,int,com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node,com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node)>(r1, r2, i0, r3, r4);

        return;
    }

    void <init>(com.mycila.inject.internal.guava.collect.SortedTreeMultiset, java.lang.Object, int, com.mycila.inject.internal.guava.collect.SortedTreeMultiset$1)
    {
        com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node r0;
        int i0;
        com.mycila.inject.internal.guava.collect.SortedTreeMultiset r1;
        java.lang.Object r2;
        com.mycila.inject.internal.guava.collect.SortedTreeMultiset$1 r3;

        r0 := @this: com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.SortedTreeMultiset;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        r3 := @parameter3: com.mycila.inject.internal.guava.collect.SortedTreeMultiset$1;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.SortedTreeMultiset$Node: void <init>(com.mycila.inject.internal.guava.collect.SortedTreeMultiset,java.lang.Object,int)>(r1, r2, i0);

        return;
    }
}
