public class org.apache.poi.hwpf.model.CHPBinTable extends java.lang.Object
{
    private static final org.apache.poi.util.POILogger logger;
    protected java.util.ArrayList _textRuns;

    public void <init>()
    {
        org.apache.poi.hwpf.model.CHPBinTable r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.poi.hwpf.model.CHPBinTable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns> = $r1;

        return;
    }

    public void <init>(byte[], byte[], int, int, int, org.apache.poi.hwpf.model.TextPieceTable)
    {
        org.apache.poi.hwpf.model.CHPBinTable r0;
        byte[] r1, r2;
        org.apache.poi.hwpf.model.TextPieceTable r3;
        int i0, i1, i2;

        r0 := @this: org.apache.poi.hwpf.model.CHPBinTable;

        r1 := @parameter0: byte[];

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r3 := @parameter5: org.apache.poi.hwpf.model.TextPieceTable;

        specialinvoke r0.<org.apache.poi.hwpf.model.CHPBinTable: void <init>(byte[],byte[],int,int,org.apache.poi.hwpf.model.CharIndexTranslator)>(r1, r2, i0, i1, r3);

        return;
    }

    public void <init>(byte[], byte[], int, int, org.apache.poi.hwpf.model.CharIndexTranslator)
    {
        byte[] r3, $r14, r16;
        java.lang.Integer $r7;
        java.lang.Long $r5;
        boolean $z0, $z1;
        org.apache.poi.util.POILogger $r4, $r9;
        java.util.List $r18;
        org.apache.poi.hwpf.model.CharIndexTranslator r17;
        org.apache.poi.hwpf.model.PlexOfCps $r2;
        org.apache.poi.hwpf.sprm.SprmBuffer $r11;
        org.apache.poi.hwpf.model.CHPX $r10, r21;
        long $l0, $l4, $l5;
        java.util.ArrayList $r1, $r6, $r8, $r12, $r22;
        org.apache.poi.hwpf.model.CHPBinTable r0;
        int i1, i2, $i3, $i6, $i7, i8, i9;
        java.util.Iterator $r19;
        org.apache.poi.hwpf.model.GenericPropertyNode $r13;
        org.apache.poi.hwpf.model.CHPFormattedDiskPage $r15;
        java.lang.Object $r20;

        r0 := @this: org.apache.poi.hwpf.model.CHPBinTable;

        r16 := @parameter0: byte[];

        r3 := @parameter1: byte[];

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r17 := @parameter4: org.apache.poi.hwpf.model.CharIndexTranslator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns> = $r1;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r2 = new org.apache.poi.hwpf.model.PlexOfCps;

        specialinvoke $r2.<org.apache.poi.hwpf.model.PlexOfCps: void <init>(byte[],int,int,int)>(r3, i1, i2, 4);

        $i3 = virtualinvoke $r2.<org.apache.poi.hwpf.model.PlexOfCps: int length()>();

        i9 = 0;

     label1:
        if i9 >= $i3 goto label5;

        $r13 = virtualinvoke $r2.<org.apache.poi.hwpf.model.PlexOfCps: org.apache.poi.hwpf.model.GenericPropertyNode getProperty(int)>(i9);

        $r14 = virtualinvoke $r13.<org.apache.poi.hwpf.model.GenericPropertyNode: byte[] getBytes()>();

        $i7 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[])>($r14);

        i8 = 512 * $i7;

        $r15 = new org.apache.poi.hwpf.model.CHPFormattedDiskPage;

        specialinvoke $r15.<org.apache.poi.hwpf.model.CHPFormattedDiskPage: void <init>(byte[],int,org.apache.poi.hwpf.model.CharIndexTranslator)>(r16, i8, r17);

        $r18 = virtualinvoke $r15.<org.apache.poi.hwpf.model.CHPFormattedDiskPage: java.util.List getCHPXs()>();

        $r19 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r21 = (org.apache.poi.hwpf.model.CHPX) $r20;

        if r21 == null goto label3;

        $r22 = r0.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns>;

        virtualinvoke $r22.<java.util.ArrayList: boolean add(java.lang.Object)>(r21);

     label3:
        goto label2;

     label4:
        i9 = i9 + 1;

        goto label1;

     label5:
        $r4 = <org.apache.poi.hwpf.model.CHPBinTable: org.apache.poi.util.POILogger logger>;

        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l5 = $l4 - $l0;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        $r6 = r0.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns>;

        $i6 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        virtualinvoke $r4.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(1, "CHPX FKPs loaded in ", $r5, " ms (", $r7, " elements)");

        $r8 = r0.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns>;

        $z0 = virtualinvoke $r8.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label6;

        $r9 = <org.apache.poi.hwpf.model.CHPBinTable: org.apache.poi.util.POILogger logger>;

        virtualinvoke $r9.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, "CHPX FKPs are empty");

        $r12 = r0.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns>;

        $r10 = new org.apache.poi.hwpf.model.CHPX;

        $r11 = new org.apache.poi.hwpf.sprm.SprmBuffer;

        specialinvoke $r11.<org.apache.poi.hwpf.sprm.SprmBuffer: void <init>(int)>(0);

        specialinvoke $r10.<org.apache.poi.hwpf.model.CHPX: void <init>(int,int,org.apache.poi.hwpf.sprm.SprmBuffer)>(0, 0, $r11);

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

     label6:
        return;
    }

    public void rebuild(org.apache.poi.hwpf.model.ComplexFileTable)
    {
        byte[] $r34, $r35, $r40;
        java.lang.Integer $r16, $r26, $r32, $r43, $r44, $r51, $r52, $r54, $r62, r83;
        java.lang.CloneNotSupportedException $r76;
        java.lang.Long $r6, $r12, $r19, $r24, $r30, $r60;
        org.apache.poi.hwpf.sprm.SprmIterator $r71;
        java.lang.StringBuilder $r68, $r69, $r91;
        long $l0, $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l13, $l14, $l15, $l37, $l38, l45;
        short $s40;
        org.apache.poi.hwpf.model.TextPiece r78;
        org.apache.poi.hwpf.model.PropertyModifier $r65;
        org.apache.poi.util.POILogger $r5, $r11, $r18, $r23, $r29, $r42, $r59, $r67;
        org.apache.poi.hwpf.sprm.SprmBuffer r79, r80, $r101, $r103;
        java.util.HashSet $r97;
        org.apache.poi.hwpf.model.CHPBinTable r2;
        int $i12, $i16, $i17, $i18, $i19, $i20, i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i39, $i41, $i42, $i43, $i44, i46, i47, i48, i49, $i50, $i51, $i52, $i53, $i55, $i57;
        java.util.LinkedList $r99, $r100;
        org.apache.poi.hwpf.model.ComplexFileTable r0;
        java.lang.Object $r33, $r36, $r39, $r41, $r47, $r48, $r50, $r53, $r63, $r72;
        org.apache.poi.hwpf.sprm.SprmOperation $r75;
        org.apache.poi.hwpf.model.PropertyNode$StartComparator $r4;
        org.apache.poi.hwpf.model.CHPBinTable$1 $r96;
        java.lang.Error $r92;
        java.util.ArrayList $r3, $r8, $r14, $r25, $r27, $r31, $r61, $r74, $r94, $r98, $r105;
        java.lang.String $r70;
        boolean $z0, $z1, $z2, $z3, $z4, z5, $z6, $z7, $z8, $z9;
        java.util.IdentityHashMap $r95;
        org.apache.poi.hwpf.sprm.SprmBuffer[] $r55;
        java.util.List $r57;
        org.apache.poi.hwpf.model.TextPieceTable $r56;
        org.apache.poi.hwpf.model.CHPX $r49, r81, r82, r84, r85, r88, r89, r90, $r93, $r102, $r104;
        org.apache.poi.hwpf.model.PieceDescriptor $r64;
        java.util.Iterator $r9, $r15, $r21, $r28, $r58, $r87;

        r2 := @this: org.apache.poi.hwpf.model.CHPBinTable;

        r0 := @parameter0: org.apache.poi.hwpf.model.ComplexFileTable;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l45 = $l0;

        if r0 == null goto label14;

        $r55 = virtualinvoke r0.<org.apache.poi.hwpf.model.ComplexFileTable: org.apache.poi.hwpf.sprm.SprmBuffer[] getGrpprls()>();

        $r56 = virtualinvoke r0.<org.apache.poi.hwpf.model.ComplexFileTable: org.apache.poi.hwpf.model.TextPieceTable getTextPieceTable()>();

        $r57 = virtualinvoke $r56.<org.apache.poi.hwpf.model.TextPieceTable: java.util.List getTextPieces()>();

        $r58 = interfaceinvoke $r57.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z4 = interfaceinvoke $r58.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label13;

        $r63 = interfaceinvoke $r58.<java.util.Iterator: java.lang.Object next()>();

        r78 = (org.apache.poi.hwpf.model.TextPiece) $r63;

        $r64 = virtualinvoke r78.<org.apache.poi.hwpf.model.TextPiece: org.apache.poi.hwpf.model.PieceDescriptor getPieceDescriptor()>();

        $r65 = virtualinvoke $r64.<org.apache.poi.hwpf.model.PieceDescriptor: org.apache.poi.hwpf.model.PropertyModifier getPrm()>();

        $z2 = virtualinvoke $r65.<org.apache.poi.hwpf.model.PropertyModifier: boolean isComplex()>();

        if $z2 != 0 goto label02;

        goto label01;

     label02:
        $s40 = virtualinvoke $r65.<org.apache.poi.hwpf.model.PropertyModifier: short getIgrpprl()>();

        $i51 = (int) $s40;

        if $i51 < 0 goto label03;

        $i41 = lengthof $r55;

        $i52 = (int) $s40;

        if $i52 < $i41 goto label04;

     label03:
        $r67 = <org.apache.poi.hwpf.model.CHPBinTable: org.apache.poi.util.POILogger logger>;

        $r91 = new java.lang.StringBuilder;

        specialinvoke $r91.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r78);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'s PRM references to unknown grpprl");

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r67.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, $r70);

        goto label01;

     label04:
        z5 = 0;

        $i53 = (int) $s40;

        r79 = $r55[$i53];

        $r71 = virtualinvoke r79.<org.apache.poi.hwpf.sprm.SprmBuffer: org.apache.poi.hwpf.sprm.SprmIterator iterator()>();

     label05:
        $z3 = virtualinvoke $r71.<org.apache.poi.hwpf.sprm.SprmIterator: boolean hasNext()>();

        if $z3 == 0 goto label07;

        $r75 = virtualinvoke $r71.<org.apache.poi.hwpf.sprm.SprmIterator: org.apache.poi.hwpf.sprm.SprmOperation next()>();

        $i44 = virtualinvoke $r75.<org.apache.poi.hwpf.sprm.SprmOperation: int getType()>();

        if $i44 != 2 goto label06;

        z5 = 1;

        goto label07;

     label06:
        goto label05;

     label07:
        if z5 == 0 goto label12;

     label08:
        $r72 = virtualinvoke r79.<org.apache.poi.hwpf.sprm.SprmBuffer: java.lang.Object clone()>();

        r80 = (org.apache.poi.hwpf.sprm.SprmBuffer) $r72;

     label09:
        goto label11;

     label10:
        $r76 := @caughtexception;

        $r92 = new java.lang.Error;

        specialinvoke $r92.<java.lang.Error: void <init>(java.lang.Throwable)>($r76);

        throw $r92;

     label11:
        $r93 = new org.apache.poi.hwpf.model.CHPX;

        $i42 = virtualinvoke r78.<org.apache.poi.hwpf.model.TextPiece: int getStart()>();

        $i43 = virtualinvoke r78.<org.apache.poi.hwpf.model.TextPiece: int getEnd()>();

        specialinvoke $r93.<org.apache.poi.hwpf.model.CHPX: void <init>(int,int,org.apache.poi.hwpf.sprm.SprmBuffer)>($i42, $i43, r80);

        $r74 = r2.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns>;

        virtualinvoke $r74.<java.util.ArrayList: boolean add(java.lang.Object)>($r93);

     label12:
        goto label01;

     label13:
        $r59 = <org.apache.poi.hwpf.model.CHPBinTable: org.apache.poi.util.POILogger logger>;

        $l37 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l38 = $l37 - $l0;

        $r60 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l38);

        $r61 = r2.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns>;

        $i39 = virtualinvoke $r61.<java.util.ArrayList: int size()>();

        $r62 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i39);

        virtualinvoke $r59.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(1, "Merged with CHPX from complex file table in ", $r60, " ms (", $r62, " elements in total)");

        l45 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label14:
        $r94 = new java.util.ArrayList;

        $r3 = r2.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns>;

        specialinvoke $r94.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        $r4 = <org.apache.poi.hwpf.model.PropertyNode$StartComparator: org.apache.poi.hwpf.model.PropertyNode$StartComparator instance>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r94, $r4);

        $r5 = <org.apache.poi.hwpf.model.CHPBinTable: org.apache.poi.util.POILogger logger>;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = $l1 - l45;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        virtualinvoke $r5.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Object,java.lang.Object)>(1, "CHPX sorted by start position in ", $r6, " ms");

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r95 = new java.util.IdentityHashMap;

        specialinvoke $r95.<java.util.IdentityHashMap: void <init>()>();

        i46 = 0;

        $r8 = r2.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label15:
        $z6 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label16;

        $r53 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r81 = (org.apache.poi.hwpf.model.CHPX) $r53;

        $i36 = i46;

        i46 = i46 + 1;

        $r54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i36);

        interfaceinvoke $r95.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r81, $r54);

        goto label15;

     label16:
        $r96 = new org.apache.poi.hwpf.model.CHPBinTable$1;

        specialinvoke $r96.<org.apache.poi.hwpf.model.CHPBinTable$1: void <init>(org.apache.poi.hwpf.model.CHPBinTable,java.util.Map)>(r2, $r95);

        $r11 = <org.apache.poi.hwpf.model.CHPBinTable: org.apache.poi.util.POILogger logger>;

        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l5 = $l4 - $l3;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        virtualinvoke $r11.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Object,java.lang.Object)>(1, "CHPX\'s order map created in ", $r12, " ms");

        $l6 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r97 = new java.util.HashSet;

        specialinvoke $r97.<java.util.HashSet: void <init>()>();

        $r14 = r2.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns>;

        $r15 = virtualinvoke $r14.<java.util.ArrayList: java.util.Iterator iterator()>();

     label17:
        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label18;

        $r50 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r82 = (org.apache.poi.hwpf.model.CHPX) $r50;

        $i34 = virtualinvoke r82.<org.apache.poi.hwpf.model.CHPX: int getStart()>();

        $r51 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i34);

        interfaceinvoke $r97.<java.util.Set: boolean add(java.lang.Object)>($r51);

        $i35 = virtualinvoke r82.<org.apache.poi.hwpf.model.CHPX: int getEnd()>();

        $r52 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i35);

        interfaceinvoke $r97.<java.util.Set: boolean add(java.lang.Object)>($r52);

        goto label17;

     label18:
        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        interfaceinvoke $r97.<java.util.Set: boolean remove(java.lang.Object)>($r16);

        $r98 = new java.util.ArrayList;

        specialinvoke $r98.<java.util.ArrayList: void <init>(java.util.Collection)>($r97);

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r98);

        $r18 = <org.apache.poi.hwpf.model.CHPBinTable: org.apache.poi.util.POILogger logger>;

        $l7 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l8 = $l7 - $l6;

        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l8);

        virtualinvoke $r18.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Object,java.lang.Object)>(1, "Texts CHPX boundaries collected in ", $r19, " ms");

        $l9 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r99 = new java.util.LinkedList;

        specialinvoke $r99.<java.util.LinkedList: void <init>()>();

        i47 = 0;

        $r21 = interfaceinvoke $r98.<java.util.List: java.util.Iterator iterator()>();

     label19:
        $z7 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label31;

        $r36 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r83 = (java.lang.Integer) $r36;

        $i20 = virtualinvoke r83.<java.lang.Integer: int intValue()>();

        i21 = i47;

        i47 = $i20;

        $i22 = staticinvoke <org.apache.poi.hwpf.model.CHPBinTable: int binarySearch(java.util.List,int)>($r94, $i20);

        i48 = staticinvoke <java.lang.Math: int abs(int)>($i22);

     label20:
        $i23 = interfaceinvoke $r94.<java.util.List: int size()>();

        if i48 < $i23 goto label21;

        $i55 = (int) -1;

        i48 = i48 + $i55;

        goto label20;

     label21:
        if i48 <= 0 goto label22;

        $r48 = interfaceinvoke $r94.<java.util.List: java.lang.Object get(int)>(i48);

        $r49 = (org.apache.poi.hwpf.model.CHPX) $r48;

        $i33 = virtualinvoke $r49.<org.apache.poi.hwpf.model.CHPX: int getStart()>();

        if $i33 < $i20 goto label22;

        $i57 = (int) -1;

        i48 = i48 + $i57;

        goto label21;

     label22:
        $r100 = new java.util.LinkedList;

        specialinvoke $r100.<java.util.LinkedList: void <init>()>();

        i49 = i48;

     label23:
        $i50 = interfaceinvoke $r94.<java.util.List: int size()>();

        if i49 >= $i50 goto label26;

        $r47 = interfaceinvoke $r94.<java.util.List: java.lang.Object get(int)>(i49);

        r84 = (org.apache.poi.hwpf.model.CHPX) $r47;

        $i28 = virtualinvoke r84.<org.apache.poi.hwpf.model.CHPX: int getStart()>();

        if $i20 >= $i28 goto label24;

        goto label26;

     label24:
        $i29 = virtualinvoke r84.<org.apache.poi.hwpf.model.CHPX: int getStart()>();

        $i30 = staticinvoke <java.lang.Math: int max(int,int)>(i21, $i29);

        $i31 = virtualinvoke r84.<org.apache.poi.hwpf.model.CHPX: int getEnd()>();

        $i32 = staticinvoke <java.lang.Math: int min(int,int)>($i20, $i31);

        if $i30 >= $i32 goto label25;

        interfaceinvoke $r100.<java.util.List: boolean add(java.lang.Object)>(r84);

     label25:
        i49 = i49 + 1;

        goto label23;

     label26:
        $i24 = interfaceinvoke $r100.<java.util.List: int size()>();

        if $i24 != 0 goto label27;

        $r42 = <org.apache.poi.hwpf.model.CHPBinTable: org.apache.poi.util.POILogger logger>;

        $r43 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i21);

        $r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i20);

        virtualinvoke $r42.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(5, "Text piece [", $r43, "; ", $r44, ") has no CHPX. Creating new one.");

        $r102 = new org.apache.poi.hwpf.model.CHPX;

        $r101 = new org.apache.poi.hwpf.sprm.SprmBuffer;

        specialinvoke $r101.<org.apache.poi.hwpf.sprm.SprmBuffer: void <init>(int)>(0);

        specialinvoke $r102.<org.apache.poi.hwpf.model.CHPX: void <init>(int,int,org.apache.poi.hwpf.sprm.SprmBuffer)>(i21, $i20, $r101);

        interfaceinvoke $r99.<java.util.List: boolean add(java.lang.Object)>($r102);

        goto label19;

     label27:
        $i25 = interfaceinvoke $r100.<java.util.List: int size()>();

        if $i25 != 1 goto label28;

        $r41 = interfaceinvoke $r100.<java.util.List: java.lang.Object get(int)>(0);

        r85 = (org.apache.poi.hwpf.model.CHPX) $r41;

        $i26 = virtualinvoke r85.<org.apache.poi.hwpf.model.CHPX: int getStart()>();

        if $i26 != i21 goto label28;

        $i27 = virtualinvoke r85.<org.apache.poi.hwpf.model.CHPX: int getEnd()>();

        if $i27 != $i20 goto label28;

        interfaceinvoke $r99.<java.util.List: boolean add(java.lang.Object)>(r85);

        goto label19;

     label28:
        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r100, $r96);

        $r103 = new org.apache.poi.hwpf.sprm.SprmBuffer;

        specialinvoke $r103.<org.apache.poi.hwpf.sprm.SprmBuffer: void <init>(int)>(0);

        $r87 = interfaceinvoke $r100.<java.util.List: java.util.Iterator iterator()>();

     label29:
        $z8 = interfaceinvoke $r87.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label30;

        $r39 = interfaceinvoke $r87.<java.util.Iterator: java.lang.Object next()>();

        r88 = (org.apache.poi.hwpf.model.CHPX) $r39;

        $r40 = virtualinvoke r88.<org.apache.poi.hwpf.model.CHPX: byte[] getGrpprl()>();

        virtualinvoke $r103.<org.apache.poi.hwpf.sprm.SprmBuffer: void append(byte[],int)>($r40, 0);

        goto label29;

     label30:
        $r104 = new org.apache.poi.hwpf.model.CHPX;

        specialinvoke $r104.<org.apache.poi.hwpf.model.CHPX: void <init>(int,int,org.apache.poi.hwpf.sprm.SprmBuffer)>(i21, $i20, $r103);

        interfaceinvoke $r99.<java.util.List: boolean add(java.lang.Object)>($r104);

        goto label19;

     label31:
        $r105 = new java.util.ArrayList;

        specialinvoke $r105.<java.util.ArrayList: void <init>(java.util.Collection)>($r99);

        r2.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns> = $r105;

        $r23 = <org.apache.poi.hwpf.model.CHPBinTable: org.apache.poi.util.POILogger logger>;

        $l10 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l11 = $l10 - $l9;

        $r24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l11);

        $r25 = r2.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns>;

        $i12 = virtualinvoke $r25.<java.util.ArrayList: int size()>();

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        virtualinvoke $r23.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(1, "CHPX rebuilded in ", $r24, " ms (", $r26, " elements)");

        $l13 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r89 = null;

        $r27 = r2.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns>;

        $r28 = virtualinvoke $r27.<java.util.ArrayList: java.util.Iterator iterator()>();

     label32:
        $z9 = interfaceinvoke $r28.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label35;

        $r33 = interfaceinvoke $r28.<java.util.Iterator: java.lang.Object next()>();

        r90 = (org.apache.poi.hwpf.model.CHPX) $r33;

        if r89 != null goto label33;

        r89 = r90;

        goto label32;

     label33:
        $i17 = virtualinvoke r89.<org.apache.poi.hwpf.model.CHPX: int getEnd()>();

        $i18 = virtualinvoke r90.<org.apache.poi.hwpf.model.CHPX: int getStart()>();

        if $i17 != $i18 goto label34;

        $r34 = virtualinvoke r89.<org.apache.poi.hwpf.model.CHPX: byte[] getGrpprl()>();

        $r35 = virtualinvoke r90.<org.apache.poi.hwpf.model.CHPX: byte[] getGrpprl()>();

        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r34, $r35);

        if $z1 == 0 goto label34;

        $i19 = virtualinvoke r90.<org.apache.poi.hwpf.model.CHPX: int getEnd()>();

        virtualinvoke r89.<org.apache.poi.hwpf.model.CHPX: void setEnd(int)>($i19);

        interfaceinvoke $r28.<java.util.Iterator: void remove()>();

        goto label32;

     label34:
        r89 = r90;

        goto label32;

     label35:
        $r29 = <org.apache.poi.hwpf.model.CHPBinTable: org.apache.poi.util.POILogger logger>;

        $l14 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l15 = $l14 - $l13;

        $r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l15);

        $r31 = r2.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns>;

        $i16 = virtualinvoke $r31.<java.util.ArrayList: int size()>();

        $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i16);

        virtualinvoke $r29.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(1, "CHPX compacted in ", $r30, " ms (", $r32, " elements)");

        return;

        catch java.lang.CloneNotSupportedException from label08 to label09 with label10;
    }

    private static int binarySearch(java.util.List, int)
    {
        org.apache.poi.hwpf.model.CHPX r2;
        java.util.List r0;
        int $i0, $i1, $i2, $i3, i4, $i5, i6, i7, i8;
        java.lang.Object $r1;

        r0 := @parameter0: java.util.List;

        i6 := @parameter1: int;

        i7 = 0;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        i8 = $i0 - 1;

     label1:
        if i7 > i8 goto label5;

        $i3 = i7 + i8;

        i4 = $i3 >>> 1;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i4);

        r2 = (org.apache.poi.hwpf.model.CHPX) $r1;

        $i5 = virtualinvoke r2.<org.apache.poi.hwpf.model.CHPX: int getStart()>();

        if $i5 >= i6 goto label2;

        i7 = i4 + 1;

        goto label4;

     label2:
        if $i5 <= i6 goto label3;

        i8 = i4 - 1;

        goto label4;

     label3:
        return i4;

     label4:
        goto label1;

     label5:
        $i1 = i7 + 1;

        $i2 = neg $i1;

        return $i2;
    }

    public void adjustForDelete(int, int, int)
    {
        org.apache.poi.hwpf.model.CHPX r16, r17, r18, r19, r20, r21;
        java.util.ArrayList $r1, $r2, $r4, $r6, $r8, $r10, $r12, $r14;
        org.apache.poi.hwpf.model.CHPBinTable r0;
        int $i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18;
        java.lang.Object $r3, $r5, $r7, $r9, $r11, $r13, $r15;

        r0 := @this: org.apache.poi.hwpf.model.CHPBinTable;

        i4 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i3 = i1 + i2;

        i16 = i4;

        $r2 = r0.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r16 = (org.apache.poi.hwpf.model.CHPX) $r3;

     label1:
        $i5 = virtualinvoke r16.<org.apache.poi.hwpf.model.CHPX: int getEnd()>();

        if $i5 >= i3 goto label2;

        $r14 = r0.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns>;

        i16 = i16 + 1;

        $r15 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object get(int)>(i16);

        r16 = (org.apache.poi.hwpf.model.CHPX) $r15;

        goto label1;

     label2:
        if i4 != i16 goto label3;

        $r12 = r0.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns>;

        $r13 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i16);

        r17 = (org.apache.poi.hwpf.model.CHPX) $r13;

        $i13 = virtualinvoke r17.<org.apache.poi.hwpf.model.CHPX: int getEnd()>();

        $i14 = $i13 - i3;

        $i15 = $i14 + i1;

        virtualinvoke r17.<org.apache.poi.hwpf.model.CHPX: void setEnd(int)>($i15);

        goto label6;

     label3:
        $r4 = r0.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r18 = (org.apache.poi.hwpf.model.CHPX) $r5;

        virtualinvoke r18.<org.apache.poi.hwpf.model.CHPX: void setEnd(int)>(i1);

        i17 = i4 + 1;

     label4:
        if i17 >= i16 goto label5;

        $r10 = r0.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i17);

        r19 = (org.apache.poi.hwpf.model.CHPX) $r11;

        virtualinvoke r19.<org.apache.poi.hwpf.model.CHPX: void setStart(int)>(i1);

        virtualinvoke r19.<org.apache.poi.hwpf.model.CHPX: void setEnd(int)>(i1);

        i17 = i17 + 1;

        goto label4;

     label5:
        $r6 = r0.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i16);

        r20 = (org.apache.poi.hwpf.model.CHPX) $r7;

        $i6 = virtualinvoke r20.<org.apache.poi.hwpf.model.CHPX: int getEnd()>();

        $i7 = $i6 - i3;

        $i8 = $i7 + i1;

        virtualinvoke r20.<org.apache.poi.hwpf.model.CHPX: void setEnd(int)>($i8);

     label6:
        i18 = i16 + 1;

     label7:
        if i18 >= $i0 goto label8;

        $r8 = r0.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i18);

        r21 = (org.apache.poi.hwpf.model.CHPX) $r9;

        $i9 = virtualinvoke r21.<org.apache.poi.hwpf.model.CHPX: int getStart()>();

        $i10 = $i9 - i2;

        virtualinvoke r21.<org.apache.poi.hwpf.model.CHPX: void setStart(int)>($i10);

        $i11 = virtualinvoke r21.<org.apache.poi.hwpf.model.CHPX: int getEnd()>();

        $i12 = $i11 - i2;

        virtualinvoke r21.<org.apache.poi.hwpf.model.CHPX: void setEnd(int)>($i12);

        i18 = i18 + 1;

        goto label7;

     label8:
        return;
    }

    public void insert(int, int, org.apache.poi.hwpf.sprm.SprmBuffer)
    {
        org.apache.poi.hwpf.sprm.SprmBuffer r1, $r9;
        org.apache.poi.hwpf.model.CHPX $r0, r6, $r8;
        java.util.ArrayList $r3, $r4, $r7, $r10, $r11, $r12;
        org.apache.poi.hwpf.model.CHPBinTable r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Object $r5;

        r2 := @this: org.apache.poi.hwpf.model.CHPBinTable;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r1 := @parameter2: org.apache.poi.hwpf.sprm.SprmBuffer;

        $r0 = new org.apache.poi.hwpf.model.CHPX;

        specialinvoke $r0.<org.apache.poi.hwpf.model.CHPX: void <init>(int,int,org.apache.poi.hwpf.sprm.SprmBuffer)>(0, 0, r1);

        virtualinvoke $r0.<org.apache.poi.hwpf.model.CHPX: void setStart(int)>(i0);

        virtualinvoke $r0.<org.apache.poi.hwpf.model.CHPX: void setEnd(int)>(i0);

        $r3 = r2.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns>;

        $i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i1 != $i2 goto label1;

        $r12 = r2.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns>;

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>($r0);

        goto label3;

     label1:
        $r4 = r2.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r6 = (org.apache.poi.hwpf.model.CHPX) $r5;

        $i3 = virtualinvoke r6.<org.apache.poi.hwpf.model.CHPX: int getStart()>();

        if $i3 >= i0 goto label2;

        $r8 = new org.apache.poi.hwpf.model.CHPX;

        $r9 = virtualinvoke r6.<org.apache.poi.hwpf.model.CHPX: org.apache.poi.hwpf.sprm.SprmBuffer getSprmBuf()>();

        specialinvoke $r8.<org.apache.poi.hwpf.model.CHPX: void <init>(int,int,org.apache.poi.hwpf.sprm.SprmBuffer)>(0, 0, $r9);

        virtualinvoke $r8.<org.apache.poi.hwpf.model.CHPX: void setStart(int)>(i0);

        $i4 = virtualinvoke r6.<org.apache.poi.hwpf.model.CHPX: int getEnd()>();

        virtualinvoke $r8.<org.apache.poi.hwpf.model.CHPX: void setEnd(int)>($i4);

        virtualinvoke r6.<org.apache.poi.hwpf.model.CHPX: void setEnd(int)>(i0);

        $r10 = r2.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns>;

        $i5 = i1 + 1;

        virtualinvoke $r10.<java.util.ArrayList: void add(int,java.lang.Object)>($i5, $r0);

        $r11 = r2.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns>;

        $i6 = i1 + 2;

        virtualinvoke $r11.<java.util.ArrayList: void add(int,java.lang.Object)>($i6, $r8);

        goto label3;

     label2:
        $r7 = r2.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns>;

        virtualinvoke $r7.<java.util.ArrayList: void add(int,java.lang.Object)>(i1, $r0);

     label3:
        return;
    }

    public void adjustForInsert(int, int)
    {
        org.apache.poi.hwpf.model.CHPX r6, r7;
        java.util.ArrayList $r1, $r2, $r4;
        org.apache.poi.hwpf.model.CHPBinTable r0;
        int $i0, i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, i9;
        java.lang.Object $r3, $r5;

        r0 := @this: org.apache.poi.hwpf.model.CHPBinTable;

        i1 := @parameter0: int;

        i3 := @parameter1: int;

        $r1 = r0.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $r2 = r0.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r6 = (org.apache.poi.hwpf.model.CHPX) $r3;

        $i2 = virtualinvoke r6.<org.apache.poi.hwpf.model.CHPX: int getEnd()>();

        $i4 = $i2 + i3;

        virtualinvoke r6.<org.apache.poi.hwpf.model.CHPX: void setEnd(int)>($i4);

        i9 = i1 + 1;

     label1:
        if i9 >= $i0 goto label2;

        $r4 = r0.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        r7 = (org.apache.poi.hwpf.model.CHPX) $r5;

        $i5 = virtualinvoke r7.<org.apache.poi.hwpf.model.CHPX: int getStart()>();

        $i6 = $i5 + i3;

        virtualinvoke r7.<org.apache.poi.hwpf.model.CHPX: void setStart(int)>($i6);

        $i7 = virtualinvoke r7.<org.apache.poi.hwpf.model.CHPX: int getEnd()>();

        $i8 = $i7 + i3;

        virtualinvoke r7.<org.apache.poi.hwpf.model.CHPX: void setEnd(int)>($i8);

        i9 = i9 + 1;

        goto label1;

     label2:
        return;
    }

    public java.util.List getTextRuns()
    {
        org.apache.poi.hwpf.model.CHPBinTable r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.poi.hwpf.model.CHPBinTable;

        $r1 = r0.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns>;

        return $r1;
    }

    public void writeTo(org.apache.poi.hwpf.model.io.HWPFFileSystem, int, org.apache.poi.hwpf.model.CharIndexTranslator) throws java.io.IOException
    {
        org.apache.poi.hwpf.model.CHPBinTable r3;
        int i0;
        org.apache.poi.hwpf.model.io.HWPFOutputStream $r1, $r2;
        org.apache.poi.hwpf.model.io.HWPFFileSystem r0;
        org.apache.poi.hwpf.model.CharIndexTranslator r4;

        r3 := @this: org.apache.poi.hwpf.model.CHPBinTable;

        r0 := @parameter0: org.apache.poi.hwpf.model.io.HWPFFileSystem;

        i0 := @parameter1: int;

        r4 := @parameter2: org.apache.poi.hwpf.model.CharIndexTranslator;

        $r1 = virtualinvoke r0.<org.apache.poi.hwpf.model.io.HWPFFileSystem: org.apache.poi.hwpf.model.io.HWPFOutputStream getStream(java.lang.String)>("WordDocument");

        $r2 = virtualinvoke r0.<org.apache.poi.hwpf.model.io.HWPFFileSystem: org.apache.poi.hwpf.model.io.HWPFOutputStream getStream(java.lang.String)>("1Table");

        virtualinvoke r3.<org.apache.poi.hwpf.model.CHPBinTable: void writeTo(org.apache.poi.hwpf.model.io.HWPFOutputStream,org.apache.poi.hwpf.model.io.HWPFOutputStream,int,org.apache.poi.hwpf.model.CharIndexTranslator)>($r1, $r2, i0, r4);

        return;
    }

    public void writeTo(org.apache.poi.hwpf.model.io.HWPFOutputStream, org.apache.poi.hwpf.model.io.HWPFOutputStream, int, org.apache.poi.hwpf.model.CharIndexTranslator) throws java.io.IOException
    {
        byte[] $r10, $r13, r14, $r19;
        org.apache.poi.hwpf.model.io.HWPFOutputStream r1, r9;
        org.apache.poi.hwpf.model.CharIndexTranslator r2;
        org.apache.poi.hwpf.model.PlexOfCps $r0;
        org.apache.poi.hwpf.model.CHPX $r7, $r12, $r17;
        java.util.ArrayList $r4, $r5, r15, $r20;
        org.apache.poi.hwpf.model.CHPBinTable r3;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, $i12, $i13, i14;
        org.apache.poi.hwpf.model.GenericPropertyNode $r8;
        org.apache.poi.hwpf.model.CHPFormattedDiskPage $r18;
        java.lang.Object $r6, $r11, $r16;

        r3 := @this: org.apache.poi.hwpf.model.CHPBinTable;

        r1 := @parameter0: org.apache.poi.hwpf.model.io.HWPFOutputStream;

        r9 := @parameter1: org.apache.poi.hwpf.model.io.HWPFOutputStream;

        i10 := @parameter2: int;

        r2 := @parameter3: org.apache.poi.hwpf.model.CharIndexTranslator;

        $r0 = new org.apache.poi.hwpf.model.PlexOfCps;

        specialinvoke $r0.<org.apache.poi.hwpf.model.PlexOfCps: void <init>(int)>(4);

        $i0 = virtualinvoke r1.<org.apache.poi.hwpf.model.io.HWPFOutputStream: int getOffset()>();

        i1 = $i0 % 512;

        if i1 == 0 goto label1;

        $i9 = 512 - i1;

        r14 = newarray (byte)[$i9];

        virtualinvoke r1.<org.apache.poi.hwpf.model.io.HWPFOutputStream: void write(byte[])>(r14);

     label1:
        $i2 = virtualinvoke r1.<org.apache.poi.hwpf.model.io.HWPFOutputStream: int getOffset()>();

        i11 = $i2 / 512;

        $r5 = r3.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns>;

        $r4 = r3.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns>;

        $i3 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i4 = $i3 - 1;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i4);

        $r7 = (org.apache.poi.hwpf.model.CHPX) $r6;

        $i5 = virtualinvoke $r7.<org.apache.poi.hwpf.model.CHPX: int getEnd()>();

        $i6 = interfaceinvoke r2.<org.apache.poi.hwpf.model.CharIndexTranslator: int getByteIndex(int)>($i5);

        r15 = r3.<org.apache.poi.hwpf.model.CHPBinTable: java.util.ArrayList _textRuns>;

     label2:
        $r16 = virtualinvoke r15.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r17 = (org.apache.poi.hwpf.model.CHPX) $r16;

        $i12 = virtualinvoke $r17.<org.apache.poi.hwpf.model.CHPX: int getStart()>();

        $i13 = interfaceinvoke r2.<org.apache.poi.hwpf.model.CharIndexTranslator: int getByteIndex(int)>($i12);

        $r18 = new org.apache.poi.hwpf.model.CHPFormattedDiskPage;

        specialinvoke $r18.<org.apache.poi.hwpf.model.CHPFormattedDiskPage: void <init>()>();

        virtualinvoke $r18.<org.apache.poi.hwpf.model.CHPFormattedDiskPage: void fill(java.util.List)>(r15);

        $r19 = virtualinvoke $r18.<org.apache.poi.hwpf.model.CHPFormattedDiskPage: byte[] toByteArray(org.apache.poi.hwpf.model.CharIndexTranslator)>(r2);

        virtualinvoke r1.<org.apache.poi.hwpf.model.io.HWPFOutputStream: void write(byte[])>($r19);

        $r20 = virtualinvoke $r18.<org.apache.poi.hwpf.model.CHPFormattedDiskPage: java.util.ArrayList getOverflow()>();

        r15 = $r20;

        i14 = $i6;

        if $r20 == null goto label3;

        $r11 = virtualinvoke $r20.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r12 = (org.apache.poi.hwpf.model.CHPX) $r11;

        $i8 = virtualinvoke $r12.<org.apache.poi.hwpf.model.CHPX: int getStart()>();

        i14 = interfaceinvoke r2.<org.apache.poi.hwpf.model.CharIndexTranslator: int getByteIndex(int)>($i8);

     label3:
        $r13 = newarray (byte)[4];

        $i7 = i11;

        i11 = i11 + 1;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int)>($r13, $i7);

        $r8 = new org.apache.poi.hwpf.model.GenericPropertyNode;

        specialinvoke $r8.<org.apache.poi.hwpf.model.GenericPropertyNode: void <init>(int,int,byte[])>($i13, i14, $r13);

        virtualinvoke $r0.<org.apache.poi.hwpf.model.PlexOfCps: void addProperty(org.apache.poi.hwpf.model.GenericPropertyNode)>($r8);

        if $r20 != null goto label2;

        $r10 = virtualinvoke $r0.<org.apache.poi.hwpf.model.PlexOfCps: byte[] toByteArray()>();

        virtualinvoke r9.<org.apache.poi.hwpf.model.io.HWPFOutputStream: void write(byte[])>($r10);

        return;
    }

    static void <clinit>()
    {
        org.apache.poi.util.POILogger $r0;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/hwpf/model/CHPBinTable;");

        <org.apache.poi.hwpf.model.CHPBinTable: org.apache.poi.util.POILogger logger> = $r0;

        return;
    }
}
