public class org.springframework.beans.factory.access.el.SimpleSpringBeanELResolver extends org.springframework.beans.factory.access.el.SpringBeanELResolver
{
    private final org.springframework.beans.factory.BeanFactory beanFactory;

    public void <init>(org.springframework.beans.factory.BeanFactory)
    {
        org.springframework.beans.factory.access.el.SimpleSpringBeanELResolver r0;
        org.springframework.beans.factory.BeanFactory r1;

        r0 := @this: org.springframework.beans.factory.access.el.SimpleSpringBeanELResolver;

        r1 := @parameter0: org.springframework.beans.factory.BeanFactory;

        specialinvoke r0.<org.springframework.beans.factory.access.el.SpringBeanELResolver: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "BeanFactory must not be null");

        r0.<org.springframework.beans.factory.access.el.SimpleSpringBeanELResolver: org.springframework.beans.factory.BeanFactory beanFactory> = r1;

        return;
    }

    protected org.springframework.beans.factory.BeanFactory getBeanFactory(javax.el.ELContext)
    {
        javax.el.ELContext r2;
        org.springframework.beans.factory.access.el.SimpleSpringBeanELResolver r0;
        org.springframework.beans.factory.BeanFactory $r1;

        r0 := @this: org.springframework.beans.factory.access.el.SimpleSpringBeanELResolver;

        r2 := @parameter0: javax.el.ELContext;

        $r1 = r0.<org.springframework.beans.factory.access.el.SimpleSpringBeanELResolver: org.springframework.beans.factory.BeanFactory beanFactory>;

        return $r1;
    }
}
