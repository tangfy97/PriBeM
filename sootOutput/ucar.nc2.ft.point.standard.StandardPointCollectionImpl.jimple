public class ucar.nc2.ft.point.standard.StandardPointCollectionImpl extends ucar.nc2.ft.point.PointCollectionImpl
{
    private ucar.nc2.units.DateUnit timeUnit;
    private ucar.nc2.ft.point.standard.NestedTable ft;

    void <init>(ucar.nc2.ft.point.standard.NestedTable, ucar.nc2.units.DateUnit)
    {
        ucar.nc2.units.DateUnit r3;
        ucar.nc2.ft.point.standard.StandardPointCollectionImpl r0;
        java.lang.String $r2;
        ucar.nc2.ft.point.standard.NestedTable r1;

        r0 := @this: ucar.nc2.ft.point.standard.StandardPointCollectionImpl;

        r1 := @parameter0: ucar.nc2.ft.point.standard.NestedTable;

        r3 := @parameter1: ucar.nc2.units.DateUnit;

        $r2 = virtualinvoke r1.<ucar.nc2.ft.point.standard.NestedTable: java.lang.String getName()>();

        specialinvoke r0.<ucar.nc2.ft.point.PointCollectionImpl: void <init>(java.lang.String)>($r2);

        r0.<ucar.nc2.ft.point.standard.StandardPointCollectionImpl: ucar.nc2.ft.point.standard.NestedTable ft> = r1;

        r0.<ucar.nc2.ft.point.standard.StandardPointCollectionImpl: ucar.nc2.units.DateUnit timeUnit> = r3;

        return;
    }

    public ucar.nc2.ft.PointFeatureIterator getPointFeatureIterator(int) throws java.io.IOException
    {
        ucar.nc2.ft.point.standard.StandardPointFeatureIterator $r3;
        ucar.ma2.StructureDataIterator $r7;
        ucar.nc2.units.DateUnit $r6;
        ucar.unidata.geoloc.LatLonRect $r8;
        ucar.nc2.units.DateRange $r9;
        int $i0, i1, $i2;
        ucar.nc2.ft.point.standard.Cursor $r0;
        ucar.nc2.ft.point.standard.StandardPointCollectionImpl r1;
        ucar.nc2.ft.point.standard.NestedTable $r2, $r4, $r5;

        r1 := @this: ucar.nc2.ft.point.standard.StandardPointCollectionImpl;

        i1 := @parameter0: int;

        $r0 = new ucar.nc2.ft.point.standard.Cursor;

        $r2 = r1.<ucar.nc2.ft.point.standard.StandardPointCollectionImpl: ucar.nc2.ft.point.standard.NestedTable ft>;

        $i0 = virtualinvoke $r2.<ucar.nc2.ft.point.standard.NestedTable: int getNumberOfLevels()>();

        specialinvoke $r0.<ucar.nc2.ft.point.standard.Cursor: void <init>(int)>($i0);

        $r3 = new ucar.nc2.ft.point.standard.StandardPointFeatureIterator;

        $r5 = r1.<ucar.nc2.ft.point.standard.StandardPointCollectionImpl: ucar.nc2.ft.point.standard.NestedTable ft>;

        $r6 = r1.<ucar.nc2.ft.point.standard.StandardPointCollectionImpl: ucar.nc2.units.DateUnit timeUnit>;

        $r4 = r1.<ucar.nc2.ft.point.standard.StandardPointCollectionImpl: ucar.nc2.ft.point.standard.NestedTable ft>;

        $r7 = virtualinvoke $r4.<ucar.nc2.ft.point.standard.NestedTable: ucar.ma2.StructureDataIterator getObsDataIterator(ucar.nc2.ft.point.standard.Cursor,int)>($r0, i1);

        specialinvoke $r3.<ucar.nc2.ft.point.standard.StandardPointFeatureIterator: void <init>(ucar.nc2.ft.point.standard.NestedTable,ucar.nc2.units.DateUnit,ucar.ma2.StructureDataIterator,ucar.nc2.ft.point.standard.Cursor)>($r5, $r6, $r7, $r0);

        $r8 = r1.<ucar.nc2.ft.point.standard.StandardPointCollectionImpl: ucar.unidata.geoloc.LatLonRect boundingBox>;

        if $r8 == null goto label1;

        $r9 = r1.<ucar.nc2.ft.point.standard.StandardPointCollectionImpl: ucar.nc2.units.DateRange dateRange>;

        if $r9 == null goto label1;

        $i2 = r1.<ucar.nc2.ft.point.standard.StandardPointCollectionImpl: int npts>;

        if $i2 >= 0 goto label2;

     label1:
        interfaceinvoke $r3.<ucar.nc2.ft.PointFeatureIterator: void setCalculateBounds(ucar.nc2.ft.PointFeatureCollection)>(r1);

     label2:
        return $r3;
    }
}
