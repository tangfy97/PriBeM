public class org.jdesktop.swingx.decorator.PainterHighlighter extends org.jdesktop.swingx.decorator.AbstractHighlighter
{
    private org.jdesktop.swingx.painter.Painter painter;
    private java.beans.PropertyChangeListener painterListener;
    private boolean isAdjusting;

    public void <init>()
    {
        org.jdesktop.swingx.decorator.PainterHighlighter r0;

        r0 := @this: org.jdesktop.swingx.decorator.PainterHighlighter;

        specialinvoke r0.<org.jdesktop.swingx.decorator.PainterHighlighter: void <init>(org.jdesktop.swingx.decorator.HighlightPredicate,org.jdesktop.swingx.painter.Painter)>(null, null);

        return;
    }

    public void <init>(org.jdesktop.swingx.decorator.HighlightPredicate)
    {
        org.jdesktop.swingx.decorator.PainterHighlighter r0;
        org.jdesktop.swingx.decorator.HighlightPredicate r1;

        r0 := @this: org.jdesktop.swingx.decorator.PainterHighlighter;

        r1 := @parameter0: org.jdesktop.swingx.decorator.HighlightPredicate;

        specialinvoke r0.<org.jdesktop.swingx.decorator.PainterHighlighter: void <init>(org.jdesktop.swingx.decorator.HighlightPredicate,org.jdesktop.swingx.painter.Painter)>(r1, null);

        return;
    }

    public void <init>(org.jdesktop.swingx.painter.Painter)
    {
        org.jdesktop.swingx.decorator.PainterHighlighter r0;
        org.jdesktop.swingx.painter.Painter r1;

        r0 := @this: org.jdesktop.swingx.decorator.PainterHighlighter;

        r1 := @parameter0: org.jdesktop.swingx.painter.Painter;

        specialinvoke r0.<org.jdesktop.swingx.decorator.PainterHighlighter: void <init>(org.jdesktop.swingx.decorator.HighlightPredicate,org.jdesktop.swingx.painter.Painter)>(null, r1);

        return;
    }

    public void <init>(org.jdesktop.swingx.decorator.HighlightPredicate, org.jdesktop.swingx.painter.Painter)
    {
        org.jdesktop.swingx.decorator.PainterHighlighter r0;
        org.jdesktop.swingx.decorator.HighlightPredicate r1;
        org.jdesktop.swingx.painter.Painter r2;

        r0 := @this: org.jdesktop.swingx.decorator.PainterHighlighter;

        r1 := @parameter0: org.jdesktop.swingx.decorator.HighlightPredicate;

        r2 := @parameter1: org.jdesktop.swingx.painter.Painter;

        specialinvoke r0.<org.jdesktop.swingx.decorator.AbstractHighlighter: void <init>(org.jdesktop.swingx.decorator.HighlightPredicate)>(r1);

        virtualinvoke r0.<org.jdesktop.swingx.decorator.PainterHighlighter: void setPainter(org.jdesktop.swingx.painter.Painter)>(r2);

        return;
    }

    public org.jdesktop.swingx.painter.Painter getPainter()
    {
        org.jdesktop.swingx.decorator.PainterHighlighter r0;
        org.jdesktop.swingx.painter.Painter $r1;

        r0 := @this: org.jdesktop.swingx.decorator.PainterHighlighter;

        $r1 = r0.<org.jdesktop.swingx.decorator.PainterHighlighter: org.jdesktop.swingx.painter.Painter painter>;

        return $r1;
    }

    public void setPainter(org.jdesktop.swingx.painter.Painter)
    {
        org.jdesktop.swingx.decorator.PainterHighlighter r0;
        org.jdesktop.swingx.painter.Painter r1, $r2;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.decorator.PainterHighlighter;

        r1 := @parameter0: org.jdesktop.swingx.painter.Painter;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.decorator.PainterHighlighter: org.jdesktop.swingx.painter.Painter getPainter()>();

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.decorator.PainterHighlighter: boolean areEqual(java.lang.Object,java.lang.Object)>(r1, $r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<org.jdesktop.swingx.decorator.PainterHighlighter: void uninstallPainterListener()>();

        r0.<org.jdesktop.swingx.decorator.PainterHighlighter: org.jdesktop.swingx.painter.Painter painter> = r1;

        virtualinvoke r0.<org.jdesktop.swingx.decorator.PainterHighlighter: void installPainterListener()>();

        virtualinvoke r0.<org.jdesktop.swingx.decorator.PainterHighlighter: void fireStateChanged()>();

        return;
    }

    protected void installPainterListener()
    {
        org.jdesktop.swingx.decorator.PainterHighlighter r0;
        java.beans.PropertyChangeListener $r4;
        org.jdesktop.swingx.painter.Painter $r1, $r2;
        org.jdesktop.swingx.painter.AbstractPainter $r3;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.decorator.PainterHighlighter;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.decorator.PainterHighlighter: org.jdesktop.swingx.painter.Painter getPainter()>();

        $z0 = $r1 instanceof org.jdesktop.swingx.painter.AbstractPainter;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.decorator.PainterHighlighter: org.jdesktop.swingx.painter.Painter getPainter()>();

        $r3 = (org.jdesktop.swingx.painter.AbstractPainter) $r2;

        $r4 = virtualinvoke r0.<org.jdesktop.swingx.decorator.PainterHighlighter: java.beans.PropertyChangeListener getPainterListener()>();

        virtualinvoke $r3.<org.jdesktop.swingx.painter.AbstractPainter: void addPropertyChangeListener(java.beans.PropertyChangeListener)>($r4);

     label1:
        return;
    }

    protected void uninstallPainterListener()
    {
        org.jdesktop.swingx.decorator.PainterHighlighter r0;
        java.beans.PropertyChangeListener $r3;
        org.jdesktop.swingx.painter.Painter $r1, $r2;
        org.jdesktop.swingx.painter.AbstractPainter $r4;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.decorator.PainterHighlighter;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.decorator.PainterHighlighter: org.jdesktop.swingx.painter.Painter getPainter()>();

        $z0 = $r1 instanceof org.jdesktop.swingx.painter.AbstractPainter;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.decorator.PainterHighlighter: org.jdesktop.swingx.painter.Painter getPainter()>();

        $r4 = (org.jdesktop.swingx.painter.AbstractPainter) $r2;

        $r3 = r0.<org.jdesktop.swingx.decorator.PainterHighlighter: java.beans.PropertyChangeListener painterListener>;

        virtualinvoke $r4.<org.jdesktop.swingx.painter.AbstractPainter: void removePropertyChangeListener(java.beans.PropertyChangeListener)>($r3);

     label1:
        return;
    }

    protected final java.beans.PropertyChangeListener getPainterListener()
    {
        org.jdesktop.swingx.decorator.PainterHighlighter r0;
        java.beans.PropertyChangeListener $r1, $r2, $r3;

        r0 := @this: org.jdesktop.swingx.decorator.PainterHighlighter;

        $r1 = r0.<org.jdesktop.swingx.decorator.PainterHighlighter: java.beans.PropertyChangeListener painterListener>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.decorator.PainterHighlighter: java.beans.PropertyChangeListener createPainterListener()>();

        r0.<org.jdesktop.swingx.decorator.PainterHighlighter: java.beans.PropertyChangeListener painterListener> = $r3;

     label1:
        $r2 = r0.<org.jdesktop.swingx.decorator.PainterHighlighter: java.beans.PropertyChangeListener painterListener>;

        return $r2;
    }

    protected java.beans.PropertyChangeListener createPainterListener()
    {
        org.jdesktop.swingx.decorator.PainterHighlighter$1 $r0;
        org.jdesktop.swingx.decorator.PainterHighlighter r1;

        r1 := @this: org.jdesktop.swingx.decorator.PainterHighlighter;

        $r0 = new org.jdesktop.swingx.decorator.PainterHighlighter$1;

        specialinvoke $r0.<org.jdesktop.swingx.decorator.PainterHighlighter$1: void <init>(org.jdesktop.swingx.decorator.PainterHighlighter)>(r1);

        return $r0;
    }

    public java.awt.Component highlight(java.awt.Component, org.jdesktop.swingx.decorator.ComponentAdapter)
    {
        org.jdesktop.swingx.decorator.PainterHighlighter r0;
        org.jdesktop.swingx.decorator.ComponentAdapter r2;
        java.awt.Component r1, $r3;

        r0 := @this: org.jdesktop.swingx.decorator.PainterHighlighter;

        r1 := @parameter0: java.awt.Component;

        r2 := @parameter1: org.jdesktop.swingx.decorator.ComponentAdapter;

        r0.<org.jdesktop.swingx.decorator.PainterHighlighter: boolean isAdjusting> = 1;

        $r3 = specialinvoke r0.<org.jdesktop.swingx.decorator.AbstractHighlighter: java.awt.Component highlight(java.awt.Component,org.jdesktop.swingx.decorator.ComponentAdapter)>(r1, r2);

        r0.<org.jdesktop.swingx.decorator.PainterHighlighter: boolean isAdjusting> = 0;

        return $r3;
    }

    protected java.awt.Component doHighlight(java.awt.Component, org.jdesktop.swingx.decorator.ComponentAdapter)
    {
        org.jdesktop.swingx.decorator.PainterHighlighter r1;
        org.jdesktop.swingx.painter.Painter $r2;
        org.jdesktop.swingx.decorator.ComponentAdapter r4;
        java.awt.Component r0;
        org.jdesktop.swingx.renderer.PainterAware $r3;

        r1 := @this: org.jdesktop.swingx.decorator.PainterHighlighter;

        r0 := @parameter0: java.awt.Component;

        r4 := @parameter1: org.jdesktop.swingx.decorator.ComponentAdapter;

        $r3 = (org.jdesktop.swingx.renderer.PainterAware) r0;

        $r2 = r1.<org.jdesktop.swingx.decorator.PainterHighlighter: org.jdesktop.swingx.painter.Painter painter>;

        interfaceinvoke $r3.<org.jdesktop.swingx.renderer.PainterAware: void setPainter(org.jdesktop.swingx.painter.Painter)>($r2);

        return r0;
    }

    protected boolean canHighlight(java.awt.Component, org.jdesktop.swingx.decorator.ComponentAdapter)
    {
        org.jdesktop.swingx.decorator.PainterHighlighter r0;
        org.jdesktop.swingx.painter.Painter $r1;
        org.jdesktop.swingx.decorator.ComponentAdapter r3;
        java.awt.Component r2;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.swingx.decorator.PainterHighlighter;

        r2 := @parameter0: java.awt.Component;

        r3 := @parameter1: org.jdesktop.swingx.decorator.ComponentAdapter;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.decorator.PainterHighlighter: org.jdesktop.swingx.painter.Painter getPainter()>();

        if $r1 == null goto label1;

        $z0 = r2 instanceof org.jdesktop.swingx.renderer.PainterAware;

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    static boolean access$000(org.jdesktop.swingx.decorator.PainterHighlighter)
    {
        org.jdesktop.swingx.decorator.PainterHighlighter r0;
        boolean $z0;

        r0 := @parameter0: org.jdesktop.swingx.decorator.PainterHighlighter;

        $z0 = r0.<org.jdesktop.swingx.decorator.PainterHighlighter: boolean isAdjusting>;

        return $z0;
    }
}
