public class org.jdesktop.swingx.renderer.TreeCellContext$TreeFocusBorder extends javax.swing.border.LineBorder
{
    private java.awt.Color treeBackground;
    private java.awt.Color focusColor;
    final org.jdesktop.swingx.renderer.TreeCellContext this$0;

    public void <init>(org.jdesktop.swingx.renderer.TreeCellContext)
    {
        java.awt.Color $r2, $r3, $r4, $r6, $r7;
        org.jdesktop.swingx.renderer.TreeCellContext$TreeFocusBorder r0;
        int $i0, $i1, $i3;
        org.jdesktop.swingx.renderer.TreeCellContext r1;

        r0 := @this: org.jdesktop.swingx.renderer.TreeCellContext$TreeFocusBorder;

        r1 := @parameter0: org.jdesktop.swingx.renderer.TreeCellContext;

        r0.<org.jdesktop.swingx.renderer.TreeCellContext$TreeFocusBorder: org.jdesktop.swingx.renderer.TreeCellContext this$0> = r1;

        $r2 = <java.awt.Color: java.awt.Color BLACK>;

        specialinvoke r0.<javax.swing.border.LineBorder: void <init>(java.awt.Color)>($r2);

        $r3 = virtualinvoke r1.<org.jdesktop.swingx.renderer.TreeCellContext: java.awt.Color getBackground()>();

        r0.<org.jdesktop.swingx.renderer.TreeCellContext$TreeFocusBorder: java.awt.Color treeBackground> = $r3;

        $r4 = r0.<org.jdesktop.swingx.renderer.TreeCellContext$TreeFocusBorder: java.awt.Color treeBackground>;

        if $r4 == null goto label1;

        $r7 = new java.awt.Color;

        $r6 = r0.<org.jdesktop.swingx.renderer.TreeCellContext$TreeFocusBorder: java.awt.Color treeBackground>;

        $i0 = virtualinvoke $r6.<java.awt.Color: int getRGB()>();

        $i3 = (int) -1;

        $i1 = $i0 ^ $i3;

        specialinvoke $r7.<java.awt.Color: void <init>(int)>($i1);

        r0.<org.jdesktop.swingx.renderer.TreeCellContext$TreeFocusBorder: java.awt.Color focusColor> = $r7;

     label1:
        return;
    }

    public void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int)
    {
        java.awt.Color $r0, $r4, $r5, $r6, $r7, $r8, $r10, $r11;
        org.jdesktop.swingx.renderer.TreeCellContext$TreeFocusBorder r1;
        int i0, i1, i2, i3, $i4, $i5, $i7;
        boolean $z0;
        java.awt.Component r2;
        java.awt.Graphics r3;

        r1 := @this: org.jdesktop.swingx.renderer.TreeCellContext$TreeFocusBorder;

        r2 := @parameter0: java.awt.Component;

        r3 := @parameter1: java.awt.Graphics;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        $r0 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("Tree.selectionBorderColor");

        if $r0 == null goto label1;

        r1.<org.jdesktop.swingx.renderer.TreeCellContext$TreeFocusBorder: java.awt.Color lineColor> = $r0;

     label1:
        $z0 = specialinvoke r1.<org.jdesktop.swingx.renderer.TreeCellContext$TreeFocusBorder: boolean isDashed()>();

        if $z0 == 0 goto label3;

        $r4 = r1.<org.jdesktop.swingx.renderer.TreeCellContext$TreeFocusBorder: java.awt.Color treeBackground>;

        $r5 = virtualinvoke r2.<java.awt.Component: java.awt.Color getBackground()>();

        if $r4 == $r5 goto label2;

        $r8 = virtualinvoke r2.<java.awt.Component: java.awt.Color getBackground()>();

        r1.<org.jdesktop.swingx.renderer.TreeCellContext$TreeFocusBorder: java.awt.Color treeBackground> = $r8;

        $r11 = new java.awt.Color;

        $r10 = r1.<org.jdesktop.swingx.renderer.TreeCellContext$TreeFocusBorder: java.awt.Color treeBackground>;

        $i4 = virtualinvoke $r10.<java.awt.Color: int getRGB()>();

        $i7 = (int) -1;

        $i5 = $i4 ^ $i7;

        specialinvoke $r11.<java.awt.Color: void <init>(int)>($i5);

        r1.<org.jdesktop.swingx.renderer.TreeCellContext$TreeFocusBorder: java.awt.Color focusColor> = $r11;

     label2:
        $r6 = virtualinvoke r3.<java.awt.Graphics: java.awt.Color getColor()>();

        $r7 = r1.<org.jdesktop.swingx.renderer.TreeCellContext$TreeFocusBorder: java.awt.Color focusColor>;

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r7);

        staticinvoke <javax.swing.plaf.basic.BasicGraphicsUtils: void drawDashedRect(java.awt.Graphics,int,int,int,int)>(r3, i0, i1, i2, i3);

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r6);

        goto label4;

     label3:
        specialinvoke r1.<javax.swing.border.LineBorder: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)>(r2, r3, i0, i1, i2, i3);

     label4:
        return;
    }

    private boolean isDashed()
    {
        java.lang.Boolean $r0;
        java.lang.Object $r1;
        boolean $z0;
        org.jdesktop.swingx.renderer.TreeCellContext$TreeFocusBorder r2;

        r2 := @this: org.jdesktop.swingx.renderer.TreeCellContext$TreeFocusBorder;

        $r0 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r1 = staticinvoke <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>("Tree.drawDashedFocusIndicator");

        $z0 = virtualinvoke $r0.<java.lang.Boolean: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public boolean isBorderOpaque()
    {
        org.jdesktop.swingx.renderer.TreeCellContext$TreeFocusBorder r0;

        r0 := @this: org.jdesktop.swingx.renderer.TreeCellContext$TreeFocusBorder;

        return 0;
    }
}
