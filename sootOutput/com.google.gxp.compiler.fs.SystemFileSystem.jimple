public final class com.google.gxp.compiler.fs.SystemFileSystem extends com.google.gxp.compiler.fs.AbstractFileSystem
{
    public static final com.google.gxp.compiler.fs.SystemFileSystem INSTANCE;
    private final com.google.gxp.compiler.fs.FileStore store;
    private static java.util.regex.Pattern PATH_SEPARATOR_PATTERN;

    private void <init>()
    {
        com.google.gxp.compiler.fs.SystemFileSystem r0;
        com.google.gxp.compiler.fs.SystemFileSystem$1 $r1;

        r0 := @this: com.google.gxp.compiler.fs.SystemFileSystem;

        specialinvoke r0.<com.google.gxp.compiler.fs.AbstractFileSystem: void <init>()>();

        $r1 = new com.google.gxp.compiler.fs.SystemFileSystem$1;

        specialinvoke $r1.<com.google.gxp.compiler.fs.SystemFileSystem$1: void <init>(com.google.gxp.compiler.fs.SystemFileSystem)>(r0);

        r0.<com.google.gxp.compiler.fs.SystemFileSystem: com.google.gxp.compiler.fs.FileStore store> = $r1;

        return;
    }

    protected com.google.gxp.compiler.fs.FileStore getFileStore()
    {
        com.google.gxp.compiler.fs.SystemFileSystem r0;
        com.google.gxp.compiler.fs.FileStore $r1;

        r0 := @this: com.google.gxp.compiler.fs.SystemFileSystem;

        $r1 = r0.<com.google.gxp.compiler.fs.SystemFileSystem: com.google.gxp.compiler.fs.FileStore store>;

        return $r1;
    }

    private static java.io.File fileRefToFile(com.google.gxp.compiler.fs.FileRef)
    {
        java.net.URI $r2;
        java.io.File $r0;
        com.google.gxp.compiler.fs.FileRef r1;

        r1 := @parameter0: com.google.gxp.compiler.fs.FileRef;

        $r0 = new java.io.File;

        $r2 = virtualinvoke r1.<com.google.gxp.compiler.fs.FileRef: java.net.URI toUri()>();

        specialinvoke $r0.<java.io.File: void <init>(java.net.URI)>($r2);

        return $r0;
    }

    public com.google.gxp.compiler.fs.FileRef parseFilename(java.lang.String)
    {
        com.google.gxp.compiler.fs.SystemFileSystem r1;
        java.lang.String r2, $r6;
        java.net.URI $r5;
        com.google.gxp.compiler.fs.FileRef $r0;
        com.google.gxp.compiler.fs.FileStore $r3;
        java.io.File $r4;

        r1 := @this: com.google.gxp.compiler.fs.SystemFileSystem;

        r2 := @parameter0: java.lang.String;

        $r0 = new com.google.gxp.compiler.fs.FileRef;

        $r3 = r1.<com.google.gxp.compiler.fs.SystemFileSystem: com.google.gxp.compiler.fs.FileStore store>;

        $r4 = specialinvoke r1.<com.google.gxp.compiler.fs.SystemFileSystem: java.io.File filenameToFile(java.lang.String)>(r2);

        $r5 = virtualinvoke $r4.<java.io.File: java.net.URI toURI()>();

        $r6 = virtualinvoke $r5.<java.net.URI: java.lang.String getPath()>();

        specialinvoke $r0.<com.google.gxp.compiler.fs.FileRef: void <init>(com.google.gxp.compiler.fs.FileStore,java.lang.String)>($r3, $r6);

        return $r0;
    }

    public com.google.gxp.compiler.fs.FileRef getCwd()
    {
        java.lang.String $r1;
        com.google.gxp.compiler.fs.SystemFileSystem r0;
        com.google.gxp.compiler.fs.FileRef $r2;

        r0 := @this: com.google.gxp.compiler.fs.SystemFileSystem;

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.dir");

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.fs.SystemFileSystem: com.google.gxp.compiler.fs.FileRef parseFilename(java.lang.String)>($r1);

        return $r2;
    }

    private java.io.File filenameToFile(java.lang.String)
    {
        com.google.gxp.compiler.fs.SystemFileSystem r3;
        java.lang.String r1;
        java.io.File $r0, $r2;

        r3 := @this: com.google.gxp.compiler.fs.SystemFileSystem;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r1);

        $r2 = virtualinvoke $r0.<java.io.File: java.io.File getAbsoluteFile()>();

        return $r2;
    }

    protected java.util.regex.Pattern getFilenameListDelimiter()
    {
        java.util.regex.Pattern $r0;
        com.google.gxp.compiler.fs.SystemFileSystem r1;

        r1 := @this: com.google.gxp.compiler.fs.SystemFileSystem;

        $r0 = <com.google.gxp.compiler.fs.SystemFileSystem: java.util.regex.Pattern PATH_SEPARATOR_PATTERN>;

        return $r0;
    }

    static java.io.File access$000(com.google.gxp.compiler.fs.FileRef)
    {
        com.google.gxp.compiler.fs.FileRef r0;
        java.io.File $r1;

        r0 := @parameter0: com.google.gxp.compiler.fs.FileRef;

        $r1 = staticinvoke <com.google.gxp.compiler.fs.SystemFileSystem: java.io.File fileRefToFile(com.google.gxp.compiler.fs.FileRef)>(r0);

        return $r1;
    }

    static void <clinit>()
    {
        com.google.gxp.compiler.fs.SystemFileSystem $r0;
        java.lang.String $r1, $r2;
        java.util.regex.Pattern $r3;

        $r0 = new com.google.gxp.compiler.fs.SystemFileSystem;

        specialinvoke $r0.<com.google.gxp.compiler.fs.SystemFileSystem: void <init>()>();

        <com.google.gxp.compiler.fs.SystemFileSystem: com.google.gxp.compiler.fs.SystemFileSystem INSTANCE> = $r0;

        $r1 = <java.io.File: java.lang.String pathSeparator>;

        $r2 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>($r1);

        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r2);

        <com.google.gxp.compiler.fs.SystemFileSystem: java.util.regex.Pattern PATH_SEPARATOR_PATTERN> = $r3;

        return;
    }
}
