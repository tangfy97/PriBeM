class com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$4 extends com.sun.xml.bind.v2.schemagen.Tree$Term
{
    final com.sun.xml.bind.v2.model.core.Element val$e;
    final com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace this$1;

    void <init>(com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace, com.sun.xml.bind.v2.model.core.Element)
    {
        com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$4 r0;
        com.sun.xml.bind.v2.model.core.Element r2;
        com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace r1;

        r0 := @this: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$4;

        r1 := @parameter0: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace;

        r2 := @parameter1: com.sun.xml.bind.v2.model.core.Element;

        r0.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$4: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace this$1> = r1;

        r0.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$4: com.sun.xml.bind.v2.model.core.Element val$e> = r2;

        specialinvoke r0.<com.sun.xml.bind.v2.schemagen.Tree$Term: void <init>()>();

        return;
    }

    protected void write(com.sun.xml.bind.v2.schemagen.xmlschema.ContentModelContainer, boolean, boolean)
    {
        com.sun.xml.bind.v2.model.core.Element $r3, $r5, $r13, $r17, $r23;
        com.sun.xml.bind.v2.model.core.ElementInfo $r14;
        com.sun.xml.bind.v2.schemagen.Form $r12, $r21;
        boolean z0, z1, $z2, $z3, $z4, $z5, z6, $z7;
        com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$4 r2;
        com.sun.xml.bind.v2.model.core.NonElement $r16;
        javax.xml.namespace.QName $r4;
        com.sun.xml.bind.v2.model.core.ClassInfo $r6, $r18;
        com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement $r1;
        java.lang.String $r7, $r9, $r10, $r22;
        com.sun.xml.bind.v2.schemagen.xmlschema.ContentModelContainer r0;
        com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace $r8, $r11, $r15, $r19, $r20;

        r2 := @this: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$4;

        r0 := @parameter0: com.sun.xml.bind.v2.schemagen.xmlschema.ContentModelContainer;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r1 = interfaceinvoke r0.<com.sun.xml.bind.v2.schemagen.xmlschema.ContentModelContainer: com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement element()>();

        z6 = 0;

        $r3 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$4: com.sun.xml.bind.v2.model.core.Element val$e>;

        $r4 = interfaceinvoke $r3.<com.sun.xml.bind.v2.model.core.Element: javax.xml.namespace.QName getElementName()>();

        $r5 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$4: com.sun.xml.bind.v2.model.core.Element val$e>;

        $r6 = interfaceinvoke $r5.<com.sun.xml.bind.v2.model.core.Element: com.sun.xml.bind.v2.model.core.ClassInfo getScope()>();

        if $r6 == null goto label5;

        $r7 = virtualinvoke $r4.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r8 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$4: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace this$1>;

        $r9 = $r8.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace: java.lang.String uri>;

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        $r10 = virtualinvoke $r4.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $z3 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z2 != 0 goto label1;

        if $z3 == 0 goto label5;

     label1:
        if $z3 == 0 goto label2;

        $r20 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$4: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace this$1>;

        $r21 = staticinvoke <com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace: com.sun.xml.bind.v2.schemagen.Form access$1900(com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace)>($r20);

        $z5 = $r21.<com.sun.xml.bind.v2.schemagen.Form: boolean isEffectivelyQualified>;

        if $z5 == 0 goto label3;

        interfaceinvoke $r1.<com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement: com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement form(java.lang.String)>("unqualified");

        goto label3;

     label2:
        $r11 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$4: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace this$1>;

        $r12 = staticinvoke <com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace: com.sun.xml.bind.v2.schemagen.Form access$1900(com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace)>($r11);

        $z4 = $r12.<com.sun.xml.bind.v2.schemagen.Form: boolean isEffectivelyQualified>;

        if $z4 != 0 goto label3;

        interfaceinvoke $r1.<com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement: com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement form(java.lang.String)>("qualified");

     label3:
        z6 = 1;

        $r22 = virtualinvoke $r4.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        interfaceinvoke $r1.<com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement: com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement name(java.lang.String)>($r22);

        $r23 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$4: com.sun.xml.bind.v2.model.core.Element val$e>;

        $z7 = $r23 instanceof com.sun.xml.bind.v2.model.core.ClassInfo;

        if $z7 == 0 goto label4;

        $r19 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$4: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace this$1>;

        $r17 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$4: com.sun.xml.bind.v2.model.core.Element val$e>;

        $r18 = (com.sun.xml.bind.v2.model.core.ClassInfo) $r17;

        staticinvoke <com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace: void access$2100(com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace,com.sun.xml.bind.v2.schemagen.xmlschema.TypeHost,com.sun.xml.bind.v2.model.core.NonElement,java.lang.String)>($r19, $r1, $r18, "type");

        goto label5;

     label4:
        $r15 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$4: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace this$1>;

        $r13 = r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$4: com.sun.xml.bind.v2.model.core.Element val$e>;

        $r14 = (com.sun.xml.bind.v2.model.core.ElementInfo) $r13;

        $r16 = interfaceinvoke $r14.<com.sun.xml.bind.v2.model.core.ElementInfo: com.sun.xml.bind.v2.model.core.NonElement getContentType()>();

        staticinvoke <com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace: void access$2100(com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace,com.sun.xml.bind.v2.schemagen.xmlschema.TypeHost,com.sun.xml.bind.v2.model.core.NonElement,java.lang.String)>($r15, $r1, $r16, "type");

     label5:
        if z6 != 0 goto label6;

        interfaceinvoke $r1.<com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement: com.sun.xml.bind.v2.schemagen.xmlschema.LocalElement ref(javax.xml.namespace.QName)>($r4);

     label6:
        virtualinvoke r2.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$4: void writeOccurs(com.sun.xml.bind.v2.schemagen.xmlschema.Occurs,boolean,boolean)>($r1, z0, z1);

        return;
    }
}
