final class edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter extends edu.mit.csail.sdg.alloy4.A4Reporter
{
    private final java.lang.StringBuilder sb;
    private final java.util.List warnings;
    private final java.io.RandomAccessFile os;

    public void <init>() throws java.io.IOException
    {
        edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter r0;
        java.io.RandomAccessFile $r3, $r4;
        java.lang.StringBuilder $r1;
        java.util.ArrayList $r2;

        r0 := @this: edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter;

        specialinvoke r0.<edu.mit.csail.sdg.alloy4.A4Reporter: void <init>()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        r0.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.lang.StringBuilder sb> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.util.List warnings> = $r2;

        $r3 = new java.io.RandomAccessFile;

        specialinvoke $r3.<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>(".alloy.tmp", "rw");

        r0.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.io.RandomAccessFile os> = $r3;

        $r4 = r0.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.io.RandomAccessFile os>;

        virtualinvoke $r4.<java.io.RandomAccessFile: void setLength(long)>(0L);

        return;
    }

    public void flush() throws java.io.IOException
    {
        edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter r0;
        java.io.RandomAccessFile $r3;
        byte[] $r5;
        int $i0, $i1;
        java.lang.StringBuilder $r1, $r2, $r6, $r7;
        java.lang.String $r4;

        r0 := @this: edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter;

        $r1 = r0.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.lang.StringBuilder sb>;

        $i0 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        if $i0 <= 65536 goto label1;

        $r3 = r0.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.io.RandomAccessFile os>;

        $r2 = r0.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.lang.StringBuilder sb>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke $r3.<java.io.RandomAccessFile: void write(byte[])>($r5);

        $r7 = r0.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.lang.StringBuilder sb>;

        $r6 = r0.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.lang.StringBuilder sb>;

        $i1 = virtualinvoke $r6.<java.lang.StringBuilder: int length()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>(0, $i1);

     label1:
        return;
    }

    public void close() throws java.io.IOException
    {
        edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter r0;
        java.io.RandomAccessFile $r2, $r4;
        byte[] $r6;
        int $i0, $i1;
        java.lang.StringBuilder $r1, $r3, $r7, $r8;
        java.lang.String $r5;

        r0 := @this: edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter;

        $r1 = r0.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.lang.StringBuilder sb>;

        $i0 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label1;

        $r4 = r0.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.io.RandomAccessFile os>;

        $r3 = r0.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.lang.StringBuilder sb>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r5.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke $r4.<java.io.RandomAccessFile: void write(byte[])>($r6);

        $r8 = r0.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.lang.StringBuilder sb>;

        $r7 = r0.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.lang.StringBuilder sb>;

        $i1 = virtualinvoke $r7.<java.lang.StringBuilder: int length()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>(0, $i1);

     label1:
        $r2 = r0.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.io.RandomAccessFile os>;

        virtualinvoke $r2.<java.io.RandomAccessFile: void close()>();

        return;
    }

    public void debug(java.lang.String)
    {
        edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter r0;
        java.lang.StringBuilder $r2;
        java.lang.String r1;

        r0 := @this: edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.lang.StringBuilder sb>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        return;
    }

    public void parse(java.lang.String)
    {
        edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter r0;
        java.lang.StringBuilder $r2;
        java.lang.String r1;

        r0 := @this: edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.lang.StringBuilder sb>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        return;
    }

    public void typecheck(java.lang.String)
    {
        edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter r0;
        java.lang.StringBuilder $r2;
        java.lang.String r1;

        r0 := @this: edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.lang.StringBuilder sb>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        return;
    }

    public void warning(edu.mit.csail.sdg.alloy4.ErrorWarning)
    {
        edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter r0;
        java.util.List $r2;
        edu.mit.csail.sdg.alloy4.ErrorWarning r1;

        r0 := @this: edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4.ErrorWarning;

        $r2 = r0.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.util.List warnings>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void scope(java.lang.String)
    {
        edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter r0;
        java.lang.StringBuilder $r1, $r3;
        java.lang.String r2;

        r0 := @this: edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.lang.StringBuilder sb>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   ");

        $r3 = r0.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.lang.StringBuilder sb>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        return;
    }

    public void bound(java.lang.String)
    {
        edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter r0;
        java.lang.StringBuilder $r1, $r3;
        java.lang.String r2;

        r0 := @this: edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.lang.StringBuilder sb>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   ");

        $r3 = r0.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.lang.StringBuilder sb>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        return;
    }

    public void translate(java.lang.String, int, int, int, int)
    {
        int i0, i1, i2, i3;
        java.lang.String r4, $r13, $r17;
        edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r14, $r15, $r16;

        r0 := @this: edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i3 := @parameter3: int;

        i2 := @parameter4: int;

        $r2 = r0.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.lang.StringBuilder sb>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   Solver=");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Bitwidth=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" MaxSeq=");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Symmetry=");

        if i2 <= 0 goto label1;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r17 = "OFF";

     label2:
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        return;
    }

    public void solve(int, int, int)
    {
        int i0, i1, i2;
        java.lang.String $r10, $r19;
        boolean $z0;
        edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;

        r0 := @this: edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        $z0 = staticinvoke <edu.mit.csail.sdg.alloy4whole.SimpleCLI: boolean access$000()>();

        if $z0 == 0 goto label1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vars. ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" primary vars. ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" clauses.\n");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <edu.mit.csail.sdg.alloy4whole.SimpleCLI: void access$100(java.lang.String)>($r19);

     label1:
        $r2 = r0.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.lang.StringBuilder sb>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vars. ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" primary vars. ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" clauses. 12345ms.\n");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        return;
    }

    public void resultCNF(java.lang.String)
    {
        edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter r0;
        java.lang.String r1;

        r0 := @this: edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void resultSAT(java.lang.Object, long, java.lang.Object)
    {
        long l2;
        int $i0, $i1;
        java.lang.String $r9, $r15;
        edu.mit.csail.sdg.alloy4compiler.ast.Command r1;
        boolean $z0, $z1, $z2, $z3;
        edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter r2;
        java.lang.Object r0, r8;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r10, $r11, $r12, $r13, $r14;

        r2 := @this: edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter;

        r0 := @parameter0: java.lang.Object;

        l2 := @parameter1: long;

        r8 := @parameter2: java.lang.Object;

        $z0 = staticinvoke <edu.mit.csail.sdg.alloy4whole.SimpleCLI: boolean access$000()>();

        if $z0 == 0 goto label1;

        staticinvoke <edu.mit.csail.sdg.alloy4whole.SimpleCLI: void access$100(java.lang.String)>("   SAT!\n");

     label1:
        $z1 = r0 instanceof edu.mit.csail.sdg.alloy4compiler.ast.Command;

        if $z1 != 0 goto label2;

        return;

     label2:
        r1 = (edu.mit.csail.sdg.alloy4compiler.ast.Command) r0;

        $r3 = r2.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.lang.StringBuilder sb>;

        $z2 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.Command: boolean check>;

        if $z2 == 0 goto label3;

        $r9 = "   Counterexample found. ";

        goto label4;

     label3:
        $r9 = "   Instance found. ";

     label4:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $z3 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.Command: boolean check>;

        if $z3 == 0 goto label5;

        $r7 = r2.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.lang.StringBuilder sb>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Assertion is invalid");

        goto label6;

     label5:
        $r4 = r2.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.lang.StringBuilder sb>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Predicate is consistent");

     label6:
        $i0 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.Command: int expects>;

        if $i0 != 0 goto label7;

        $r6 = r2.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.lang.StringBuilder sb>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", contrary to expectation");

        goto label8;

     label7:
        $i1 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.Command: int expects>;

        if $i1 != 1 goto label8;

        $r5 = r2.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.lang.StringBuilder sb>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", as expected");

     label8:
        $r10 = r2.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.lang.StringBuilder sb>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms.\n\n");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        return;
    }

    public void resultUNSAT(java.lang.Object, long, java.lang.Object)
    {
        long l2;
        int $i0, $i1;
        java.lang.String $r9, $r15;
        edu.mit.csail.sdg.alloy4compiler.ast.Command r1;
        boolean $z0, $z1, $z2, $z3;
        edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter r2;
        java.lang.Object r0, r8;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r10, $r11, $r12, $r13, $r14;

        r2 := @this: edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter;

        r0 := @parameter0: java.lang.Object;

        l2 := @parameter1: long;

        r8 := @parameter2: java.lang.Object;

        $z0 = staticinvoke <edu.mit.csail.sdg.alloy4whole.SimpleCLI: boolean access$000()>();

        if $z0 == 0 goto label1;

        staticinvoke <edu.mit.csail.sdg.alloy4whole.SimpleCLI: void access$100(java.lang.String)>("   UNSAT!\n");

     label1:
        $z1 = r0 instanceof edu.mit.csail.sdg.alloy4compiler.ast.Command;

        if $z1 != 0 goto label2;

        return;

     label2:
        r1 = (edu.mit.csail.sdg.alloy4compiler.ast.Command) r0;

        $r3 = r2.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.lang.StringBuilder sb>;

        $z2 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.Command: boolean check>;

        if $z2 == 0 goto label3;

        $r9 = "   No counterexample found.";

        goto label4;

     label3:
        $r9 = "   No instance found.";

     label4:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $z3 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.Command: boolean check>;

        if $z3 == 0 goto label5;

        $r7 = r2.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.lang.StringBuilder sb>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Assertion may be valid");

        goto label6;

     label5:
        $r4 = r2.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.lang.StringBuilder sb>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Predicate may be inconsistent");

     label6:
        $i0 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.Command: int expects>;

        if $i0 != 1 goto label7;

        $r6 = r2.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.lang.StringBuilder sb>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", contrary to expectation");

        goto label8;

     label7:
        $i1 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.Command: int expects>;

        if $i1 != 0 goto label8;

        $r5 = r2.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.lang.StringBuilder sb>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", as expected");

     label8:
        $r10 = r2.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.lang.StringBuilder sb>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms.\n\n");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        return;
    }

    static java.lang.StringBuilder access$200(edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter)
    {
        edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter r0;
        java.lang.StringBuilder $r1;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter;

        $r1 = r0.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.lang.StringBuilder sb>;

        return $r1;
    }

    static java.util.List access$300(edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter)
    {
        edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter r0;
        java.util.List $r1;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter;

        $r1 = r0.<edu.mit.csail.sdg.alloy4whole.SimpleCLI$SimpleReporter: java.util.List warnings>;

        return $r1;
    }
}
