public class org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit extends org.codehaus.groovy.control.CompilationUnit
{
    private java.util.LinkedList javaSources;
    private org.codehaus.groovy.tools.javac.JavaStubGenerator stubGenerator;
    private org.codehaus.groovy.tools.javac.JavaCompilerFactory compilerFactory;
    private java.io.File generationGoal;
    private boolean keepStubs;

    public void <init>(org.codehaus.groovy.control.CompilerConfiguration)
    {
        org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit r0;
        org.codehaus.groovy.control.CompilerConfiguration r1;

        r0 := @this: org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit;

        r1 := @parameter0: org.codehaus.groovy.control.CompilerConfiguration;

        specialinvoke r0.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit: void <init>(org.codehaus.groovy.control.CompilerConfiguration,groovy.lang.GroovyClassLoader)>(r1, null);

        return;
    }

    public void <init>(org.codehaus.groovy.control.CompilerConfiguration, groovy.lang.GroovyClassLoader)
    {
        org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit$2 $r14;
        org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit$1 $r13;
        org.codehaus.groovy.tools.javac.JavacCompilerFactory $r3;
        org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit r0;
        java.util.Map $r5;
        java.lang.Boolean $r11;
        java.lang.String $r8;
        java.util.LinkedList $r4;
        boolean $z0, $z1;
        org.codehaus.groovy.control.CompilerConfiguration r1;
        java.io.File $r7, $r10;
        java.lang.Object $r6, $r12;
        groovy.lang.GroovyClassLoader r2;
        org.codehaus.groovy.tools.javac.JavaStubGenerator $r9;

        r0 := @this: org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit;

        r1 := @parameter0: org.codehaus.groovy.control.CompilerConfiguration;

        r2 := @parameter1: groovy.lang.GroovyClassLoader;

        specialinvoke r0.<org.codehaus.groovy.control.CompilationUnit: void <init>(org.codehaus.groovy.control.CompilerConfiguration,java.security.CodeSource,groovy.lang.GroovyClassLoader)>(r1, null, r2);

        $r3 = new org.codehaus.groovy.tools.javac.JavacCompilerFactory;

        specialinvoke $r3.<org.codehaus.groovy.tools.javac.JavacCompilerFactory: void <init>()>();

        r0.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit: org.codehaus.groovy.tools.javac.JavaCompilerFactory compilerFactory> = $r3;

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        r0.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit: java.util.LinkedList javaSources> = $r4;

        $r5 = virtualinvoke r1.<org.codehaus.groovy.control.CompilerConfiguration: java.util.Map getJointCompilationOptions()>();

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("stubDir");

        $r7 = (java.io.File) $r6;

        r0.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit: java.io.File generationGoal> = $r7;

        $r8 = virtualinvoke r1.<org.codehaus.groovy.control.CompilerConfiguration: java.lang.String getTargetBytecode()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("1.5");

        $r9 = new org.codehaus.groovy.tools.javac.JavaStubGenerator;

        $r10 = r0.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit: java.io.File generationGoal>;

        specialinvoke $r9.<org.codehaus.groovy.tools.javac.JavaStubGenerator: void <init>(java.io.File,boolean,boolean)>($r10, 0, $z0);

        r0.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit: org.codehaus.groovy.tools.javac.JavaStubGenerator stubGenerator> = $r9;

        $r11 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r12 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("keepStubs");

        $z1 = virtualinvoke $r11.<java.lang.Boolean: boolean equals(java.lang.Object)>($r12);

        r0.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit: boolean keepStubs> = $z1;

        $r13 = new org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit$1;

        specialinvoke $r13.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit$1: void <init>(org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit)>(r0);

        virtualinvoke r0.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit: void addPhaseOperation(org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation,int)>($r13, 3);

        $r14 = new org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit$2;

        specialinvoke $r14.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit$2: void <init>(org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit)>(r0);

        virtualinvoke r0.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit: void addPhaseOperation(org.codehaus.groovy.control.CompilationUnit$PrimaryClassNodeOperation,int)>($r14, 3);

        return;
    }

    public void gotoPhase(int) throws org.codehaus.groovy.control.CompilationFailedException
    {
        java.lang.Throwable $r12;
        org.codehaus.groovy.tools.javac.JavaCompiler $r7;
        org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit r0;
        org.codehaus.groovy.ast.ModuleNode r15;
        int i0, $i1;
        org.codehaus.groovy.tools.javac.JavaCompilerFactory $r5;
        java.util.LinkedList $r1, $r8, $r9, $r13;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r4;
        org.codehaus.groovy.control.CompilerConfiguration $r6;
        java.util.List $r3;
        org.codehaus.groovy.ast.CompileUnit $r2;
        java.lang.Object $r11;
        org.codehaus.groovy.tools.javac.JavaStubGenerator $r10, $r14;

        r0 := @this: org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit;

        i0 := @parameter0: int;

        specialinvoke r0.<org.codehaus.groovy.control.CompilationUnit: void gotoPhase(int)>(i0);

        if i0 != 4 goto label8;

        $r1 = r0.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit: java.util.LinkedList javaSources>;

        $i1 = virtualinvoke $r1.<java.util.LinkedList: int size()>();

        if $i1 <= 0 goto label8;

        $r2 = virtualinvoke r0.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit: org.codehaus.groovy.ast.CompileUnit getAST()>();

        $r3 = virtualinvoke $r2.<org.codehaus.groovy.ast.CompileUnit: java.util.List getModules()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r15 = (org.codehaus.groovy.ast.ModuleNode) $r11;

        virtualinvoke r15.<org.codehaus.groovy.ast.ModuleNode: void setImportsResolved(boolean)>(0);

        goto label1;

     label2:
        $r5 = r0.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit: org.codehaus.groovy.tools.javac.JavaCompilerFactory compilerFactory>;

        $r6 = virtualinvoke r0.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit: org.codehaus.groovy.control.CompilerConfiguration getConfiguration()>();

        $r7 = interfaceinvoke $r5.<org.codehaus.groovy.tools.javac.JavaCompilerFactory: org.codehaus.groovy.tools.javac.JavaCompiler createCompiler(org.codehaus.groovy.control.CompilerConfiguration)>($r6);

        $r8 = r0.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit: java.util.LinkedList javaSources>;

        interfaceinvoke $r7.<org.codehaus.groovy.tools.javac.JavaCompiler: void compile(java.util.List,org.codehaus.groovy.control.CompilationUnit)>($r8, r0);

     label3:
        $z1 = r0.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit: boolean keepStubs>;

        if $z1 != 0 goto label4;

        $r10 = r0.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit: org.codehaus.groovy.tools.javac.JavaStubGenerator stubGenerator>;

        virtualinvoke $r10.<org.codehaus.groovy.tools.javac.JavaStubGenerator: void clean()>();

     label4:
        $r9 = r0.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit: java.util.LinkedList javaSources>;

        virtualinvoke $r9.<java.util.LinkedList: void clear()>();

        goto label8;

     label5:
        $r12 := @caughtexception;

     label6:
        $z2 = r0.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit: boolean keepStubs>;

        if $z2 != 0 goto label7;

        $r14 = r0.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit: org.codehaus.groovy.tools.javac.JavaStubGenerator stubGenerator>;

        virtualinvoke $r14.<org.codehaus.groovy.tools.javac.JavaStubGenerator: void clean()>();

     label7:
        $r13 = r0.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit: java.util.LinkedList javaSources>;

        virtualinvoke $r13.<java.util.LinkedList: void clear()>();

        throw $r12;

     label8:
        return;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void configure(org.codehaus.groovy.control.CompilerConfiguration)
    {
        org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit r0;
        java.lang.String $r3;
        org.codehaus.groovy.control.CompilerConfiguration r1;
        groovy.lang.GroovyClassLoader $r4;
        java.io.File $r2;

        r0 := @this: org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit;

        r1 := @parameter0: org.codehaus.groovy.control.CompilerConfiguration;

        specialinvoke r0.<org.codehaus.groovy.control.CompilationUnit: void configure(org.codehaus.groovy.control.CompilerConfiguration)>(r1);

        $r2 = virtualinvoke r1.<org.codehaus.groovy.control.CompilerConfiguration: java.io.File getTargetDirectory()>();

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $r4 = virtualinvoke r0.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit: groovy.lang.GroovyClassLoader getClassLoader()>();

        virtualinvoke $r4.<groovy.lang.GroovyClassLoader: void addClasspath(java.lang.String)>($r3);

     label1:
        return;
    }

    private void addJavaSource(java.io.File)
    {
        java.util.Iterator $r4;
        org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit r2;
        java.io.File r0;
        java.lang.Object $r6;
        java.lang.String $r1, r7;
        java.util.LinkedList $r3, $r5;
        boolean $z0, $z1;

        r2 := @this: org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit;

        r0 := @parameter0: java.io.File;

        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r3 = r2.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit: java.util.LinkedList javaSources>;

        $r4 = virtualinvoke $r3.<java.util.LinkedList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r6;

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z1 == 0 goto label2;

        return;

     label2:
        goto label1;

     label3:
        $r5 = r2.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit: java.util.LinkedList javaSources>;

        virtualinvoke $r5.<java.util.LinkedList: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void addSources(java.lang.String[])
    {
        java.lang.String[] r0;
        org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit r4;
        java.io.File $r1;
        int $i0, i1;
        java.lang.String $r2, $r3;
        boolean $z0;

        r4 := @this: org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit;

        r0 := @parameter0: java.lang.String[];

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label4;

        $r1 = new java.io.File;

        $r2 = r0[i1];

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r2);

        $r3 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean endsWith(java.lang.String)>(".java");

        if $z0 == 0 goto label2;

        specialinvoke r4.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit: void addJavaSource(java.io.File)>($r1);

        goto label3;

     label2:
        virtualinvoke r4.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit: org.codehaus.groovy.control.SourceUnit addSource(java.io.File)>($r1);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    public void addSources(java.io.File[])
    {
        org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit r3;
        java.io.File $r1, $r4, $r5;
        int $i0, i1;
        java.lang.String $r2;
        java.io.File[] r0;
        boolean $z0;

        r3 := @this: org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit;

        r0 := @parameter0: java.io.File[];

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label4;

        $r1 = r0[i1];

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>(".java");

        if $z0 == 0 goto label2;

        $r5 = r0[i1];

        specialinvoke r3.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit: void addJavaSource(java.io.File)>($r5);

        goto label3;

     label2:
        $r4 = r0[i1];

        virtualinvoke r3.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit: org.codehaus.groovy.control.SourceUnit addSource(java.io.File)>($r4);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    public org.codehaus.groovy.tools.javac.JavaCompilerFactory getCompilerFactory()
    {
        org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit r0;
        org.codehaus.groovy.tools.javac.JavaCompilerFactory $r1;

        r0 := @this: org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit;

        $r1 = r0.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit: org.codehaus.groovy.tools.javac.JavaCompilerFactory compilerFactory>;

        return $r1;
    }

    public void setCompilerFactory(org.codehaus.groovy.tools.javac.JavaCompilerFactory)
    {
        org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit r0;
        org.codehaus.groovy.tools.javac.JavaCompilerFactory r1;

        r0 := @this: org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit;

        r1 := @parameter0: org.codehaus.groovy.tools.javac.JavaCompilerFactory;

        r0.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit: org.codehaus.groovy.tools.javac.JavaCompilerFactory compilerFactory> = r1;

        return;
    }

    static java.util.LinkedList access$000(org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit)
    {
        org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit r0;
        java.util.LinkedList $r1;

        r0 := @parameter0: org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit;

        $r1 = r0.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit: java.util.LinkedList javaSources>;

        return $r1;
    }

    static org.codehaus.groovy.tools.javac.JavaStubGenerator access$100(org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit)
    {
        org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit r0;
        org.codehaus.groovy.tools.javac.JavaStubGenerator $r1;

        r0 := @parameter0: org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit;

        $r1 = r0.<org.codehaus.groovy.tools.javac.JavaAwareCompilationUnit: org.codehaus.groovy.tools.javac.JavaStubGenerator stubGenerator>;

        return $r1;
    }
}
