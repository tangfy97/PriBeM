public class ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs extends ucar.nc2.dt.point.PointObsDatatypeImpl
{
    protected int recno;
    protected ucar.unidata.geoloc.LatLonPointImpl llpt;
    protected ucar.ma2.StructureData sdata;
    final ucar.nc2.dt.point.RecordDatasetHelper this$0;

    protected void <init>(ucar.nc2.dt.point.RecordDatasetHelper)
    {
        ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs r0;
        ucar.nc2.dt.point.RecordDatasetHelper r1;

        r0 := @this: ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs;

        r1 := @parameter0: ucar.nc2.dt.point.RecordDatasetHelper;

        r0.<ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs: ucar.nc2.dt.point.RecordDatasetHelper this$0> = r1;

        specialinvoke r0.<ucar.nc2.dt.point.PointObsDatatypeImpl: void <init>()>();

        r0.<ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs: ucar.unidata.geoloc.LatLonPointImpl llpt> = null;

        return;
    }

    protected void <init>(ucar.nc2.dt.point.RecordDatasetHelper, ucar.unidata.geoloc.EarthLocation, double, double, int)
    {
        ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs r0;
        ucar.unidata.geoloc.EarthLocation r2;
        int i0;
        ucar.nc2.dt.point.RecordDatasetHelper r1;
        double d0, d1;

        r0 := @this: ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs;

        r1 := @parameter0: ucar.nc2.dt.point.RecordDatasetHelper;

        r2 := @parameter1: ucar.unidata.geoloc.EarthLocation;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        i0 := @parameter4: int;

        r0.<ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs: ucar.nc2.dt.point.RecordDatasetHelper this$0> = r1;

        specialinvoke r0.<ucar.nc2.dt.point.PointObsDatatypeImpl: void <init>(ucar.unidata.geoloc.EarthLocation,double,double)>(r2, d0, d1);

        r0.<ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs: ucar.unidata.geoloc.LatLonPointImpl llpt> = null;

        r0.<ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs: int recno> = i0;

        return;
    }

    public void <init>(ucar.nc2.dt.point.RecordDatasetHelper, int, ucar.ma2.StructureData)
    {
        ucar.unidata.geoloc.EarthLocationImpl $r13;
        ucar.ma2.StructureMembers$Member $r5, $r8;
        ucar.ma2.StructureData r2;
        ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs r0;
        int i0;
        java.lang.String $r4, $r6, $r7, $r9, $r10, $r11, $r12;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;
        ucar.nc2.dt.point.RecordDatasetHelper r1;
        ucar.ma2.StructureMembers $r3;

        r0 := @this: ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs;

        r1 := @parameter0: ucar.nc2.dt.point.RecordDatasetHelper;

        i0 := @parameter1: int;

        r2 := @parameter2: ucar.ma2.StructureData;

        r0.<ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs: ucar.nc2.dt.point.RecordDatasetHelper this$0> = r1;

        specialinvoke r0.<ucar.nc2.dt.point.PointObsDatatypeImpl: void <init>()>();

        r0.<ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs: ucar.unidata.geoloc.LatLonPointImpl llpt> = null;

        r0.<ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs: int recno> = i0;

        r0.<ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs: ucar.ma2.StructureData sdata> = r2;

        $r3 = virtualinvoke r2.<ucar.ma2.StructureData: ucar.ma2.StructureMembers getStructureMembers()>();

        $r4 = r1.<ucar.nc2.dt.point.RecordDatasetHelper: java.lang.String obsTimeVName>;

        $r5 = virtualinvoke $r3.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r4);

        $d0 = virtualinvoke r2.<ucar.ma2.StructureData: double convertScalarDouble(ucar.ma2.StructureMembers$Member)>($r5);

        r0.<ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs: double obsTime> = $d0;

        $r6 = r1.<ucar.nc2.dt.point.RecordDatasetHelper: java.lang.String nomTimeVName>;

        if $r6 != null goto label1;

        $d5 = r0.<ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs: double obsTime>;

        goto label2;

     label1:
        $r7 = r1.<ucar.nc2.dt.point.RecordDatasetHelper: java.lang.String nomTimeVName>;

        $r8 = virtualinvoke $r3.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>($r7);

        $d5 = virtualinvoke r2.<ucar.ma2.StructureData: double convertScalarDouble(ucar.ma2.StructureMembers$Member)>($r8);

     label2:
        r0.<ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs: double nomTime> = $d5;

        $r9 = r1.<ucar.nc2.dt.point.RecordDatasetHelper: java.lang.String latVName>;

        $d1 = virtualinvoke r2.<ucar.ma2.StructureData: double convertScalarDouble(java.lang.String)>($r9);

        $r10 = r1.<ucar.nc2.dt.point.RecordDatasetHelper: java.lang.String lonVName>;

        $d2 = virtualinvoke r2.<ucar.ma2.StructureData: double convertScalarDouble(java.lang.String)>($r10);

        $r11 = r1.<ucar.nc2.dt.point.RecordDatasetHelper: java.lang.String altVName>;

        if $r11 != null goto label3;

        $d6 = #NaN;

        goto label4;

     label3:
        $d3 = r1.<ucar.nc2.dt.point.RecordDatasetHelper: double altScaleFactor>;

        $r12 = r1.<ucar.nc2.dt.point.RecordDatasetHelper: java.lang.String altVName>;

        $d4 = virtualinvoke r2.<ucar.ma2.StructureData: double convertScalarDouble(java.lang.String)>($r12);

        $d6 = $d3 * $d4;

     label4:
        $r13 = new ucar.unidata.geoloc.EarthLocationImpl;

        specialinvoke $r13.<ucar.unidata.geoloc.EarthLocationImpl: void <init>(double,double,double)>($d1, $d2, $d6);

        r0.<ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs: ucar.unidata.geoloc.EarthLocation location> = $r13;

        return;
    }

    public ucar.unidata.geoloc.LatLonPoint getLatLon()
    {
        ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs r0;
        ucar.unidata.geoloc.EarthLocation $r4, $r5;
        ucar.unidata.geoloc.LatLonPointImpl $r1, $r2, $r3;
        double $d0, $d1;

        r0 := @this: ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs;

        $r1 = r0.<ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs: ucar.unidata.geoloc.LatLonPointImpl llpt>;

        if $r1 != null goto label1;

        $r3 = new ucar.unidata.geoloc.LatLonPointImpl;

        $r4 = r0.<ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs: ucar.unidata.geoloc.EarthLocation location>;

        $d0 = interfaceinvoke $r4.<ucar.unidata.geoloc.EarthLocation: double getLatitude()>();

        $r5 = r0.<ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs: ucar.unidata.geoloc.EarthLocation location>;

        $d1 = interfaceinvoke $r5.<ucar.unidata.geoloc.EarthLocation: double getLongitude()>();

        specialinvoke $r3.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>($d0, $d1);

        r0.<ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs: ucar.unidata.geoloc.LatLonPointImpl llpt> = $r3;

     label1:
        $r2 = r0.<ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs: ucar.unidata.geoloc.LatLonPointImpl llpt>;

        return $r2;
    }

    public java.util.Date getNominalTimeAsDate()
    {
        ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs r0;
        java.util.Date $r3;
        ucar.nc2.units.DateUnit $r2;
        ucar.nc2.dt.point.RecordDatasetHelper $r1;
        double $d0;

        r0 := @this: ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs;

        $r1 = r0.<ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs: ucar.nc2.dt.point.RecordDatasetHelper this$0>;

        $r2 = $r1.<ucar.nc2.dt.point.RecordDatasetHelper: ucar.nc2.units.DateUnit timeUnit>;

        $d0 = virtualinvoke r0.<ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs: double getNominalTime()>();

        $r3 = virtualinvoke $r2.<ucar.nc2.units.DateUnit: java.util.Date makeDate(double)>($d0);

        return $r3;
    }

    public java.util.Date getObservationTimeAsDate()
    {
        ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs r0;
        java.util.Date $r3;
        ucar.nc2.units.DateUnit $r2;
        ucar.nc2.dt.point.RecordDatasetHelper $r1;
        double $d0;

        r0 := @this: ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs;

        $r1 = r0.<ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs: ucar.nc2.dt.point.RecordDatasetHelper this$0>;

        $r2 = $r1.<ucar.nc2.dt.point.RecordDatasetHelper: ucar.nc2.units.DateUnit timeUnit>;

        $d0 = virtualinvoke r0.<ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs: double getObservationTime()>();

        $r3 = virtualinvoke $r2.<ucar.nc2.units.DateUnit: java.util.Date makeDate(double)>($d0);

        return $r3;
    }

    public ucar.ma2.StructureData getData() throws java.io.IOException
    {
        java.io.IOException $r7;
        ucar.nc2.dt.point.RecordDatasetHelper $r2;
        ucar.ma2.StructureData $r1, $r4, $r5;
        ucar.ma2.InvalidRangeException $r6;
        ucar.nc2.dataset.StructureDS $r3;
        ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs r0;
        int $i0;
        java.lang.String $r8;

        r0 := @this: ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs;

        $r1 = r0.<ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs: ucar.ma2.StructureData sdata>;

        if null == $r1 goto label1;

        $r5 = r0.<ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs: ucar.ma2.StructureData sdata>;

        return $r5;

     label1:
        $r2 = r0.<ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs: ucar.nc2.dt.point.RecordDatasetHelper this$0>;

        $r3 = $r2.<ucar.nc2.dt.point.RecordDatasetHelper: ucar.nc2.dataset.StructureDS recordVar>;

        $i0 = r0.<ucar.nc2.dt.point.RecordDatasetHelper$RecordPointObs: int recno>;

        $r4 = virtualinvoke $r3.<ucar.nc2.dataset.StructureDS: ucar.ma2.StructureData readStructure(int)>($i0);

     label2:
        return $r4;

     label3:
        $r6 := @caughtexception;

        virtualinvoke $r6.<ucar.ma2.InvalidRangeException: void printStackTrace()>();

        $r7 = new java.io.IOException;

        $r8 = virtualinvoke $r6.<ucar.ma2.InvalidRangeException: java.lang.String getMessage()>();

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r7;

        catch ucar.ma2.InvalidRangeException from label1 to label2 with label3;
    }
}
