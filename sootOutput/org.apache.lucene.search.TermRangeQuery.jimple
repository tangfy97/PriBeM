public class org.apache.lucene.search.TermRangeQuery extends org.apache.lucene.search.MultiTermQuery
{
    private org.apache.lucene.util.BytesRef lowerTerm;
    private org.apache.lucene.util.BytesRef upperTerm;
    private boolean includeLower;
    private boolean includeUpper;

    public void <init>(java.lang.String, org.apache.lucene.util.BytesRef, org.apache.lucene.util.BytesRef, boolean, boolean)
    {
        org.apache.lucene.util.BytesRef r2, r3;
        org.apache.lucene.search.TermRangeQuery r0;
        java.lang.String r1;
        boolean z0, z1;

        r0 := @this: org.apache.lucene.search.TermRangeQuery;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.lucene.util.BytesRef;

        r3 := @parameter2: org.apache.lucene.util.BytesRef;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        specialinvoke r0.<org.apache.lucene.search.MultiTermQuery: void <init>(java.lang.String)>(r1);

        r0.<org.apache.lucene.search.TermRangeQuery: org.apache.lucene.util.BytesRef lowerTerm> = r2;

        r0.<org.apache.lucene.search.TermRangeQuery: org.apache.lucene.util.BytesRef upperTerm> = r3;

        r0.<org.apache.lucene.search.TermRangeQuery: boolean includeLower> = z0;

        r0.<org.apache.lucene.search.TermRangeQuery: boolean includeUpper> = z1;

        return;
    }

    public static org.apache.lucene.search.TermRangeQuery newStringRange(java.lang.String, java.lang.String, java.lang.String, boolean, boolean)
    {
        org.apache.lucene.util.BytesRef r1, $r5, $r6;
        org.apache.lucene.search.TermRangeQuery $r3;
        java.lang.String r0, r2, r4;
        boolean z0, z1;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        if r0 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r5 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r5.<org.apache.lucene.util.BytesRef: void <init>(java.lang.CharSequence)>(r0);

     label2:
        r1 = $r5;

        if r2 != null goto label3;

        $r6 = null;

        goto label4;

     label3:
        $r6 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r6.<org.apache.lucene.util.BytesRef: void <init>(java.lang.CharSequence)>(r2);

     label4:
        $r3 = new org.apache.lucene.search.TermRangeQuery;

        specialinvoke $r3.<org.apache.lucene.search.TermRangeQuery: void <init>(java.lang.String,org.apache.lucene.util.BytesRef,org.apache.lucene.util.BytesRef,boolean,boolean)>(r4, r1, $r6, z0, z1);

        return $r3;
    }

    public org.apache.lucene.util.BytesRef getLowerTerm()
    {
        org.apache.lucene.util.BytesRef $r1;
        org.apache.lucene.search.TermRangeQuery r0;

        r0 := @this: org.apache.lucene.search.TermRangeQuery;

        $r1 = r0.<org.apache.lucene.search.TermRangeQuery: org.apache.lucene.util.BytesRef lowerTerm>;

        return $r1;
    }

    public org.apache.lucene.util.BytesRef getUpperTerm()
    {
        org.apache.lucene.util.BytesRef $r1;
        org.apache.lucene.search.TermRangeQuery r0;

        r0 := @this: org.apache.lucene.search.TermRangeQuery;

        $r1 = r0.<org.apache.lucene.search.TermRangeQuery: org.apache.lucene.util.BytesRef upperTerm>;

        return $r1;
    }

    public boolean includesLower()
    {
        org.apache.lucene.search.TermRangeQuery r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.search.TermRangeQuery;

        $z0 = r0.<org.apache.lucene.search.TermRangeQuery: boolean includeLower>;

        return $z0;
    }

    public boolean includesUpper()
    {
        org.apache.lucene.search.TermRangeQuery r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.search.TermRangeQuery;

        $z0 = r0.<org.apache.lucene.search.TermRangeQuery: boolean includeUpper>;

        return $z0;
    }

    protected org.apache.lucene.index.TermsEnum getTermsEnum(org.apache.lucene.index.Terms, org.apache.lucene.util.AttributeSource) throws java.io.IOException
    {
        org.apache.lucene.index.TermsEnum $r8, $r10;
        int $i0, $i1;
        org.apache.lucene.util.AttributeSource r9;
        boolean $z0, $z1, $z2;
        org.apache.lucene.search.TermRangeTermsEnum $r12;
        org.apache.lucene.index.Terms r2;
        org.apache.lucene.util.BytesRef $r1, $r3, $r4, $r5, $r6, $r7, $r11, $r13, $r14;
        org.apache.lucene.search.TermRangeQuery r0;

        r0 := @this: org.apache.lucene.search.TermRangeQuery;

        r2 := @parameter0: org.apache.lucene.index.Terms;

        r9 := @parameter1: org.apache.lucene.util.AttributeSource;

        $r1 = r0.<org.apache.lucene.search.TermRangeQuery: org.apache.lucene.util.BytesRef lowerTerm>;

        if $r1 == null goto label1;

        $r5 = r0.<org.apache.lucene.search.TermRangeQuery: org.apache.lucene.util.BytesRef upperTerm>;

        if $r5 == null goto label1;

        $r7 = r0.<org.apache.lucene.search.TermRangeQuery: org.apache.lucene.util.BytesRef lowerTerm>;

        $r6 = r0.<org.apache.lucene.search.TermRangeQuery: org.apache.lucene.util.BytesRef upperTerm>;

        $i1 = virtualinvoke $r7.<org.apache.lucene.util.BytesRef: int compareTo(org.apache.lucene.util.BytesRef)>($r6);

        if $i1 <= 0 goto label1;

        $r8 = <org.apache.lucene.index.TermsEnum: org.apache.lucene.index.TermsEnum EMPTY>;

        return $r8;

     label1:
        $r10 = virtualinvoke r2.<org.apache.lucene.index.Terms: org.apache.lucene.index.TermsEnum iterator(org.apache.lucene.index.TermsEnum)>(null);

        $r11 = r0.<org.apache.lucene.search.TermRangeQuery: org.apache.lucene.util.BytesRef lowerTerm>;

        if $r11 == null goto label2;

        $z0 = r0.<org.apache.lucene.search.TermRangeQuery: boolean includeLower>;

        if $z0 == 0 goto label3;

        $r4 = r0.<org.apache.lucene.search.TermRangeQuery: org.apache.lucene.util.BytesRef lowerTerm>;

        $i0 = $r4.<org.apache.lucene.util.BytesRef: int length>;

        if $i0 != 0 goto label3;

     label2:
        $r3 = r0.<org.apache.lucene.search.TermRangeQuery: org.apache.lucene.util.BytesRef upperTerm>;

        if $r3 != null goto label3;

        return $r10;

     label3:
        $r12 = new org.apache.lucene.search.TermRangeTermsEnum;

        $r13 = r0.<org.apache.lucene.search.TermRangeQuery: org.apache.lucene.util.BytesRef lowerTerm>;

        $r14 = r0.<org.apache.lucene.search.TermRangeQuery: org.apache.lucene.util.BytesRef upperTerm>;

        $z1 = r0.<org.apache.lucene.search.TermRangeQuery: boolean includeLower>;

        $z2 = r0.<org.apache.lucene.search.TermRangeQuery: boolean includeUpper>;

        specialinvoke $r12.<org.apache.lucene.search.TermRangeTermsEnum: void <init>(org.apache.lucene.index.TermsEnum,org.apache.lucene.util.BytesRef,org.apache.lucene.util.BytesRef,boolean,boolean)>($r10, $r13, $r14, $z1, $z2);

        return $r12;
    }

    public java.lang.String toString(java.lang.String)
    {
        java.lang.String $r2, r3, $r5, $r6, $r8, $r9, $r12, $r13, $r15, $r16, $r18;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.lucene.util.BytesRef $r4, $r7, $r10, $r11, $r14, $r17;
        char $c0, $c1;
        org.apache.lucene.search.TermRangeQuery r1;
        float $f0;
        java.lang.StringBuilder $r0;

        r1 := @this: org.apache.lucene.search.TermRangeQuery;

        r3 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.lucene.search.TermRangeQuery: java.lang.String getField()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 != 0 goto label01;

        $r15 = virtualinvoke r1.<org.apache.lucene.search.TermRangeQuery: java.lang.String getField()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

     label01:
        $z1 = r1.<org.apache.lucene.search.TermRangeQuery: boolean includeLower>;

        if $z1 == 0 goto label02;

        $c0 = 91;

        goto label03;

     label02:
        $c0 = 123;

     label03:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r4 = r1.<org.apache.lucene.search.TermRangeQuery: org.apache.lucene.util.BytesRef lowerTerm>;

        if $r4 == null goto label05;

        $r12 = "*";

        $r11 = r1.<org.apache.lucene.search.TermRangeQuery: org.apache.lucene.util.BytesRef lowerTerm>;

        $r13 = staticinvoke <org.apache.lucene.index.Term: java.lang.String toString(org.apache.lucene.util.BytesRef)>($r11);

        $z3 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z3 == 0 goto label04;

        $r16 = "\\*";

        goto label06;

     label04:
        $r14 = r1.<org.apache.lucene.search.TermRangeQuery: org.apache.lucene.util.BytesRef lowerTerm>;

        $r16 = staticinvoke <org.apache.lucene.index.Term: java.lang.String toString(org.apache.lucene.util.BytesRef)>($r14);

        goto label06;

     label05:
        $r16 = "*";

     label06:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" TO ");

        $r17 = r1.<org.apache.lucene.search.TermRangeQuery: org.apache.lucene.util.BytesRef upperTerm>;

        if $r17 == null goto label08;

        $r8 = "*";

        $r7 = r1.<org.apache.lucene.search.TermRangeQuery: org.apache.lucene.util.BytesRef upperTerm>;

        $r9 = staticinvoke <org.apache.lucene.index.Term: java.lang.String toString(org.apache.lucene.util.BytesRef)>($r7);

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z2 == 0 goto label07;

        $r18 = "\\*";

        goto label09;

     label07:
        $r10 = r1.<org.apache.lucene.search.TermRangeQuery: org.apache.lucene.util.BytesRef upperTerm>;

        $r18 = staticinvoke <org.apache.lucene.index.Term: java.lang.String toString(org.apache.lucene.util.BytesRef)>($r10);

        goto label09;

     label08:
        $r18 = "*";

     label09:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $z4 = r1.<org.apache.lucene.search.TermRangeQuery: boolean includeUpper>;

        if $z4 == 0 goto label10;

        $c1 = 93;

        goto label11;

     label10:
        $c1 = 125;

     label11:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        $f0 = virtualinvoke r1.<org.apache.lucene.search.TermRangeQuery: float getBoost()>();

        $r5 = staticinvoke <org.apache.lucene.util.ToStringUtils: java.lang.String boost(float)>($f0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public int hashCode()
    {
        short $s9, $s10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i11, $i12;
        boolean $z0, $z1;
        org.apache.lucene.util.BytesRef $r1, $r2, $r3, $r4;
        org.apache.lucene.search.TermRangeQuery r0;

        r0 := @this: org.apache.lucene.search.TermRangeQuery;

        $i0 = specialinvoke r0.<org.apache.lucene.search.MultiTermQuery: int hashCode()>();

        $i1 = 31 * $i0;

        $z0 = r0.<org.apache.lucene.search.TermRangeQuery: boolean includeLower>;

        if $z0 == 0 goto label1;

        $s9 = 1231;

        goto label2;

     label1:
        $s9 = 1237;

     label2:
        $i8 = $i1 + $s9;

        $i2 = 31 * $i8;

        $z1 = r0.<org.apache.lucene.search.TermRangeQuery: boolean includeUpper>;

        if $z1 == 0 goto label3;

        $s10 = 1231;

        goto label4;

     label3:
        $s10 = 1237;

     label4:
        $i7 = $i2 + $s10;

        $i3 = 31 * $i7;

        $r1 = r0.<org.apache.lucene.search.TermRangeQuery: org.apache.lucene.util.BytesRef lowerTerm>;

        if $r1 != null goto label5;

        $i11 = 0;

        goto label6;

     label5:
        $r2 = r0.<org.apache.lucene.search.TermRangeQuery: org.apache.lucene.util.BytesRef lowerTerm>;

        $i11 = virtualinvoke $r2.<org.apache.lucene.util.BytesRef: int hashCode()>();

     label6:
        $i6 = $i3 + $i11;

        $i4 = 31 * $i6;

        $r3 = r0.<org.apache.lucene.search.TermRangeQuery: org.apache.lucene.util.BytesRef upperTerm>;

        if $r3 != null goto label7;

        $i12 = 0;

        goto label8;

     label7:
        $r4 = r0.<org.apache.lucene.search.TermRangeQuery: org.apache.lucene.util.BytesRef upperTerm>;

        $i12 = virtualinvoke $r4.<org.apache.lucene.util.BytesRef: int hashCode()>();

     label8:
        $i5 = $i4 + $i12;

        return $i5;
    }

    public boolean equals(java.lang.Object)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.lucene.util.BytesRef $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        org.apache.lucene.search.TermRangeQuery r0, r4;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;

        r0 := @this: org.apache.lucene.search.TermRangeQuery;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<org.apache.lucene.search.MultiTermQuery: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

        return 0;

     label3:
        r4 = (org.apache.lucene.search.TermRangeQuery) r1;

        $z2 = r0.<org.apache.lucene.search.TermRangeQuery: boolean includeLower>;

        $z1 = r4.<org.apache.lucene.search.TermRangeQuery: boolean includeLower>;

        if $z2 == $z1 goto label4;

        return 0;

     label4:
        $z4 = r0.<org.apache.lucene.search.TermRangeQuery: boolean includeUpper>;

        $z3 = r4.<org.apache.lucene.search.TermRangeQuery: boolean includeUpper>;

        if $z4 == $z3 goto label5;

        return 0;

     label5:
        $r5 = r0.<org.apache.lucene.search.TermRangeQuery: org.apache.lucene.util.BytesRef lowerTerm>;

        if $r5 != null goto label6;

        $r12 = r4.<org.apache.lucene.search.TermRangeQuery: org.apache.lucene.util.BytesRef lowerTerm>;

        if $r12 == null goto label7;

        return 0;

     label6:
        $r7 = r0.<org.apache.lucene.search.TermRangeQuery: org.apache.lucene.util.BytesRef lowerTerm>;

        $r6 = r4.<org.apache.lucene.search.TermRangeQuery: org.apache.lucene.util.BytesRef lowerTerm>;

        $z5 = virtualinvoke $r7.<org.apache.lucene.util.BytesRef: boolean equals(java.lang.Object)>($r6);

        if $z5 != 0 goto label7;

        return 0;

     label7:
        $r8 = r0.<org.apache.lucene.search.TermRangeQuery: org.apache.lucene.util.BytesRef upperTerm>;

        if $r8 != null goto label8;

        $r11 = r4.<org.apache.lucene.search.TermRangeQuery: org.apache.lucene.util.BytesRef upperTerm>;

        if $r11 == null goto label9;

        return 0;

     label8:
        $r10 = r0.<org.apache.lucene.search.TermRangeQuery: org.apache.lucene.util.BytesRef upperTerm>;

        $r9 = r4.<org.apache.lucene.search.TermRangeQuery: org.apache.lucene.util.BytesRef upperTerm>;

        $z6 = virtualinvoke $r10.<org.apache.lucene.util.BytesRef: boolean equals(java.lang.Object)>($r9);

        if $z6 != 0 goto label9;

        return 0;

     label9:
        return 1;
    }
}
