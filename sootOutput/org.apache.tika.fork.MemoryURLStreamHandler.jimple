class org.apache.tika.fork.MemoryURLStreamHandler extends java.net.URLStreamHandler
{
    private static final java.util.concurrent.atomic.AtomicInteger counter;
    private static final java.util.List records;

    void <init>()
    {
        org.apache.tika.fork.MemoryURLStreamHandler r0;

        r0 := @this: org.apache.tika.fork.MemoryURLStreamHandler;

        specialinvoke r0.<java.net.URLStreamHandler: void <init>()>();

        return;
    }

    public static java.net.URL createURL(byte[])
    {
        byte[] r8;
        java.net.MalformedURLException $r10;
        java.net.URL $r1;
        java.lang.RuntimeException $r11;
        org.apache.tika.fork.MemoryURLStreamRecord $r6;
        java.util.List $r9;
        java.util.concurrent.atomic.AtomicInteger $r0;
        int $i0;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        java.lang.ref.WeakReference $r7;

        r8 := @parameter0: byte[];

     label1:
        $r0 = <org.apache.tika.fork.MemoryURLStreamHandler: java.util.concurrent.atomic.AtomicInteger counter>;

        $i0 = virtualinvoke $r0.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        $r1 = new java.net.URL;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.net.URL: void <init>(java.lang.String,java.lang.String,java.lang.String)>("tika-in-memory", "localhost", $r5);

        $r6 = new org.apache.tika.fork.MemoryURLStreamRecord;

        specialinvoke $r6.<org.apache.tika.fork.MemoryURLStreamRecord: void <init>()>();

        $r7 = new java.lang.ref.WeakReference;

        specialinvoke $r7.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r1);

        $r6.<org.apache.tika.fork.MemoryURLStreamRecord: java.lang.ref.WeakReference url> = $r7;

        $r6.<org.apache.tika.fork.MemoryURLStreamRecord: byte[] data> = r8;

        $r9 = <org.apache.tika.fork.MemoryURLStreamHandler: java.util.List records>;

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r6);

     label2:
        return $r1;

     label3:
        $r10 := @caughtexception;

        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r10);

        throw $r11;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    protected java.net.URLConnection openConnection(java.net.URL) throws java.io.IOException
    {
        byte[] $r14;
        java.net.URL r5, r12;
        org.apache.tika.fork.MemoryURLConnection $r13;
        java.lang.String $r7;
        java.lang.ref.WeakReference $r10;
        boolean $z0;
        java.util.Iterator $r1;
        java.io.IOException $r2;
        org.apache.tika.fork.MemoryURLStreamRecord r9;
        java.util.List $r0;
        org.apache.tika.fork.MemoryURLStreamHandler r15;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.Object $r8, $r11;

        r15 := @this: org.apache.tika.fork.MemoryURLStreamHandler;

        r5 := @parameter0: java.net.URL;

        $r0 = <org.apache.tika.fork.MemoryURLStreamHandler: java.util.List records>;

        $r1 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.apache.tika.fork.MemoryURLStreamRecord) $r8;

        $r10 = r9.<org.apache.tika.fork.MemoryURLStreamRecord: java.lang.ref.WeakReference url>;

        $r11 = virtualinvoke $r10.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r12 = (java.net.URL) $r11;

        if r12 != null goto label2;

        interfaceinvoke $r1.<java.util.Iterator: void remove()>();

        goto label3;

     label2:
        if r12 != r5 goto label3;

        $r13 = new org.apache.tika.fork.MemoryURLConnection;

        $r14 = r9.<org.apache.tika.fork.MemoryURLStreamRecord: byte[] data>;

        specialinvoke $r13.<org.apache.tika.fork.MemoryURLConnection: void <init>(java.net.URL,byte[])>(r5, $r14);

        return $r13;

     label3:
        goto label1;

     label4:
        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown URL: ");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r2;
    }

    static void <clinit>()
    {
        java.util.LinkedList $r1;
        java.util.concurrent.atomic.AtomicInteger $r0;

        $r0 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        <org.apache.tika.fork.MemoryURLStreamHandler: java.util.concurrent.atomic.AtomicInteger counter> = $r0;

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        <org.apache.tika.fork.MemoryURLStreamHandler: java.util.List records> = $r1;

        return;
    }
}
