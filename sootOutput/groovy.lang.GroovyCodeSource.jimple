public class groovy.lang.GroovyCodeSource extends java.lang.Object
{
    private java.security.CodeSource codeSource;
    private java.lang.String name;
    private java.io.InputStream inputStream;
    java.security.cert.Certificate[] certs;
    private boolean cachable;
    private java.io.File file;

    public void <init>(java.lang.String, java.lang.String, java.lang.String)
    {
        byte[] $r3;
        java.io.ByteArrayInputStream $r1;
        groovy.lang.GroovyCodeSource r0;
        java.lang.String r2, r4, r5;

        r0 := @this: groovy.lang.GroovyCodeSource;

        r2 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        $r1 = new java.io.ByteArrayInputStream;

        $r3 = virtualinvoke r2.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r3);

        specialinvoke r0.<groovy.lang.GroovyCodeSource: void <init>(java.io.InputStream,java.lang.String,java.lang.String)>($r1, r4, r5);

        return;
    }

    public void <init>(java.io.InputStream, java.lang.String, java.lang.String)
    {
        java.net.MalformedURLException $r9;
        java.net.URL $r5;
        groovy.lang.GroovyCodeSource r0;
        java.lang.RuntimeException $r10;
        java.lang.SecurityManager $r3;
        java.lang.StringBuffer $r11, $r12, $r13;
        java.security.cert.Certificate[] $r7;
        java.lang.String r2, r6, $r14;
        java.security.CodeSource $r4;
        groovy.security.GroovyCodeSourcePermission $r8;
        java.io.InputStream r1;

        r0 := @this: groovy.lang.GroovyCodeSource;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<groovy.lang.GroovyCodeSource: java.io.InputStream inputStream> = r1;

        r0.<groovy.lang.GroovyCodeSource: java.lang.String name> = r2;

        $r3 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();

        if $r3 == null goto label1;

        $r8 = new groovy.security.GroovyCodeSourcePermission;

        specialinvoke $r8.<groovy.security.GroovyCodeSourcePermission: void <init>(java.lang.String)>(r6);

        virtualinvoke $r3.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r8);

     label1:
        $r4 = new java.security.CodeSource;

        $r5 = new java.net.URL;

        specialinvoke $r5.<java.net.URL: void <init>(java.lang.String,java.lang.String,java.lang.String)>("file", "", r6);

        $r7 = (java.security.cert.Certificate[]) null;

        specialinvoke $r4.<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>($r5, $r7);

        r0.<groovy.lang.GroovyCodeSource: java.security.CodeSource codeSource> = $r4;

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        $r10 = new java.lang.RuntimeException;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("A CodeSource file URL cannot be constructed from the supplied codeBase: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14);

        throw $r10;

     label4:
        return;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    public void <init>(java.io.File) throws java.io.IOException
    {
        java.lang.SecurityException $r47;
        boolean $z0, $z1, $z2;
        java.io.FileNotFoundException $r32;
        java.lang.Object[] $r6, r48;
        groovy.lang.GroovyCodeSource r0;
        java.lang.StringBuffer $r12, $r14, $r15, $r17, $r18, $r20, $r21, $r24, $r26, $r27, $r29, $r30, $r33, $r35, $r36, $r38, $r39, $r43, $r44, $r45;
        java.lang.String $r3, $r8, $r13, $r16, $r19, $r22, $r25, $r28, $r31, $r34, $r37, $r40, $r46;
        java.security.PrivilegedActionException $r41;
        java.lang.RuntimeException $r11, $r42;
        java.lang.IllegalArgumentException $r23;
        java.io.File $r1, r2;
        groovy.lang.GroovyCodeSource$1 $r4;
        java.lang.Object $r5, $r7, $r9;
        java.security.CodeSource $r10;

        r0 := @this: groovy.lang.GroovyCodeSource;

        r2 := @parameter0: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.io.File;

        $r3 = virtualinvoke r2.<java.io.File: java.lang.String getCanonicalPath()>();

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r3);

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $r32 = new java.io.FileNotFoundException;

        $r33 = new java.lang.StringBuffer;

        specialinvoke $r33.<java.lang.StringBuffer: void <init>()>();

        $r34 = virtualinvoke $r1.<java.io.File: java.lang.String toString()>();

        $r35 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        $r37 = virtualinvoke $r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r32.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r40);

        throw $r32;

     label1:
        $z1 = virtualinvoke $r1.<java.io.File: boolean isDirectory()>();

        if $z1 == 0 goto label2;

        $r23 = new java.lang.IllegalArgumentException;

        $r24 = new java.lang.StringBuffer;

        specialinvoke $r24.<java.lang.StringBuffer: void <init>()>();

        $r25 = virtualinvoke $r1.<java.io.File: java.lang.String toString()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        $r28 = virtualinvoke $r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") is a directory not a Groovy source file.");

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r31);

        throw $r23;

     label2:
        $z2 = virtualinvoke $r1.<java.io.File: boolean canRead()>();

        if $z2 != 0 goto label3;

        $r11 = new java.lang.RuntimeException;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r1.<java.io.File: java.lang.String toString()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" can not be read. Check the read permisson of the file \"");

        $r16 = virtualinvoke $r1.<java.io.File: java.lang.String toString()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" (");

        $r19 = virtualinvoke $r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(").");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>($r22);

        throw $r11;

     label3:
        goto label5;

     label4:
        $r47 := @caughtexception;

        throw $r47;

     label5:
        r0.<groovy.lang.GroovyCodeSource: java.io.File file> = $r1;

        r0.<groovy.lang.GroovyCodeSource: java.io.InputStream inputStream> = null;

        r0.<groovy.lang.GroovyCodeSource: boolean cachable> = 1;

     label6:
        $r4 = new groovy.lang.GroovyCodeSource$1;

        specialinvoke $r4.<groovy.lang.GroovyCodeSource$1: void <init>(groovy.lang.GroovyCodeSource,java.io.File)>(r0, $r1);

        $r5 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>($r4);

        $r6 = (java.lang.Object[]) $r5;

        r48 = (java.lang.Object[]) $r6;

        $r7 = r48[0];

        $r8 = (java.lang.String) $r7;

        r0.<groovy.lang.GroovyCodeSource: java.lang.String name> = $r8;

        $r9 = r48[1];

        $r10 = (java.security.CodeSource) $r9;

        r0.<groovy.lang.GroovyCodeSource: java.security.CodeSource codeSource> = $r10;

     label7:
        goto label9;

     label8:
        $r41 := @caughtexception;

        $r42 = new java.lang.RuntimeException;

        $r43 = new java.lang.StringBuffer;

        specialinvoke $r43.<java.lang.StringBuffer: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not construct a URL from: ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r1);

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r42.<java.lang.RuntimeException: void <init>(java.lang.String)>($r46);

        throw $r42;

     label9:
        return;

        catch java.lang.SecurityException from label2 to label3 with label4;
        catch java.security.PrivilegedActionException from label6 to label7 with label8;
    }

    public void <init>(java.net.URL) throws java.io.IOException
    {
        java.net.URL r1;
        groovy.lang.GroovyCodeSource r0;
        java.security.cert.Certificate[] $r5;
        java.lang.String $r3;
        java.security.CodeSource $r4;
        java.lang.RuntimeException $r6;
        java.io.InputStream $r2;

        r0 := @this: groovy.lang.GroovyCodeSource;

        r1 := @parameter0: java.net.URL;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("Could not construct a GroovyCodeSource from a null URL");

        throw $r6;

     label1:
        $r2 = virtualinvoke r1.<java.net.URL: java.io.InputStream openStream()>();

        r0.<groovy.lang.GroovyCodeSource: java.io.InputStream inputStream> = $r2;

        $r3 = virtualinvoke r1.<java.net.URL: java.lang.String toExternalForm()>();

        r0.<groovy.lang.GroovyCodeSource: java.lang.String name> = $r3;

        $r4 = new java.security.CodeSource;

        $r5 = (java.security.cert.Certificate[]) null;

        specialinvoke $r4.<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>(r1, $r5);

        r0.<groovy.lang.GroovyCodeSource: java.security.CodeSource codeSource> = $r4;

        return;
    }

    java.security.CodeSource getCodeSource()
    {
        groovy.lang.GroovyCodeSource r0;
        java.security.CodeSource $r1;

        r0 := @this: groovy.lang.GroovyCodeSource;

        $r1 = r0.<groovy.lang.GroovyCodeSource: java.security.CodeSource codeSource>;

        return $r1;
    }

    public java.io.InputStream getInputStream()
    {
        groovy.lang.GroovyCodeSource r0;
        java.io.FileInputStream $r4;
        java.io.File $r2, $r5;
        java.io.FileNotFoundException $r7;
        java.io.InputStream $r1, $r3, $r6;

        r0 := @this: groovy.lang.GroovyCodeSource;

        $r1 = r0.<groovy.lang.GroovyCodeSource: java.io.InputStream inputStream>;

        if $r1 == null goto label1;

        $r6 = r0.<groovy.lang.GroovyCodeSource: java.io.InputStream inputStream>;

        return $r6;

     label1:
        $r2 = r0.<groovy.lang.GroovyCodeSource: java.io.File file>;

        if $r2 == null goto label3;

        $r4 = new java.io.FileInputStream;

        $r5 = r0.<groovy.lang.GroovyCodeSource: java.io.File file>;

        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>($r5);

     label2:
        return $r4;

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

     label5:
        $r3 = r0.<groovy.lang.GroovyCodeSource: java.io.InputStream inputStream>;

        return $r3;

        catch java.io.FileNotFoundException from label1 to label2 with label4;
    }

    public java.lang.String getName()
    {
        groovy.lang.GroovyCodeSource r0;
        java.lang.String $r1;

        r0 := @this: groovy.lang.GroovyCodeSource;

        $r1 = r0.<groovy.lang.GroovyCodeSource: java.lang.String name>;

        return $r1;
    }

    public java.io.File getFile()
    {
        groovy.lang.GroovyCodeSource r0;
        java.io.File $r1;

        r0 := @this: groovy.lang.GroovyCodeSource;

        $r1 = r0.<groovy.lang.GroovyCodeSource: java.io.File file>;

        return $r1;
    }

    public void setCachable(boolean)
    {
        groovy.lang.GroovyCodeSource r0;
        boolean z0;

        r0 := @this: groovy.lang.GroovyCodeSource;

        z0 := @parameter0: boolean;

        r0.<groovy.lang.GroovyCodeSource: boolean cachable> = z0;

        return;
    }

    public boolean isCachable()
    {
        groovy.lang.GroovyCodeSource r0;
        boolean $z0;

        r0 := @this: groovy.lang.GroovyCodeSource;

        $z0 = r0.<groovy.lang.GroovyCodeSource: boolean cachable>;

        return $z0;
    }
}
