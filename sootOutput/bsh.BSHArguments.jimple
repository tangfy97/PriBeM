class bsh.BSHArguments extends bsh.SimpleNode
{

    void <init>(int)
    {
        int i0;
        bsh.BSHArguments r0;

        r0 := @this: bsh.BSHArguments;

        i0 := @parameter0: int;

        specialinvoke r0.<bsh.SimpleNode: void <init>(int)>(i0);

        return;
    }

    public java.lang.Object[] getArguments(bsh.CallStack, bsh.Interpreter) throws bsh.EvalError
    {
        java.lang.Object[] r1;
        bsh.SimpleNode $r5, $r13;
        bsh.CallStack r3;
        bsh.BSHArguments r0;
        java.lang.StringBuffer $r10, $r11, $r15;
        int $i0, $i1, i2;
        java.lang.String $r14, $r16;
        bsh.EvalError $r9;
        bsh.Interpreter r4;
        bsh.Primitive $r7;
        java.lang.Object $r6, $r8;
        bsh.Node $r2, $r12;

        r0 := @this: bsh.BSHArguments;

        r3 := @parameter0: bsh.CallStack;

        r4 := @parameter1: bsh.Interpreter;

        $i0 = virtualinvoke r0.<bsh.BSHArguments: int jjtGetNumChildren()>();

        r1 = newarray (java.lang.Object)[$i0];

        i2 = 0;

        goto label3;

     label1:
        $r2 = virtualinvoke r0.<bsh.BSHArguments: bsh.Node jjtGetChild(int)>(i2);

        $r5 = (bsh.SimpleNode) $r2;

        $r6 = virtualinvoke $r5.<bsh.SimpleNode: java.lang.Object eval(bsh.CallStack,bsh.Interpreter)>(r3, r4);

        r1[i2] = $r6;

        $r8 = r1[i2];

        $r7 = <bsh.Primitive: bsh.Primitive VOID>;

        if $r8 != $r7 goto label2;

        $r9 = new bsh.EvalError;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Undefined argument: ");

        $r12 = virtualinvoke r0.<bsh.BSHArguments: bsh.Node jjtGetChild(int)>(i2);

        $r13 = (bsh.SimpleNode) $r12;

        $r14 = virtualinvoke $r13.<bsh.SimpleNode: java.lang.String getText()>();

        $r15 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r9.<bsh.EvalError: void <init>(java.lang.String,bsh.SimpleNode,bsh.CallStack)>($r16, r0, r3);

        throw $r9;

     label2:
        i2 = i2 + 1;

     label3:
        $i1 = lengthof r1;

        if i2 < $i1 goto label1;

        return r1;
    }
}
