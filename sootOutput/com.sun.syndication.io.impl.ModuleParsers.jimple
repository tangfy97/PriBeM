public class com.sun.syndication.io.impl.ModuleParsers extends com.sun.syndication.io.impl.PluginManager
{

    public void <init>(java.lang.String, com.sun.syndication.io.WireFeedParser)
    {
        com.sun.syndication.io.WireFeedParser r2;
        java.lang.String r1;
        com.sun.syndication.io.impl.ModuleParsers r0;

        r0 := @this: com.sun.syndication.io.impl.ModuleParsers;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.sun.syndication.io.WireFeedParser;

        specialinvoke r0.<com.sun.syndication.io.impl.PluginManager: void <init>(java.lang.String,com.sun.syndication.io.WireFeedParser,com.sun.syndication.io.WireFeedGenerator)>(r1, r2, null);

        return;
    }

    public java.lang.String getKey(java.lang.Object)
    {
        com.sun.syndication.io.ModuleParser $r1;
        java.lang.Object r0;
        java.lang.String $r2;
        com.sun.syndication.io.impl.ModuleParsers r3;

        r3 := @this: com.sun.syndication.io.impl.ModuleParsers;

        r0 := @parameter0: java.lang.Object;

        $r1 = (com.sun.syndication.io.ModuleParser) r0;

        $r2 = interfaceinvoke $r1.<com.sun.syndication.io.ModuleParser: java.lang.String getNamespaceUri()>();

        return $r2;
    }

    public java.util.List getModuleNamespaces()
    {
        java.util.List $r1;
        com.sun.syndication.io.impl.ModuleParsers r0;

        r0 := @this: com.sun.syndication.io.impl.ModuleParsers;

        $r1 = virtualinvoke r0.<com.sun.syndication.io.impl.ModuleParsers: java.util.List getKeys()>();

        return $r1;
    }

    public java.util.List parseModules(org.jdom.Element)
    {
        com.sun.syndication.io.ModuleParser r3;
        com.sun.syndication.io.impl.ModuleParsers r0;
        java.util.ArrayList $r8, r9;
        java.util.List $r1;
        int $i0, i1;
        java.lang.Object $r2;
        org.jdom.Namespace $r5;
        java.lang.String $r4;
        org.jdom.Element r6;
        boolean $z0;
        com.sun.syndication.feed.module.Module $r7;

        r0 := @this: com.sun.syndication.io.impl.ModuleParsers;

        r6 := @parameter0: org.jdom.Element;

        $r1 = virtualinvoke r0.<com.sun.syndication.io.impl.ModuleParsers: java.util.List getPlugins()>();

        r9 = null;

        i1 = 0;

     label1:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i1 >= $i0 goto label4;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (com.sun.syndication.io.ModuleParser) $r2;

        $r4 = interfaceinvoke r3.<com.sun.syndication.io.ModuleParser: java.lang.String getNamespaceUri()>();

        $r5 = staticinvoke <org.jdom.Namespace: org.jdom.Namespace getNamespace(java.lang.String)>($r4);

        $z0 = specialinvoke r0.<com.sun.syndication.io.impl.ModuleParsers: boolean hasElementsFrom(org.jdom.Element,org.jdom.Namespace)>(r6, $r5);

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r3.<com.sun.syndication.io.ModuleParser: com.sun.syndication.feed.module.Module parse(org.jdom.Element)>(r6);

        if $r7 == null goto label3;

        if r9 != null goto label2;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r9 = $r8;

     label2:
        interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>($r7);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return r9;
    }

    private boolean hasElementsFrom(org.jdom.Element, org.jdom.Namespace)
    {
        com.sun.syndication.io.impl.ModuleParsers r6;
        java.util.List $r1;
        int $i0, i1;
        java.lang.Object $r2;
        org.jdom.Namespace r4, $r5;
        org.jdom.Element r0, r3;
        boolean z0;

        r6 := @this: com.sun.syndication.io.impl.ModuleParsers;

        r0 := @parameter0: org.jdom.Element;

        r4 := @parameter1: org.jdom.Namespace;

        z0 = 0;

        if 0 != 0 goto label2;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren()>();

        i1 = 0;

     label1:
        if z0 != 0 goto label2;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (org.jdom.Element) $r2;

        $r5 = virtualinvoke r3.<org.jdom.Element: org.jdom.Namespace getNamespace()>();

        z0 = virtualinvoke r4.<org.jdom.Namespace: boolean equals(java.lang.Object)>($r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return z0;
    }
}
