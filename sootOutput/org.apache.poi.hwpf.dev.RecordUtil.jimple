public class org.apache.poi.hwpf.dev.RecordUtil extends java.lang.Object
{

    public static java.lang.String getBitFieldFunction(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, $r3, r4, $r8, $r13, r18, r19;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r14, $r15, $r16, $r17;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r3 = staticinvoke <org.apache.poi.hwpf.dev.RecordUtil: java.lang.String getBitFieldType(java.lang.String,java.lang.String,java.lang.String)>(r0, r1, r2);

        r18 = "";

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("true");

        if $z0 == 0 goto label1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("boolean");

        if $z1 == 0 goto label2;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("is");

        $r13 = staticinvoke <org.apache.poi.hwpf.dev.RecordUtil: java.lang.String getFieldName1stCap(java.lang.String,int)>(r0, 0);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("get");

        $r8 = staticinvoke <org.apache.poi.hwpf.dev.RecordUtil: java.lang.String getFieldName1stCap(java.lang.String,int)>(r0, 0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        r19 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        return r19;
    }

    public static java.lang.String getBitFieldGet(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, $r3, r10, r18;
        boolean $z0;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r10 := @parameter3: java.lang.String;

        $r3 = staticinvoke <org.apache.poi.hwpf.dev.RecordUtil: java.lang.String getBitFieldType(java.lang.String,java.lang.String,java.lang.String)>(r0, r1, r2);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("boolean");

        if $z0 == 0 goto label1;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".isSet(");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(");");

        r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("( ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".getValue(");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(");");

        r18 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return r18;
    }

    public static java.lang.String getBitFieldSet(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r9, $r10, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r25, $r26, $r27, $r28, $r29, $r31, $r32, $r33, $r34;
        java.lang.String r0, r1, r2, $r3, $r8, r11, $r15, $r24, $r30, r35;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r11 := @parameter3: java.lang.String;

        $r3 = staticinvoke <org.apache.poi.hwpf.dev.RecordUtil: java.lang.String getBitFieldType(java.lang.String,java.lang.String,java.lang.String)>(r0, r1, r2);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("boolean");

        if $z0 == 0 goto label2;

        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("int");

        if $z2 == 0 goto label1;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = staticinvoke <org.apache.poi.hwpf.dev.RecordUtil: java.lang.String getFieldName(java.lang.String,int)>(r0, 0);

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".setBoolean(");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", value)");

        r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label4;

     label1:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r24 = staticinvoke <org.apache.poi.hwpf.dev.RecordUtil: java.lang.String getFieldName(java.lang.String,int)>(r0, 0);

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".setBoolean(");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", value)");

        r35 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label4;

     label2:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("int");

        if $z1 == 0 goto label3;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = staticinvoke <org.apache.poi.hwpf.dev.RecordUtil: java.lang.String getFieldName(java.lang.String,int)>(r0, 0);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".setValue(");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", value)");

        r35 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label4;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = staticinvoke <org.apache.poi.hwpf.dev.RecordUtil: java.lang.String getFieldName(java.lang.String,int)>(r0, 0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".setValue(");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", value)");

        r35 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        return r35;
    }

    public static java.lang.String getBitFieldType(java.lang.String, java.lang.String, java.lang.String)
    {
        long $l0;
        byte b5, b6;
        int i1, $i2, $i3, $i4, i7;
        java.lang.String r0, $r1, r2, r3;
        boolean $z0, $z1, $z2;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        b5 = 0;

        b6 = 0;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(2);

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r1, 16);

        i1 = (int) $l0;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("byte");

        if $z0 == 0 goto label1;

        b5 = 8;

        goto label3;

     label1:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("short");

        if $z1 == 0 goto label2;

        b5 = 16;

        goto label3;

     label2:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("int");

        if $z2 == 0 goto label3;

        b5 = 32;

     label3:
        i7 = 0;

     label4:
        if i7 >= b5 goto label5;

        $i2 = i1 >> i7;

        $i3 = $i2 & 1;

        $i4 = b6 + $i3;

        b6 = (byte) $i4;

        i7 = i7 + 1;

        goto label4;

     label5:
        if b6 != 1 goto label6;

        return "boolean";

     label6:
        if b6 >= 8 goto label7;

        return "byte";

     label7:
        if b6 >= 16 goto label8;

        return "short";

     label8:
        return "int";
    }

    public static java.lang.String getConstName(java.lang.String, java.lang.String, int)
    {
        java.lang.StringBuffer $r0;
        int i0;
        java.lang.String r1, r2, $r3;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        staticinvoke <org.apache.poi.hwpf.dev.RecordUtil: void toConstIdentifier(java.lang.String,java.lang.StringBuffer)>(r1, $r0);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(95);

        staticinvoke <org.apache.poi.hwpf.dev.RecordUtil: void toConstIdentifier(java.lang.String,java.lang.StringBuffer)>(r2, $r0);

        staticinvoke <org.apache.poi.hwpf.dev.RecordUtil: java.lang.StringBuffer pad(java.lang.StringBuffer,int)>($r0, i0);

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public static java.lang.String getFieldName(int, java.lang.String, int)
    {
        java.lang.StringBuffer $r0;
        int i0, i1;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        java.lang.String $r5, r6, $r7;

        i0 := @parameter0: int;

        r6 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        $r0 = new java.lang.StringBuffer;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("field_");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>($r5);

        staticinvoke <org.apache.poi.hwpf.dev.RecordUtil: void toIdentifier(java.lang.String,java.lang.StringBuffer)>(r6, $r0);

        staticinvoke <org.apache.poi.hwpf.dev.RecordUtil: java.lang.StringBuffer pad(java.lang.StringBuffer,int)>($r0, i1);

        $r7 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }

    public static java.lang.String getFieldName(java.lang.String, int)
    {
        java.lang.StringBuffer $r0;
        int i0;
        java.lang.String r1, $r2;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        staticinvoke <org.apache.poi.hwpf.dev.RecordUtil: void toIdentifier(java.lang.String,java.lang.StringBuffer)>(r1, $r0);

        staticinvoke <org.apache.poi.hwpf.dev.RecordUtil: java.lang.StringBuffer pad(java.lang.StringBuffer,int)>($r0, i0);

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String getFieldName1stCap(java.lang.String, int)
    {
        java.lang.StringBuffer $r0;
        int i2;
        char $c0, $c1;
        java.lang.String r1, $r2;

        r1 := @parameter0: java.lang.String;

        i2 := @parameter1: int;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        staticinvoke <org.apache.poi.hwpf.dev.RecordUtil: void toIdentifier(java.lang.String,java.lang.StringBuffer)>(r1, $r0);

        $c0 = virtualinvoke $r0.<java.lang.StringBuffer: char charAt(int)>(0);

        $c1 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c0);

        virtualinvoke $r0.<java.lang.StringBuffer: void setCharAt(int,char)>(0, $c1);

        staticinvoke <org.apache.poi.hwpf.dev.RecordUtil: java.lang.StringBuffer pad(java.lang.StringBuffer,int)>($r0, i2);

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String getType1stCap(java.lang.String, java.lang.String, int)
    {
        char $c1, $c2;
        java.lang.StringBuffer $r0, $r2;
        int i0;
        java.lang.String r1, $r3, r4;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r2 = staticinvoke <org.apache.poi.hwpf.dev.RecordUtil: java.lang.StringBuffer pad(java.lang.StringBuffer,int)>($r0, i0);

        $c1 = virtualinvoke $r2.<java.lang.StringBuffer: char charAt(int)>(0);

        $c2 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c1);

        virtualinvoke $r2.<java.lang.StringBuffer: void setCharAt(int,char)>(0, $c2);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    protected static java.lang.StringBuffer pad(java.lang.StringBuffer, int)
    {
        int i0, i1;
        java.lang.StringBuffer r0;

        r0 := @parameter0: java.lang.StringBuffer;

        i0 := @parameter1: int;

        i1 = virtualinvoke r0.<java.lang.StringBuffer: int length()>();

     label1:
        if i1 >= i0 goto label2;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r0;
    }

    private static void toConstIdentifier(java.lang.String, java.lang.StringBuffer)
    {
        char $c1, $c2, $c3;
        java.lang.StringBuffer r1;
        int $i0, i4, $i5;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.StringBuffer;

        i4 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i4 >= $i0 goto label4;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $i5 = (int) $c1;

        if $i5 != 32 goto label2;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(95);

        goto label3;

     label2:
        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $c3 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c2);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        return;
    }

    private static void toIdentifier(java.lang.String, java.lang.StringBuffer)
    {
        char $c1, $c2, $c3, $c4;
        java.lang.StringBuffer r1;
        int $i0, i5, $i6;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.StringBuffer;

        i5 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i5 >= $i0 goto label4;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i5);

        $i6 = (int) $c1;

        if $i6 != 32 goto label2;

        i5 = i5 + 1;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i5);

        $c4 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c3);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c4);

        goto label3;

     label2:
        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i5);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

     label3:
        i5 = i5 + 1;

        goto label1;

     label4:
        return;
    }

    public void <init>()
    {
        org.apache.poi.hwpf.dev.RecordUtil r0;

        r0 := @this: org.apache.poi.hwpf.dev.RecordUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
}
