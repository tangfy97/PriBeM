public class org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter extends java.io.FilterWriter
{
    private char delimiter;

    public void <init>(java.io.Writer, char)
    {
        java.io.Writer r1;
        org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter r0;
        char c0;

        r0 := @this: org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter;

        r1 := @parameter0: java.io.Writer;

        c0 := @parameter1: char;

        specialinvoke r0.<java.io.FilterWriter: void <init>(java.io.Writer)>(r1);

        r0.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter: char delimiter> = c0;

        return;
    }

    public void writeProperty(java.lang.String, java.lang.Object) throws java.io.IOException
    {
        org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter r0;
        java.lang.Object r2;
        java.lang.String r1;

        r0 := @this: org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter: void writeProperty(java.lang.String,java.lang.Object,boolean)>(r1, r2, 0);

        return;
    }

    public void writeProperty(java.lang.String, java.util.List) throws java.io.IOException
    {
        java.util.List r0;
        org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter r1;
        int $i0, i1;
        java.lang.Object $r3;
        java.lang.String r2;

        r1 := @this: org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.List;

        i1 = 0;

     label1:
        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        virtualinvoke r1.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter: void writeProperty(java.lang.String,java.lang.Object)>(r2, $r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void writeProperty(java.lang.String, java.lang.Object, boolean) throws java.io.IOException
    {
        org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter r1;
        java.util.List r4;
        java.lang.Object r0;
        java.lang.String r2, $r3, r5;
        boolean $z0, z1;

        r1 := @this: org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        z1 := @parameter2: boolean;

        $z0 = r0 instanceof java.util.List;

        if $z0 == 0 goto label3;

        r4 = (java.util.List) r0;

        if z1 == 0 goto label1;

        r5 = specialinvoke r1.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter: java.lang.String makeSingleLineValue(java.util.List)>(r4);

        goto label2;

     label1:
        virtualinvoke r1.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter: void writeProperty(java.lang.String,java.util.List)>(r2, r4);

        return;

     label2:
        goto label4;

     label3:
        r5 = specialinvoke r1.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter: java.lang.String escapeValue(java.lang.Object)>(r0);

     label4:
        $r3 = specialinvoke r1.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter: java.lang.String escapeKey(java.lang.String)>(r2);

        virtualinvoke r1.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter: void write(java.lang.String)>($r3);

        virtualinvoke r1.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter: void write(java.lang.String)>(" = ");

        virtualinvoke r1.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter: void write(java.lang.String)>(r5);

        virtualinvoke r1.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter: void writeln(java.lang.String)>(null);

        return;
    }

    public void writeComment(java.lang.String) throws java.io.IOException
    {
        org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter r0;
        java.lang.StringBuffer $r1, $r2, $r4;
        java.lang.String r3, $r5;

        r0 := @this: org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter;

        r3 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("# ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter: void writeln(java.lang.String)>($r5);

        return;
    }

    private java.lang.String escapeKey(java.lang.String)
    {
        char $c1;
        org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter r5;
        java.lang.StringBuffer $r0;
        int $i0, i2;
        char[] $r3, $r4;
        java.lang.String r1, $r2;
        boolean $z0, $z1;

        r5 := @this: org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        i2 = 0;

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i2 >= $i0 goto label5;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        $r3 = staticinvoke <org.apache.commons.configuration.PropertiesConfiguration: char[] access$100()>();

        $z0 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean contains(char[],char)>($r3, $c1);

        if $z0 != 0 goto label2;

        $r4 = staticinvoke <org.apache.commons.configuration.PropertiesConfiguration: char[] access$000()>();

        $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean contains(char[],char)>($r4, $c1);

        if $z1 == 0 goto label3;

     label2:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        goto label4;

     label3:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    private java.lang.String escapeValue(java.lang.Object)
    {
        char $c0, $c1, $c2;
        org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter r3;
        java.lang.StringBuffer $r5, $r6, $r7;
        java.lang.Object r0;
        java.lang.String $r1, $r2, $r4, $r8, r9;

        r3 := @this: org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        $r2 = staticinvoke <org.apache.commons.lang.StringEscapeUtils: java.lang.String escapeJava(java.lang.String)>($r1);

        r9 = $r2;

        $c0 = r3.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter: char delimiter>;

        if $c0 == 0 goto label1;

        $c1 = r3.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter: char delimiter>;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c1);

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\");

        $c2 = r3.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter: char delimiter>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        r9 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>($r2, $r4, $r8);

     label1:
        return r9;
    }

    private java.lang.String makeSingleLineValue(java.util.List)
    {
        java.util.Iterator $r1;
        char $c0;
        java.util.List r0;
        org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter r2;
        java.lang.StringBuffer $r5, $r9;
        java.lang.Object $r3, $r7;
        java.lang.String $r4, $r6, $r8, r10;
        boolean $z0, $z1, $z2;

        r2 := @this: org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter;

        r0 := @parameter0: java.util.List;

        $z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

        $r3 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = specialinvoke r2.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter: java.lang.String escapeValue(java.lang.Object)>($r3);

        r10 = $r4;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(java.lang.String)>($r4);

     label1:
        $z1 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $z2 = virtualinvoke r10.<java.lang.String: boolean endsWith(java.lang.String)>("\\");

        if $z2 == 0 goto label2;

        $r9 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\");

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\");

     label2:
        $c0 = r2.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter: char delimiter>;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c0);

        $r7 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r8 = specialinvoke r2.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter: java.lang.String escapeValue(java.lang.Object)>($r7);

        r10 = $r8;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        goto label1;

     label3:
        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;

     label4:
        return null;
    }

    public void writeln(java.lang.String) throws java.io.IOException
    {
        org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter r1;
        java.lang.String r0, $r2;

        r1 := @this: org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        virtualinvoke r1.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter: void write(java.lang.String)>(r0);

     label1:
        $r2 = staticinvoke <org.apache.commons.configuration.PropertiesConfiguration: java.lang.String access$200()>();

        virtualinvoke r1.<org.apache.commons.configuration.PropertiesConfiguration$PropertiesWriter: void write(java.lang.String)>($r2);

        return;
    }
}
