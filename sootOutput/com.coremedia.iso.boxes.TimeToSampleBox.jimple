public class com.coremedia.iso.boxes.TimeToSampleBox extends com.googlecode.mp4parser.AbstractFullBox
{
    public static final java.lang.String TYPE;
    java.util.List entries;
    static java.util.Map cache;
    static final boolean $assertionsDisabled;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_1;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_2;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.util.WeakHashMap $r1;
        boolean $z0, $z1;

        <com.coremedia.iso.boxes.TimeToSampleBox: java.lang.String TYPE> = "stts";

        staticinvoke <com.coremedia.iso.boxes.TimeToSampleBox: void ajc$preClinit()>();

        $r0 = class "Lcom/coremedia/iso/boxes/TimeToSampleBox;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.coremedia.iso.boxes.TimeToSampleBox: boolean $assertionsDisabled> = $z1;

        $r1 = new java.util.WeakHashMap;

        specialinvoke $r1.<java.util.WeakHashMap: void <init>()>();

        <com.coremedia.iso.boxes.TimeToSampleBox: java.util.Map cache> = $r1;

        return;
    }

    public void <init>()
    {
        java.util.List $r1;
        com.coremedia.iso.boxes.TimeToSampleBox r0;

        r0 := @this: com.coremedia.iso.boxes.TimeToSampleBox;

        specialinvoke r0.<com.googlecode.mp4parser.AbstractFullBox: void <init>(java.lang.String)>("stts");

        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<com.coremedia.iso.boxes.TimeToSampleBox: java.util.List entries> = $r1;

        return;
    }

    protected long getContentSize()
    {
        java.util.List $r1;
        com.coremedia.iso.boxes.TimeToSampleBox r0;
        int $i0, $i1, $i2;
        long $l3;

        r0 := @this: com.coremedia.iso.boxes.TimeToSampleBox;

        $r1 = r0.<com.coremedia.iso.boxes.TimeToSampleBox: java.util.List entries>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = $i0 * 8;

        $i2 = 8 + $i1;

        $l3 = (long) $i2;

        return $l3;
    }

    public void _parseDetails(java.nio.ByteBuffer)
    {
        com.coremedia.iso.boxes.TimeToSampleBox r0;
        long $l0, $l2, $l3;
        java.nio.ByteBuffer r1;
        java.util.ArrayList $r2;
        java.util.List $r4;
        int $i1, i4;
        com.coremedia.iso.boxes.TimeToSampleBox$Entry $r3;

        r0 := @this: com.coremedia.iso.boxes.TimeToSampleBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.TimeToSampleBox: long parseVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $l0 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        $i1 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l0);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i1);

        r0.<com.coremedia.iso.boxes.TimeToSampleBox: java.util.List entries> = $r2;

        i4 = 0;

        goto label2;

     label1:
        $r4 = r0.<com.coremedia.iso.boxes.TimeToSampleBox: java.util.List entries>;

        $r3 = new com.coremedia.iso.boxes.TimeToSampleBox$Entry;

        $l2 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        $l3 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        specialinvoke $r3.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: void <init>(long,long)>($l2, $l3);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r3);

        i4 = i4 + 1;

     label2:
        if i4 < $i1 goto label1;

        return;
    }

    protected void getContent(java.nio.ByteBuffer)
    {
        java.util.Iterator $r4;
        com.coremedia.iso.boxes.TimeToSampleBox r0;
        long $l1, $l2, $l3;
        java.nio.ByteBuffer r1;
        java.util.List $r2, $r3;
        int $i0;
        java.lang.Object $r5;
        boolean $z0;
        com.coremedia.iso.boxes.TimeToSampleBox$Entry r6;

        r0 := @this: com.coremedia.iso.boxes.TimeToSampleBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.TimeToSampleBox: void writeVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $r2 = r0.<com.coremedia.iso.boxes.TimeToSampleBox: java.util.List entries>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $l1 = (long) $i0;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l1);

        $r3 = r0.<com.coremedia.iso.boxes.TimeToSampleBox: java.util.List entries>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.coremedia.iso.boxes.TimeToSampleBox$Entry) $r5;

        $l2 = virtualinvoke r6.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getCount()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l2);

        $l3 = virtualinvoke r6.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getDelta()>();

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l3);

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return;
    }

    public java.util.List getEntries()
    {
        java.util.List $r4;
        com.coremedia.iso.boxes.TimeToSampleBox r0;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.TimeToSampleBox;

        $r1 = <com.coremedia.iso.boxes.TimeToSampleBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $r4 = r0.<com.coremedia.iso.boxes.TimeToSampleBox: java.util.List entries>;

        return $r4;
    }

    public void setEntries(java.util.List)
    {
        java.util.List r0;
        com.coremedia.iso.boxes.TimeToSampleBox r1;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r4;
        org.aspectj.lang.JoinPoint$StaticPart $r2;
        org.aspectj.lang.JoinPoint $r3;

        r1 := @this: com.coremedia.iso.boxes.TimeToSampleBox;

        r0 := @parameter0: java.util.List;

        $r2 = <com.coremedia.iso.boxes.TimeToSampleBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_1>;

        $r3 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object)>($r2, r1, r1, r0);

        $r4 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r3);

        r1.<com.coremedia.iso.boxes.TimeToSampleBox: java.util.List entries> = r0;

        return;
    }

    public java.lang.String toString()
    {
        com.coremedia.iso.boxes.TimeToSampleBox r0;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        java.util.List $r5;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        int $i0;
        java.lang.StringBuilder $r4, $r6, $r7;
        java.lang.String $r8;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.TimeToSampleBox;

        $r1 = <com.coremedia.iso.boxes.TimeToSampleBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_2>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("TimeToSampleBox[entryCount=");

        $r5 = r0.<com.coremedia.iso.boxes.TimeToSampleBox: java.util.List entries>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public static synchronized long[] blowupTimeToSamples(java.util.List)
    {
        byte $b4, $b7;
        java.util.Map $r1, $r10;
        boolean $z0, $z1, $z2;
        java.util.List r0;
        long $l0, $l2, $l3, $l6, l8;
        java.lang.AssertionError $r16;
        long[] $r11, $r14;
        int $i1, $i5, i9, i10, $i11, $i12;
        java.lang.ref.SoftReference $r3, $r17;
        com.coremedia.iso.boxes.TimeToSampleBox$Entry r8, r15;
        java.util.Iterator $r4, $r6;
        java.lang.Object $r2, $r5, $r7, $r13;

        r0 := @parameter0: java.util.List;

        $r1 = <com.coremedia.iso.boxes.TimeToSampleBox: java.util.Map cache>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r3 = (java.lang.ref.SoftReference) $r2;

        if $r3 == null goto label1;

        $r13 = virtualinvoke $r3.<java.lang.ref.SoftReference: java.lang.Object get()>();

        $r14 = (long[]) $r13;

        if $r14 == null goto label1;

        return $r14;

     label1:
        l8 = 0L;

        $r4 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

        goto label3;

     label2:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r15 = (com.coremedia.iso.boxes.TimeToSampleBox$Entry) $r5;

        $l0 = virtualinvoke r15.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getCount()>();

        l8 = l8 + $l0;

     label3:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        $z1 = <com.coremedia.iso.boxes.TimeToSampleBox: boolean $assertionsDisabled>;

        if $z1 != 0 goto label4;

        $b7 = l8 cmp 2147483647L;

        $i11 = (int) $b7;

        if $i11 <= 0 goto label4;

        $r16 = new java.lang.AssertionError;

        specialinvoke $r16.<java.lang.AssertionError: void <init>()>();

        throw $r16;

     label4:
        $i1 = (int) l8;

        $r11 = newarray (long)[$i1];

        i9 = 0;

        $r6 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

        goto label8;

     label5:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.coremedia.iso.boxes.TimeToSampleBox$Entry) $r7;

        i10 = 0;

        goto label7;

     label6:
        $i5 = i9;

        i9 = i9 + 1;

        $l6 = virtualinvoke r8.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getDelta()>();

        $r11[$i5] = $l6;

        i10 = i10 + 1;

     label7:
        $l2 = (long) i10;

        $l3 = virtualinvoke r8.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getCount()>();

        $b4 = $l2 cmp $l3;

        $i12 = (int) $b4;

        if $i12 < 0 goto label6;

     label8:
        $z2 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label5;

        $r10 = <com.coremedia.iso.boxes.TimeToSampleBox: java.util.Map cache>;

        $r17 = new java.lang.ref.SoftReference;

        specialinvoke $r17.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>($r11);

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r17);

        return $r11;
    }

    private static void ajc$preClinit()
    {
        org.aspectj.runtime.reflect.Factory $r0;
        org.aspectj.lang.JoinPoint$StaticPart $r2, $r4, $r6;
        org.aspectj.lang.reflect.MethodSignature $r1, $r3, $r5;

        $r0 = new org.aspectj.runtime.reflect.Factory;

        specialinvoke $r0.<org.aspectj.runtime.reflect.Factory: void <init>(java.lang.String,java.lang.Class)>("TimeToSampleBox.java", class "Lcom/coremedia/iso/boxes/TimeToSampleBox;");

        $r1 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "getEntries", "com.coremedia.iso.boxes.TimeToSampleBox", "", "", "", "java.util.List");

        $r2 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r1, 79);

        <com.coremedia.iso.boxes.TimeToSampleBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0> = $r2;

        $r3 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "setEntries", "com.coremedia.iso.boxes.TimeToSampleBox", "java.util.List", "entries", "", "void");

        $r4 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r3, 83);

        <com.coremedia.iso.boxes.TimeToSampleBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_1> = $r4;

        $r5 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "toString", "com.coremedia.iso.boxes.TimeToSampleBox", "", "", "", "java.lang.String");

        $r6 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r5, 87);

        <com.coremedia.iso.boxes.TimeToSampleBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_2> = $r6;

        return;
    }
}
