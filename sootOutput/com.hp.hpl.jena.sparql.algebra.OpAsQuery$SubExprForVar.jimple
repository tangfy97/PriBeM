public class com.hp.hpl.jena.sparql.algebra.OpAsQuery$SubExprForVar extends com.hp.hpl.jena.sparql.expr.ExprTransformCopy
{
    private final java.util.Map varExpr;
    private boolean subOccurred;

    public void <init>(java.util.Map)
    {
        com.hp.hpl.jena.sparql.algebra.OpAsQuery$SubExprForVar r0;
        java.util.Map r1;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.OpAsQuery$SubExprForVar;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprTransformCopy: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.algebra.OpAsQuery$SubExprForVar: boolean subOccurred> = 0;

        r0.<com.hp.hpl.jena.sparql.algebra.OpAsQuery$SubExprForVar: java.util.Map varExpr> = r1;

        return;
    }

    public boolean didChange()
    {
        com.hp.hpl.jena.sparql.algebra.OpAsQuery$SubExprForVar r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.OpAsQuery$SubExprForVar;

        $z0 = r0.<com.hp.hpl.jena.sparql.algebra.OpAsQuery$SubExprForVar: boolean subOccurred>;

        return $z0;
    }

    public com.hp.hpl.jena.sparql.expr.Expr transform(com.hp.hpl.jena.sparql.expr.ExprVar)
    {
        com.hp.hpl.jena.sparql.core.Var $r3, $r6;
        com.hp.hpl.jena.sparql.algebra.OpAsQuery$SubExprForVar r0;
        com.hp.hpl.jena.sparql.expr.Expr $r4, $r8, $r9;
        java.util.Map $r2, $r5;
        java.lang.Object $r7;
        com.hp.hpl.jena.sparql.expr.ExprVar r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.OpAsQuery$SubExprForVar;

        r1 := @parameter0: com.hp.hpl.jena.sparql.expr.ExprVar;

        $r2 = r0.<com.hp.hpl.jena.sparql.algebra.OpAsQuery$SubExprForVar: java.util.Map varExpr>;

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.expr.ExprVar: com.hp.hpl.jena.sparql.core.Var asVar()>();

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        r0.<com.hp.hpl.jena.sparql.algebra.OpAsQuery$SubExprForVar: boolean subOccurred> = 1;

        $r5 = r0.<com.hp.hpl.jena.sparql.algebra.OpAsQuery$SubExprForVar: java.util.Map varExpr>;

        $r6 = virtualinvoke r1.<com.hp.hpl.jena.sparql.expr.ExprVar: com.hp.hpl.jena.sparql.core.Var asVar()>();

        $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r8 = (com.hp.hpl.jena.sparql.expr.Expr) $r7;

        $r9 = interfaceinvoke $r8.<com.hp.hpl.jena.sparql.expr.Expr: com.hp.hpl.jena.sparql.expr.Expr deepCopy()>();

        return $r9;

     label1:
        $r4 = virtualinvoke r1.<com.hp.hpl.jena.sparql.expr.ExprVar: com.hp.hpl.jena.sparql.expr.Expr deepCopy()>();

        return $r4;
    }
}
