abstract class org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser extends java.lang.Object
{

    private void <init>()
    {
        org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser r0;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract int parseComponent(java.lang.String, int, java.util.Calendar) throws org.apache.commons.configuration.plist.ParseException;

    public abstract void formatComponent(java.lang.StringBuffer, java.util.Calendar);

    protected void checkLength(java.lang.String, int, int) throws org.apache.commons.configuration.plist.ParseException
    {
        org.apache.commons.configuration.plist.ParseException $r1;
        java.lang.StringBuffer $r2, $r3, $r4, $r5, $r6;
        int i0, i1, $i2, $i3;
        java.lang.String r0, $r7;
        org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser r8;

        r8 := @this: org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r0 != null goto label1;

        $i3 = 0;

        goto label2;

     label1:
        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

     label2:
        $i2 = i0 + i1;

        if $i2 <= $i3 goto label3;

        $r1 = new org.apache.commons.configuration.plist.ParseException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Input string too short: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", index: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<org.apache.commons.configuration.plist.ParseException: void <init>(java.lang.String)>($r7);

        throw $r1;

     label3:
        return;
    }

    protected void padNum(java.lang.StringBuffer, int, int)
    {
        java.lang.StringBuffer r0;
        int i0, i1;
        java.lang.String $r1, $r2;
        org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser r3;

        r3 := @this: org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser;

        r0 := @parameter0: java.lang.StringBuffer;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        $r2 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String leftPad(java.lang.String,int,char)>($r1, i1, 48);

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        return;
    }

    void <init>(org.apache.commons.configuration.plist.PropertyListConfiguration$1)
    {
        org.apache.commons.configuration.plist.PropertyListConfiguration$1 r1;
        org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser r0;

        r0 := @this: org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser;

        r1 := @parameter0: org.apache.commons.configuration.plist.PropertyListConfiguration$1;

        specialinvoke r0.<org.apache.commons.configuration.plist.PropertyListConfiguration$DateComponentParser: void <init>()>();

        return;
    }
}
