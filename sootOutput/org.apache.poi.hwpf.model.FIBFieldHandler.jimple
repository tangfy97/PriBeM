public final class org.apache.poi.hwpf.model.FIBFieldHandler extends java.lang.Object
{
    public static final int STSHFORIG;
    public static final int STSHF;
    public static final int PLCFFNDREF;
    public static final int PLCFFNDTXT;
    public static final int PLCFANDREF;
    public static final int PLCFANDTXT;
    public static final int PLCFSED;
    public static final int PLCFPAD;
    public static final int PLCFPHE;
    public static final int STTBGLSY;
    public static final int PLCFGLSY;
    public static final int PLCFHDD;
    public static final int PLCFBTECHPX;
    public static final int PLCFBTEPAPX;
    public static final int PLCFSEA;
    public static final int STTBFFFN;
    public static final int PLCFFLDMOM;
    public static final int PLCFFLDHDR;
    public static final int PLCFFLDFTN;
    public static final int PLCFFLDATN;
    public static final int PLCFFLDMCR;
    public static final int STTBFBKMK;
    public static final int PLCFBKF;
    public static final int PLCFBKL;
    public static final int CMDS;
    public static final int PLCMCR;
    public static final int STTBFMCR;
    public static final int PRDRVR;
    public static final int PRENVPORT;
    public static final int PRENVLAND;
    public static final int WSS;
    public static final int DOP;
    public static final int STTBFASSOC;
    public static final int CLX;
    public static final int PLCFPGDFTN;
    public static final int AUTOSAVESOURCE;
    public static final int GRPXSTATNOWNERS;
    public static final int STTBFATNBKMK;
    public static final int PLCFDOAMOM;
    public static final int PLCDOAHDR;
    public static final int PLCSPAMOM;
    public static final int PLCSPAHDR;
    public static final int PLCFATNBKF;
    public static final int PLCFATNBKL;
    public static final int PMS;
    public static final int FORMFLDSTTBS;
    public static final int PLCFENDREF;
    public static final int PLCFENDTXT;
    public static final int PLCFFLDEDN;
    public static final int PLCFPGDEDN;
    public static final int DGGINFO;
    public static final int STTBFRMARK;
    public static final int STTBCAPTION;
    public static final int STTBAUTOCAPTION;
    public static final int PLCFWKB;
    public static final int PLCFSPL;
    public static final int PLCFTXBXTXT;
    public static final int PLCFFLDTXBX;
    public static final int PLCFHDRTXBXTXT;
    public static final int PLCFFLDHDRTXBX;
    public static final int STWUSER;
    public static final int STTBTTMBD;
    public static final int UNUSED;
    public static final int PGDMOTHER;
    public static final int BKDMOTHER;
    public static final int PGDFTN;
    public static final int BKDFTN;
    public static final int PGDEDN;
    public static final int BKDEDN;
    public static final int STTBFINTFLD;
    public static final int ROUTESLIP;
    public static final int STTBSAVEDBY;
    public static final int STTBFNM;
    public static final int PLFLST;
    public static final int PLCFLST;
    public static final int PLFLFO;
    public static final int PLCFTXBXBKD;
    public static final int PLCFTXBXHDRBKD;
    public static final int DOCUNDO;
    public static final int RGBUSE;
    public static final int USP;
    public static final int USKF;
    public static final int PLCUPCRGBUSE;
    public static final int PLCUPCUSP;
    public static final int STTBGLSYSTYLE;
    public static final int PLGOSL;
    public static final int PLCOCX;
    public static final int PLCFBTELVC;
    public static final int MODIFIED;
    public static final int PLCFLVC;
    public static final int PLCASUMY;
    public static final int PLCFGRAM;
    public static final int STTBLISTNAMES;
    public static final int STTBFUSSR;
    private static org.apache.poi.util.POILogger log;
    private static final int FIELD_SIZE;
    private java.util.Map _unknownMap;
    private int[] _fields;

    void <init>(byte[], int, int, byte[], java.util.HashSet, boolean)
    {
        byte[] r3, r6;
        java.lang.Integer $r5, $r9;
        int[] $r2, $r20, $r21;
        java.util.Map $r8;
        org.apache.poi.hwpf.model.FIBFieldHandler r0;
        boolean $z0, z1, $z2, $z3;
        org.apache.poi.hwpf.model.UnhandledDataStructure $r7;
        org.apache.poi.util.POILogger $r10, $r12;
        java.lang.StringBuilder $r11, $r13, $r14, $r15, $r16, $r17, $r18;
        java.util.HashMap $r1;
        java.util.HashSet r4;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, $i12, $i13, $i14;
        java.lang.String $r19;

        r0 := @this: org.apache.poi.hwpf.model.FIBFieldHandler;

        r3 := @parameter0: byte[];

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        r6 := @parameter3: byte[];

        r4 := @parameter4: java.util.HashSet;

        z1 := @parameter5: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.poi.hwpf.model.FIBFieldHandler: java.util.Map _unknownMap> = $r1;

        $i1 = i0 * 2;

        $r2 = newarray (int)[$i1];

        r0.<org.apache.poi.hwpf.model.FIBFieldHandler: int[] _fields> = $r2;

        i9 = 0;

     label1:
        if i9 >= i0 goto label4;

        $i3 = i9 * 8;

        i10 = $i3 + i2;

        $i4 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r3, i10);

        i11 = i10 + 4;

        $i5 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r3, i11);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i9);

        $z0 = virtualinvoke r4.<java.util.HashSet: boolean contains(java.lang.Object)>($r5);

        $z2 = $z0 ^ z1;

        if $z2 == 0 goto label3;

        if $i5 <= 0 goto label3;

        $i7 = $i4 + $i5;

        $i6 = lengthof r6;

        if $i7 <= $i6 goto label2;

        $r10 = <org.apache.poi.hwpf.model.FIBFieldHandler: org.apache.poi.util.POILogger log>;

        $z3 = virtualinvoke $r10.<org.apache.poi.util.POILogger: boolean check(int)>(5);

        if $z3 == 0 goto label3;

        $r12 = <org.apache.poi.hwpf.model.FIBFieldHandler: org.apache.poi.util.POILogger log>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled data structure points to outside the buffer. offset = ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", length = ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", buffer length = ");

        $i8 = lengthof r6;

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, $r19);

        goto label3;

     label2:
        $r7 = new org.apache.poi.hwpf.model.UnhandledDataStructure;

        specialinvoke $r7.<org.apache.poi.hwpf.model.UnhandledDataStructure: void <init>(byte[],int,int)>(r6, $i4, $i5);

        $r8 = r0.<org.apache.poi.hwpf.model.FIBFieldHandler: java.util.Map _unknownMap>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i9);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r7);

     label3:
        $r20 = r0.<org.apache.poi.hwpf.model.FIBFieldHandler: int[] _fields>;

        $i12 = i9 * 2;

        $r20[$i12] = $i4;

        $r21 = r0.<org.apache.poi.hwpf.model.FIBFieldHandler: int[] _fields>;

        $i13 = i9 * 2;

        $i14 = $i13 + 1;

        $r21[$i14] = $i5;

        i9 = i9 + 1;

        goto label1;

     label4:
        return;
    }

    public void clearFields()
    {
        org.apache.poi.hwpf.model.FIBFieldHandler r0;
        int[] $r1;

        r0 := @this: org.apache.poi.hwpf.model.FIBFieldHandler;

        $r1 = r0.<org.apache.poi.hwpf.model.FIBFieldHandler: int[] _fields>;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r1, 0);

        return;
    }

    public int getFieldOffset(int)
    {
        int[] $r1;
        int i0, $i1, $i2;
        org.apache.poi.hwpf.model.FIBFieldHandler r0;

        r0 := @this: org.apache.poi.hwpf.model.FIBFieldHandler;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hwpf.model.FIBFieldHandler: int[] _fields>;

        $i1 = i0 * 2;

        $i2 = $r1[$i1];

        return $i2;
    }

    public int getFieldSize(int)
    {
        int[] $r1;
        int i0, $i1, $i2, $i3;
        org.apache.poi.hwpf.model.FIBFieldHandler r0;

        r0 := @this: org.apache.poi.hwpf.model.FIBFieldHandler;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hwpf.model.FIBFieldHandler: int[] _fields>;

        $i1 = i0 * 2;

        $i2 = $i1 + 1;

        $i3 = $r1[$i2];

        return $i3;
    }

    public void setFieldOffset(int, int)
    {
        int[] $r1;
        int i0, i1, $i2;
        org.apache.poi.hwpf.model.FIBFieldHandler r0;

        r0 := @this: org.apache.poi.hwpf.model.FIBFieldHandler;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.poi.hwpf.model.FIBFieldHandler: int[] _fields>;

        $i2 = i0 * 2;

        $r1[$i2] = i1;

        return;
    }

    public void setFieldSize(int, int)
    {
        int[] $r1;
        int i0, $i1, i2, $i3;
        org.apache.poi.hwpf.model.FIBFieldHandler r0;

        r0 := @this: org.apache.poi.hwpf.model.FIBFieldHandler;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        $r1 = r0.<org.apache.poi.hwpf.model.FIBFieldHandler: int[] _fields>;

        $i1 = i0 * 2;

        $i3 = $i1 + 1;

        $r1[$i3] = i2;

        return;
    }

    public int sizeInBytes()
    {
        int[] $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.FIBFieldHandler r0;

        r0 := @this: org.apache.poi.hwpf.model.FIBFieldHandler;

        $r1 = r0.<org.apache.poi.hwpf.model.FIBFieldHandler: int[] _fields>;

        $i0 = lengthof $r1;

        $i1 = $i0 * 4;

        return $i1;
    }

    public int getFieldsCount()
    {
        int[] $r1;
        int $i0, $i1;
        org.apache.poi.hwpf.model.FIBFieldHandler r0;

        r0 := @this: org.apache.poi.hwpf.model.FIBFieldHandler;

        $r1 = r0.<org.apache.poi.hwpf.model.FIBFieldHandler: int[] _fields>;

        $i0 = lengthof $r1;

        $i1 = $i0 / 2;

        return $i1;
    }

    void writeTo(byte[], int, org.apache.poi.hwpf.model.io.HWPFOutputStream) throws java.io.IOException
    {
        byte[] r6, $r11;
        java.lang.Integer $r3;
        int[] $r1, $r7, $r8, $r10, $r12;
        java.util.Map $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, i17;
        org.apache.poi.hwpf.model.FIBFieldHandler r0;
        org.apache.poi.hwpf.model.UnhandledDataStructure r5;
        org.apache.poi.hwpf.model.io.HWPFOutputStream r9;
        java.lang.Object $r4;

        r0 := @this: org.apache.poi.hwpf.model.FIBFieldHandler;

        r6 := @parameter0: byte[];

        i14 := @parameter1: int;

        r9 := @parameter2: org.apache.poi.hwpf.model.io.HWPFOutputStream;

        i15 = 0;

     label1:
        $r1 = r0.<org.apache.poi.hwpf.model.FIBFieldHandler: int[] _fields>;

        $i0 = lengthof $r1;

        $i1 = $i0 / 2;

        if i15 >= $i1 goto label4;

        $r2 = r0.<org.apache.poi.hwpf.model.FIBFieldHandler: java.util.Map _unknownMap>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i15);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r5 = (org.apache.poi.hwpf.model.UnhandledDataStructure) $r4;

        if r5 == null goto label2;

        $r10 = r0.<org.apache.poi.hwpf.model.FIBFieldHandler: int[] _fields>;

        $i7 = i15 * 2;

        $i8 = virtualinvoke r9.<org.apache.poi.hwpf.model.io.HWPFOutputStream: int getOffset()>();

        $r10[$i7] = $i8;

        $i9 = virtualinvoke r9.<org.apache.poi.hwpf.model.io.HWPFOutputStream: int getOffset()>();

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r6, i14, $i9);

        i16 = i14 + 4;

        $r11 = virtualinvoke r5.<org.apache.poi.hwpf.model.UnhandledDataStructure: byte[] getBuf()>();

        virtualinvoke r9.<org.apache.poi.hwpf.model.io.HWPFOutputStream: void write(byte[])>($r11);

        $r12 = r0.<org.apache.poi.hwpf.model.FIBFieldHandler: int[] _fields>;

        $i10 = i15 * 2;

        $i12 = $i10 + 1;

        $i11 = lengthof $r11;

        $r12[$i12] = $i11;

        $i13 = lengthof $r11;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r6, i16, $i13);

        i14 = i16 + 4;

        goto label3;

     label2:
        $r7 = r0.<org.apache.poi.hwpf.model.FIBFieldHandler: int[] _fields>;

        $i2 = i15 * 2;

        $i3 = $r7[$i2];

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r6, i14, $i3);

        i17 = i14 + 4;

        $r8 = r0.<org.apache.poi.hwpf.model.FIBFieldHandler: int[] _fields>;

        $i4 = i15 * 2;

        $i5 = $i4 + 1;

        $i6 = $r8[$i5];

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r6, i17, $i6);

        i14 = i17 + 4;

     label3:
        i15 = i15 + 1;

        goto label1;

     label4:
        return;
    }

    private static java.lang.String leftPad(java.lang.String, int, char)
    {
        char c4;
        int $i0, i1, $i2, $i3, i5;
        java.lang.StringBuilder $r1;
        java.lang.String r0, $r2;

        r0 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        c4 := @parameter2: char;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 < i1 goto label1;

        return r0;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        i5 = 0;

     label2:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        $i3 = i1 - $i2;

        if i5 >= $i3 goto label3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c4);

        i5 = i5 + 1;

        goto label2;

     label3:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.String toString()
    {
        byte[] $r22;
        java.lang.Integer $r19;
        int[] $r6;
        java.util.Map $r18;
        org.apache.poi.hwpf.model.FIBFieldHandler r5;
        org.apache.poi.hwpf.model.UnhandledDataStructure r21;
        java.lang.StringBuilder $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11;
        java.lang.String $r1, $r2, $r3, $r4, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        java.lang.Object $r20;

        r5 := @this: org.apache.poi.hwpf.model.FIBFieldHandler;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[FIBFieldHandler]:\n");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\tFields:\n");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r1 = staticinvoke <org.apache.poi.hwpf.model.FIBFieldHandler: java.lang.String leftPad(java.lang.String,int,char)>("Index", 8, 32);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = staticinvoke <org.apache.poi.hwpf.model.FIBFieldHandler: java.lang.String leftPad(java.lang.String,int,char)>("FIB offset", 15, 32);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = staticinvoke <org.apache.poi.hwpf.model.FIBFieldHandler: java.lang.String leftPad(java.lang.String,int,char)>("Offset", 8, 32);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = staticinvoke <org.apache.poi.hwpf.model.FIBFieldHandler: java.lang.String leftPad(java.lang.String,int,char)>("Size", 8, 32);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        i11 = 0;

     label1:
        $r6 = r5.<org.apache.poi.hwpf.model.FIBFieldHandler: int[] _fields>;

        $i0 = lengthof $r6;

        $i1 = $i0 / 2;

        if i11 >= $i1 goto label3;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(9);

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i11);

        $r9 = staticinvoke <org.apache.poi.hwpf.model.FIBFieldHandler: java.lang.String leftPad(java.lang.String,int,char)>($r8, 8, 32);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $i2 = i11 * 4;

        $i3 = $i2 * 2;

        $i4 = 154 + $i3;

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

        $r11 = staticinvoke <org.apache.poi.hwpf.model.FIBFieldHandler: java.lang.String leftPad(java.lang.String,int,char)>($r10, 6, 32);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   0x");

        $i5 = i11 * 4;

        $i6 = $i5 * 2;

        $i7 = 154 + $i6;

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i7);

        $r13 = staticinvoke <org.apache.poi.hwpf.model.FIBFieldHandler: java.lang.String leftPad(java.lang.String,int,char)>($r12, 4, 48);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $i8 = virtualinvoke r5.<org.apache.poi.hwpf.model.FIBFieldHandler: int getFieldOffset(int)>(i11);

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i8);

        $r15 = staticinvoke <org.apache.poi.hwpf.model.FIBFieldHandler: java.lang.String leftPad(java.lang.String,int,char)>($r14, 8, 32);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $i9 = virtualinvoke r5.<org.apache.poi.hwpf.model.FIBFieldHandler: int getFieldSize(int)>(i11);

        $r16 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i9);

        $r17 = staticinvoke <org.apache.poi.hwpf.model.FIBFieldHandler: java.lang.String leftPad(java.lang.String,int,char)>($r16, 8, 32);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r18 = r5.<org.apache.poi.hwpf.model.FIBFieldHandler: java.util.Map _unknownMap>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i11);

        $r20 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>($r19);

        r21 = (org.apache.poi.hwpf.model.UnhandledDataStructure) $r20;

        if r21 == null goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" => Unknown structure of size ");

        $r22 = r21.<org.apache.poi.hwpf.model.UnhandledDataStructure: byte[] _buf>;

        $i10 = lengthof $r22;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        i11 = i11 + 1;

        goto label1;

     label3:
        $r7 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    static void <clinit>()
    {
        org.apache.poi.util.POILogger $r0;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int FIELD_SIZE> = 8;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int STTBFUSSR> = 92;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int STTBLISTNAMES> = 91;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFGRAM> = 90;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCASUMY> = 89;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFLVC> = 88;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int MODIFIED> = 87;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFBTELVC> = 86;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCOCX> = 85;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLGOSL> = 84;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int STTBGLSYSTYLE> = 83;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCUPCUSP> = 82;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCUPCRGBUSE> = 81;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int USKF> = 80;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int USP> = 79;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int RGBUSE> = 78;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int DOCUNDO> = 77;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFTXBXHDRBKD> = 76;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFTXBXBKD> = 75;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLFLFO> = 74;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFLST> = 73;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLFLST> = 73;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int STTBFNM> = 72;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int STTBSAVEDBY> = 71;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int ROUTESLIP> = 70;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int STTBFINTFLD> = 69;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int BKDEDN> = 68;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PGDEDN> = 67;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int BKDFTN> = 66;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PGDFTN> = 65;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int BKDMOTHER> = 64;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PGDMOTHER> = 63;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int UNUSED> = 62;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int STTBTTMBD> = 61;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int STWUSER> = 60;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFFLDHDRTXBX> = 59;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFHDRTXBXTXT> = 58;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFFLDTXBX> = 57;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFTXBXTXT> = 56;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFSPL> = 55;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFWKB> = 54;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int STTBAUTOCAPTION> = 53;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int STTBCAPTION> = 52;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int STTBFRMARK> = 51;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int DGGINFO> = 50;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFPGDEDN> = 49;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFFLDEDN> = 48;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFENDTXT> = 47;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFENDREF> = 46;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int FORMFLDSTTBS> = 45;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PMS> = 44;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFATNBKL> = 43;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFATNBKF> = 42;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCSPAHDR> = 41;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCSPAMOM> = 40;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCDOAHDR> = 39;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFDOAMOM> = 38;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int STTBFATNBKMK> = 37;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int GRPXSTATNOWNERS> = 36;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int AUTOSAVESOURCE> = 35;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFPGDFTN> = 34;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int CLX> = 33;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int STTBFASSOC> = 32;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int DOP> = 31;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int WSS> = 30;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PRENVLAND> = 29;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PRENVPORT> = 28;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PRDRVR> = 27;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int STTBFMCR> = 26;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCMCR> = 25;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int CMDS> = 24;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFBKL> = 23;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFBKF> = 22;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int STTBFBKMK> = 21;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFFLDMCR> = 20;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFFLDATN> = 19;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFFLDFTN> = 18;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFFLDHDR> = 17;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFFLDMOM> = 16;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int STTBFFFN> = 15;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFSEA> = 14;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFBTEPAPX> = 13;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFBTECHPX> = 12;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFHDD> = 11;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFGLSY> = 10;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int STTBGLSY> = 9;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFPHE> = 8;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFPAD> = 7;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFSED> = 6;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFANDTXT> = 5;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFANDREF> = 4;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFFNDTXT> = 3;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int PLCFFNDREF> = 2;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int STSHF> = 1;

        <org.apache.poi.hwpf.model.FIBFieldHandler: int STSHFORIG> = 0;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/hwpf/model/FIBFieldHandler;");

        <org.apache.poi.hwpf.model.FIBFieldHandler: org.apache.poi.util.POILogger log> = $r0;

        return;
    }
}
