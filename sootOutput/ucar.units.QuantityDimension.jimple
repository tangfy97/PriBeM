public final class ucar.units.QuantityDimension extends ucar.units.Dimension
{

    public void <init>()
    {
        ucar.units.QuantityDimension r0;

        r0 := @this: ucar.units.QuantityDimension;

        specialinvoke r0.<ucar.units.Dimension: void <init>()>();

        return;
    }

    public void <init>(ucar.units.BaseQuantity)
    {
        ucar.units.BaseQuantity r2;
        ucar.units.Factor $r1;
        ucar.units.QuantityDimension r0;

        r0 := @this: ucar.units.QuantityDimension;

        r2 := @parameter0: ucar.units.BaseQuantity;

        $r1 = new ucar.units.Factor;

        specialinvoke $r1.<ucar.units.Factor: void <init>(ucar.units.Base)>(r2);

        specialinvoke r0.<ucar.units.Dimension: void <init>(ucar.units.Factor)>($r1);

        return;
    }

    protected void <init>(ucar.units.Factor[])
    {
        ucar.units.QuantityDimension r0;
        ucar.units.Factor[] r1;

        r0 := @this: ucar.units.QuantityDimension;

        r1 := @parameter0: ucar.units.Factor[];

        specialinvoke r0.<ucar.units.Dimension: void <init>(ucar.units.Factor[])>(r1);

        return;
    }

    public ucar.units.QuantityDimension multiplyBy(ucar.units.QuantityDimension)
    {
        ucar.units.QuantityDimension $r0, r1, r2;
        ucar.units.Factor[] $r3;

        r1 := @this: ucar.units.QuantityDimension;

        r2 := @parameter0: ucar.units.QuantityDimension;

        $r0 = new ucar.units.QuantityDimension;

        $r3 = virtualinvoke r1.<ucar.units.QuantityDimension: ucar.units.Factor[] mult(ucar.units.Dimension)>(r2);

        specialinvoke $r0.<ucar.units.QuantityDimension: void <init>(ucar.units.Factor[])>($r3);

        return $r0;
    }

    public ucar.units.QuantityDimension divideBy(ucar.units.QuantityDimension)
    {
        int $i1;
        ucar.units.QuantityDimension r0, r1, $r2, $r3;

        r0 := @this: ucar.units.QuantityDimension;

        r1 := @parameter0: ucar.units.QuantityDimension;

        $i1 = (int) -1;

        $r2 = virtualinvoke r1.<ucar.units.QuantityDimension: ucar.units.QuantityDimension raiseTo(int)>($i1);

        $r3 = virtualinvoke r0.<ucar.units.QuantityDimension: ucar.units.QuantityDimension multiplyBy(ucar.units.QuantityDimension)>($r2);

        return $r3;
    }

    public ucar.units.QuantityDimension raiseTo(int)
    {
        int i0;
        ucar.units.QuantityDimension $r0, r1;
        ucar.units.Factor[] $r2;

        r1 := @this: ucar.units.QuantityDimension;

        i0 := @parameter0: int;

        $r0 = new ucar.units.QuantityDimension;

        $r2 = virtualinvoke r1.<ucar.units.QuantityDimension: ucar.units.Factor[] pow(int)>(i0);

        specialinvoke $r0.<ucar.units.QuantityDimension: void <init>(ucar.units.Factor[])>($r2);

        return $r0;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        boolean $z0, $z1;
        ucar.units.QuantityDimension $r29, $r45, $r52, $r53, $r59, $r60, $r62;
        java.lang.StringBuilder $r2, $r4, $r5, $r11, $r12, $r13, $r19, $r20, $r21, $r25, $r26, $r27, $r32, $r33, $r34, $r38, $r39, $r40, $r44, $r46, $r47, $r51, $r54, $r55, $r58, $r61, $r63, $r64, $r65, $r66, $r67, $r68;
        ucar.units.RegularBaseQuantity $r8, $r16;
        java.lang.String[] r57;
        int $i1;
        java.lang.String $r6, $r14, $r22, $r28, $r35, $r41, $r48, $r56;
        java.io.PrintStream $r1, $r10, $r18, $r24, $r31, $r37, $r43, $r50;

        r57 := @parameter0: java.lang.String[];

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("new QuantityDimension() = \"");

        $r59 = new ucar.units.QuantityDimension;

        specialinvoke $r59.<ucar.units.QuantityDimension: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r59);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r6);

        $r60 = new ucar.units.QuantityDimension;

        $r8 = <ucar.units.BaseQuantity: ucar.units.RegularBaseQuantity TIME>;

        specialinvoke $r60.<ucar.units.QuantityDimension: void <init>(ucar.units.BaseQuantity)>($r8);

        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("timeDimension = \"");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r60);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r14);

        $r62 = new ucar.units.QuantityDimension;

        $r16 = <ucar.units.BaseQuantity: ucar.units.RegularBaseQuantity LENGTH>;

        specialinvoke $r62.<ucar.units.QuantityDimension: void <init>(ucar.units.BaseQuantity)>($r16);

        $r18 = <java.lang.System: java.io.PrintStream out>;

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lengthDimension = \"");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r62);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r22);

        $r24 = <java.lang.System: java.io.PrintStream out>;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lengthDimension.isReciprocalOf(timeDimension) = \"");

        $z0 = virtualinvoke $r62.<ucar.units.QuantityDimension: boolean isReciprocalOf(ucar.units.Dimension)>($r60);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r28);

        $i1 = (int) -1;

        $r29 = virtualinvoke $r60.<ucar.units.QuantityDimension: ucar.units.QuantityDimension raiseTo(int)>($i1);

        $r31 = <java.lang.System: java.io.PrintStream out>;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hertzDimension = \"");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r35);

        $r37 = <java.lang.System: java.io.PrintStream out>;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hertzDimension.isReciprocalOf(timeDimension) = \"");

        $z1 = virtualinvoke $r29.<ucar.units.QuantityDimension: boolean isReciprocalOf(ucar.units.Dimension)>($r60);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r37.<java.io.PrintStream: void println(java.lang.String)>($r41);

        $r43 = <java.lang.System: java.io.PrintStream out>;

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lengthDimension.divideBy(timeDimension) = \"");

        $r45 = virtualinvoke $r62.<ucar.units.QuantityDimension: ucar.units.QuantityDimension divideBy(ucar.units.QuantityDimension)>($r60);

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r43.<java.io.PrintStream: void println(java.lang.String)>($r48);

        $r50 = <java.lang.System: java.io.PrintStream out>;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lengthDimension.divideBy(timeDimension).raiseTo(2) = \"");

        $r52 = virtualinvoke $r62.<ucar.units.QuantityDimension: ucar.units.QuantityDimension divideBy(ucar.units.QuantityDimension)>($r60);

        $r53 = virtualinvoke $r52.<ucar.units.QuantityDimension: ucar.units.QuantityDimension raiseTo(int)>(2);

        $r54 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r53);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r50.<java.io.PrintStream: void println(java.lang.String)>($r56);

        return;
    }
}
