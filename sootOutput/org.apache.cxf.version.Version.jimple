public final class org.apache.cxf.version.Version extends java.lang.Object
{
    private static java.lang.String version;
    private static java.lang.String name;
    private static java.lang.String fullVersion;
    private static java.lang.String buildNumber;
    private static final java.lang.String VERSION_BASE;

    private void <init>()
    {
        org.apache.cxf.version.Version r0;

        r0 := @this: org.apache.cxf.version.Version;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.io.InputStream getResourceAsStream(java.lang.String)
    {
        java.lang.Class $r0;
        java.lang.ClassLoader $r1;
        java.lang.String r2, $r4;
        java.io.InputStream $r3, r5;
        boolean $z0;

        r2 := @parameter0: java.lang.String;

        $r0 = class "Lorg/apache/cxf/version/Version;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r3 = virtualinvoke $r1.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r2);

        r5 = $r3;

        if $r3 != null goto label1;

        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(1);

        r5 = virtualinvoke $r1.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>($r4);

     label1:
        return r5;
    }

    private static synchronized void loadProperties()
    {
        java.lang.String $r0, $r3, $r4, $r5, $r6, $r8, $r11, $r14, $r16, $r17, $r19, $r22, $r24;
        boolean $z0, $z1;
        java.util.Properties $r1;
        java.io.IOException $r25;
        java.lang.StringBuilder $r7, $r9, $r10, $r12, $r13, $r15, $r18, $r20, $r21, $r23;
        java.io.InputStream $r2;

        $r0 = <org.apache.cxf.version.Version: java.lang.String version>;

        if $r0 != null goto label7;

        $r1 = new java.util.Properties;

        specialinvoke $r1.<java.util.Properties: void <init>()>();

     label1:
        $r2 = staticinvoke <org.apache.cxf.version.Version: java.io.InputStream getResourceAsStream(java.lang.String)>("/org/apache/cxf/version/version.properties");

        virtualinvoke $r1.<java.util.Properties: void load(java.io.InputStream)>($r2);

        virtualinvoke $r2.<java.io.InputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r25 := @caughtexception;

     label4:
        $r3 = virtualinvoke $r1.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>("product.version", "<unknown>");

        <org.apache.cxf.version.Version: java.lang.String version> = $r3;

        $r4 = virtualinvoke $r1.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>("product.name", "Apache CXF");

        <org.apache.cxf.version.Version: java.lang.String name> = $r4;

        $r5 = virtualinvoke $r1.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>("build.number", "<unknown>");

        <org.apache.cxf.version.Version: java.lang.String buildNumber> = $r5;

        $r6 = <org.apache.cxf.version.Version: java.lang.String version>;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean contains(java.lang.CharSequence)>("SNAPSHOT");

        if $z0 != 0 goto label5;

        $r17 = <org.apache.cxf.version.Version: java.lang.String version>;

        $z1 = virtualinvoke $r17.<java.lang.String: boolean contains(java.lang.CharSequence)>("<unknown>");

        if $z1 == 0 goto label6;

     label5:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = <org.apache.cxf.version.Version: java.lang.String name>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r11 = <org.apache.cxf.version.Version: java.lang.String version>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r14 = <org.apache.cxf.version.Version: java.lang.String buildNumber>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.apache.cxf.version.Version: java.lang.String fullVersion> = $r16;

        goto label7;

     label6:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = <org.apache.cxf.version.Version: java.lang.String name>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r22 = <org.apache.cxf.version.Version: java.lang.String version>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.apache.cxf.version.Version: java.lang.String fullVersion> = $r24;

     label7:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static java.lang.String getCurrentVersion()
    {
        java.lang.String $r0;

        staticinvoke <org.apache.cxf.version.Version: void loadProperties()>();

        $r0 = <org.apache.cxf.version.Version: java.lang.String version>;

        return $r0;
    }

    public static java.lang.String getName()
    {
        java.lang.String $r0;

        staticinvoke <org.apache.cxf.version.Version: void loadProperties()>();

        $r0 = <org.apache.cxf.version.Version: java.lang.String name>;

        return $r0;
    }

    public static java.lang.String getCompleteVersionString()
    {
        java.lang.String $r0;

        staticinvoke <org.apache.cxf.version.Version: void loadProperties()>();

        $r0 = <org.apache.cxf.version.Version: java.lang.String fullVersion>;

        return $r0;
    }

    public static void <clinit>()
    {
        <org.apache.cxf.version.Version: java.lang.String VERSION_BASE> = "/org/apache/cxf/version/";

        return;
    }
}
