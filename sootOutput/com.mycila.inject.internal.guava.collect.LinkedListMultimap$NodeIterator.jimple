class com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator extends java.lang.Object implements java.util.ListIterator
{
    int nextIndex;
    com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node next;
    com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node current;
    com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previous;
    final com.mycila.inject.internal.guava.collect.LinkedListMultimap this$0;

    void <init>(com.mycila.inject.internal.guava.collect.LinkedListMultimap)
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r1;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node $r2;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.mycila.inject.internal.guava.collect.LinkedListMultimap: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node access$000(com.mycila.inject.internal.guava.collect.LinkedListMultimap)>(r1);

        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node next> = $r2;

        return;
    }

    void <init>(com.mycila.inject.internal.guava.collect.LinkedListMultimap, int)
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node $r2, $r3;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator r0;
        int $i0, $i1, $i2, $i3, i4, $i6;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.LinkedListMultimap;

        i4 := @parameter1: int;

        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = virtualinvoke r1.<com.mycila.inject.internal.guava.collect.LinkedListMultimap: int size()>();

        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: int checkPositionIndex(int,int)>(i4, $i0);

        $i1 = $i0 / 2;

        if i4 < $i1 goto label2;

        $r3 = staticinvoke <com.mycila.inject.internal.guava.collect.LinkedListMultimap: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node access$100(com.mycila.inject.internal.guava.collect.LinkedListMultimap)>(r1);

        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previous> = $r3;

        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: int nextIndex> = $i0;

     label1:
        $i3 = i4;

        i4 = i4 + 1;

        if $i3 >= $i0 goto label4;

        virtualinvoke r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previous()>();

        goto label1;

     label2:
        $r2 = staticinvoke <com.mycila.inject.internal.guava.collect.LinkedListMultimap: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node access$000(com.mycila.inject.internal.guava.collect.LinkedListMultimap)>(r1);

        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node next> = $r2;

     label3:
        $i2 = i4;

        $i6 = (int) -1;

        i4 = i4 + $i6;

        if $i2 <= 0 goto label4;

        virtualinvoke r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node next()>();

        goto label3;

     label4:
        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node current> = null;

        return;
    }

    public boolean hasNext()
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node $r1;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator r0;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node next>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node next()
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node $r1, $r2, $r3, $r4, $r5;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator r0;
        int $i0, $i1;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node next>;

        staticinvoke <com.mycila.inject.internal.guava.collect.LinkedListMultimap: void access$200(java.lang.Object)>($r1);

        $r2 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node next>;

        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node current> = $r2;

        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previous> = $r2;

        $r3 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node next>;

        $r4 = $r3.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node next>;

        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node next> = $r4;

        $i0 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: int nextIndex>;

        $i1 = $i0 + 1;

        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: int nextIndex> = $i1;

        $r5 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node current>;

        return $r5;
    }

    public void remove()
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node $r1, $r2, $r3, $r4, $r5, $r6, $r8, $r9;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator r0;
        int $i0, $i1;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap $r7;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node current>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: void checkState(boolean)>($z0);

        $r3 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node current>;

        $r2 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node next>;

        if $r3 == $r2 goto label3;

        $r8 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node current>;

        $r9 = $r8.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previous>;

        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previous> = $r9;

        $i0 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: int nextIndex>;

        $i1 = $i0 - 1;

        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: int nextIndex> = $i1;

        goto label4;

     label3:
        $r4 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node current>;

        $r5 = $r4.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node next>;

        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node next> = $r5;

     label4:
        $r7 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap this$0>;

        $r6 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node current>;

        staticinvoke <com.mycila.inject.internal.guava.collect.LinkedListMultimap: void access$300(com.mycila.inject.internal.guava.collect.LinkedListMultimap,com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node)>($r7, $r6);

        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node current> = null;

        return;
    }

    public boolean hasPrevious()
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node $r1;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator r0;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previous>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previous()
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node $r1, $r2, $r3, $r4, $r5;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator r0;
        int $i0, $i1;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previous>;

        staticinvoke <com.mycila.inject.internal.guava.collect.LinkedListMultimap: void access$200(java.lang.Object)>($r1);

        $r2 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previous>;

        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node current> = $r2;

        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node next> = $r2;

        $r3 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previous>;

        $r4 = $r3.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previous>;

        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previous> = $r4;

        $i0 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: int nextIndex>;

        $i1 = $i0 - 1;

        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: int nextIndex> = $i1;

        $r5 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node current>;

        return $r5;
    }

    public int nextIndex()
    {
        int $i0;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator;

        $i0 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: int nextIndex>;

        return $i0;
    }

    public int previousIndex()
    {
        int $i0, $i1;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator;

        $i0 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: int nextIndex>;

        $i1 = $i0 - 1;

        return $i1;
    }

    public void set(com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node)
    {
        java.lang.UnsupportedOperationException $r0;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node r2;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator r1;

        r1 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator;

        r2 := @parameter0: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void add(com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node)
    {
        java.lang.UnsupportedOperationException $r0;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node r2;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator r1;

        r1 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator;

        r2 := @parameter0: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    void setValue(java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node $r1, $r3;
        java.lang.Object r2;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator r0;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node current>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: void checkState(boolean)>($z0);

        $r3 = r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node current>;

        $r3.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: java.lang.Object value> = r2;

        return;
    }

    public volatile void add(java.lang.Object)
    {
        java.lang.Object r1;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node $r2;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node) r1;

        virtualinvoke r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: void add(com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node)>($r2);

        return;
    }

    public volatile void set(java.lang.Object)
    {
        java.lang.Object r1;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node $r2;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node) r1;

        virtualinvoke r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: void set(com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node)>($r2);

        return;
    }

    public volatile java.lang.Object previous()
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node $r1;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previous()>();

        return $r1;
    }

    public volatile java.lang.Object next()
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node $r1;
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$NodeIterator: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node next()>();

        return $r1;
    }
}
