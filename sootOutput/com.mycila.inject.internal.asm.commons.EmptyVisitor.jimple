public class com.mycila.inject.internal.asm.commons.EmptyVisitor extends java.lang.Object implements com.mycila.inject.internal.asm.ClassVisitor, com.mycila.inject.internal.asm.FieldVisitor, com.mycila.inject.internal.asm.MethodVisitor, com.mycila.inject.internal.asm.AnnotationVisitor
{

    public void <init>()
    {
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void visit(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;
        int i0, i1;
        java.lang.String[] r4;
        java.lang.String r1, r2, r3;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: java.lang.String[];

        return;
    }

    public void visitSource(java.lang.String, java.lang.String)
    {
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;
        java.lang.String r1, r2;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void visitOuterClass(java.lang.String, java.lang.String, java.lang.String)
    {
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;
        java.lang.String r1, r2, r3;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        return;
    }

    public com.mycila.inject.internal.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean)
    {
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        return r0;
    }

    public void visitAttribute(com.mycila.inject.internal.asm.Attribute)
    {
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;
        com.mycila.inject.internal.asm.Attribute r1;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        r1 := @parameter0: com.mycila.inject.internal.asm.Attribute;

        return;
    }

    public void visitInnerClass(java.lang.String, java.lang.String, java.lang.String, int)
    {
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;
        int i0;
        java.lang.String r1, r2, r3;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        return;
    }

    public com.mycila.inject.internal.asm.FieldVisitor visitField(int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)
    {
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;
        int i0;
        java.lang.Object r4;
        java.lang.String r1, r2, r3;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.Object;

        return r0;
    }

    public com.mycila.inject.internal.asm.MethodVisitor visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;
        int i0;
        java.lang.String[] r4;
        java.lang.String r1, r2, r3;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String[];

        return r0;
    }

    public void visitEnd()
    {
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        return;
    }

    public com.mycila.inject.internal.asm.AnnotationVisitor visitAnnotationDefault()
    {
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        return r0;
    }

    public com.mycila.inject.internal.asm.AnnotationVisitor visitParameterAnnotation(int, java.lang.String, boolean)
    {
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;
        int i0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        return r0;
    }

    public void visitCode()
    {
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        return;
    }

    public void visitFrame(int, int, java.lang.Object[], int, java.lang.Object[])
    {
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;
        java.lang.Object[] r1, r2;
        int i0, i1, i2;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Object[];

        i2 := @parameter3: int;

        r2 := @parameter4: java.lang.Object[];

        return;
    }

    public void visitInsn(int)
    {
        int i0;
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        i0 := @parameter0: int;

        return;
    }

    public void visitIntInsn(int, int)
    {
        int i0, i1;
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void visitVarInsn(int, int)
    {
        int i0, i1;
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void visitTypeInsn(int, java.lang.String)
    {
        int i0;
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;
        java.lang.String r1;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        return;
    }

    public void visitFieldInsn(int, java.lang.String, java.lang.String, java.lang.String)
    {
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;
        int i0;
        java.lang.String r1, r2, r3;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        return;
    }

    public void visitMethodInsn(int, java.lang.String, java.lang.String, java.lang.String)
    {
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;
        int i0;
        java.lang.String r1, r2, r3;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        return;
    }

    public void visitJumpInsn(int, com.mycila.inject.internal.asm.Label)
    {
        int i0;
        com.mycila.inject.internal.asm.Label r1;
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        i0 := @parameter0: int;

        r1 := @parameter1: com.mycila.inject.internal.asm.Label;

        return;
    }

    public void visitLabel(com.mycila.inject.internal.asm.Label)
    {
        com.mycila.inject.internal.asm.Label r1;
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        r1 := @parameter0: com.mycila.inject.internal.asm.Label;

        return;
    }

    public void visitLdcInsn(java.lang.Object)
    {
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;
        java.lang.Object r1;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        r1 := @parameter0: java.lang.Object;

        return;
    }

    public void visitIincInsn(int, int)
    {
        int i0, i1;
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void visitTableSwitchInsn(int, int, com.mycila.inject.internal.asm.Label, com.mycila.inject.internal.asm.Label[])
    {
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;
        int i0, i1;
        com.mycila.inject.internal.asm.Label r1;
        com.mycila.inject.internal.asm.Label[] r2;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: com.mycila.inject.internal.asm.Label;

        r2 := @parameter3: com.mycila.inject.internal.asm.Label[];

        return;
    }

    public void visitLookupSwitchInsn(com.mycila.inject.internal.asm.Label, int[], com.mycila.inject.internal.asm.Label[])
    {
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;
        int[] r2;
        com.mycila.inject.internal.asm.Label r1;
        com.mycila.inject.internal.asm.Label[] r3;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        r1 := @parameter0: com.mycila.inject.internal.asm.Label;

        r2 := @parameter1: int[];

        r3 := @parameter2: com.mycila.inject.internal.asm.Label[];

        return;
    }

    public void visitMultiANewArrayInsn(java.lang.String, int)
    {
        int i0;
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;
        java.lang.String r1;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        return;
    }

    public void visitTryCatchBlock(com.mycila.inject.internal.asm.Label, com.mycila.inject.internal.asm.Label, com.mycila.inject.internal.asm.Label, java.lang.String)
    {
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;
        com.mycila.inject.internal.asm.Label r1, r2, r3;
        java.lang.String r4;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        r1 := @parameter0: com.mycila.inject.internal.asm.Label;

        r2 := @parameter1: com.mycila.inject.internal.asm.Label;

        r3 := @parameter2: com.mycila.inject.internal.asm.Label;

        r4 := @parameter3: java.lang.String;

        return;
    }

    public void visitLocalVariable(java.lang.String, java.lang.String, java.lang.String, com.mycila.inject.internal.asm.Label, com.mycila.inject.internal.asm.Label, int)
    {
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;
        com.mycila.inject.internal.asm.Label r4, r5;
        int i0;
        java.lang.String r1, r2, r3;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: com.mycila.inject.internal.asm.Label;

        r5 := @parameter4: com.mycila.inject.internal.asm.Label;

        i0 := @parameter5: int;

        return;
    }

    public void visitLineNumber(int, com.mycila.inject.internal.asm.Label)
    {
        int i0;
        com.mycila.inject.internal.asm.Label r1;
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        i0 := @parameter0: int;

        r1 := @parameter1: com.mycila.inject.internal.asm.Label;

        return;
    }

    public void visitMaxs(int, int)
    {
        int i0, i1;
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void visit(java.lang.String, java.lang.Object)
    {
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;
        java.lang.Object r2;
        java.lang.String r1;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        return;
    }

    public void visitEnum(java.lang.String, java.lang.String, java.lang.String)
    {
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;
        java.lang.String r1, r2, r3;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        return;
    }

    public com.mycila.inject.internal.asm.AnnotationVisitor visitAnnotation(java.lang.String, java.lang.String)
    {
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;
        java.lang.String r1, r2;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        return r0;
    }

    public com.mycila.inject.internal.asm.AnnotationVisitor visitArray(java.lang.String)
    {
        com.mycila.inject.internal.asm.commons.EmptyVisitor r0;
        java.lang.String r1;

        r0 := @this: com.mycila.inject.internal.asm.commons.EmptyVisitor;

        r1 := @parameter0: java.lang.String;

        return r0;
    }
}
