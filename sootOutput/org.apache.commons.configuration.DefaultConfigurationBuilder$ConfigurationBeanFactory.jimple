class org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationBeanFactory extends java.lang.Object implements org.apache.commons.configuration.beanutils.BeanFactory
{

    void <init>()
    {
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationBeanFactory r0;

        r0 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationBeanFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object createBean(java.lang.Class, org.apache.commons.configuration.beanutils.BeanDeclaration, java.lang.Object) throws java.lang.Exception
    {
        org.apache.commons.configuration.beanutils.BeanDeclaration r0;
        org.apache.commons.configuration.DefaultConfigurationBuilder $r4, $r14;
        org.apache.commons.configuration.AbstractConfiguration $r6, $r17;
        java.lang.StringBuffer $r8, $r9, $r10;
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider $r5;
        java.lang.String $r3, $r11, $r16;
        boolean $z0, $z1;
        java.lang.Exception $r12, $r13;
        org.apache.commons.configuration.tree.ConfigurationNode $r2;
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationDeclaration r1;
        org.apache.commons.configuration.ConfigurationRuntimeException $r7;
        java.lang.Class r19;
        java.lang.Object r20;
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationBeanFactory r18;
        org.apache.commons.configuration.SubnodeConfiguration $r15;

        r18 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationBeanFactory;

        r19 := @parameter0: java.lang.Class;

        r0 := @parameter1: org.apache.commons.configuration.beanutils.BeanDeclaration;

        r20 := @parameter2: java.lang.Object;

        r1 = (org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationDeclaration) r0;

        $r2 = virtualinvoke r1.<org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationDeclaration: org.apache.commons.configuration.tree.ConfigurationNode getNode()>();

        $r3 = interfaceinvoke $r2.<org.apache.commons.configuration.tree.ConfigurationNode: java.lang.String getName()>();

        $r4 = virtualinvoke r1.<org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationDeclaration: org.apache.commons.configuration.DefaultConfigurationBuilder getConfigurationBuilder()>();

        $r5 = virtualinvoke $r4.<org.apache.commons.configuration.DefaultConfigurationBuilder: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider providerForTag(java.lang.String)>($r3);

        if $r5 != null goto label1;

        $r7 = new org.apache.commons.configuration.ConfigurationRuntimeException;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("No ConfigurationProvider registered for tag ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r7.<org.apache.commons.configuration.ConfigurationRuntimeException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label1:
        $r6 = virtualinvoke $r5.<org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider: org.apache.commons.configuration.AbstractConfiguration getConfiguration(org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationDeclaration)>(r1);

     label2:
        return $r6;

     label3:
        $r13 := @caughtexception;

        $z0 = virtualinvoke r1.<org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationDeclaration: boolean isOptional()>();

        if $z0 != 0 goto label4;

        throw $r13;

     label4:
        $r14 = virtualinvoke r1.<org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationDeclaration: org.apache.commons.configuration.DefaultConfigurationBuilder getConfigurationBuilder()>();

        $r15 = virtualinvoke r1.<org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationDeclaration: org.apache.commons.configuration.SubnodeConfiguration getConfiguration()>();

        $r16 = virtualinvoke $r15.<org.apache.commons.configuration.SubnodeConfiguration: java.lang.String getString(java.lang.String)>("[@config-name]");

        virtualinvoke $r14.<org.apache.commons.configuration.DefaultConfigurationBuilder: void fireError(int,java.lang.String,java.lang.Object,java.lang.Throwable)>(51, $r16, null, $r13);

        $z1 = virtualinvoke r1.<org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationDeclaration: boolean isForceCreate()>();

        if $z1 == 0 goto label8;

     label5:
        $r17 = virtualinvoke $r5.<org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationProvider: org.apache.commons.configuration.AbstractConfiguration getEmptyConfiguration(org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationDeclaration)>(r1);

     label6:
        return $r17;

     label7:
        $r12 := @caughtexception;

     label8:
        return null;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public java.lang.Class getDefaultBeanClass()
    {
        java.lang.Class $r0, $r2;
        org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationBeanFactory r1;

        r1 := @this: org.apache.commons.configuration.DefaultConfigurationBuilder$ConfigurationBeanFactory;

        $r0 = <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$org$apache$commons$configuration$Configuration>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$(java.lang.String)>("org.apache.commons.configuration.Configuration");

        <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$org$apache$commons$configuration$Configuration> = $r2;

        goto label2;

     label1:
        $r2 = <org.apache.commons.configuration.DefaultConfigurationBuilder: java.lang.Class class$org$apache$commons$configuration$Configuration>;

     label2:
        return $r2;
    }
}
