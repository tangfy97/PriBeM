public class ucar.unidata.geoloc.vertical.VTfromExistingData extends ucar.unidata.geoloc.vertical.VerticalTransformImpl
{
    public static final java.lang.String existingDataField;
    private ucar.nc2.Variable existingData;

    public void <init>(ucar.nc2.NetcdfFile, ucar.nc2.Dimension, java.util.List)
    {
        java.util.List r2;
        ucar.unidata.geoloc.vertical.VTfromExistingData r0;
        ucar.nc2.Dimension r1;
        ucar.nc2.Variable $r5, $r6;
        java.lang.String $r3, $r7;
        ucar.nc2.NetcdfFile r4;

        r0 := @this: ucar.unidata.geoloc.vertical.VTfromExistingData;

        r4 := @parameter0: ucar.nc2.NetcdfFile;

        r1 := @parameter1: ucar.nc2.Dimension;

        r2 := @parameter2: java.util.List;

        specialinvoke r0.<ucar.unidata.geoloc.vertical.VerticalTransformImpl: void <init>(ucar.nc2.Dimension)>(r1);

        $r3 = virtualinvoke r0.<ucar.unidata.geoloc.vertical.VTfromExistingData: java.lang.String getParameterStringValue(java.util.List,java.lang.String)>(r2, "existingDataField");

        $r5 = virtualinvoke r4.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>($r3);

        r0.<ucar.unidata.geoloc.vertical.VTfromExistingData: ucar.nc2.Variable existingData> = $r5;

        $r6 = r0.<ucar.unidata.geoloc.vertical.VTfromExistingData: ucar.nc2.Variable existingData>;

        $r7 = virtualinvoke $r6.<ucar.nc2.Variable: java.lang.String getUnitsString()>();

        r0.<ucar.unidata.geoloc.vertical.VTfromExistingData: java.lang.String units> = $r7;

        return;
    }

    public ucar.ma2.ArrayDouble$D3 getCoordinateArray(int) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.ma2.Array $r2, $r5;
        int[] $r3;
        ucar.unidata.geoloc.vertical.VTfromExistingData r0;
        int i0;
        ucar.nc2.Variable $r1;
        java.lang.Class $r4;
        ucar.ma2.ArrayDouble$D3 r6;

        r0 := @this: ucar.unidata.geoloc.vertical.VTfromExistingData;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.unidata.geoloc.vertical.VTfromExistingData: ucar.nc2.Variable existingData>;

        $r2 = virtualinvoke r0.<ucar.unidata.geoloc.vertical.VTfromExistingData: ucar.ma2.Array readArray(ucar.nc2.Variable,int)>($r1, i0);

        $r3 = virtualinvoke $r2.<ucar.ma2.Array: int[] getShape()>();

        $r4 = <java.lang.Double: java.lang.Class TYPE>;

        $r5 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[])>($r4, $r3);

        r6 = (ucar.ma2.ArrayDouble$D3) $r5;

        staticinvoke <ucar.ma2.MAMath: void copyDouble(ucar.ma2.Array,ucar.ma2.Array)>(r6, $r2);

        return r6;
    }

    public static void <clinit>()
    {
        <ucar.unidata.geoloc.vertical.VTfromExistingData: java.lang.String existingDataField> = "existingDataField";

        return;
    }
}
