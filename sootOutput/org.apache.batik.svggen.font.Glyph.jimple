public class org.apache.batik.svggen.font.Glyph extends java.lang.Object
{
    protected short leftSideBearing;
    protected int advanceWidth;
    private org.apache.batik.svggen.font.Point[] points;

    public void <init>(org.apache.batik.svggen.font.table.GlyphDescription, short, int)
    {
        short s0;
        org.apache.batik.svggen.font.Glyph r0;
        int i1;
        org.apache.batik.svggen.font.table.GlyphDescription r1;

        r0 := @this: org.apache.batik.svggen.font.Glyph;

        r1 := @parameter0: org.apache.batik.svggen.font.table.GlyphDescription;

        s0 := @parameter1: short;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.svggen.font.Glyph: short leftSideBearing> = s0;

        r0.<org.apache.batik.svggen.font.Glyph: int advanceWidth> = i1;

        specialinvoke r0.<org.apache.batik.svggen.font.Glyph: void describe(org.apache.batik.svggen.font.table.GlyphDescription)>(r1);

        return;
    }

    public int getAdvanceWidth()
    {
        int $i0;
        org.apache.batik.svggen.font.Glyph r0;

        r0 := @this: org.apache.batik.svggen.font.Glyph;

        $i0 = r0.<org.apache.batik.svggen.font.Glyph: int advanceWidth>;

        return $i0;
    }

    public short getLeftSideBearing()
    {
        short $s0;
        org.apache.batik.svggen.font.Glyph r0;

        r0 := @this: org.apache.batik.svggen.font.Glyph;

        $s0 = r0.<org.apache.batik.svggen.font.Glyph: short leftSideBearing>;

        return $s0;
    }

    public org.apache.batik.svggen.font.Point getPoint(int)
    {
        org.apache.batik.svggen.font.Point $r2;
        org.apache.batik.svggen.font.Point[] $r1;
        org.apache.batik.svggen.font.Glyph r0;
        int i0;

        r0 := @this: org.apache.batik.svggen.font.Glyph;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.svggen.font.Glyph: org.apache.batik.svggen.font.Point[] points>;

        $r2 = $r1[i0];

        return $r2;
    }

    public int getPointCount()
    {
        int $i0;
        org.apache.batik.svggen.font.Point[] $r1;
        org.apache.batik.svggen.font.Glyph r0;

        r0 := @this: org.apache.batik.svggen.font.Glyph;

        $r1 = r0.<org.apache.batik.svggen.font.Glyph: org.apache.batik.svggen.font.Point[] points>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public void reset()
    {
        org.apache.batik.svggen.font.Glyph r0;

        r0 := @this: org.apache.batik.svggen.font.Glyph;

        return;
    }

    public void scale(int)
    {
        short $s10, $s13;
        org.apache.batik.svggen.font.Glyph r0;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i14, $i15, $i16, i17, $i18;
        org.apache.batik.svggen.font.Point[] $r1, $r2, $r3, $r6, $r7;
        org.apache.batik.svggen.font.Point $r4, $r5, $r8, $r9;

        r0 := @this: org.apache.batik.svggen.font.Glyph;

        i2 := @parameter0: int;

        i17 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.batik.svggen.font.Glyph: org.apache.batik.svggen.font.Point[] points>;

        $r5 = $r2[i17];

        $r3 = r0.<org.apache.batik.svggen.font.Glyph: org.apache.batik.svggen.font.Point[] points>;

        $r4 = $r3[i17];

        $i1 = $r4.<org.apache.batik.svggen.font.Point: int x>;

        $i3 = $i1 << 10;

        $i4 = $i3 * i2;

        $i5 = $i4 >> 26;

        $r5.<org.apache.batik.svggen.font.Point: int x> = $i5;

        $r6 = r0.<org.apache.batik.svggen.font.Glyph: org.apache.batik.svggen.font.Point[] points>;

        $r9 = $r6[i17];

        $r7 = r0.<org.apache.batik.svggen.font.Glyph: org.apache.batik.svggen.font.Point[] points>;

        $r8 = $r7[i17];

        $i6 = $r8.<org.apache.batik.svggen.font.Point: int y>;

        $i7 = $i6 << 10;

        $i8 = $i7 * i2;

        $i9 = $i8 >> 26;

        $r9.<org.apache.batik.svggen.font.Point: int y> = $i9;

        i17 = i17 + 1;

     label2:
        $r1 = r0.<org.apache.batik.svggen.font.Glyph: org.apache.batik.svggen.font.Point[] points>;

        $i0 = lengthof $r1;

        if i17 < $i0 goto label1;

        $s10 = r0.<org.apache.batik.svggen.font.Glyph: short leftSideBearing>;

        $i18 = (int) $s10;

        $i11 = $i18 * i2;

        $i12 = $i11 >> 6;

        $s13 = (short) $i12;

        r0.<org.apache.batik.svggen.font.Glyph: short leftSideBearing> = $s13;

        $i14 = r0.<org.apache.batik.svggen.font.Glyph: int advanceWidth>;

        $i15 = $i14 * i2;

        $i16 = $i15 >> 6;

        r0.<org.apache.batik.svggen.font.Glyph: int advanceWidth> = $i16;

        return;
    }

    private void describe(org.apache.batik.svggen.font.table.GlyphDescription)
    {
        short $s3, $s4;
        byte $b5, $b6;
        org.apache.batik.svggen.font.Glyph r0;
        int $i0, $i1, $i2, $i7, $i8, $i9, $i10, $i11, i12, i13, $i14, $i15, $i16;
        boolean z0, $z2, $z3, $z4;
        org.apache.batik.svggen.font.Point[] $r2, $r4, $r5, $r7;
        org.apache.batik.svggen.font.table.GlyphDescription r1;
        org.apache.batik.svggen.font.Point $r9, $r10, $r11;

        r0 := @this: org.apache.batik.svggen.font.Glyph;

        r1 := @parameter0: org.apache.batik.svggen.font.table.GlyphDescription;

        i12 = 0;

        $i0 = interfaceinvoke r1.<org.apache.batik.svggen.font.table.GlyphDescription: int getPointCount()>();

        $i1 = $i0 + 2;

        $r2 = newarray (org.apache.batik.svggen.font.Point)[$i1];

        r0.<org.apache.batik.svggen.font.Glyph: org.apache.batik.svggen.font.Point[] points> = $r2;

        i13 = 0;

        goto label7;

     label1:
        $i2 = interfaceinvoke r1.<org.apache.batik.svggen.font.table.GlyphDescription: int getEndPtOfContours(int)>(i12);

        if $i2 != i13 goto label2;

        $z4 = 1;

        $z3 = 1;

        goto label3;

     label2:
        $z4 = 0;

        $z3 = 0;

     label3:
        z0 = $z4;

        if $z3 == 0 goto label4;

        i12 = i12 + 1;

     label4:
        $r4 = r0.<org.apache.batik.svggen.font.Glyph: org.apache.batik.svggen.font.Point[] points>;

        $i7 = i13;

        $r9 = new org.apache.batik.svggen.font.Point;

        $s3 = interfaceinvoke r1.<org.apache.batik.svggen.font.table.GlyphDescription: short getXCoordinate(int)>(i13);

        $s4 = interfaceinvoke r1.<org.apache.batik.svggen.font.table.GlyphDescription: short getYCoordinate(int)>(i13);

        $b5 = interfaceinvoke r1.<org.apache.batik.svggen.font.table.GlyphDescription: byte getFlags(int)>(i13);

        $b6 = $b5 & 1;

        if $b6 == 0 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        $i15 = (int) $s3;

        $i16 = (int) $s4;

        specialinvoke $r9.<org.apache.batik.svggen.font.Point: void <init>(int,int,boolean,boolean)>($i15, $i16, $z2, z0);

        $r4[$i7] = $r9;

        i13 = i13 + 1;

     label7:
        $i14 = interfaceinvoke r1.<org.apache.batik.svggen.font.table.GlyphDescription: int getPointCount()>();

        if i13 < $i14 goto label1;

        $r5 = r0.<org.apache.batik.svggen.font.Glyph: org.apache.batik.svggen.font.Point[] points>;

        $i8 = interfaceinvoke r1.<org.apache.batik.svggen.font.table.GlyphDescription: int getPointCount()>();

        $r10 = new org.apache.batik.svggen.font.Point;

        specialinvoke $r10.<org.apache.batik.svggen.font.Point: void <init>(int,int,boolean,boolean)>(0, 0, 1, 1);

        $r5[$i8] = $r10;

        $r7 = r0.<org.apache.batik.svggen.font.Glyph: org.apache.batik.svggen.font.Point[] points>;

        $i9 = interfaceinvoke r1.<org.apache.batik.svggen.font.table.GlyphDescription: int getPointCount()>();

        $i11 = $i9 + 1;

        $r11 = new org.apache.batik.svggen.font.Point;

        $i10 = r0.<org.apache.batik.svggen.font.Glyph: int advanceWidth>;

        specialinvoke $r11.<org.apache.batik.svggen.font.Point: void <init>(int,int,boolean,boolean)>($i10, 0, 1, 1);

        $r7[$i11] = $r11;

        return;
    }
}
