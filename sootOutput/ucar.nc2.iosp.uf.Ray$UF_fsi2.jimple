class ucar.nc2.iosp.uf.Ray$UF_fsi2 extends java.lang.Object
{
    short nyquistVelocity;
    short radarConstant;
    short noisePower;
    short receiverGain;
    short peakPower;
    short antennaGain;
    short pulseDuration;
    final ucar.nc2.iosp.uf.Ray this$0;

    void <init>(ucar.nc2.iosp.uf.Ray, byte[])
    {
        byte[] r2;
        ucar.nc2.iosp.uf.Ray$UF_fsi2 r0;
        short $s1, $s2, $s3, $s4, $s5, $s6, $s7;
        ucar.nc2.iosp.uf.Ray r1;
        int $i0;

        r0 := @this: ucar.nc2.iosp.uf.Ray$UF_fsi2;

        r1 := @parameter0: ucar.nc2.iosp.uf.Ray;

        r2 := @parameter1: byte[];

        r0.<ucar.nc2.iosp.uf.Ray$UF_fsi2: ucar.nc2.iosp.uf.Ray this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = lengthof r2;

        if $i0 <= 4 goto label1;

        $s2 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r2, 0);

        r0.<ucar.nc2.iosp.uf.Ray$UF_fsi2: short radarConstant> = $s2;

        $s3 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r2, 2);

        r0.<ucar.nc2.iosp.uf.Ray$UF_fsi2: short noisePower> = $s3;

        $s4 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r2, 24);

        r0.<ucar.nc2.iosp.uf.Ray$UF_fsi2: short receiverGain> = $s4;

        $s5 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r2, 6);

        r0.<ucar.nc2.iosp.uf.Ray$UF_fsi2: short peakPower> = $s5;

        $s6 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r2, 8);

        r0.<ucar.nc2.iosp.uf.Ray$UF_fsi2: short antennaGain> = $s6;

        $s7 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r2, 10);

        r0.<ucar.nc2.iosp.uf.Ray$UF_fsi2: short pulseDuration> = $s7;

        goto label2;

     label1:
        $s1 = virtualinvoke r1.<ucar.nc2.iosp.uf.Ray: short getShort(byte[],int)>(r2, 0);

        r0.<ucar.nc2.iosp.uf.Ray$UF_fsi2: short nyquistVelocity> = $s1;

     label2:
        return;
    }
}
