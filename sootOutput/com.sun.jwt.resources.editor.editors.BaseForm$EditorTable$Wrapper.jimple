class com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper extends java.lang.Object implements javax.swing.table.TableModel, javax.swing.event.TableModelListener
{
    private java.util.List listeners;
    final com.sun.jwt.resources.editor.editors.BaseForm$EditorTable this$0;

    public void <init>(com.sun.jwt.resources.editor.editors.BaseForm$EditorTable)
    {
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper r0;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable r1;
        java.util.ArrayList $r2;
        javax.swing.table.TableModel $r3;

        r0 := @this: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper;

        r1 := @parameter0: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable;

        r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: java.util.List listeners> = $r2;

        $r3 = staticinvoke <com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: javax.swing.table.TableModel access$100(com.sun.jwt.resources.editor.editors.BaseForm$EditorTable)>(r1);

        interfaceinvoke $r3.<javax.swing.table.TableModel: void addTableModelListener(javax.swing.event.TableModelListener)>(r0);

        return;
    }

    public int getRowCount()
    {
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable $r1, $r3, $r5;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper r0;
        java.util.List $r2, $r4;
        int $i0, $i1;
        javax.swing.table.TableModel $r6;

        r0 := @this: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable this$0>;

        $r2 = staticinvoke <com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: java.util.List access$200(com.sun.jwt.resources.editor.editors.BaseForm$EditorTable)>($r1);

        if $r2 != null goto label1;

        $r5 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable this$0>;

        $r6 = staticinvoke <com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: javax.swing.table.TableModel access$100(com.sun.jwt.resources.editor.editors.BaseForm$EditorTable)>($r5);

        $i1 = interfaceinvoke $r6.<javax.swing.table.TableModel: int getRowCount()>();

        return $i1;

     label1:
        $r3 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable this$0>;

        $r4 = staticinvoke <com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: java.util.List access$200(com.sun.jwt.resources.editor.editors.BaseForm$EditorTable)>($r3);

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        return $i0;
    }

    public int getColumnCount()
    {
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper r0;
        int $i0;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable $r1;
        javax.swing.table.TableModel $r2;

        r0 := @this: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable this$0>;

        $r2 = staticinvoke <com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: javax.swing.table.TableModel access$100(com.sun.jwt.resources.editor.editors.BaseForm$EditorTable)>($r1);

        $i0 = interfaceinvoke $r2.<javax.swing.table.TableModel: int getColumnCount()>();

        return $i0;
    }

    public java.lang.String getColumnName(int)
    {
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper r0;
        int i0;
        java.lang.String $r3;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable $r1;
        javax.swing.table.TableModel $r2;

        r0 := @this: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper;

        i0 := @parameter0: int;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable this$0>;

        $r2 = staticinvoke <com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: javax.swing.table.TableModel access$100(com.sun.jwt.resources.editor.editors.BaseForm$EditorTable)>($r1);

        $r3 = interfaceinvoke $r2.<javax.swing.table.TableModel: java.lang.String getColumnName(int)>(i0);

        return $r3;
    }

    public java.lang.Class getColumnClass(int)
    {
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper r0;
        int i0;
        java.lang.Class $r3;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable $r1;
        javax.swing.table.TableModel $r2;

        r0 := @this: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper;

        i0 := @parameter0: int;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable this$0>;

        $r2 = staticinvoke <com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: javax.swing.table.TableModel access$100(com.sun.jwt.resources.editor.editors.BaseForm$EditorTable)>($r1);

        $r3 = interfaceinvoke $r2.<javax.swing.table.TableModel: java.lang.Class getColumnClass(int)>(i0);

        return $r3;
    }

    public boolean isCellEditable(int, int)
    {
        java.lang.Integer $r8;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable $r1, $r3, $r5, $r9;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper r0;
        int i0, $i1, i2;
        javax.swing.table.TableModel $r4, $r10;
        boolean $z0, $z1;
        java.util.List $r2, $r6;
        java.lang.Object $r7;

        r0 := @this: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable this$0>;

        $r2 = staticinvoke <com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: java.util.List access$200(com.sun.jwt.resources.editor.editors.BaseForm$EditorTable)>($r1);

        if $r2 != null goto label1;

        $r9 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable this$0>;

        $r10 = staticinvoke <com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: javax.swing.table.TableModel access$100(com.sun.jwt.resources.editor.editors.BaseForm$EditorTable)>($r9);

        $z1 = interfaceinvoke $r10.<javax.swing.table.TableModel: boolean isCellEditable(int,int)>(i0, i2);

        return $z1;

     label1:
        $r3 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable this$0>;

        $r4 = staticinvoke <com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: javax.swing.table.TableModel access$100(com.sun.jwt.resources.editor.editors.BaseForm$EditorTable)>($r3);

        $r5 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable this$0>;

        $r6 = staticinvoke <com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: java.util.List access$200(com.sun.jwt.resources.editor.editors.BaseForm$EditorTable)>($r5);

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i0);

        $r8 = (java.lang.Integer) $r7;

        $i1 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        $z0 = interfaceinvoke $r4.<javax.swing.table.TableModel: boolean isCellEditable(int,int)>($i1, i2);

        return $z0;
    }

    public java.lang.Object getValueAt(int, int)
    {
        java.lang.Integer $r8;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable $r1, $r3, $r5, $r10;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper r0;
        int i0, $i1, i2;
        javax.swing.table.TableModel $r4, $r11;
        java.util.List $r2, $r6;
        java.lang.Object $r7, $r9, $r12;

        r0 := @this: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable this$0>;

        $r2 = staticinvoke <com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: java.util.List access$200(com.sun.jwt.resources.editor.editors.BaseForm$EditorTable)>($r1);

        if $r2 != null goto label1;

        $r10 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable this$0>;

        $r11 = staticinvoke <com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: javax.swing.table.TableModel access$100(com.sun.jwt.resources.editor.editors.BaseForm$EditorTable)>($r10);

        $r12 = interfaceinvoke $r11.<javax.swing.table.TableModel: java.lang.Object getValueAt(int,int)>(i0, i2);

        return $r12;

     label1:
        $r3 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable this$0>;

        $r4 = staticinvoke <com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: javax.swing.table.TableModel access$100(com.sun.jwt.resources.editor.editors.BaseForm$EditorTable)>($r3);

        $r5 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable this$0>;

        $r6 = staticinvoke <com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: java.util.List access$200(com.sun.jwt.resources.editor.editors.BaseForm$EditorTable)>($r5);

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i0);

        $r8 = (java.lang.Integer) $r7;

        $i1 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        $r9 = interfaceinvoke $r4.<javax.swing.table.TableModel: java.lang.Object getValueAt(int,int)>($i1, i2);

        return $r9;
    }

    public void setValueAt(java.lang.Object, int, int)
    {
        java.lang.Integer $r9;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable $r1, $r3, $r6, $r10;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper r0;
        java.util.List $r2, $r7;
        int i0, $i1, i2;
        java.lang.Object r5, $r8;
        javax.swing.table.TableModel $r4, $r11;

        r0 := @this: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper;

        r5 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable this$0>;

        $r2 = staticinvoke <com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: java.util.List access$200(com.sun.jwt.resources.editor.editors.BaseForm$EditorTable)>($r1);

        if $r2 != null goto label1;

        $r10 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable this$0>;

        $r11 = staticinvoke <com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: javax.swing.table.TableModel access$100(com.sun.jwt.resources.editor.editors.BaseForm$EditorTable)>($r10);

        interfaceinvoke $r11.<javax.swing.table.TableModel: void setValueAt(java.lang.Object,int,int)>(r5, i0, i2);

        goto label2;

     label1:
        $r3 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable this$0>;

        $r4 = staticinvoke <com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: javax.swing.table.TableModel access$100(com.sun.jwt.resources.editor.editors.BaseForm$EditorTable)>($r3);

        $r6 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable this$0>;

        $r7 = staticinvoke <com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: java.util.List access$200(com.sun.jwt.resources.editor.editors.BaseForm$EditorTable)>($r6);

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i0);

        $r9 = (java.lang.Integer) $r8;

        $i1 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        interfaceinvoke $r4.<javax.swing.table.TableModel: void setValueAt(java.lang.Object,int,int)>(r5, $i1, i2);

     label2:
        return;
    }

    public void addTableModelListener(javax.swing.event.TableModelListener)
    {
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper r0;
        java.util.List $r2, $r3;
        javax.swing.event.TableModelListener r1;
        boolean $z0;

        r0 := @this: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper;

        r1 := @parameter0: javax.swing.event.TableModelListener;

        $r2 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: java.util.List listeners>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: java.util.List listeners>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

     label1:
        return;
    }

    public void removeTableModelListener(javax.swing.event.TableModelListener)
    {
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper r0;
        java.util.List $r2;
        javax.swing.event.TableModelListener r1;

        r0 := @this: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper;

        r1 := @parameter0: javax.swing.event.TableModelListener;

        $r2 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: java.util.List listeners>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return;
    }

    private int mapRow(int)
    {
        java.lang.Integer $r6;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable $r1, $r3;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper r0;
        java.util.List $r2, $r4;
        int i0, $i1;
        java.lang.Object $r5;

        r0 := @this: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable this$0>;

        $r2 = staticinvoke <com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: java.util.List access$200(com.sun.jwt.resources.editor.editors.BaseForm$EditorTable)>($r1);

        if $r2 != null goto label2;

     label1:
        return i0;

     label2:
        $r3 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable this$0>;

        $r4 = staticinvoke <com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: java.util.List access$200(com.sun.jwt.resources.editor.editors.BaseForm$EditorTable)>($r3);

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0);

        $r6 = (java.lang.Integer) $r5;

        $i1 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        return $i1;
    }

    private int reverseMapRow(int)
    {
        java.lang.Integer $r6;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable $r1, $r3;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper r0;
        java.util.List $r2, $r4;
        int $i0, $i1, i2, i3, $i5;
        java.lang.Object $r5;

        r0 := @this: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper;

        i2 := @parameter0: int;

        i3 = 0;

     label1:
        $r1 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable this$0>;

        $r2 = staticinvoke <com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: java.util.List access$200(com.sun.jwt.resources.editor.editors.BaseForm$EditorTable)>($r1);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i3 >= $i0 goto label3;

        $r3 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable this$0>;

        $r4 = staticinvoke <com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: java.util.List access$200(com.sun.jwt.resources.editor.editors.BaseForm$EditorTable)>($r3);

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i3);

        $r6 = (java.lang.Integer) $r5;

        $i1 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        if $i1 != i2 goto label2;

        return i3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $i5 = (int) -1;

        return $i5;
    }

    public void tableChanged(javax.swing.event.TableModelEvent)
    {
        javax.swing.event.TableModelListener r6;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable $r1;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;
        javax.swing.event.TableModelEvent $r7, r8;
        java.util.Iterator $r4;
        java.util.List $r2, $r3;
        java.lang.Object $r5;

        r0 := @this: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper;

        r8 := @parameter0: javax.swing.event.TableModelEvent;

        $r1 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable this$0>;

        $r2 = staticinvoke <com.sun.jwt.resources.editor.editors.BaseForm$EditorTable: java.util.List access$200(com.sun.jwt.resources.editor.editors.BaseForm$EditorTable)>($r1);

        if $r2 == null goto label1;

        $r7 = new javax.swing.event.TableModelEvent;

        $i0 = virtualinvoke r8.<javax.swing.event.TableModelEvent: int getFirstRow()>();

        $i1 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: int reverseMapRow(int)>($i0);

        $i2 = virtualinvoke r8.<javax.swing.event.TableModelEvent: int getLastRow()>();

        $i3 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: int reverseMapRow(int)>($i2);

        $i4 = virtualinvoke r8.<javax.swing.event.TableModelEvent: int getColumn()>();

        $i5 = virtualinvoke r8.<javax.swing.event.TableModelEvent: int getType()>();

        specialinvoke $r7.<javax.swing.event.TableModelEvent: void <init>(javax.swing.table.TableModel,int,int,int,int)>(r0, $i1, $i3, $i4, $i5);

        r8 = $r7;

     label1:
        $r3 = r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: java.util.List listeners>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (javax.swing.event.TableModelListener) $r5;

        interfaceinvoke r6.<javax.swing.event.TableModelListener: void tableChanged(javax.swing.event.TableModelEvent)>(r8);

        goto label2;

     label3:
        return;
    }

    static int access$000(com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper, int)
    {
        int i0, $i1;
        com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper r0;

        r0 := @parameter0: com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper;

        i0 := @parameter1: int;

        $i1 = specialinvoke r0.<com.sun.jwt.resources.editor.editors.BaseForm$EditorTable$Wrapper: int mapRow(int)>(i0);

        return $i1;
    }
}
