public class org.junit.runner.Description extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private static final java.util.regex.Pattern METHOD_AND_CLASS_NAME_PATTERN;
    public static final org.junit.runner.Description EMPTY;
    public static final org.junit.runner.Description TEST_MECHANISM;
    private final java.util.ArrayList fChildren;
    private final java.lang.String fDisplayName;
    private final java.io.Serializable fUniqueId;
    private final java.lang.'annotation'.Annotation[] fAnnotations;
    private java.lang.Class fTestClass;

    public static transient org.junit.runner.Description createSuiteDescription(java.lang.String, java.lang.'annotation'.Annotation[])
    {
        org.junit.runner.Description $r0;
        java.lang.String r1;
        java.lang.'annotation'.Annotation[] r2;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.'annotation'.Annotation[];

        $r0 = new org.junit.runner.Description;

        specialinvoke $r0.<org.junit.runner.Description: void <init>(java.lang.Class,java.lang.String,java.lang.'annotation'.Annotation[])>(null, r1, r2);

        return $r0;
    }

    public static transient org.junit.runner.Description createSuiteDescription(java.lang.String, java.io.Serializable, java.lang.'annotation'.Annotation[])
    {
        org.junit.runner.Description $r0;
        java.lang.String r1;
        java.lang.'annotation'.Annotation[] r3;
        java.io.Serializable r2;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.Serializable;

        r3 := @parameter2: java.lang.'annotation'.Annotation[];

        $r0 = new org.junit.runner.Description;

        specialinvoke $r0.<org.junit.runner.Description: void <init>(java.lang.Class,java.lang.String,java.io.Serializable,java.lang.'annotation'.Annotation[])>(null, r1, r2, r3);

        return $r0;
    }

    public static transient org.junit.runner.Description createTestDescription(java.lang.String, java.lang.String, java.lang.'annotation'.Annotation[])
    {
        org.junit.runner.Description $r0;
        java.lang.String r1, r2, $r3;
        java.lang.'annotation'.Annotation[] r4;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.'annotation'.Annotation[];

        $r0 = new org.junit.runner.Description;

        $r3 = staticinvoke <org.junit.runner.Description: java.lang.String formatDisplayName(java.lang.String,java.lang.String)>(r1, r2);

        specialinvoke $r0.<org.junit.runner.Description: void <init>(java.lang.Class,java.lang.String,java.lang.'annotation'.Annotation[])>(null, $r3, r4);

        return $r0;
    }

    public static transient org.junit.runner.Description createTestDescription(java.lang.Class, java.lang.String, java.lang.'annotation'.Annotation[])
    {
        org.junit.runner.Description $r0;
        java.lang.Class r1;
        java.lang.String r2, $r3, $r4;
        java.lang.'annotation'.Annotation[] r5;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.'annotation'.Annotation[];

        $r0 = new org.junit.runner.Description;

        $r3 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r4 = staticinvoke <org.junit.runner.Description: java.lang.String formatDisplayName(java.lang.String,java.lang.String)>(r2, $r3);

        specialinvoke $r0.<org.junit.runner.Description: void <init>(java.lang.Class,java.lang.String,java.lang.'annotation'.Annotation[])>(r1, $r4, r5);

        return $r0;
    }

    public static org.junit.runner.Description createTestDescription(java.lang.Class, java.lang.String)
    {
        org.junit.runner.Description $r0;
        java.lang.Class r1;
        java.lang.String r2, $r3, $r4;
        java.lang.'annotation'.Annotation[] $r5;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        $r0 = new org.junit.runner.Description;

        $r3 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r4 = staticinvoke <org.junit.runner.Description: java.lang.String formatDisplayName(java.lang.String,java.lang.String)>(r2, $r3);

        $r5 = newarray (java.lang.'annotation'.Annotation)[0];

        specialinvoke $r0.<org.junit.runner.Description: void <init>(java.lang.Class,java.lang.String,java.lang.'annotation'.Annotation[])>(r1, $r4, $r5);

        return $r0;
    }

    public static org.junit.runner.Description createTestDescription(java.lang.String, java.lang.String, java.io.Serializable)
    {
        org.junit.runner.Description $r0;
        java.lang.String r1, r2, $r3;
        java.lang.'annotation'.Annotation[] $r5;
        java.io.Serializable r4;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r4 := @parameter2: java.io.Serializable;

        $r0 = new org.junit.runner.Description;

        $r3 = staticinvoke <org.junit.runner.Description: java.lang.String formatDisplayName(java.lang.String,java.lang.String)>(r1, r2);

        $r5 = newarray (java.lang.'annotation'.Annotation)[0];

        specialinvoke $r0.<org.junit.runner.Description: void <init>(java.lang.Class,java.lang.String,java.io.Serializable,java.lang.'annotation'.Annotation[])>(null, $r3, r4, $r5);

        return $r0;
    }

    private static java.lang.String formatDisplayName(java.lang.String, java.lang.String)
    {
        java.lang.Object[] $r0;
        java.lang.String r1, r2, $r3;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r0 = newarray (java.lang.Object)[2];

        $r0[0] = r1;

        $r0[1] = r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s(%s)", $r0);

        return $r3;
    }

    public static org.junit.runner.Description createSuiteDescription(java.lang.Class)
    {
        org.junit.runner.Description $r0;
        java.lang.Class r1;
        java.lang.String $r2;
        java.lang.'annotation'.Annotation[] $r3;

        r1 := @parameter0: java.lang.Class;

        $r0 = new org.junit.runner.Description;

        $r2 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke r1.<java.lang.Class: java.lang.'annotation'.Annotation[] getAnnotations()>();

        specialinvoke $r0.<org.junit.runner.Description: void <init>(java.lang.Class,java.lang.String,java.lang.'annotation'.Annotation[])>(r1, $r2, $r3);

        return $r0;
    }

    private transient void <init>(java.lang.Class, java.lang.String, java.lang.'annotation'.Annotation[])
    {
        org.junit.runner.Description r0;
        java.lang.Class r1;
        java.lang.String r2;
        java.lang.'annotation'.Annotation[] r3;

        r0 := @this: org.junit.runner.Description;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.'annotation'.Annotation[];

        specialinvoke r0.<org.junit.runner.Description: void <init>(java.lang.Class,java.lang.String,java.io.Serializable,java.lang.'annotation'.Annotation[])>(r1, r2, r2, r3);

        return;
    }

    private transient void <init>(java.lang.Class, java.lang.String, java.io.Serializable, java.lang.'annotation'.Annotation[])
    {
        org.junit.runner.Description r0;
        java.lang.'annotation'.Annotation[] r6;
        java.lang.IllegalArgumentException $r3, $r7;
        java.util.ArrayList $r1;
        java.io.Serializable r4;
        int $i0;
        java.lang.Class r5;
        java.lang.String r2;

        r0 := @this: org.junit.runner.Description;

        r5 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        r4 := @parameter2: java.io.Serializable;

        r6 := @parameter3: java.lang.'annotation'.Annotation[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.junit.runner.Description: java.util.ArrayList fChildren> = $r1;

        if r2 == null goto label1;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The display name must not be empty.");

        throw $r3;

     label2:
        if r4 != null goto label3;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The unique id must not be null.");

        throw $r7;

     label3:
        r0.<org.junit.runner.Description: java.lang.Class fTestClass> = r5;

        r0.<org.junit.runner.Description: java.lang.String fDisplayName> = r2;

        r0.<org.junit.runner.Description: java.io.Serializable fUniqueId> = r4;

        r0.<org.junit.runner.Description: java.lang.'annotation'.Annotation[] fAnnotations> = r6;

        return;
    }

    public java.lang.String getDisplayName()
    {
        org.junit.runner.Description r0;
        java.lang.String $r1;

        r0 := @this: org.junit.runner.Description;

        $r1 = r0.<org.junit.runner.Description: java.lang.String fDisplayName>;

        return $r1;
    }

    public void addChild(org.junit.runner.Description)
    {
        org.junit.runner.Description r0, r2;
        java.util.ArrayList $r1;

        r0 := @this: org.junit.runner.Description;

        r2 := @parameter0: org.junit.runner.Description;

        $r1 = virtualinvoke r0.<org.junit.runner.Description: java.util.ArrayList getChildren()>();

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        return;
    }

    public java.util.ArrayList getChildren()
    {
        org.junit.runner.Description r0;
        java.util.ArrayList $r1;

        r0 := @this: org.junit.runner.Description;

        $r1 = r0.<org.junit.runner.Description: java.util.ArrayList fChildren>;

        return $r1;
    }

    public boolean isSuite()
    {
        org.junit.runner.Description r0;
        boolean $z0, $z1;

        r0 := @this: org.junit.runner.Description;

        $z0 = virtualinvoke r0.<org.junit.runner.Description: boolean isTest()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean isTest()
    {
        org.junit.runner.Description r0;
        java.util.ArrayList $r1;
        boolean $z0;

        r0 := @this: org.junit.runner.Description;

        $r1 = virtualinvoke r0.<org.junit.runner.Description: java.util.ArrayList getChildren()>();

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        return $z0;
    }

    public int testCount()
    {
        java.util.Iterator $r2;
        org.junit.runner.Description r0, r4;
        java.util.ArrayList $r1;
        int $i0, i1;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: org.junit.runner.Description;

        $z0 = virtualinvoke r0.<org.junit.runner.Description: boolean isTest()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        i1 = 0;

        $r1 = virtualinvoke r0.<org.junit.runner.Description: java.util.ArrayList getChildren()>();

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.junit.runner.Description) $r3;

        $i0 = virtualinvoke r4.<org.junit.runner.Description: int testCount()>();

        i1 = i1 + $i0;

        goto label2;

     label3:
        return i1;
    }

    public int hashCode()
    {
        int $i0;
        org.junit.runner.Description r0;
        java.io.Serializable $r1;

        r0 := @this: org.junit.runner.Description;

        $r1 = r0.<org.junit.runner.Description: java.io.Serializable fUniqueId>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        org.junit.runner.Description r1, r2;
        boolean $z0, $z1;
        java.io.Serializable $r3, $r4;

        r2 := @this: org.junit.runner.Description;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.junit.runner.Description;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (org.junit.runner.Description) r0;

        $r4 = r2.<org.junit.runner.Description: java.io.Serializable fUniqueId>;

        $r3 = r1.<org.junit.runner.Description: java.io.Serializable fUniqueId>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        return $z1;
    }

    public java.lang.String toString()
    {
        org.junit.runner.Description r0;
        java.lang.String $r1;

        r0 := @this: org.junit.runner.Description;

        $r1 = virtualinvoke r0.<org.junit.runner.Description: java.lang.String getDisplayName()>();

        return $r1;
    }

    public boolean isEmpty()
    {
        org.junit.runner.Description r0, $r1;
        boolean $z0;

        r0 := @this: org.junit.runner.Description;

        $r1 = <org.junit.runner.Description: org.junit.runner.Description EMPTY>;

        $z0 = virtualinvoke r0.<org.junit.runner.Description: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public org.junit.runner.Description childlessCopy()
    {
        org.junit.runner.Description $r0, r1;
        java.lang.Class $r4;
        java.lang.'annotation'.Annotation[] $r2;
        java.lang.String $r3;

        r1 := @this: org.junit.runner.Description;

        $r0 = new org.junit.runner.Description;

        $r4 = r1.<org.junit.runner.Description: java.lang.Class fTestClass>;

        $r3 = r1.<org.junit.runner.Description: java.lang.String fDisplayName>;

        $r2 = r1.<org.junit.runner.Description: java.lang.'annotation'.Annotation[] fAnnotations>;

        specialinvoke $r0.<org.junit.runner.Description: void <init>(java.lang.Class,java.lang.String,java.lang.'annotation'.Annotation[])>($r4, $r3, $r2);

        return $r0;
    }

    public java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)
    {
        org.junit.runner.Description r0;
        java.lang.'annotation'.Annotation[] r1;
        int i0, i1;
        java.lang.'annotation'.Annotation r2, $r6;
        java.lang.Class $r3, r4;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: org.junit.runner.Description;

        r4 := @parameter0: java.lang.Class;

        r1 = r0.<org.junit.runner.Description: java.lang.'annotation'.Annotation[] fAnnotations>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = r1[i1];

        $r3 = interfaceinvoke r2.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r4.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(r2);

        $r6 = (java.lang.'annotation'.Annotation) $r5;

        return $r6;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    public java.util.Collection getAnnotations()
    {
        org.junit.runner.Description r0;
        java.util.List $r2;
        java.lang.'annotation'.Annotation[] $r1;

        r0 := @this: org.junit.runner.Description;

        $r1 = r0.<org.junit.runner.Description: java.lang.'annotation'.Annotation[] fAnnotations>;

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        return $r2;
    }

    public java.lang.Class getTestClass()
    {
        org.junit.runner.Description r0;
        java.lang.Class $r1, $r3, $r5, $r6, $r7;
        java.lang.ClassNotFoundException $r8;
        java.lang.String $r2;
        java.lang.ClassLoader $r4;

        r0 := @this: org.junit.runner.Description;

        $r1 = r0.<org.junit.runner.Description: java.lang.Class fTestClass>;

        if $r1 == null goto label1;

        $r7 = r0.<org.junit.runner.Description: java.lang.Class fTestClass>;

        return $r7;

     label1:
        $r2 = virtualinvoke r0.<org.junit.runner.Description: java.lang.String getClassName()>();

        if $r2 != null goto label2;

        return null;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r2, 0, $r4);

        r0.<org.junit.runner.Description: java.lang.Class fTestClass> = $r5;

        $r6 = r0.<org.junit.runner.Description: java.lang.Class fTestClass>;

     label3:
        return $r6;

     label4:
        $r8 := @caughtexception;

        return null;

        catch java.lang.ClassNotFoundException from label2 to label3 with label4;
    }

    public java.lang.String getClassName()
    {
        org.junit.runner.Description r0;
        java.lang.Class $r1, $r3;
        java.lang.String $r2, $r4;

        r0 := @this: org.junit.runner.Description;

        $r1 = r0.<org.junit.runner.Description: java.lang.Class fTestClass>;

        if $r1 == null goto label1;

        $r3 = r0.<org.junit.runner.Description: java.lang.Class fTestClass>;

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.junit.runner.Description: java.lang.String toString()>();

        $r4 = specialinvoke r0.<org.junit.runner.Description: java.lang.String methodAndClassNamePatternGroupOrDefault(int,java.lang.String)>(2, $r2);

     label2:
        return $r4;
    }

    public java.lang.String getMethodName()
    {
        org.junit.runner.Description r0;
        java.lang.String $r1;

        r0 := @this: org.junit.runner.Description;

        $r1 = specialinvoke r0.<org.junit.runner.Description: java.lang.String methodAndClassNamePatternGroupOrDefault(int,java.lang.String)>(1, null);

        return $r1;
    }

    private java.lang.String methodAndClassNamePatternGroupOrDefault(int, java.lang.String)
    {
        org.junit.runner.Description r0;
        java.util.regex.Matcher $r3;
        int i0;
        java.util.regex.Pattern $r1;
        java.lang.String $r2, r4, $r5;
        boolean $z0;

        r0 := @this: org.junit.runner.Description;

        i0 := @parameter0: int;

        r4 := @parameter1: java.lang.String;

        $r1 = <org.junit.runner.Description: java.util.regex.Pattern METHOD_AND_CLASS_NAME_PATTERN>;

        $r2 = virtualinvoke r0.<org.junit.runner.Description: java.lang.String toString()>();

        $r3 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r2);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(i0);

        goto label2;

     label1:
        $r5 = r4;

     label2:
        return $r5;
    }

    static void <clinit>()
    {
        org.junit.runner.Description $r1, $r3;
        java.util.regex.Pattern $r0;
        java.lang.'annotation'.Annotation[] $r2, $r4;

        <org.junit.runner.Description: long serialVersionUID> = 1L;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(.*)\\((.*)\\)");

        <org.junit.runner.Description: java.util.regex.Pattern METHOD_AND_CLASS_NAME_PATTERN> = $r0;

        $r1 = new org.junit.runner.Description;

        $r2 = newarray (java.lang.'annotation'.Annotation)[0];

        specialinvoke $r1.<org.junit.runner.Description: void <init>(java.lang.Class,java.lang.String,java.lang.'annotation'.Annotation[])>(null, "No Tests", $r2);

        <org.junit.runner.Description: org.junit.runner.Description EMPTY> = $r1;

        $r3 = new org.junit.runner.Description;

        $r4 = newarray (java.lang.'annotation'.Annotation)[0];

        specialinvoke $r3.<org.junit.runner.Description: void <init>(java.lang.Class,java.lang.String,java.lang.'annotation'.Annotation[])>(null, "Test mechanism", $r4);

        <org.junit.runner.Description: org.junit.runner.Description TEST_MECHANISM> = $r3;

        return;
    }
}
