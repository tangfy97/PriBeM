class org.waveprotocol.box.server.waveserver.WaveServerImpl$1$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.google.common.util.concurrent.ListenableFuture val$result;
    final org.waveprotocol.wave.federation.WaveletFederationListener$WaveletUpdateCallback val$callback;
    final org.waveprotocol.wave.model.id.WaveletName val$waveletName;
    final org.waveprotocol.box.server.waveserver.WaveServerImpl$1 this$1;

    void <init>(org.waveprotocol.box.server.waveserver.WaveServerImpl$1, com.google.common.util.concurrent.ListenableFuture, org.waveprotocol.wave.federation.WaveletFederationListener$WaveletUpdateCallback, org.waveprotocol.wave.model.id.WaveletName)
    {
        org.waveprotocol.wave.federation.WaveletFederationListener$WaveletUpdateCallback r3;
        org.waveprotocol.wave.model.id.WaveletName r4;
        com.google.common.util.concurrent.ListenableFuture r2;
        org.waveprotocol.box.server.waveserver.WaveServerImpl$1$1 r0;
        org.waveprotocol.box.server.waveserver.WaveServerImpl$1 r1;

        r0 := @this: org.waveprotocol.box.server.waveserver.WaveServerImpl$1$1;

        r1 := @parameter0: org.waveprotocol.box.server.waveserver.WaveServerImpl$1;

        r2 := @parameter1: com.google.common.util.concurrent.ListenableFuture;

        r3 := @parameter2: org.waveprotocol.wave.federation.WaveletFederationListener$WaveletUpdateCallback;

        r4 := @parameter3: org.waveprotocol.wave.model.id.WaveletName;

        r0.<org.waveprotocol.box.server.waveserver.WaveServerImpl$1$1: org.waveprotocol.box.server.waveserver.WaveServerImpl$1 this$1> = r1;

        r0.<org.waveprotocol.box.server.waveserver.WaveServerImpl$1$1: com.google.common.util.concurrent.ListenableFuture val$result> = r2;

        r0.<org.waveprotocol.box.server.waveserver.WaveServerImpl$1$1: org.waveprotocol.wave.federation.WaveletFederationListener$WaveletUpdateCallback val$callback> = r3;

        r0.<org.waveprotocol.box.server.waveserver.WaveServerImpl$1$1: org.waveprotocol.wave.model.id.WaveletName val$waveletName> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        com.google.common.util.concurrent.ListenableFuture $r1;
        java.lang.Thread $r4;
        org.waveprotocol.wave.util.logging.Log $r5, $r14;
        java.lang.String $r10, $r19;
        org.waveprotocol.wave.model.id.WaveletName $r8, $r17;
        org.waveprotocol.wave.federation.FederationErrorProto$FederationError $r12, $r21;
        org.waveprotocol.wave.federation.WaveletFederationListener$WaveletUpdateCallback $r2, $r11, $r20;
        org.waveprotocol.wave.federation.FederationException $r13;
        org.waveprotocol.box.server.waveserver.WaveServerImpl$1$1 r0;
        java.lang.InterruptedException $r3;
        java.lang.StringBuilder $r6, $r7, $r9, $r15, $r16, $r18;

        r0 := @this: org.waveprotocol.box.server.waveserver.WaveServerImpl$1$1;

     label1:
        $r1 = r0.<org.waveprotocol.box.server.waveserver.WaveServerImpl$1$1: com.google.common.util.concurrent.ListenableFuture val$result>;

        staticinvoke <org.waveprotocol.box.server.waveserver.FutureUtil: java.lang.Object getResultOrPropagateException(java.util.concurrent.Future,java.lang.Class)>($r1, class "Lorg/waveprotocol/wave/federation/FederationException;");

        $r2 = r0.<org.waveprotocol.box.server.waveserver.WaveServerImpl$1$1: org.waveprotocol.wave.federation.WaveletFederationListener$WaveletUpdateCallback val$callback>;

        interfaceinvoke $r2.<org.waveprotocol.wave.federation.WaveletFederationListener$WaveletUpdateCallback: void onSuccess()>();

     label2:
        goto label5;

     label3:
        $r13 := @caughtexception;

        $r14 = staticinvoke <org.waveprotocol.box.server.waveserver.WaveServerImpl: org.waveprotocol.wave.util.logging.Log access$100()>();

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed updating ");

        $r17 = r0.<org.waveprotocol.box.server.waveserver.WaveServerImpl$1$1: org.waveprotocol.wave.model.id.WaveletName val$waveletName>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<org.waveprotocol.wave.util.logging.Log: void warning(java.lang.String,java.lang.Throwable)>($r19, $r13);

        $r20 = r0.<org.waveprotocol.box.server.waveserver.WaveServerImpl$1$1: org.waveprotocol.wave.federation.WaveletFederationListener$WaveletUpdateCallback val$callback>;

        $r21 = virtualinvoke $r13.<org.waveprotocol.wave.federation.FederationException: org.waveprotocol.wave.federation.FederationErrorProto$FederationError getError()>();

        interfaceinvoke $r20.<org.waveprotocol.wave.federation.WaveletFederationListener$WaveletUpdateCallback: void onFailure(org.waveprotocol.wave.federation.FederationErrorProto$FederationError)>($r21);

        goto label5;

     label4:
        $r3 := @caughtexception;

        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r4.<java.lang.Thread: void interrupt()>();

        $r5 = staticinvoke <org.waveprotocol.box.server.waveserver.WaveServerImpl: org.waveprotocol.wave.util.logging.Log access$100()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Interrupted updating ");

        $r8 = r0.<org.waveprotocol.box.server.waveserver.WaveServerImpl$1$1: org.waveprotocol.wave.model.id.WaveletName val$waveletName>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<org.waveprotocol.wave.util.logging.Log: void severe(java.lang.String,java.lang.Throwable)>($r10, $r3);

        $r11 = r0.<org.waveprotocol.box.server.waveserver.WaveServerImpl$1$1: org.waveprotocol.wave.federation.WaveletFederationListener$WaveletUpdateCallback val$callback>;

        $r12 = staticinvoke <org.waveprotocol.wave.federation.FederationErrors: org.waveprotocol.wave.federation.FederationErrorProto$FederationError internalServerError(java.lang.String)>("Interrupted");

        interfaceinvoke $r11.<org.waveprotocol.wave.federation.WaveletFederationListener$WaveletUpdateCallback: void onFailure(org.waveprotocol.wave.federation.FederationErrorProto$FederationError)>($r12);

     label5:
        return;

        catch org.waveprotocol.wave.federation.FederationException from label1 to label2 with label3;
        catch java.lang.InterruptedException from label1 to label2 with label4;
    }
}
