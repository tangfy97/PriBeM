class ucar.nc2.iosp.misc.Nldn$SeqIter extends java.lang.Object implements ucar.ma2.StructureDataIterator
{
    private int done;
    private int alreadyRead;
    private int nextIndex;
    private ucar.ma2.ArrayStructureBB asbb;
    private long totalBytes;
    private long bytesRead;
    final ucar.nc2.iosp.misc.Nldn this$0;

    void <init>(ucar.nc2.iosp.misc.Nldn) throws java.io.IOException
    {
        ucar.nc2.iosp.misc.Nldn r1;
        ucar.unidata.io.RandomAccessFile $r2, $r3;
        int $i1;
        long $l0, $l2;
        ucar.nc2.iosp.misc.Nldn$SeqIter r0;

        r0 := @this: ucar.nc2.iosp.misc.Nldn$SeqIter;

        r1 := @parameter0: ucar.nc2.iosp.misc.Nldn;

        r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: ucar.nc2.iosp.misc.Nldn this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: int done> = 0;

        r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: int alreadyRead> = 0;

        r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: int nextIndex> = 0;

        r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: ucar.ma2.ArrayStructureBB asbb> = null;

        $r2 = staticinvoke <ucar.nc2.iosp.misc.Nldn: ucar.unidata.io.RandomAccessFile access$000(ucar.nc2.iosp.misc.Nldn)>(r1);

        $l0 = virtualinvoke $r2.<ucar.unidata.io.RandomAccessFile: long length()>();

        $i1 = (int) $l0;

        $l2 = (long) $i1;

        r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: long totalBytes> = $l2;

        $r3 = staticinvoke <ucar.nc2.iosp.misc.Nldn: ucar.unidata.io.RandomAccessFile access$100(ucar.nc2.iosp.misc.Nldn)>(r1);

        virtualinvoke $r3.<ucar.unidata.io.RandomAccessFile: void seek(long)>(0L);

        return;
    }

    public ucar.ma2.StructureDataIterator reset()
    {
        ucar.nc2.iosp.misc.Nldn $r1;
        ucar.unidata.io.RandomAccessFile $r2;
        java.io.IOException $r3;
        java.lang.RuntimeException $r4;
        ucar.nc2.iosp.misc.Nldn$SeqIter r0;

        r0 := @this: ucar.nc2.iosp.misc.Nldn$SeqIter;

        r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: int done> = 0;

        r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: int alreadyRead> = 0;

        r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: long bytesRead> = 0L;

        r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: int nextIndex> = 0;

     label1:
        $r1 = r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: ucar.nc2.iosp.misc.Nldn this$0>;

        $r2 = staticinvoke <ucar.nc2.iosp.misc.Nldn: ucar.unidata.io.RandomAccessFile access$200(ucar.nc2.iosp.misc.Nldn)>($r1);

        virtualinvoke $r2.<ucar.unidata.io.RandomAccessFile: void seek(long)>(0L);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

     label4:
        return r0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public boolean hasNext() throws java.io.IOException
    {
        int $i0, $i1;
        ucar.nc2.iosp.misc.Nldn$SeqIter r0;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.misc.Nldn$SeqIter;

        $i1 = r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: int done>;

        $i0 = r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: int alreadyRead>;

        if $i1 >= $i0 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: boolean readHeader()>();

        return $z0;
    }

    public ucar.ma2.StructureData next() throws java.io.IOException
    {
        ucar.ma2.StructureData $r2;
        ucar.ma2.ArrayStructureBB $r1;
        int $i0, $i1, $i2, $i3;
        ucar.nc2.iosp.misc.Nldn$SeqIter r0;

        r0 := @this: ucar.nc2.iosp.misc.Nldn$SeqIter;

        $i0 = r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: int done>;

        $i1 = $i0 + 1;

        r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: int done> = $i1;

        $r1 = r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: ucar.ma2.ArrayStructureBB asbb>;

        $i2 = r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: int nextIndex>;

        $i3 = $i2 + 1;

        r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: int nextIndex> = $i3;

        $r2 = virtualinvoke $r1.<ucar.ma2.ArrayStructureBB: ucar.ma2.StructureData getStructureData(int)>($i2);

        return $r2;
    }

    private boolean readHeader() throws java.io.IOException
    {
        byte[] r1, r5;
        ucar.unidata.io.RandomAccessFile $r3, $r7;
        java.nio.ByteBuffer $r4, $r8;
        byte $b3, $b12;
        ucar.ma2.ArrayStructureBB $r14;
        int[] $r12;
        boolean $z0;
        ucar.ma2.StructureMembers $r11;
        long $l0, $l1, $l2, $l4, $l5, $l8, $l9, $l10, $l11, $l15, $l16, $l17;
        ucar.nc2.iosp.misc.Nldn $r2, $r6, $r10, $r13;
        int $i6, $i7, $i13, $i14, $i18, $i19, $i20, $i21, $i22;
        ucar.nc2.iosp.misc.Nldn$SeqIter r0;

        r0 := @this: ucar.nc2.iosp.misc.Nldn$SeqIter;

        $l0 = r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: long bytesRead>;

        $l2 = $l0 + 84L;

        $l1 = r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: long totalBytes>;

        $b3 = $l2 cmp $l1;

        $i21 = (int) $b3;

        if $i21 <= 0 goto label1;

        $r13 = r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: ucar.nc2.iosp.misc.Nldn this$0>;

        $i20 = r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: int done>;

        staticinvoke <ucar.nc2.iosp.misc.Nldn: int access$302(ucar.nc2.iosp.misc.Nldn,int)>($r13, $i20);

        return 0;

     label1:
        r1 = newarray (byte)[84];

        $r2 = r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: ucar.nc2.iosp.misc.Nldn this$0>;

        $r3 = staticinvoke <ucar.nc2.iosp.misc.Nldn: ucar.unidata.io.RandomAccessFile access$400(ucar.nc2.iosp.misc.Nldn)>($r2);

        virtualinvoke $r3.<ucar.unidata.io.RandomAccessFile: void readFully(byte[])>(r1);

        $l4 = r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: long bytesRead>;

        $l5 = $l4 + 84L;

        r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: long bytesRead> = $l5;

        $r4 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r1);

        $i6 = virtualinvoke $r4.<java.nio.ByteBuffer: int getInt(int)>(8);

        if $i6 != 0 goto label2;

        $z0 = specialinvoke r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: boolean readHeader()>();

        return $z0;

     label2:
        $l9 = r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: long bytesRead>;

        $i7 = $i6 * 28;

        $l8 = (long) $i7;

        $l11 = $l9 + $l8;

        $l10 = r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: long totalBytes>;

        $b12 = $l11 cmp $l10;

        $i22 = (int) $b12;

        if $i22 <= 0 goto label3;

        return 0;

     label3:
        $i13 = $i6 * 28;

        r5 = newarray (byte)[$i13];

        $r6 = r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: ucar.nc2.iosp.misc.Nldn this$0>;

        $r7 = staticinvoke <ucar.nc2.iosp.misc.Nldn: ucar.unidata.io.RandomAccessFile access$500(ucar.nc2.iosp.misc.Nldn)>($r6);

        virtualinvoke $r7.<ucar.unidata.io.RandomAccessFile: int read(byte[])>(r5);

        $l16 = r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: long bytesRead>;

        $i14 = $i6 * 28;

        $l15 = (long) $i14;

        $l17 = $l16 + $l15;

        r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: long bytesRead> = $l17;

        $i18 = r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: int alreadyRead>;

        $i19 = $i18 + $i6;

        r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: int alreadyRead> = $i19;

        r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: int nextIndex> = 0;

        $r8 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r5);

        $r14 = new ucar.ma2.ArrayStructureBB;

        $r10 = r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: ucar.nc2.iosp.misc.Nldn this$0>;

        $r11 = staticinvoke <ucar.nc2.iosp.misc.Nldn: ucar.ma2.StructureMembers access$600(ucar.nc2.iosp.misc.Nldn)>($r10);

        $r12 = newarray (int)[1];

        $r12[0] = $i6;

        specialinvoke $r14.<ucar.ma2.ArrayStructureBB: void <init>(ucar.ma2.StructureMembers,int[],java.nio.ByteBuffer,int)>($r11, $r12, $r8, 0);

        r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: ucar.ma2.ArrayStructureBB asbb> = $r14;

        return 1;
    }

    public void setBufferSize(int)
    {
        int i0;
        ucar.nc2.iosp.misc.Nldn$SeqIter r0;

        r0 := @this: ucar.nc2.iosp.misc.Nldn$SeqIter;

        i0 := @parameter0: int;

        return;
    }

    public int getCurrentRecno()
    {
        int $i0, $i1;
        ucar.nc2.iosp.misc.Nldn$SeqIter r0;

        r0 := @this: ucar.nc2.iosp.misc.Nldn$SeqIter;

        $i0 = r0.<ucar.nc2.iosp.misc.Nldn$SeqIter: int done>;

        $i1 = $i0 - 1;

        return $i1;
    }
}
