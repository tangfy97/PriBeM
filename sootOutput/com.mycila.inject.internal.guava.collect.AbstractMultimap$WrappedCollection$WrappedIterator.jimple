class com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator extends java.lang.Object implements java.util.Iterator
{
    final java.util.Iterator delegateIterator;
    final java.util.Collection originalDelegate;
    final com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection this$1;

    void <init>(com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection)
    {
        com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator r0;
        com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection r1, $r2;
        java.util.Iterator $r6;
        java.util.Collection $r3, $r4;
        com.mycila.inject.internal.guava.collect.AbstractMultimap $r5;

        r0 := @this: com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection;

        r0.<com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator: com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r0.<com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator: com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection this$1>;

        $r3 = $r2.<com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection: java.util.Collection delegate>;

        r0.<com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator: java.util.Collection originalDelegate> = $r3;

        $r5 = r1.<com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection: com.mycila.inject.internal.guava.collect.AbstractMultimap this$0>;

        $r4 = r1.<com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection: java.util.Collection delegate>;

        $r6 = staticinvoke <com.mycila.inject.internal.guava.collect.AbstractMultimap: java.util.Iterator access$100(com.mycila.inject.internal.guava.collect.AbstractMultimap,java.util.Collection)>($r5, $r4);

        r0.<com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator: java.util.Iterator delegateIterator> = $r6;

        return;
    }

    void <init>(com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection, java.util.Iterator)
    {
        com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator r0;
        com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection r1, $r2;
        java.util.Iterator r4;
        java.util.Collection $r3;

        r0 := @this: com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection;

        r4 := @parameter1: java.util.Iterator;

        r0.<com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator: com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r0.<com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator: com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection this$1>;

        $r3 = $r2.<com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection: java.util.Collection delegate>;

        r0.<com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator: java.util.Collection originalDelegate> = $r3;

        r0.<com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator: java.util.Iterator delegateIterator> = r4;

        return;
    }

    void validateIterator()
    {
        com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator r0;
        com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection $r1, $r2;
        java.util.Collection $r3, $r4;
        java.util.ConcurrentModificationException $r5;

        r0 := @this: com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator: com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection this$1>;

        virtualinvoke $r1.<com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection: void refreshIfEmpty()>();

        $r2 = r0.<com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator: com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection this$1>;

        $r4 = $r2.<com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection: java.util.Collection delegate>;

        $r3 = r0.<com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator: java.util.Collection originalDelegate>;

        if $r4 == $r3 goto label1;

        $r5 = new java.util.ConcurrentModificationException;

        specialinvoke $r5.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r5;

     label1:
        return;
    }

    public boolean hasNext()
    {
        com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator r0;
        java.util.Iterator $r1;
        boolean $z0;

        r0 := @this: com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator;

        virtualinvoke r0.<com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator: void validateIterator()>();

        $r1 = r0.<com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator: java.util.Iterator delegateIterator>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public java.lang.Object next()
    {
        com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator r0;
        java.lang.Object $r2;
        java.util.Iterator $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator;

        virtualinvoke r0.<com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator: void validateIterator()>();

        $r1 = r0.<com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator: java.util.Iterator delegateIterator>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        return $r2;
    }

    public void remove()
    {
        com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator r0;
        com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection $r2, $r4;
        java.util.Iterator $r1;
        com.mycila.inject.internal.guava.collect.AbstractMultimap $r3;

        r0 := @this: com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator: java.util.Iterator delegateIterator>;

        interfaceinvoke $r1.<java.util.Iterator: void remove()>();

        $r2 = r0.<com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator: com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection this$1>;

        $r3 = $r2.<com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection: com.mycila.inject.internal.guava.collect.AbstractMultimap this$0>;

        staticinvoke <com.mycila.inject.internal.guava.collect.AbstractMultimap: int access$210(com.mycila.inject.internal.guava.collect.AbstractMultimap)>($r3);

        $r4 = r0.<com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator: com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection this$1>;

        virtualinvoke $r4.<com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection: void removeIfEmpty()>();

        return;
    }

    java.util.Iterator getDelegateIterator()
    {
        com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator r0;
        java.util.Iterator $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator;

        virtualinvoke r0.<com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator: void validateIterator()>();

        $r1 = r0.<com.mycila.inject.internal.guava.collect.AbstractMultimap$WrappedCollection$WrappedIterator: java.util.Iterator delegateIterator>;

        return $r1;
    }
}
