public class com.mycila.inject.internal.asm.commons.TryCatchBlockSorter extends com.mycila.inject.internal.asm.tree.MethodNode
{
    private final com.mycila.inject.internal.asm.MethodVisitor mv;

    public void <init>(com.mycila.inject.internal.asm.MethodVisitor, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        com.mycila.inject.internal.asm.commons.TryCatchBlockSorter r0;
        com.mycila.inject.internal.asm.MethodVisitor r5;
        int i0;
        java.lang.String[] r4;
        java.lang.String r1, r2, r3;

        r0 := @this: com.mycila.inject.internal.asm.commons.TryCatchBlockSorter;

        r5 := @parameter0: com.mycila.inject.internal.asm.MethodVisitor;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: java.lang.String[];

        specialinvoke r0.<com.mycila.inject.internal.asm.tree.MethodNode: void <init>(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(i0, r1, r2, r3, r4);

        r0.<com.mycila.inject.internal.asm.commons.TryCatchBlockSorter: com.mycila.inject.internal.asm.MethodVisitor mv> = r5;

        return;
    }

    public void visitEnd()
    {
        com.mycila.inject.internal.asm.commons.TryCatchBlockSorter r1;
        java.util.List $r2;
        com.mycila.inject.internal.asm.MethodVisitor $r3, $r4;
        com.mycila.inject.internal.asm.commons.TryCatchBlockSorter$1 $r0;

        r1 := @this: com.mycila.inject.internal.asm.commons.TryCatchBlockSorter;

        $r0 = new com.mycila.inject.internal.asm.commons.TryCatchBlockSorter$1;

        specialinvoke $r0.<com.mycila.inject.internal.asm.commons.TryCatchBlockSorter$1: void <init>(com.mycila.inject.internal.asm.commons.TryCatchBlockSorter)>(r1);

        $r2 = r1.<com.mycila.inject.internal.asm.commons.TryCatchBlockSorter: java.util.List tryCatchBlocks>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r2, $r0);

        $r3 = r1.<com.mycila.inject.internal.asm.commons.TryCatchBlockSorter: com.mycila.inject.internal.asm.MethodVisitor mv>;

        if $r3 == null goto label1;

        $r4 = r1.<com.mycila.inject.internal.asm.commons.TryCatchBlockSorter: com.mycila.inject.internal.asm.MethodVisitor mv>;

        virtualinvoke r1.<com.mycila.inject.internal.asm.commons.TryCatchBlockSorter: void accept(com.mycila.inject.internal.asm.MethodVisitor)>($r4);

     label1:
        return;
    }
}
