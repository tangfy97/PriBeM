public class com.jidesoft.utils.TypeUtils extends java.lang.Object
{
    private static final int WRAPPER_TYPE_INDEX;
    private static final int PRIMITIVE_TYPE_INDEX;
    private static final int PRIMITIVE_TYPE_KEY_INDEX;
    private static final java.lang.Object[][] PRIMITIVE_ARRAY_TYPES;

    public void <init>()
    {
        com.jidesoft.utils.TypeUtils r0;

        r0 := @this: com.jidesoft.utils.TypeUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isPrimitive(java.lang.Class)
    {
        java.lang.Object[][] r0;
        java.lang.Object[] r1;
        int i0, i1;
        java.lang.Class r2;
        java.lang.Object $r3;

        r2 := @parameter0: java.lang.Class;

        r0 = <com.jidesoft.utils.TypeUtils: java.lang.Object[][] PRIMITIVE_ARRAY_TYPES>;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r1 = r0[i1];

        $r3 = r1[1];

        if $r3 != r2 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static boolean isPrimitiveWrapper(java.lang.Class)
    {
        java.lang.Object[][] r0;
        java.lang.Object[] r1;
        int i0, i1;
        java.lang.Class r2;
        java.lang.Object $r3;

        r2 := @parameter0: java.lang.Class;

        r0 = <com.jidesoft.utils.TypeUtils: java.lang.Object[][] PRIMITIVE_ARRAY_TYPES>;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r1 = r0[i1];

        $r3 = r1[0];

        if $r3 != r2 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static java.lang.Class convertPrimitiveToWrapperType(java.lang.Class)
    {
        java.lang.Object[] r2;
        java.lang.Object[][] r0;
        int i0, i1;
        java.lang.Class r1, $r5;
        java.lang.Object $r3, $r4;

        r1 := @parameter0: java.lang.Class;

        r0 = <com.jidesoft.utils.TypeUtils: java.lang.Object[][] PRIMITIVE_ARRAY_TYPES>;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = r0[i1];

        $r3 = r2[1];

        if $r3 != r1 goto label2;

        $r4 = r2[0];

        $r5 = (java.lang.Class) $r4;

        return $r5;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return r1;
    }

    public static java.lang.Class convertWrapperToPrimitiveType(java.lang.Class)
    {
        java.lang.Object[] r2;
        java.lang.Object[][] r0;
        int i0, i1;
        java.lang.Class r1, $r5;
        java.lang.Object $r3, $r4;

        r1 := @parameter0: java.lang.Class;

        r0 = <com.jidesoft.utils.TypeUtils: java.lang.Object[][] PRIMITIVE_ARRAY_TYPES>;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = r0[i1];

        $r3 = r2[0];

        if $r3 != r1 goto label2;

        $r4 = r2[1];

        $r5 = (java.lang.Class) $r4;

        return $r5;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return r1;
    }

    public static boolean isNumericType(java.lang.Class)
    {
        java.lang.Class r0, $r1, $r2, $r3, $r4, $r5, $r6;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Class;

        if r0 == null goto label2;

        $r1 = class "Ljava/lang/Number;";

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 != 0 goto label1;

        $r2 = <java.lang.Double: java.lang.Class TYPE>;

        if r0 == $r2 goto label1;

        $r3 = <java.lang.Integer: java.lang.Class TYPE>;

        if r0 == $r3 goto label1;

        $r4 = <java.lang.Float: java.lang.Class TYPE>;

        if r0 == $r4 goto label1;

        $r5 = <java.lang.Short: java.lang.Class TYPE>;

        if r0 == $r5 goto label1;

        $r6 = <java.lang.Long: java.lang.Class TYPE>;

        if r0 != $r6 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public static boolean isTemporalType(java.lang.Class)
    {
        java.lang.Class r0, $r1, $r2, $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.Class;

        if r0 == null goto label2;

        $r1 = class "Ljava/util/Date;";

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 != 0 goto label1;

        $r2 = class "Ljava/util/Calendar;";

        $z1 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z1 != 0 goto label1;

        $r3 = <java.lang.Double: java.lang.Class TYPE>;

        if r0 == $r3 goto label1;

        $r4 = <java.lang.Long: java.lang.Class TYPE>;

        if r0 != $r4 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public static boolean isVisualType(java.lang.Class)
    {
        java.lang.Class r0, $r1, $r2, $r3;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.Class;

        if r0 == null goto label2;

        $r1 = class "Ljava/awt/Color;";

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 != 0 goto label1;

        $r2 = class "Ljavax/swing/Icon;";

        $z1 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z1 != 0 goto label1;

        $r3 = class "Ljava/awt/Image;";

        $z2 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z2 == 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    static void <clinit>()
    {
        java.lang.Object[] $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15;
        java.lang.Object[][] $r0;
        java.lang.Class $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16;

        <com.jidesoft.utils.TypeUtils: int PRIMITIVE_TYPE_KEY_INDEX> = 2;

        <com.jidesoft.utils.TypeUtils: int PRIMITIVE_TYPE_INDEX> = 1;

        <com.jidesoft.utils.TypeUtils: int WRAPPER_TYPE_INDEX> = 0;

        $r0 = newarray (java.lang.Object[])[8];

        $r1 = newarray (java.lang.Object)[3];

        $r1[0] = class "Ljava/lang/Boolean;";

        $r2 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r1[1] = $r2;

        $r1[2] = "Z";

        $r0[0] = $r1;

        $r3 = newarray (java.lang.Object)[3];

        $r3[0] = class "Ljava/lang/Character;";

        $r4 = <java.lang.Character: java.lang.Class TYPE>;

        $r3[1] = $r4;

        $r3[2] = "C";

        $r0[1] = $r3;

        $r5 = newarray (java.lang.Object)[3];

        $r5[0] = class "Ljava/lang/Byte;";

        $r6 = <java.lang.Byte: java.lang.Class TYPE>;

        $r5[1] = $r6;

        $r5[2] = "B";

        $r0[2] = $r5;

        $r7 = newarray (java.lang.Object)[3];

        $r7[0] = class "Ljava/lang/Short;";

        $r8 = <java.lang.Short: java.lang.Class TYPE>;

        $r7[1] = $r8;

        $r7[2] = "S";

        $r0[3] = $r7;

        $r9 = newarray (java.lang.Object)[3];

        $r9[0] = class "Ljava/lang/Integer;";

        $r10 = <java.lang.Integer: java.lang.Class TYPE>;

        $r9[1] = $r10;

        $r9[2] = "I";

        $r0[4] = $r9;

        $r11 = newarray (java.lang.Object)[3];

        $r11[0] = class "Ljava/lang/Long;";

        $r12 = <java.lang.Long: java.lang.Class TYPE>;

        $r11[1] = $r12;

        $r11[2] = "J";

        $r0[5] = $r11;

        $r13 = newarray (java.lang.Object)[3];

        $r13[0] = class "Ljava/lang/Float;";

        $r14 = <java.lang.Float: java.lang.Class TYPE>;

        $r13[1] = $r14;

        $r13[2] = "F";

        $r0[6] = $r13;

        $r15 = newarray (java.lang.Object)[3];

        $r15[0] = class "Ljava/lang/Double;";

        $r16 = <java.lang.Double: java.lang.Class TYPE>;

        $r15[1] = $r16;

        $r15[2] = "D";

        $r0[7] = $r15;

        <com.jidesoft.utils.TypeUtils: java.lang.Object[][] PRIMITIVE_ARRAY_TYPES> = $r0;

        return;
    }
}
