public abstract class org.codehaus.groovy.control.io.AbstractReaderSource extends java.lang.Object implements org.codehaus.groovy.control.io.ReaderSource
{
    protected org.codehaus.groovy.control.CompilerConfiguration configuration;
    private java.io.BufferedReader lineSource;
    private java.lang.String line;
    private int number;

    public void <init>(org.codehaus.groovy.control.CompilerConfiguration)
    {
        org.codehaus.groovy.control.io.AbstractReaderSource r0;
        org.codehaus.groovy.control.CompilerConfiguration r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.codehaus.groovy.control.io.AbstractReaderSource;

        r1 := @parameter0: org.codehaus.groovy.control.CompilerConfiguration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.groovy.control.io.AbstractReaderSource: java.io.BufferedReader lineSource> = null;

        r0.<org.codehaus.groovy.control.io.AbstractReaderSource: java.lang.String line> = null;

        r0.<org.codehaus.groovy.control.io.AbstractReaderSource: int number> = 0;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Compiler configuration must not be null!");

        throw $r2;

     label1:
        r0.<org.codehaus.groovy.control.io.AbstractReaderSource: org.codehaus.groovy.control.CompilerConfiguration configuration> = r1;

        return;
    }

    public boolean canReopenSource()
    {
        org.codehaus.groovy.control.io.AbstractReaderSource r0;

        r0 := @this: org.codehaus.groovy.control.io.AbstractReaderSource;

        return 1;
    }

    public java.lang.String getLine(int, org.codehaus.groovy.control.Janitor)
    {
        org.codehaus.groovy.control.Janitor r2;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String $r4, $r11;
        java.io.IOException $r7;
        org.codehaus.groovy.control.io.AbstractReaderSource r0;
        java.io.Reader $r6;
        java.lang.Exception $r8;
        java.io.BufferedReader $r1, $r3, $r5, $r9, $r10;

        r0 := @this: org.codehaus.groovy.control.io.AbstractReaderSource;

        i0 := @parameter0: int;

        r2 := @parameter1: org.codehaus.groovy.control.Janitor;

        $r1 = r0.<org.codehaus.groovy.control.io.AbstractReaderSource: java.io.BufferedReader lineSource>;

        if $r1 == null goto label01;

        $i3 = r0.<org.codehaus.groovy.control.io.AbstractReaderSource: int number>;

        if $i3 <= i0 goto label01;

        virtualinvoke r0.<org.codehaus.groovy.control.io.AbstractReaderSource: void cleanup()>();

     label01:
        $r9 = r0.<org.codehaus.groovy.control.io.AbstractReaderSource: java.io.BufferedReader lineSource>;

        if $r9 != null goto label06;

     label02:
        $r5 = new java.io.BufferedReader;

        $r6 = virtualinvoke r0.<org.codehaus.groovy.control.io.AbstractReaderSource: java.io.Reader getReader()>();

        specialinvoke $r5.<java.io.BufferedReader: void <init>(java.io.Reader)>($r6);

        r0.<org.codehaus.groovy.control.io.AbstractReaderSource: java.io.BufferedReader lineSource> = $r5;

     label03:
        goto label05;

     label04:
        $r8 := @caughtexception;

     label05:
        r0.<org.codehaus.groovy.control.io.AbstractReaderSource: int number> = 0;

     label06:
        $r10 = r0.<org.codehaus.groovy.control.io.AbstractReaderSource: java.io.BufferedReader lineSource>;

        if $r10 == null goto label13;

     label07:
        $i4 = r0.<org.codehaus.groovy.control.io.AbstractReaderSource: int number>;

        if $i4 >= i0 goto label11;

     label08:
        $r3 = r0.<org.codehaus.groovy.control.io.AbstractReaderSource: java.io.BufferedReader lineSource>;

        $r4 = virtualinvoke $r3.<java.io.BufferedReader: java.lang.String readLine()>();

        r0.<org.codehaus.groovy.control.io.AbstractReaderSource: java.lang.String line> = $r4;

        $i1 = r0.<org.codehaus.groovy.control.io.AbstractReaderSource: int number>;

        $i2 = $i1 + 1;

        r0.<org.codehaus.groovy.control.io.AbstractReaderSource: int number> = $i2;

     label09:
        goto label07;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r0.<org.codehaus.groovy.control.io.AbstractReaderSource: void cleanup()>();

        goto label07;

     label11:
        if r2 != null goto label12;

        virtualinvoke r0.<org.codehaus.groovy.control.io.AbstractReaderSource: void cleanup()>();

        goto label13;

     label12:
        virtualinvoke r2.<org.codehaus.groovy.control.Janitor: void register(org.codehaus.groovy.control.HasCleanup)>(r0);

     label13:
        $r11 = r0.<org.codehaus.groovy.control.io.AbstractReaderSource: java.lang.String line>;

        return $r11;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.io.IOException from label08 to label09 with label10;
    }

    public void cleanup()
    {
        org.codehaus.groovy.control.io.AbstractReaderSource r0;
        java.io.BufferedReader $r1, $r2;
        java.lang.Exception $r3;

        r0 := @this: org.codehaus.groovy.control.io.AbstractReaderSource;

        $r1 = r0.<org.codehaus.groovy.control.io.AbstractReaderSource: java.io.BufferedReader lineSource>;

        if $r1 == null goto label4;

     label1:
        $r2 = r0.<org.codehaus.groovy.control.io.AbstractReaderSource: java.io.BufferedReader lineSource>;

        virtualinvoke $r2.<java.io.BufferedReader: void close()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        r0.<org.codehaus.groovy.control.io.AbstractReaderSource: java.io.BufferedReader lineSource> = null;

        r0.<org.codehaus.groovy.control.io.AbstractReaderSource: java.lang.String line> = null;

        r0.<org.codehaus.groovy.control.io.AbstractReaderSource: int number> = 0;

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
