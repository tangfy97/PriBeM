class com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$ElementWithType extends com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$ElementDeclaration
{
    private final boolean nillable;
    private final com.sun.xml.bind.v2.model.core.NonElement type;
    final com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace this$1;

    public void <init>(com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace, boolean, com.sun.xml.bind.v2.model.core.NonElement)
    {
        com.sun.xml.bind.v2.model.core.NonElement r2;
        com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$ElementWithType r0;
        com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace r1;
        boolean z0;

        r0 := @this: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$ElementWithType;

        r1 := @parameter0: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace;

        z0 := @parameter1: boolean;

        r2 := @parameter2: com.sun.xml.bind.v2.model.core.NonElement;

        r0.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$ElementWithType: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace this$1> = r1;

        specialinvoke r0.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$ElementDeclaration: void <init>(com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace)>(r1);

        r0.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$ElementWithType: com.sun.xml.bind.v2.model.core.NonElement type> = r2;

        r0.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$ElementWithType: boolean nillable> = z0;

        return;
    }

    public void writeTo(java.lang.String, com.sun.xml.bind.v2.schemagen.xmlschema.Schema)
    {
        com.sun.xml.bind.v2.schemagen.xmlschema.TopLevelElement $r1, $r3;
        com.sun.xml.bind.v2.model.core.NonElement $r5, $r6;
        java.lang.String r2;
        com.sun.xml.bind.v2.schemagen.xmlschema.Schema r0;
        com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$ElementWithType r4;
        boolean $z0;
        com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace $r7;

        r4 := @this: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$ElementWithType;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: com.sun.xml.bind.v2.schemagen.xmlschema.Schema;

        $r1 = interfaceinvoke r0.<com.sun.xml.bind.v2.schemagen.xmlschema.Schema: com.sun.xml.bind.v2.schemagen.xmlschema.TopLevelElement element()>();

        $r3 = interfaceinvoke $r1.<com.sun.xml.bind.v2.schemagen.xmlschema.TopLevelElement: com.sun.xml.bind.v2.schemagen.xmlschema.TopLevelElement name(java.lang.String)>(r2);

        $z0 = r4.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$ElementWithType: boolean nillable>;

        if $z0 == 0 goto label1;

        interfaceinvoke $r3.<com.sun.xml.bind.v2.schemagen.xmlschema.TopLevelElement: com.sun.xml.bind.v2.schemagen.xmlschema.Element nillable(boolean)>(1);

     label1:
        $r5 = r4.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$ElementWithType: com.sun.xml.bind.v2.model.core.NonElement type>;

        if $r5 == null goto label2;

        $r7 = r4.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$ElementWithType: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace this$1>;

        $r6 = r4.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$ElementWithType: com.sun.xml.bind.v2.model.core.NonElement type>;

        staticinvoke <com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace: void access$2100(com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace,com.sun.xml.bind.v2.schemagen.xmlschema.TypeHost,com.sun.xml.bind.v2.model.core.NonElement,java.lang.String)>($r7, $r3, $r6, "type");

        goto label3;

     label2:
        interfaceinvoke $r3.<com.sun.xml.bind.v2.schemagen.xmlschema.TopLevelElement: com.sun.xml.bind.v2.schemagen.xmlschema.ComplexType complexType()>();

     label3:
        interfaceinvoke $r3.<com.sun.xml.bind.v2.schemagen.xmlschema.TopLevelElement: void commit()>();

        return;
    }

    public boolean equals(java.lang.Object)
    {
        com.sun.xml.bind.v2.model.core.NonElement $r5, $r6;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$ElementWithType r0, r4;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$ElementWithType;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

     label2:
        return 0;

     label3:
        r4 = (com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$ElementWithType) r1;

        $r6 = r0.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$ElementWithType: com.sun.xml.bind.v2.model.core.NonElement type>;

        $r5 = r4.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$ElementWithType: com.sun.xml.bind.v2.model.core.NonElement type>;

        $z0 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        return $z0;
    }

    public int hashCode()
    {
        com.sun.xml.bind.v2.model.core.NonElement $r1;
        int $i0;
        com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$ElementWithType r0;

        r0 := @this: com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$ElementWithType;

        $r1 = r0.<com.sun.xml.bind.v2.schemagen.XmlSchemaGenerator$Namespace$ElementWithType: com.sun.xml.bind.v2.model.core.NonElement type>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }
}
