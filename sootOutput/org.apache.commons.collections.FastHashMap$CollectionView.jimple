abstract class org.apache.commons.collections.FastHashMap$CollectionView extends java.lang.Object implements java.util.Collection
{
    private final org.apache.commons.collections.FastHashMap this$0;

    public void <init>(org.apache.commons.collections.FastHashMap)
    {
        org.apache.commons.collections.FastHashMap r1;
        org.apache.commons.collections.FastHashMap$CollectionView r0;

        r0 := @this: org.apache.commons.collections.FastHashMap$CollectionView;

        r1 := @parameter0: org.apache.commons.collections.FastHashMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0> = r1;

        return;
    }

    protected abstract java.util.Collection get(java.util.Map);

    protected abstract java.lang.Object iteratorNext(java.util.Map$Entry);

    public void clear()
    {
        java.lang.Throwable $r10, $r11;
        org.apache.commons.collections.FastHashMap$CollectionView r0;
        java.util.Collection $r6;
        java.util.HashMap $r3, $r5, $r8;
        org.apache.commons.collections.FastHashMap $r1, $r2, $r4, $r7, $r9;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.FastHashMap$CollectionView;

        $r1 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $z0 = $r1.<org.apache.commons.collections.FastHashMap: boolean fast>;

        if $z0 == 0 goto label06;

        $r7 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        entermonitor $r7;

     label01:
        $r9 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        $r9.<org.apache.commons.collections.FastHashMap: java.util.HashMap map> = $r8;

        exitmonitor $r7;

     label02:
        goto label05;

     label03:
        $r11 := @caughtexception;

        exitmonitor $r7;

     label04:
        throw $r11;

     label05:
        goto label11;

     label06:
        $r2 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r3 = $r2.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        entermonitor $r3;

     label07:
        $r4 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r5 = $r4.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        $r6 = virtualinvoke r0.<org.apache.commons.collections.FastHashMap$CollectionView: java.util.Collection get(java.util.Map)>($r5);

        interfaceinvoke $r6.<java.util.Collection: void clear()>();

        exitmonitor $r3;

     label08:
        goto label11;

     label09:
        $r10 := @caughtexception;

        exitmonitor $r3;

     label10:
        throw $r10;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public boolean remove(java.lang.Object)
    {
        java.lang.Throwable $r15, $r16;
        java.util.HashMap $r3, $r5, $r10, r12;
        org.apache.commons.collections.FastHashMap $r1, $r2, $r4, $r8, $r9, $r14;
        boolean $z0, $z1, $z2;
        org.apache.commons.collections.FastHashMap$CollectionView r0;
        java.util.Collection $r6, $r13;
        java.lang.Object r7, $r11;

        r0 := @this: org.apache.commons.collections.FastHashMap$CollectionView;

        r7 := @parameter0: java.lang.Object;

        $r1 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $z0 = $r1.<org.apache.commons.collections.FastHashMap: boolean fast>;

        if $z0 == 0 goto label5;

        $r8 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        entermonitor $r8;

     label1:
        $r9 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r10 = $r9.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object clone()>();

        r12 = (java.util.HashMap) $r11;

        $r13 = virtualinvoke r0.<org.apache.commons.collections.FastHashMap$CollectionView: java.util.Collection get(java.util.Map)>(r12);

        $z2 = interfaceinvoke $r13.<java.util.Collection: boolean remove(java.lang.Object)>(r7);

        $r14 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r14.<org.apache.commons.collections.FastHashMap: java.util.HashMap map> = r12;

        exitmonitor $r8;

     label2:
        return $z2;

     label3:
        $r16 := @caughtexception;

        exitmonitor $r8;

     label4:
        throw $r16;

     label5:
        $r2 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r3 = $r2.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        entermonitor $r3;

     label6:
        $r4 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r5 = $r4.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        $r6 = virtualinvoke r0.<org.apache.commons.collections.FastHashMap$CollectionView: java.util.Collection get(java.util.Map)>($r5);

        $z1 = interfaceinvoke $r6.<java.util.Collection: boolean remove(java.lang.Object)>(r7);

        exitmonitor $r3;

     label7:
        return $z1;

     label8:
        $r15 := @caughtexception;

        exitmonitor $r3;

     label9:
        throw $r15;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
        catch java.lang.Throwable from label6 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public boolean removeAll(java.util.Collection)
    {
        java.lang.Throwable $r15, $r16;
        java.util.HashMap $r3, $r5, $r10, r12;
        org.apache.commons.collections.FastHashMap $r1, $r2, $r4, $r8, $r9, $r14;
        boolean $z0, $z1, $z2;
        org.apache.commons.collections.FastHashMap$CollectionView r0;
        java.util.Collection $r6, r7, $r13;
        java.lang.Object $r11;

        r0 := @this: org.apache.commons.collections.FastHashMap$CollectionView;

        r7 := @parameter0: java.util.Collection;

        $r1 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $z0 = $r1.<org.apache.commons.collections.FastHashMap: boolean fast>;

        if $z0 == 0 goto label5;

        $r8 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        entermonitor $r8;

     label1:
        $r9 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r10 = $r9.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object clone()>();

        r12 = (java.util.HashMap) $r11;

        $r13 = virtualinvoke r0.<org.apache.commons.collections.FastHashMap$CollectionView: java.util.Collection get(java.util.Map)>(r12);

        $z2 = interfaceinvoke $r13.<java.util.Collection: boolean removeAll(java.util.Collection)>(r7);

        $r14 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r14.<org.apache.commons.collections.FastHashMap: java.util.HashMap map> = r12;

        exitmonitor $r8;

     label2:
        return $z2;

     label3:
        $r16 := @caughtexception;

        exitmonitor $r8;

     label4:
        throw $r16;

     label5:
        $r2 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r3 = $r2.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        entermonitor $r3;

     label6:
        $r4 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r5 = $r4.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        $r6 = virtualinvoke r0.<org.apache.commons.collections.FastHashMap$CollectionView: java.util.Collection get(java.util.Map)>($r5);

        $z1 = interfaceinvoke $r6.<java.util.Collection: boolean removeAll(java.util.Collection)>(r7);

        exitmonitor $r3;

     label7:
        return $z1;

     label8:
        $r15 := @caughtexception;

        exitmonitor $r3;

     label9:
        throw $r15;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
        catch java.lang.Throwable from label6 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public boolean retainAll(java.util.Collection)
    {
        java.lang.Throwable $r15, $r16;
        java.util.HashMap $r3, $r5, $r10, r12;
        org.apache.commons.collections.FastHashMap $r1, $r2, $r4, $r8, $r9, $r14;
        boolean $z0, $z1, $z2;
        org.apache.commons.collections.FastHashMap$CollectionView r0;
        java.util.Collection $r6, r7, $r13;
        java.lang.Object $r11;

        r0 := @this: org.apache.commons.collections.FastHashMap$CollectionView;

        r7 := @parameter0: java.util.Collection;

        $r1 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $z0 = $r1.<org.apache.commons.collections.FastHashMap: boolean fast>;

        if $z0 == 0 goto label5;

        $r8 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        entermonitor $r8;

     label1:
        $r9 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r10 = $r9.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object clone()>();

        r12 = (java.util.HashMap) $r11;

        $r13 = virtualinvoke r0.<org.apache.commons.collections.FastHashMap$CollectionView: java.util.Collection get(java.util.Map)>(r12);

        $z2 = interfaceinvoke $r13.<java.util.Collection: boolean retainAll(java.util.Collection)>(r7);

        $r14 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r14.<org.apache.commons.collections.FastHashMap: java.util.HashMap map> = r12;

        exitmonitor $r8;

     label2:
        return $z2;

     label3:
        $r16 := @caughtexception;

        exitmonitor $r8;

     label4:
        throw $r16;

     label5:
        $r2 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r3 = $r2.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        entermonitor $r3;

     label6:
        $r4 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r5 = $r4.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        $r6 = virtualinvoke r0.<org.apache.commons.collections.FastHashMap$CollectionView: java.util.Collection get(java.util.Map)>($r5);

        $z1 = interfaceinvoke $r6.<java.util.Collection: boolean retainAll(java.util.Collection)>(r7);

        exitmonitor $r3;

     label7:
        return $z1;

     label8:
        $r15 := @caughtexception;

        exitmonitor $r3;

     label9:
        throw $r15;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
        catch java.lang.Throwable from label6 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public int size()
    {
        java.lang.Throwable $r10;
        org.apache.commons.collections.FastHashMap$CollectionView r0;
        java.util.Collection $r6, $r9;
        java.util.HashMap $r3, $r5, $r8;
        org.apache.commons.collections.FastHashMap $r1, $r2, $r4, $r7;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.FastHashMap$CollectionView;

        $r1 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $z0 = $r1.<org.apache.commons.collections.FastHashMap: boolean fast>;

        if $z0 == 0 goto label1;

        $r7 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r8 = $r7.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        $r9 = virtualinvoke r0.<org.apache.commons.collections.FastHashMap$CollectionView: java.util.Collection get(java.util.Map)>($r8);

        $i1 = interfaceinvoke $r9.<java.util.Collection: int size()>();

        return $i1;

     label1:
        $r2 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r3 = $r2.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        entermonitor $r3;

     label2:
        $r4 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r5 = $r4.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        $r6 = virtualinvoke r0.<org.apache.commons.collections.FastHashMap$CollectionView: java.util.Collection get(java.util.Map)>($r5);

        $i0 = interfaceinvoke $r6.<java.util.Collection: int size()>();

        exitmonitor $r3;

     label3:
        return $i0;

     label4:
        $r10 := @caughtexception;

        exitmonitor $r3;

     label5:
        throw $r10;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean isEmpty()
    {
        java.lang.Throwable $r10;
        org.apache.commons.collections.FastHashMap$CollectionView r0;
        java.util.Collection $r6, $r9;
        java.util.HashMap $r3, $r5, $r8;
        org.apache.commons.collections.FastHashMap $r1, $r2, $r4, $r7;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.collections.FastHashMap$CollectionView;

        $r1 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $z0 = $r1.<org.apache.commons.collections.FastHashMap: boolean fast>;

        if $z0 == 0 goto label1;

        $r7 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r8 = $r7.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        $r9 = virtualinvoke r0.<org.apache.commons.collections.FastHashMap$CollectionView: java.util.Collection get(java.util.Map)>($r8);

        $z2 = interfaceinvoke $r9.<java.util.Collection: boolean isEmpty()>();

        return $z2;

     label1:
        $r2 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r3 = $r2.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        entermonitor $r3;

     label2:
        $r4 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r5 = $r4.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        $r6 = virtualinvoke r0.<org.apache.commons.collections.FastHashMap$CollectionView: java.util.Collection get(java.util.Map)>($r5);

        $z1 = interfaceinvoke $r6.<java.util.Collection: boolean isEmpty()>();

        exitmonitor $r3;

     label3:
        return $z1;

     label4:
        $r10 := @caughtexception;

        exitmonitor $r3;

     label5:
        throw $r10;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean contains(java.lang.Object)
    {
        java.lang.Throwable $r11;
        org.apache.commons.collections.FastHashMap$CollectionView r0;
        java.util.Collection $r6, $r10;
        java.util.HashMap $r3, $r5, $r9;
        org.apache.commons.collections.FastHashMap $r1, $r2, $r4, $r8;
        java.lang.Object r7;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.collections.FastHashMap$CollectionView;

        r7 := @parameter0: java.lang.Object;

        $r1 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $z0 = $r1.<org.apache.commons.collections.FastHashMap: boolean fast>;

        if $z0 == 0 goto label1;

        $r8 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r9 = $r8.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        $r10 = virtualinvoke r0.<org.apache.commons.collections.FastHashMap$CollectionView: java.util.Collection get(java.util.Map)>($r9);

        $z2 = interfaceinvoke $r10.<java.util.Collection: boolean contains(java.lang.Object)>(r7);

        return $z2;

     label1:
        $r2 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r3 = $r2.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        entermonitor $r3;

     label2:
        $r4 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r5 = $r4.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        $r6 = virtualinvoke r0.<org.apache.commons.collections.FastHashMap$CollectionView: java.util.Collection get(java.util.Map)>($r5);

        $z1 = interfaceinvoke $r6.<java.util.Collection: boolean contains(java.lang.Object)>(r7);

        exitmonitor $r3;

     label3:
        return $z1;

     label4:
        $r11 := @caughtexception;

        exitmonitor $r3;

     label5:
        throw $r11;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean containsAll(java.util.Collection)
    {
        java.lang.Throwable $r11;
        org.apache.commons.collections.FastHashMap$CollectionView r0;
        java.util.Collection $r6, r7, $r10;
        java.util.HashMap $r3, $r5, $r9;
        org.apache.commons.collections.FastHashMap $r1, $r2, $r4, $r8;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.collections.FastHashMap$CollectionView;

        r7 := @parameter0: java.util.Collection;

        $r1 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $z0 = $r1.<org.apache.commons.collections.FastHashMap: boolean fast>;

        if $z0 == 0 goto label1;

        $r8 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r9 = $r8.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        $r10 = virtualinvoke r0.<org.apache.commons.collections.FastHashMap$CollectionView: java.util.Collection get(java.util.Map)>($r9);

        $z2 = interfaceinvoke $r10.<java.util.Collection: boolean containsAll(java.util.Collection)>(r7);

        return $z2;

     label1:
        $r2 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r3 = $r2.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        entermonitor $r3;

     label2:
        $r4 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r5 = $r4.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        $r6 = virtualinvoke r0.<org.apache.commons.collections.FastHashMap$CollectionView: java.util.Collection get(java.util.Map)>($r5);

        $z1 = interfaceinvoke $r6.<java.util.Collection: boolean containsAll(java.util.Collection)>(r7);

        exitmonitor $r3;

     label3:
        return $z1;

     label4:
        $r11 := @caughtexception;

        exitmonitor $r3;

     label5:
        throw $r11;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        java.lang.Throwable $r13;
        java.lang.Object[] r7, $r8, $r12;
        org.apache.commons.collections.FastHashMap$CollectionView r0;
        java.util.Collection $r6, $r11;
        java.util.HashMap $r3, $r5, $r10;
        org.apache.commons.collections.FastHashMap $r1, $r2, $r4, $r9;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.FastHashMap$CollectionView;

        r7 := @parameter0: java.lang.Object[];

        $r1 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $z0 = $r1.<org.apache.commons.collections.FastHashMap: boolean fast>;

        if $z0 == 0 goto label1;

        $r9 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r10 = $r9.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        $r11 = virtualinvoke r0.<org.apache.commons.collections.FastHashMap$CollectionView: java.util.Collection get(java.util.Map)>($r10);

        $r12 = interfaceinvoke $r11.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>(r7);

        return $r12;

     label1:
        $r2 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r3 = $r2.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        entermonitor $r3;

     label2:
        $r4 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r5 = $r4.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        $r6 = virtualinvoke r0.<org.apache.commons.collections.FastHashMap$CollectionView: java.util.Collection get(java.util.Map)>($r5);

        $r8 = interfaceinvoke $r6.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>(r7);

        exitmonitor $r3;

     label3:
        return $r8;

     label4:
        $r13 := @caughtexception;

        exitmonitor $r3;

     label5:
        throw $r13;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public java.lang.Object[] toArray()
    {
        java.lang.Throwable $r12;
        java.lang.Object[] $r7, $r11;
        org.apache.commons.collections.FastHashMap$CollectionView r0;
        java.util.Collection $r6, $r10;
        java.util.HashMap $r3, $r5, $r9;
        org.apache.commons.collections.FastHashMap $r1, $r2, $r4, $r8;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.FastHashMap$CollectionView;

        $r1 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $z0 = $r1.<org.apache.commons.collections.FastHashMap: boolean fast>;

        if $z0 == 0 goto label1;

        $r8 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r9 = $r8.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        $r10 = virtualinvoke r0.<org.apache.commons.collections.FastHashMap$CollectionView: java.util.Collection get(java.util.Map)>($r9);

        $r11 = interfaceinvoke $r10.<java.util.Collection: java.lang.Object[] toArray()>();

        return $r11;

     label1:
        $r2 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r3 = $r2.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        entermonitor $r3;

     label2:
        $r4 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r5 = $r4.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        $r6 = virtualinvoke r0.<org.apache.commons.collections.FastHashMap$CollectionView: java.util.Collection get(java.util.Map)>($r5);

        $r7 = interfaceinvoke $r6.<java.util.Collection: java.lang.Object[] toArray()>();

        exitmonitor $r3;

     label3:
        return $r7;

     label4:
        $r12 := @caughtexception;

        exitmonitor $r3;

     label5:
        throw $r12;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Throwable $r11;
        org.apache.commons.collections.FastHashMap$CollectionView r1;
        java.util.Collection $r7, $r10;
        java.util.HashMap $r4, $r6, $r9;
        org.apache.commons.collections.FastHashMap $r2, $r3, $r5, $r8;
        java.lang.Object r0;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.commons.collections.FastHashMap$CollectionView;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $r2 = r1.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $z0 = $r2.<org.apache.commons.collections.FastHashMap: boolean fast>;

        if $z0 == 0 goto label2;

        $r8 = r1.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r9 = $r8.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        $r10 = virtualinvoke r1.<org.apache.commons.collections.FastHashMap$CollectionView: java.util.Collection get(java.util.Map)>($r9);

        $z2 = virtualinvoke $r10.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        return $z2;

     label2:
        $r3 = r1.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r4 = $r3.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        entermonitor $r4;

     label3:
        $r5 = r1.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r6 = $r5.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        $r7 = virtualinvoke r1.<org.apache.commons.collections.FastHashMap$CollectionView: java.util.Collection get(java.util.Map)>($r6);

        $z1 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        exitmonitor $r4;

     label4:
        return $z1;

     label5:
        $r11 := @caughtexception;

        exitmonitor $r4;

     label6:
        throw $r11;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int hashCode()
    {
        java.lang.Throwable $r10;
        org.apache.commons.collections.FastHashMap$CollectionView r0;
        java.util.Collection $r6, $r9;
        java.util.HashMap $r3, $r5, $r8;
        org.apache.commons.collections.FastHashMap $r1, $r2, $r4, $r7;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.FastHashMap$CollectionView;

        $r1 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $z0 = $r1.<org.apache.commons.collections.FastHashMap: boolean fast>;

        if $z0 == 0 goto label1;

        $r7 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r8 = $r7.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        $r9 = virtualinvoke r0.<org.apache.commons.collections.FastHashMap$CollectionView: java.util.Collection get(java.util.Map)>($r8);

        $i1 = virtualinvoke $r9.<java.lang.Object: int hashCode()>();

        return $i1;

     label1:
        $r2 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r3 = $r2.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        entermonitor $r3;

     label2:
        $r4 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        $r5 = $r4.<org.apache.commons.collections.FastHashMap: java.util.HashMap map>;

        $r6 = virtualinvoke r0.<org.apache.commons.collections.FastHashMap$CollectionView: java.util.Collection get(java.util.Map)>($r5);

        $i0 = virtualinvoke $r6.<java.lang.Object: int hashCode()>();

        exitmonitor $r3;

     label3:
        return $i0;

     label4:
        $r10 := @caughtexception;

        exitmonitor $r3;

     label5:
        throw $r10;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean add(java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.Object r2;
        org.apache.commons.collections.FastHashMap$CollectionView r1;

        r1 := @this: org.apache.commons.collections.FastHashMap$CollectionView;

        r2 := @parameter0: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean addAll(java.util.Collection)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.commons.collections.FastHashMap$CollectionView r1;
        java.util.Collection r2;

        r1 := @this: org.apache.commons.collections.FastHashMap$CollectionView;

        r2 := @parameter0: java.util.Collection;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.util.Iterator iterator()
    {
        org.apache.commons.collections.FastHashMap$CollectionView$CollectionViewIterator $r0;
        org.apache.commons.collections.FastHashMap$CollectionView r1;

        r1 := @this: org.apache.commons.collections.FastHashMap$CollectionView;

        $r0 = new org.apache.commons.collections.FastHashMap$CollectionView$CollectionViewIterator;

        specialinvoke $r0.<org.apache.commons.collections.FastHashMap$CollectionView$CollectionViewIterator: void <init>(org.apache.commons.collections.FastHashMap$CollectionView)>(r1);

        return $r0;
    }

    static org.apache.commons.collections.FastHashMap access$300(org.apache.commons.collections.FastHashMap$CollectionView)
    {
        org.apache.commons.collections.FastHashMap $r1;
        org.apache.commons.collections.FastHashMap$CollectionView r0;

        r0 := @parameter0: org.apache.commons.collections.FastHashMap$CollectionView;

        $r1 = r0.<org.apache.commons.collections.FastHashMap$CollectionView: org.apache.commons.collections.FastHashMap this$0>;

        return $r1;
    }
}
