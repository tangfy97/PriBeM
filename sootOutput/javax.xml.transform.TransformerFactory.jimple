public abstract class javax.xml.transform.TransformerFactory extends java.lang.Object
{

    protected void <init>()
    {
        javax.xml.transform.TransformerFactory r0;

        r0 := @this: javax.xml.transform.TransformerFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static javax.xml.transform.TransformerFactory newInstance() throws javax.xml.transform.TransformerFactoryConfigurationError
    {
        javax.xml.transform.FactoryFinder$ConfigurationError $r2;
        javax.xml.transform.TransformerFactoryConfigurationError $r3;
        java.lang.Object $r0;
        javax.xml.transform.TransformerFactory $r1;
        java.lang.String $r5;
        java.lang.Exception $r4;

     label1:
        $r0 = staticinvoke <javax.xml.transform.FactoryFinder: java.lang.Object find(java.lang.String,java.lang.String)>("javax.xml.transform.TransformerFactory", "org.apache.xalan.processor.TransformerFactoryImpl");

        $r1 = (javax.xml.transform.TransformerFactory) $r0;

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new javax.xml.transform.TransformerFactoryConfigurationError;

        $r4 = virtualinvoke $r2.<javax.xml.transform.FactoryFinder$ConfigurationError: java.lang.Exception getException()>();

        $r5 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<javax.xml.transform.TransformerFactoryConfigurationError: void <init>(java.lang.Exception,java.lang.String)>($r4, $r5);

        throw $r3;

        catch javax.xml.transform.FactoryFinder$ConfigurationError from label1 to label2 with label2;
    }

    public static javax.xml.transform.TransformerFactory newInstance(java.lang.String, java.lang.ClassLoader) throws javax.xml.transform.TransformerFactoryConfigurationError
    {
        java.lang.Exception $r6;
        javax.xml.transform.FactoryFinder$ConfigurationError $r4;
        javax.xml.transform.TransformerFactoryConfigurationError $r3, $r5;
        java.lang.Object $r1;
        java.lang.String r0, $r7;
        javax.xml.transform.TransformerFactory $r2;
        java.lang.ClassLoader r8;

        r0 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.ClassLoader;

        if r0 != null goto label1;

        $r3 = new javax.xml.transform.TransformerFactoryConfigurationError;

        specialinvoke $r3.<javax.xml.transform.TransformerFactoryConfigurationError: void <init>(java.lang.String)>("factoryClassName cannot be null.");

        throw $r3;

     label1:
        if r8 != null goto label2;

        r8 = staticinvoke <javax.xml.transform.SecuritySupport: java.lang.ClassLoader getContextClassLoader()>();

     label2:
        $r1 = staticinvoke <javax.xml.transform.FactoryFinder: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader,boolean)>(r0, r8, 0);

        $r2 = (javax.xml.transform.TransformerFactory) $r1;

        return $r2;

     label3:
        $r4 := @caughtexception;

        $r5 = new javax.xml.transform.TransformerFactoryConfigurationError;

        $r6 = virtualinvoke $r4.<javax.xml.transform.FactoryFinder$ConfigurationError: java.lang.Exception getException()>();

        $r7 = virtualinvoke $r4.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r5.<javax.xml.transform.TransformerFactoryConfigurationError: void <init>(java.lang.Exception,java.lang.String)>($r6, $r7);

        throw $r5;

        catch javax.xml.transform.FactoryFinder$ConfigurationError from label2 to label3 with label3;
    }

    public abstract javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source) throws javax.xml.transform.TransformerConfigurationException;

    public abstract javax.xml.transform.Transformer newTransformer() throws javax.xml.transform.TransformerConfigurationException;

    public abstract javax.xml.transform.Templates newTemplates(javax.xml.transform.Source) throws javax.xml.transform.TransformerConfigurationException;

    public abstract javax.xml.transform.Source getAssociatedStylesheet(javax.xml.transform.Source, java.lang.String, java.lang.String, java.lang.String) throws javax.xml.transform.TransformerConfigurationException;

    public abstract void setURIResolver(javax.xml.transform.URIResolver);

    public abstract javax.xml.transform.URIResolver getURIResolver();

    public abstract void setFeature(java.lang.String, boolean) throws javax.xml.transform.TransformerConfigurationException;

    public abstract boolean getFeature(java.lang.String);

    public abstract void setAttribute(java.lang.String, java.lang.Object);

    public abstract java.lang.Object getAttribute(java.lang.String);

    public abstract void setErrorListener(javax.xml.transform.ErrorListener);

    public abstract javax.xml.transform.ErrorListener getErrorListener();
}
