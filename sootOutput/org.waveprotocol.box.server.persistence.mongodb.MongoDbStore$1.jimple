class org.waveprotocol.box.server.persistence.mongodb.MongoDbStore$1 extends java.lang.Object implements org.waveprotocol.box.server.persistence.AttachmentStore$AttachmentData
{
    final com.mongodb.gridfs.GridFSDBFile val$attachment;
    final org.waveprotocol.box.server.persistence.mongodb.MongoDbStore this$0;

    void <init>(org.waveprotocol.box.server.persistence.mongodb.MongoDbStore, com.mongodb.gridfs.GridFSDBFile)
    {
        org.waveprotocol.box.server.persistence.mongodb.MongoDbStore$1 r0;
        org.waveprotocol.box.server.persistence.mongodb.MongoDbStore r1;
        com.mongodb.gridfs.GridFSDBFile r2;

        r0 := @this: org.waveprotocol.box.server.persistence.mongodb.MongoDbStore$1;

        r1 := @parameter0: org.waveprotocol.box.server.persistence.mongodb.MongoDbStore;

        r2 := @parameter1: com.mongodb.gridfs.GridFSDBFile;

        r0.<org.waveprotocol.box.server.persistence.mongodb.MongoDbStore$1: org.waveprotocol.box.server.persistence.mongodb.MongoDbStore this$0> = r1;

        r0.<org.waveprotocol.box.server.persistence.mongodb.MongoDbStore$1: com.mongodb.gridfs.GridFSDBFile val$attachment> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void writeDataTo(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r1;
        org.waveprotocol.box.server.persistence.mongodb.MongoDbStore$1 r0;
        com.mongodb.gridfs.GridFSDBFile $r2;

        r0 := @this: org.waveprotocol.box.server.persistence.mongodb.MongoDbStore$1;

        r1 := @parameter0: java.io.OutputStream;

        $r2 = r0.<org.waveprotocol.box.server.persistence.mongodb.MongoDbStore$1: com.mongodb.gridfs.GridFSDBFile val$attachment>;

        virtualinvoke $r2.<com.mongodb.gridfs.GridFSDBFile: long writeTo(java.io.OutputStream)>(r1);

        return;
    }

    public java.util.Date getLastModifiedDate()
    {
        org.waveprotocol.box.server.persistence.mongodb.MongoDbStore$1 r0;
        java.util.Date $r2;
        com.mongodb.gridfs.GridFSDBFile $r1;

        r0 := @this: org.waveprotocol.box.server.persistence.mongodb.MongoDbStore$1;

        $r1 = r0.<org.waveprotocol.box.server.persistence.mongodb.MongoDbStore$1: com.mongodb.gridfs.GridFSDBFile val$attachment>;

        $r2 = virtualinvoke $r1.<com.mongodb.gridfs.GridFSDBFile: java.util.Date getUploadDate()>();

        return $r2;
    }

    public long getContentSize()
    {
        org.waveprotocol.box.server.persistence.mongodb.MongoDbStore$1 r0;
        long $l0;
        com.mongodb.gridfs.GridFSDBFile $r1;

        r0 := @this: org.waveprotocol.box.server.persistence.mongodb.MongoDbStore$1;

        $r1 = r0.<org.waveprotocol.box.server.persistence.mongodb.MongoDbStore$1: com.mongodb.gridfs.GridFSDBFile val$attachment>;

        $l0 = virtualinvoke $r1.<com.mongodb.gridfs.GridFSDBFile: long getLength()>();

        return $l0;
    }

    public java.io.InputStream getInputStream()
    {
        org.waveprotocol.box.server.persistence.mongodb.MongoDbStore$1 r0;
        com.mongodb.gridfs.GridFSDBFile $r1;
        java.io.InputStream $r2;

        r0 := @this: org.waveprotocol.box.server.persistence.mongodb.MongoDbStore$1;

        $r1 = r0.<org.waveprotocol.box.server.persistence.mongodb.MongoDbStore$1: com.mongodb.gridfs.GridFSDBFile val$attachment>;

        $r2 = virtualinvoke $r1.<com.mongodb.gridfs.GridFSDBFile: java.io.InputStream getInputStream()>();

        return $r2;
    }
}
