public final class org.waveprotocol.wave.model.operation.wave.SubmitBlip extends org.waveprotocol.wave.model.operation.wave.InvertibleBlipOperation
{
    private static final int HASH;

    public void <init>(org.waveprotocol.wave.model.operation.wave.WaveletOperationContext)
    {
        org.waveprotocol.wave.model.operation.wave.SubmitBlip r0;
        org.waveprotocol.wave.model.operation.wave.WaveletOperationContext r1;

        r0 := @this: org.waveprotocol.wave.model.operation.wave.SubmitBlip;

        r1 := @parameter0: org.waveprotocol.wave.model.operation.wave.WaveletOperationContext;

        specialinvoke r0.<org.waveprotocol.wave.model.operation.wave.InvertibleBlipOperation: void <init>(org.waveprotocol.wave.model.operation.wave.WaveletOperationContext)>(r1);

        return;
    }

    protected void doApply(org.waveprotocol.wave.model.wave.data.BlipData)
    {
        org.waveprotocol.wave.model.operation.wave.SubmitBlip r1;
        org.waveprotocol.wave.model.wave.data.BlipData r0;

        r1 := @this: org.waveprotocol.wave.model.operation.wave.SubmitBlip;

        r0 := @parameter0: org.waveprotocol.wave.model.wave.data.BlipData;

        interfaceinvoke r0.<org.waveprotocol.wave.model.wave.data.BlipData: void submit()>();

        return;
    }

    protected void doUpdate(org.waveprotocol.wave.model.wave.data.BlipData)
    {
        org.waveprotocol.wave.model.operation.wave.SubmitBlip r0;
        org.waveprotocol.wave.model.wave.data.BlipData r1;

        r0 := @this: org.waveprotocol.wave.model.operation.wave.SubmitBlip;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.data.BlipData;

        return;
    }

    public org.waveprotocol.wave.model.operation.wave.BlipOperation invert(org.waveprotocol.wave.model.operation.wave.WaveletOperationContext)
    {
        org.waveprotocol.wave.model.operation.wave.SubmitBlip $r0, r2;
        org.waveprotocol.wave.model.operation.wave.WaveletOperationContext r1;

        r2 := @this: org.waveprotocol.wave.model.operation.wave.SubmitBlip;

        r1 := @parameter0: org.waveprotocol.wave.model.operation.wave.WaveletOperationContext;

        $r0 = new org.waveprotocol.wave.model.operation.wave.SubmitBlip;

        specialinvoke $r0.<org.waveprotocol.wave.model.operation.wave.SubmitBlip: void <init>(org.waveprotocol.wave.model.operation.wave.WaveletOperationContext)>(r1);

        return $r0;
    }

    public void acceptVisitor(org.waveprotocol.wave.model.operation.wave.BlipOperationVisitor)
    {
        org.waveprotocol.wave.model.operation.wave.BlipOperationVisitor r0;
        org.waveprotocol.wave.model.operation.wave.SubmitBlip r1;

        r1 := @this: org.waveprotocol.wave.model.operation.wave.SubmitBlip;

        r0 := @parameter0: org.waveprotocol.wave.model.operation.wave.BlipOperationVisitor;

        interfaceinvoke r0.<org.waveprotocol.wave.model.operation.wave.BlipOperationVisitor: void visitSubmitBlip(org.waveprotocol.wave.model.operation.wave.SubmitBlip)>(r1);

        return;
    }

    public boolean updatesBlipMetadata(java.lang.String)
    {
        org.waveprotocol.wave.model.operation.wave.SubmitBlip r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.model.operation.wave.SubmitBlip;

        r1 := @parameter0: java.lang.String;

        return 0;
    }

    public java.lang.String toString()
    {
        org.waveprotocol.wave.model.operation.wave.SubmitBlip r0;

        r0 := @this: org.waveprotocol.wave.model.operation.wave.SubmitBlip;

        return "submit";
    }

    public int hashCode()
    {
        int $i0;
        org.waveprotocol.wave.model.operation.wave.SubmitBlip r0;

        r0 := @this: org.waveprotocol.wave.model.operation.wave.SubmitBlip;

        $i0 = <org.waveprotocol.wave.model.operation.wave.SubmitBlip: int HASH>;

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        org.waveprotocol.wave.model.operation.wave.SubmitBlip r1;
        boolean $z0;

        r1 := @this: org.waveprotocol.wave.model.operation.wave.SubmitBlip;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.waveprotocol.wave.model.operation.wave.SubmitBlip;

        return $z0;
    }

    public volatile void acceptVisitor(org.waveprotocol.wave.model.operation.Visitor)
    {
        org.waveprotocol.wave.model.operation.wave.SubmitBlip r0;
        org.waveprotocol.wave.model.operation.wave.BlipOperationVisitor $r2;
        org.waveprotocol.wave.model.operation.Visitor r1;

        r0 := @this: org.waveprotocol.wave.model.operation.wave.SubmitBlip;

        r1 := @parameter0: org.waveprotocol.wave.model.operation.Visitor;

        $r2 = (org.waveprotocol.wave.model.operation.wave.BlipOperationVisitor) r1;

        virtualinvoke r0.<org.waveprotocol.wave.model.operation.wave.SubmitBlip: void acceptVisitor(org.waveprotocol.wave.model.operation.wave.BlipOperationVisitor)>($r2);

        return;
    }

    static void <clinit>()
    {
        int $i0;
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Lorg/waveprotocol/wave/model/operation/wave/SubmitBlip;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        <org.waveprotocol.wave.model.operation.wave.SubmitBlip: int HASH> = $i0;

        return;
    }
}
