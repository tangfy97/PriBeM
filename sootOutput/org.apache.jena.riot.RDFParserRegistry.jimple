public class org.apache.jena.riot.RDFParserRegistry extends java.lang.Object
{
    private static java.util.Map mapJenaNameToLang;
    private static java.util.Map langToParserFactory;
    private static java.util.Set langTriples;
    private static java.util.Set langQuads;
    private static org.apache.jena.riot.ReaderRIOTFactory parserFactory;
    private static boolean initialized;

    public void <init>()
    {
        org.apache.jena.riot.RDFParserRegistry r0;

        r0 := @this: org.apache.jena.riot.RDFParserRegistry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void init()
    {
        boolean $z0;

        $z0 = <org.apache.jena.riot.RDFParserRegistry: boolean initialized>;

        if $z0 == 0 goto label1;

        return;

     label1:
        <org.apache.jena.riot.RDFParserRegistry: boolean initialized> = 1;

        staticinvoke <org.apache.jena.riot.RDFParserRegistry: void initStandard()>();

        return;
    }

    private static void initStandard()
    {
        org.apache.jena.riot.Lang $r1, $r3, $r5, $r7, $r9, $r11, $r13;
        org.apache.jena.riot.ReaderRIOTFactory $r0, $r2, $r4, $r6, $r8, $r10, $r12;

        staticinvoke <org.apache.jena.riot.RDFLanguages: void init()>();

        $r1 = <org.apache.jena.riot.RDFLanguages: org.apache.jena.riot.Lang RDFXML>;

        $r0 = <org.apache.jena.riot.RDFParserRegistry: org.apache.jena.riot.ReaderRIOTFactory parserFactory>;

        staticinvoke <org.apache.jena.riot.RDFParserRegistry: void registerLangTriples(org.apache.jena.riot.Lang,org.apache.jena.riot.ReaderRIOTFactory)>($r1, $r0);

        $r3 = <org.apache.jena.riot.RDFLanguages: org.apache.jena.riot.Lang NTRIPLES>;

        $r2 = <org.apache.jena.riot.RDFParserRegistry: org.apache.jena.riot.ReaderRIOTFactory parserFactory>;

        staticinvoke <org.apache.jena.riot.RDFParserRegistry: void registerLangTriples(org.apache.jena.riot.Lang,org.apache.jena.riot.ReaderRIOTFactory)>($r3, $r2);

        $r5 = <org.apache.jena.riot.RDFLanguages: org.apache.jena.riot.Lang N3>;

        $r4 = <org.apache.jena.riot.RDFParserRegistry: org.apache.jena.riot.ReaderRIOTFactory parserFactory>;

        staticinvoke <org.apache.jena.riot.RDFParserRegistry: void registerLangTriples(org.apache.jena.riot.Lang,org.apache.jena.riot.ReaderRIOTFactory)>($r5, $r4);

        $r7 = <org.apache.jena.riot.RDFLanguages: org.apache.jena.riot.Lang TURTLE>;

        $r6 = <org.apache.jena.riot.RDFParserRegistry: org.apache.jena.riot.ReaderRIOTFactory parserFactory>;

        staticinvoke <org.apache.jena.riot.RDFParserRegistry: void registerLangTriples(org.apache.jena.riot.Lang,org.apache.jena.riot.ReaderRIOTFactory)>($r7, $r6);

        $r9 = <org.apache.jena.riot.RDFLanguages: org.apache.jena.riot.Lang RDFJSON>;

        $r8 = <org.apache.jena.riot.RDFParserRegistry: org.apache.jena.riot.ReaderRIOTFactory parserFactory>;

        staticinvoke <org.apache.jena.riot.RDFParserRegistry: void registerLangTriples(org.apache.jena.riot.Lang,org.apache.jena.riot.ReaderRIOTFactory)>($r9, $r8);

        $r11 = <org.apache.jena.riot.RDFLanguages: org.apache.jena.riot.Lang NQUADS>;

        $r10 = <org.apache.jena.riot.RDFParserRegistry: org.apache.jena.riot.ReaderRIOTFactory parserFactory>;

        staticinvoke <org.apache.jena.riot.RDFParserRegistry: void registerLangQuads(org.apache.jena.riot.Lang,org.apache.jena.riot.ReaderRIOTFactory)>($r11, $r10);

        $r13 = <org.apache.jena.riot.RDFLanguages: org.apache.jena.riot.Lang TRIG>;

        $r12 = <org.apache.jena.riot.RDFParserRegistry: org.apache.jena.riot.ReaderRIOTFactory parserFactory>;

        staticinvoke <org.apache.jena.riot.RDFParserRegistry: void registerLangQuads(org.apache.jena.riot.Lang,org.apache.jena.riot.ReaderRIOTFactory)>($r13, $r12);

        return;
    }

    private static void registerLang(org.apache.jena.riot.Lang, org.apache.jena.riot.ReaderRIOTFactory)
    {
        org.apache.jena.riot.Lang r0;
        org.apache.jena.riot.ReaderRIOTFactory r1;
        java.util.Map $r2;

        r0 := @parameter0: org.apache.jena.riot.Lang;

        r1 := @parameter1: org.apache.jena.riot.ReaderRIOTFactory;

        staticinvoke <org.apache.jena.riot.RDFLanguages: void register(org.apache.jena.riot.Lang)>(r0);

        $r2 = <org.apache.jena.riot.RDFParserRegistry: java.util.Map langToParserFactory>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1);

        return;
    }

    public static void registerLangTriples(org.apache.jena.riot.Lang, org.apache.jena.riot.ReaderRIOTFactory)
    {
        java.util.Set $r1;
        org.apache.jena.riot.Lang r0;
        org.apache.jena.riot.ReaderRIOTFactory r2;

        r0 := @parameter0: org.apache.jena.riot.Lang;

        r2 := @parameter1: org.apache.jena.riot.ReaderRIOTFactory;

        $r1 = <org.apache.jena.riot.RDFParserRegistry: java.util.Set langTriples>;

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>(r0);

        staticinvoke <org.apache.jena.riot.RDFParserRegistry: void registerLang(org.apache.jena.riot.Lang,org.apache.jena.riot.ReaderRIOTFactory)>(r0, r2);

        return;
    }

    public static void registerLangQuads(org.apache.jena.riot.Lang, org.apache.jena.riot.ReaderRIOTFactory)
    {
        java.util.Set $r1;
        org.apache.jena.riot.Lang r0;
        org.apache.jena.riot.ReaderRIOTFactory r2;

        r0 := @parameter0: org.apache.jena.riot.Lang;

        r2 := @parameter1: org.apache.jena.riot.ReaderRIOTFactory;

        $r1 = <org.apache.jena.riot.RDFParserRegistry: java.util.Set langQuads>;

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>(r0);

        staticinvoke <org.apache.jena.riot.RDFParserRegistry: void registerLang(org.apache.jena.riot.Lang,org.apache.jena.riot.ReaderRIOTFactory)>(r0, r2);

        return;
    }

    public static void removeRegistration(org.apache.jena.riot.Lang)
    {
        org.apache.jena.riot.Lang r0;
        java.util.Map $r1;

        r0 := @parameter0: org.apache.jena.riot.Lang;

        staticinvoke <org.apache.jena.riot.RDFLanguages: void unregister(org.apache.jena.riot.Lang)>(r0);

        $r1 = <org.apache.jena.riot.RDFParserRegistry: java.util.Map langToParserFactory>;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r0);

        return;
    }

    public static org.apache.jena.riot.ReaderRIOTFactory getFactory(org.apache.jena.riot.Lang)
    {
        org.apache.jena.riot.Lang r0;
        java.util.Map $r1;
        org.apache.jena.riot.ReaderRIOTFactory $r3;
        java.lang.Object $r2;

        r0 := @parameter0: org.apache.jena.riot.Lang;

        $r1 = <org.apache.jena.riot.RDFParserRegistry: java.util.Map langToParserFactory>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r3 = (org.apache.jena.riot.ReaderRIOTFactory) $r2;

        return $r3;
    }

    public static boolean isTriples(org.apache.jena.riot.Lang)
    {
        java.util.Set $r1;
        org.apache.jena.riot.Lang r0;
        boolean $z0;

        r0 := @parameter0: org.apache.jena.riot.Lang;

        $r1 = <org.apache.jena.riot.RDFParserRegistry: java.util.Set langTriples>;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>(r0);

        return $z0;
    }

    public static boolean isQuads(org.apache.jena.riot.Lang)
    {
        java.util.Set $r1;
        org.apache.jena.riot.Lang r0;
        boolean $z0;

        r0 := @parameter0: org.apache.jena.riot.Lang;

        $r1 = <org.apache.jena.riot.RDFParserRegistry: java.util.Set langQuads>;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>(r0);

        return $z0;
    }

    static void <clinit>()
    {
        java.util.Map $r0, $r1;
        java.util.Set $r2, $r3;
        org.apache.jena.riot.RDFParserRegistry$ReaderRIOTFactoryImpl $r4;

        $r0 = staticinvoke <org.apache.jena.atlas.lib.DS: java.util.Map map()>();

        <org.apache.jena.riot.RDFParserRegistry: java.util.Map mapJenaNameToLang> = $r0;

        $r1 = staticinvoke <org.apache.jena.atlas.lib.DS: java.util.Map map()>();

        <org.apache.jena.riot.RDFParserRegistry: java.util.Map langToParserFactory> = $r1;

        $r2 = staticinvoke <org.apache.jena.atlas.lib.DS: java.util.Set set()>();

        <org.apache.jena.riot.RDFParserRegistry: java.util.Set langTriples> = $r2;

        $r3 = staticinvoke <org.apache.jena.atlas.lib.DS: java.util.Set set()>();

        <org.apache.jena.riot.RDFParserRegistry: java.util.Set langQuads> = $r3;

        $r4 = new org.apache.jena.riot.RDFParserRegistry$ReaderRIOTFactoryImpl;

        specialinvoke $r4.<org.apache.jena.riot.RDFParserRegistry$ReaderRIOTFactoryImpl: void <init>(org.apache.jena.riot.RDFParserRegistry$1)>(null);

        <org.apache.jena.riot.RDFParserRegistry: org.apache.jena.riot.ReaderRIOTFactory parserFactory> = $r4;

        <org.apache.jena.riot.RDFParserRegistry: boolean initialized> = 0;

        staticinvoke <org.apache.jena.riot.RDFParserRegistry: void init()>();

        return;
    }
}
