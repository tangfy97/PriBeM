public class org.bouncycastle.jce.ECNamedCurveTable extends java.lang.Object
{

    public void <init>()
    {
        org.bouncycastle.jce.ECNamedCurveTable r0;

        r0 := @this: org.bouncycastle.jce.ECNamedCurveTable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.bouncycastle.jce.spec.ECNamedCurveParameterSpec getParameterSpec(java.lang.String)
    {
        byte[] $r7;
        org.bouncycastle.math.ec.ECPoint $r4;
        java.math.BigInteger $r5, $r6;
        java.lang.String r0;
        org.bouncycastle.asn1.DERObjectIdentifier $r9, $r11, $r12;
        org.bouncycastle.math.ec.ECCurve $r3;
        org.bouncycastle.asn1.x9.X9ECParameters $r1, $r8, $r10, r16;
        org.bouncycastle.jce.spec.ECNamedCurveParameterSpec $r2;
        java.lang.IllegalArgumentException $r13, $r14, $r15;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.bouncycastle.asn1.x9.X962NamedCurves: org.bouncycastle.asn1.x9.X9ECParameters getByName(java.lang.String)>(r0);

        r16 = $r1;

        if $r1 != null goto label04;

     label01:
        $r12 = new org.bouncycastle.asn1.DERObjectIdentifier;

        specialinvoke $r12.<org.bouncycastle.asn1.DERObjectIdentifier: void <init>(java.lang.String)>(r0);

        r16 = staticinvoke <org.bouncycastle.asn1.x9.X962NamedCurves: org.bouncycastle.asn1.x9.X9ECParameters getByOID(org.bouncycastle.asn1.DERObjectIdentifier)>($r12);

     label02:
        goto label04;

     label03:
        $r15 := @caughtexception;

     label04:
        if r16 != null goto label08;

        $r10 = staticinvoke <org.bouncycastle.asn1.sec.SECNamedCurves: org.bouncycastle.asn1.x9.X9ECParameters getByName(java.lang.String)>(r0);

        r16 = $r10;

        if $r10 != null goto label08;

     label05:
        $r11 = new org.bouncycastle.asn1.DERObjectIdentifier;

        specialinvoke $r11.<org.bouncycastle.asn1.DERObjectIdentifier: void <init>(java.lang.String)>(r0);

        r16 = staticinvoke <org.bouncycastle.asn1.sec.SECNamedCurves: org.bouncycastle.asn1.x9.X9ECParameters getByOID(org.bouncycastle.asn1.DERObjectIdentifier)>($r11);

     label06:
        goto label08;

     label07:
        $r14 := @caughtexception;

     label08:
        if r16 != null goto label12;

        $r8 = staticinvoke <org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves: org.bouncycastle.asn1.x9.X9ECParameters getByName(java.lang.String)>(r0);

        r16 = $r8;

        if $r8 != null goto label12;

     label09:
        $r9 = new org.bouncycastle.asn1.DERObjectIdentifier;

        specialinvoke $r9.<org.bouncycastle.asn1.DERObjectIdentifier: void <init>(java.lang.String)>(r0);

        r16 = staticinvoke <org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves: org.bouncycastle.asn1.x9.X9ECParameters getByOID(org.bouncycastle.asn1.DERObjectIdentifier)>($r9);

     label10:
        goto label12;

     label11:
        $r13 := @caughtexception;

     label12:
        if r16 != null goto label13;

        r16 = staticinvoke <org.bouncycastle.asn1.nist.NISTNamedCurves: org.bouncycastle.asn1.x9.X9ECParameters getByName(java.lang.String)>(r0);

     label13:
        if r16 != null goto label14;

        return null;

     label14:
        $r2 = new org.bouncycastle.jce.spec.ECNamedCurveParameterSpec;

        $r3 = virtualinvoke r16.<org.bouncycastle.asn1.x9.X9ECParameters: org.bouncycastle.math.ec.ECCurve getCurve()>();

        $r4 = virtualinvoke r16.<org.bouncycastle.asn1.x9.X9ECParameters: org.bouncycastle.math.ec.ECPoint getG()>();

        $r5 = virtualinvoke r16.<org.bouncycastle.asn1.x9.X9ECParameters: java.math.BigInteger getN()>();

        $r6 = virtualinvoke r16.<org.bouncycastle.asn1.x9.X9ECParameters: java.math.BigInteger getH()>();

        $r7 = virtualinvoke r16.<org.bouncycastle.asn1.x9.X9ECParameters: byte[] getSeed()>();

        specialinvoke $r2.<org.bouncycastle.jce.spec.ECNamedCurveParameterSpec: void <init>(java.lang.String,org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[])>(r0, $r3, $r4, $r5, $r6, $r7);

        return $r2;

        catch java.lang.IllegalArgumentException from label01 to label02 with label03;
        catch java.lang.IllegalArgumentException from label05 to label06 with label07;
        catch java.lang.IllegalArgumentException from label09 to label10 with label11;
    }

    public static java.util.Enumeration getNames()
    {
        java.util.Vector $r0;
        java.util.Enumeration $r1, $r2, $r3, $r4, $r5;

        $r0 = new java.util.Vector;

        specialinvoke $r0.<java.util.Vector: void <init>()>();

        $r1 = staticinvoke <org.bouncycastle.asn1.x9.X962NamedCurves: java.util.Enumeration getNames()>();

        staticinvoke <org.bouncycastle.jce.ECNamedCurveTable: void addEnumeration(java.util.Vector,java.util.Enumeration)>($r0, $r1);

        $r2 = staticinvoke <org.bouncycastle.asn1.sec.SECNamedCurves: java.util.Enumeration getNames()>();

        staticinvoke <org.bouncycastle.jce.ECNamedCurveTable: void addEnumeration(java.util.Vector,java.util.Enumeration)>($r0, $r2);

        $r3 = staticinvoke <org.bouncycastle.asn1.nist.NISTNamedCurves: java.util.Enumeration getNames()>();

        staticinvoke <org.bouncycastle.jce.ECNamedCurveTable: void addEnumeration(java.util.Vector,java.util.Enumeration)>($r0, $r3);

        $r4 = staticinvoke <org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves: java.util.Enumeration getNames()>();

        staticinvoke <org.bouncycastle.jce.ECNamedCurveTable: void addEnumeration(java.util.Vector,java.util.Enumeration)>($r0, $r4);

        $r5 = virtualinvoke $r0.<java.util.Vector: java.util.Enumeration elements()>();

        return $r5;
    }

    private static void addEnumeration(java.util.Vector, java.util.Enumeration)
    {
        java.util.Vector r1;
        java.util.Enumeration r0;
        java.lang.Object $r2;
        boolean $z0;

        r1 := @parameter0: java.util.Vector;

        r0 := @parameter1: java.util.Enumeration;

     label1:
        $z0 = interfaceinvoke r0.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r0.<java.util.Enumeration: java.lang.Object nextElement()>();

        virtualinvoke r1.<java.util.Vector: void addElement(java.lang.Object)>($r2);

        goto label1;

     label2:
        return;
    }
}
