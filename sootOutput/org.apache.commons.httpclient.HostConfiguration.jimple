public class org.apache.commons.httpclient.HostConfiguration extends java.lang.Object implements java.lang.Cloneable
{
    public static final org.apache.commons.httpclient.HostConfiguration ANY_HOST_CONFIGURATION;
    private org.apache.commons.httpclient.HttpHost host;
    private org.apache.commons.httpclient.ProxyHost proxyHost;
    private java.net.InetAddress localAddress;
    private org.apache.commons.httpclient.params.HostParams params;

    public void <init>()
    {
        org.apache.commons.httpclient.params.HostParams $r1;
        org.apache.commons.httpclient.HostConfiguration r0;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host> = null;

        r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost> = null;

        r0.<org.apache.commons.httpclient.HostConfiguration: java.net.InetAddress localAddress> = null;

        $r1 = new org.apache.commons.httpclient.params.HostParams;

        specialinvoke $r1.<org.apache.commons.httpclient.params.HostParams: void <init>()>();

        r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.params.HostParams params> = $r1;

        return;
    }

    public void <init>(org.apache.commons.httpclient.HostConfiguration)
    {
        org.apache.commons.httpclient.params.HostParams $r1;
        org.apache.commons.httpclient.HostConfiguration r0, r2;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        r2 := @parameter0: org.apache.commons.httpclient.HostConfiguration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host> = null;

        r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost> = null;

        r0.<org.apache.commons.httpclient.HostConfiguration: java.net.InetAddress localAddress> = null;

        $r1 = new org.apache.commons.httpclient.params.HostParams;

        specialinvoke $r1.<org.apache.commons.httpclient.params.HostParams: void <init>()>();

        r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.params.HostParams params> = $r1;

        specialinvoke r0.<org.apache.commons.httpclient.HostConfiguration: void init(org.apache.commons.httpclient.HostConfiguration)>(r2);

        return;
    }

    private void init(org.apache.commons.httpclient.HostConfiguration)
    {
        org.apache.commons.httpclient.params.HostParams $r5, $r7;
        java.lang.Throwable $r14;
        org.apache.commons.httpclient.HttpHost $r1, $r11, $r13;
        java.lang.CloneNotSupportedException $r15;
        java.net.InetAddress $r4;
        org.apache.commons.httpclient.HostConfiguration r0, r2;
        java.lang.IllegalArgumentException $r16;
        java.lang.Object $r6, $r9, $r12;
        org.apache.commons.httpclient.ProxyHost $r3, $r8, $r10;

        r2 := @this: org.apache.commons.httpclient.HostConfiguration;

        r0 := @parameter0: org.apache.commons.httpclient.HostConfiguration;

        entermonitor r0;

     label01:
        $r1 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        if $r1 == null goto label02;

        $r11 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        $r12 = virtualinvoke $r11.<org.apache.commons.httpclient.HttpHost: java.lang.Object clone()>();

        $r13 = (org.apache.commons.httpclient.HttpHost) $r12;

        r2.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host> = $r13;

        goto label03;

     label02:
        r2.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host> = null;

     label03:
        $r3 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost>;

        if $r3 == null goto label04;

        $r8 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost>;

        $r9 = virtualinvoke $r8.<org.apache.commons.httpclient.ProxyHost: java.lang.Object clone()>();

        $r10 = (org.apache.commons.httpclient.ProxyHost) $r9;

        r2.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost> = $r10;

        goto label05;

     label04:
        r2.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost> = null;

     label05:
        $r4 = virtualinvoke r0.<org.apache.commons.httpclient.HostConfiguration: java.net.InetAddress getLocalAddress()>();

        r2.<org.apache.commons.httpclient.HostConfiguration: java.net.InetAddress localAddress> = $r4;

        $r5 = virtualinvoke r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.params.HostParams getParams()>();

        $r6 = virtualinvoke $r5.<org.apache.commons.httpclient.params.HostParams: java.lang.Object clone()>();

        $r7 = (org.apache.commons.httpclient.params.HostParams) $r6;

        r2.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.params.HostParams params> = $r7;

     label06:
        goto label08;

     label07:
        $r15 := @caughtexception;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Host configuration could not be cloned");

        throw $r16;

     label08:
        exitmonitor r0;

     label09:
        goto label12;

     label10:
        $r14 := @caughtexception;

        exitmonitor r0;

     label11:
        throw $r14;

     label12:
        return;

        catch java.lang.CloneNotSupportedException from label01 to label06 with label07;
        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public java.lang.Object clone()
    {
        org.apache.commons.httpclient.HostConfiguration r0, r2;
        java.lang.Object $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.CloneNotSupportedException $r3;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r2 = (org.apache.commons.httpclient.HostConfiguration) $r1;

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Host configuration could not be cloned");

        throw $r4;

     label4:
        specialinvoke r2.<org.apache.commons.httpclient.HostConfiguration: void init(org.apache.commons.httpclient.HostConfiguration)>(r0);

        return r2;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public synchronized java.lang.String toString()
    {
        org.apache.commons.httpclient.params.HostParams $r7;
        org.apache.commons.httpclient.HttpHost $r2, $r11;
        java.net.InetAddress $r5, $r12;
        org.apache.commons.httpclient.HostConfiguration r1;
        java.lang.StringBuffer $r0, $r4, $r6, $r8, $r10;
        java.lang.String $r13;
        boolean z0, z1, z2, z3;
        org.apache.commons.httpclient.ProxyHost $r3, $r9;

        r1 := @this: org.apache.commons.httpclient.HostConfiguration;

        z0 = 0;

        z3 = 0;

        z2 = 0;

        z1 = 0;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(50);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("HostConfiguration[");

        $r2 = r1.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        if $r2 == null goto label1;

        z0 = 1;

        z3 = 1;

        z2 = 1;

        z1 = 1;

        $r10 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("host=");

        $r11 = r1.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r11);

     label1:
        $r3 = r1.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost>;

        if $r3 == null goto label4;

        if z3 == 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        goto label3;

     label2:
        z0 = 1;

        z2 = 1;

        z1 = 1;

     label3:
        $r8 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("proxyHost=");

        $r9 = r1.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost>;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r9);

     label4:
        $r12 = r1.<org.apache.commons.httpclient.HostConfiguration: java.net.InetAddress localAddress>;

        if $r12 == null goto label8;

        if z2 == 0 goto label5;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        goto label6;

     label5:
        z0 = 1;

        z1 = 1;

     label6:
        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("localAddress=");

        $r5 = r1.<org.apache.commons.httpclient.HostConfiguration: java.net.InetAddress localAddress>;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r5);

        if z1 == 0 goto label7;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        goto label7;

     label7:
        $r6 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("params=");

        $r7 = r1.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.params.HostParams params>;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

     label8:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r13 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r13;
    }

    public synchronized boolean hostEquals(org.apache.commons.httpclient.HttpConnection)
    {
        org.apache.commons.httpclient.HttpHost $r2, $r3, $r6, $r7;
        org.apache.commons.httpclient.HttpConnection r0;
        java.net.InetAddress $r10, $r11, $r12, $r13;
        org.apache.commons.httpclient.HostConfiguration r1;
        int $i0, $i1;
        java.lang.String $r4, $r5;
        boolean $z0, $z1, $z2;
        java.lang.IllegalArgumentException $r14;
        org.apache.commons.httpclient.protocol.Protocol $r8, $r9;

        r1 := @this: org.apache.commons.httpclient.HostConfiguration;

        r0 := @parameter0: org.apache.commons.httpclient.HttpConnection;

        if r0 != null goto label1;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connection may not be null");

        throw $r14;

     label1:
        $r2 = r1.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        if $r2 == null goto label7;

        $r3 = r1.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        $r4 = virtualinvoke $r3.<org.apache.commons.httpclient.HttpHost: java.lang.String getHostName()>();

        $r5 = virtualinvoke r0.<org.apache.commons.httpclient.HttpConnection: java.lang.String getHost()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r5);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r6 = r1.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        $i0 = virtualinvoke $r6.<org.apache.commons.httpclient.HttpHost: int getPort()>();

        $i1 = virtualinvoke r0.<org.apache.commons.httpclient.HttpConnection: int getPort()>();

        if $i0 == $i1 goto label3;

        return 0;

     label3:
        $r7 = r1.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        $r8 = virtualinvoke $r7.<org.apache.commons.httpclient.HttpHost: org.apache.commons.httpclient.protocol.Protocol getProtocol()>();

        $r9 = virtualinvoke r0.<org.apache.commons.httpclient.HttpConnection: org.apache.commons.httpclient.protocol.Protocol getProtocol()>();

        $z1 = virtualinvoke $r8.<org.apache.commons.httpclient.protocol.Protocol: boolean equals(java.lang.Object)>($r9);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        $r10 = r1.<org.apache.commons.httpclient.HostConfiguration: java.net.InetAddress localAddress>;

        if $r10 == null goto label5;

        $r12 = r1.<org.apache.commons.httpclient.HostConfiguration: java.net.InetAddress localAddress>;

        $r13 = virtualinvoke r0.<org.apache.commons.httpclient.HttpConnection: java.net.InetAddress getLocalAddress()>();

        $z2 = virtualinvoke $r12.<java.net.InetAddress: boolean equals(java.lang.Object)>($r13);

        if $z2 != 0 goto label6;

        return 0;

     label5:
        $r11 = virtualinvoke r0.<org.apache.commons.httpclient.HttpConnection: java.net.InetAddress getLocalAddress()>();

        if $r11 == null goto label6;

        return 0;

     label6:
        return 1;

     label7:
        return 0;
    }

    public synchronized boolean proxyEquals(org.apache.commons.httpclient.HttpConnection)
    {
        org.apache.commons.httpclient.HttpConnection r0;
        java.lang.IllegalArgumentException $r8;
        org.apache.commons.httpclient.HostConfiguration r1;
        int $i0, $i1;
        java.lang.String $r3, $r5, $r6;
        org.apache.commons.httpclient.ProxyHost $r2, $r4, $r7;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.commons.httpclient.HostConfiguration;

        r0 := @parameter0: org.apache.commons.httpclient.HttpConnection;

        if r0 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connection may not be null");

        throw $r8;

     label1:
        $r2 = r1.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost>;

        if $r2 == null goto label4;

        $r4 = r1.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost>;

        $r5 = virtualinvoke $r4.<org.apache.commons.httpclient.ProxyHost: java.lang.String getHostName()>();

        $r6 = virtualinvoke r0.<org.apache.commons.httpclient.HttpConnection: java.lang.String getProxyHost()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r6);

        if $z0 == 0 goto label2;

        $r7 = r1.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost>;

        $i0 = virtualinvoke $r7.<org.apache.commons.httpclient.ProxyHost: int getPort()>();

        $i1 = virtualinvoke r0.<org.apache.commons.httpclient.HttpConnection: int getProxyPort()>();

        if $i0 != $i1 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;

     label4:
        $r3 = virtualinvoke r0.<org.apache.commons.httpclient.HttpConnection: java.lang.String getProxyHost()>();

        if $r3 != null goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        return $z2;
    }

    public synchronized boolean isHostSet()
    {
        org.apache.commons.httpclient.HttpHost $r1;
        org.apache.commons.httpclient.HostConfiguration r0;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        $r1 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public synchronized void setHost(org.apache.commons.httpclient.HttpHost)
    {
        org.apache.commons.httpclient.HttpHost r1;
        org.apache.commons.httpclient.HostConfiguration r0;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        r1 := @parameter0: org.apache.commons.httpclient.HttpHost;

        r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host> = r1;

        return;
    }

    public synchronized void setHost(java.lang.String, int, java.lang.String)
    {
        org.apache.commons.httpclient.HttpHost $r1;
        org.apache.commons.httpclient.HostConfiguration r0;
        int i0;
        org.apache.commons.httpclient.protocol.Protocol $r4;
        java.lang.String r2, r3;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r3 := @parameter2: java.lang.String;

        $r1 = new org.apache.commons.httpclient.HttpHost;

        $r4 = staticinvoke <org.apache.commons.httpclient.protocol.Protocol: org.apache.commons.httpclient.protocol.Protocol getProtocol(java.lang.String)>(r3);

        specialinvoke $r1.<org.apache.commons.httpclient.HttpHost: void <init>(java.lang.String,int,org.apache.commons.httpclient.protocol.Protocol)>(r2, i0, $r4);

        r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host> = $r1;

        return;
    }

    public synchronized void setHost(java.lang.String, java.lang.String, int, org.apache.commons.httpclient.protocol.Protocol)
    {
        org.apache.commons.httpclient.params.HostParams $r4;
        org.apache.commons.httpclient.HostConfiguration r0;
        int i0;
        org.apache.commons.httpclient.protocol.Protocol r2;
        java.lang.String r1, r3;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: org.apache.commons.httpclient.protocol.Protocol;

        virtualinvoke r0.<org.apache.commons.httpclient.HostConfiguration: void setHost(java.lang.String,int,org.apache.commons.httpclient.protocol.Protocol)>(r1, i0, r2);

        $r4 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.params.HostParams params>;

        virtualinvoke $r4.<org.apache.commons.httpclient.params.HostParams: void setVirtualHost(java.lang.String)>(r3);

        return;
    }

    public synchronized void setHost(java.lang.String, int, org.apache.commons.httpclient.protocol.Protocol)
    {
        org.apache.commons.httpclient.HttpHost $r3;
        org.apache.commons.httpclient.HostConfiguration r2;
        int i0;
        org.apache.commons.httpclient.protocol.Protocol r1;
        java.lang.String r0;
        java.lang.IllegalArgumentException $r4, $r5;

        r2 := @this: org.apache.commons.httpclient.HostConfiguration;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: org.apache.commons.httpclient.protocol.Protocol;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("host must not be null");

        throw $r5;

     label1:
        if r1 != null goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("protocol must not be null");

        throw $r4;

     label2:
        $r3 = new org.apache.commons.httpclient.HttpHost;

        specialinvoke $r3.<org.apache.commons.httpclient.HttpHost: void <init>(java.lang.String,int,org.apache.commons.httpclient.protocol.Protocol)>(r0, i0, r1);

        r2.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host> = $r3;

        return;
    }

    public synchronized void setHost(java.lang.String, int)
    {
        org.apache.commons.httpclient.HostConfiguration r0;
        int i0;
        org.apache.commons.httpclient.protocol.Protocol $r2;
        java.lang.String r1;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = staticinvoke <org.apache.commons.httpclient.protocol.Protocol: org.apache.commons.httpclient.protocol.Protocol getProtocol(java.lang.String)>("http");

        virtualinvoke r0.<org.apache.commons.httpclient.HostConfiguration: void setHost(java.lang.String,int,org.apache.commons.httpclient.protocol.Protocol)>(r1, i0, $r2);

        return;
    }

    public synchronized void setHost(java.lang.String)
    {
        org.apache.commons.httpclient.HostConfiguration r1;
        int $i0;
        org.apache.commons.httpclient.protocol.Protocol $r0;
        java.lang.String r2;

        r1 := @this: org.apache.commons.httpclient.HostConfiguration;

        r2 := @parameter0: java.lang.String;

        $r0 = staticinvoke <org.apache.commons.httpclient.protocol.Protocol: org.apache.commons.httpclient.protocol.Protocol getProtocol(java.lang.String)>("http");

        $i0 = virtualinvoke $r0.<org.apache.commons.httpclient.protocol.Protocol: int getDefaultPort()>();

        virtualinvoke r1.<org.apache.commons.httpclient.HostConfiguration: void setHost(java.lang.String,int,org.apache.commons.httpclient.protocol.Protocol)>(r2, $i0, $r0);

        return;
    }

    public synchronized void setHost(org.apache.commons.httpclient.URI)
    {
        org.apache.commons.httpclient.URIException $r4;
        java.lang.IllegalArgumentException $r5;
        org.apache.commons.httpclient.HostConfiguration r0;
        int $i0;
        java.lang.String $r2, $r3, $r6;
        org.apache.commons.httpclient.URI r1;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        r1 := @parameter0: org.apache.commons.httpclient.URI;

     label1:
        $r2 = virtualinvoke r1.<org.apache.commons.httpclient.URI: java.lang.String getHost()>();

        $i0 = virtualinvoke r1.<org.apache.commons.httpclient.URI: int getPort()>();

        $r3 = virtualinvoke r1.<org.apache.commons.httpclient.URI: java.lang.String getScheme()>();

        virtualinvoke r0.<org.apache.commons.httpclient.HostConfiguration: void setHost(java.lang.String,int,java.lang.String)>($r2, $i0, $r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r4.<org.apache.commons.httpclient.URIException: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label4:
        return;

        catch org.apache.commons.httpclient.URIException from label1 to label2 with label3;
    }

    public synchronized java.lang.String getHostURL()
    {
        org.apache.commons.httpclient.HttpHost $r1, $r2;
        java.lang.IllegalStateException $r4;
        org.apache.commons.httpclient.HostConfiguration r0;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        $r1 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Host must be set to create a host URL");

        throw $r4;

     label1:
        $r2 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        $r3 = virtualinvoke $r2.<org.apache.commons.httpclient.HttpHost: java.lang.String toURI()>();

        return $r3;
    }

    public synchronized java.lang.String getHost()
    {
        org.apache.commons.httpclient.HttpHost $r1, $r2;
        org.apache.commons.httpclient.HostConfiguration r0;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        $r1 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        $r3 = virtualinvoke $r2.<org.apache.commons.httpclient.HttpHost: java.lang.String getHostName()>();

        return $r3;

     label1:
        return null;
    }

    public synchronized java.lang.String getVirtualHost()
    {
        org.apache.commons.httpclient.params.HostParams $r1;
        org.apache.commons.httpclient.HostConfiguration r0;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        $r1 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.params.HostParams params>;

        $r2 = virtualinvoke $r1.<org.apache.commons.httpclient.params.HostParams: java.lang.String getVirtualHost()>();

        return $r2;
    }

    public synchronized int getPort()
    {
        org.apache.commons.httpclient.HttpHost $r1, $r2;
        org.apache.commons.httpclient.HostConfiguration r0;
        int $i0, $i2;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        $r1 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        $i0 = virtualinvoke $r2.<org.apache.commons.httpclient.HttpHost: int getPort()>();

        return $i0;

     label1:
        $i2 = (int) -1;

        return $i2;
    }

    public synchronized org.apache.commons.httpclient.protocol.Protocol getProtocol()
    {
        org.apache.commons.httpclient.HttpHost $r1, $r2;
        org.apache.commons.httpclient.HostConfiguration r0;
        org.apache.commons.httpclient.protocol.Protocol $r3;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        $r1 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        $r3 = virtualinvoke $r2.<org.apache.commons.httpclient.HttpHost: org.apache.commons.httpclient.protocol.Protocol getProtocol()>();

        return $r3;

     label1:
        return null;
    }

    public synchronized boolean isProxySet()
    {
        org.apache.commons.httpclient.HostConfiguration r0;
        org.apache.commons.httpclient.ProxyHost $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        $r1 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public synchronized void setProxyHost(org.apache.commons.httpclient.ProxyHost)
    {
        org.apache.commons.httpclient.HostConfiguration r0;
        org.apache.commons.httpclient.ProxyHost r1;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        r1 := @parameter0: org.apache.commons.httpclient.ProxyHost;

        r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost> = r1;

        return;
    }

    public synchronized void setProxy(java.lang.String, int)
    {
        org.apache.commons.httpclient.HostConfiguration r0;
        int i0;
        java.lang.String r2;
        org.apache.commons.httpclient.ProxyHost $r1;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = new org.apache.commons.httpclient.ProxyHost;

        specialinvoke $r1.<org.apache.commons.httpclient.ProxyHost: void <init>(java.lang.String,int)>(r2, i0);

        r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost> = $r1;

        return;
    }

    public synchronized java.lang.String getProxyHost()
    {
        org.apache.commons.httpclient.HostConfiguration r0;
        java.lang.String $r3;
        org.apache.commons.httpclient.ProxyHost $r1, $r2;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        $r1 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost>;

        $r3 = virtualinvoke $r2.<org.apache.commons.httpclient.ProxyHost: java.lang.String getHostName()>();

        return $r3;

     label1:
        return null;
    }

    public synchronized int getProxyPort()
    {
        org.apache.commons.httpclient.HostConfiguration r0;
        int $i0, $i2;
        org.apache.commons.httpclient.ProxyHost $r1, $r2;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        $r1 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost>;

        $i0 = virtualinvoke $r2.<org.apache.commons.httpclient.ProxyHost: int getPort()>();

        return $i0;

     label1:
        $i2 = (int) -1;

        return $i2;
    }

    public synchronized void setLocalAddress(java.net.InetAddress)
    {
        java.net.InetAddress r1;
        org.apache.commons.httpclient.HostConfiguration r0;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        r1 := @parameter0: java.net.InetAddress;

        r0.<org.apache.commons.httpclient.HostConfiguration: java.net.InetAddress localAddress> = r1;

        return;
    }

    public synchronized java.net.InetAddress getLocalAddress()
    {
        java.net.InetAddress $r1;
        org.apache.commons.httpclient.HostConfiguration r0;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        $r1 = r0.<org.apache.commons.httpclient.HostConfiguration: java.net.InetAddress localAddress>;

        return $r1;
    }

    public org.apache.commons.httpclient.params.HostParams getParams()
    {
        org.apache.commons.httpclient.params.HostParams $r1;
        org.apache.commons.httpclient.HostConfiguration r0;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        $r1 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.params.HostParams params>;

        return $r1;
    }

    public void setParams(org.apache.commons.httpclient.params.HostParams)
    {
        org.apache.commons.httpclient.params.HostParams r0;
        org.apache.commons.httpclient.HostConfiguration r1;
        java.lang.IllegalArgumentException $r2;

        r1 := @this: org.apache.commons.httpclient.HostConfiguration;

        r0 := @parameter0: org.apache.commons.httpclient.params.HostParams;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameters may not be null");

        throw $r2;

     label1:
        r1.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.params.HostParams params> = r0;

        return;
    }

    public synchronized boolean equals(java.lang.Object)
    {
        org.apache.commons.httpclient.HttpHost $r3, $r4;
        java.net.InetAddress $r7, $r8;
        org.apache.commons.httpclient.HostConfiguration r1, r2;
        java.lang.Object r0;
        org.apache.commons.httpclient.ProxyHost $r5, $r6;
        boolean $z0, $z1, $z2, $z3, $z4;

        r1 := @this: org.apache.commons.httpclient.HostConfiguration;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.commons.httpclient.HostConfiguration;

        if $z0 == 0 goto label4;

        if r0 != r1 goto label1;

        return 1;

     label1:
        r2 = (org.apache.commons.httpclient.HostConfiguration) r0;

        $r4 = r1.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        $r3 = r2.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        $z1 = staticinvoke <org.apache.commons.httpclient.util.LangUtils: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 == 0 goto label2;

        $r6 = r1.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost>;

        $r5 = r2.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost>;

        $z2 = staticinvoke <org.apache.commons.httpclient.util.LangUtils: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z2 == 0 goto label2;

        $r8 = r1.<org.apache.commons.httpclient.HostConfiguration: java.net.InetAddress localAddress>;

        $r7 = r2.<org.apache.commons.httpclient.HostConfiguration: java.net.InetAddress localAddress>;

        $z3 = staticinvoke <org.apache.commons.httpclient.util.LangUtils: boolean equals(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z3 == 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;

     label4:
        return 0;
    }

    public synchronized int hashCode()
    {
        java.net.InetAddress $r3;
        org.apache.commons.httpclient.HttpHost $r1;
        org.apache.commons.httpclient.HostConfiguration r0;
        int $i0, $i1, $i2;
        org.apache.commons.httpclient.ProxyHost $r2;

        r0 := @this: org.apache.commons.httpclient.HostConfiguration;

        $r1 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HttpHost host>;

        $i0 = staticinvoke <org.apache.commons.httpclient.util.LangUtils: int hashCode(int,java.lang.Object)>(17, $r1);

        $r2 = r0.<org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.ProxyHost proxyHost>;

        $i1 = staticinvoke <org.apache.commons.httpclient.util.LangUtils: int hashCode(int,java.lang.Object)>($i0, $r2);

        $r3 = r0.<org.apache.commons.httpclient.HostConfiguration: java.net.InetAddress localAddress>;

        $i2 = staticinvoke <org.apache.commons.httpclient.util.LangUtils: int hashCode(int,java.lang.Object)>($i1, $r3);

        return $i2;
    }

    static void <clinit>()
    {
        org.apache.commons.httpclient.HostConfiguration $r0;

        $r0 = new org.apache.commons.httpclient.HostConfiguration;

        specialinvoke $r0.<org.apache.commons.httpclient.HostConfiguration: void <init>()>();

        <org.apache.commons.httpclient.HostConfiguration: org.apache.commons.httpclient.HostConfiguration ANY_HOST_CONFIGURATION> = $r0;

        return;
    }
}
