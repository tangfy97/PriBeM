public class org.apache.lucene.analysis.pt.RSLPStemmerBase$Rule extends java.lang.Object
{
    protected final char[] suffix;
    protected final char[] replacement;
    protected final int min;

    public void <init>(java.lang.String, int, java.lang.String)
    {
        int i0;
        char[] $r2, $r4;
        org.apache.lucene.analysis.pt.RSLPStemmerBase$Rule r0;
        java.lang.String r1, r3;

        r0 := @this: org.apache.lucene.analysis.pt.RSLPStemmerBase$Rule;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();

        r0.<org.apache.lucene.analysis.pt.RSLPStemmerBase$Rule: char[] suffix> = $r2;

        $r4 = virtualinvoke r3.<java.lang.String: char[] toCharArray()>();

        r0.<org.apache.lucene.analysis.pt.RSLPStemmerBase$Rule: char[] replacement> = $r4;

        r0.<org.apache.lucene.analysis.pt.RSLPStemmerBase$Rule: int min> = i0;

        return;
    }

    public boolean matches(char[], int)
    {
        int i0, $i1, $i2, $i3;
        char[] $r1, r2, $r3;
        org.apache.lucene.analysis.pt.RSLPStemmerBase$Rule r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.analysis.pt.RSLPStemmerBase$Rule;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        $r1 = r0.<org.apache.lucene.analysis.pt.RSLPStemmerBase$Rule: char[] suffix>;

        $i1 = lengthof $r1;

        $i3 = i0 - $i1;

        $i2 = r0.<org.apache.lucene.analysis.pt.RSLPStemmerBase$Rule: int min>;

        if $i3 < $i2 goto label1;

        $r3 = r0.<org.apache.lucene.analysis.pt.RSLPStemmerBase$Rule: char[] suffix>;

        $z0 = staticinvoke <org.apache.lucene.analysis.util.StemmerUtil: boolean endsWith(char[],int,char[])>(r2, i0, $r3);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public int replace(char[], int)
    {
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        char[] $r1, $r2, $r3, r4, $r5, $r6, $r7;
        org.apache.lucene.analysis.pt.RSLPStemmerBase$Rule r0;

        r0 := @this: org.apache.lucene.analysis.pt.RSLPStemmerBase$Rule;

        r4 := @parameter0: char[];

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.lucene.analysis.pt.RSLPStemmerBase$Rule: char[] replacement>;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        $r7 = r0.<org.apache.lucene.analysis.pt.RSLPStemmerBase$Rule: char[] replacement>;

        $r5 = r0.<org.apache.lucene.analysis.pt.RSLPStemmerBase$Rule: char[] suffix>;

        $i6 = lengthof $r5;

        $i8 = i1 - $i6;

        $r6 = r0.<org.apache.lucene.analysis.pt.RSLPStemmerBase$Rule: char[] replacement>;

        $i7 = lengthof $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, r4, $i8, $i7);

     label1:
        $r2 = r0.<org.apache.lucene.analysis.pt.RSLPStemmerBase$Rule: char[] suffix>;

        $i2 = lengthof $r2;

        $i4 = i1 - $i2;

        $r3 = r0.<org.apache.lucene.analysis.pt.RSLPStemmerBase$Rule: char[] replacement>;

        $i3 = lengthof $r3;

        $i5 = $i4 + $i3;

        return $i5;
    }
}
