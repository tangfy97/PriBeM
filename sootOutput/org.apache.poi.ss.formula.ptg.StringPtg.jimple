public final class org.apache.poi.ss.formula.ptg.StringPtg extends org.apache.poi.ss.formula.ptg.ScalarConstantPtg
{
    public static final byte sid;
    private static final char FORMULA_DELIMITER;
    private final boolean _is16bitUnicode;
    private final java.lang.String field_3_string;

    public void <init>(org.apache.poi.util.LittleEndianInput)
    {
        byte $b1, $b2;
        org.apache.poi.ss.formula.ptg.StringPtg r0;
        org.apache.poi.util.LittleEndianInput r1;
        int $i0;
        java.lang.String $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.ss.formula.ptg.StringPtg;

        r1 := @parameter0: org.apache.poi.util.LittleEndianInput;

        specialinvoke r0.<org.apache.poi.ss.formula.ptg.ScalarConstantPtg: void <init>()>();

        $i0 = interfaceinvoke r1.<org.apache.poi.util.LittleEndianInput: int readUByte()>();

        $b1 = interfaceinvoke r1.<org.apache.poi.util.LittleEndianInput: byte readByte()>();

        $b2 = $b1 & 1;

        if $b2 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<org.apache.poi.ss.formula.ptg.StringPtg: boolean _is16bitUnicode> = $z1;

        $z0 = r0.<org.apache.poi.ss.formula.ptg.StringPtg: boolean _is16bitUnicode>;

        if $z0 == 0 goto label3;

        $r3 = staticinvoke <org.apache.poi.util.StringUtil: java.lang.String readUnicodeLE(org.apache.poi.util.LittleEndianInput,int)>(r1, $i0);

        r0.<org.apache.poi.ss.formula.ptg.StringPtg: java.lang.String field_3_string> = $r3;

        goto label4;

     label3:
        $r2 = staticinvoke <org.apache.poi.util.StringUtil: java.lang.String readCompressedUnicode(org.apache.poi.util.LittleEndianInput,int)>(r1, $i0);

        r0.<org.apache.poi.ss.formula.ptg.StringPtg: java.lang.String field_3_string> = $r2;

     label4:
        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.poi.ss.formula.ptg.StringPtg r0;
        int $i0;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r2;
        boolean $z0;

        r0 := @this: org.apache.poi.ss.formula.ptg.StringPtg;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.poi.ss.formula.ptg.ScalarConstantPtg: void <init>()>();

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= 255 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("String literals in formulas can\'t be bigger than 255 characters ASCII");

        throw $r2;

     label1:
        $z0 = staticinvoke <org.apache.poi.util.StringUtil: boolean hasMultibyte(java.lang.String)>(r1);

        r0.<org.apache.poi.ss.formula.ptg.StringPtg: boolean _is16bitUnicode> = $z0;

        r0.<org.apache.poi.ss.formula.ptg.StringPtg: java.lang.String field_3_string> = r1;

        return;
    }

    public java.lang.String getValue()
    {
        org.apache.poi.ss.formula.ptg.StringPtg r0;
        java.lang.String $r1;

        r0 := @this: org.apache.poi.ss.formula.ptg.StringPtg;

        $r1 = r0.<org.apache.poi.ss.formula.ptg.StringPtg: java.lang.String field_3_string>;

        return $r1;
    }

    public void write(org.apache.poi.util.LittleEndianOutput)
    {
        byte $b0, $b3;
        org.apache.poi.util.LittleEndianOutput r0;
        org.apache.poi.ss.formula.ptg.StringPtg r1;
        int $i1, $i2, $i4;
        java.lang.String $r2, $r3, $r4;
        boolean $z0, $z1;

        r1 := @this: org.apache.poi.ss.formula.ptg.StringPtg;

        r0 := @parameter0: org.apache.poi.util.LittleEndianOutput;

        $b0 = virtualinvoke r1.<org.apache.poi.ss.formula.ptg.StringPtg: byte getPtgClass()>();

        $i4 = (int) $b0;

        $i1 = 23 + $i4;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeByte(int)>($i1);

        $r2 = r1.<org.apache.poi.ss.formula.ptg.StringPtg: java.lang.String field_3_string>;

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeByte(int)>($i2);

        $z0 = r1.<org.apache.poi.ss.formula.ptg.StringPtg: boolean _is16bitUnicode>;

        if $z0 == 0 goto label1;

        $b3 = 1;

        goto label2;

     label1:
        $b3 = 0;

     label2:
        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeByte(int)>($b3);

        $z1 = r1.<org.apache.poi.ss.formula.ptg.StringPtg: boolean _is16bitUnicode>;

        if $z1 == 0 goto label3;

        $r4 = r1.<org.apache.poi.ss.formula.ptg.StringPtg: java.lang.String field_3_string>;

        staticinvoke <org.apache.poi.util.StringUtil: void putUnicodeLE(java.lang.String,org.apache.poi.util.LittleEndianOutput)>($r4, r0);

        goto label4;

     label3:
        $r3 = r1.<org.apache.poi.ss.formula.ptg.StringPtg: java.lang.String field_3_string>;

        staticinvoke <org.apache.poi.util.StringUtil: void putCompressedUnicode(java.lang.String,org.apache.poi.util.LittleEndianOutput)>($r3, r0);

     label4:
        return;
    }

    public int getSize()
    {
        byte $b3;
        org.apache.poi.ss.formula.ptg.StringPtg r0;
        int $i0, $i1, $i2;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.poi.ss.formula.ptg.StringPtg;

        $r1 = r0.<org.apache.poi.ss.formula.ptg.StringPtg: java.lang.String field_3_string>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $z0 = r0.<org.apache.poi.ss.formula.ptg.StringPtg: boolean _is16bitUnicode>;

        if $z0 == 0 goto label1;

        $b3 = 2;

        goto label2;

     label1:
        $b3 = 1;

     label2:
        $i1 = $i0 * $b3;

        $i2 = 3 + $i1;

        return $i2;
    }

    public java.lang.String toFormulaString()
    {
        char $c2;
        java.lang.StringBuffer $r4;
        org.apache.poi.ss.formula.ptg.StringPtg r0;
        int $i0, $i1, i3, $i4;
        java.lang.String r1, $r3;

        r0 := @this: org.apache.poi.ss.formula.ptg.StringPtg;

        r1 = r0.<org.apache.poi.ss.formula.ptg.StringPtg: java.lang.String field_3_string>;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $r4 = new java.lang.StringBuffer;

        $i1 = $i0 + 4;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(int)>($i1);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        i3 = 0;

     label1:
        if i3 >= $i0 goto label3;

        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i3);

        $i4 = (int) $c2;

        if $i4 != 34 goto label2;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

     label2:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        i3 = i3 + 1;

        goto label1;

     label3:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        $r3 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public static void <clinit>()
    {
        <org.apache.poi.ss.formula.ptg.StringPtg: char FORMULA_DELIMITER> = 34;

        <org.apache.poi.ss.formula.ptg.StringPtg: byte sid> = 23;

        return;
    }
}
