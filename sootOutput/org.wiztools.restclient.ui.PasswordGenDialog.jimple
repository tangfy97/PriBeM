class org.wiztools.restclient.ui.PasswordGenDialog extends org.wiztools.restclient.ui.EscapableDialog
{
    private static final java.lang.String helpText;
    private javax.swing.JRadioButton jrb_encode;
    private javax.swing.JRadioButton jrb_decode;
    private javax.swing.JTextField jtf_in;
    private javax.swing.JTextField jtf_out;
    private final org.wiztools.restclient.ui.PasswordGenDialog me;

    public void <init>()
    {
        javax.swing.JTextField $r6, $r7;
        org.wiztools.restclient.ui.RESTUserInterface $r2;
        javax.swing.JRadioButton $r4, $r5;
        org.wiztools.restclient.ui.PasswordGenDialog r0;
        java.lang.Object $r1;
        javax.swing.JFrame $r3;

        r0 := @this: org.wiztools.restclient.ui.PasswordGenDialog;

        $r1 = staticinvoke <org.wiztools.restclient.ServiceLocator: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/wiztools/restclient/ui/RESTUserInterface;");

        $r2 = (org.wiztools.restclient.ui.RESTUserInterface) $r1;

        $r3 = interfaceinvoke $r2.<org.wiztools.restclient.ui.RESTUserInterface: javax.swing.JFrame getFrame()>();

        specialinvoke r0.<org.wiztools.restclient.ui.EscapableDialog: void <init>(java.awt.Frame,boolean)>($r3, 1);

        $r4 = new javax.swing.JRadioButton;

        specialinvoke $r4.<javax.swing.JRadioButton: void <init>(java.lang.String)>("Encode");

        r0.<org.wiztools.restclient.ui.PasswordGenDialog: javax.swing.JRadioButton jrb_encode> = $r4;

        $r5 = new javax.swing.JRadioButton;

        specialinvoke $r5.<javax.swing.JRadioButton: void <init>(java.lang.String)>("Decode");

        r0.<org.wiztools.restclient.ui.PasswordGenDialog: javax.swing.JRadioButton jrb_decode> = $r5;

        $r6 = new javax.swing.JTextField;

        specialinvoke $r6.<javax.swing.JTextField: void <init>(int)>(25);

        r0.<org.wiztools.restclient.ui.PasswordGenDialog: javax.swing.JTextField jtf_in> = $r6;

        $r7 = new javax.swing.JTextField;

        specialinvoke $r7.<javax.swing.JTextField: void <init>(int)>(25);

        r0.<org.wiztools.restclient.ui.PasswordGenDialog: javax.swing.JTextField jtf_out> = $r7;

        r0.<org.wiztools.restclient.ui.PasswordGenDialog: org.wiztools.restclient.ui.PasswordGenDialog me> = r0;

        virtualinvoke r0.<org.wiztools.restclient.ui.PasswordGenDialog: void setTitle(java.lang.String)>("Password Encoder/Decoder");

        specialinvoke r0.<org.wiztools.restclient.ui.PasswordGenDialog: void init()>();

        return;
    }

    private void init()
    {
        javax.swing.border.Border $r10, $r34, $r44;
        java.awt.BorderLayout $r11, $r17, $r35;
        javax.swing.JRadioButton $r2, $r3, $r4, $r5, $r6, $r14, $r15;
        java.awt.Dimension $r37;
        org.wiztools.restclient.ui.PasswordGenDialog$1 $r8;
        org.wiztools.restclient.ui.PasswordGenDialog$2 $r31;
        javax.swing.JPanel $r9, $r12, $r16, $r18, $r23, $r27, $r33, $r40;
        javax.swing.JTextField $r7, $r21, $r25, $r26;
        java.awt.GridLayout $r19, $r24;
        javax.swing.JTabbedPane $r43;
        javax.swing.JTextPane $r36;
        java.lang.String $r38;
        java.awt.FlowLayout $r13, $r28, $r41;
        javax.swing.JRootPane $r30;
        javax.swing.JButton $r29, $r32, $r42;
        javax.swing.ButtonGroup $r0;
        org.wiztools.restclient.ui.PasswordGenDialog r1;
        javax.swing.JScrollPane $r39;
        javax.swing.JLabel $r20, $r22;

        r1 := @this: org.wiztools.restclient.ui.PasswordGenDialog;

        $r0 = new javax.swing.ButtonGroup;

        specialinvoke $r0.<javax.swing.ButtonGroup: void <init>()>();

        $r2 = r1.<org.wiztools.restclient.ui.PasswordGenDialog: javax.swing.JRadioButton jrb_encode>;

        virtualinvoke $r2.<javax.swing.JRadioButton: void setMnemonic(char)>(101);

        $r3 = r1.<org.wiztools.restclient.ui.PasswordGenDialog: javax.swing.JRadioButton jrb_encode>;

        virtualinvoke $r3.<javax.swing.JRadioButton: void setSelected(boolean)>(1);

        $r4 = r1.<org.wiztools.restclient.ui.PasswordGenDialog: javax.swing.JRadioButton jrb_decode>;

        virtualinvoke $r4.<javax.swing.JRadioButton: void setMnemonic(char)>(100);

        $r5 = r1.<org.wiztools.restclient.ui.PasswordGenDialog: javax.swing.JRadioButton jrb_encode>;

        virtualinvoke $r0.<javax.swing.ButtonGroup: void add(javax.swing.AbstractButton)>($r5);

        $r6 = r1.<org.wiztools.restclient.ui.PasswordGenDialog: javax.swing.JRadioButton jrb_decode>;

        virtualinvoke $r0.<javax.swing.ButtonGroup: void add(javax.swing.AbstractButton)>($r6);

        $r7 = r1.<org.wiztools.restclient.ui.PasswordGenDialog: javax.swing.JTextField jtf_out>;

        virtualinvoke $r7.<javax.swing.JTextField: void setEditable(boolean)>(0);

        $r8 = new org.wiztools.restclient.ui.PasswordGenDialog$1;

        specialinvoke $r8.<org.wiztools.restclient.ui.PasswordGenDialog$1: void <init>(org.wiztools.restclient.ui.PasswordGenDialog)>(r1);

        $r9 = new javax.swing.JPanel;

        specialinvoke $r9.<javax.swing.JPanel: void <init>()>();

        $r10 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(5, 5, 5, 5);

        virtualinvoke $r9.<javax.swing.JPanel: void setBorder(javax.swing.border.Border)>($r10);

        $r11 = new java.awt.BorderLayout;

        specialinvoke $r11.<java.awt.BorderLayout: void <init>()>();

        virtualinvoke $r9.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r11);

        $r12 = new javax.swing.JPanel;

        specialinvoke $r12.<javax.swing.JPanel: void <init>()>();

        $r13 = new java.awt.FlowLayout;

        specialinvoke $r13.<java.awt.FlowLayout: void <init>(int)>(1);

        virtualinvoke $r12.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r13);

        $r14 = r1.<org.wiztools.restclient.ui.PasswordGenDialog: javax.swing.JRadioButton jrb_encode>;

        virtualinvoke $r12.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r14);

        $r15 = r1.<org.wiztools.restclient.ui.PasswordGenDialog: javax.swing.JRadioButton jrb_decode>;

        virtualinvoke $r12.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r15);

        virtualinvoke $r9.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($r12, "North");

        $r16 = new javax.swing.JPanel;

        specialinvoke $r16.<javax.swing.JPanel: void <init>()>();

        $r17 = new java.awt.BorderLayout;

        specialinvoke $r17.<java.awt.BorderLayout: void <init>()>();

        virtualinvoke $r16.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r17);

        $r18 = new javax.swing.JPanel;

        specialinvoke $r18.<javax.swing.JPanel: void <init>()>();

        $r19 = new java.awt.GridLayout;

        specialinvoke $r19.<java.awt.GridLayout: void <init>(int,int,int,int)>(2, 1, 5, 5);

        virtualinvoke $r18.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r19);

        $r20 = new javax.swing.JLabel;

        specialinvoke $r20.<javax.swing.JLabel: void <init>(java.lang.String)>("Input: ");

        virtualinvoke $r20.<javax.swing.JLabel: void setDisplayedMnemonic(char)>(105);

        $r21 = r1.<org.wiztools.restclient.ui.PasswordGenDialog: javax.swing.JTextField jtf_in>;

        virtualinvoke $r20.<javax.swing.JLabel: void setLabelFor(java.awt.Component)>($r21);

        $r22 = new javax.swing.JLabel;

        specialinvoke $r22.<javax.swing.JLabel: void <init>(java.lang.String)>("Output: ");

        virtualinvoke $r18.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r20);

        virtualinvoke $r18.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r22);

        virtualinvoke $r16.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($r18, "West");

        $r23 = new javax.swing.JPanel;

        specialinvoke $r23.<javax.swing.JPanel: void <init>()>();

        $r24 = new java.awt.GridLayout;

        specialinvoke $r24.<java.awt.GridLayout: void <init>(int,int,int,int)>(2, 1, 5, 5);

        virtualinvoke $r23.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r24);

        $r25 = r1.<org.wiztools.restclient.ui.PasswordGenDialog: javax.swing.JTextField jtf_in>;

        virtualinvoke $r23.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r25);

        $r26 = r1.<org.wiztools.restclient.ui.PasswordGenDialog: javax.swing.JTextField jtf_out>;

        virtualinvoke $r23.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r26);

        virtualinvoke $r16.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($r23, "Center");

        virtualinvoke $r9.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($r16, "Center");

        $r27 = new javax.swing.JPanel;

        specialinvoke $r27.<javax.swing.JPanel: void <init>()>();

        $r28 = new java.awt.FlowLayout;

        specialinvoke $r28.<java.awt.FlowLayout: void <init>(int)>(1);

        virtualinvoke $r27.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r28);

        $r29 = new javax.swing.JButton;

        specialinvoke $r29.<javax.swing.JButton: void <init>(java.lang.String)>("Generate");

        virtualinvoke $r29.<javax.swing.JButton: void setMnemonic(char)>(103);

        $r30 = virtualinvoke r1.<org.wiztools.restclient.ui.PasswordGenDialog: javax.swing.JRootPane getRootPane()>();

        virtualinvoke $r30.<javax.swing.JRootPane: void setDefaultButton(javax.swing.JButton)>($r29);

        $r31 = new org.wiztools.restclient.ui.PasswordGenDialog$2;

        specialinvoke $r31.<org.wiztools.restclient.ui.PasswordGenDialog$2: void <init>(org.wiztools.restclient.ui.PasswordGenDialog)>(r1);

        virtualinvoke $r29.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r31);

        virtualinvoke $r27.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r29);

        $r32 = new javax.swing.JButton;

        specialinvoke $r32.<javax.swing.JButton: void <init>(java.lang.String)>("Close");

        virtualinvoke $r32.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r8);

        virtualinvoke $r27.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r32);

        virtualinvoke $r9.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($r27, "South");

        $r33 = new javax.swing.JPanel;

        specialinvoke $r33.<javax.swing.JPanel: void <init>()>();

        $r34 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(5, 5, 5, 5);

        virtualinvoke $r33.<javax.swing.JPanel: void setBorder(javax.swing.border.Border)>($r34);

        $r35 = new java.awt.BorderLayout;

        specialinvoke $r35.<java.awt.BorderLayout: void <init>()>();

        virtualinvoke $r33.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r35);

        $r36 = new javax.swing.JTextPane;

        specialinvoke $r36.<javax.swing.JTextPane: void <init>()>();

        virtualinvoke $r36.<javax.swing.JTextPane: void setEditable(boolean)>(0);

        $r37 = virtualinvoke $r36.<javax.swing.JTextPane: java.awt.Dimension getPreferredSize()>();

        $r38 = <org.wiztools.restclient.ui.PasswordGenDialog: java.lang.String helpText>;

        virtualinvoke $r36.<javax.swing.JTextPane: void setText(java.lang.String)>($r38);

        virtualinvoke $r36.<javax.swing.JTextPane: void setPreferredSize(java.awt.Dimension)>($r37);

        virtualinvoke $r36.<javax.swing.JTextPane: void setCaretPosition(int)>(0);

        $r39 = new javax.swing.JScrollPane;

        specialinvoke $r39.<javax.swing.JScrollPane: void <init>(java.awt.Component)>($r36);

        virtualinvoke $r33.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($r39, "Center");

        $r40 = new javax.swing.JPanel;

        specialinvoke $r40.<javax.swing.JPanel: void <init>()>();

        $r41 = new java.awt.FlowLayout;

        specialinvoke $r41.<java.awt.FlowLayout: void <init>(int)>(1);

        virtualinvoke $r40.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r41);

        $r42 = new javax.swing.JButton;

        specialinvoke $r42.<javax.swing.JButton: void <init>(java.lang.String)>("Close");

        virtualinvoke $r42.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r8);

        virtualinvoke $r40.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r42);

        virtualinvoke $r33.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($r40, "South");

        $r43 = new javax.swing.JTabbedPane;

        specialinvoke $r43.<javax.swing.JTabbedPane: void <init>()>();

        $r44 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(5, 5, 5, 5);

        virtualinvoke $r43.<javax.swing.JTabbedPane: void setBorder(javax.swing.border.Border)>($r44);

        virtualinvoke $r43.<javax.swing.JTabbedPane: void addTab(java.lang.String,java.awt.Component)>("Encoder/Decoder", $r9);

        virtualinvoke $r43.<javax.swing.JTabbedPane: void addTab(java.lang.String,java.awt.Component)>("Help", $r33);

        virtualinvoke r1.<org.wiztools.restclient.ui.PasswordGenDialog: void setContentPane(java.awt.Container)>($r43);

        virtualinvoke r1.<org.wiztools.restclient.ui.PasswordGenDialog: void pack()>();

        return;
    }

    private void generate()
    {
        javax.swing.JTextField $r1, $r4;
        javax.swing.JRadioButton $r3;
        org.wiztools.restclient.ui.PasswordGenDialog r0, $r5, $r7;
        org.wiztools.restclient.Base64Exception $r6;
        java.lang.String $r2, $r8, r9;
        boolean $z0, $z1;

        r0 := @this: org.wiztools.restclient.ui.PasswordGenDialog;

        $r1 = r0.<org.wiztools.restclient.ui.PasswordGenDialog: javax.swing.JTextField jtf_in>;

        $r2 = virtualinvoke $r1.<javax.swing.JTextField: java.lang.String getText()>();

        $z0 = staticinvoke <org.wiztools.commons.StringUtil: boolean isEmpty(java.lang.String)>($r2);

        if $z0 == 0 goto label1;

        $r5 = r0.<org.wiztools.restclient.ui.PasswordGenDialog: org.wiztools.restclient.ui.PasswordGenDialog me>;

        staticinvoke <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>($r5, "No input entered.", "Error in input.", 0);

        return;

     label1:
        $r3 = r0.<org.wiztools.restclient.ui.PasswordGenDialog: javax.swing.JRadioButton jrb_encode>;

        $z1 = virtualinvoke $r3.<javax.swing.JRadioButton: boolean isSelected()>();

        if $z1 == 0 goto label2;

        r9 = staticinvoke <org.wiztools.restclient.util.Util: java.lang.String base64encode(java.lang.String)>($r2);

        goto label5;

     label2:
        r9 = staticinvoke <org.wiztools.restclient.util.Util: java.lang.String base64decode(java.lang.String)>($r2);

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        $r7 = r0.<org.wiztools.restclient.ui.PasswordGenDialog: org.wiztools.restclient.ui.PasswordGenDialog me>;

        $r8 = virtualinvoke $r6.<org.wiztools.restclient.Base64Exception: java.lang.String getMessage()>();

        staticinvoke <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>($r7, $r8, "Error in input.", 0);

        return;

     label5:
        $r4 = r0.<org.wiztools.restclient.ui.PasswordGenDialog: javax.swing.JTextField jtf_out>;

        virtualinvoke $r4.<javax.swing.JTextField: void setText(java.lang.String)>(r9);

        return;

        catch org.wiztools.restclient.Base64Exception from label2 to label3 with label4;
    }

    public void doEscape(java.awt.AWTEvent)
    {
        java.awt.AWTEvent r2;
        org.wiztools.restclient.ui.PasswordGenDialog r0, $r1;

        r0 := @this: org.wiztools.restclient.ui.PasswordGenDialog;

        r2 := @parameter0: java.awt.AWTEvent;

        $r1 = r0.<org.wiztools.restclient.ui.PasswordGenDialog: org.wiztools.restclient.ui.PasswordGenDialog me>;

        virtualinvoke $r1.<org.wiztools.restclient.ui.PasswordGenDialog: void setVisible(boolean)>(0);

        return;
    }

    static org.wiztools.restclient.ui.PasswordGenDialog access$000(org.wiztools.restclient.ui.PasswordGenDialog)
    {
        org.wiztools.restclient.ui.PasswordGenDialog r0, $r1;

        r0 := @parameter0: org.wiztools.restclient.ui.PasswordGenDialog;

        $r1 = r0.<org.wiztools.restclient.ui.PasswordGenDialog: org.wiztools.restclient.ui.PasswordGenDialog me>;

        return $r1;
    }

    static void access$100(org.wiztools.restclient.ui.PasswordGenDialog)
    {
        org.wiztools.restclient.ui.PasswordGenDialog r0;

        r0 := @parameter0: org.wiztools.restclient.ui.PasswordGenDialog;

        specialinvoke r0.<org.wiztools.restclient.ui.PasswordGenDialog: void generate()>();

        return;
    }

    static void <clinit>()
    {
        java.lang.Throwable $r8;
        java.io.IOException $r7, $r9, $r10, $r11;
        java.io.InputStreamReader $r4;
        java.lang.Class $r0;
        java.lang.StringBuilder $r5;
        java.lang.ClassLoader $r1;
        java.io.BufferedReader $r3;
        java.lang.String $r6, r12;
        java.io.InputStream $r2;

        $r0 = class "Lorg/wiztools/restclient/ui/RESTMain;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r2 = virtualinvoke $r1.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("org/wiztools/restclient/PasswordHelp.txt");

        $r3 = new java.io.BufferedReader;

        $r4 = new java.io.InputStreamReader;

        specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r2);

        specialinvoke $r3.<java.io.BufferedReader: void <init>(java.io.Reader)>($r4);

     label01:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

     label02:
        $r6 = virtualinvoke $r3.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r6 == null goto label03;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        goto label02;

     label03:
        r12 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label04:
        if $r3 == null goto label19;

     label05:
        virtualinvoke $r3.<java.io.BufferedReader: void close()>();

     label06:
        goto label19;

     label07:
        $r11 := @caughtexception;

        goto label19;

     label08:
        $r10 := @caughtexception;

        r12 = "Help loading failed.";

     label09:
        if $r3 == null goto label19;

     label10:
        virtualinvoke $r3.<java.io.BufferedReader: void close()>();

     label11:
        goto label19;

     label12:
        $r9 := @caughtexception;

        goto label19;

     label13:
        $r8 := @caughtexception;

     label14:
        if $r3 == null goto label18;

     label15:
        virtualinvoke $r3.<java.io.BufferedReader: void close()>();

     label16:
        goto label18;

     label17:
        $r7 := @caughtexception;

     label18:
        throw $r8;

     label19:
        <org.wiztools.restclient.ui.PasswordGenDialog: java.lang.String helpText> = r12;

        return;

        catch java.io.IOException from label05 to label06 with label07;
        catch java.io.IOException from label01 to label04 with label08;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.lang.Throwable from label01 to label04 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.io.IOException from label15 to label16 with label17;
        catch java.lang.Throwable from label13 to label14 with label13;
    }
}
