public class org.waveprotocol.box.server.persistence.file.FileAccountStore extends java.lang.Object implements org.waveprotocol.box.server.persistence.AccountStore
{
    private static final java.lang.String ACCOUNT_FILE_EXTENSION;
    private final java.lang.String accountStoreBasePath;
    private final java.util.Map accounts;
    private static final org.waveprotocol.wave.util.logging.Log LOG;

    public void <init>(java.lang.String)
    {
        java.util.HashMap $r1;
        java.lang.String r2;
        org.waveprotocol.box.server.persistence.file.FileAccountStore r0;

        r0 := @this: org.waveprotocol.box.server.persistence.file.FileAccountStore;

        r2 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>();

        r0.<org.waveprotocol.box.server.persistence.file.FileAccountStore: java.util.Map accounts> = $r1;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "Requested path is null");

        r0.<org.waveprotocol.box.server.persistence.file.FileAccountStore: java.lang.String accountStoreBasePath> = r2;

        return;
    }

    public void initializeAccountStore() throws org.waveprotocol.box.server.persistence.PersistenceException
    {
        org.waveprotocol.wave.util.logging.Log $r1;
        java.lang.String $r2;
        org.waveprotocol.box.server.persistence.file.FileAccountStore r0;

        r0 := @this: org.waveprotocol.box.server.persistence.file.FileAccountStore;

        $r2 = r0.<org.waveprotocol.box.server.persistence.file.FileAccountStore: java.lang.String accountStoreBasePath>;

        $r1 = <org.waveprotocol.box.server.persistence.file.FileAccountStore: org.waveprotocol.wave.util.logging.Log LOG>;

        staticinvoke <org.waveprotocol.box.server.persistence.file.FileUtils: void performDirectoryChecks(java.lang.String,java.lang.String,java.lang.String,org.waveprotocol.wave.util.logging.Log)>($r2, ".account", "account store", $r1);

        return;
    }

    public org.waveprotocol.box.server.account.AccountData getAccount(org.waveprotocol.wave.model.wave.ParticipantId) throws org.waveprotocol.box.server.persistence.PersistenceException
    {
        java.lang.Throwable $r7;
        org.waveprotocol.box.server.account.AccountData $r5, r8;
        org.waveprotocol.wave.model.wave.ParticipantId r2;
        org.waveprotocol.box.server.persistence.file.FileAccountStore r0;
        java.util.Map $r1, $r3, $r6;
        java.lang.Object $r4;

        r0 := @this: org.waveprotocol.box.server.persistence.file.FileAccountStore;

        r2 := @parameter0: org.waveprotocol.wave.model.wave.ParticipantId;

        $r1 = r0.<org.waveprotocol.box.server.persistence.file.FileAccountStore: java.util.Map accounts>;

        entermonitor $r1;

     label1:
        $r3 = r0.<org.waveprotocol.box.server.persistence.file.FileAccountStore: java.util.Map accounts>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r8 = (org.waveprotocol.box.server.account.AccountData) $r4;

        if r8 != null goto label2;

        $r5 = specialinvoke r0.<org.waveprotocol.box.server.persistence.file.FileAccountStore: org.waveprotocol.box.server.account.AccountData readAccount(org.waveprotocol.wave.model.wave.ParticipantId)>(r2);

        r8 = $r5;

        if $r5 == null goto label2;

        $r6 = r0.<org.waveprotocol.box.server.persistence.file.FileAccountStore: java.util.Map accounts>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r5);

     label2:
        exitmonitor $r1;

     label3:
        return r8;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void putAccount(org.waveprotocol.box.server.account.AccountData) throws org.waveprotocol.box.server.persistence.PersistenceException
    {
        java.lang.Throwable $r5;
        org.waveprotocol.box.server.persistence.file.FileAccountStore r0;
        java.util.Map $r1, $r3;
        org.waveprotocol.box.server.account.AccountData r2;
        org.waveprotocol.wave.model.wave.ParticipantId $r4;

        r0 := @this: org.waveprotocol.box.server.persistence.file.FileAccountStore;

        r2 := @parameter0: org.waveprotocol.box.server.account.AccountData;

        $r1 = r0.<org.waveprotocol.box.server.persistence.file.FileAccountStore: java.util.Map accounts>;

        entermonitor $r1;

     label1:
        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        specialinvoke r0.<org.waveprotocol.box.server.persistence.file.FileAccountStore: void writeAccount(org.waveprotocol.box.server.account.AccountData)>(r2);

        $r3 = r0.<org.waveprotocol.box.server.persistence.file.FileAccountStore: java.util.Map accounts>;

        $r4 = interfaceinvoke r2.<org.waveprotocol.box.server.account.AccountData: org.waveprotocol.wave.model.wave.ParticipantId getId()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r2);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeAccount(org.waveprotocol.wave.model.wave.ParticipantId) throws org.waveprotocol.box.server.persistence.PersistenceException
    {
        java.lang.Throwable $r12;
        org.waveprotocol.wave.model.wave.ParticipantId r3;
        org.waveprotocol.box.server.persistence.PersistenceException $r6;
        java.io.File $r2;
        org.waveprotocol.box.server.persistence.file.FileAccountStore r0;
        java.util.Map $r1, $r5;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.String $r4, $r9, $r11;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.box.server.persistence.file.FileAccountStore;

        r3 := @parameter0: org.waveprotocol.wave.model.wave.ParticipantId;

        $r1 = r0.<org.waveprotocol.box.server.persistence.file.FileAccountStore: java.util.Map accounts>;

        entermonitor $r1;

     label1:
        $r2 = new java.io.File;

        $r4 = specialinvoke r0.<org.waveprotocol.box.server.persistence.file.FileAccountStore: java.lang.String participantIdToFileName(org.waveprotocol.wave.model.wave.ParticipantId)>(r3);

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r4);

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke $r2.<java.io.File: boolean delete()>();

        if $z1 != 0 goto label2;

        $r6 = new org.waveprotocol.box.server.persistence.PersistenceException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to delete account data associated with ");

        $r9 = virtualinvoke r3.<org.waveprotocol.wave.model.wave.ParticipantId: java.lang.String getAddress()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.waveprotocol.box.server.persistence.PersistenceException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label2:
        $r5 = r0.<org.waveprotocol.box.server.persistence.file.FileAccountStore: java.util.Map accounts>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r3);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r12 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r12;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private java.lang.String participantIdToFileName(org.waveprotocol.wave.model.wave.ParticipantId)
    {
        org.waveprotocol.wave.model.wave.ParticipantId r6;
        org.waveprotocol.box.server.persistence.file.FileAccountStore r1;
        java.lang.StringBuilder $r0, $r3, $r5, $r9, $r10;
        java.lang.String $r2, $r4, $r7, $r8, $r11;

        r1 := @this: org.waveprotocol.box.server.persistence.file.FileAccountStore;

        r6 := @parameter0: org.waveprotocol.wave.model.wave.ParticipantId;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.waveprotocol.box.server.persistence.file.FileAccountStore: java.lang.String accountStoreBasePath>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = <java.io.File: java.lang.String separator>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r7 = virtualinvoke r6.<org.waveprotocol.wave.model.wave.ParticipantId: java.lang.String getAddress()>();

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String toLowerCase()>();

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".account");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    private org.waveprotocol.box.server.account.AccountData readAccount(org.waveprotocol.wave.model.wave.ParticipantId) throws org.waveprotocol.box.server.persistence.PersistenceException
    {
        java.lang.Throwable $r12;
        org.waveprotocol.box.server.persistence.protos.ProtoAccountStoreData$ProtoAccountData$Builder $r5, $r7;
        org.waveprotocol.box.server.account.AccountData $r9;
        org.waveprotocol.wave.model.wave.ParticipantId r2;
        org.waveprotocol.box.server.persistence.PersistenceException $r21;
        com.google.protobuf.AbstractMessage$Builder $r6;
        org.waveprotocol.box.server.persistence.file.FileAccountStore r1;
        org.waveprotocol.wave.util.logging.Log $r10, $r11, $r13, $r16;
        java.lang.String $r3, $r18, $r20;
        boolean $z0;
        java.io.IOException $r14;
        java.io.FileInputStream $r4, r22;
        java.io.File $r0;
        org.waveprotocol.box.server.persistence.protos.ProtoAccountStoreData$ProtoAccountData $r8;
        java.lang.StringBuilder $r15, $r17, $r19;

        r1 := @this: org.waveprotocol.box.server.persistence.file.FileAccountStore;

        r2 := @parameter0: org.waveprotocol.wave.model.wave.ParticipantId;

        $r0 = new java.io.File;

        $r3 = specialinvoke r1.<org.waveprotocol.box.server.persistence.file.FileAccountStore: java.lang.String participantIdToFileName(org.waveprotocol.wave.model.wave.ParticipantId)>(r2);

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>($r3);

        r22 = null;

     label1:
        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label3;

     label2:
        $r11 = <org.waveprotocol.box.server.persistence.file.FileAccountStore: org.waveprotocol.wave.util.logging.Log LOG>;

        staticinvoke <org.waveprotocol.box.server.persistence.file.FileUtils: void closeAndIgnoreException(java.io.Closeable,java.io.File,org.waveprotocol.wave.util.logging.Log)>(null, $r0, $r11);

        return null;

     label3:
        $r4 = new java.io.FileInputStream;

        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>($r0);

        r22 = $r4;

        $r5 = staticinvoke <org.waveprotocol.box.server.persistence.protos.ProtoAccountStoreData$ProtoAccountData: org.waveprotocol.box.server.persistence.protos.ProtoAccountStoreData$ProtoAccountData$Builder newBuilder()>();

        $r6 = virtualinvoke $r5.<org.waveprotocol.box.server.persistence.protos.ProtoAccountStoreData$ProtoAccountData$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(java.io.InputStream)>($r4);

        $r7 = (org.waveprotocol.box.server.persistence.protos.ProtoAccountStoreData$ProtoAccountData$Builder) $r6;

        $r8 = virtualinvoke $r7.<org.waveprotocol.box.server.persistence.protos.ProtoAccountStoreData$ProtoAccountData$Builder: org.waveprotocol.box.server.persistence.protos.ProtoAccountStoreData$ProtoAccountData build()>();

        $r9 = staticinvoke <org.waveprotocol.box.server.persistence.protos.ProtoAccountDataSerializer: org.waveprotocol.box.server.account.AccountData deserialize(org.waveprotocol.box.server.persistence.protos.ProtoAccountStoreData$ProtoAccountData)>($r8);

     label4:
        $r10 = <org.waveprotocol.box.server.persistence.file.FileAccountStore: org.waveprotocol.wave.util.logging.Log LOG>;

        staticinvoke <org.waveprotocol.box.server.persistence.file.FileUtils: void closeAndIgnoreException(java.io.Closeable,java.io.File,org.waveprotocol.wave.util.logging.Log)>($r4, $r0, $r10);

        return $r9;

     label5:
        $r14 := @caughtexception;

        $r16 = <org.waveprotocol.box.server.persistence.file.FileAccountStore: org.waveprotocol.wave.util.logging.Log LOG>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to read account data from file: ");

        $r18 = virtualinvoke $r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<org.waveprotocol.wave.util.logging.Log: void severe(java.lang.String,java.lang.Throwable)>($r20, $r14);

        $r21 = new org.waveprotocol.box.server.persistence.PersistenceException;

        specialinvoke $r21.<org.waveprotocol.box.server.persistence.PersistenceException: void <init>(java.lang.Throwable)>($r14);

        throw $r21;

     label6:
        $r12 := @caughtexception;

     label7:
        $r13 = <org.waveprotocol.box.server.persistence.file.FileAccountStore: org.waveprotocol.wave.util.logging.Log LOG>;

        staticinvoke <org.waveprotocol.box.server.persistence.file.FileUtils: void closeAndIgnoreException(java.io.Closeable,java.io.File,org.waveprotocol.wave.util.logging.Log)>(r22, $r0, $r13);

        throw $r12;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label7 with label6;
    }

    private void writeAccount(org.waveprotocol.box.server.account.AccountData) throws org.waveprotocol.box.server.persistence.PersistenceException
    {
        java.lang.Throwable $r9;
        byte[] $r7;
        org.waveprotocol.box.server.account.AccountData r2;
        org.waveprotocol.wave.model.wave.ParticipantId $r3;
        org.waveprotocol.box.server.persistence.PersistenceException $r18;
        org.waveprotocol.box.server.persistence.file.FileAccountStore r1;
        org.waveprotocol.wave.util.logging.Log $r8, $r10, $r13;
        java.lang.String $r4, $r15, $r17;
        java.io.FileOutputStream $r5, r19;
        java.io.IOException $r11;
        java.io.File $r0;
        org.waveprotocol.box.server.persistence.protos.ProtoAccountStoreData$ProtoAccountData $r6;
        java.lang.StringBuilder $r12, $r14, $r16;

        r1 := @this: org.waveprotocol.box.server.persistence.file.FileAccountStore;

        r2 := @parameter0: org.waveprotocol.box.server.account.AccountData;

        $r0 = new java.io.File;

        $r3 = interfaceinvoke r2.<org.waveprotocol.box.server.account.AccountData: org.waveprotocol.wave.model.wave.ParticipantId getId()>();

        $r4 = specialinvoke r1.<org.waveprotocol.box.server.persistence.file.FileAccountStore: java.lang.String participantIdToFileName(org.waveprotocol.wave.model.wave.ParticipantId)>($r3);

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>($r4);

        r19 = null;

     label1:
        $r5 = new java.io.FileOutputStream;

        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.io.File)>($r0);

        r19 = $r5;

        $r6 = staticinvoke <org.waveprotocol.box.server.persistence.protos.ProtoAccountDataSerializer: org.waveprotocol.box.server.persistence.protos.ProtoAccountStoreData$ProtoAccountData serialize(org.waveprotocol.box.server.account.AccountData)>(r2);

        $r7 = virtualinvoke $r6.<org.waveprotocol.box.server.persistence.protos.ProtoAccountStoreData$ProtoAccountData: byte[] toByteArray()>();

        virtualinvoke $r5.<java.io.OutputStream: void write(byte[])>($r7);

        virtualinvoke $r5.<java.io.OutputStream: void flush()>();

     label2:
        $r8 = <org.waveprotocol.box.server.persistence.file.FileAccountStore: org.waveprotocol.wave.util.logging.Log LOG>;

        staticinvoke <org.waveprotocol.box.server.persistence.file.FileUtils: void closeAndIgnoreException(java.io.Closeable,java.io.File,org.waveprotocol.wave.util.logging.Log)>($r5, $r0, $r8);

        goto label6;

     label3:
        $r11 := @caughtexception;

        $r13 = <org.waveprotocol.box.server.persistence.file.FileAccountStore: org.waveprotocol.wave.util.logging.Log LOG>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to write account data to file: ");

        $r15 = virtualinvoke $r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<org.waveprotocol.wave.util.logging.Log: void severe(java.lang.String,java.lang.Throwable)>($r17, $r11);

        $r18 = new org.waveprotocol.box.server.persistence.PersistenceException;

        specialinvoke $r18.<org.waveprotocol.box.server.persistence.PersistenceException: void <init>(java.lang.Throwable)>($r11);

        throw $r18;

     label4:
        $r9 := @caughtexception;

     label5:
        $r10 = <org.waveprotocol.box.server.persistence.file.FileAccountStore: org.waveprotocol.wave.util.logging.Log LOG>;

        staticinvoke <org.waveprotocol.box.server.persistence.file.FileUtils: void closeAndIgnoreException(java.io.Closeable,java.io.File,org.waveprotocol.wave.util.logging.Log)>(r19, $r0, $r10);

        throw $r9;

     label6:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label5 with label4;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.util.logging.Log $r0;

        <org.waveprotocol.box.server.persistence.file.FileAccountStore: java.lang.String ACCOUNT_FILE_EXTENSION> = ".account";

        $r0 = staticinvoke <org.waveprotocol.wave.util.logging.Log: org.waveprotocol.wave.util.logging.Log get(java.lang.Class)>(class "Lorg/waveprotocol/box/server/persistence/file/FileAccountStore;");

        <org.waveprotocol.box.server.persistence.file.FileAccountStore: org.waveprotocol.wave.util.logging.Log LOG> = $r0;

        return;
    }
}
