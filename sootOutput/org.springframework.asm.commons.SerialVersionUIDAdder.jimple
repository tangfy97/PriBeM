public class org.springframework.asm.commons.SerialVersionUIDAdder extends org.springframework.asm.ClassAdapter
{
    protected boolean computeSVUID;
    protected boolean hasSVUID;
    protected int access;
    protected java.lang.String name;
    protected java.lang.String[] interfaces;
    protected java.util.Collection svuidFields;
    protected boolean hasStaticInitializer;
    protected java.util.Collection svuidConstructors;
    protected java.util.Collection svuidMethods;

    public void <init>(org.springframework.asm.ClassVisitor)
    {
        org.springframework.asm.commons.SerialVersionUIDAdder r0;
        org.springframework.asm.ClassVisitor r1;
        java.util.ArrayList $r2, $r3, $r4;

        r0 := @this: org.springframework.asm.commons.SerialVersionUIDAdder;

        r1 := @parameter0: org.springframework.asm.ClassVisitor;

        specialinvoke r0.<org.springframework.asm.ClassAdapter: void <init>(org.springframework.asm.ClassVisitor)>(r1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.springframework.asm.commons.SerialVersionUIDAdder: java.util.Collection svuidFields> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.springframework.asm.commons.SerialVersionUIDAdder: java.util.Collection svuidConstructors> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.springframework.asm.commons.SerialVersionUIDAdder: java.util.Collection svuidMethods> = $r4;

        return;
    }

    public void visit(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        org.springframework.asm.commons.SerialVersionUIDAdder r0;
        java.lang.String[] r4;
        int i0, $i1, i2;
        java.lang.String r1, r2, r3;
        boolean $z0, $z1;

        r0 := @this: org.springframework.asm.commons.SerialVersionUIDAdder;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: java.lang.String[];

        $i1 = i0 & 512;

        if $i1 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<org.springframework.asm.commons.SerialVersionUIDAdder: boolean computeSVUID> = $z1;

        $z0 = r0.<org.springframework.asm.commons.SerialVersionUIDAdder: boolean computeSVUID>;

        if $z0 == 0 goto label3;

        r0.<org.springframework.asm.commons.SerialVersionUIDAdder: java.lang.String name> = r1;

        r0.<org.springframework.asm.commons.SerialVersionUIDAdder: int access> = i0;

        r0.<org.springframework.asm.commons.SerialVersionUIDAdder: java.lang.String[] interfaces> = r4;

     label3:
        specialinvoke r0.<org.springframework.asm.ClassAdapter: void visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(i2, i0, r1, r2, r3, r4);

        return;
    }

    public org.springframework.asm.MethodVisitor visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        org.springframework.asm.commons.SerialVersionUIDAdder r0;
        org.springframework.asm.commons.SerialVersionUIDAdder$Item $r5, $r7;
        java.lang.String[] r4;
        org.springframework.asm.ClassVisitor $r9;
        int i0, $i1, $i2;
        java.lang.String r1, r2, r3;
        boolean $z0, $z1, $z2, $z3;
        java.util.Collection $r6, $r8;
        org.springframework.asm.MethodVisitor $r10;

        r0 := @this: org.springframework.asm.commons.SerialVersionUIDAdder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String[];

        $z0 = r0.<org.springframework.asm.commons.SerialVersionUIDAdder: boolean computeSVUID>;

        if $z0 == 0 goto label3;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("<clinit>");

        if $z1 == 0 goto label1;

        r0.<org.springframework.asm.commons.SerialVersionUIDAdder: boolean hasStaticInitializer> = 1;

     label1:
        $i2 = i0 & 3391;

        $i1 = i0 & 2;

        if $i1 != 0 goto label3;

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("<init>");

        if $z2 == 0 goto label2;

        $r8 = r0.<org.springframework.asm.commons.SerialVersionUIDAdder: java.util.Collection svuidConstructors>;

        $r7 = new org.springframework.asm.commons.SerialVersionUIDAdder$Item;

        specialinvoke $r7.<org.springframework.asm.commons.SerialVersionUIDAdder$Item: void <init>(java.lang.String,int,java.lang.String)>(r1, $i2, r2);

        interfaceinvoke $r8.<java.util.Collection: boolean add(java.lang.Object)>($r7);

        goto label3;

     label2:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("<clinit>");

        if $z3 != 0 goto label3;

        $r6 = r0.<org.springframework.asm.commons.SerialVersionUIDAdder: java.util.Collection svuidMethods>;

        $r5 = new org.springframework.asm.commons.SerialVersionUIDAdder$Item;

        specialinvoke $r5.<org.springframework.asm.commons.SerialVersionUIDAdder$Item: void <init>(java.lang.String,int,java.lang.String)>(r1, $i2, r2);

        interfaceinvoke $r6.<java.util.Collection: boolean add(java.lang.Object)>($r5);

     label3:
        $r9 = r0.<org.springframework.asm.commons.SerialVersionUIDAdder: org.springframework.asm.ClassVisitor cv>;

        $r10 = interfaceinvoke $r9.<org.springframework.asm.ClassVisitor: org.springframework.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(i0, r1, r2, r3, r4);

        return $r10;
    }

    public org.springframework.asm.FieldVisitor visitField(int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)
    {
        org.springframework.asm.commons.SerialVersionUIDAdder r0;
        org.springframework.asm.commons.SerialVersionUIDAdder$Item $r5;
        java.util.Collection $r6;
        int i0, $i1, $i2, $i3;
        org.springframework.asm.FieldVisitor $r7;
        java.lang.Object r4;
        java.lang.String r1, r2, r3;
        boolean $z0, $z1;

        r0 := @this: org.springframework.asm.commons.SerialVersionUIDAdder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.Object;

        $z0 = r0.<org.springframework.asm.commons.SerialVersionUIDAdder: boolean computeSVUID>;

        if $z0 == 0 goto label3;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("serialVersionUID");

        if $z1 == 0 goto label1;

        r0.<org.springframework.asm.commons.SerialVersionUIDAdder: boolean computeSVUID> = 0;

        r0.<org.springframework.asm.commons.SerialVersionUIDAdder: boolean hasSVUID> = 1;

     label1:
        $i3 = i0 & 223;

        $i1 = i0 & 2;

        if $i1 == 0 goto label2;

        $i2 = i0 & 136;

        if $i2 != 0 goto label3;

     label2:
        $r6 = r0.<org.springframework.asm.commons.SerialVersionUIDAdder: java.util.Collection svuidFields>;

        $r5 = new org.springframework.asm.commons.SerialVersionUIDAdder$Item;

        specialinvoke $r5.<org.springframework.asm.commons.SerialVersionUIDAdder$Item: void <init>(java.lang.String,int,java.lang.String)>(r1, $i3, r2);

        interfaceinvoke $r6.<java.util.Collection: boolean add(java.lang.Object)>($r5);

     label3:
        $r7 = specialinvoke r0.<org.springframework.asm.ClassAdapter: org.springframework.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>(i0, r1, r2, r3, r4);

        return $r7;
    }

    public void visitEnd()
    {
        java.lang.Throwable $r3;
        org.springframework.asm.commons.SerialVersionUIDAdder r0;
        org.springframework.asm.ClassVisitor $r2;
        long $l0;
        java.lang.RuntimeException $r4;
        java.lang.Long $r1;
        java.lang.StringBuffer $r5, $r6, $r8;
        java.lang.String $r7, $r9;
        boolean $z0, $z1;

        r0 := @this: org.springframework.asm.commons.SerialVersionUIDAdder;

        $z0 = r0.<org.springframework.asm.commons.SerialVersionUIDAdder: boolean computeSVUID>;

        if $z0 == 0 goto label4;

        $z1 = r0.<org.springframework.asm.commons.SerialVersionUIDAdder: boolean hasSVUID>;

        if $z1 != 0 goto label4;

     label1:
        $r2 = r0.<org.springframework.asm.commons.SerialVersionUIDAdder: org.springframework.asm.ClassVisitor cv>;

        $r1 = new java.lang.Long;

        $l0 = virtualinvoke r0.<org.springframework.asm.commons.SerialVersionUIDAdder: long computeSVUID()>();

        specialinvoke $r1.<java.lang.Long: void <init>(long)>($l0);

        interfaceinvoke $r2.<org.springframework.asm.ClassVisitor: org.springframework.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>(24, "serialVersionUID", "J", null, $r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error while computing SVUID for ");

        $r7 = r0.<org.springframework.asm.commons.SerialVersionUIDAdder: java.lang.String name>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r9, $r3);

        throw $r4;

     label4:
        specialinvoke r0.<org.springframework.asm.ClassAdapter: void visitEnd()>();

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected long computeSVUID() throws java.io.IOException
    {
        byte[] $r10, $r11;
        byte $b5;
        java.io.DataOutputStream r16, $r18;
        boolean $z0, $z1;
        java.util.Collection $r7, $r8, $r9;
        java.lang.Throwable $r15;
        org.springframework.asm.commons.SerialVersionUIDAdder r0;
        java.io.ByteArrayOutputStream $r17;
        java.lang.String[] $r5, $r6, $r12;
        long $l7, $l8, l9;
        short $s6, $s12;
        int $i0, $i1, $i2, $i3, $i4, i10, i11, $i14;
        java.lang.String $r3, $r4, $r13, $r14;

        r0 := @this: org.springframework.asm.commons.SerialVersionUIDAdder;

        $z0 = r0.<org.springframework.asm.commons.SerialVersionUIDAdder: boolean hasSVUID>;

        if $z0 == 0 goto label01;

        return 0L;

     label01:
        r16 = null;

        l9 = 0L;

     label02:
        $r17 = new java.io.ByteArrayOutputStream;

        specialinvoke $r17.<java.io.ByteArrayOutputStream: void <init>()>();

        $r18 = new java.io.DataOutputStream;

        specialinvoke $r18.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r17);

        r16 = $r18;

        $r3 = r0.<org.springframework.asm.commons.SerialVersionUIDAdder: java.lang.String name>;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String replace(char,char)>(47, 46);

        virtualinvoke $r18.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r4);

        $i0 = r0.<org.springframework.asm.commons.SerialVersionUIDAdder: int access>;

        $i1 = $i0 & 1553;

        virtualinvoke $r18.<java.io.DataOutputStream: void writeInt(int)>($i1);

        $r5 = r0.<org.springframework.asm.commons.SerialVersionUIDAdder: java.lang.String[] interfaces>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>($r5);

        i10 = 0;

     label03:
        $r6 = r0.<org.springframework.asm.commons.SerialVersionUIDAdder: java.lang.String[] interfaces>;

        $i2 = lengthof $r6;

        if i10 >= $i2 goto label04;

        $r12 = r0.<org.springframework.asm.commons.SerialVersionUIDAdder: java.lang.String[] interfaces>;

        $r13 = $r12[i10];

        $r14 = virtualinvoke $r13.<java.lang.String: java.lang.String replace(char,char)>(47, 46);

        virtualinvoke $r18.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r14);

        i10 = i10 + 1;

        goto label03;

     label04:
        $r7 = r0.<org.springframework.asm.commons.SerialVersionUIDAdder: java.util.Collection svuidFields>;

        specialinvoke r0.<org.springframework.asm.commons.SerialVersionUIDAdder: void writeItems(java.util.Collection,java.io.DataOutputStream,boolean)>($r7, $r18, 0);

        $z1 = r0.<org.springframework.asm.commons.SerialVersionUIDAdder: boolean hasStaticInitializer>;

        if $z1 == 0 goto label05;

        virtualinvoke $r18.<java.io.DataOutputStream: void writeUTF(java.lang.String)>("<clinit>");

        virtualinvoke $r18.<java.io.DataOutputStream: void writeInt(int)>(8);

        virtualinvoke $r18.<java.io.DataOutputStream: void writeUTF(java.lang.String)>("()V");

     label05:
        $r8 = r0.<org.springframework.asm.commons.SerialVersionUIDAdder: java.util.Collection svuidConstructors>;

        specialinvoke r0.<org.springframework.asm.commons.SerialVersionUIDAdder: void writeItems(java.util.Collection,java.io.DataOutputStream,boolean)>($r8, $r18, 1);

        $r9 = r0.<org.springframework.asm.commons.SerialVersionUIDAdder: java.util.Collection svuidMethods>;

        specialinvoke r0.<org.springframework.asm.commons.SerialVersionUIDAdder: void writeItems(java.util.Collection,java.io.DataOutputStream,boolean)>($r9, $r18, 1);

        virtualinvoke $r18.<java.io.DataOutputStream: void flush()>();

        $r10 = virtualinvoke $r17.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r11 = virtualinvoke r0.<org.springframework.asm.commons.SerialVersionUIDAdder: byte[] computeSHAdigest(byte[])>($r10);

        $i3 = lengthof $r11;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i3, 8);

        i11 = $i4 - 1;

     label06:
        if i11 < 0 goto label07;

        $l8 = l9 << 8;

        $b5 = $r11[i11];

        $s12 = (short) $b5;

        $s6 = $s12 & 255;

        $l7 = (long) $s6;

        l9 = $l8 | $l7;

        $i14 = (int) -1;

        i11 = i11 + $i14;

        goto label06;

     label07:
        if $r18 == null goto label11;

        virtualinvoke $r18.<java.io.DataOutputStream: void close()>();

        goto label11;

     label08:
        $r15 := @caughtexception;

     label09:
        if r16 == null goto label10;

        virtualinvoke r16.<java.io.DataOutputStream: void close()>();

     label10:
        throw $r15;

     label11:
        return l9;

        catch java.lang.Throwable from label02 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    protected byte[] computeSHAdigest(byte[])
    {
        byte[] r1, $r2;
        java.lang.UnsupportedOperationException $r4;
        org.springframework.asm.commons.SerialVersionUIDAdder r5;
        java.security.MessageDigest $r0;
        java.lang.Exception $r3;

        r5 := @this: org.springframework.asm.commons.SerialVersionUIDAdder;

        r1 := @parameter0: byte[];

     label1:
        $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA");

        $r2 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest(byte[])>(r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void writeItems(java.util.Collection, java.io.DataOutputStream, boolean) throws java.io.IOException
    {
        java.lang.Object[] $r2;
        org.springframework.asm.commons.SerialVersionUIDAdder r12;
        org.springframework.asm.commons.SerialVersionUIDAdder$Item $r6, $r8, $r9, $r10;
        java.io.DataOutputStream r5;
        int $i0, $i1, i2;
        java.lang.String $r7, $r11, $r13;
        boolean z0;
        java.util.Collection r0;
        org.springframework.asm.commons.SerialVersionUIDAdder$Item[] $r1, $r3, r4;

        r12 := @this: org.springframework.asm.commons.SerialVersionUIDAdder;

        r0 := @parameter0: java.util.Collection;

        r5 := @parameter1: java.io.DataOutputStream;

        z0 := @parameter2: boolean;

        $i0 = interfaceinvoke r0.<java.util.Collection: int size()>();

        $r1 = newarray (org.springframework.asm.commons.SerialVersionUIDAdder$Item)[$i0];

        $r2 = interfaceinvoke r0.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        $r3 = (org.springframework.asm.commons.SerialVersionUIDAdder$Item[]) $r2;

        r4 = (org.springframework.asm.commons.SerialVersionUIDAdder$Item[]) $r3;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>(r4);

        i2 = 0;

     label1:
        if i2 >= $i0 goto label4;

        $r6 = r4[i2];

        $r7 = $r6.<org.springframework.asm.commons.SerialVersionUIDAdder$Item: java.lang.String name>;

        virtualinvoke r5.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r7);

        $r8 = r4[i2];

        $i1 = $r8.<org.springframework.asm.commons.SerialVersionUIDAdder$Item: int access>;

        virtualinvoke r5.<java.io.DataOutputStream: void writeInt(int)>($i1);

        if z0 == 0 goto label2;

        $r10 = r4[i2];

        $r11 = $r10.<org.springframework.asm.commons.SerialVersionUIDAdder$Item: java.lang.String desc>;

        $r13 = virtualinvoke $r11.<java.lang.String: java.lang.String replace(char,char)>(47, 46);

        goto label3;

     label2:
        $r9 = r4[i2];

        $r13 = $r9.<org.springframework.asm.commons.SerialVersionUIDAdder$Item: java.lang.String desc>;

     label3:
        virtualinvoke r5.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r13);

        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }
}
