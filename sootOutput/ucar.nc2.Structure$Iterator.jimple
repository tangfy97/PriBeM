class ucar.nc2.Structure$Iterator extends java.lang.Object implements ucar.ma2.StructureDataIterator
{
    private int count;
    private int total;
    private int readStart;
    private int readCount;
    private int outerCount;
    private int readAtaTime;
    private ucar.ma2.ArrayStructure as;
    final ucar.nc2.Structure this$0;

    protected void <init>(ucar.nc2.Structure, int)
    {
        int i0;
        ucar.nc2.Structure$Iterator r0;
        ucar.nc2.Structure r1;

        r0 := @this: ucar.nc2.Structure$Iterator;

        r1 := @parameter0: ucar.nc2.Structure;

        i0 := @parameter1: int;

        r0.<ucar.nc2.Structure$Iterator: ucar.nc2.Structure this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.Structure$Iterator: ucar.ma2.ArrayStructure as> = null;

        virtualinvoke r0.<ucar.nc2.Structure$Iterator: ucar.ma2.StructureDataIterator reset()>();

        return;
    }

    public boolean hasNext()
    {
        int $i0, $i1;
        ucar.nc2.Structure$Iterator r0;
        boolean $z0;

        r0 := @this: ucar.nc2.Structure$Iterator;

        $i1 = r0.<ucar.nc2.Structure$Iterator: int count>;

        $i0 = r0.<ucar.nc2.Structure$Iterator: int total>;

        if $i1 >= $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public ucar.ma2.StructureDataIterator reset()
    {
        long $l0, $l2;
        ucar.nc2.Structure$Iterator r0;
        ucar.nc2.Structure $r1, $r2, $r3;
        int[] $r4;
        int $i1, $i3, $i4, $i5;

        r0 := @this: ucar.nc2.Structure$Iterator;

        r0.<ucar.nc2.Structure$Iterator: int count> = 0;

        $r1 = r0.<ucar.nc2.Structure$Iterator: ucar.nc2.Structure this$0>;

        $l0 = virtualinvoke $r1.<ucar.nc2.Structure: long getSize()>();

        $i1 = (int) $l0;

        r0.<ucar.nc2.Structure$Iterator: int total> = $i1;

        r0.<ucar.nc2.Structure$Iterator: int readStart> = 0;

        r0.<ucar.nc2.Structure$Iterator: int readCount> = 0;

        r0.<ucar.nc2.Structure$Iterator: int outerCount> = 0;

        $r2 = r0.<ucar.nc2.Structure$Iterator: ucar.nc2.Structure this$0>;

        $l2 = virtualinvoke $r2.<ucar.nc2.Structure: long getSize()>();

        $i4 = (int) $l2;

        $r3 = r0.<ucar.nc2.Structure$Iterator: ucar.nc2.Structure this$0>;

        $r4 = $r3.<ucar.nc2.Structure: int[] shape>;

        $i3 = $r4[0];

        $i5 = $i4 / $i3;

        r0.<ucar.nc2.Structure$Iterator: int readAtaTime> = $i5;

        return r0;
    }

    public int getCurrentRecno()
    {
        int $i0, $i1;
        ucar.nc2.Structure$Iterator r0;

        r0 := @this: ucar.nc2.Structure$Iterator;

        $i0 = r0.<ucar.nc2.Structure$Iterator: int count>;

        $i1 = $i0 - 1;

        return $i1;
    }

    public ucar.ma2.StructureData next() throws java.io.IOException
    {
        ucar.ma2.ArrayStructure $r1;
        ucar.nc2.Structure$Iterator r0;
        ucar.ma2.StructureData $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: ucar.nc2.Structure$Iterator;

        $i1 = r0.<ucar.nc2.Structure$Iterator: int count>;

        $i0 = r0.<ucar.nc2.Structure$Iterator: int readStart>;

        if $i1 < $i0 goto label1;

        specialinvoke r0.<ucar.nc2.Structure$Iterator: void readNextGeneralRank()>();

     label1:
        $i2 = r0.<ucar.nc2.Structure$Iterator: int count>;

        $i3 = $i2 + 1;

        r0.<ucar.nc2.Structure$Iterator: int count> = $i3;

        $r1 = r0.<ucar.nc2.Structure$Iterator: ucar.ma2.ArrayStructure as>;

        $i4 = r0.<ucar.nc2.Structure$Iterator: int readCount>;

        $i5 = $i4 + 1;

        r0.<ucar.nc2.Structure$Iterator: int readCount> = $i5;

        $r2 = virtualinvoke $r1.<ucar.ma2.ArrayStructure: ucar.ma2.StructureData getStructureData(int)>($i4);

        return $r2;
    }

    private void readNextGeneralRank() throws java.io.IOException
    {
        java.lang.IllegalStateException $r18;
        ucar.ma2.Section $r0;
        ucar.ma2.ArrayStructure $r7, $r8;
        long $l5, $l6, $l7;
        ucar.nc2.Structure$Iterator r1;
        ucar.nc2.Structure $r2, $r5;
        int[] $r3;
        int $i0, $i1, $i2, $i3, $i4, $i8, $i9, $i10;
        java.lang.String $r15;
        boolean $z0;
        java.io.PrintStream $r10;
        ucar.ma2.Range $r4;
        org.slf4j.Logger $r17;
        ucar.ma2.Array $r6;
        ucar.ma2.InvalidRangeException $r16;
        java.lang.StringBuilder $r9, $r11, $r12, $r13, $r14;

        r1 := @this: ucar.nc2.Structure$Iterator;

     label1:
        $r0 = new ucar.ma2.Section;

        $r2 = r1.<ucar.nc2.Structure$Iterator: ucar.nc2.Structure this$0>;

        $r3 = $r2.<ucar.nc2.Structure: int[] shape>;

        specialinvoke $r0.<ucar.ma2.Section: void <init>(int[])>($r3);

        $r4 = new ucar.ma2.Range;

        $i1 = r1.<ucar.nc2.Structure$Iterator: int outerCount>;

        $i0 = r1.<ucar.nc2.Structure$Iterator: int outerCount>;

        specialinvoke $r4.<ucar.ma2.Range: void <init>(int,int)>($i1, $i0);

        virtualinvoke $r0.<ucar.ma2.Section: ucar.ma2.Section setRange(int,ucar.ma2.Range)>(0, $r4);

        $r5 = r1.<ucar.nc2.Structure$Iterator: ucar.nc2.Structure this$0>;

        $r6 = virtualinvoke $r5.<ucar.nc2.Structure: ucar.ma2.Array read(ucar.ma2.Section)>($r0);

        $r7 = (ucar.ma2.ArrayStructure) $r6;

        r1.<ucar.nc2.Structure$Iterator: ucar.ma2.ArrayStructure as> = $r7;

        $z0 = <ucar.nc2.NetcdfFile: boolean debugStructureIterator>;

        if $z0 == 0 goto label2;

        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readNext inner=");

        $i9 = r1.<ucar.nc2.Structure$Iterator: int outerCount>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" total=");

        $i10 = r1.<ucar.nc2.Structure$Iterator: int outerCount>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r15);

     label2:
        $i2 = r1.<ucar.nc2.Structure$Iterator: int outerCount>;

        $i3 = $i2 + 1;

        r1.<ucar.nc2.Structure$Iterator: int outerCount> = $i3;

     label3:
        goto label5;

     label4:
        $r16 := @caughtexception;

        $r17 = <ucar.nc2.Structure: org.slf4j.Logger log>;

        interfaceinvoke $r17.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Structure.Iterator.readNext() ", $r16);

        $r18 = new java.lang.IllegalStateException;

        specialinvoke $r18.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Structure.Iterator.readNext() ", $r16);

        throw $r18;

     label5:
        $i4 = r1.<ucar.nc2.Structure$Iterator: int readStart>;

        $l5 = (long) $i4;

        $r8 = r1.<ucar.nc2.Structure$Iterator: ucar.ma2.ArrayStructure as>;

        $l6 = virtualinvoke $r8.<ucar.ma2.ArrayStructure: long getSize()>();

        $l7 = $l5 + $l6;

        $i8 = (int) $l7;

        r1.<ucar.nc2.Structure$Iterator: int readStart> = $i8;

        r1.<ucar.nc2.Structure$Iterator: int readCount> = 0;

        return;

        catch ucar.ma2.InvalidRangeException from label1 to label3 with label4;
    }

    public void setBufferSize(int)
    {
        int i0;
        ucar.nc2.Structure$Iterator r0;

        r0 := @this: ucar.nc2.Structure$Iterator;

        i0 := @parameter0: int;

        return;
    }
}
