public class tdb.tdbquery extends arq.query
{

    public static transient void main(java.lang.String[])
    {
        java.lang.String[] r1;
        tdb.tdbquery $r0;

        r1 := @parameter0: java.lang.String[];

        staticinvoke <tdb.cmdline.CmdTDB: void init()>();

        $r0 = new tdb.tdbquery;

        specialinvoke $r0.<tdb.tdbquery: void <init>(java.lang.String[])>(r1);

        virtualinvoke $r0.<tdb.tdbquery: void mainRun()>();

        return;
    }

    public void <init>(java.lang.String[])
    {
        java.lang.String[] r1;
        arq.cmdline.ModVersion $r2;
        tdb.tdbquery r0;

        r0 := @this: tdb.tdbquery;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<arq.query: void <init>(java.lang.String[])>(r1);

        $r2 = r0.<arq.query: arq.cmdline.ModVersion modVersion>;

        virtualinvoke $r2.<arq.cmdline.ModVersion: void addClass(java.lang.Class)>(class "Lcom/hp/hpl/jena/tdb/TDB;");

        return;
    }

    protected java.lang.String getSummary()
    {
        java.lang.StringBuilder $r0, $r3, $r4;
        java.lang.String $r2, $r5;
        tdb.tdbquery r1;

        r1 := @this: tdb.tdbquery;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<tdb.tdbquery: java.lang.String getCommandName()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" --loc=<path> --query=<query>");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    protected void processModulesAndArgs()
    {
        tdb.tdbquery r0;

        r0 := @this: tdb.tdbquery;

        specialinvoke r0.<arq.query: void processModulesAndArgs()>();

        return;
    }

    protected arq.cmdline.ModDataset setModDataset()
    {
        tdb.cmdline.ModTDBDataset $r0;
        tdb.tdbquery r1;

        r1 := @this: tdb.tdbquery;

        $r0 = new tdb.cmdline.ModTDBDataset;

        specialinvoke $r0.<tdb.cmdline.ModTDBDataset: void <init>()>();

        return $r0;
    }
}
