public class org.waveprotocol.wave.model.document.util.MutableDocumentProxy extends java.lang.Object implements org.waveprotocol.wave.model.document.MutableDocument
{
    private final java.lang.String noDelegateErrorMessage;
    private org.waveprotocol.wave.model.document.MutableDocument delegate;

    public void <init>()
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        specialinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: void <init>(org.waveprotocol.wave.model.document.MutableDocument,java.lang.String)>(null, "delegate document is not set");

        return;
    }

    public void <init>(org.waveprotocol.wave.model.document.MutableDocument, java.lang.String)
    {
        org.waveprotocol.wave.model.document.MutableDocument r1;
        java.lang.String r2;
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        r1 := @parameter0: org.waveprotocol.wave.model.document.MutableDocument;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument delegate> = r1;

        r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: java.lang.String noDelegateErrorMessage> = r2;

        return;
    }

    protected void setDelegate(org.waveprotocol.wave.model.document.MutableDocument)
    {
        org.waveprotocol.wave.model.document.MutableDocument r1;
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        r1 := @parameter0: org.waveprotocol.wave.model.document.MutableDocument;

        r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument delegate> = r1;

        return;
    }

    protected boolean hasDelegate()
    {
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        $r1 = r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument delegate>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected org.waveprotocol.wave.model.document.MutableDocument getDelegate()
    {
        java.lang.IllegalStateException $r2;
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        $z0 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: boolean hasDelegate()>();

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MutableDocumentProxy: ");

        $r5 = r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: java.lang.String noDelegateErrorMessage>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label1:
        $r1 = r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument delegate>;

        return $r1;
    }

    public void 'with'(org.waveprotocol.wave.model.document.MutableDocument$Action)
    {
        org.waveprotocol.wave.model.document.MutableDocument$Action r2;
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        r2 := @parameter0: org.waveprotocol.wave.model.document.MutableDocument$Action;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: void 'with'(org.waveprotocol.wave.model.document.MutableDocument$Action)>(r2);

        return;
    }

    public java.lang.Object 'with'(org.waveprotocol.wave.model.document.MutableDocument$Method)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        java.lang.Object $r3;
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        org.waveprotocol.wave.model.document.MutableDocument$Method r2;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        r2 := @parameter0: org.waveprotocol.wave.model.document.MutableDocument$Method;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $r3 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: java.lang.Object 'with'(org.waveprotocol.wave.model.document.MutableDocument$Method)>(r2);

        return $r3;
    }

    public org.waveprotocol.wave.model.document.AnnotationCursor annotationCursor(int, int, org.waveprotocol.wave.model.util.ReadableStringSet)
    {
        org.waveprotocol.wave.model.util.ReadableStringSet r2;
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        org.waveprotocol.wave.model.document.AnnotationCursor $r3;
        int i0, i1;
        org.waveprotocol.wave.model.document.MutableDocument $r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 := @parameter2: org.waveprotocol.wave.model.util.ReadableStringSet;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $r3 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: org.waveprotocol.wave.model.document.AnnotationCursor annotationCursor(int,int,org.waveprotocol.wave.model.util.ReadableStringSet)>(i0, i1, r2);

        return $r3;
    }

    public java.lang.Iterable annotationIntervals(int, int, org.waveprotocol.wave.model.util.ReadableStringSet)
    {
        org.waveprotocol.wave.model.util.ReadableStringSet r2;
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        int i0, i1;
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        java.lang.Iterable $r3;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 := @parameter2: org.waveprotocol.wave.model.util.ReadableStringSet;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $r3 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: java.lang.Iterable annotationIntervals(int,int,org.waveprotocol.wave.model.util.ReadableStringSet)>(i0, i1, r2);

        return $r3;
    }

    public java.lang.Object appendXml(org.waveprotocol.wave.model.document.util.XmlStringBuilder)
    {
        org.waveprotocol.wave.model.document.util.XmlStringBuilder r2;
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        java.lang.Object $r3;
        org.waveprotocol.wave.model.document.MutableDocument $r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        r2 := @parameter0: org.waveprotocol.wave.model.document.util.XmlStringBuilder;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $r3 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: java.lang.Object appendXml(org.waveprotocol.wave.model.document.util.XmlStringBuilder)>(r2);

        return $r3;
    }

    public java.lang.Object asElement(java.lang.Object)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        java.lang.Object r2, $r3;
        org.waveprotocol.wave.model.document.MutableDocument $r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $r3 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: java.lang.Object asElement(java.lang.Object)>(r2);

        return $r3;
    }

    public java.lang.Object asText(java.lang.Object)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        java.lang.Object r2, $r3;
        org.waveprotocol.wave.model.document.MutableDocument $r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $r3 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: java.lang.Object asText(java.lang.Object)>(r2);

        return $r3;
    }

    public java.lang.Object createChildElement(java.lang.Object, java.lang.String, java.util.Map)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        java.util.Map r4;
        java.lang.Object r2, $r5;
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        java.lang.String r3;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.util.Map;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $r5 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: java.lang.Object createChildElement(java.lang.Object,java.lang.String,java.util.Map)>(r2, r3, r4);

        return $r5;
    }

    public java.lang.Object createElement(org.waveprotocol.wave.model.document.util.Point, java.lang.String, java.util.Map)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        java.util.Map r4;
        java.lang.Object $r5;
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        java.lang.String r3;
        org.waveprotocol.wave.model.document.util.Point r2;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        r2 := @parameter0: org.waveprotocol.wave.model.document.util.Point;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.util.Map;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $r5 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: java.lang.Object createElement(org.waveprotocol.wave.model.document.util.Point,java.lang.String,java.util.Map)>(r2, r3, r4);

        return $r5;
    }

    public void deleteNode(java.lang.Object)
    {
        java.lang.Object r2;
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: void deleteNode(java.lang.Object)>(r2);

        return;
    }

    public org.waveprotocol.wave.model.document.util.Range deleteRange(int, int)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        int i0, i1;
        org.waveprotocol.wave.model.document.util.Range $r2;
        org.waveprotocol.wave.model.document.MutableDocument $r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: org.waveprotocol.wave.model.document.util.Range deleteRange(int,int)>(i0, i1);

        return $r2;
    }

    public org.waveprotocol.wave.model.document.util.PointRange deleteRange(org.waveprotocol.wave.model.document.util.Point, org.waveprotocol.wave.model.document.util.Point)
    {
        org.waveprotocol.wave.model.document.util.PointRange $r4;
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        org.waveprotocol.wave.model.document.util.Point r2, r3;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        r2 := @parameter0: org.waveprotocol.wave.model.document.util.Point;

        r3 := @parameter1: org.waveprotocol.wave.model.document.util.Point;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $r4 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: org.waveprotocol.wave.model.document.util.PointRange deleteRange(org.waveprotocol.wave.model.document.util.Point,org.waveprotocol.wave.model.document.util.Point)>(r2, r3);

        return $r4;
    }

    public void emptyElement(java.lang.Object)
    {
        java.lang.Object r2;
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: void emptyElement(java.lang.Object)>(r2);

        return;
    }

    public int firstAnnotationChange(int, int, java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        int i0, i1, $i2;
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        java.lang.String r2, r3;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $i2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: int firstAnnotationChange(int,int,java.lang.String,java.lang.Object)>(i0, i1, r2, r3);

        return $i2;
    }

    public void forEachAnnotationAt(int, org.waveprotocol.wave.model.util.ReadableStringMap$ProcV)
    {
        org.waveprotocol.wave.model.util.ReadableStringMap$ProcV r2;
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        int i0;
        org.waveprotocol.wave.model.document.MutableDocument $r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        i0 := @parameter0: int;

        r2 := @parameter1: org.waveprotocol.wave.model.util.ReadableStringMap$ProcV;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: void forEachAnnotationAt(int,org.waveprotocol.wave.model.util.ReadableStringMap$ProcV)>(i0, r2);

        return;
    }

    public java.lang.String getAnnotation(int, java.lang.String)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        int i0;
        java.lang.Object $r3;
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        java.lang.String r2, $r4;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $r3 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: java.lang.Object getAnnotation(int,java.lang.String)>(i0, r2);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public java.lang.String getAttribute(java.lang.Object, java.lang.String)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        java.lang.Object r2;
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        java.lang.String r3, $r4;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $r4 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: java.lang.String getAttribute(java.lang.Object,java.lang.String)>(r2, r3);

        return $r4;
    }

    public java.util.Map getAttributes(java.lang.Object)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        java.util.Map $r3;
        java.lang.Object r2;
        org.waveprotocol.wave.model.document.MutableDocument $r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $r3 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: java.util.Map getAttributes(java.lang.Object)>(r2);

        return $r3;
    }

    public java.lang.String getData(java.lang.Object)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        java.lang.Object r2;
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        java.lang.String $r3;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $r3 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: java.lang.String getData(java.lang.Object)>(r2);

        return $r3;
    }

    public java.lang.Object getDocumentElement()
    {
        java.lang.Object $r2;
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: java.lang.Object getDocumentElement()>();

        return $r2;
    }

    public java.lang.Object getFirstChild(java.lang.Object)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        java.lang.Object r2, $r3;
        org.waveprotocol.wave.model.document.MutableDocument $r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $r3 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: java.lang.Object getFirstChild(java.lang.Object)>(r2);

        return $r3;
    }

    public java.lang.Object getLastChild(java.lang.Object)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        java.lang.Object r2, $r3;
        org.waveprotocol.wave.model.document.MutableDocument $r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $r3 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: java.lang.Object getLastChild(java.lang.Object)>(r2);

        return $r3;
    }

    public int getLength(java.lang.Object)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        int $i0;
        java.lang.Object r2;
        org.waveprotocol.wave.model.document.MutableDocument $r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $i0 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: int getLength(java.lang.Object)>(r2);

        return $i0;
    }

    public int getLocation(java.lang.Object)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        int $i0;
        java.lang.Object r2;
        org.waveprotocol.wave.model.document.MutableDocument $r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $i0 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: int getLocation(java.lang.Object)>(r2);

        return $i0;
    }

    public int getLocation(org.waveprotocol.wave.model.document.util.Point)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        int $i0;
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        org.waveprotocol.wave.model.document.util.Point r2;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        r2 := @parameter0: org.waveprotocol.wave.model.document.util.Point;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $i0 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: int getLocation(org.waveprotocol.wave.model.document.util.Point)>(r2);

        return $i0;
    }

    public java.lang.Object getNextSibling(java.lang.Object)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        java.lang.Object r2, $r3;
        org.waveprotocol.wave.model.document.MutableDocument $r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $r3 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: java.lang.Object getNextSibling(java.lang.Object)>(r2);

        return $r3;
    }

    public short getNodeType(java.lang.Object)
    {
        short $s0;
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        java.lang.Object r2;
        org.waveprotocol.wave.model.document.MutableDocument $r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $s0 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: short getNodeType(java.lang.Object)>(r2);

        return $s0;
    }

    public java.lang.Object getParentElement(java.lang.Object)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        java.lang.Object r2, $r3;
        org.waveprotocol.wave.model.document.MutableDocument $r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $r3 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: java.lang.Object getParentElement(java.lang.Object)>(r2);

        return $r3;
    }

    public java.lang.Object getPreviousSibling(java.lang.Object)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        java.lang.Object r2, $r3;
        org.waveprotocol.wave.model.document.MutableDocument $r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $r3 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: java.lang.Object getPreviousSibling(java.lang.Object)>(r2);

        return $r3;
    }

    public java.lang.String getTagName(java.lang.Object)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        java.lang.Object r2;
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        java.lang.String $r3;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        r2 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $r3 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: java.lang.String getTagName(java.lang.Object)>(r2);

        return $r3;
    }

    public void insertText(int, java.lang.String)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        int i0;
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        java.lang.String r2;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: void insertText(int,java.lang.String)>(i0, r2);

        return;
    }

    public void insertText(org.waveprotocol.wave.model.document.util.Point, java.lang.String)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        java.lang.String r3;
        org.waveprotocol.wave.model.document.util.Point r2;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        r2 := @parameter0: org.waveprotocol.wave.model.document.util.Point;

        r3 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: void insertText(org.waveprotocol.wave.model.document.util.Point,java.lang.String)>(r2, r3);

        return;
    }

    public java.lang.Object insertXml(org.waveprotocol.wave.model.document.util.Point, org.waveprotocol.wave.model.document.util.XmlStringBuilder)
    {
        org.waveprotocol.wave.model.document.util.XmlStringBuilder r3;
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        java.lang.Object $r4;
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        org.waveprotocol.wave.model.document.util.Point r2;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        r2 := @parameter0: org.waveprotocol.wave.model.document.util.Point;

        r3 := @parameter1: org.waveprotocol.wave.model.document.util.XmlStringBuilder;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $r4 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: java.lang.Object insertXml(org.waveprotocol.wave.model.document.util.Point,org.waveprotocol.wave.model.document.util.XmlStringBuilder)>(r2, r3);

        return $r4;
    }

    public boolean isSameNode(java.lang.Object, java.lang.Object)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        java.lang.Object r2, r3;
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $z0 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: boolean isSameNode(java.lang.Object,java.lang.Object)>(r2, r3);

        return $z0;
    }

    public int lastAnnotationChange(int, int, java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        int i0, i1, $i2;
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        java.lang.String r2, r3;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $i2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: int lastAnnotationChange(int,int,java.lang.String,java.lang.Object)>(i0, i1, r2, r3);

        return $i2;
    }

    public org.waveprotocol.wave.model.document.util.Point locate(int)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        int i0;
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        org.waveprotocol.wave.model.document.util.Point $r2;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: org.waveprotocol.wave.model.document.util.Point locate(int)>(i0);

        return $r2;
    }

    public void moveSiblings(org.waveprotocol.wave.model.document.util.Point, java.lang.Object, java.lang.Object)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        java.lang.Object r3, r4;
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        org.waveprotocol.wave.model.document.util.Point r2;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        r2 := @parameter0: org.waveprotocol.wave.model.document.util.Point;

        r3 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.lang.Object;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: void moveSiblings(org.waveprotocol.wave.model.document.util.Point,java.lang.Object,java.lang.Object)>(r2, r3, r4);

        return;
    }

    public java.lang.Iterable rangedAnnotations(int, int, org.waveprotocol.wave.model.util.ReadableStringSet)
    {
        org.waveprotocol.wave.model.util.ReadableStringSet r2;
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        int i0, i1;
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        java.lang.Iterable $r3;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 := @parameter2: org.waveprotocol.wave.model.util.ReadableStringSet;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $r3 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: java.lang.Iterable rangedAnnotations(int,int,org.waveprotocol.wave.model.util.ReadableStringSet)>(i0, i1, r2);

        return $r3;
    }

    public void resetAnnotation(int, int, java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        int i0, i1;
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        java.lang.String r2, r3;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: void resetAnnotation(int,int,java.lang.String,java.lang.Object)>(i0, i1, r2, r3);

        return;
    }

    public void resetAnnotationsInRange(int, int, java.lang.String, java.util.List)
    {
        java.util.List r3;
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        int i0, i1;
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        java.lang.String r2;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.util.List;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: void resetAnnotationsInRange(int,int,java.lang.String,java.util.List)>(i0, i1, r2, r3);

        return;
    }

    public void setAnnotation(int, int, java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        int i0, i1;
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        java.lang.String r2, r3;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: void setAnnotation(int,int,java.lang.String,java.lang.Object)>(i0, i1, r2, r3);

        return;
    }

    public void setElementAttribute(java.lang.Object, java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        java.lang.Object r2;
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        java.lang.String r3, r4;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: void setElementAttribute(java.lang.Object,java.lang.String,java.lang.String)>(r2, r3, r4);

        return;
    }

    public void setElementAttributes(java.lang.Object, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        java.lang.Object r2;
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        org.waveprotocol.wave.model.document.operation.Attributes r3;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: void setElementAttributes(java.lang.Object,org.waveprotocol.wave.model.document.operation.Attributes)>(r2, r3);

        return;
    }

    public int size()
    {
        int $i0;
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $i0 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: int size()>();

        return $i0;
    }

    public void hackConsume(org.waveprotocol.wave.model.document.operation.Nindo)
    {
        org.waveprotocol.wave.model.document.operation.Nindo r2;
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        r2 := @parameter0: org.waveprotocol.wave.model.document.operation.Nindo;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: void hackConsume(org.waveprotocol.wave.model.document.operation.Nindo)>(r2);

        return;
    }

    public org.waveprotocol.wave.model.document.operation.DocInitialization toInitialization()
    {
        org.waveprotocol.wave.model.document.operation.DocInitialization $r2;
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: org.waveprotocol.wave.model.document.operation.DocInitialization toInitialization()>();

        return $r2;
    }

    public void updateElementAttributes(java.lang.Object, java.util.Map)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        java.util.Map r3;
        java.lang.Object r2;
        org.waveprotocol.wave.model.document.MutableDocument $r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.util.Map;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: void updateElementAttributes(java.lang.Object,java.util.Map)>(r2, r3);

        return;
    }

    public org.waveprotocol.wave.model.util.ReadableStringSet knownKeys()
    {
        org.waveprotocol.wave.model.util.ReadableStringSet $r2;
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: org.waveprotocol.wave.model.util.ReadableStringSet knownKeys()>();

        return $r2;
    }

    public java.lang.String toXmlString()
    {
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        java.lang.String $r2;
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: java.lang.String toXmlString()>();

        return $r2;
    }

    public java.lang.String toDebugString()
    {
        org.waveprotocol.wave.model.document.MutableDocument $r1;
        java.lang.String $r2;
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.model.document.MutableDocument: java.lang.String toDebugString()>();

        return $r2;
    }

    public java.lang.String toString()
    {
        org.waveprotocol.wave.model.document.MutableDocument $r3;
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r2;
        java.lang.StringBuilder $r0, $r1, $r5, $r6;
        java.lang.String $r4, $r7;

        r2 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MutableDocumentProxy(");

        $r3 = virtualinvoke r2.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: org.waveprotocol.wave.model.document.MutableDocument getDelegate()>();

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public volatile java.lang.Object getAnnotation(int, java.lang.String)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        int i0;
        java.lang.String r1, $r2;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: java.lang.String getAnnotation(int,java.lang.String)>(i0, r1);

        return $r2;
    }

    public volatile int lastAnnotationChange(int, int, java.lang.String, java.lang.Object)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        int i0, i1, $i2;
        java.lang.Object r2;
        java.lang.String r1, $r3;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.Object;

        $r3 = (java.lang.String) r2;

        $i2 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: int lastAnnotationChange(int,int,java.lang.String,java.lang.String)>(i0, i1, r1, $r3);

        return $i2;
    }

    public volatile int firstAnnotationChange(int, int, java.lang.String, java.lang.Object)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        int i0, i1, $i2;
        java.lang.Object r2;
        java.lang.String r1, $r3;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.Object;

        $r3 = (java.lang.String) r2;

        $i2 = virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: int firstAnnotationChange(int,int,java.lang.String,java.lang.String)>(i0, i1, r1, $r3);

        return $i2;
    }

    public volatile void resetAnnotation(int, int, java.lang.String, java.lang.Object)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        int i0, i1;
        java.lang.Object r2;
        java.lang.String r1, $r3;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.Object;

        $r3 = (java.lang.String) r2;

        virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: void resetAnnotation(int,int,java.lang.String,java.lang.String)>(i0, i1, r1, $r3);

        return;
    }

    public volatile void setAnnotation(int, int, java.lang.String, java.lang.Object)
    {
        org.waveprotocol.wave.model.document.util.MutableDocumentProxy r0;
        int i0, i1;
        java.lang.Object r2;
        java.lang.String r1, $r3;

        r0 := @this: org.waveprotocol.wave.model.document.util.MutableDocumentProxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.Object;

        $r3 = (java.lang.String) r2;

        virtualinvoke r0.<org.waveprotocol.wave.model.document.util.MutableDocumentProxy: void setAnnotation(int,int,java.lang.String,java.lang.String)>(i0, i1, r1, $r3);

        return;
    }
}
