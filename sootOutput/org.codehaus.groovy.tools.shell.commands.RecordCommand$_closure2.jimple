class org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2 extends groovy.lang.Closure implements org.codehaus.groovy.runtime.GeneratedClosure
{
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;
    static java.lang.Class class$java$io$File;
    static java.lang.Class class$java$io$PrintWriter;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand;
    static java.lang.Class class$java$util$Date;

    public void <init>(java.lang.Object, java.lang.Object)
    {
        org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2 r2;
        java.lang.Class $r0, $r1, $r5, $r6;
        java.lang.Object r3, r4;

        r2 := @this: org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2;

        r3 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        $r0 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r5 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2");

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$0> = $r5;

        goto label2;

     label1:
        $r5 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r6 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$groovy$lang$MetaClass> = $r6;

        goto label4;

     label3:
        $r6 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        specialinvoke r2.<groovy.lang.Closure: void <init>(java.lang.Object,java.lang.Object)>(r3, r4);

        return;
    }

    public java.lang.Object doCall(java.lang.Object)
    {
        org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2 r3;
        boolean $z0, $z1;
        java.io.PrintWriter $r12;
        org.codehaus.groovy.runtime.GStringImpl $r47;
        java.lang.Object[] $r20, $r26, $r28, $r46, $r48;
        java.lang.String[] $r55;
        java.io.File $r16;
        java.lang.Class $r0, r1, $r2, $r5, $r6, $r8, $r10, $r13, $r14, $r17, $r18, $r19, $r22, $r23, $r24, $r27, $r29, $r30, $r31, $r32, $r33, $r34, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r50, $r51, $r52, $r57, $r58;
        java.lang.Object $r4, $r7, $r9, $r11, $r15, r21, $r25, $r35, $r36, $r44, $r45, $r49, $r53, $r54, $r56;

        r3 := @this: org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2;

        r21 := @parameter0: java.lang.Object;

        $r0 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r22 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2");

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$0> = $r22;

        goto label02;

     label01:
        $r22 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$0>;

     label02:
        r1 = $r22;

        $r2 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r23 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$groovy$lang$MetaClass> = $r23;

        goto label04;

     label03:
        $r23 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r3, "recording");

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r4);

        if $z0 != 0 goto label05;

        $z1 = 1;

        goto label06;

     label05:
        $z1 = 0;

     label06:
        if $z1 == 0 goto label07;

        $r20 = newarray (java.lang.Object)[1];

        $r20[0] = "Not recording";

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "fail", $r20);

        goto label07;

     label07:
        $r5 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

        if $r5 != null goto label08;

        $r19 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.RecordCommand");

        $r24 = $r19;

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand> = $r19;

        goto label09;

     label08:
        $r24 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

     label09:
        $r25 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r3, "writer");

        $r26 = newarray (java.lang.Object)[1];

        $r6 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

        if $r6 != null goto label10;

        $r18 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.RecordCommand");

        $r27 = $r18;

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand> = $r18;

        goto label11;

     label10:
        $r27 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

     label11:
        $r28 = newarray (java.lang.Object)[1];

        $r29 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

        if $r29 != null goto label12;

        $r30 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.RecordCommand");

        $r31 = $r30;

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand> = $r30;

        goto label13;

     label12:
        $r31 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

     label13:
        $r32 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$java$util$Date>;

        if $r32 != null goto label14;

        $r33 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$(java.lang.String)>("java.util.Date");

        $r34 = $r33;

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$java$util$Date> = $r33;

        goto label15;

     label14:
        $r34 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$java$util$Date>;

     label15:
        $r35 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>($r31, $r34);

        $r28[0] = $r35;

        $r36 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r27, "// CLOSED: ", "plus", $r28);

        $r26[0] = $r36;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r24, $r25, "println", $r26);

        $r37 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

        if $r37 != null goto label16;

        $r38 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.RecordCommand");

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand> = $r38;

        goto label17;

     label16:
        $r38 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

     label17:
        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r3, "writer");

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>($r38, $r7, "flush");

        $r8 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

        if $r8 != null goto label18;

        $r39 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.RecordCommand");

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand> = $r39;

        goto label19;

     label18:
        $r39 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

     label19:
        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r3, "writer");

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>($r39, $r9, "close");

        $r10 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$java$io$PrintWriter>;

        if $r10 != null goto label20;

        $r40 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$(java.lang.String)>("java.io.PrintWriter");

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$java$io$PrintWriter> = $r40;

        goto label21;

     label20:
        $r40 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$java$io$PrintWriter>;

     label21:
        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(null, $r40);

        $r12 = (java.io.PrintWriter) $r11;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setGroovyObjectProperty(java.lang.Object,java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>($r12, r1, r3, "writer");

        $r13 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

        if $r13 != null goto label22;

        $r17 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.RecordCommand");

        $r41 = $r17;

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand> = $r17;

        goto label23;

     label22:
        $r41 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

     label23:
        $r14 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

        if $r14 != null goto label24;

        $r42 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.RecordCommand");

        $r43 = $r42;

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand> = $r42;

        goto label25;

     label24:
        $r43 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

     label25:
        $r44 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r3, "io");

        $r45 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r43, $r44, "out");

        $r46 = newarray (java.lang.Object)[1];

        $r47 = new org.codehaus.groovy.runtime.GStringImpl;

        $r48 = newarray (java.lang.Object)[2];

        $r49 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r3, "file");

        $r48[0] = $r49;

        $r50 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

        if $r50 != null goto label26;

        $r51 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.RecordCommand");

        $r52 = $r51;

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand> = $r51;

        goto label27;

     label26:
        $r52 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$commands$RecordCommand>;

     label27:
        $r53 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r3, "file");

        $r54 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>($r52, $r53, "length");

        $r48[1] = $r54;

        $r55 = newarray (java.lang.String)[3];

        $r55[0] = "Recording stopped; session saved as: ";

        $r55[1] = " (";

        $r55[2] = " bytes)";

        specialinvoke $r47.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r48, $r55);

        $r46[0] = $r47;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r41, $r45, "println", $r46);

        $r56 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r3, "file");

        $r57 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$java$io$File>;

        if $r57 != null goto label28;

        $r58 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$(java.lang.String)>("java.io.File");

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$java$io$File> = $r58;

        goto label29;

     label28:
        $r58 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$java$io$File>;

     label29:
        $r15 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(null, $r58);

        $r16 = (java.io.File) $r15;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setGroovyObjectProperty(java.lang.Object,java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>($r16, r1, r3, "file");

        return $r56;
    }

    public java.lang.Object doCall()
    {
        java.lang.Object[] $r4;
        org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2 r3;
        java.lang.Class $r0, r1, $r2, $r6, $r7;
        java.lang.Object $r5;

        r3 := @this: org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2;

        $r0 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2");

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$0>;

     label2:
        r1 = $r6;

        $r2 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <org.codehaus.groovy.tools.shell.commands.RecordCommand$_closure2: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = null;

        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r3, "doCall", $r4);

        return $r5;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
