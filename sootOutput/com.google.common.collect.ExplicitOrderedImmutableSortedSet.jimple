final class com.google.common.collect.ExplicitOrderedImmutableSortedSet extends com.google.common.collect.ImmutableSortedSet
{
    private final java.lang.Object[] elements;
    private final int fromIndex;
    private final int toIndex;

    static com.google.common.collect.ImmutableSortedSet create(java.util.List)
    {
        com.google.common.collect.ImmutableSortedSet $r7;
        com.google.common.collect.ImmutableSet $r4;
        java.lang.Object[] $r5;
        com.google.common.collect.ImmutableMap $r2, $r3;
        java.util.List r1;
        com.google.common.collect.ExplicitOrderedImmutableSortedSet $r6;
        com.google.common.collect.ExplicitOrdering $r0;
        boolean $z0;

        r1 := @parameter0: java.util.List;

        $r0 = new com.google.common.collect.ExplicitOrdering;

        specialinvoke $r0.<com.google.common.collect.ExplicitOrdering: void <init>(java.util.List)>(r1);

        $r2 = $r0.<com.google.common.collect.ExplicitOrdering: com.google.common.collect.ImmutableMap rankMap>;

        $z0 = virtualinvoke $r2.<com.google.common.collect.ImmutableMap: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r7 = staticinvoke <com.google.common.collect.ExplicitOrderedImmutableSortedSet: com.google.common.collect.ImmutableSortedSet emptySet(java.util.Comparator)>($r0);

        return $r7;

     label1:
        $r3 = $r0.<com.google.common.collect.ExplicitOrdering: com.google.common.collect.ImmutableMap rankMap>;

        $r4 = virtualinvoke $r3.<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableSet keySet()>();

        $r5 = virtualinvoke $r4.<com.google.common.collect.ImmutableSet: java.lang.Object[] toArray()>();

        $r6 = new com.google.common.collect.ExplicitOrderedImmutableSortedSet;

        specialinvoke $r6.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: void <init>(java.lang.Object[],java.util.Comparator)>($r5, $r0);

        return $r6;
    }

    void <init>(java.lang.Object[], java.util.Comparator)
    {
        com.google.common.collect.ExplicitOrderedImmutableSortedSet r0;
        java.lang.Object[] r1;
        int $i0;
        java.util.Comparator r2;

        r0 := @this: com.google.common.collect.ExplicitOrderedImmutableSortedSet;

        r1 := @parameter0: java.lang.Object[];

        r2 := @parameter1: java.util.Comparator;

        $i0 = lengthof r1;

        specialinvoke r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: void <init>(java.lang.Object[],java.util.Comparator,int,int)>(r1, r2, 0, $i0);

        return;
    }

    void <init>(java.lang.Object[], java.util.Comparator, int, int)
    {
        com.google.common.collect.ExplicitOrderedImmutableSortedSet r0;
        java.lang.Object[] r2;
        int i0, i1;
        java.util.Comparator r1;

        r0 := @this: com.google.common.collect.ExplicitOrderedImmutableSortedSet;

        r2 := @parameter0: java.lang.Object[];

        r1 := @parameter1: java.util.Comparator;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<com.google.common.collect.ImmutableSortedSet: void <init>(java.util.Comparator)>(r1);

        r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: java.lang.Object[] elements> = r2;

        r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: int fromIndex> = i0;

        r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: int toIndex> = i1;

        return;
    }

    private com.google.common.collect.ImmutableMap rankMap()
    {
        com.google.common.collect.ExplicitOrderedImmutableSortedSet r0;
        com.google.common.collect.ImmutableMap $r3;
        com.google.common.collect.ExplicitOrdering r2;
        java.util.Comparator $r1;

        r0 := @this: com.google.common.collect.ExplicitOrderedImmutableSortedSet;

        $r1 = virtualinvoke r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: java.util.Comparator comparator()>();

        r2 = (com.google.common.collect.ExplicitOrdering) $r1;

        $r3 = r2.<com.google.common.collect.ExplicitOrdering: com.google.common.collect.ImmutableMap rankMap>;

        return $r3;
    }

    public com.google.common.collect.UnmodifiableIterator iterator()
    {
        com.google.common.collect.ExplicitOrderedImmutableSortedSet r0;
        java.lang.Object[] $r1;
        int $i0, $i1;
        com.google.common.collect.UnmodifiableIterator $r2;

        r0 := @this: com.google.common.collect.ExplicitOrderedImmutableSortedSet;

        $r1 = r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: java.lang.Object[] elements>;

        $i0 = r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: int fromIndex>;

        $i1 = virtualinvoke r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: int size()>();

        $r2 = staticinvoke <com.google.common.collect.Iterators: com.google.common.collect.UnmodifiableIterator forArray(java.lang.Object[],int,int)>($r1, $i0, $i1);

        return $r2;
    }

    public boolean isEmpty()
    {
        com.google.common.collect.ExplicitOrderedImmutableSortedSet r0;

        r0 := @this: com.google.common.collect.ExplicitOrderedImmutableSortedSet;

        return 0;
    }

    public int size()
    {
        com.google.common.collect.ExplicitOrderedImmutableSortedSet r0;
        int $i0, $i1, $i2;

        r0 := @this: com.google.common.collect.ExplicitOrderedImmutableSortedSet;

        $i1 = r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: int toIndex>;

        $i0 = r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: int fromIndex>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    public boolean contains(java.lang.Object)
    {
        com.google.common.collect.ImmutableMap $r1;
        java.lang.Integer r4;
        com.google.common.collect.ExplicitOrderedImmutableSortedSet r0;
        int $i0, $i1, $i2, $i3;
        java.lang.Object r2, $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.ExplicitOrderedImmutableSortedSet;

        r2 := @parameter0: java.lang.Object;

        $r1 = specialinvoke r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: com.google.common.collect.ImmutableMap rankMap()>();

        $r3 = virtualinvoke $r1.<com.google.common.collect.ImmutableMap: java.lang.Object get(java.lang.Object)>(r2);

        r4 = (java.lang.Integer) $r3;

        if r4 == null goto label1;

        $i0 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        $i1 = r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: int fromIndex>;

        if $i0 < $i1 goto label1;

        $i2 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        $i3 = r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: int toIndex>;

        if $i2 >= $i3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    boolean isPartialView()
    {
        com.google.common.collect.ExplicitOrderedImmutableSortedSet r0;
        java.lang.Object[] $r1;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: com.google.common.collect.ExplicitOrderedImmutableSortedSet;

        $i0 = r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: int fromIndex>;

        if $i0 != 0 goto label1;

        $i2 = r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: int toIndex>;

        $r1 = r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: java.lang.Object[] elements>;

        $i1 = lengthof $r1;

        if $i2 == $i1 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public java.lang.Object[] toArray()
    {
        com.google.common.collect.ExplicitOrderedImmutableSortedSet r0;
        java.lang.Object[] r1, $r2;
        int $i0, $i1, $i2;

        r0 := @this: com.google.common.collect.ExplicitOrderedImmutableSortedSet;

        $i0 = virtualinvoke r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: int size()>();

        r1 = newarray (java.lang.Object)[$i0];

        $r2 = r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: java.lang.Object[] elements>;

        $i1 = r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: int fromIndex>;

        $i2 = virtualinvoke r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: int size()>();

        staticinvoke <com.google.common.collect.Platform: void unsafeArrayCopy(java.lang.Object[],int,java.lang.Object[],int,int)>($r2, $i1, r1, 0, $i2);

        return r1;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        com.google.common.collect.ExplicitOrderedImmutableSortedSet r0;
        java.lang.Object[] r1, $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.google.common.collect.ExplicitOrderedImmutableSortedSet;

        r1 := @parameter0: java.lang.Object[];

        $i0 = virtualinvoke r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: int size()>();

        $i1 = lengthof r1;

        if $i1 >= $i0 goto label1;

        r1 = staticinvoke <com.google.common.collect.ObjectArrays: java.lang.Object[] newArray(java.lang.Object[],int)>(r1, $i0);

        goto label2;

     label1:
        $i2 = lengthof r1;

        if $i2 <= $i0 goto label2;

        r1[$i0] = null;

     label2:
        $r2 = r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: java.lang.Object[] elements>;

        $i3 = r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: int fromIndex>;

        staticinvoke <com.google.common.collect.Platform: void unsafeArrayCopy(java.lang.Object[],int,java.lang.Object[],int,int)>($r2, $i3, r1, 0, $i0);

        return r1;
    }

    public int hashCode()
    {
        com.google.common.collect.ExplicitOrderedImmutableSortedSet r0;
        java.lang.Object[] $r1;
        int $i0, $i1, i2, i3;
        java.lang.Object $r2;

        r0 := @this: com.google.common.collect.ExplicitOrderedImmutableSortedSet;

        i2 = 0;

        i3 = r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: int fromIndex>;

     label1:
        $i0 = r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: int toIndex>;

        if i3 >= $i0 goto label2;

        $r1 = r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: java.lang.Object[] elements>;

        $r2 = $r1[i3];

        $i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        i2 = i2 + $i1;

        i3 = i3 + 1;

        goto label1;

     label2:
        return i2;
    }

    public java.lang.Object first()
    {
        com.google.common.collect.ExplicitOrderedImmutableSortedSet r0;
        java.lang.Object[] $r1;
        int $i0;
        java.lang.Object $r2;

        r0 := @this: com.google.common.collect.ExplicitOrderedImmutableSortedSet;

        $r1 = r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: java.lang.Object[] elements>;

        $i0 = r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: int fromIndex>;

        $r2 = $r1[$i0];

        return $r2;
    }

    public java.lang.Object last()
    {
        com.google.common.collect.ExplicitOrderedImmutableSortedSet r0;
        java.lang.Object[] $r1;
        int $i0, $i1;
        java.lang.Object $r2;

        r0 := @this: com.google.common.collect.ExplicitOrderedImmutableSortedSet;

        $r1 = r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: java.lang.Object[] elements>;

        $i0 = r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: int toIndex>;

        $i1 = $i0 - 1;

        $r2 = $r1[$i1];

        return $r2;
    }

    com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object)
    {
        com.google.common.collect.ImmutableSortedSet $r2;
        com.google.common.collect.ExplicitOrderedImmutableSortedSet r0;
        int $i0, $i1;
        java.lang.Object r1;

        r0 := @this: com.google.common.collect.ExplicitOrderedImmutableSortedSet;

        r1 := @parameter0: java.lang.Object;

        $i0 = r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: int fromIndex>;

        $i1 = specialinvoke r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: int findSubsetIndex(java.lang.Object)>(r1);

        $r2 = specialinvoke r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: com.google.common.collect.ImmutableSortedSet createSubset(int,int)>($i0, $i1);

        return $r2;
    }

    com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.ImmutableSortedSet $r3;
        com.google.common.collect.ExplicitOrderedImmutableSortedSet r0;
        int $i0, $i1;
        java.lang.Object r1, r2;

        r0 := @this: com.google.common.collect.ExplicitOrderedImmutableSortedSet;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $i0 = specialinvoke r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: int findSubsetIndex(java.lang.Object)>(r1);

        $i1 = specialinvoke r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: int findSubsetIndex(java.lang.Object)>(r2);

        $r3 = specialinvoke r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: com.google.common.collect.ImmutableSortedSet createSubset(int,int)>($i0, $i1);

        return $r3;
    }

    com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object)
    {
        com.google.common.collect.ImmutableSortedSet $r2;
        com.google.common.collect.ExplicitOrderedImmutableSortedSet r0;
        int $i0, $i1;
        java.lang.Object r1;

        r0 := @this: com.google.common.collect.ExplicitOrderedImmutableSortedSet;

        r1 := @parameter0: java.lang.Object;

        $i0 = specialinvoke r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: int findSubsetIndex(java.lang.Object)>(r1);

        $i1 = r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: int toIndex>;

        $r2 = specialinvoke r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: com.google.common.collect.ImmutableSortedSet createSubset(int,int)>($i0, $i1);

        return $r2;
    }

    private int findSubsetIndex(java.lang.Object)
    {
        com.google.common.collect.ImmutableMap $r1;
        java.lang.Integer r4;
        java.lang.ClassCastException $r5;
        com.google.common.collect.ExplicitOrderedImmutableSortedSet r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Object r2, $r3;

        r0 := @this: com.google.common.collect.ExplicitOrderedImmutableSortedSet;

        r2 := @parameter0: java.lang.Object;

        $r1 = specialinvoke r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: com.google.common.collect.ImmutableMap rankMap()>();

        $r3 = virtualinvoke $r1.<com.google.common.collect.ImmutableMap: java.lang.Object get(java.lang.Object)>(r2);

        r4 = (java.lang.Integer) $r3;

        if r4 != null goto label1;

        $r5 = new java.lang.ClassCastException;

        specialinvoke $r5.<java.lang.ClassCastException: void <init>()>();

        throw $r5;

     label1:
        $i0 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        $i1 = r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: int fromIndex>;

        if $i0 > $i1 goto label2;

        $i6 = r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: int fromIndex>;

        return $i6;

     label2:
        $i2 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        $i3 = r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: int toIndex>;

        if $i2 < $i3 goto label3;

        $i5 = r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: int toIndex>;

        return $i5;

     label3:
        $i4 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        return $i4;
    }

    private com.google.common.collect.ImmutableSortedSet createSubset(int, int)
    {
        com.google.common.collect.ImmutableSortedSet $r2;
        java.lang.Object[] $r5;
        com.google.common.collect.ExplicitOrderedImmutableSortedSet r0, $r3;
        int i0, i1;
        java.util.Comparator $r1, $r4;

        r0 := @this: com.google.common.collect.ExplicitOrderedImmutableSortedSet;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 >= i1 goto label1;

        $r3 = new com.google.common.collect.ExplicitOrderedImmutableSortedSet;

        $r5 = r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: java.lang.Object[] elements>;

        $r4 = r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: java.util.Comparator comparator>;

        specialinvoke $r3.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: void <init>(java.lang.Object[],java.util.Comparator,int,int)>($r5, $r4, i0, i1);

        return $r3;

     label1:
        $r1 = r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: java.util.Comparator comparator>;

        $r2 = staticinvoke <com.google.common.collect.ExplicitOrderedImmutableSortedSet: com.google.common.collect.ImmutableSortedSet emptySet(java.util.Comparator)>($r1);

        return $r2;
    }

    int indexOf(java.lang.Object)
    {
        com.google.common.collect.ImmutableMap $r1;
        java.lang.Integer r4;
        com.google.common.collect.ExplicitOrderedImmutableSortedSet r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8;
        java.lang.Object r2, $r3;

        r0 := @this: com.google.common.collect.ExplicitOrderedImmutableSortedSet;

        r2 := @parameter0: java.lang.Object;

        $r1 = specialinvoke r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: com.google.common.collect.ImmutableMap rankMap()>();

        $r3 = virtualinvoke $r1.<com.google.common.collect.ImmutableMap: java.lang.Object get(java.lang.Object)>(r2);

        r4 = (java.lang.Integer) $r3;

        if r4 == null goto label1;

        $i0 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        $i1 = r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: int fromIndex>;

        if $i0 < $i1 goto label1;

        $i2 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        $i3 = r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: int toIndex>;

        if $i2 >= $i3 goto label1;

        $i4 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        $i5 = r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: int fromIndex>;

        $i6 = $i4 - $i5;

        goto label2;

     label1:
        $i8 = (int) -1;

        $i6 = $i8;

     label2:
        return $i6;
    }

    com.google.common.collect.ImmutableList createAsList()
    {
        com.google.common.collect.RegularImmutableList $r2;
        com.google.common.collect.ExplicitOrderedImmutableSortedSet r1;
        java.lang.Object[] $r3;
        com.google.common.collect.ImmutableSortedAsList $r0;
        int $i0, $i1;

        r1 := @this: com.google.common.collect.ExplicitOrderedImmutableSortedSet;

        $r0 = new com.google.common.collect.ImmutableSortedAsList;

        $r2 = new com.google.common.collect.RegularImmutableList;

        $r3 = r1.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: java.lang.Object[] elements>;

        $i0 = r1.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: int fromIndex>;

        $i1 = virtualinvoke r1.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: int size()>();

        specialinvoke $r2.<com.google.common.collect.RegularImmutableList: void <init>(java.lang.Object[],int,int)>($r3, $i0, $i1);

        specialinvoke $r0.<com.google.common.collect.ImmutableSortedAsList: void <init>(com.google.common.collect.ImmutableSortedSet,com.google.common.collect.ImmutableList)>(r1, $r2);

        return $r0;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.InvalidObjectException
    {
        java.io.ObjectInputStream r2;
        java.io.InvalidObjectException $r0;
        com.google.common.collect.ExplicitOrderedImmutableSortedSet r1;

        r1 := @this: com.google.common.collect.ExplicitOrderedImmutableSortedSet;

        r2 := @parameter0: java.io.ObjectInputStream;

        $r0 = new java.io.InvalidObjectException;

        specialinvoke $r0.<java.io.InvalidObjectException: void <init>(java.lang.String)>("Use SerializedForm");

        throw $r0;
    }

    java.lang.Object writeReplace()
    {
        com.google.common.collect.ExplicitOrderedImmutableSortedSet$SerializedForm $r0;
        com.google.common.collect.ExplicitOrderedImmutableSortedSet r1;
        java.lang.Object[] $r2;

        r1 := @this: com.google.common.collect.ExplicitOrderedImmutableSortedSet;

        $r0 = new com.google.common.collect.ExplicitOrderedImmutableSortedSet$SerializedForm;

        $r2 = virtualinvoke r1.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: java.lang.Object[] toArray()>();

        specialinvoke $r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet$SerializedForm: void <init>(java.lang.Object[])>($r2);

        return $r0;
    }

    public volatile java.util.Iterator iterator()
    {
        com.google.common.collect.ExplicitOrderedImmutableSortedSet r0;
        com.google.common.collect.UnmodifiableIterator $r1;

        r0 := @this: com.google.common.collect.ExplicitOrderedImmutableSortedSet;

        $r1 = virtualinvoke r0.<com.google.common.collect.ExplicitOrderedImmutableSortedSet: com.google.common.collect.UnmodifiableIterator iterator()>();

        return $r1;
    }
}
