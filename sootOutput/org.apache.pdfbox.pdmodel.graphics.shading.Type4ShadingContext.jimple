class org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext extends org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext
{
    private static final org.apache.commons.logging.Log LOG;
    private int bitsPerFlag;

    public void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4, java.awt.image.ColorModel, java.awt.geom.AffineTransform, org.apache.pdfbox.util.Matrix, int) throws java.io.IOException
    {
        byte $b20, $b24, $b28, $b33, $b34, $b40;
        org.apache.pdfbox.pdmodel.common.PDRange $r34, $r35, $r80;
        org.apache.pdfbox.cos.COSBase $r27;
        java.lang.StringBuilder $r9, $r10, $r16, $r17, $r21, $r22, $r31, $r32, $r38, $r39, $r40, $r41, $r45, $r46, $r47, $r48, $r53, $r54, $r58, $r59, $r63, $r65, $r76, $r77, $r90, $r93, $r94, $r99, $r100, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111, $r113, $r114, $r115;
        org.apache.pdfbox.pdmodel.common.PDRange[] r50;
        long $l6, l7, $l9, l10, $l18, $l22, $l37, $l38;
        float[] $r79;
        org.apache.pdfbox.cos.COSDictionary $r24;
        org.apache.pdfbox.cos.COSArray r28, $r67;
        int i0, $i1, $i2, $i3, $i4, $i5, $i8, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i19, $i21, $i23, $i25, $i26, $i27, $i29, $i30, $i31, $i32, i35, $i36, $i39, i41, $i42, $i43, $i44, $i45, $i46;
        org.apache.pdfbox.cos.COSStream r25;
        org.apache.pdfbox.cos.COSName $r26, $r64;
        org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4 r1;
        org.apache.pdfbox.util.Matrix r4;
        java.lang.Object $r83, $r86, $r91;
        org.apache.pdfbox.pdmodel.graphics.shading.Vertex $r70, $r71, $r72, $r73, $r84, $r87, $r92;
        org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext r0;
        java.awt.geom.AffineTransform r3;
        java.lang.Double $r13;
        java.util.ArrayList $r102;
        javax.imageio.stream.MemoryCacheImageInputStream $r112;
        java.lang.String $r11, $r18, $r23, $r33, $r42, $r49, $r55, $r60, $r66, $r78, $r95, $r101;
        java.io.EOFException $r81;
        float $f0, $f1, $f2, $f3;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;
        java.awt.image.ColorModel r2;
        org.apache.commons.logging.Log $r6, $r8, $r12, $r15, $r20, $r30, $r37, $r44, $r52, $r57, $r62, $r75, $r82, $r85, $r89, $r96, $r97;
        java.io.InputStream $r69;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4;

        r2 := @parameter1: java.awt.image.ColorModel;

        r3 := @parameter2: java.awt.geom.AffineTransform;

        r4 := @parameter3: org.apache.pdfbox.util.Matrix;

        i0 := @parameter4: int;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingResources,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,int)>(r1, r2, r3, r4, i0);

        $r102 = new java.util.ArrayList;

        specialinvoke $r102.<java.util.ArrayList: void <init>()>();

        $r6 = <org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r6.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Type4ShadingContext");

        $i1 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4: int getBitsPerComponent()>();

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: int bitsPerColorComponent> = $i1;

        $r8 = <org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: org.apache.commons.logging.Log LOG>;

        $r103 = new java.lang.StringBuilder;

        specialinvoke $r103.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bitsPerColorComponent: ");

        $i2 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: int bitsPerColorComponent>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r11);

        $i3 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4: int getBitsPerCoordinate()>();

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: int bitsPerCoordinate> = $i3;

        $r12 = <org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: org.apache.commons.logging.Log LOG>;

        $i4 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: int bitsPerCoordinate>;

        $d0 = (double) $i4;

        $d1 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, $d0);

        $d2 = $d1 - 1.0;

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        interfaceinvoke $r12.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r13);

        $i5 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: int bitsPerCoordinate>;

        $d3 = (double) $i5;

        $d4 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, $d3);

        $l6 = (long) $d4;

        l7 = $l6 - 1L;

        $i8 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: int bitsPerColorComponent>;

        $d5 = (double) $i8;

        $d6 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, $d5);

        $l9 = (long) $d6;

        l10 = $l9 - 1L;

        $r15 = <org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: org.apache.commons.logging.Log LOG>;

        $r104 = new java.lang.StringBuilder;

        specialinvoke $r104.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("maxSrcCoord: ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l7);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r18);

        $r20 = <org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: org.apache.commons.logging.Log LOG>;

        $r105 = new java.lang.StringBuilder;

        specialinvoke $r105.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("maxSrcColor: ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l10);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r20.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r23);

        $r24 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        r25 = (org.apache.pdfbox.cos.COSStream) $r24;

        $r26 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName DECODE>;

        $r27 = virtualinvoke $r24.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r26);

        r28 = (org.apache.pdfbox.cos.COSArray) $r27;

        $r30 = <org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: org.apache.commons.logging.Log LOG>;

        $r106 = new java.lang.StringBuilder;

        specialinvoke $r106.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("decode: ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r28);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r30.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r33);

        $r34 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4: org.apache.pdfbox.pdmodel.common.PDRange getDecodeForParameter(int)>(0);

        $r35 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4: org.apache.pdfbox.pdmodel.common.PDRange getDecodeForParameter(int)>(1);

        $r37 = <org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: org.apache.commons.logging.Log LOG>;

        $r107 = new java.lang.StringBuilder;

        specialinvoke $r107.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rangeX: ");

        $f0 = virtualinvoke $r34.<org.apache.pdfbox.pdmodel.common.PDRange: float getMin()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $f1 = virtualinvoke $r34.<org.apache.pdfbox.pdmodel.common.PDRange: float getMax()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r37.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r42);

        $r44 = <org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: org.apache.commons.logging.Log LOG>;

        $r108 = new java.lang.StringBuilder;

        specialinvoke $r108.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rangeY: ");

        $f2 = virtualinvoke $r35.<org.apache.pdfbox.pdmodel.common.PDRange: float getMin()>();

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $f3 = virtualinvoke $r35.<org.apache.pdfbox.pdmodel.common.PDRange: float getMax()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r44.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r49);

        $i11 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: int numberOfColorComponents>;

        r50 = newarray (org.apache.pdfbox.pdmodel.common.PDRange)[$i11];

        i35 = 0;

     label01:
        $i12 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: int numberOfColorComponents>;

        if i35 >= $i12 goto label02;

        $i25 = 2 + i35;

        $r80 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4: org.apache.pdfbox.pdmodel.common.PDRange getDecodeForParameter(int)>($i25);

        r50[i35] = $r80;

        i35 = i35 + 1;

        goto label01;

     label02:
        $r52 = <org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: org.apache.commons.logging.Log LOG>;

        $r109 = new java.lang.StringBuilder;

        specialinvoke $r109.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bitsPerCoordinate: ");

        $i13 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: int bitsPerCoordinate>;

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r52.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r55);

        $i14 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4: int getBitsPerFlag()>();

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: int bitsPerFlag> = $i14;

        $r57 = <org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: org.apache.commons.logging.Log LOG>;

        $r110 = new java.lang.StringBuilder;

        specialinvoke $r110.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bitsPerFlag: ");

        $i15 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: int bitsPerFlag>;

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r57.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r60);

        $r62 = <org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: org.apache.commons.logging.Log LOG>;

        $r111 = new java.lang.StringBuilder;

        specialinvoke $r111.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stream size: ");

        $r64 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LENGTH>;

        $i16 = virtualinvoke r25.<org.apache.pdfbox.cos.COSStream: int getInt(org.apache.pdfbox.cos.COSName)>($r64);

        $r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r62.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r66);

        $r67 = virtualinvoke r1.<org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4: org.apache.pdfbox.cos.COSArray getBackground()>();

        if $r67 == null goto label03;

        $r79 = virtualinvoke $r67.<org.apache.pdfbox.cos.COSArray: float[] toFloatArray()>();

        r0.<org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: float[] background> = $r79;

     label03:
        $r112 = new javax.imageio.stream.MemoryCacheImageInputStream;

        $r69 = virtualinvoke r25.<org.apache.pdfbox.cos.COSStream: java.io.InputStream getUnfilteredStream()>();

        specialinvoke $r112.<javax.imageio.stream.MemoryCacheImageInputStream: void <init>(java.io.InputStream)>($r69);

     label04:
        $i36 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: int bitsPerFlag>;

        $l37 = interfaceinvoke $r112.<javax.imageio.stream.ImageInputStream: long readBits(int)>($i36);

        $l38 = $l37 & 3L;

        $i39 = (int) $l38;

        $b40 = (byte) $i39;

        $r97 = <org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: org.apache.commons.logging.Log LOG>;

        $r113 = new java.lang.StringBuilder;

        specialinvoke $r113.<java.lang.StringBuilder: void <init>()>();

        $r99 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("flag: ");

        $i43 = (int) $b40;

        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i43);

        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r97.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r101);

        $i44 = (int) $b40;

        tableswitch($i44)
        {
            case 0: goto label05;
            case 1: goto label06;
            case 2: goto label06;
            default: goto label07;
        };

     label05:
        $r71 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: org.apache.pdfbox.pdmodel.graphics.shading.Vertex readVertex(javax.imageio.stream.ImageInputStream,byte,long,long,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange[])>($r112, $b40, l7, l10, $r34, $r35, r50);

        $i17 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: int bitsPerFlag>;

        $l18 = interfaceinvoke $r112.<javax.imageio.stream.ImageInputStream: long readBits(int)>($i17);

        $i19 = (int) $l18;

        $b20 = (byte) $i19;

        $r72 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: org.apache.pdfbox.pdmodel.graphics.shading.Vertex readVertex(javax.imageio.stream.ImageInputStream,byte,long,long,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange[])>($r112, $b20, l7, l10, $r34, $r35, r50);

        $i21 = r0.<org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: int bitsPerFlag>;

        $l22 = interfaceinvoke $r112.<javax.imageio.stream.ImageInputStream: long readBits(int)>($i21);

        $i23 = (int) $l22;

        $b24 = (byte) $i23;

        $r73 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: org.apache.pdfbox.pdmodel.graphics.shading.Vertex readVertex(javax.imageio.stream.ImageInputStream,byte,long,long,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange[])>($r112, $b24, l7, l10, $r34, $r35, r50);

        virtualinvoke $r102.<java.util.ArrayList: boolean add(java.lang.Object)>($r71);

        virtualinvoke $r102.<java.util.ArrayList: boolean add(java.lang.Object)>($r72);

        virtualinvoke $r102.<java.util.ArrayList: boolean add(java.lang.Object)>($r73);

        goto label08;

     label06:
        $r70 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: org.apache.pdfbox.pdmodel.graphics.shading.Vertex readVertex(javax.imageio.stream.ImageInputStream,byte,long,long,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange[])>($r112, $b40, l7, l10, $r34, $r35, r50);

        virtualinvoke $r102.<java.util.ArrayList: boolean add(java.lang.Object)>($r70);

        goto label08;

     label07:
        $r75 = <org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: org.apache.commons.logging.Log LOG>;

        $r114 = new java.lang.StringBuilder;

        specialinvoke $r114.<java.lang.StringBuilder: void <init>()>();

        $r76 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad flag: ");

        $i45 = (int) $b40;

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i45);

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r75.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r78);

     label08:
        goto label04;

     label09:
        $r81 := @caughtexception;

        $r82 = <org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r82.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("EOF");

        $i26 = virtualinvoke $r102.<java.util.ArrayList: int size()>();

        if $i26 >= 3 goto label10;

        $r96 = <org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r96.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Incomplete mesh is ignored");

        virtualinvoke $r102.<java.util.ArrayList: void clear()>();

        goto label11;

     label10:
        $i27 = virtualinvoke $r102.<java.util.ArrayList: int size()>();

        if $i27 <= 1 goto label11;

        $r86 = virtualinvoke $r102.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r87 = (org.apache.pdfbox.pdmodel.graphics.shading.Vertex) $r86;

        $b33 = $r87.<org.apache.pdfbox.pdmodel.graphics.shading.Vertex: byte flag>;

        if $b33 == 0 goto label11;

        $r89 = <org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: org.apache.commons.logging.Log LOG>;

        $r115 = new java.lang.StringBuilder;

        specialinvoke $r115.<java.lang.StringBuilder: void <init>()>();

        $r90 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Mesh with incorrect start flag ");

        $r91 = virtualinvoke $r102.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r92 = (org.apache.pdfbox.pdmodel.graphics.shading.Vertex) $r91;

        $b34 = $r92.<org.apache.pdfbox.pdmodel.graphics.shading.Vertex: byte flag>;

        $i46 = (int) $b34;

        $r93 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i46);

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is ignored");

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r89.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r95);

        virtualinvoke $r102.<java.util.ArrayList: void clear()>();

     label11:
        i41 = 0;

     label12:
        $i42 = virtualinvoke $r102.<java.util.ArrayList: int size()>();

        if i41 >= $i42 goto label16;

        $r83 = virtualinvoke $r102.<java.util.ArrayList: java.lang.Object get(int)>(i41);

        $r84 = (org.apache.pdfbox.pdmodel.graphics.shading.Vertex) $r83;

        $b28 = $r84.<org.apache.pdfbox.pdmodel.graphics.shading.Vertex: byte flag>;

        if $b28 != 0 goto label15;

        $i29 = i41 + 2;

        $i30 = virtualinvoke $r102.<java.util.ArrayList: int size()>();

        if $i29 < $i30 goto label14;

        $r85 = <org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r85.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Mesh with incomplete triangle");

     label13:
        $i31 = virtualinvoke $r102.<java.util.ArrayList: int size()>();

        $i32 = i41 + 1;

        if $i31 < $i32 goto label16;

        virtualinvoke $r102.<java.util.ArrayList: java.lang.Object remove(int)>(i41);

        goto label13;

     label14:
        i41 = i41 + 3;

        goto label12;

     label15:
        i41 = i41 + 1;

        goto label12;

     label16:
        goto label17;

     label17:
        interfaceinvoke $r112.<javax.imageio.stream.ImageInputStream: void close()>();

        virtualinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: void transformVertices(java.util.ArrayList,org.apache.pdfbox.util.Matrix,java.awt.geom.AffineTransform,int)>($r102, r4, r3, i0);

        specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: void createTriangleList(java.util.ArrayList)>($r102);

        return;

        catch java.io.EOFException from label04 to label08 with label09;
    }

    private void createTriangleList(java.util.ArrayList)
    {
        java.awt.geom.Point2D r9, r10, r11;
        float[] r12, r13, r14;
        java.util.ArrayList r0, $r5;
        byte $b1;
        org.apache.pdfbox.pdmodel.graphics.shading.Vertex r15, r16, r17, r18, r19;
        int $i0, i2, i3, $i4;
        boolean $z0;
        org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext r4;
        org.apache.pdfbox.pdmodel.graphics.shading.GouraudTriangle $r21;
        java.lang.Object $r1, $r2, $r6, $r7, $r8;
        org.apache.commons.logging.Log $r3;

        r4 := @this: org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext;

        r0 := @parameter0: java.util.ArrayList;

        r9 = null;

        r10 = null;

        r11 = null;

        r12 = null;

        r13 = null;

        r14 = null;

        i2 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        if i2 >= $i0 goto label8;

        $r1 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r15 = (org.apache.pdfbox.pdmodel.graphics.shading.Vertex) $r1;

        $b1 = r15.<org.apache.pdfbox.pdmodel.graphics.shading.Vertex: byte flag>;

        $i4 = (int) $b1;

        tableswitch($i4)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            default: goto label5;
        };

     label2:
        r9 = r15.<org.apache.pdfbox.pdmodel.graphics.shading.Vertex: java.awt.geom.Point2D point>;

        r12 = r15.<org.apache.pdfbox.pdmodel.graphics.shading.Vertex: float[] color>;

        i3 = i2 + 1;

        $r7 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r16 = (org.apache.pdfbox.pdmodel.graphics.shading.Vertex) $r7;

        r10 = r16.<org.apache.pdfbox.pdmodel.graphics.shading.Vertex: java.awt.geom.Point2D point>;

        r13 = r16.<org.apache.pdfbox.pdmodel.graphics.shading.Vertex: float[] color>;

        i2 = i3 + 1;

        $r8 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r17 = (org.apache.pdfbox.pdmodel.graphics.shading.Vertex) $r8;

        r11 = r17.<org.apache.pdfbox.pdmodel.graphics.shading.Vertex: java.awt.geom.Point2D point>;

        r14 = r17.<org.apache.pdfbox.pdmodel.graphics.shading.Vertex: float[] color>;

        goto label5;

     label3:
        r9 = r10;

        r12 = r13;

        r10 = r11;

        r13 = r14;

        $r6 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r18 = (org.apache.pdfbox.pdmodel.graphics.shading.Vertex) $r6;

        r11 = r18.<org.apache.pdfbox.pdmodel.graphics.shading.Vertex: java.awt.geom.Point2D point>;

        r14 = r18.<org.apache.pdfbox.pdmodel.graphics.shading.Vertex: float[] color>;

        goto label5;

     label4:
        r10 = r11;

        r13 = r14;

        $r2 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r19 = (org.apache.pdfbox.pdmodel.graphics.shading.Vertex) $r2;

        r11 = r19.<org.apache.pdfbox.pdmodel.graphics.shading.Vertex: java.awt.geom.Point2D point>;

        r14 = r19.<org.apache.pdfbox.pdmodel.graphics.shading.Vertex: float[] color>;

        goto label5;

     label5:
        i2 = i2 + 1;

        $r21 = new org.apache.pdfbox.pdmodel.graphics.shading.GouraudTriangle;

        specialinvoke $r21.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudTriangle: void <init>(java.awt.geom.Point2D,float[],java.awt.geom.Point2D,float[],java.awt.geom.Point2D,float[])>(r9, r12, r10, r13, r11, r14);

        $z0 = virtualinvoke $r21.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudTriangle: boolean isEmpty()>();

        if $z0 != 0 goto label6;

        $r5 = r4.<org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: java.util.ArrayList triangleList>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r21);

        goto label7;

     label6:
        $r3 = <org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r3.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("triangle is empty!");

     label7:
        goto label1;

     label8:
        return;
    }

    public void dispose()
    {
        org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext r0;

        r0 := @this: org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext;

        specialinvoke r0.<org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext: void dispose()>();

        return;
    }

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/apache/pdfbox/pdmodel/graphics/shading/Type4ShadingContext;");

        <org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext: org.apache.commons.logging.Log LOG> = $r0;

        return;
    }
}
