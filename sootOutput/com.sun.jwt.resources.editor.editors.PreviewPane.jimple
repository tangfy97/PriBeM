class com.sun.jwt.resources.editor.editors.PreviewPane extends javax.swing.JPanel implements java.beans.PropertyChangeListener
{
    private javax.swing.JLabel label;
    private int maxImgWidth;

    public void <init>(javax.swing.JFileChooser)
    {
        java.awt.Color $r6;
        com.sun.jwt.resources.editor.editors.PreviewPane r0;
        javax.swing.border.Border $r3, $r12;
        java.awt.Dimension $r9;
        javax.swing.JLabel $r4, $r5, $r7, $r8, $r10, $r11, $r13;
        javax.swing.JFileChooser r1;
        java.awt.BorderLayout $r2;

        r0 := @this: com.sun.jwt.resources.editor.editors.PreviewPane;

        r1 := @parameter0: javax.swing.JFileChooser;

        specialinvoke r0.<javax.swing.JPanel: void <init>()>();

        virtualinvoke r1.<javax.swing.JFileChooser: void setAccessory(javax.swing.JComponent)>(r0);

        virtualinvoke r1.<javax.swing.JFileChooser: void addPropertyChangeListener(java.beans.PropertyChangeListener)>(r0);

        $r2 = new java.awt.BorderLayout;

        specialinvoke $r2.<java.awt.BorderLayout: void <init>(int,int)>(5, 5);

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.PreviewPane: void setLayout(java.awt.LayoutManager)>($r2);

        $r3 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(5, 5, 5, 5);

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.PreviewPane: void setBorder(javax.swing.border.Border)>($r3);

        $r4 = new javax.swing.JLabel;

        specialinvoke $r4.<javax.swing.JLabel: void <init>(java.lang.String)>("Preview:");

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.PreviewPane: void add(java.awt.Component,java.lang.Object)>($r4, "North");

        $r5 = new javax.swing.JLabel;

        specialinvoke $r5.<javax.swing.JLabel: void <init>()>();

        r0.<com.sun.jwt.resources.editor.editors.PreviewPane: javax.swing.JLabel label> = $r5;

        $r7 = r0.<com.sun.jwt.resources.editor.editors.PreviewPane: javax.swing.JLabel label>;

        $r6 = <java.awt.Color: java.awt.Color WHITE>;

        virtualinvoke $r7.<javax.swing.JLabel: void setBackground(java.awt.Color)>($r6);

        $r8 = r0.<com.sun.jwt.resources.editor.editors.PreviewPane: javax.swing.JLabel label>;

        virtualinvoke $r8.<javax.swing.JLabel: void setOpaque(boolean)>(1);

        $r10 = r0.<com.sun.jwt.resources.editor.editors.PreviewPane: javax.swing.JLabel label>;

        $r9 = new java.awt.Dimension;

        specialinvoke $r9.<java.awt.Dimension: void <init>(int,int)>(200, 200);

        virtualinvoke $r10.<javax.swing.JLabel: void setPreferredSize(java.awt.Dimension)>($r9);

        r0.<com.sun.jwt.resources.editor.editors.PreviewPane: int maxImgWidth> = 195;

        $r11 = r0.<com.sun.jwt.resources.editor.editors.PreviewPane: javax.swing.JLabel label>;

        $r12 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEtchedBorder()>();

        virtualinvoke $r11.<javax.swing.JLabel: void setBorder(javax.swing.border.Border)>($r12);

        $r13 = r0.<com.sun.jwt.resources.editor.editors.PreviewPane: javax.swing.JLabel label>;

        virtualinvoke r0.<com.sun.jwt.resources.editor.editors.PreviewPane: void add(java.awt.Component,java.lang.Object)>($r13, "Center");

        return;
    }

    public void propertyChange(java.beans.PropertyChangeEvent)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        javax.swing.ImageIcon r8, $r10;
        java.lang.String $r1, $r2, $r6;
        java.beans.PropertyChangeEvent r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.awt.image.BufferedImage $r9;
        java.awt.Image $r11;
        com.sun.jwt.resources.editor.editors.PreviewPane r5;
        java.io.IOException $r7;
        java.io.File r4;
        javax.swing.JLabel $r12;
        float $f0, $f1, $f2, $f3, $f4;
        java.lang.Object $r3;

        r5 := @this: com.sun.jwt.resources.editor.editors.PreviewPane;

        r0 := @parameter0: java.beans.PropertyChangeEvent;

        r8 = null;

        $r1 = "SelectedFileChangedProperty";

        $r2 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.String getPropertyName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label5;

        $r3 = virtualinvoke r0.<java.beans.PropertyChangeEvent: java.lang.Object getNewValue()>();

        r4 = (java.io.File) $r3;

        if r4 == null goto label4;

        $r6 = virtualinvoke r4.<java.io.File: java.lang.String getAbsolutePath()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean endsWith(java.lang.String)>(".gif");

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke $r6.<java.lang.String: boolean endsWith(java.lang.String)>(".jpg");

        if $z2 != 0 goto label1;

        $z3 = virtualinvoke $r6.<java.lang.String: boolean endsWith(java.lang.String)>(".png");

        if $z3 != 0 goto label1;

        $z4 = virtualinvoke $r6.<java.lang.String: boolean endsWith(java.lang.String)>(".bmp");

        if $z4 == 0 goto label4;

     label1:
        $r9 = staticinvoke <javax.imageio.ImageIO: java.awt.image.BufferedImage read(java.io.File)>(r4);

        $i0 = virtualinvoke $r9.<java.awt.image.BufferedImage: int getWidth()>();

        $f0 = (float) $i0;

        $i1 = virtualinvoke $r9.<java.awt.image.BufferedImage: int getHeight()>();

        $f1 = (float) $i1;

        $f2 = $f1 / $f0;

        $i2 = r5.<com.sun.jwt.resources.editor.editors.PreviewPane: int maxImgWidth>;

        $f3 = (float) $i2;

        $f4 = $f3 * $f2;

        $r10 = new javax.swing.ImageIcon;

        $i3 = (int) $f3;

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i3);

        $i5 = (int) $f4;

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i5);

        $r11 = virtualinvoke $r9.<java.awt.image.BufferedImage: java.awt.Image getScaledInstance(int,int,int)>($i4, $i6, 4);

        specialinvoke $r10.<javax.swing.ImageIcon: void <init>(java.awt.Image)>($r11);

        r8 = $r10;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

     label4:
        $r12 = r5.<com.sun.jwt.resources.editor.editors.PreviewPane: javax.swing.JLabel label>;

        virtualinvoke $r12.<javax.swing.JLabel: void setIcon(javax.swing.Icon)>(r8);

        virtualinvoke r5.<com.sun.jwt.resources.editor.editors.PreviewPane: void repaint()>();

     label5:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
