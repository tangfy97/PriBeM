public class org.springframework.web.jsf.el.WebApplicationContextFacesELResolver extends javax.el.ELResolver
{
    public static final java.lang.String WEB_APPLICATION_CONTEXT_VARIABLE_NAME;
    protected final org.apache.commons.logging.Log logger;

    public void <init>()
    {
        org.springframework.web.jsf.el.WebApplicationContextFacesELResolver r0;
        java.lang.Class $r1;
        org.apache.commons.logging.Log $r2;

        r0 := @this: org.springframework.web.jsf.el.WebApplicationContextFacesELResolver;

        specialinvoke r0.<javax.el.ELResolver: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        r0.<org.springframework.web.jsf.el.WebApplicationContextFacesELResolver: org.apache.commons.logging.Log logger> = $r2;

        return;
    }

    public java.lang.Object getValue(javax.el.ELContext, java.lang.Object, java.lang.Object) throws javax.el.ELException
    {
        java.lang.Throwable $r26;
        org.springframework.web.jsf.el.WebApplicationContextFacesELResolver r4;
        javax.el.ELException $r25;
        java.lang.String $r2, $r7, $r15, $r20;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.springframework.web.context.WebApplicationContext $r5, r6;
        org.springframework.beans.BeansException $r21;
        java.lang.Object r0, r1, $r10;
        org.apache.commons.logging.Log $r8, $r9, $r12, $r17;
        java.lang.StringBuilder $r13, $r14, $r18, $r19, $r23, $r24;
        javax.el.ELContext r3;

        r4 := @this: org.springframework.web.jsf.el.WebApplicationContextFacesELResolver;

        r3 := @parameter0: javax.el.ELContext;

        r0 := @parameter1: java.lang.Object;

        r1 := @parameter2: java.lang.Object;

        if r0 == null goto label7;

        $z1 = r0 instanceof org.springframework.web.context.WebApplicationContext;

        if $z1 == 0 goto label8;

        r6 = (org.springframework.web.context.WebApplicationContext) r0;

        $r7 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r8 = r4.<org.springframework.web.jsf.el.WebApplicationContextFacesELResolver: org.apache.commons.logging.Log logger>;

        $z2 = interfaceinvoke $r8.<org.apache.commons.logging.Log: boolean isTraceEnabled()>();

        if $z2 == 0 goto label1;

        $r17 = r4.<org.springframework.web.jsf.el.WebApplicationContextFacesELResolver: org.apache.commons.logging.Log logger>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>(java.lang.String)>("Attempting to resolve property \'");

        $r18 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' in root WebApplicationContext");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r17.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r20);

     label1:
        $z3 = interfaceinvoke r6.<org.springframework.web.context.WebApplicationContext: boolean containsBean(java.lang.String)>($r7);

        if $z3 == 0 goto label6;

        $r9 = r4.<org.springframework.web.jsf.el.WebApplicationContextFacesELResolver: org.apache.commons.logging.Log logger>;

        $z4 = interfaceinvoke $r9.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z4 == 0 goto label2;

        $r12 = r4.<org.springframework.web.jsf.el.WebApplicationContextFacesELResolver: org.apache.commons.logging.Log logger>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>(java.lang.String)>("Successfully resolved property \'");

        $r13 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' in root WebApplicationContext");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r15);

     label2:
        virtualinvoke r3.<javax.el.ELContext: void setPropertyResolved(boolean)>(1);

     label3:
        $r10 = interfaceinvoke r6.<org.springframework.web.context.WebApplicationContext: java.lang.Object getBean(java.lang.String)>($r7);

     label4:
        return $r10;

     label5:
        $r21 := @caughtexception;

        $r25 = new javax.el.ELException;

        specialinvoke $r25.<javax.el.ELException: void <init>(java.lang.Throwable)>($r21);

        $r26 = (java.lang.Throwable) $r25;

        throw $r26;

     label6:
        return null;

     label7:
        $r2 = "webApplicationContext";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label8;

        virtualinvoke r3.<javax.el.ELContext: void setPropertyResolved(boolean)>(1);

        $r5 = virtualinvoke r4.<org.springframework.web.jsf.el.WebApplicationContextFacesELResolver: org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.el.ELContext)>(r3);

        return $r5;

     label8:
        return null;

        catch org.springframework.beans.BeansException from label3 to label4 with label5;
    }

    public java.lang.Class getType(javax.el.ELContext, java.lang.Object, java.lang.Object) throws javax.el.ELException
    {
        java.lang.Throwable $r25;
        org.springframework.web.jsf.el.WebApplicationContextFacesELResolver r6;
        javax.el.ELException $r24;
        java.lang.String $r2, $r5, $r14, $r19;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.springframework.web.context.WebApplicationContext r4;
        org.springframework.beans.BeansException $r20;
        java.lang.Object r0, r1;
        org.apache.commons.logging.Log $r7, $r8, $r11, $r16;
        java.lang.Class $r9;
        java.lang.StringBuilder $r12, $r13, $r17, $r18, $r22, $r23;
        javax.el.ELContext r3;

        r6 := @this: org.springframework.web.jsf.el.WebApplicationContextFacesELResolver;

        r3 := @parameter0: javax.el.ELContext;

        r0 := @parameter1: java.lang.Object;

        r1 := @parameter2: java.lang.Object;

        if r0 == null goto label7;

        $z1 = r0 instanceof org.springframework.web.context.WebApplicationContext;

        if $z1 == 0 goto label8;

        r4 = (org.springframework.web.context.WebApplicationContext) r0;

        $r5 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r7 = r6.<org.springframework.web.jsf.el.WebApplicationContextFacesELResolver: org.apache.commons.logging.Log logger>;

        $z2 = interfaceinvoke $r7.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z2 == 0 goto label1;

        $r16 = r6.<org.springframework.web.jsf.el.WebApplicationContextFacesELResolver: org.apache.commons.logging.Log logger>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>("Attempting to resolve property \'");

        $r17 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' in root WebApplicationContext");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r16.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r19);

     label1:
        $z3 = interfaceinvoke r4.<org.springframework.web.context.WebApplicationContext: boolean containsBean(java.lang.String)>($r5);

        if $z3 == 0 goto label6;

        $r8 = r6.<org.springframework.web.jsf.el.WebApplicationContextFacesELResolver: org.apache.commons.logging.Log logger>;

        $z4 = interfaceinvoke $r8.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z4 == 0 goto label2;

        $r11 = r6.<org.springframework.web.jsf.el.WebApplicationContextFacesELResolver: org.apache.commons.logging.Log logger>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>(java.lang.String)>("Successfully resolved property \'");

        $r12 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' in root WebApplicationContext");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r11.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r14);

     label2:
        virtualinvoke r3.<javax.el.ELContext: void setPropertyResolved(boolean)>(1);

     label3:
        $r9 = interfaceinvoke r4.<org.springframework.web.context.WebApplicationContext: java.lang.Class getType(java.lang.String)>($r5);

     label4:
        return $r9;

     label5:
        $r20 := @caughtexception;

        $r24 = new javax.el.ELException;

        specialinvoke $r24.<javax.el.ELException: void <init>(java.lang.Throwable)>($r20);

        $r25 = (java.lang.Throwable) $r24;

        throw $r25;

     label6:
        return null;

     label7:
        $r2 = "webApplicationContext";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label8;

        virtualinvoke r3.<javax.el.ELContext: void setPropertyResolved(boolean)>(1);

        return class "Lorg/springframework/web/context/WebApplicationContext;";

     label8:
        return null;

        catch org.springframework.beans.BeansException from label3 to label4 with label5;
    }

    public void setValue(javax.el.ELContext, java.lang.Object, java.lang.Object, java.lang.Object) throws javax.el.ELException
    {
        org.springframework.web.jsf.el.WebApplicationContextFacesELResolver r0;
        java.lang.Object r2, r3, r4;
        javax.el.ELContext r1;

        r0 := @this: org.springframework.web.jsf.el.WebApplicationContextFacesELResolver;

        r1 := @parameter0: javax.el.ELContext;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        return;
    }

    public boolean isReadOnly(javax.el.ELContext, java.lang.Object, java.lang.Object) throws javax.el.ELException
    {
        org.springframework.web.jsf.el.WebApplicationContextFacesELResolver r2;
        java.lang.Object r0, r3;
        javax.el.ELContext r1;
        boolean $z0;

        r2 := @this: org.springframework.web.jsf.el.WebApplicationContextFacesELResolver;

        r1 := @parameter0: javax.el.ELContext;

        r0 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $z0 = r0 instanceof org.springframework.web.context.WebApplicationContext;

        if $z0 == 0 goto label1;

        virtualinvoke r1.<javax.el.ELContext: void setPropertyResolved(boolean)>(1);

        return 0;

     label1:
        return 0;
    }

    public java.util.Iterator getFeatureDescriptors(javax.el.ELContext, java.lang.Object)
    {
        org.springframework.web.jsf.el.WebApplicationContextFacesELResolver r0;
        java.lang.Object r2;
        javax.el.ELContext r1;

        r0 := @this: org.springframework.web.jsf.el.WebApplicationContextFacesELResolver;

        r1 := @parameter0: javax.el.ELContext;

        r2 := @parameter1: java.lang.Object;

        return null;
    }

    public java.lang.Class getCommonPropertyType(javax.el.ELContext, java.lang.Object)
    {
        org.springframework.web.jsf.el.WebApplicationContextFacesELResolver r0;
        java.lang.Object r2;
        javax.el.ELContext r1;

        r0 := @this: org.springframework.web.jsf.el.WebApplicationContextFacesELResolver;

        r1 := @parameter0: javax.el.ELContext;

        r2 := @parameter1: java.lang.Object;

        return class "Ljava/lang/Object;";
    }

    protected org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.el.ELContext)
    {
        org.springframework.web.jsf.el.WebApplicationContextFacesELResolver r2;
        javax.faces.context.FacesContext $r0;
        org.springframework.web.context.WebApplicationContext $r1;
        javax.el.ELContext r3;

        r2 := @this: org.springframework.web.jsf.el.WebApplicationContextFacesELResolver;

        r3 := @parameter0: javax.el.ELContext;

        $r0 = staticinvoke <javax.faces.context.FacesContext: javax.faces.context.FacesContext getCurrentInstance()>();

        $r1 = staticinvoke <org.springframework.web.jsf.FacesContextUtils: org.springframework.web.context.WebApplicationContext getRequiredWebApplicationContext(javax.faces.context.FacesContext)>($r0);

        return $r1;
    }

    public static void <clinit>()
    {
        <org.springframework.web.jsf.el.WebApplicationContextFacesELResolver: java.lang.String WEB_APPLICATION_CONTEXT_VARIABLE_NAME> = "webApplicationContext";

        return;
    }
}
