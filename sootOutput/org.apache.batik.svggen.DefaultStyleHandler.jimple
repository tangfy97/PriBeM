public class org.apache.batik.svggen.DefaultStyleHandler extends java.lang.Object implements org.apache.batik.svggen.StyleHandler, org.apache.batik.util.SVGConstants
{
    static java.util.Map ignoreAttributes;

    public void <init>()
    {
        org.apache.batik.svggen.DefaultStyleHandler r0;

        r0 := @this: org.apache.batik.svggen.DefaultStyleHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void setStyle(org.w3c.dom.Element, java.util.Map, org.apache.batik.svggen.SVGGeneratorContext)
    {
        java.util.Iterator $r4;
        java.util.Set $r3;
        org.apache.batik.svggen.DefaultStyleHandler r8;
        org.w3c.dom.Element r0;
        org.apache.batik.svggen.SVGGeneratorContext r11;
        java.util.Map r2;
        int $i0;
        java.lang.Object $r5, $r9;
        java.lang.String $r1, r6, $r7, $r10;
        boolean $z0, $z1;

        r8 := @this: org.apache.batik.svggen.DefaultStyleHandler;

        r0 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: java.util.Map;

        r11 := @parameter2: org.apache.batik.svggen.SVGGeneratorContext;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getTagName()>();

        $r3 = interfaceinvoke r2.<java.util.Map: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        $r7 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, r6);

        $i0 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        $z0 = virtualinvoke r8.<org.apache.batik.svggen.DefaultStyleHandler: boolean appliesTo(java.lang.String,java.lang.String)>(r6, $r1);

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        $r10 = (java.lang.String) $r9;

        interfaceinvoke r0.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, r6, $r10);

     label2:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        return;
    }

    protected boolean appliesTo(java.lang.String, java.lang.String)
    {
        java.util.Set r3;
        org.apache.batik.svggen.DefaultStyleHandler r5;
        java.util.Map $r1;
        java.lang.Object $r2;
        java.lang.String r0, r4;
        boolean $z0, $z1;

        r5 := @this: org.apache.batik.svggen.DefaultStyleHandler;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        $r1 = <org.apache.batik.svggen.DefaultStyleHandler: java.util.Map ignoreAttributes>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r3 = (java.util.Set) $r2;

        if r3 != null goto label1;

        return 1;

     label1:
        $z0 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>(r4);

        if $z0 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;
        java.util.HashSet $r1;
        java.util.Map $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <org.apache.batik.svggen.DefaultStyleHandler: java.util.Map ignoreAttributes> = $r0;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("font-size");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("font-family");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("font-style");

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>("font-weight");

        $r2 = <org.apache.batik.svggen.DefaultStyleHandler: java.util.Map ignoreAttributes>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("rect", $r1);

        $r3 = <org.apache.batik.svggen.DefaultStyleHandler: java.util.Map ignoreAttributes>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("circle", $r1);

        $r4 = <org.apache.batik.svggen.DefaultStyleHandler: java.util.Map ignoreAttributes>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ellipse", $r1);

        $r5 = <org.apache.batik.svggen.DefaultStyleHandler: java.util.Map ignoreAttributes>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("polygon", $r1);

        $r6 = <org.apache.batik.svggen.DefaultStyleHandler: java.util.Map ignoreAttributes>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("polygon", $r1);

        $r7 = <org.apache.batik.svggen.DefaultStyleHandler: java.util.Map ignoreAttributes>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("line", $r1);

        $r8 = <org.apache.batik.svggen.DefaultStyleHandler: java.util.Map ignoreAttributes>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("path", $r1);

        return;
    }
}
