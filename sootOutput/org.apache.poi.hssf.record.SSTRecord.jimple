public final class org.apache.poi.hssf.record.SSTRecord extends org.apache.poi.hssf.record.cont.ContinuableRecord
{
    public static final short sid;
    private static final org.apache.poi.hssf.record.common.UnicodeString EMPTY_STRING;
    static final int STD_RECORD_OVERHEAD;
    static final int SST_RECORD_OVERHEAD;
    static final int MAX_DATA_SPACE;
    private int field_1_num_strings;
    private int field_2_num_unique_strings;
    private org.apache.poi.util.IntMapper field_3_strings;
    private org.apache.poi.hssf.record.SSTDeserializer deserializer;
    int[] bucketAbsoluteOffsets;
    int[] bucketRelativeOffsets;

    public void <init>()
    {
        org.apache.poi.hssf.record.SSTRecord r0;
        org.apache.poi.hssf.record.SSTDeserializer $r2;
        org.apache.poi.util.IntMapper $r1, $r3;

        r0 := @this: org.apache.poi.hssf.record.SSTRecord;

        specialinvoke r0.<org.apache.poi.hssf.record.cont.ContinuableRecord: void <init>()>();

        r0.<org.apache.poi.hssf.record.SSTRecord: int field_1_num_strings> = 0;

        r0.<org.apache.poi.hssf.record.SSTRecord: int field_2_num_unique_strings> = 0;

        $r1 = new org.apache.poi.util.IntMapper;

        specialinvoke $r1.<org.apache.poi.util.IntMapper: void <init>()>();

        r0.<org.apache.poi.hssf.record.SSTRecord: org.apache.poi.util.IntMapper field_3_strings> = $r1;

        $r2 = new org.apache.poi.hssf.record.SSTDeserializer;

        $r3 = r0.<org.apache.poi.hssf.record.SSTRecord: org.apache.poi.util.IntMapper field_3_strings>;

        specialinvoke $r2.<org.apache.poi.hssf.record.SSTDeserializer: void <init>(org.apache.poi.util.IntMapper)>($r3);

        r0.<org.apache.poi.hssf.record.SSTRecord: org.apache.poi.hssf.record.SSTDeserializer deserializer> = $r2;

        return;
    }

    public int addString(org.apache.poi.hssf.record.common.UnicodeString)
    {
        org.apache.poi.hssf.record.SSTRecord r0;
        int $i0, $i1, $i2, $i3, $i4, i5, $i7;
        org.apache.poi.util.IntMapper $r2, $r3, $r4;
        org.apache.poi.hssf.record.common.UnicodeString r1, $r5;

        r0 := @this: org.apache.poi.hssf.record.SSTRecord;

        r1 := @parameter0: org.apache.poi.hssf.record.common.UnicodeString;

        $i0 = r0.<org.apache.poi.hssf.record.SSTRecord: int field_1_num_strings>;

        $i1 = $i0 + 1;

        r0.<org.apache.poi.hssf.record.SSTRecord: int field_1_num_strings> = $i1;

        if r1 != null goto label1;

        $r5 = <org.apache.poi.hssf.record.SSTRecord: org.apache.poi.hssf.record.common.UnicodeString EMPTY_STRING>;

        goto label2;

     label1:
        $r5 = r1;

     label2:
        $r2 = r0.<org.apache.poi.hssf.record.SSTRecord: org.apache.poi.util.IntMapper field_3_strings>;

        $i2 = virtualinvoke $r2.<org.apache.poi.util.IntMapper: int getIndex(java.lang.Object)>($r5);

        $i7 = (int) -1;

        if $i2 == $i7 goto label3;

        i5 = $i2;

        goto label4;

     label3:
        $r3 = r0.<org.apache.poi.hssf.record.SSTRecord: org.apache.poi.util.IntMapper field_3_strings>;

        i5 = virtualinvoke $r3.<org.apache.poi.util.IntMapper: int size()>();

        $i3 = r0.<org.apache.poi.hssf.record.SSTRecord: int field_2_num_unique_strings>;

        $i4 = $i3 + 1;

        r0.<org.apache.poi.hssf.record.SSTRecord: int field_2_num_unique_strings> = $i4;

        $r4 = r0.<org.apache.poi.hssf.record.SSTRecord: org.apache.poi.util.IntMapper field_3_strings>;

        staticinvoke <org.apache.poi.hssf.record.SSTDeserializer: void addToStringTable(org.apache.poi.util.IntMapper,org.apache.poi.hssf.record.common.UnicodeString)>($r4, $r5);

     label4:
        return i5;
    }

    public int getNumStrings()
    {
        int $i0;
        org.apache.poi.hssf.record.SSTRecord r0;

        r0 := @this: org.apache.poi.hssf.record.SSTRecord;

        $i0 = r0.<org.apache.poi.hssf.record.SSTRecord: int field_1_num_strings>;

        return $i0;
    }

    public int getNumUniqueStrings()
    {
        int $i0;
        org.apache.poi.hssf.record.SSTRecord r0;

        r0 := @this: org.apache.poi.hssf.record.SSTRecord;

        $i0 = r0.<org.apache.poi.hssf.record.SSTRecord: int field_2_num_unique_strings>;

        return $i0;
    }

    public org.apache.poi.hssf.record.common.UnicodeString getString(int)
    {
        org.apache.poi.hssf.record.SSTRecord r0;
        int i0;
        org.apache.poi.util.IntMapper $r1;
        java.lang.Object $r2;
        org.apache.poi.hssf.record.common.UnicodeString $r3;

        r0 := @this: org.apache.poi.hssf.record.SSTRecord;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hssf.record.SSTRecord: org.apache.poi.util.IntMapper field_3_strings>;

        $r2 = virtualinvoke $r1.<org.apache.poi.util.IntMapper: java.lang.Object get(int)>(i0);

        $r3 = (org.apache.poi.hssf.record.common.UnicodeString) $r2;

        return $r3;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r0, $r1, $r4, $r5, $r7, $r18, $r20;
        int $i0, $i1, $i2, i3;
        java.lang.String $r3, $r6, $r9, $r17, $r19;
        org.apache.poi.hssf.record.SSTRecord r2;
        org.apache.poi.util.IntMapper $r8, $r10;
        java.lang.Object $r11;
        java.lang.StringBuilder $r13, $r14, $r15, $r16;
        org.apache.poi.hssf.record.common.UnicodeString r12;

        r2 := @this: org.apache.poi.hssf.record.SSTRecord;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[SST]\n");

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    .numstrings     = ");

        $i0 = virtualinvoke r2.<org.apache.poi.hssf.record.SSTRecord: int getNumStrings()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r5 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    .uniquestrings  = ");

        $i1 = virtualinvoke r2.<org.apache.poi.hssf.record.SSTRecord: int getNumUniqueStrings()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        i3 = 0;

     label1:
        $r8 = r2.<org.apache.poi.hssf.record.SSTRecord: org.apache.poi.util.IntMapper field_3_strings>;

        $i2 = virtualinvoke $r8.<org.apache.poi.util.IntMapper: int size()>();

        if i3 >= $i2 goto label2;

        $r10 = r2.<org.apache.poi.hssf.record.SSTRecord: org.apache.poi.util.IntMapper field_3_strings>;

        $r11 = virtualinvoke $r10.<org.apache.poi.util.IntMapper: java.lang.Object get(int)>(i3);

        r12 = (org.apache.poi.hssf.record.common.UnicodeString) $r11;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .string_");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      = ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke r12.<org.apache.poi.hssf.record.common.UnicodeString: java.lang.String getDebugInfo()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        i3 = i3 + 1;

        goto label1;

     label2:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[/SST]\n");

        $r9 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }

    public short getSid()
    {
        org.apache.poi.hssf.record.SSTRecord r0;

        r0 := @this: org.apache.poi.hssf.record.SSTRecord;

        return 252;
    }

    public void <init>(org.apache.poi.hssf.record.RecordInputStream)
    {
        org.apache.poi.hssf.record.SSTRecord r0;
        org.apache.poi.hssf.record.SSTDeserializer $r3, $r5;
        org.apache.poi.hssf.record.RecordInputStream r1;
        int $i0, $i1, $i2;
        org.apache.poi.util.IntMapper $r2, $r4;

        r0 := @this: org.apache.poi.hssf.record.SSTRecord;

        r1 := @parameter0: org.apache.poi.hssf.record.RecordInputStream;

        specialinvoke r0.<org.apache.poi.hssf.record.cont.ContinuableRecord: void <init>()>();

        $i0 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: int readInt()>();

        r0.<org.apache.poi.hssf.record.SSTRecord: int field_1_num_strings> = $i0;

        $i1 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: int readInt()>();

        r0.<org.apache.poi.hssf.record.SSTRecord: int field_2_num_unique_strings> = $i1;

        $r2 = new org.apache.poi.util.IntMapper;

        specialinvoke $r2.<org.apache.poi.util.IntMapper: void <init>()>();

        r0.<org.apache.poi.hssf.record.SSTRecord: org.apache.poi.util.IntMapper field_3_strings> = $r2;

        $r3 = new org.apache.poi.hssf.record.SSTDeserializer;

        $r4 = r0.<org.apache.poi.hssf.record.SSTRecord: org.apache.poi.util.IntMapper field_3_strings>;

        specialinvoke $r3.<org.apache.poi.hssf.record.SSTDeserializer: void <init>(org.apache.poi.util.IntMapper)>($r4);

        r0.<org.apache.poi.hssf.record.SSTRecord: org.apache.poi.hssf.record.SSTDeserializer deserializer> = $r3;

        $r5 = r0.<org.apache.poi.hssf.record.SSTRecord: org.apache.poi.hssf.record.SSTDeserializer deserializer>;

        $i2 = r0.<org.apache.poi.hssf.record.SSTRecord: int field_2_num_unique_strings>;

        virtualinvoke $r5.<org.apache.poi.hssf.record.SSTDeserializer: void manufactureStrings(int,org.apache.poi.hssf.record.RecordInputStream)>($i2, r1);

        return;
    }

    java.util.Iterator getStrings()
    {
        org.apache.poi.util.IntMapper $r1;
        java.util.Iterator $r2;
        org.apache.poi.hssf.record.SSTRecord r0;

        r0 := @this: org.apache.poi.hssf.record.SSTRecord;

        $r1 = r0.<org.apache.poi.hssf.record.SSTRecord: org.apache.poi.util.IntMapper field_3_strings>;

        $r2 = virtualinvoke $r1.<org.apache.poi.util.IntMapper: java.util.Iterator iterator()>();

        return $r2;
    }

    int countStrings()
    {
        int $i0;
        org.apache.poi.util.IntMapper $r1;
        org.apache.poi.hssf.record.SSTRecord r0;

        r0 := @this: org.apache.poi.hssf.record.SSTRecord;

        $r1 = r0.<org.apache.poi.hssf.record.SSTRecord: org.apache.poi.util.IntMapper field_3_strings>;

        $i0 = virtualinvoke $r1.<org.apache.poi.util.IntMapper: int size()>();

        return $i0;
    }

    protected void serialize(org.apache.poi.hssf.record.cont.ContinuableRecordOutput)
    {
        org.apache.poi.hssf.record.SSTRecord r1;
        org.apache.poi.hssf.record.SSTSerializer $r0;
        int[] $r4, $r5;
        org.apache.poi.hssf.record.cont.ContinuableRecordOutput r3;
        int $i0, $i1;
        org.apache.poi.util.IntMapper $r2;

        r1 := @this: org.apache.poi.hssf.record.SSTRecord;

        r3 := @parameter0: org.apache.poi.hssf.record.cont.ContinuableRecordOutput;

        $r0 = new org.apache.poi.hssf.record.SSTSerializer;

        $r2 = r1.<org.apache.poi.hssf.record.SSTRecord: org.apache.poi.util.IntMapper field_3_strings>;

        $i0 = virtualinvoke r1.<org.apache.poi.hssf.record.SSTRecord: int getNumStrings()>();

        $i1 = virtualinvoke r1.<org.apache.poi.hssf.record.SSTRecord: int getNumUniqueStrings()>();

        specialinvoke $r0.<org.apache.poi.hssf.record.SSTSerializer: void <init>(org.apache.poi.util.IntMapper,int,int)>($r2, $i0, $i1);

        virtualinvoke $r0.<org.apache.poi.hssf.record.SSTSerializer: void serialize(org.apache.poi.hssf.record.cont.ContinuableRecordOutput)>(r3);

        $r4 = virtualinvoke $r0.<org.apache.poi.hssf.record.SSTSerializer: int[] getBucketAbsoluteOffsets()>();

        r1.<org.apache.poi.hssf.record.SSTRecord: int[] bucketAbsoluteOffsets> = $r4;

        $r5 = virtualinvoke $r0.<org.apache.poi.hssf.record.SSTSerializer: int[] getBucketRelativeOffsets()>();

        r1.<org.apache.poi.hssf.record.SSTRecord: int[] bucketRelativeOffsets> = $r5;

        return;
    }

    org.apache.poi.hssf.record.SSTDeserializer getDeserializer()
    {
        org.apache.poi.hssf.record.SSTRecord r0;
        org.apache.poi.hssf.record.SSTDeserializer $r1;

        r0 := @this: org.apache.poi.hssf.record.SSTRecord;

        $r1 = r0.<org.apache.poi.hssf.record.SSTRecord: org.apache.poi.hssf.record.SSTDeserializer deserializer>;

        return $r1;
    }

    public org.apache.poi.hssf.record.ExtSSTRecord createExtSSTRecord(int)
    {
        java.lang.IllegalStateException $r2;
        int[] $r1, $r3, $r5, r7, $r8, r10;
        int $i0, i1, $i2, $i3, i4;
        org.apache.poi.hssf.record.SSTRecord r0;
        org.apache.poi.hssf.record.ExtSSTRecord $r4;
        java.lang.Object $r6, $r9;

        r0 := @this: org.apache.poi.hssf.record.SSTRecord;

        i1 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hssf.record.SSTRecord: int[] bucketAbsoluteOffsets>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.poi.hssf.record.SSTRecord: int[] bucketAbsoluteOffsets>;

        if $r3 != null goto label2;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("SST record has not yet been serialized.");

        throw $r2;

     label2:
        $r4 = new org.apache.poi.hssf.record.ExtSSTRecord;

        specialinvoke $r4.<org.apache.poi.hssf.record.ExtSSTRecord: void <init>()>();

        virtualinvoke $r4.<org.apache.poi.hssf.record.ExtSSTRecord: void setNumStringsPerBucket(short)>(8);

        $r5 = r0.<org.apache.poi.hssf.record.SSTRecord: int[] bucketAbsoluteOffsets>;

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.Object clone()>();

        r7 = (int[]) $r6;

        $r8 = r0.<org.apache.poi.hssf.record.SSTRecord: int[] bucketRelativeOffsets>;

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.Object clone()>();

        r10 = (int[]) $r9;

        i4 = 0;

     label3:
        $i0 = lengthof r7;

        if i4 >= $i0 goto label4;

        $i2 = r7[i4];

        $i3 = $i2 + i1;

        r7[i4] = $i3;

        i4 = i4 + 1;

        goto label3;

     label4:
        virtualinvoke $r4.<org.apache.poi.hssf.record.ExtSSTRecord: void setBucketOffsets(int[],int[])>(r7, r10);

        return $r4;
    }

    public int calcExtSSTRecordSize()
    {
        org.apache.poi.hssf.record.SSTRecord r0;
        int $i0, $i1;
        org.apache.poi.util.IntMapper $r1;

        r0 := @this: org.apache.poi.hssf.record.SSTRecord;

        $r1 = r0.<org.apache.poi.hssf.record.SSTRecord: org.apache.poi.util.IntMapper field_3_strings>;

        $i0 = virtualinvoke $r1.<org.apache.poi.util.IntMapper: int size()>();

        $i1 = staticinvoke <org.apache.poi.hssf.record.ExtSSTRecord: int getRecordSizeForStrings(int)>($i0);

        return $i1;
    }

    static void <clinit>()
    {
        org.apache.poi.hssf.record.common.UnicodeString $r0;

        <org.apache.poi.hssf.record.SSTRecord: int MAX_DATA_SPACE> = 8216;

        <org.apache.poi.hssf.record.SSTRecord: int SST_RECORD_OVERHEAD> = 12;

        <org.apache.poi.hssf.record.SSTRecord: int STD_RECORD_OVERHEAD> = 4;

        <org.apache.poi.hssf.record.SSTRecord: short sid> = 252;

        $r0 = new org.apache.poi.hssf.record.common.UnicodeString;

        specialinvoke $r0.<org.apache.poi.hssf.record.common.UnicodeString: void <init>(java.lang.String)>("");

        <org.apache.poi.hssf.record.SSTRecord: org.apache.poi.hssf.record.common.UnicodeString EMPTY_STRING> = $r0;

        return;
    }
}
