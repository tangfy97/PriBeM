public abstract class org.apache.jena.atlas.json.JsonValue extends java.lang.Object implements org.apache.jena.atlas.io.Printable
{

    public void <init>()
    {
        org.apache.jena.atlas.json.JsonValue r0;

        r0 := @this: org.apache.jena.atlas.json.JsonValue;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean isObject()
    {
        org.apache.jena.atlas.json.JsonValue r0;

        r0 := @this: org.apache.jena.atlas.json.JsonValue;

        return 0;
    }

    public org.apache.jena.atlas.json.JsonObject getAsObject()
    {
        org.apache.jena.atlas.json.JsonValue r1;
        org.apache.jena.atlas.json.JsonException $r0;

        r1 := @this: org.apache.jena.atlas.json.JsonValue;

        $r0 = new org.apache.jena.atlas.json.JsonException;

        specialinvoke $r0.<org.apache.jena.atlas.json.JsonException: void <init>(java.lang.String)>("Not a JSON object");

        throw $r0;
    }

    public boolean isArray()
    {
        org.apache.jena.atlas.json.JsonValue r0;
        boolean $z0;

        r0 := @this: org.apache.jena.atlas.json.JsonValue;

        $z0 = r0 instanceof org.apache.jena.atlas.json.JsonArray;

        return $z0;
    }

    public org.apache.jena.atlas.json.JsonArray getAsArray()
    {
        org.apache.jena.atlas.json.JsonValue r1;
        org.apache.jena.atlas.json.JsonException $r0;

        r1 := @this: org.apache.jena.atlas.json.JsonValue;

        $r0 = new org.apache.jena.atlas.json.JsonException;

        specialinvoke $r0.<org.apache.jena.atlas.json.JsonException: void <init>(java.lang.String)>("Not a JSON array");

        throw $r0;
    }

    public boolean isPrimitive()
    {
        org.apache.jena.atlas.json.JsonValue r0;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.apache.jena.atlas.json.JsonValue;

        $z0 = virtualinvoke r0.<org.apache.jena.atlas.json.JsonValue: boolean isString()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<org.apache.jena.atlas.json.JsonValue: boolean isNumber()>();

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r0.<org.apache.jena.atlas.json.JsonValue: boolean isBoolean()>();

        if $z2 != 0 goto label1;

        $z3 = virtualinvoke r0.<org.apache.jena.atlas.json.JsonValue: boolean isNull()>();

        if $z3 == 0 goto label2;

     label1:
        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;
    }

    public boolean isNull()
    {
        org.apache.jena.atlas.json.JsonValue r0;

        r0 := @this: org.apache.jena.atlas.json.JsonValue;

        return 0;
    }

    public boolean isNumber()
    {
        org.apache.jena.atlas.json.JsonValue r0;

        r0 := @this: org.apache.jena.atlas.json.JsonValue;

        return 0;
    }

    public org.apache.jena.atlas.json.JsonNumber getAsNumber()
    {
        org.apache.jena.atlas.json.JsonValue r1;
        org.apache.jena.atlas.json.JsonException $r0;

        r1 := @this: org.apache.jena.atlas.json.JsonValue;

        $r0 = new org.apache.jena.atlas.json.JsonException;

        specialinvoke $r0.<org.apache.jena.atlas.json.JsonException: void <init>(java.lang.String)>("Not a JSON number");

        throw $r0;
    }

    public boolean isString()
    {
        org.apache.jena.atlas.json.JsonValue r0;

        r0 := @this: org.apache.jena.atlas.json.JsonValue;

        return 0;
    }

    public org.apache.jena.atlas.json.JsonString getAsString()
    {
        org.apache.jena.atlas.json.JsonValue r1;
        org.apache.jena.atlas.json.JsonException $r0;

        r1 := @this: org.apache.jena.atlas.json.JsonValue;

        $r0 = new org.apache.jena.atlas.json.JsonException;

        specialinvoke $r0.<org.apache.jena.atlas.json.JsonException: void <init>(java.lang.String)>("Not a JSON string");

        throw $r0;
    }

    public boolean isBoolean()
    {
        org.apache.jena.atlas.json.JsonValue r0;

        r0 := @this: org.apache.jena.atlas.json.JsonValue;

        return 0;
    }

    public org.apache.jena.atlas.json.JsonBoolean getAsBoolean()
    {
        org.apache.jena.atlas.json.JsonValue r1;
        org.apache.jena.atlas.json.JsonException $r0;

        r1 := @this: org.apache.jena.atlas.json.JsonValue;

        $r0 = new org.apache.jena.atlas.json.JsonException;

        specialinvoke $r0.<org.apache.jena.atlas.json.JsonException: void <init>(java.lang.String)>("Not a JSON boolean");

        throw $r0;
    }

    public abstract int hashCode();

    public abstract boolean equals(java.lang.Object);

    public abstract void visit(org.apache.jena.atlas.json.JsonVisitor);

    public java.lang.String toString()
    {
        org.apache.jena.atlas.json.JsonValue r1;
        org.apache.jena.atlas.io.IndentedLineBuffer $r0;
        java.lang.String $r2;

        r1 := @this: org.apache.jena.atlas.json.JsonValue;

        $r0 = new org.apache.jena.atlas.io.IndentedLineBuffer;

        specialinvoke $r0.<org.apache.jena.atlas.io.IndentedLineBuffer: void <init>()>();

        virtualinvoke r1.<org.apache.jena.atlas.json.JsonValue: void output(org.apache.jena.atlas.io.IndentedWriter)>($r0);

        $r2 = virtualinvoke $r0.<org.apache.jena.atlas.io.IndentedLineBuffer: java.lang.String asString()>();

        return $r2;
    }

    public void output(org.apache.jena.atlas.io.IndentedWriter)
    {
        org.apache.jena.atlas.json.JsonValue r2;
        org.apache.jena.atlas.json.io.JsonWriter $r0;
        org.apache.jena.atlas.io.IndentedWriter r1;

        r2 := @this: org.apache.jena.atlas.json.JsonValue;

        r1 := @parameter0: org.apache.jena.atlas.io.IndentedWriter;

        $r0 = new org.apache.jena.atlas.json.io.JsonWriter;

        specialinvoke $r0.<org.apache.jena.atlas.json.io.JsonWriter: void <init>(org.apache.jena.atlas.io.IndentedWriter)>(r1);

        virtualinvoke $r0.<org.apache.jena.atlas.json.io.JsonWriter: void startOutput()>();

        virtualinvoke r2.<org.apache.jena.atlas.json.JsonValue: void visit(org.apache.jena.atlas.json.JsonVisitor)>($r0);

        virtualinvoke $r0.<org.apache.jena.atlas.json.io.JsonWriter: void finishOutput()>();

        return;
    }
}
