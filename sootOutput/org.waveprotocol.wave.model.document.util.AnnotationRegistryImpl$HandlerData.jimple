class org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData extends java.lang.Object
{
    final org.waveprotocol.wave.model.util.StringMap handlers;
    final org.waveprotocol.wave.model.util.StringMap behaviours;

    private void <init>()
    {
        org.waveprotocol.wave.model.util.StringMap $r1, $r2;
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.waveprotocol.wave.model.util.CollectionUtils: org.waveprotocol.wave.model.util.StringMap createStringMap()>();

        r0.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData: org.waveprotocol.wave.model.util.StringMap handlers> = $r1;

        $r2 = staticinvoke <org.waveprotocol.wave.model.util.CollectionUtils: org.waveprotocol.wave.model.util.StringMap createStringMap()>();

        r0.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData: org.waveprotocol.wave.model.util.StringMap behaviours> = $r2;

        return;
    }

    void <init>(org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$1)
    {
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$1 r1;
        org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData r0;

        r0 := @this: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData;

        r1 := @parameter0: org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$1;

        specialinvoke r0.<org.waveprotocol.wave.model.document.util.AnnotationRegistryImpl$HandlerData: void <init>()>();

        return;
    }
}
