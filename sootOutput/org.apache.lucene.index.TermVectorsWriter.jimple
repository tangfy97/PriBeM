final class org.apache.lucene.index.TermVectorsWriter extends java.lang.Object
{
    private org.apache.lucene.store.IndexOutput tvx;
    private org.apache.lucene.store.IndexOutput tvd;
    private org.apache.lucene.store.IndexOutput tvf;
    private org.apache.lucene.index.FieldInfos fieldInfos;
    final org.apache.lucene.util.UnicodeUtil$UTF8Result[] utf8Results;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.store.Directory, java.lang.String, org.apache.lucene.index.FieldInfos) throws java.io.IOException
    {
        java.lang.Throwable $r20;
        org.apache.lucene.util.UnicodeUtil$UTF8Result[] $r1;
        org.apache.lucene.store.Directory r4;
        java.io.Closeable[] $r16, $r21;
        java.lang.String r5, $r6, $r9, $r12;
        org.apache.lucene.index.FieldInfos r15;
        org.apache.lucene.store.IndexOutput $r7, $r8, $r10, $r11, $r13, $r14, $r17, $r18, $r19, $r22, $r23, $r24;
        boolean z0;
        org.apache.lucene.util.UnicodeUtil$UTF8Result $r2, $r3;
        org.apache.lucene.index.TermVectorsWriter r0;

        r0 := @this: org.apache.lucene.index.TermVectorsWriter;

        r4 := @parameter0: org.apache.lucene.store.Directory;

        r5 := @parameter1: java.lang.String;

        r15 := @parameter2: org.apache.lucene.index.FieldInfos;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvx> = null;

        r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvd> = null;

        r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf> = null;

        $r1 = newarray (org.apache.lucene.util.UnicodeUtil$UTF8Result)[2];

        $r2 = new org.apache.lucene.util.UnicodeUtil$UTF8Result;

        specialinvoke $r2.<org.apache.lucene.util.UnicodeUtil$UTF8Result: void <init>()>();

        $r1[0] = $r2;

        $r3 = new org.apache.lucene.util.UnicodeUtil$UTF8Result;

        specialinvoke $r3.<org.apache.lucene.util.UnicodeUtil$UTF8Result: void <init>()>();

        $r1[1] = $r3;

        r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.util.UnicodeUtil$UTF8Result[] utf8Results> = $r1;

        z0 = 0;

     label1:
        $r6 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String)>(r5, "tvx");

        $r7 = virtualinvoke r4.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexOutput createOutput(java.lang.String)>($r6);

        r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvx> = $r7;

        $r8 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvx>;

        virtualinvoke $r8.<org.apache.lucene.store.IndexOutput: void writeInt(int)>(4);

        $r9 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String)>(r5, "tvd");

        $r10 = virtualinvoke r4.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexOutput createOutput(java.lang.String)>($r9);

        r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvd> = $r10;

        $r11 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvd>;

        virtualinvoke $r11.<org.apache.lucene.store.IndexOutput: void writeInt(int)>(4);

        $r12 = staticinvoke <org.apache.lucene.index.IndexFileNames: java.lang.String segmentFileName(java.lang.String,java.lang.String)>(r5, "tvf");

        $r13 = virtualinvoke r4.<org.apache.lucene.store.Directory: org.apache.lucene.store.IndexOutput createOutput(java.lang.String)>($r12);

        r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf> = $r13;

        $r14 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        virtualinvoke $r14.<org.apache.lucene.store.IndexOutput: void writeInt(int)>(4);

        z0 = 1;

        goto label6;

     label2:
        goto label5;

     label3:
        $r20 := @caughtexception;

        goto label8;

     label4:
        throw $r20;

     label5:
        r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.index.FieldInfos fieldInfos> = r15;

        return;

     label6:
        if 1 != 0 goto label7;

        $r16 = newarray (java.io.Closeable)[3];

        $r17 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvx>;

        $r16[0] = $r17;

        $r18 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvd>;

        $r16[1] = $r18;

        $r19 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $r16[2] = $r19;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r16);

     label7:
        goto label2;

     label8:
        if z0 != 0 goto label9;

        $r21 = newarray (java.io.Closeable)[3];

        $r22 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvx>;

        $r21[0] = $r22;

        $r23 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvd>;

        $r21[1] = $r23;

        $r24 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $r21[2] = $r24;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r21);

     label9:
        goto label4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public final void addAllDocVectors(org.apache.lucene.index.TermFreqVector[]) throws java.io.IOException
    {
        byte[] $r37, $r38, $r45;
        byte $b26, b28;
        org.apache.lucene.index.FieldInfos $r12;
        org.apache.lucene.util.UnicodeUtil$UTF8Result $r24, $r28, $r30, $r32, $r34, $r36, $r40, $r44;
        org.apache.lucene.index.TermVectorOffsetInfo[] $r48, $r60;
        org.apache.lucene.index.TermVectorOffsetInfo $r49, $r50;
        org.apache.lucene.index.TermPositionVector r62;
        long $l0, $l1, $l3, $l4, l38, l40;
        java.lang.AssertionError $r53, $r57;
        org.apache.lucene.util.UnicodeUtil$UTF8Result[] $r23, $r27, $r29, $r31, $r33, $r35, $r39, $r43;
        java.lang.String $r13, $r25, $r26;
        java.lang.IllegalStateException $r54, $r58;
        org.apache.lucene.index.TermFreqVector $r11, $r15, $r17, $r19, $r21, $r59;
        int[] $r22, $r55, $r61;
        org.apache.lucene.index.TermFreqVector[] r5;
        boolean $z0, $z1, $z2, $z3, z4, $z5, z6, $z7;
        org.apache.lucene.index.TermVectorsWriter r0;
        java.lang.String[] $r20;
        long[] r8;
        int i2, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, $i25, $i27, i29, i30, i31, i32, $i33, i34, i35, i36, $i37, i39;
        org.apache.lucene.store.IndexOutput $r1, $r2, $r3, $r4, $r6, $r7, $r9, $r10, $r14, $r16, $r18, $r41, $r42, $r46, $r47, $r51, $r52, $r56;

        r0 := @this: org.apache.lucene.index.TermVectorsWriter;

        r5 := @parameter0: org.apache.lucene.index.TermFreqVector[];

        $r2 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvx>;

        $r1 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvd>;

        $l0 = virtualinvoke $r1.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        virtualinvoke $r2.<org.apache.lucene.store.IndexOutput: void writeLong(long)>($l0);

        $r4 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvx>;

        $r3 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $l1 = virtualinvoke $r3.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        virtualinvoke $r4.<org.apache.lucene.store.IndexOutput: void writeLong(long)>($l1);

        if r5 == null goto label25;

        i2 = lengthof r5;

        $r7 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvd>;

        virtualinvoke $r7.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>(i2);

        r8 = newarray (long)[i2];

        i24 = 0;

     label01:
        if i24 >= i2 goto label22;

        $r10 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $l4 = virtualinvoke $r10.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        r8[i24] = $l4;

        $r12 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.index.FieldInfos fieldInfos>;

        $r11 = r5[i24];

        $r13 = interfaceinvoke $r11.<org.apache.lucene.index.TermFreqVector: java.lang.String getField()>();

        $i5 = virtualinvoke $r12.<org.apache.lucene.index.FieldInfos: int fieldNumber(java.lang.String)>($r13);

        $r14 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvd>;

        virtualinvoke $r14.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>($i5);

        $r15 = r5[i24];

        $i6 = interfaceinvoke $r15.<org.apache.lucene.index.TermFreqVector: int size()>();

        $r16 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        virtualinvoke $r16.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>($i6);

        $r17 = r5[i24];

        $z0 = $r17 instanceof org.apache.lucene.index.TermPositionVector;

        if $z0 == 0 goto label10;

        $r59 = r5[i24];

        r62 = (org.apache.lucene.index.TermPositionVector) $r59;

        $i23 = interfaceinvoke r62.<org.apache.lucene.index.TermPositionVector: int size()>();

        if $i23 <= 0 goto label02;

        $r61 = interfaceinvoke r62.<org.apache.lucene.index.TermPositionVector: int[] getTermPositions(int)>(0);

        if $r61 == null goto label02;

        $z3 = 1;

        goto label03;

     label02:
        $z3 = 0;

     label03:
        z4 = $z3;

        $i25 = interfaceinvoke r62.<org.apache.lucene.index.TermPositionVector: int size()>();

        if $i25 <= 0 goto label04;

        $r60 = interfaceinvoke r62.<org.apache.lucene.index.TermPositionVector: org.apache.lucene.index.TermVectorOffsetInfo[] getOffsets(int)>(0);

        if $r60 == null goto label04;

        $z5 = 1;

        goto label05;

     label04:
        $z5 = 0;

     label05:
        z6 = $z5;

        if z4 == 0 goto label06;

        $z7 = 1;

        goto label07;

     label06:
        $z7 = 0;

     label07:
        if z6 == 0 goto label08;

        $b26 = 2;

        goto label09;

     label08:
        $b26 = 0;

     label09:
        $i27 = $z7 + $b26;

        b28 = (byte) $i27;

        goto label11;

     label10:
        r62 = null;

        b28 = 0;

        z4 = 0;

        z6 = 0;

     label11:
        $r18 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        virtualinvoke $r18.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>(b28);

        $r19 = r5[i24];

        $r20 = interfaceinvoke $r19.<org.apache.lucene.index.TermFreqVector: java.lang.String[] getTerms()>();

        $r21 = r5[i24];

        $r22 = interfaceinvoke $r21.<org.apache.lucene.index.TermFreqVector: int[] getTermFrequencies()>();

        i29 = 0;

        $r23 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.util.UnicodeUtil$UTF8Result[] utf8Results>;

        $r24 = $r23[1];

        $r24.<org.apache.lucene.util.UnicodeUtil$UTF8Result: int length> = 0;

        i30 = 0;

     label12:
        if i30 >= $i6 goto label21;

        $r26 = $r20[i30];

        $r25 = $r20[i30];

        $i7 = virtualinvoke $r25.<java.lang.String: int length()>();

        $r27 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.util.UnicodeUtil$UTF8Result[] utf8Results>;

        $r28 = $r27[i29];

        staticinvoke <org.apache.lucene.util.UnicodeUtil: void UTF16toUTF8(java.lang.String,int,int,org.apache.lucene.util.UnicodeUtil$UTF8Result)>($r26, 0, $i7, $r28);

        $r29 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.util.UnicodeUtil$UTF8Result[] utf8Results>;

        $i8 = 1 - i29;

        $r30 = $r29[$i8];

        $r38 = $r30.<org.apache.lucene.util.UnicodeUtil$UTF8Result: byte[] result>;

        $r31 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.util.UnicodeUtil$UTF8Result[] utf8Results>;

        $i9 = 1 - i29;

        $r32 = $r31[$i9];

        $i11 = $r32.<org.apache.lucene.util.UnicodeUtil$UTF8Result: int length>;

        $r33 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.util.UnicodeUtil$UTF8Result[] utf8Results>;

        $r34 = $r33[i29];

        $r37 = $r34.<org.apache.lucene.util.UnicodeUtil$UTF8Result: byte[] result>;

        $r35 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.util.UnicodeUtil$UTF8Result[] utf8Results>;

        $r36 = $r35[i29];

        $i10 = $r36.<org.apache.lucene.util.UnicodeUtil$UTF8Result: int length>;

        $i12 = staticinvoke <org.apache.lucene.util.StringHelper: int bytesDifference(byte[],int,byte[],int)>($r38, $i11, $r37, $i10);

        $r39 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.util.UnicodeUtil$UTF8Result[] utf8Results>;

        $r40 = $r39[i29];

        $i13 = $r40.<org.apache.lucene.util.UnicodeUtil$UTF8Result: int length>;

        i14 = $i13 - $i12;

        $r41 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        virtualinvoke $r41.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>($i12);

        $r42 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        virtualinvoke $r42.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>(i14);

        $r46 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $r43 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.util.UnicodeUtil$UTF8Result[] utf8Results>;

        $r44 = $r43[i29];

        $r45 = $r44.<org.apache.lucene.util.UnicodeUtil$UTF8Result: byte[] result>;

        virtualinvoke $r46.<org.apache.lucene.store.IndexOutput: void writeBytes(byte[],int,int)>($r45, $i12, i14);

        i29 = 1 - i29;

        i15 = $r22[i30];

        $r47 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        virtualinvoke $r47.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>(i15);

        if z4 == 0 goto label16;

        $r55 = interfaceinvoke r62.<org.apache.lucene.index.TermPositionVector: int[] getTermPositions(int)>(i30);

        if $r55 != null goto label13;

        $r58 = new java.lang.IllegalStateException;

        specialinvoke $r58.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Trying to write positions that are null!");

        throw $r58;

     label13:
        $z2 = <org.apache.lucene.index.TermVectorsWriter: boolean $assertionsDisabled>;

        if $z2 != 0 goto label14;

        $i22 = lengthof $r55;

        if $i22 == i15 goto label14;

        $r57 = new java.lang.AssertionError;

        specialinvoke $r57.<java.lang.AssertionError: void <init>()>();

        throw $r57;

     label14:
        i31 = 0;

        i32 = 0;

     label15:
        $i33 = lengthof $r55;

        if i32 >= $i33 goto label16;

        i34 = $r55[i32];

        $r56 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $i21 = i34 - i31;

        virtualinvoke $r56.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>($i21);

        i31 = i34;

        i32 = i32 + 1;

        goto label15;

     label16:
        if z6 == 0 goto label20;

        $r48 = interfaceinvoke r62.<org.apache.lucene.index.TermPositionVector: org.apache.lucene.index.TermVectorOffsetInfo[] getOffsets(int)>(i30);

        if $r48 != null goto label17;

        $r54 = new java.lang.IllegalStateException;

        specialinvoke $r54.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Trying to write offsets that are null!");

        throw $r54;

     label17:
        $z1 = <org.apache.lucene.index.TermVectorsWriter: boolean $assertionsDisabled>;

        if $z1 != 0 goto label18;

        $i20 = lengthof $r48;

        if $i20 == i15 goto label18;

        $r53 = new java.lang.AssertionError;

        specialinvoke $r53.<java.lang.AssertionError: void <init>()>();

        throw $r53;

     label18:
        i35 = 0;

        i36 = 0;

     label19:
        $i37 = lengthof $r48;

        if i36 >= $i37 goto label20;

        $r49 = $r48[i36];

        $i16 = virtualinvoke $r49.<org.apache.lucene.index.TermVectorOffsetInfo: int getStartOffset()>();

        $r50 = $r48[i36];

        $i17 = virtualinvoke $r50.<org.apache.lucene.index.TermVectorOffsetInfo: int getEndOffset()>();

        $r51 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $i18 = $i16 - i35;

        virtualinvoke $r51.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>($i18);

        $r52 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $i19 = $i17 - $i16;

        virtualinvoke $r52.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>($i19);

        i35 = $i17;

        i36 = i36 + 1;

        goto label19;

     label20:
        i30 = i30 + 1;

        goto label12;

     label21:
        i24 = i24 + 1;

        goto label01;

     label22:
        if i2 <= 1 goto label24;

        l38 = r8[0];

        i39 = 1;

     label23:
        if i39 >= i2 goto label24;

        l40 = r8[i39];

        $r9 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvd>;

        $l3 = l40 - l38;

        virtualinvoke $r9.<org.apache.lucene.store.IndexOutput: void writeVLong(long)>($l3);

        l38 = l40;

        i39 = i39 + 1;

        goto label23;

     label24:
        goto label26;

     label25:
        $r6 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvd>;

        virtualinvoke $r6.<org.apache.lucene.store.IndexOutput: void writeVInt(int)>(0);

     label26:
        return;
    }

    final void addRawDocuments(org.apache.lucene.index.TermVectorsReader, int[], int[], int) throws java.io.IOException
    {
        byte $b6, $b8;
        int[] r13, r15;
        boolean $z0, $z1;
        org.apache.lucene.index.TermVectorsReader r3;
        org.apache.lucene.index.TermVectorsWriter r0;
        long $l0, $l1, $l3, $l4, $l5, $l7, $l10, $l12, l13, l14;
        java.lang.AssertionError $r9, $r11;
        int i2, $i9, $i11, i15;
        org.apache.lucene.store.IndexOutput $r1, $r2, $r4, $r6, $r8, $r10, $r12, $r14;
        org.apache.lucene.store.IndexInput $r5, $r7;

        r0 := @this: org.apache.lucene.index.TermVectorsWriter;

        r3 := @parameter0: org.apache.lucene.index.TermVectorsReader;

        r13 := @parameter1: int[];

        r15 := @parameter2: int[];

        i2 := @parameter3: int;

        $r1 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvd>;

        $l0 = virtualinvoke $r1.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        l13 = $l0;

        $r2 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $l1 = virtualinvoke $r2.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        l14 = $l1;

        i15 = 0;

     label1:
        if i15 >= i2 goto label2;

        $r12 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvx>;

        virtualinvoke $r12.<org.apache.lucene.store.IndexOutput: void writeLong(long)>(l13);

        $i9 = r13[i15];

        $l10 = (long) $i9;

        l13 = l13 + $l10;

        $r14 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvx>;

        virtualinvoke $r14.<org.apache.lucene.store.IndexOutput: void writeLong(long)>(l14);

        $i11 = r15[i15];

        $l12 = (long) $i11;

        l14 = l14 + $l12;

        i15 = i15 + 1;

        goto label1;

     label2:
        $r4 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvd>;

        $r5 = virtualinvoke r3.<org.apache.lucene.index.TermVectorsReader: org.apache.lucene.store.IndexInput getTvdStream()>();

        $l3 = l13 - $l0;

        virtualinvoke $r4.<org.apache.lucene.store.IndexOutput: void copyBytes(org.apache.lucene.store.DataInput,long)>($r5, $l3);

        $r6 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $r7 = virtualinvoke r3.<org.apache.lucene.index.TermVectorsReader: org.apache.lucene.store.IndexInput getTvfStream()>();

        $l4 = l14 - $l1;

        virtualinvoke $r6.<org.apache.lucene.store.IndexOutput: void copyBytes(org.apache.lucene.store.DataInput,long)>($r7, $l4);

        $z0 = <org.apache.lucene.index.TermVectorsWriter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $r10 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvd>;

        $l7 = virtualinvoke $r10.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        $b8 = $l7 cmp l13;

        if $b8 == 0 goto label3;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label3:
        $z1 = <org.apache.lucene.index.TermVectorsWriter: boolean $assertionsDisabled>;

        if $z1 != 0 goto label4;

        $r8 = r0.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $l5 = virtualinvoke $r8.<org.apache.lucene.store.IndexOutput: long getFilePointer()>();

        $b6 = $l5 cmp l14;

        if $b6 == 0 goto label4;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label4:
        return;
    }

    final void close() throws java.io.IOException
    {
        java.io.Closeable[] $r0;
        org.apache.lucene.index.TermVectorsWriter r1;
        org.apache.lucene.store.IndexOutput $r2, $r3, $r4;

        r1 := @this: org.apache.lucene.index.TermVectorsWriter;

        $r0 = newarray (java.io.Closeable)[3];

        $r2 = r1.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvx>;

        $r0[0] = $r2;

        $r3 = r1.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvd>;

        $r0[1] = $r3;

        $r4 = r1.<org.apache.lucene.index.TermVectorsWriter: org.apache.lucene.store.IndexOutput tvf>;

        $r0[2] = $r4;

        staticinvoke <org.apache.lucene.util.IOUtils: void close(java.io.Closeable[])>($r0);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/TermVectorsWriter;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.TermVectorsWriter: boolean $assertionsDisabled> = $z1;

        return;
    }
}
