public class org.bouncycastle.crypto.modes.CBCBlockCipher extends java.lang.Object implements org.bouncycastle.crypto.BlockCipher
{
    private byte[] IV;
    private byte[] cbcV;
    private byte[] cbcNextV;
    private int blockSize;
    private org.bouncycastle.crypto.BlockCipher cipher;
    private boolean encrypting;

    public void <init>(org.bouncycastle.crypto.BlockCipher)
    {
        byte[] $r2, $r3, $r4;
        org.bouncycastle.crypto.modes.CBCBlockCipher r0;
        org.bouncycastle.crypto.BlockCipher r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.bouncycastle.crypto.modes.CBCBlockCipher;

        r1 := @parameter0: org.bouncycastle.crypto.BlockCipher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: org.bouncycastle.crypto.BlockCipher cipher> = null;

        r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: org.bouncycastle.crypto.BlockCipher cipher> = r1;

        $i0 = interfaceinvoke r1.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: int blockSize> = $i0;

        $i1 = r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: int blockSize>;

        $r2 = newarray (byte)[$i1];

        r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: byte[] IV> = $r2;

        $i2 = r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: int blockSize>;

        $r3 = newarray (byte)[$i2];

        r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: byte[] cbcV> = $r3;

        $i3 = r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: int blockSize>;

        $r4 = newarray (byte)[$i3];

        r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: byte[] cbcNextV> = $r4;

        return;
    }

    public org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()
    {
        org.bouncycastle.crypto.modes.CBCBlockCipher r0;
        org.bouncycastle.crypto.BlockCipher $r1;

        r0 := @this: org.bouncycastle.crypto.modes.CBCBlockCipher;

        $r1 = r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        return $r1;
    }

    public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException
    {
        byte[] $r4, $r5;
        org.bouncycastle.crypto.params.ParametersWithIV r3;
        org.bouncycastle.crypto.modes.CBCBlockCipher r0;
        java.lang.IllegalArgumentException $r8;
        org.bouncycastle.crypto.BlockCipher $r2, $r6;
        int $i0, $i1, $i2;
        boolean z0, $z1;
        org.bouncycastle.crypto.CipherParameters r1, $r7;

        r0 := @this: org.bouncycastle.crypto.modes.CBCBlockCipher;

        z0 := @parameter0: boolean;

        r1 := @parameter1: org.bouncycastle.crypto.CipherParameters;

        r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: boolean encrypting> = z0;

        $z1 = r1 instanceof org.bouncycastle.crypto.params.ParametersWithIV;

        if $z1 == 0 goto label2;

        r3 = (org.bouncycastle.crypto.params.ParametersWithIV) r1;

        $r4 = virtualinvoke r3.<org.bouncycastle.crypto.params.ParametersWithIV: byte[] getIV()>();

        $i1 = lengthof $r4;

        $i0 = r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: int blockSize>;

        if $i1 == $i0 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("initialisation vector must be the same length as block size");

        throw $r8;

     label1:
        $r5 = r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: byte[] IV>;

        $i2 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r5, 0, $i2);

        virtualinvoke r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: void reset()>();

        $r6 = r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r7 = virtualinvoke r3.<org.bouncycastle.crypto.params.ParametersWithIV: org.bouncycastle.crypto.CipherParameters getParameters()>();

        interfaceinvoke $r6.<org.bouncycastle.crypto.BlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(z0, $r7);

        goto label3;

     label2:
        virtualinvoke r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: void reset()>();

        $r2 = r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        interfaceinvoke $r2.<org.bouncycastle.crypto.BlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(z0, r1);

     label3:
        return;
    }

    public java.lang.String getAlgorithmName()
    {
        org.bouncycastle.crypto.modes.CBCBlockCipher r1;
        java.lang.StringBuilder $r0, $r4, $r5;
        java.lang.String $r3, $r6;
        org.bouncycastle.crypto.BlockCipher $r2;

        r1 := @this: org.bouncycastle.crypto.modes.CBCBlockCipher;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.bouncycastle.crypto.modes.CBCBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r3 = interfaceinvoke $r2.<org.bouncycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/CBC");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public int getBlockSize()
    {
        org.bouncycastle.crypto.modes.CBCBlockCipher r0;
        int $i0;
        org.bouncycastle.crypto.BlockCipher $r1;

        r0 := @this: org.bouncycastle.crypto.modes.CBCBlockCipher;

        $r1 = r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $i0 = interfaceinvoke $r1.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        return $i0;
    }

    public int processBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        byte[] r1, r2;
        org.bouncycastle.crypto.modes.CBCBlockCipher r0;
        int i0, i1, $i2;
        boolean $z0;

        r0 := @this: org.bouncycastle.crypto.modes.CBCBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r2 := @parameter2: byte[];

        i1 := @parameter3: int;

        $z0 = r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: boolean encrypting>;

        if $z0 == 0 goto label1;

        $i2 = specialinvoke r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: int encryptBlock(byte[],int,byte[],int)>(r1, i0, r2, i1);

        goto label2;

     label1:
        $i2 = specialinvoke r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: int decryptBlock(byte[],int,byte[],int)>(r1, i0, r2, i1);

     label2:
        return $i2;
    }

    public void reset()
    {
        byte[] $r1, $r2, $r3, $r4;
        org.bouncycastle.crypto.modes.CBCBlockCipher r0;
        int $i0;
        org.bouncycastle.crypto.BlockCipher $r5;

        r0 := @this: org.bouncycastle.crypto.modes.CBCBlockCipher;

        $r3 = r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: byte[] IV>;

        $r2 = r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: byte[] cbcV>;

        $r1 = r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: byte[] IV>;

        $i0 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r2, 0, $i0);

        $r4 = r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: byte[] cbcNextV>;

        staticinvoke <org.bouncycastle.util.Arrays: void fill(byte[],byte)>($r4, 0);

        $r5 = r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        interfaceinvoke $r5.<org.bouncycastle.crypto.BlockCipher: void reset()>();

        return;
    }

    private int encryptBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        byte[] r1, r2, $r3, $r5, $r6, $r7;
        org.bouncycastle.crypto.modes.CBCBlockCipher r0;
        org.bouncycastle.crypto.DataLengthException $r8;
        byte $b9, $b10, $b11, $b12;
        int i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, i13;
        org.bouncycastle.crypto.BlockCipher $r4;

        r0 := @this: org.bouncycastle.crypto.modes.CBCBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r2 := @parameter2: byte[];

        i5 := @parameter3: int;

        $i1 = r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: int blockSize>;

        $i3 = i0 + $i1;

        $i2 = lengthof r1;

        if $i3 <= $i2 goto label1;

        $r8 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r8.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("input buffer too short");

        throw $r8;

     label1:
        i13 = 0;

     label2:
        $i4 = r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: int blockSize>;

        if i13 >= $i4 goto label3;

        $r7 = r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: byte[] cbcV>;

        $b10 = $r7[i13];

        $i8 = i0 + i13;

        $b9 = r1[$i8];

        $b11 = $b10 ^ $b9;

        $b12 = (byte) $b11;

        $r7[i13] = $b12;

        i13 = i13 + 1;

        goto label2;

     label3:
        $r4 = r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r3 = r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: byte[] cbcV>;

        $i6 = interfaceinvoke $r4.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r3, 0, r2, i5);

        $r6 = r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: byte[] cbcV>;

        $r5 = r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: byte[] cbcV>;

        $i7 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i5, $r6, 0, $i7);

        return $i6;
    }

    private int decryptBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        byte[] r1, $r2, r3, $r5, $r6, r8;
        org.bouncycastle.crypto.modes.CBCBlockCipher r0;
        org.bouncycastle.crypto.DataLengthException $r7;
        byte $b9, $b10, $b11, $b12;
        int i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, i13;
        org.bouncycastle.crypto.BlockCipher $r4;

        r0 := @this: org.bouncycastle.crypto.modes.CBCBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r3 := @parameter2: byte[];

        i5 := @parameter3: int;

        $i1 = r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: int blockSize>;

        $i3 = i0 + $i1;

        $i2 = lengthof r1;

        if $i3 <= $i2 goto label1;

        $r7 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r7.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("input buffer too short");

        throw $r7;

     label1:
        $r2 = r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: byte[] cbcNextV>;

        $i4 = r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: int blockSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r2, 0, $i4);

        $r4 = r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $i6 = interfaceinvoke $r4.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>(r1, i0, r3, i5);

        i13 = 0;

     label2:
        $i7 = r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: int blockSize>;

        if i13 >= $i7 goto label3;

        $i8 = i5 + i13;

        $b10 = r3[$i8];

        $r6 = r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: byte[] cbcV>;

        $b9 = $r6[i13];

        $b11 = $b10 ^ $b9;

        $b12 = (byte) $b11;

        r3[$i8] = $b12;

        i13 = i13 + 1;

        goto label2;

     label3:
        r8 = r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: byte[] cbcV>;

        $r5 = r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: byte[] cbcNextV>;

        r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: byte[] cbcV> = $r5;

        r0.<org.bouncycastle.crypto.modes.CBCBlockCipher: byte[] cbcNextV> = r8;

        return $i6;
    }
}
