public class org.eclipse.jetty.util.StringUtil extends java.lang.Object
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    public static final java.lang.String ALL_INTERFACES;
    public static final java.lang.String CRLF;
    public static final java.lang.String __LINE_SEPARATOR;
    public static final java.lang.String __ISO_8859_1;
    public static final java.lang.String __UTF8;
    public static final java.lang.String __UTF8Alt;
    public static final java.lang.String __UTF16;
    public static final java.nio.charset.Charset __UTF8_CHARSET;
    public static final java.nio.charset.Charset __ISO_8859_1_CHARSET;
    private static char[] lowercases;

    public void <init>()
    {
        org.eclipse.jetty.util.StringUtil r0;

        r0 := @this: org.eclipse.jetty.util.StringUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String asciiToLowerCase(java.lang.String)
    {
        int $i0, i6, $i7, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17;
        java.lang.String r0, $r5, $r6;
        char $c1, $c2, $c3, $c4, c5;
        char[] $r1, $r2, $r3, r4;

        r0 := @parameter0: java.lang.String;

        r4 = null;

        i6 = virtualinvoke r0.<java.lang.String: int length()>();

     label1:
        $i0 = i6;

        $i9 = (int) -1;

        i6 = i6 + $i9;

        if $i0 <= 0 goto label3;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

        $i10 = (int) $c4;

        if $i10 > 127 goto label2;

        $r2 = <org.eclipse.jetty.util.StringUtil: char[] lowercases>;

        $i11 = (int) $c4;

        c5 = $r2[$i11];

        $i12 = (int) $c4;

        $i13 = (int) c5;

        if $i12 == $i13 goto label2;

        $r3 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        r4 = $r3;

        $r3[i6] = c5;

        goto label3;

     label2:
        goto label1;

     label3:
        $i7 = i6;

        $i15 = (int) -1;

        i6 = i6 + $i15;

        if $i7 <= 0 goto label4;

        $c1 = r4[i6];

        $i16 = (int) $c1;

        if $i16 > 127 goto label3;

        $r1 = <org.eclipse.jetty.util.StringUtil: char[] lowercases>;

        $c2 = r4[i6];

        $i17 = (int) $c2;

        $c3 = $r1[$i17];

        r4[i6] = $c3;

        goto label3;

     label4:
        if r4 != null goto label5;

        $r5 = r0;

        goto label6;

     label5:
        $r6 = new java.lang.String;

        $r5 = $r6;

        specialinvoke $r6.<java.lang.String: void <init>(char[])>(r4);

     label6:
        return $r5;
    }

    public static boolean startsWithIgnoreCase(java.lang.String, java.lang.String)
    {
        int $i0, $i1, $i2, i5, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.lang.String r0, r1;
        char $c3, $c4, c6, c7;
        char[] $r2, $r3;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label3;

     label2:
        return 0;

     label3:
        i5 = 0;

     label4:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if i5 >= $i2 goto label8;

        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i5);

        c6 = $c3;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i5);

        c7 = $c4;

        $i8 = (int) $c3;

        $i9 = (int) $c4;

        if $i8 == $i9 goto label7;

        $i10 = (int) $c3;

        if $i10 > 127 goto label5;

        $r3 = <org.eclipse.jetty.util.StringUtil: char[] lowercases>;

        $i11 = (int) $c3;

        c6 = $r3[$i11];

     label5:
        $i12 = (int) $c4;

        if $i12 > 127 goto label6;

        $r2 = <org.eclipse.jetty.util.StringUtil: char[] lowercases>;

        $i13 = (int) $c4;

        c7 = $r2[$i13];

     label6:
        $i14 = (int) c6;

        $i15 = (int) c7;

        if $i14 == $i15 goto label7;

        return 0;

     label7:
        i5 = i5 + 1;

        goto label4;

     label8:
        return 1;
    }

    public static boolean endsWithIgnoreCase(java.lang.String, java.lang.String)
    {
        int $i0, $i1, $i2, i5, i6, $i10, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        java.lang.String r0, r1;
        char $c3, $c4, c7, c8;
        char[] $r2, $r3;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        i5 = $i0;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label3;

        return 0;

     label3:
        i6 = $i1;

     label4:
        $i2 = i6;

        $i10 = (int) -1;

        i6 = i6 + $i10;

        if $i2 <= 0 goto label8;

        $i12 = (int) -1;

        i5 = i5 + $i12;

        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i5);

        c7 = $c3;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

        c8 = $c4;

        $i13 = (int) $c3;

        $i14 = (int) $c4;

        if $i13 == $i14 goto label7;

        $i15 = (int) $c3;

        if $i15 > 127 goto label5;

        $r3 = <org.eclipse.jetty.util.StringUtil: char[] lowercases>;

        $i16 = (int) $c3;

        c7 = $r3[$i16];

     label5:
        $i17 = (int) $c4;

        if $i17 > 127 goto label6;

        $r2 = <org.eclipse.jetty.util.StringUtil: char[] lowercases>;

        $i18 = (int) $c4;

        c8 = $r2[$i18];

     label6:
        $i19 = (int) c7;

        $i20 = (int) c8;

        if $i19 == $i20 goto label7;

        return 0;

     label7:
        goto label4;

     label8:
        return 1;
    }

    public static int indexFrom(java.lang.String, java.lang.String)
    {
        char $c1;
        int $i0, $i2, i3, $i4, $i6;
        java.lang.String r0, r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i3 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i3 >= $i0 goto label3;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $i4 = (int) $c1;

        $i2 = virtualinvoke r1.<java.lang.String: int indexOf(int)>($i4);

        if $i2 < 0 goto label2;

        return i3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $i6 = (int) -1;

        return $i6;
    }

    public static java.lang.String replace(java.lang.String, java.lang.String, java.lang.String)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, $i12, $i14;
        java.lang.String r0, r1, r3, $r4, $r5, $r6;
        java.lang.StringBuilder $r7;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i9 = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>(r1, 0);

        i10 = $i0;

        $i12 = (int) -1;

        if $i0 != $i12 goto label1;

        return r0;

     label1:
        $r7 = new java.lang.StringBuilder;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = virtualinvoke r3.<java.lang.String: int length()>();

        $i3 = $i1 + $i2;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(int)>($i3);

     label2:
        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i9, i10);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $i4 = virtualinvoke r1.<java.lang.String: int length()>();

        $i6 = i10 + $i4;

        i9 = $i6;

        $i5 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>(r1, $i6);

        i10 = $i5;

        $i14 = (int) -1;

        if $i5 != $i14 goto label2;

        $i7 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i6 >= $i7 goto label3;

        $i8 = virtualinvoke r0.<java.lang.String: int length()>();

        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i6, $i8);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label3:
        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static java.lang.String unquote(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.eclipse.jetty.util.QuotedStringTokenizer: java.lang.String unquote(java.lang.String)>(r0);

        return $r1;
    }

    public static void append(java.lang.StringBuilder, java.lang.String, int, int)
    {
        java.lang.Throwable $r2;
        char $c4;
        int i0, i1, i2, $i3, i5;
        java.lang.StringBuilder r0;
        java.lang.String r1;

        r0 := @parameter0: java.lang.StringBuilder;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        entermonitor r0;

     label1:
        i2 = i0 + i1;

        i5 = i0;

     label2:
        if i5 >= i2 goto label4;

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        if i5 < $i3 goto label3;

        goto label4;

     label3:
        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i5);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        i5 = i5 + 1;

        goto label2;

     label4:
        exitmonitor r0;

     label5:
        goto label8;

     label6:
        $r2 := @caughtexception;

        exitmonitor r0;

     label7:
        throw $r2;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public static void append(java.lang.StringBuilder, byte, int)
    {
        short s1, $s15;
        byte b0;
        int i2, $i3, $i4, $i6, $i8, $i9, $i10, $i11, $i12, i13, i14, $i16, $i17;
        char $c5, $c7;
        java.lang.StringBuilder r0;

        r0 := @parameter0: java.lang.StringBuilder;

        b0 := @parameter1: byte;

        i2 := @parameter2: int;

        $s15 = (short) b0;

        s1 = 255 & $s15;

        $i16 = (int) s1;

        $i3 = $i16 / i2;

        $i4 = $i3 % i2;

        i13 = 48 + $i4;

        if i13 <= 57 goto label1;

        $i10 = i13 - 48;

        $i11 = $i10 - 10;

        i13 = 97 + $i11;

     label1:
        $c5 = (char) i13;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        $i17 = (int) s1;

        $i6 = $i17 % i2;

        $i12 = 48 + $i6;

        i14 = $i12;

        if $i12 <= 57 goto label2;

        $i8 = $i12 - 48;

        $i9 = $i8 - 10;

        i14 = 97 + $i9;

     label2:
        $c7 = (char) i14;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c7);

        return;
    }

    public static void append2digits(java.lang.StringBuffer, int)
    {
        char $c3, $c6;
        java.lang.StringBuffer r0;
        int i0, $i1, $i2, $i4, $i5;

        r0 := @parameter0: java.lang.StringBuffer;

        i0 := @parameter1: int;

        if i0 >= 100 goto label1;

        $i1 = i0 / 10;

        $i2 = $i1 + 48;

        $c3 = (char) $i2;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        $i4 = i0 % 10;

        $i5 = $i4 + 48;

        $c6 = (char) $i5;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c6);

     label1:
        return;
    }

    public static void append2digits(java.lang.StringBuilder, int)
    {
        char $c3, $c6;
        int i0, $i1, $i2, $i4, $i5;
        java.lang.StringBuilder r0;

        r0 := @parameter0: java.lang.StringBuilder;

        i0 := @parameter1: int;

        if i0 >= 100 goto label1;

        $i1 = i0 / 10;

        $i2 = $i1 + 48;

        $c3 = (char) $i2;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $i4 = i0 % 10;

        $i5 = $i4 + 48;

        $c6 = (char) $i5;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6);

     label1:
        return;
    }

    public static java.lang.String nonNull(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return "";

     label1:
        return r0;
    }

    public static boolean equals(java.lang.String, char[], int, int)
    {
        char $c4, $c5;
        int $i0, i1, i2, $i3, i6, $i7, $i8;
        char[] r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: char[];

        i2 := @parameter2: int;

        i1 := @parameter3: int;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 == i1 goto label1;

        return 0;

     label1:
        i6 = 0;

     label2:
        if i6 >= i1 goto label4;

        $i3 = i2 + i6;

        $c4 = r1[$i3];

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

        $i7 = (int) $c4;

        $i8 = (int) $c5;

        if $i7 == $i8 goto label3;

        return 0;

     label3:
        i6 = i6 + 1;

        goto label2;

     label4:
        return 1;
    }

    public static java.lang.String toUTF8String(byte[], int, int)
    {
        byte[] r1;
        int i0, i1;
        java.lang.String $r0;
        java.lang.IllegalArgumentException $r3;
        java.io.UnsupportedEncodingException $r2;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r1, i0, i1, "UTF-8");

     label2:
        return $r0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static java.lang.String toString(byte[], int, int, java.lang.String)
    {
        byte[] r1;
        int i0, i1;
        java.lang.String $r0, r2;
        java.lang.IllegalArgumentException $r4;
        java.io.UnsupportedEncodingException $r3;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

     label1:
        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r1, i0, i1, r2);

     label2:
        return $r0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static boolean isUTF8(java.lang.String)
    {
        java.lang.String r0, $r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.String;

        $r1 = "UTF-8";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z0 != 0 goto label1;

        $r2 = "UTF8";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public static java.lang.String printable(java.lang.String)
    {
        char $c2;
        int $i0, $i1, i3;
        java.lang.StringBuilder $r1;
        java.lang.String r0, $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new java.lang.StringBuilder;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i0);

        i3 = 0;

     label2:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i3 >= $i1 goto label4;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $z0 = staticinvoke <java.lang.Character: boolean isISOControl(char)>($c2);

        if $z0 != 0 goto label3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String printable(byte[])
    {
        byte[] r1;
        char c2;
        byte $b1, $b3;
        int $i0, i4, $i5, $i6;
        java.lang.StringBuilder $r3;
        java.lang.String $r2;
        boolean $z0;

        r1 := @parameter0: byte[];

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        i4 = 0;

     label1:
        $i0 = lengthof r1;

        if i4 >= $i0 goto label5;

        $b1 = r1[i4];

        c2 = (char) $b1;

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(c2);

        if $z0 != 0 goto label2;

        $i5 = (int) c2;

        if $i5 <= 32 goto label3;

        $i6 = (int) c2;

        if $i6 >= 127 goto label3;

     label2:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);

        goto label4;

     label3:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $b3 = r1[i4];

        staticinvoke <org.eclipse.jetty.util.TypeUtil: void toHex(byte,java.lang.Appendable)>($b3, $r3);

     label4:
        i4 = i4 + 1;

        goto label1;

     label5:
        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static byte[] getBytes(java.lang.String)
    {
        byte[] $r1, $r4;
        java.lang.String r0;
        org.eclipse.jetty.util.log.Logger $r3;
        java.lang.Exception $r2;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = <org.eclipse.jetty.util.StringUtil: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r3.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>($r2);

        $r4 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>();

        return $r4;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static byte[] getBytes(java.lang.String, java.lang.String)
    {
        byte[] $r2, $r5;
        java.lang.String r0, r1;
        org.eclipse.jetty.util.log.Logger $r4;
        java.lang.Exception $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

     label1:
        $r2 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>(r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = <org.eclipse.jetty.util.StringUtil: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r4.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>($r3);

        $r5 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>();

        return $r5;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.String sidBytesToString(byte[])
    {
        byte[] r1;
        java.lang.Integer $r8, $r9, $r10, $r11;
        byte $b0, $b4, $b7, $b10, $b13, $b16, b19;
        java.lang.StringBuilder $r3, $r13, $r16, $r17;
        java.lang.Object[] $r7;
        long $l1, $l15;
        short $s5, $s8, $s11, $s14, $s17, $s21, $s24, $s26, $s28, $s30;
        int i2, $i3, $i6, $i9, $i12, i18, i20, $i22, $i23, $i25, $i27, $i29, $i31;
        java.lang.String $r2, $r5, $r6, $r12, $r14, $r15;

        r1 := @parameter0: byte[];

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("S-");

        $b0 = r1[0];

        $r2 = staticinvoke <java.lang.Byte: java.lang.String toString(byte)>($b0);

        $r3 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        i18 = 2;

     label1:
        if i18 > 7 goto label2;

        $b16 = r1[i18];

        $s21 = (short) $b16;

        $s17 = $s21 & 255;

        $i22 = (int) $s17;

        $r15 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i22);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        i18 = i18 + 1;

        goto label1;

     label2:
        $r5 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r5, 16);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        b19 = r1[1];

        i20 = 0;

     label3:
        $i23 = (int) b19;

        if i20 >= $i23 goto label4;

        i2 = i20 * 4;

        virtualinvoke $r17.<java.lang.StringBuilder: void setLength(int)>(0);

        $r7 = newarray (java.lang.Object)[4];

        $i3 = 11 + i2;

        $b4 = r1[$i3];

        $s24 = (short) $b4;

        $s5 = $s24 & 255;

        $i25 = (int) $s5;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i25);

        $r7[0] = $r8;

        $i6 = 10 + i2;

        $b7 = r1[$i6];

        $s26 = (short) $b7;

        $s8 = $s26 & 255;

        $i27 = (int) $s8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i27);

        $r7[1] = $r9;

        $i9 = 9 + i2;

        $b10 = r1[$i9];

        $s28 = (short) $b10;

        $s11 = $s28 & 255;

        $i29 = (int) $s11;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i29);

        $r7[2] = $r10;

        $i12 = 8 + i2;

        $b13 = r1[$i12];

        $s30 = (short) $b13;

        $s14 = $s30 & 255;

        $i31 = (int) $s14;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i31);

        $r7[3] = $r11;

        $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%02X%02X%02X%02X", $r7);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        $r14 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $l15 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r14, 16);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l15);

        i20 = i20 + 1;

        goto label3;

     label4:
        $r6 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public static byte[] sidStringToBytes(java.lang.String)
    {
        byte[] r2;
        byte $b5, $b6, $b16, $b20;
        java.lang.StringBuilder $r7, $r8, $r9, $r11, $r12, $r13;
        java.lang.String[] $r1;
        long $l7, $l11;
        int $i0, i1, $i2, $i3, $i4, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i17, $i18, $i19, i21, i22, i23, i24;
        java.lang.String r0, $r3, $r4, $r5, $r6, $r10, r14, r15;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("-");

        $i0 = lengthof $r1;

        i1 = $i0 - 3;

        $i2 = 4 * i1;

        $i3 = 8 + $i2;

        r2 = newarray (byte)[$i3];

        $r3 = $r1[1];

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        $b5 = (byte) $i4;

        r2[0] = $b5;

        i21 = 2;

        $b6 = (byte) i1;

        r2[1] = $b6;

        $r4 = $r1[2];

        $l7 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r4);

        r14 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l7);

     label01:
        $i8 = virtualinvoke r14.<java.lang.String: int length()>();

        if $i8 >= 12 goto label02;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label01;

     label02:
        i22 = 0;

     label03:
        $i9 = virtualinvoke r14.<java.lang.String: int length()>();

        if i22 >= $i9 goto label04;

        $i17 = i21;

        i21 = i21 + 1;

        $i18 = i22 + 2;

        $r10 = virtualinvoke r14.<java.lang.String: java.lang.String substring(int,int)>(i22, $i18);

        $i19 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r10, 16);

        $b20 = (byte) $i19;

        r2[$i17] = $b20;

        i22 = i22 + 2;

        goto label03;

     label04:
        i23 = 3;

     label05:
        $i10 = lengthof $r1;

        if i23 >= $i10 goto label10;

        $r5 = $r1[i23];

        $l11 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r5);

        r15 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l11);

     label06:
        $i12 = virtualinvoke r15.<java.lang.String: int length()>();

        if $i12 >= 8 goto label07;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        r15 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label06;

     label07:
        i24 = virtualinvoke r15.<java.lang.String: int length()>();

     label08:
        if i24 <= 0 goto label09;

        $i13 = i21;

        i21 = i21 + 1;

        $i14 = i24 - 2;

        $r6 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int,int)>($i14, i24);

        $i15 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r6, 16);

        $b16 = (byte) $i15;

        r2[$i13] = $b16;

        i24 = i24 - 2;

        goto label08;

     label09:
        i23 = i23 + 1;

        goto label05;

     label10:
        return r2;
    }

    static void <clinit>()
    {
        java.nio.charset.Charset $r2, $r3;
        char[] $r4;
        org.eclipse.jetty.util.log.Logger $r0;
        java.lang.String $r1;

        <org.eclipse.jetty.util.StringUtil: java.lang.String __UTF16> = "UTF-16";

        <org.eclipse.jetty.util.StringUtil: java.lang.String __UTF8Alt> = "UTF8";

        <org.eclipse.jetty.util.StringUtil: java.lang.String __UTF8> = "UTF-8";

        <org.eclipse.jetty.util.StringUtil: java.lang.String __ISO_8859_1> = "ISO-8859-1";

        <org.eclipse.jetty.util.StringUtil: java.lang.String CRLF> = "\r\n";

        <org.eclipse.jetty.util.StringUtil: java.lang.String ALL_INTERFACES> = "0.0.0.0";

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/util/StringUtil;");

        <org.eclipse.jetty.util.StringUtil: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("line.separator", "\n");

        <org.eclipse.jetty.util.StringUtil: java.lang.String __LINE_SEPARATOR> = $r1;

        $r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");

        <org.eclipse.jetty.util.StringUtil: java.nio.charset.Charset __UTF8_CHARSET> = $r2;

        $r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("ISO-8859-1");

        <org.eclipse.jetty.util.StringUtil: java.nio.charset.Charset __ISO_8859_1_CHARSET> = $r3;

        $r4 = newarray (char)[128];

        $r4[0] = 0;

        $r4[1] = 1;

        $r4[2] = 2;

        $r4[3] = 3;

        $r4[4] = 4;

        $r4[5] = 5;

        $r4[6] = 6;

        $r4[7] = 7;

        $r4[8] = 8;

        $r4[9] = 9;

        $r4[10] = 10;

        $r4[11] = 11;

        $r4[12] = 12;

        $r4[13] = 13;

        $r4[14] = 14;

        $r4[15] = 15;

        $r4[16] = 16;

        $r4[17] = 17;

        $r4[18] = 18;

        $r4[19] = 19;

        $r4[20] = 20;

        $r4[21] = 21;

        $r4[22] = 22;

        $r4[23] = 23;

        $r4[24] = 24;

        $r4[25] = 25;

        $r4[26] = 26;

        $r4[27] = 27;

        $r4[28] = 28;

        $r4[29] = 29;

        $r4[30] = 30;

        $r4[31] = 31;

        $r4[32] = 32;

        $r4[33] = 33;

        $r4[34] = 34;

        $r4[35] = 35;

        $r4[36] = 36;

        $r4[37] = 37;

        $r4[38] = 38;

        $r4[39] = 39;

        $r4[40] = 40;

        $r4[41] = 41;

        $r4[42] = 42;

        $r4[43] = 43;

        $r4[44] = 44;

        $r4[45] = 45;

        $r4[46] = 46;

        $r4[47] = 47;

        $r4[48] = 48;

        $r4[49] = 49;

        $r4[50] = 50;

        $r4[51] = 51;

        $r4[52] = 52;

        $r4[53] = 53;

        $r4[54] = 54;

        $r4[55] = 55;

        $r4[56] = 56;

        $r4[57] = 57;

        $r4[58] = 58;

        $r4[59] = 59;

        $r4[60] = 60;

        $r4[61] = 61;

        $r4[62] = 62;

        $r4[63] = 63;

        $r4[64] = 64;

        $r4[65] = 97;

        $r4[66] = 98;

        $r4[67] = 99;

        $r4[68] = 100;

        $r4[69] = 101;

        $r4[70] = 102;

        $r4[71] = 103;

        $r4[72] = 104;

        $r4[73] = 105;

        $r4[74] = 106;

        $r4[75] = 107;

        $r4[76] = 108;

        $r4[77] = 109;

        $r4[78] = 110;

        $r4[79] = 111;

        $r4[80] = 112;

        $r4[81] = 113;

        $r4[82] = 114;

        $r4[83] = 115;

        $r4[84] = 116;

        $r4[85] = 117;

        $r4[86] = 118;

        $r4[87] = 119;

        $r4[88] = 120;

        $r4[89] = 121;

        $r4[90] = 122;

        $r4[91] = 91;

        $r4[92] = 92;

        $r4[93] = 93;

        $r4[94] = 94;

        $r4[95] = 95;

        $r4[96] = 96;

        $r4[97] = 97;

        $r4[98] = 98;

        $r4[99] = 99;

        $r4[100] = 100;

        $r4[101] = 101;

        $r4[102] = 102;

        $r4[103] = 103;

        $r4[104] = 104;

        $r4[105] = 105;

        $r4[106] = 106;

        $r4[107] = 107;

        $r4[108] = 108;

        $r4[109] = 109;

        $r4[110] = 110;

        $r4[111] = 111;

        $r4[112] = 112;

        $r4[113] = 113;

        $r4[114] = 114;

        $r4[115] = 115;

        $r4[116] = 116;

        $r4[117] = 117;

        $r4[118] = 118;

        $r4[119] = 119;

        $r4[120] = 120;

        $r4[121] = 121;

        $r4[122] = 122;

        $r4[123] = 123;

        $r4[124] = 124;

        $r4[125] = 125;

        $r4[126] = 126;

        $r4[127] = 127;

        <org.eclipse.jetty.util.StringUtil: char[] lowercases> = $r4;

        return;
    }
}
