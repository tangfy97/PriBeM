final class org.codehaus.jackson.map.util.Comparators$1 extends java.lang.Object
{
    final java.lang.Object val$defaultValue;
    final int val$length;

    void <init>(java.lang.Object, int)
    {
        int i0;
        java.lang.Object r1;
        org.codehaus.jackson.map.util.Comparators$1 r0;

        r0 := @this: org.codehaus.jackson.map.util.Comparators$1;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r0.<org.codehaus.jackson.map.util.Comparators$1: java.lang.Object val$defaultValue> = r1;

        r0.<org.codehaus.jackson.map.util.Comparators$1: int val$length> = i0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.codehaus.jackson.map.util.Comparators$1 r1;
        int $i0, $i1, $i2, i3;
        java.lang.Object r0, $r3, $r5, $r6, $r7;
        java.lang.Class $r2, $r4;
        boolean $z0;

        r1 := @this: org.codehaus.jackson.map.util.Comparators$1;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r0 == null goto label2;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = r1.<org.codehaus.jackson.map.util.Comparators$1: java.lang.Object val$defaultValue>;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r4 goto label3;

     label2:
        return 0;

     label3:
        $i0 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(r0);

        $i1 = r1.<org.codehaus.jackson.map.util.Comparators$1: int val$length>;

        if $i0 == $i1 goto label4;

        return 0;

     label4:
        i3 = 0;

     label5:
        $i2 = r1.<org.codehaus.jackson.map.util.Comparators$1: int val$length>;

        if i3 >= $i2 goto label8;

        $r5 = r1.<org.codehaus.jackson.map.util.Comparators$1: java.lang.Object val$defaultValue>;

        $r6 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>($r5, i3);

        $r7 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(r0, i3);

        if $r6 != $r7 goto label6;

        goto label7;

     label6:
        if $r6 == null goto label7;

        $z0 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label7;

        return 0;

     label7:
        i3 = i3 + 1;

        goto label5;

     label8:
        return 1;
    }
}
