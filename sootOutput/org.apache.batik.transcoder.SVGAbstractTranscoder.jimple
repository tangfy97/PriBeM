public abstract class org.apache.batik.transcoder.SVGAbstractTranscoder extends org.apache.batik.transcoder.XMLAbstractTranscoder
{
    public static final java.lang.String DEFAULT_DEFAULT_FONT_FAMILY;
    protected java.awt.geom.Rectangle2D curAOI;
    protected java.awt.geom.AffineTransform curTxf;
    protected org.apache.batik.gvt.GraphicsNode root;
    protected org.apache.batik.bridge.BridgeContext ctx;
    protected org.apache.batik.bridge.GVTBuilder builder;
    protected float width;
    protected float height;
    protected org.apache.batik.bridge.UserAgent userAgent;
    public static final org.apache.batik.transcoder.TranscodingHints$Key KEY_WIDTH;
    public static final org.apache.batik.transcoder.TranscodingHints$Key KEY_HEIGHT;
    public static final org.apache.batik.transcoder.TranscodingHints$Key KEY_MAX_WIDTH;
    public static final org.apache.batik.transcoder.TranscodingHints$Key KEY_MAX_HEIGHT;
    public static final org.apache.batik.transcoder.TranscodingHints$Key KEY_AOI;
    public static final org.apache.batik.transcoder.TranscodingHints$Key KEY_LANGUAGE;
    public static final org.apache.batik.transcoder.TranscodingHints$Key KEY_MEDIA;
    public static final org.apache.batik.transcoder.TranscodingHints$Key KEY_DEFAULT_FONT_FAMILY;
    public static final org.apache.batik.transcoder.TranscodingHints$Key KEY_ALTERNATE_STYLESHEET;
    public static final org.apache.batik.transcoder.TranscodingHints$Key KEY_USER_STYLESHEET_URI;
    public static final org.apache.batik.transcoder.TranscodingHints$Key KEY_PIXEL_UNIT_TO_MILLIMETER;
    public static final org.apache.batik.transcoder.TranscodingHints$Key KEY_PIXEL_TO_MM;
    public static final org.apache.batik.transcoder.TranscodingHints$Key KEY_EXECUTE_ONLOAD;
    public static final org.apache.batik.transcoder.TranscodingHints$Key KEY_SNAPSHOT_TIME;
    public static final org.apache.batik.transcoder.TranscodingHints$Key KEY_ALLOWED_SCRIPT_TYPES;
    public static final java.lang.String DEFAULT_ALLOWED_SCRIPT_TYPES;
    public static final org.apache.batik.transcoder.TranscodingHints$Key KEY_CONSTRAIN_SCRIPT_ORIGIN;

    protected void <init>()
    {
        java.lang.Boolean $r13;
        org.apache.batik.transcoder.TranscodingHints$Key $r2, $r4, $r7, $r9, $r11, $r14, $r16;
        org.w3c.dom.DOMImplementation $r8;
        org.apache.batik.transcoder.SVGAbstractTranscoder r0;
        org.apache.batik.bridge.UserAgent $r1;
        org.apache.batik.transcoder.TranscodingHints $r3, $r5, $r6, $r10, $r12, $r15, $r17;

        r0 := @this: org.apache.batik.transcoder.SVGAbstractTranscoder;

        specialinvoke r0.<org.apache.batik.transcoder.XMLAbstractTranscoder: void <init>()>();

        r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: float width> = 400.0F;

        r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: float height> = 400.0F;

        $r1 = virtualinvoke r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.bridge.UserAgent createUserAgent()>();

        r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.bridge.UserAgent userAgent> = $r1;

        $r3 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r2 = <org.apache.batik.transcoder.XMLAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_DOCUMENT_ELEMENT_NAMESPACE_URI>;

        virtualinvoke $r3.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, "http://www.w3.org/2000/svg");

        $r5 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r4 = <org.apache.batik.transcoder.XMLAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_DOCUMENT_ELEMENT>;

        virtualinvoke $r5.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, "svg");

        $r6 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r7 = <org.apache.batik.transcoder.XMLAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_DOM_IMPLEMENTATION>;

        $r8 = staticinvoke <org.apache.batik.dom.svg.SVGDOMImplementation: org.w3c.dom.DOMImplementation getDOMImplementation()>();

        virtualinvoke $r6.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8);

        $r10 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r9 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_MEDIA>;

        virtualinvoke $r10.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, "screen");

        $r12 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r11 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_DEFAULT_FONT_FAMILY>;

        virtualinvoke $r12.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, "Arial, Helvetica, sans-serif");

        $r15 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r14 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_EXECUTE_ONLOAD>;

        $r13 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r15.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r13);

        $r17 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r16 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_ALLOWED_SCRIPT_TYPES>;

        virtualinvoke $r17.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, "text/ecmascript, application/ecmascript, text/javascript, application/javascript, application/java-archive");

        return;
    }

    protected org.apache.batik.bridge.UserAgent createUserAgent()
    {
        org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent $r0;
        org.apache.batik.transcoder.SVGAbstractTranscoder r1;

        r1 := @this: org.apache.batik.transcoder.SVGAbstractTranscoder;

        $r0 = new org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent;

        specialinvoke $r0.<org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent: void <init>(org.apache.batik.transcoder.SVGAbstractTranscoder)>(r1);

        return $r0;
    }

    protected org.apache.batik.dom.util.DocumentFactory createDocumentFactory(org.w3c.dom.DOMImplementation, java.lang.String)
    {
        org.apache.batik.dom.svg.SAXSVGDocumentFactory $r0;
        java.lang.String r1;
        org.apache.batik.transcoder.SVGAbstractTranscoder r2;
        org.w3c.dom.DOMImplementation r3;

        r2 := @this: org.apache.batik.transcoder.SVGAbstractTranscoder;

        r3 := @parameter0: org.w3c.dom.DOMImplementation;

        r1 := @parameter1: java.lang.String;

        $r0 = new org.apache.batik.dom.svg.SAXSVGDocumentFactory;

        specialinvoke $r0.<org.apache.batik.dom.svg.SAXSVGDocumentFactory: void <init>(java.lang.String)>(r1);

        return $r0;
    }

    public void transcode(org.apache.batik.transcoder.TranscoderInput, org.apache.batik.transcoder.TranscoderOutput) throws org.apache.batik.transcoder.TranscoderException
    {
        org.apache.batik.transcoder.TranscoderInput r1;
        org.apache.batik.transcoder.TranscoderOutput r2;
        org.apache.batik.bridge.BridgeContext $r3, $r4;
        org.apache.batik.transcoder.SVGAbstractTranscoder r0;

        r0 := @this: org.apache.batik.transcoder.SVGAbstractTranscoder;

        r1 := @parameter0: org.apache.batik.transcoder.TranscoderInput;

        r2 := @parameter1: org.apache.batik.transcoder.TranscoderOutput;

        specialinvoke r0.<org.apache.batik.transcoder.XMLAbstractTranscoder: void transcode(org.apache.batik.transcoder.TranscoderInput,org.apache.batik.transcoder.TranscoderOutput)>(r1, r2);

        $r3 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.bridge.BridgeContext ctx>;

        if $r3 == null goto label1;

        $r4 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.bridge.BridgeContext ctx>;

        virtualinvoke $r4.<org.apache.batik.bridge.BridgeContext: void dispose()>();

     label1:
        return;
    }

    protected void transcode(org.w3c.dom.Document, java.lang.String, org.apache.batik.transcoder.TranscoderOutput) throws org.apache.batik.transcoder.TranscoderException
    {
        org.w3c.dom.Document $r61, r67;
        org.apache.batik.bridge.BridgeException $r64;
        java.awt.geom.Dimension2D $r13, $r15;
        org.apache.batik.transcoder.TranscoderOutput r66;
        org.apache.batik.dom.svg.SVGOMDocument $r52, $r63;
        org.apache.batik.transcoder.TranscodingHints$Key $r1, $r6, $r16, $r26, $r32, $r37, $r44, $r48, $r53, $r58, $r70;
        org.apache.batik.bridge.GVTBuilder $r5, $r9;
        org.apache.batik.transcoder.SVGAbstractTranscoder r0;
        int $i0, $i1;
        java.lang.Boolean $r47;
        org.apache.batik.transcoder.TranscoderException $r65;
        java.lang.Object $r28, $r39, $r46, $r50, $r55, $r60;
        java.lang.Float $r40, $r51, $r56;
        java.awt.geom.Rectangle2D r71;
        java.awt.geom.Rectangle2D$Float $r73;
        org.w3c.dom.DOMImplementation $r57, r68;
        org.w3c.dom.svg.SVGSVGElement $r3;
        org.apache.batik.bridge.BaseScriptingEnvironment $r30;
        org.apache.batik.gvt.GraphicsNode $r10;
        org.apache.batik.bridge.BridgeContext $r4, $r8, $r11, $r12, $r14, $r24, $r25, $r31, $r34, $r35, $r41, $r43;
        java.awt.geom.AffineTransform $r22, $r29, r72;
        org.apache.batik.transcoder.TranscodingHints $r2, $r7, $r17, $r27, $r33, $r38, $r45, $r49, $r54, $r59, $r69;
        org.apache.batik.util.ParsedURL $r18, $r62;
        java.lang.String r19, $r20, $r21, $r23;
        org.apache.batik.bridge.SVGAnimationEngine $r36, $r42;
        org.apache.batik.gvt.CanvasGraphicsNode $r74;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, f17, f18, $f19, $f20;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, d24, d25, d26;

        r0 := @this: org.apache.batik.transcoder.SVGAbstractTranscoder;

        r67 := @parameter0: org.w3c.dom.Document;

        r19 := @parameter1: java.lang.String;

        r66 := @parameter2: org.apache.batik.transcoder.TranscoderOutput;

        if r67 == null goto label01;

        $r57 = interfaceinvoke r67.<org.w3c.dom.Document: org.w3c.dom.DOMImplementation getImplementation()>();

        $z7 = $r57 instanceof org.apache.batik.dom.svg.SVGDOMImplementation;

        if $z7 != 0 goto label01;

        $r59 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r58 = <org.apache.batik.transcoder.XMLAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_DOM_IMPLEMENTATION>;

        $r60 = virtualinvoke $r59.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r58);

        r68 = (org.w3c.dom.DOMImplementation) $r60;

        $r61 = staticinvoke <org.apache.batik.dom.util.DOMUtilities: org.w3c.dom.Document deepCloneDocument(org.w3c.dom.Document,org.w3c.dom.DOMImplementation)>(r67, r68);

        r67 = $r61;

        if r19 == null goto label01;

        $r62 = new org.apache.batik.util.ParsedURL;

        specialinvoke $r62.<org.apache.batik.util.ParsedURL: void <init>(java.lang.String)>(r19);

        $r63 = (org.apache.batik.dom.svg.SVGOMDocument) $r61;

        virtualinvoke $r63.<org.apache.batik.dom.svg.SVGOMDocument: void setParsedURL(org.apache.batik.util.ParsedURL)>($r62);

     label01:
        $r69 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r70 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_WIDTH>;

        $z8 = virtualinvoke $r69.<org.apache.batik.transcoder.TranscodingHints: boolean containsKey(java.lang.Object)>($r70);

        if $z8 == 0 goto label02;

        $r54 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r53 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_WIDTH>;

        $r55 = virtualinvoke $r54.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r53);

        $r56 = (java.lang.Float) $r55;

        $f16 = virtualinvoke $r56.<java.lang.Float: float floatValue()>();

        r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: float width> = $f16;

     label02:
        $r2 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r1 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_HEIGHT>;

        $z0 = virtualinvoke $r2.<org.apache.batik.transcoder.TranscodingHints: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label03;

        $r49 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r48 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_HEIGHT>;

        $r50 = virtualinvoke $r49.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r48);

        $r51 = (java.lang.Float) $r50;

        $f15 = virtualinvoke $r51.<java.lang.Float: float floatValue()>();

        r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: float height> = $f15;

     label03:
        $r52 = (org.apache.batik.dom.svg.SVGOMDocument) r67;

        $r3 = virtualinvoke $r52.<org.apache.batik.dom.svg.SVGOMDocument: org.w3c.dom.svg.SVGSVGElement getRootElement()>();

        $r4 = virtualinvoke r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.bridge.BridgeContext createBridgeContext(org.apache.batik.dom.svg.SVGOMDocument)>($r52);

        r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.bridge.BridgeContext ctx> = $r4;

        $r5 = new org.apache.batik.bridge.GVTBuilder;

        specialinvoke $r5.<org.apache.batik.bridge.GVTBuilder: void <init>()>();

        r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.bridge.GVTBuilder builder> = $r5;

        $r7 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r6 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_EXECUTE_ONLOAD>;

        $z1 = virtualinvoke $r7.<org.apache.batik.transcoder.TranscodingHints: boolean containsKey(java.lang.Object)>($r6);

        if $z1 == 0 goto label04;

        $r45 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r44 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_EXECUTE_ONLOAD>;

        $r46 = virtualinvoke $r45.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r44);

        $r47 = (java.lang.Boolean) $r46;

        $z6 = virtualinvoke $r47.<java.lang.Boolean: boolean booleanValue()>();

        if $z6 == 0 goto label04;

        $z9 = 1;

        goto label05;

     label04:
        $z9 = 0;

     label05:
        if $z9 == 0 goto label06;

        $r43 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.bridge.BridgeContext ctx>;

        virtualinvoke $r43.<org.apache.batik.bridge.BridgeContext: void setDynamicState(int)>(2);

     label06:
        $r9 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.bridge.GVTBuilder builder>;

        $r8 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.bridge.BridgeContext ctx>;

        $r10 = virtualinvoke $r9.<org.apache.batik.bridge.GVTBuilder: org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Document)>($r8, $r52);

        $r11 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.bridge.BridgeContext ctx>;

        $z2 = virtualinvoke $r11.<org.apache.batik.bridge.BridgeContext: boolean isDynamic()>();

        if $z2 == 0 goto label08;

        $r30 = new org.apache.batik.bridge.BaseScriptingEnvironment;

        $r31 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.bridge.BridgeContext ctx>;

        specialinvoke $r30.<org.apache.batik.bridge.BaseScriptingEnvironment: void <init>(org.apache.batik.bridge.BridgeContext)>($r31);

        virtualinvoke $r30.<org.apache.batik.bridge.BaseScriptingEnvironment: void loadScripts()>();

        virtualinvoke $r30.<org.apache.batik.bridge.BaseScriptingEnvironment: void dispatchSVGLoadEvent()>();

        $r33 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r32 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_SNAPSHOT_TIME>;

        $z4 = virtualinvoke $r33.<org.apache.batik.transcoder.TranscodingHints: boolean containsKey(java.lang.Object)>($r32);

        if $z4 == 0 goto label07;

        $r38 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r37 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_SNAPSHOT_TIME>;

        $r39 = virtualinvoke $r38.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r37);

        $r40 = (java.lang.Float) $r39;

        $f14 = virtualinvoke $r40.<java.lang.Float: float floatValue()>();

        $r41 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.bridge.BridgeContext ctx>;

        $r42 = virtualinvoke $r41.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.SVGAnimationEngine getAnimationEngine()>();

        virtualinvoke $r42.<org.apache.batik.bridge.SVGAnimationEngine: float setCurrentTime(float)>($f14);

        goto label08;

     label07:
        $r34 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.bridge.BridgeContext ctx>;

        $z5 = virtualinvoke $r34.<org.apache.batik.bridge.BridgeContext: boolean isSVG12()>();

        if $z5 == 0 goto label08;

        $f13 = staticinvoke <org.apache.batik.bridge.SVGUtilities: float convertSnapshotTime(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)>($r3, null);

        $r35 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.bridge.BridgeContext ctx>;

        $r36 = virtualinvoke $r35.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.SVGAnimationEngine getAnimationEngine()>();

        virtualinvoke $r36.<org.apache.batik.bridge.SVGAnimationEngine: float setCurrentTime(float)>($f13);

     label08:
        goto label10;

     label09:
        $r64 := @caughtexception;

        virtualinvoke $r64.<java.lang.Throwable: void printStackTrace()>();

        $r65 = new org.apache.batik.transcoder.TranscoderException;

        specialinvoke $r65.<org.apache.batik.transcoder.TranscoderException: void <init>(java.lang.Exception)>($r64);

        throw $r65;

     label10:
        $r12 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.bridge.BridgeContext ctx>;

        $r13 = virtualinvoke $r12.<org.apache.batik.bridge.BridgeContext: java.awt.geom.Dimension2D getDocumentSize()>();

        $d0 = virtualinvoke $r13.<java.awt.geom.Dimension2D: double getWidth()>();

        f17 = (float) $d0;

        $r14 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.bridge.BridgeContext ctx>;

        $r15 = virtualinvoke $r14.<org.apache.batik.bridge.BridgeContext: java.awt.geom.Dimension2D getDocumentSize()>();

        $d1 = virtualinvoke $r15.<java.awt.geom.Dimension2D: double getHeight()>();

        f18 = (float) $d1;

        virtualinvoke r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: void setImageSize(float,float)>(f17, f18);

        $r17 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r16 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_AOI>;

        $z3 = virtualinvoke $r17.<org.apache.batik.transcoder.TranscodingHints: boolean containsKey(java.lang.Object)>($r16);

        if $z3 == 0 goto label11;

        $r27 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r26 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_AOI>;

        $r28 = virtualinvoke $r27.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r26);

        r71 = (java.awt.geom.Rectangle2D) $r28;

        $r29 = new java.awt.geom.AffineTransform;

        specialinvoke $r29.<java.awt.geom.AffineTransform: void <init>()>();

        r72 = $r29;

        $f9 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: float width>;

        $d4 = (double) $f9;

        $d5 = virtualinvoke r71.<java.awt.geom.RectangularShape: double getWidth()>();

        d25 = $d4 / $d5;

        $f10 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: float height>;

        $d6 = (double) $f10;

        $d7 = virtualinvoke r71.<java.awt.geom.RectangularShape: double getHeight()>();

        d26 = $d6 / $d7;

        $d8 = staticinvoke <java.lang.Math: double min(double,double)>(d25, d26);

        virtualinvoke $r29.<java.awt.geom.AffineTransform: void scale(double,double)>($d8, $d8);

        $d9 = virtualinvoke r71.<java.awt.geom.RectangularShape: double getX()>();

        $d11 = neg $d9;

        $f11 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: float width>;

        $d10 = (double) $f11;

        $d12 = $d10 / $d8;

        $d13 = virtualinvoke r71.<java.awt.geom.RectangularShape: double getWidth()>();

        $d14 = $d12 - $d13;

        $d15 = $d14 / 2.0;

        d16 = $d11 + $d15;

        $d17 = virtualinvoke r71.<java.awt.geom.RectangularShape: double getY()>();

        $d19 = neg $d17;

        $f12 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: float height>;

        $d18 = (double) $f12;

        $d20 = $d18 / $d8;

        $d21 = virtualinvoke r71.<java.awt.geom.RectangularShape: double getHeight()>();

        $d22 = $d20 - $d21;

        $d23 = $d22 / 2.0;

        d24 = $d19 + $d23;

        virtualinvoke $r29.<java.awt.geom.AffineTransform: void translate(double,double)>(d16, d24);

        r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: java.awt.geom.Rectangle2D curAOI> = r71;

        goto label15;

     label11:
        $r18 = new org.apache.batik.util.ParsedURL;

        specialinvoke $r18.<org.apache.batik.util.ParsedURL: void <init>(java.lang.String)>(r19);

        $r20 = virtualinvoke $r18.<org.apache.batik.util.ParsedURL: java.lang.String getRef()>();

        $r21 = interfaceinvoke $r3.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "viewBox");

        if $r20 == null goto label12;

        $i1 = virtualinvoke $r20.<java.lang.String: int length()>();

        if $i1 == 0 goto label12;

        $f8 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: float width>;

        $f7 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: float height>;

        $r25 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.bridge.BridgeContext ctx>;

        r72 = staticinvoke <org.apache.batik.bridge.ViewBox: java.awt.geom.AffineTransform getViewTransform(java.lang.String,org.w3c.dom.Element,float,float,org.apache.batik.bridge.BridgeContext)>($r20, $r3, $f8, $f7, $r25);

        goto label14;

     label12:
        if $r21 == null goto label13;

        $i0 = virtualinvoke $r21.<java.lang.String: int length()>();

        if $i0 == 0 goto label13;

        $r23 = interfaceinvoke $r3.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "preserveAspectRatio");

        $f6 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: float width>;

        $f5 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: float height>;

        $r24 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.bridge.BridgeContext ctx>;

        r72 = staticinvoke <org.apache.batik.bridge.ViewBox: java.awt.geom.AffineTransform getPreserveAspectRatioTransform(org.w3c.dom.Element,java.lang.String,java.lang.String,float,float,org.apache.batik.bridge.BridgeContext)>($r3, $r21, $r23, $f6, $f5, $r24);

        goto label14;

     label13:
        $f0 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: float width>;

        $f3 = $f0 / f17;

        $f1 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: float height>;

        $f4 = $f1 / f18;

        $f2 = staticinvoke <java.lang.Math: float min(float,float)>($f3, $f4);

        $d3 = (double) $f2;

        $d2 = (double) $f2;

        r72 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>($d3, $d2);

     label14:
        $r73 = new java.awt.geom.Rectangle2D$Float;

        $f19 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: float width>;

        $f20 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: float height>;

        specialinvoke $r73.<java.awt.geom.Rectangle2D$Float: void <init>(float,float,float,float)>(0.0F, 0.0F, $f19, $f20);

        r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: java.awt.geom.Rectangle2D curAOI> = $r73;

     label15:
        $r74 = virtualinvoke r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.gvt.CanvasGraphicsNode getCanvasGraphicsNode(org.apache.batik.gvt.GraphicsNode)>($r10);

        if $r74 == null goto label16;

        virtualinvoke $r74.<org.apache.batik.gvt.CanvasGraphicsNode: void setViewingTransform(java.awt.geom.AffineTransform)>(r72);

        $r22 = new java.awt.geom.AffineTransform;

        specialinvoke $r22.<java.awt.geom.AffineTransform: void <init>()>();

        r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: java.awt.geom.AffineTransform curTxf> = $r22;

        goto label17;

     label16:
        r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: java.awt.geom.AffineTransform curTxf> = r72;

     label17:
        r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.gvt.GraphicsNode root> = $r10;

        return;

        catch org.apache.batik.bridge.BridgeException from label05 to label08 with label09;
    }

    protected org.apache.batik.gvt.CanvasGraphicsNode getCanvasGraphicsNode(org.apache.batik.gvt.GraphicsNode)
    {
        org.apache.batik.gvt.GraphicsNode r5, r6;
        org.apache.batik.gvt.CanvasGraphicsNode $r3;
        org.apache.batik.transcoder.SVGAbstractTranscoder r4;
        org.apache.batik.gvt.CompositeGraphicsNode r0;
        java.util.List $r1;
        int $i0;
        java.lang.Object $r2;
        boolean $z0, $z1;

        r4 := @this: org.apache.batik.transcoder.SVGAbstractTranscoder;

        r5 := @parameter0: org.apache.batik.gvt.GraphicsNode;

        $z0 = r5 instanceof org.apache.batik.gvt.CompositeGraphicsNode;

        if $z0 != 0 goto label1;

        return null;

     label1:
        r0 = (org.apache.batik.gvt.CompositeGraphicsNode) r5;

        $r1 = virtualinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.util.List getChildren()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label2;

        return null;

     label2:
        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        r6 = (org.apache.batik.gvt.GraphicsNode) $r2;

        $z1 = r6 instanceof org.apache.batik.gvt.CanvasGraphicsNode;

        if $z1 != 0 goto label3;

        return null;

     label3:
        $r3 = (org.apache.batik.gvt.CanvasGraphicsNode) r6;

        return $r3;
    }

    protected org.apache.batik.bridge.BridgeContext createBridgeContext(org.apache.batik.dom.svg.SVGOMDocument)
    {
        org.apache.batik.bridge.BridgeContext $r2;
        java.lang.String $r3;
        org.apache.batik.transcoder.SVGAbstractTranscoder r0;
        org.apache.batik.dom.svg.SVGOMDocument r1;
        boolean $z0;

        r0 := @this: org.apache.batik.transcoder.SVGAbstractTranscoder;

        r1 := @parameter0: org.apache.batik.dom.svg.SVGOMDocument;

        $z0 = virtualinvoke r1.<org.apache.batik.dom.svg.SVGOMDocument: boolean isSVG12()>();

        if $z0 == 0 goto label1;

        $r3 = "1.2";

        goto label2;

     label1:
        $r3 = "1.x";

     label2:
        $r2 = virtualinvoke r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.bridge.BridgeContext createBridgeContext(java.lang.String)>($r3);

        return $r2;
    }

    protected org.apache.batik.bridge.BridgeContext createBridgeContext()
    {
        org.apache.batik.bridge.BridgeContext $r1;
        org.apache.batik.transcoder.SVGAbstractTranscoder r0;

        r0 := @this: org.apache.batik.transcoder.SVGAbstractTranscoder;

        $r1 = virtualinvoke r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.bridge.BridgeContext createBridgeContext(java.lang.String)>("1.x");

        return $r1;
    }

    protected org.apache.batik.bridge.BridgeContext createBridgeContext(java.lang.String)
    {
        org.apache.batik.bridge.BridgeContext $r2;
        org.apache.batik.transcoder.SVGAbstractTranscoder r3;
        org.apache.batik.bridge.svg12.SVG12BridgeContext $r5;
        org.apache.batik.bridge.UserAgent $r4, $r6;
        java.lang.String r0, $r1;
        boolean $z0;

        r3 := @this: org.apache.batik.transcoder.SVGAbstractTranscoder;

        r0 := @parameter0: java.lang.String;

        $r1 = "1.2";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r5 = new org.apache.batik.bridge.svg12.SVG12BridgeContext;

        $r6 = r3.<org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.bridge.UserAgent userAgent>;

        specialinvoke $r5.<org.apache.batik.bridge.svg12.SVG12BridgeContext: void <init>(org.apache.batik.bridge.UserAgent)>($r6);

        return $r5;

     label1:
        $r2 = new org.apache.batik.bridge.BridgeContext;

        $r4 = r3.<org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.bridge.UserAgent userAgent>;

        specialinvoke $r2.<org.apache.batik.bridge.BridgeContext: void <init>(org.apache.batik.bridge.UserAgent)>($r4);

        return $r2;
    }

    protected void setImageSize(float, float)
    {
        java.lang.Float $r10, $r14, $r18, $r22;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7;
        org.apache.batik.transcoder.TranscodingHints$Key $r1, $r3, $r5, $r7, $r11, $r15, $r19, $r24;
        boolean $z0, $z1, $z2, $z3;
        org.apache.batik.transcoder.SVGAbstractTranscoder r0;
        org.apache.batik.transcoder.TranscodingHints $r2, $r4, $r6, $r8, $r12, $r16, $r20, $r23;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, f12, f13, f14, f15;
        int $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.lang.Object $r9, $r13, $r17, $r21;

        r0 := @this: org.apache.batik.transcoder.SVGAbstractTranscoder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f12 = -1.0F;

        $r2 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r1 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_WIDTH>;

        $z0 = virtualinvoke $r2.<org.apache.batik.transcoder.TranscodingHints: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label01;

        $r20 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r19 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_WIDTH>;

        $r21 = virtualinvoke $r20.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r19);

        $r22 = (java.lang.Float) $r21;

        f12 = virtualinvoke $r22.<java.lang.Float: float floatValue()>();

     label01:
        f13 = -1.0F;

        $r4 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r3 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_HEIGHT>;

        $z1 = virtualinvoke $r4.<org.apache.batik.transcoder.TranscodingHints: boolean containsKey(java.lang.Object)>($r3);

        if $z1 == 0 goto label02;

        $r16 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r15 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_HEIGHT>;

        $r17 = virtualinvoke $r16.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r15);

        $r18 = (java.lang.Float) $r17;

        f13 = virtualinvoke $r18.<java.lang.Float: float floatValue()>();

     label02:
        $b0 = f12 cmpl 0.0F;

        $i8 = (int) $b0;

        if $i8 <= 0 goto label03;

        $b6 = f13 cmpl 0.0F;

        $i9 = (int) $b6;

        if $i9 <= 0 goto label03;

        r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: float width> = f12;

        r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: float height> = f13;

        goto label06;

     label03:
        $b1 = f13 cmpl 0.0F;

        $i10 = (int) $b1;

        if $i10 <= 0 goto label04;

        $f10 = f0 * f13;

        $f11 = $f10 / f1;

        r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: float width> = $f11;

        r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: float height> = f13;

        goto label06;

     label04:
        $b2 = f12 cmpl 0.0F;

        $i11 = (int) $b2;

        if $i11 <= 0 goto label05;

        r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: float width> = f12;

        $f8 = f1 * f12;

        $f9 = $f8 / f0;

        r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: float height> = $f9;

        goto label06;

     label05:
        r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: float width> = f0;

        r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: float height> = f1;

     label06:
        f14 = -1.0F;

        $r23 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r24 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_MAX_WIDTH>;

        $z3 = virtualinvoke $r23.<org.apache.batik.transcoder.TranscodingHints: boolean containsKey(java.lang.Object)>($r24);

        if $z3 == 0 goto label07;

        $r12 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r11 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_MAX_WIDTH>;

        $r13 = virtualinvoke $r12.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r11);

        $r14 = (java.lang.Float) $r13;

        f14 = virtualinvoke $r14.<java.lang.Float: float floatValue()>();

     label07:
        f15 = -1.0F;

        $r6 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r5 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_MAX_HEIGHT>;

        $z2 = virtualinvoke $r6.<org.apache.batik.transcoder.TranscodingHints: boolean containsKey(java.lang.Object)>($r5);

        if $z2 == 0 goto label08;

        $r8 = r0.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r7 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_MAX_HEIGHT>;

        $r9 = virtualinvoke $r8.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r7);

        $r10 = (java.lang.Float) $r9;

        f15 = virtualinvoke $r10.<java.lang.Float: float floatValue()>();

     label08:
        $b3 = f15 cmpl 0.0F;

        $i12 = (int) $b3;

        if $i12 <= 0 goto label09;

        $f5 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: float height>;

        $b5 = $f5 cmpl f15;

        $i13 = (int) $b5;

        if $i13 <= 0 goto label09;

        $f6 = f0 * f15;

        $f7 = $f6 / f1;

        r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: float width> = $f7;

        r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: float height> = f15;

     label09:
        $b7 = f14 cmpl 0.0F;

        $i14 = (int) $b7;

        if $i14 <= 0 goto label10;

        $f2 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: float width>;

        $b4 = $f2 cmpl f14;

        $i15 = (int) $b4;

        if $i15 <= 0 goto label10;

        r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: float width> = f14;

        $f3 = f1 * f14;

        $f4 = $f3 / f0;

        r0.<org.apache.batik.transcoder.SVGAbstractTranscoder: float height> = $f4;

     label10:
        return;
    }

    static void <clinit>()
    {
        org.apache.batik.transcoder.keys.Rectangle2DKey $r4;
        org.apache.batik.transcoder.keys.FloatKey $r10, $r13;
        org.apache.batik.transcoder.TranscodingHints$Key $r11;
        org.apache.batik.transcoder.keys.LengthKey $r0, $r1, $r2, $r3;
        org.apache.batik.transcoder.keys.StringKey $r5, $r6, $r7, $r8, $r9, $r14;
        org.apache.batik.transcoder.keys.BooleanKey $r12, $r15;

        <org.apache.batik.transcoder.SVGAbstractTranscoder: java.lang.String DEFAULT_ALLOWED_SCRIPT_TYPES> = "text/ecmascript, application/ecmascript, text/javascript, application/javascript, application/java-archive";

        <org.apache.batik.transcoder.SVGAbstractTranscoder: java.lang.String DEFAULT_DEFAULT_FONT_FAMILY> = "Arial, Helvetica, sans-serif";

        $r0 = new org.apache.batik.transcoder.keys.LengthKey;

        specialinvoke $r0.<org.apache.batik.transcoder.keys.LengthKey: void <init>()>();

        <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_WIDTH> = $r0;

        $r1 = new org.apache.batik.transcoder.keys.LengthKey;

        specialinvoke $r1.<org.apache.batik.transcoder.keys.LengthKey: void <init>()>();

        <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_HEIGHT> = $r1;

        $r2 = new org.apache.batik.transcoder.keys.LengthKey;

        specialinvoke $r2.<org.apache.batik.transcoder.keys.LengthKey: void <init>()>();

        <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_MAX_WIDTH> = $r2;

        $r3 = new org.apache.batik.transcoder.keys.LengthKey;

        specialinvoke $r3.<org.apache.batik.transcoder.keys.LengthKey: void <init>()>();

        <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_MAX_HEIGHT> = $r3;

        $r4 = new org.apache.batik.transcoder.keys.Rectangle2DKey;

        specialinvoke $r4.<org.apache.batik.transcoder.keys.Rectangle2DKey: void <init>()>();

        <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_AOI> = $r4;

        $r5 = new org.apache.batik.transcoder.keys.StringKey;

        specialinvoke $r5.<org.apache.batik.transcoder.keys.StringKey: void <init>()>();

        <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_LANGUAGE> = $r5;

        $r6 = new org.apache.batik.transcoder.keys.StringKey;

        specialinvoke $r6.<org.apache.batik.transcoder.keys.StringKey: void <init>()>();

        <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_MEDIA> = $r6;

        $r7 = new org.apache.batik.transcoder.keys.StringKey;

        specialinvoke $r7.<org.apache.batik.transcoder.keys.StringKey: void <init>()>();

        <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_DEFAULT_FONT_FAMILY> = $r7;

        $r8 = new org.apache.batik.transcoder.keys.StringKey;

        specialinvoke $r8.<org.apache.batik.transcoder.keys.StringKey: void <init>()>();

        <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_ALTERNATE_STYLESHEET> = $r8;

        $r9 = new org.apache.batik.transcoder.keys.StringKey;

        specialinvoke $r9.<org.apache.batik.transcoder.keys.StringKey: void <init>()>();

        <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_USER_STYLESHEET_URI> = $r9;

        $r10 = new org.apache.batik.transcoder.keys.FloatKey;

        specialinvoke $r10.<org.apache.batik.transcoder.keys.FloatKey: void <init>()>();

        <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_PIXEL_UNIT_TO_MILLIMETER> = $r10;

        $r11 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_PIXEL_UNIT_TO_MILLIMETER>;

        <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_PIXEL_TO_MM> = $r11;

        $r12 = new org.apache.batik.transcoder.keys.BooleanKey;

        specialinvoke $r12.<org.apache.batik.transcoder.keys.BooleanKey: void <init>()>();

        <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_EXECUTE_ONLOAD> = $r12;

        $r13 = new org.apache.batik.transcoder.keys.FloatKey;

        specialinvoke $r13.<org.apache.batik.transcoder.keys.FloatKey: void <init>()>();

        <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_SNAPSHOT_TIME> = $r13;

        $r14 = new org.apache.batik.transcoder.keys.StringKey;

        specialinvoke $r14.<org.apache.batik.transcoder.keys.StringKey: void <init>()>();

        <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_ALLOWED_SCRIPT_TYPES> = $r14;

        $r15 = new org.apache.batik.transcoder.keys.BooleanKey;

        specialinvoke $r15.<org.apache.batik.transcoder.keys.BooleanKey: void <init>()>();

        <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_CONSTRAIN_SCRIPT_ORIGIN> = $r15;

        return;
    }
}
