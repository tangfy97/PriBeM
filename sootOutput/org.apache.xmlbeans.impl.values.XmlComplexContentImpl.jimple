public class org.apache.xmlbeans.impl.values.XmlComplexContentImpl extends org.apache.xmlbeans.impl.values.XmlObjectBase
{
    private org.apache.xmlbeans.impl.schema.SchemaTypeImpl _schemaType;
    static final boolean $assertionsDisabled;
    static java.lang.Class class$org$apache$xmlbeans$impl$values$XmlComplexContentImpl;

    public void <init>(org.apache.xmlbeans.SchemaType)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl $r2;
        org.apache.xmlbeans.SchemaType r1;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r1 := @parameter0: org.apache.xmlbeans.SchemaType;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlObjectBase: void <init>()>();

        $r2 = (org.apache.xmlbeans.impl.schema.SchemaTypeImpl) r1;

        r0.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.schema.SchemaTypeImpl _schemaType> = $r2;

        virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: void initComplexType(boolean,boolean)>(1, 1);

        return;
    }

    public org.apache.xmlbeans.SchemaType schemaType()
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl $r1;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.schema.SchemaTypeImpl _schemaType>;

        return $r1;
    }

    public java.lang.String compute_text(org.apache.xmlbeans.impl.values.NamespaceManager)
    {
        org.apache.xmlbeans.impl.values.NamespaceManager r1;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r1 := @parameter0: org.apache.xmlbeans.impl.values.NamespaceManager;

        return null;
    }

    protected final void set_String(java.lang.String)
    {
        java.lang.AssertionError $r11;
        java.lang.StringBuffer $r5, $r6, $r8;
        int $i0, $i1;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl $r1, $r3, $r7, $r10;
        java.lang.String r2, $r9;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r0;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r2 := @parameter0: java.lang.String;

        $z0 = <org.apache.xmlbeans.impl.values.XmlComplexContentImpl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r10 = r0.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.schema.SchemaTypeImpl _schemaType>;

        $i1 = virtualinvoke $r10.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: int getContentType()>();

        if $i1 != 2 goto label1;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.schema.SchemaTypeImpl _schemaType>;

        $i0 = virtualinvoke $r1.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: int getContentType()>();

        if $i0 == 4 goto label2;

        $r3 = r0.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.schema.SchemaTypeImpl _schemaType>;

        $z1 = virtualinvoke $r3.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: boolean isNoType()>();

        if $z1 != 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Type does not allow for textual content: ");

        $r7 = r0.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.schema.SchemaTypeImpl _schemaType>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label2:
        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set_String(java.lang.String)>(r2);

        return;
    }

    public void set_text(java.lang.String)
    {
        java.lang.AssertionError $r3;
        int $i0;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl $r1, $r2;
        java.lang.String r4;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r4 := @parameter0: java.lang.String;

        $z0 = <org.apache.xmlbeans.impl.values.XmlComplexContentImpl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r1 = r0.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.schema.SchemaTypeImpl _schemaType>;

        $i0 = virtualinvoke $r1.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: int getContentType()>();

        if $i0 == 4 goto label1;

        $r2 = r0.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.schema.SchemaTypeImpl _schemaType>;

        $z1 = virtualinvoke $r2.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: boolean isNoType()>();

        if $z1 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        return;
    }

    protected void update_from_complex_content()
    {
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        return;
    }

    public void set_nil()
    {
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        return;
    }

    public boolean equal_to(org.apache.xmlbeans.XmlObject)
    {
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl $r2;
        org.apache.xmlbeans.XmlObject r1;
        org.apache.xmlbeans.SchemaType $r3;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r1 := @parameter0: org.apache.xmlbeans.XmlObject;

        $r2 = r0.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.schema.SchemaTypeImpl _schemaType>;

        $r3 = interfaceinvoke r1.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.SchemaType schemaType()>();

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    protected int value_hash_code()
    {
        java.lang.IllegalStateException $r0;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Complex types cannot be used as hash keys");

        throw $r0;
    }

    public org.apache.xmlbeans.impl.values.TypeStoreVisitor new_visitor()
    {
        org.apache.xmlbeans.SchemaParticle $r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl $r2;
        org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl $r0;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        $r0 = new org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl;

        $r2 = r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.schema.SchemaTypeImpl _schemaType>;

        $r3 = virtualinvoke $r2.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: org.apache.xmlbeans.SchemaParticle getContentModel()>();

        specialinvoke $r0.<org.apache.xmlbeans.impl.schema.SchemaTypeVisitorImpl: void <init>(org.apache.xmlbeans.SchemaParticle)>($r3);

        return $r0;
    }

    public boolean is_child_element_order_sensitive()
    {
        org.apache.xmlbeans.SchemaType $r1;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.SchemaType schemaType()>();

        $z0 = interfaceinvoke $r1.<org.apache.xmlbeans.SchemaType: boolean isOrderSensitive()>();

        return $z0;
    }

    public int get_elementflags(javax.xml.namespace.QName)
    {
        byte $b5, $b6, $b7, $b8;
        org.apache.xmlbeans.SchemaProperty $r3;
        int $i0, $i1, $i2, $i3, $i4, $i9, $i11;
        org.apache.xmlbeans.SchemaType $r1;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r0;
        boolean $z0;
        javax.xml.namespace.QName r2;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r2 := @parameter0: javax.xml.namespace.QName;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.SchemaType schemaType()>();

        $r3 = interfaceinvoke $r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaProperty getElementProperty(javax.xml.namespace.QName)>(r2);

        if $r3 != null goto label1;

        return 0;

     label1:
        $i0 = interfaceinvoke $r3.<org.apache.xmlbeans.SchemaProperty: int hasDefault()>();

        if $i0 == 1 goto label2;

        $i1 = interfaceinvoke $r3.<org.apache.xmlbeans.SchemaProperty: int hasFixed()>();

        if $i1 == 1 goto label2;

        $i2 = interfaceinvoke $r3.<org.apache.xmlbeans.SchemaProperty: int hasNillable()>();

        if $i2 != 1 goto label3;

     label2:
        $i11 = (int) -1;

        return $i11;

     label3:
        $i3 = interfaceinvoke $r3.<org.apache.xmlbeans.SchemaProperty: int hasDefault()>();

        if $i3 != 0 goto label4;

        $b7 = 0;

        goto label5;

     label4:
        $b7 = 2;

     label5:
        $i4 = interfaceinvoke $r3.<org.apache.xmlbeans.SchemaProperty: int hasFixed()>();

        if $i4 != 0 goto label6;

        $b8 = 0;

        goto label7;

     label6:
        $b8 = 4;

     label7:
        $b5 = $b7 | $b8;

        $i9 = interfaceinvoke $r3.<org.apache.xmlbeans.SchemaProperty: int hasNillable()>();

        if $i9 != 0 goto label8;

        $z0 = 0;

        goto label9;

     label8:
        $z0 = 1;

     label9:
        $b6 = $b5 | $z0;

        return $b6;
    }

    public java.lang.String get_default_attribute_text(javax.xml.namespace.QName)
    {
        javax.xml.namespace.QName r1;
        java.lang.String $r2;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r1 := @parameter0: javax.xml.namespace.QName;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlObjectBase: java.lang.String get_default_attribute_text(javax.xml.namespace.QName)>(r1);

        return $r2;
    }

    public java.lang.String get_default_element_text(javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.SchemaProperty $r3;
        javax.xml.namespace.QName r2;
        java.lang.String $r4;
        org.apache.xmlbeans.SchemaType $r1;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r2 := @parameter0: javax.xml.namespace.QName;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.SchemaType schemaType()>();

        $r3 = interfaceinvoke $r1.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaProperty getElementProperty(javax.xml.namespace.QName)>(r2);

        if $r3 != null goto label1;

        return "";

     label1:
        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.SchemaProperty: java.lang.String getDefaultText()>();

        return $r4;
    }

    protected void unionArraySetterHelper(java.lang.Object[], javax.xml.namespace.QName)
    {
        java.lang.Object[] r0;
        org.apache.xmlbeans.impl.values.XmlObjectBase $r5;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser r6;
        int i0, $i1, $i2, i3, i4, $i6;
        java.lang.Object $r4;
        javax.xml.namespace.QName r3;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: java.lang.Object[];

        r3 := @parameter1: javax.xml.namespace.QName;

        if r0 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = lengthof r0;

     label2:
        i0 = $i2;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>(r3);

     label3:
        if i3 <= i0 goto label4;

        $i1 = i3 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>(r3, $i1);

        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label3;

     label4:
        i4 = 0;

     label5:
        if i4 >= i0 goto label8;

        if i4 < i3 goto label6;

        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r3);

        goto label7;

     label6:
        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>(r3, i4);

     label7:
        $r5 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r6;

        $r4 = r0[i4];

        virtualinvoke $r5.<org.apache.xmlbeans.impl.values.XmlObjectBase: void objectSet(java.lang.Object)>($r4);

        i4 = i4 + 1;

        goto label5;

     label8:
        return;
    }

    protected org.apache.xmlbeans.SimpleValue[] arraySetterHelper(int, javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.SimpleValue[] r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser r5;
        int i0, $i1, i2, i3, $i5;
        javax.xml.namespace.QName r3;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;
        org.apache.xmlbeans.SimpleValue $r4;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        i0 := @parameter0: int;

        r3 := @parameter1: javax.xml.namespace.QName;

        r0 = newarray (org.apache.xmlbeans.SimpleValue)[i0];

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i2 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>(r3);

     label1:
        if i2 <= i0 goto label2;

        $i1 = i2 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>(r3, $i1);

        $i5 = (int) -1;

        i2 = i2 + $i5;

        goto label1;

     label2:
        i3 = 0;

     label3:
        if i3 >= i0 goto label6;

        if i3 < i2 goto label4;

        r5 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r3);

        goto label5;

     label4:
        r5 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>(r3, i3);

     label5:
        $r4 = (org.apache.xmlbeans.SimpleValue) r5;

        r0[i3] = $r4;

        i3 = i3 + 1;

        goto label3;

     label6:
        return r0;
    }

    protected org.apache.xmlbeans.SimpleValue[] arraySetterHelper(int, javax.xml.namespace.QName, org.apache.xmlbeans.QNameSet)
    {
        org.apache.xmlbeans.SimpleValue[] r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.QNameSet r3;
        org.apache.xmlbeans.impl.values.TypeStoreUser r6;
        int i0, $i1, i2, i3, $i5;
        javax.xml.namespace.QName r5;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;
        org.apache.xmlbeans.SimpleValue $r4;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        i0 := @parameter0: int;

        r5 := @parameter1: javax.xml.namespace.QName;

        r3 := @parameter2: org.apache.xmlbeans.QNameSet;

        r0 = newarray (org.apache.xmlbeans.SimpleValue)[i0];

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i2 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(org.apache.xmlbeans.QNameSet)>(r3);

     label1:
        if i2 <= i0 goto label2;

        $i1 = i2 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(org.apache.xmlbeans.QNameSet,int)>(r3, $i1);

        $i5 = (int) -1;

        i2 = i2 + $i5;

        goto label1;

     label2:
        i3 = 0;

     label3:
        if i3 >= i0 goto label6;

        if i3 < i2 goto label4;

        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r5);

        goto label5;

     label4:
        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(org.apache.xmlbeans.QNameSet,int)>(r3, i3);

     label5:
        $r4 = (org.apache.xmlbeans.SimpleValue) r6;

        r0[i3] = $r4;

        i3 = i3 + 1;

        goto label3;

     label6:
        return r0;
    }

    protected void arraySetterHelper(boolean[], javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase $r4;
        boolean[] r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser r5;
        int i0, $i1, $i2, i3, i4, $i6;
        javax.xml.namespace.QName r3;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;
        boolean $z0;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: boolean[];

        r3 := @parameter1: javax.xml.namespace.QName;

        if r0 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = lengthof r0;

     label2:
        i0 = $i2;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>(r3);

     label3:
        if i3 <= i0 goto label4;

        $i1 = i3 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>(r3, $i1);

        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label3;

     label4:
        i4 = 0;

     label5:
        if i4 >= i0 goto label8;

        if i4 < i3 goto label6;

        r5 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r3);

        goto label7;

     label6:
        r5 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>(r3, i4);

     label7:
        $r4 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r5;

        $z0 = r0[i4];

        virtualinvoke $r4.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(boolean)>($z0);

        i4 = i4 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(float[], javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase $r4;
        float[] r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser r5;
        int i0, $i1, $i2, i3, i4, $i6;
        float $f0;
        javax.xml.namespace.QName r3;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: float[];

        r3 := @parameter1: javax.xml.namespace.QName;

        if r0 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = lengthof r0;

     label2:
        i0 = $i2;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>(r3);

     label3:
        if i3 <= i0 goto label4;

        $i1 = i3 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>(r3, $i1);

        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label3;

     label4:
        i4 = 0;

     label5:
        if i4 >= i0 goto label8;

        if i4 < i3 goto label6;

        r5 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r3);

        goto label7;

     label6:
        r5 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>(r3, i4);

     label7:
        $r4 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r5;

        $f0 = r0[i4];

        virtualinvoke $r4.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(float)>($f0);

        i4 = i4 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(double[], javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase $r4;
        double[] r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser r5;
        int i0, $i1, $i2, i3, i4, $i6;
        javax.xml.namespace.QName r3;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;
        double $d0;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: double[];

        r3 := @parameter1: javax.xml.namespace.QName;

        if r0 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = lengthof r0;

     label2:
        i0 = $i2;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>(r3);

     label3:
        if i3 <= i0 goto label4;

        $i1 = i3 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>(r3, $i1);

        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label3;

     label4:
        i4 = 0;

     label5:
        if i4 >= i0 goto label8;

        if i4 < i3 goto label6;

        r5 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r3);

        goto label7;

     label6:
        r5 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>(r3, i4);

     label7:
        $r4 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r5;

        $d0 = r0[i4];

        virtualinvoke $r4.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(double)>($d0);

        i4 = i4 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(byte[], javax.xml.namespace.QName)
    {
        byte[] r0;
        org.apache.xmlbeans.impl.values.XmlObjectBase $r4;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser r5;
        byte $b1;
        int i0, $i2, $i3, i4, i5, $i7;
        javax.xml.namespace.QName r3;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: byte[];

        r3 := @parameter1: javax.xml.namespace.QName;

        if r0 != null goto label1;

        $i3 = 0;

        goto label2;

     label1:
        $i3 = lengthof r0;

     label2:
        i0 = $i3;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>(r3);

     label3:
        if i4 <= i0 goto label4;

        $i2 = i4 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>(r3, $i2);

        $i7 = (int) -1;

        i4 = i4 + $i7;

        goto label3;

     label4:
        i5 = 0;

     label5:
        if i5 >= i0 goto label8;

        if i5 < i4 goto label6;

        r5 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r3);

        goto label7;

     label6:
        r5 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>(r3, i5);

     label7:
        $r4 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r5;

        $b1 = r0[i5];

        virtualinvoke $r4.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(byte)>($b1);

        i5 = i5 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(short[], javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase $r4;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser r5;
        short $s1;
        int i0, $i2, $i3, i4, i5, $i7;
        short[] r0;
        javax.xml.namespace.QName r3;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: short[];

        r3 := @parameter1: javax.xml.namespace.QName;

        if r0 != null goto label1;

        $i3 = 0;

        goto label2;

     label1:
        $i3 = lengthof r0;

     label2:
        i0 = $i3;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>(r3);

     label3:
        if i4 <= i0 goto label4;

        $i2 = i4 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>(r3, $i2);

        $i7 = (int) -1;

        i4 = i4 + $i7;

        goto label3;

     label4:
        i5 = 0;

     label5:
        if i5 >= i0 goto label8;

        if i5 < i4 goto label6;

        r5 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r3);

        goto label7;

     label6:
        r5 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>(r3, i5);

     label7:
        $r4 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r5;

        $s1 = r0[i5];

        virtualinvoke $r4.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(short)>($s1);

        i5 = i5 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(int[], javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase $r4;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser r5;
        int[] r0;
        int i0, $i1, $i2, $i3, i4, i5, $i7;
        javax.xml.namespace.QName r3;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: int[];

        r3 := @parameter1: javax.xml.namespace.QName;

        if r0 != null goto label1;

        $i3 = 0;

        goto label2;

     label1:
        $i3 = lengthof r0;

     label2:
        i0 = $i3;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>(r3);

     label3:
        if i4 <= i0 goto label4;

        $i2 = i4 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>(r3, $i2);

        $i7 = (int) -1;

        i4 = i4 + $i7;

        goto label3;

     label4:
        i5 = 0;

     label5:
        if i5 >= i0 goto label8;

        if i5 < i4 goto label6;

        r5 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r3);

        goto label7;

     label6:
        r5 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>(r3, i5);

     label7:
        $r4 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r5;

        $i1 = r0[i5];

        virtualinvoke $r4.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(int)>($i1);

        i5 = i5 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(long[], javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase $r4;
        long $l1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser r5;
        long[] r0;
        int i0, $i2, $i3, i4, i5, $i7;
        javax.xml.namespace.QName r3;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: long[];

        r3 := @parameter1: javax.xml.namespace.QName;

        if r0 != null goto label1;

        $i3 = 0;

        goto label2;

     label1:
        $i3 = lengthof r0;

     label2:
        i0 = $i3;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>(r3);

     label3:
        if i4 <= i0 goto label4;

        $i2 = i4 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>(r3, $i2);

        $i7 = (int) -1;

        i4 = i4 + $i7;

        goto label3;

     label4:
        i5 = 0;

     label5:
        if i5 >= i0 goto label8;

        if i5 < i4 goto label6;

        r5 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r3);

        goto label7;

     label6:
        r5 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>(r3, i5);

     label7:
        $r4 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r5;

        $l1 = r0[i5];

        virtualinvoke $r4.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(long)>($l1);

        i5 = i5 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(java.math.BigDecimal[], javax.xml.namespace.QName)
    {
        java.math.BigDecimal[] r0;
        org.apache.xmlbeans.impl.values.XmlObjectBase $r5;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser r6;
        java.math.BigDecimal $r4;
        int i0, $i1, $i2, i3, i4, $i6;
        javax.xml.namespace.QName r3;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: java.math.BigDecimal[];

        r3 := @parameter1: javax.xml.namespace.QName;

        if r0 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = lengthof r0;

     label2:
        i0 = $i2;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>(r3);

     label3:
        if i3 <= i0 goto label4;

        $i1 = i3 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>(r3, $i1);

        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label3;

     label4:
        i4 = 0;

     label5:
        if i4 >= i0 goto label8;

        if i4 < i3 goto label6;

        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r3);

        goto label7;

     label6:
        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>(r3, i4);

     label7:
        $r5 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r6;

        $r4 = r0[i4];

        virtualinvoke $r5.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(java.math.BigDecimal)>($r4);

        i4 = i4 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(java.math.BigInteger[], javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase $r5;
        java.math.BigInteger[] r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser r6;
        int i0, $i1, $i2, i3, i4, $i6;
        java.math.BigInteger $r4;
        javax.xml.namespace.QName r3;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: java.math.BigInteger[];

        r3 := @parameter1: javax.xml.namespace.QName;

        if r0 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = lengthof r0;

     label2:
        i0 = $i2;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>(r3);

     label3:
        if i3 <= i0 goto label4;

        $i1 = i3 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>(r3, $i1);

        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label3;

     label4:
        i4 = 0;

     label5:
        if i4 >= i0 goto label8;

        if i4 < i3 goto label6;

        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r3);

        goto label7;

     label6:
        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>(r3, i4);

     label7:
        $r5 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r6;

        $r4 = r0[i4];

        virtualinvoke $r5.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(java.math.BigInteger)>($r4);

        i4 = i4 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(java.lang.String[], javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase $r5;
        java.lang.String[] r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser r6;
        int i0, $i1, $i2, i3, i4, $i6;
        javax.xml.namespace.QName r3;
        java.lang.String $r4;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: java.lang.String[];

        r3 := @parameter1: javax.xml.namespace.QName;

        if r0 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = lengthof r0;

     label2:
        i0 = $i2;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>(r3);

     label3:
        if i3 <= i0 goto label4;

        $i1 = i3 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>(r3, $i1);

        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label3;

     label4:
        i4 = 0;

     label5:
        if i4 >= i0 goto label8;

        if i4 < i3 goto label6;

        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r3);

        goto label7;

     label6:
        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>(r3, i4);

     label7:
        $r5 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r6;

        $r4 = r0[i4];

        virtualinvoke $r5.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(java.lang.String)>($r4);

        i4 = i4 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(byte[][], javax.xml.namespace.QName)
    {
        byte[] $r4;
        org.apache.xmlbeans.impl.values.XmlObjectBase $r5;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser r6;
        byte[][] r0;
        int i0, $i1, $i2, i3, i4, $i6;
        javax.xml.namespace.QName r3;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: byte[][];

        r3 := @parameter1: javax.xml.namespace.QName;

        if r0 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = lengthof r0;

     label2:
        i0 = $i2;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>(r3);

     label3:
        if i3 <= i0 goto label4;

        $i1 = i3 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>(r3, $i1);

        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label3;

     label4:
        i4 = 0;

     label5:
        if i4 >= i0 goto label8;

        if i4 < i3 goto label6;

        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r3);

        goto label7;

     label6:
        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>(r3, i4);

     label7:
        $r5 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r6;

        $r4 = r0[i4];

        virtualinvoke $r5.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(byte[])>($r4);

        i4 = i4 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(org.apache.xmlbeans.GDate[], javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase $r5;
        org.apache.xmlbeans.GDate[] r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser r6;
        int i0, $i1, $i2, i3, i4, $i6;
        org.apache.xmlbeans.GDate $r4;
        javax.xml.namespace.QName r3;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: org.apache.xmlbeans.GDate[];

        r3 := @parameter1: javax.xml.namespace.QName;

        if r0 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = lengthof r0;

     label2:
        i0 = $i2;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>(r3);

     label3:
        if i3 <= i0 goto label4;

        $i1 = i3 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>(r3, $i1);

        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label3;

     label4:
        i4 = 0;

     label5:
        if i4 >= i0 goto label8;

        if i4 < i3 goto label6;

        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r3);

        goto label7;

     label6:
        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>(r3, i4);

     label7:
        $r5 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r6;

        $r4 = r0[i4];

        virtualinvoke $r5.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(org.apache.xmlbeans.GDateSpecification)>($r4);

        i4 = i4 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(org.apache.xmlbeans.GDuration[], javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase $r5;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser r6;
        org.apache.xmlbeans.GDuration $r4;
        int i0, $i1, $i2, i3, i4, $i6;
        org.apache.xmlbeans.GDuration[] r0;
        javax.xml.namespace.QName r3;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: org.apache.xmlbeans.GDuration[];

        r3 := @parameter1: javax.xml.namespace.QName;

        if r0 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = lengthof r0;

     label2:
        i0 = $i2;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>(r3);

     label3:
        if i3 <= i0 goto label4;

        $i1 = i3 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>(r3, $i1);

        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label3;

     label4:
        i4 = 0;

     label5:
        if i4 >= i0 goto label8;

        if i4 < i3 goto label6;

        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r3);

        goto label7;

     label6:
        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>(r3, i4);

     label7:
        $r5 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r6;

        $r4 = r0[i4];

        virtualinvoke $r5.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(org.apache.xmlbeans.GDurationSpecification)>($r4);

        i4 = i4 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(java.util.Calendar[], javax.xml.namespace.QName)
    {
        java.util.Calendar[] r0;
        org.apache.xmlbeans.impl.values.XmlObjectBase $r5;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser r6;
        java.util.Calendar $r4;
        int i0, $i1, $i2, i3, i4, $i6;
        javax.xml.namespace.QName r3;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: java.util.Calendar[];

        r3 := @parameter1: javax.xml.namespace.QName;

        if r0 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = lengthof r0;

     label2:
        i0 = $i2;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>(r3);

     label3:
        if i3 <= i0 goto label4;

        $i1 = i3 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>(r3, $i1);

        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label3;

     label4:
        i4 = 0;

     label5:
        if i4 >= i0 goto label8;

        if i4 < i3 goto label6;

        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r3);

        goto label7;

     label6:
        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>(r3, i4);

     label7:
        $r5 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r6;

        $r4 = r0[i4];

        virtualinvoke $r5.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(java.util.Calendar)>($r4);

        i4 = i4 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(java.util.Date[], javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase $r5;
        java.util.Date $r4;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser r6;
        int i0, $i1, $i2, i3, i4, $i6;
        java.util.Date[] r0;
        javax.xml.namespace.QName r3;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: java.util.Date[];

        r3 := @parameter1: javax.xml.namespace.QName;

        if r0 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = lengthof r0;

     label2:
        i0 = $i2;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>(r3);

     label3:
        if i3 <= i0 goto label4;

        $i1 = i3 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>(r3, $i1);

        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label3;

     label4:
        i4 = 0;

     label5:
        if i4 >= i0 goto label8;

        if i4 < i3 goto label6;

        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r3);

        goto label7;

     label6:
        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>(r3, i4);

     label7:
        $r5 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r6;

        $r4 = r0[i4];

        virtualinvoke $r5.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(java.util.Date)>($r4);

        i4 = i4 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(javax.xml.namespace.QName[], javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase $r5;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser r6;
        javax.xml.namespace.QName[] r0;
        int i0, $i1, $i2, i3, i4, $i6;
        javax.xml.namespace.QName r3, $r4;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: javax.xml.namespace.QName[];

        r3 := @parameter1: javax.xml.namespace.QName;

        if r0 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = lengthof r0;

     label2:
        i0 = $i2;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>(r3);

     label3:
        if i3 <= i0 goto label4;

        $i1 = i3 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>(r3, $i1);

        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label3;

     label4:
        i4 = 0;

     label5:
        if i4 >= i0 goto label8;

        if i4 < i3 goto label6;

        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r3);

        goto label7;

     label6:
        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>(r3, i4);

     label7:
        $r5 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r6;

        $r4 = r0[i4];

        virtualinvoke $r5.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(javax.xml.namespace.QName)>($r4);

        i4 = i4 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(org.apache.xmlbeans.StringEnumAbstractBase[], javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase $r5;
        org.apache.xmlbeans.StringEnumAbstractBase[] r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser r6;
        int i0, $i1, $i2, i3, i4, $i6;
        javax.xml.namespace.QName r3;
        org.apache.xmlbeans.StringEnumAbstractBase $r4;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: org.apache.xmlbeans.StringEnumAbstractBase[];

        r3 := @parameter1: javax.xml.namespace.QName;

        if r0 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = lengthof r0;

     label2:
        i0 = $i2;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>(r3);

     label3:
        if i3 <= i0 goto label4;

        $i1 = i3 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>(r3, $i1);

        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label3;

     label4:
        i4 = 0;

     label5:
        if i4 >= i0 goto label8;

        if i4 < i3 goto label6;

        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r3);

        goto label7;

     label6:
        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>(r3, i4);

     label7:
        $r5 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r6;

        $r4 = r0[i4];

        virtualinvoke $r5.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(org.apache.xmlbeans.StringEnumAbstractBase)>($r4);

        i4 = i4 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(java.util.List[], javax.xml.namespace.QName)
    {
        java.util.List[] r0;
        org.apache.xmlbeans.impl.values.XmlObjectBase $r5;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser r6;
        java.util.List $r4;
        int i0, $i1, $i2, i3, i4, $i6;
        javax.xml.namespace.QName r3;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: java.util.List[];

        r3 := @parameter1: javax.xml.namespace.QName;

        if r0 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = lengthof r0;

     label2:
        i0 = $i2;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>(r3);

     label3:
        if i3 <= i0 goto label4;

        $i1 = i3 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>(r3, $i1);

        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label3;

     label4:
        i4 = 0;

     label5:
        if i4 >= i0 goto label8;

        if i4 < i3 goto label6;

        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r3);

        goto label7;

     label6:
        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>(r3, i4);

     label7:
        $r5 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r6;

        $r4 = r0[i4];

        virtualinvoke $r5.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(java.util.List)>($r4);

        i4 = i4 + 1;

        goto label5;

     label8:
        return;
    }

    protected void unionArraySetterHelper(java.lang.Object[], javax.xml.namespace.QName, org.apache.xmlbeans.QNameSet)
    {
        java.lang.Object[] r0;
        org.apache.xmlbeans.impl.values.XmlObjectBase $r5;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.QNameSet r3;
        org.apache.xmlbeans.impl.values.TypeStoreUser r7;
        int i0, $i1, $i2, i3, i4, $i6;
        java.lang.Object $r4;
        javax.xml.namespace.QName r6;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: java.lang.Object[];

        r6 := @parameter1: javax.xml.namespace.QName;

        r3 := @parameter2: org.apache.xmlbeans.QNameSet;

        if r0 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = lengthof r0;

     label2:
        i0 = $i2;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(org.apache.xmlbeans.QNameSet)>(r3);

     label3:
        if i3 <= i0 goto label4;

        $i1 = i3 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(org.apache.xmlbeans.QNameSet,int)>(r3, $i1);

        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label3;

     label4:
        i4 = 0;

     label5:
        if i4 >= i0 goto label8;

        if i4 < i3 goto label6;

        r7 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r6);

        goto label7;

     label6:
        r7 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(org.apache.xmlbeans.QNameSet,int)>(r3, i4);

     label7:
        $r5 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r7;

        $r4 = r0[i4];

        virtualinvoke $r5.<org.apache.xmlbeans.impl.values.XmlObjectBase: void objectSet(java.lang.Object)>($r4);

        i4 = i4 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(boolean[], javax.xml.namespace.QName, org.apache.xmlbeans.QNameSet)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase $r4;
        boolean[] r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.QNameSet r3;
        org.apache.xmlbeans.impl.values.TypeStoreUser r6;
        int i0, $i1, $i2, i3, i4, $i6;
        javax.xml.namespace.QName r5;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;
        boolean $z0;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: boolean[];

        r5 := @parameter1: javax.xml.namespace.QName;

        r3 := @parameter2: org.apache.xmlbeans.QNameSet;

        if r0 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = lengthof r0;

     label2:
        i0 = $i2;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(org.apache.xmlbeans.QNameSet)>(r3);

     label3:
        if i3 <= i0 goto label4;

        $i1 = i3 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(org.apache.xmlbeans.QNameSet,int)>(r3, $i1);

        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label3;

     label4:
        i4 = 0;

     label5:
        if i4 >= i0 goto label8;

        if i4 < i3 goto label6;

        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r5);

        goto label7;

     label6:
        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(org.apache.xmlbeans.QNameSet,int)>(r3, i4);

     label7:
        $r4 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r6;

        $z0 = r0[i4];

        virtualinvoke $r4.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(boolean)>($z0);

        i4 = i4 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(float[], javax.xml.namespace.QName, org.apache.xmlbeans.QNameSet)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase $r4;
        float[] r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.QNameSet r3;
        org.apache.xmlbeans.impl.values.TypeStoreUser r6;
        int i0, $i1, $i2, i3, i4, $i6;
        float $f0;
        javax.xml.namespace.QName r5;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: float[];

        r5 := @parameter1: javax.xml.namespace.QName;

        r3 := @parameter2: org.apache.xmlbeans.QNameSet;

        if r0 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = lengthof r0;

     label2:
        i0 = $i2;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(org.apache.xmlbeans.QNameSet)>(r3);

     label3:
        if i3 <= i0 goto label4;

        $i1 = i3 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(org.apache.xmlbeans.QNameSet,int)>(r3, $i1);

        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label3;

     label4:
        i4 = 0;

     label5:
        if i4 >= i0 goto label8;

        if i4 < i3 goto label6;

        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r5);

        goto label7;

     label6:
        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(org.apache.xmlbeans.QNameSet,int)>(r3, i4);

     label7:
        $r4 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r6;

        $f0 = r0[i4];

        virtualinvoke $r4.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(float)>($f0);

        i4 = i4 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(double[], javax.xml.namespace.QName, org.apache.xmlbeans.QNameSet)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase $r4;
        double[] r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.QNameSet r3;
        org.apache.xmlbeans.impl.values.TypeStoreUser r6;
        int i0, $i1, $i2, i3, i4, $i6;
        javax.xml.namespace.QName r5;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;
        double $d0;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: double[];

        r5 := @parameter1: javax.xml.namespace.QName;

        r3 := @parameter2: org.apache.xmlbeans.QNameSet;

        if r0 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = lengthof r0;

     label2:
        i0 = $i2;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(org.apache.xmlbeans.QNameSet)>(r3);

     label3:
        if i3 <= i0 goto label4;

        $i1 = i3 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(org.apache.xmlbeans.QNameSet,int)>(r3, $i1);

        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label3;

     label4:
        i4 = 0;

     label5:
        if i4 >= i0 goto label8;

        if i4 < i3 goto label6;

        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r5);

        goto label7;

     label6:
        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(org.apache.xmlbeans.QNameSet,int)>(r3, i4);

     label7:
        $r4 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r6;

        $d0 = r0[i4];

        virtualinvoke $r4.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(double)>($d0);

        i4 = i4 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(byte[], javax.xml.namespace.QName, org.apache.xmlbeans.QNameSet)
    {
        byte[] r0;
        org.apache.xmlbeans.impl.values.XmlObjectBase $r4;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.QNameSet r3;
        org.apache.xmlbeans.impl.values.TypeStoreUser r6;
        byte $b1;
        int i0, $i2, $i3, i4, i5, $i7;
        javax.xml.namespace.QName r5;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: byte[];

        r5 := @parameter1: javax.xml.namespace.QName;

        r3 := @parameter2: org.apache.xmlbeans.QNameSet;

        if r0 != null goto label1;

        $i3 = 0;

        goto label2;

     label1:
        $i3 = lengthof r0;

     label2:
        i0 = $i3;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(org.apache.xmlbeans.QNameSet)>(r3);

     label3:
        if i4 <= i0 goto label4;

        $i2 = i4 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(org.apache.xmlbeans.QNameSet,int)>(r3, $i2);

        $i7 = (int) -1;

        i4 = i4 + $i7;

        goto label3;

     label4:
        i5 = 0;

     label5:
        if i5 >= i0 goto label8;

        if i5 < i4 goto label6;

        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r5);

        goto label7;

     label6:
        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(org.apache.xmlbeans.QNameSet,int)>(r3, i5);

     label7:
        $r4 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r6;

        $b1 = r0[i5];

        virtualinvoke $r4.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(byte)>($b1);

        i5 = i5 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(short[], javax.xml.namespace.QName, org.apache.xmlbeans.QNameSet)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase $r4;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.QNameSet r3;
        org.apache.xmlbeans.impl.values.TypeStoreUser r6;
        short $s1;
        int i0, $i2, $i3, i4, i5, $i7;
        short[] r0;
        javax.xml.namespace.QName r5;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: short[];

        r5 := @parameter1: javax.xml.namespace.QName;

        r3 := @parameter2: org.apache.xmlbeans.QNameSet;

        if r0 != null goto label1;

        $i3 = 0;

        goto label2;

     label1:
        $i3 = lengthof r0;

     label2:
        i0 = $i3;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(org.apache.xmlbeans.QNameSet)>(r3);

     label3:
        if i4 <= i0 goto label4;

        $i2 = i4 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(org.apache.xmlbeans.QNameSet,int)>(r3, $i2);

        $i7 = (int) -1;

        i4 = i4 + $i7;

        goto label3;

     label4:
        i5 = 0;

     label5:
        if i5 >= i0 goto label8;

        if i5 < i4 goto label6;

        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r5);

        goto label7;

     label6:
        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(org.apache.xmlbeans.QNameSet,int)>(r3, i5);

     label7:
        $r4 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r6;

        $s1 = r0[i5];

        virtualinvoke $r4.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(short)>($s1);

        i5 = i5 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(int[], javax.xml.namespace.QName, org.apache.xmlbeans.QNameSet)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase $r4;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.QNameSet r3;
        org.apache.xmlbeans.impl.values.TypeStoreUser r6;
        int[] r0;
        int i0, $i1, $i2, $i3, i4, i5, $i7;
        javax.xml.namespace.QName r5;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: int[];

        r5 := @parameter1: javax.xml.namespace.QName;

        r3 := @parameter2: org.apache.xmlbeans.QNameSet;

        if r0 != null goto label1;

        $i3 = 0;

        goto label2;

     label1:
        $i3 = lengthof r0;

     label2:
        i0 = $i3;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(org.apache.xmlbeans.QNameSet)>(r3);

     label3:
        if i4 <= i0 goto label4;

        $i2 = i4 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(org.apache.xmlbeans.QNameSet,int)>(r3, $i2);

        $i7 = (int) -1;

        i4 = i4 + $i7;

        goto label3;

     label4:
        i5 = 0;

     label5:
        if i5 >= i0 goto label8;

        if i5 < i4 goto label6;

        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r5);

        goto label7;

     label6:
        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(org.apache.xmlbeans.QNameSet,int)>(r3, i5);

     label7:
        $r4 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r6;

        $i1 = r0[i5];

        virtualinvoke $r4.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(int)>($i1);

        i5 = i5 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(long[], javax.xml.namespace.QName, org.apache.xmlbeans.QNameSet)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase $r4;
        long $l1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.QNameSet r3;
        org.apache.xmlbeans.impl.values.TypeStoreUser r6;
        long[] r0;
        int i0, $i2, $i3, i4, i5, $i7;
        javax.xml.namespace.QName r5;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: long[];

        r5 := @parameter1: javax.xml.namespace.QName;

        r3 := @parameter2: org.apache.xmlbeans.QNameSet;

        if r0 != null goto label1;

        $i3 = 0;

        goto label2;

     label1:
        $i3 = lengthof r0;

     label2:
        i0 = $i3;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(org.apache.xmlbeans.QNameSet)>(r3);

     label3:
        if i4 <= i0 goto label4;

        $i2 = i4 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(org.apache.xmlbeans.QNameSet,int)>(r3, $i2);

        $i7 = (int) -1;

        i4 = i4 + $i7;

        goto label3;

     label4:
        i5 = 0;

     label5:
        if i5 >= i0 goto label8;

        if i5 < i4 goto label6;

        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r5);

        goto label7;

     label6:
        r6 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(org.apache.xmlbeans.QNameSet,int)>(r3, i5);

     label7:
        $r4 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r6;

        $l1 = r0[i5];

        virtualinvoke $r4.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(long)>($l1);

        i5 = i5 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(java.math.BigDecimal[], javax.xml.namespace.QName, org.apache.xmlbeans.QNameSet)
    {
        java.math.BigDecimal[] r0;
        org.apache.xmlbeans.impl.values.XmlObjectBase $r5;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.QNameSet r3;
        org.apache.xmlbeans.impl.values.TypeStoreUser r7;
        java.math.BigDecimal $r4;
        int i0, $i1, $i2, i3, i4, $i6;
        javax.xml.namespace.QName r6;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: java.math.BigDecimal[];

        r6 := @parameter1: javax.xml.namespace.QName;

        r3 := @parameter2: org.apache.xmlbeans.QNameSet;

        if r0 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = lengthof r0;

     label2:
        i0 = $i2;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(org.apache.xmlbeans.QNameSet)>(r3);

     label3:
        if i3 <= i0 goto label4;

        $i1 = i3 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(org.apache.xmlbeans.QNameSet,int)>(r3, $i1);

        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label3;

     label4:
        i4 = 0;

     label5:
        if i4 >= i0 goto label8;

        if i4 < i3 goto label6;

        r7 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r6);

        goto label7;

     label6:
        r7 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(org.apache.xmlbeans.QNameSet,int)>(r3, i4);

     label7:
        $r5 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r7;

        $r4 = r0[i4];

        virtualinvoke $r5.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(java.math.BigDecimal)>($r4);

        i4 = i4 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(java.math.BigInteger[], javax.xml.namespace.QName, org.apache.xmlbeans.QNameSet)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase $r5;
        java.math.BigInteger[] r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.QNameSet r3;
        org.apache.xmlbeans.impl.values.TypeStoreUser r7;
        int i0, $i1, $i2, i3, i4, $i6;
        java.math.BigInteger $r4;
        javax.xml.namespace.QName r6;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: java.math.BigInteger[];

        r6 := @parameter1: javax.xml.namespace.QName;

        r3 := @parameter2: org.apache.xmlbeans.QNameSet;

        if r0 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = lengthof r0;

     label2:
        i0 = $i2;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(org.apache.xmlbeans.QNameSet)>(r3);

     label3:
        if i3 <= i0 goto label4;

        $i1 = i3 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(org.apache.xmlbeans.QNameSet,int)>(r3, $i1);

        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label3;

     label4:
        i4 = 0;

     label5:
        if i4 >= i0 goto label8;

        if i4 < i3 goto label6;

        r7 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r6);

        goto label7;

     label6:
        r7 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(org.apache.xmlbeans.QNameSet,int)>(r3, i4);

     label7:
        $r5 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r7;

        $r4 = r0[i4];

        virtualinvoke $r5.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(java.math.BigInteger)>($r4);

        i4 = i4 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(java.lang.String[], javax.xml.namespace.QName, org.apache.xmlbeans.QNameSet)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase $r5;
        java.lang.String[] r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.QNameSet r3;
        org.apache.xmlbeans.impl.values.TypeStoreUser r7;
        int i0, $i1, $i2, i3, i4, $i6;
        java.lang.String $r4;
        javax.xml.namespace.QName r6;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: java.lang.String[];

        r6 := @parameter1: javax.xml.namespace.QName;

        r3 := @parameter2: org.apache.xmlbeans.QNameSet;

        if r0 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = lengthof r0;

     label2:
        i0 = $i2;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(org.apache.xmlbeans.QNameSet)>(r3);

     label3:
        if i3 <= i0 goto label4;

        $i1 = i3 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(org.apache.xmlbeans.QNameSet,int)>(r3, $i1);

        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label3;

     label4:
        i4 = 0;

     label5:
        if i4 >= i0 goto label8;

        if i4 < i3 goto label6;

        r7 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r6);

        goto label7;

     label6:
        r7 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(org.apache.xmlbeans.QNameSet,int)>(r3, i4);

     label7:
        $r5 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r7;

        $r4 = r0[i4];

        virtualinvoke $r5.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(java.lang.String)>($r4);

        i4 = i4 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(byte[][], javax.xml.namespace.QName, org.apache.xmlbeans.QNameSet)
    {
        byte[] $r4;
        org.apache.xmlbeans.impl.values.XmlObjectBase $r5;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.QNameSet r3;
        org.apache.xmlbeans.impl.values.TypeStoreUser r7;
        byte[][] r0;
        int i0, $i1, $i2, i3, i4, $i6;
        javax.xml.namespace.QName r6;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: byte[][];

        r6 := @parameter1: javax.xml.namespace.QName;

        r3 := @parameter2: org.apache.xmlbeans.QNameSet;

        if r0 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = lengthof r0;

     label2:
        i0 = $i2;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(org.apache.xmlbeans.QNameSet)>(r3);

     label3:
        if i3 <= i0 goto label4;

        $i1 = i3 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(org.apache.xmlbeans.QNameSet,int)>(r3, $i1);

        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label3;

     label4:
        i4 = 0;

     label5:
        if i4 >= i0 goto label8;

        if i4 < i3 goto label6;

        r7 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r6);

        goto label7;

     label6:
        r7 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(org.apache.xmlbeans.QNameSet,int)>(r3, i4);

     label7:
        $r5 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r7;

        $r4 = r0[i4];

        virtualinvoke $r5.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(byte[])>($r4);

        i4 = i4 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(org.apache.xmlbeans.GDate[], javax.xml.namespace.QName, org.apache.xmlbeans.QNameSet)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase $r5;
        org.apache.xmlbeans.GDate[] r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.QNameSet r3;
        org.apache.xmlbeans.impl.values.TypeStoreUser r7;
        int i0, $i1, $i2, i3, i4, $i6;
        org.apache.xmlbeans.GDate $r4;
        javax.xml.namespace.QName r6;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: org.apache.xmlbeans.GDate[];

        r6 := @parameter1: javax.xml.namespace.QName;

        r3 := @parameter2: org.apache.xmlbeans.QNameSet;

        if r0 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = lengthof r0;

     label2:
        i0 = $i2;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(org.apache.xmlbeans.QNameSet)>(r3);

     label3:
        if i3 <= i0 goto label4;

        $i1 = i3 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(org.apache.xmlbeans.QNameSet,int)>(r3, $i1);

        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label3;

     label4:
        i4 = 0;

     label5:
        if i4 >= i0 goto label8;

        if i4 < i3 goto label6;

        r7 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r6);

        goto label7;

     label6:
        r7 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(org.apache.xmlbeans.QNameSet,int)>(r3, i4);

     label7:
        $r5 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r7;

        $r4 = r0[i4];

        virtualinvoke $r5.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(org.apache.xmlbeans.GDateSpecification)>($r4);

        i4 = i4 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(org.apache.xmlbeans.GDuration[], javax.xml.namespace.QName, org.apache.xmlbeans.QNameSet)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase $r5;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.QNameSet r3;
        org.apache.xmlbeans.impl.values.TypeStoreUser r7;
        org.apache.xmlbeans.GDuration $r4;
        int i0, $i1, $i2, i3, i4, $i6;
        org.apache.xmlbeans.GDuration[] r0;
        javax.xml.namespace.QName r6;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: org.apache.xmlbeans.GDuration[];

        r6 := @parameter1: javax.xml.namespace.QName;

        r3 := @parameter2: org.apache.xmlbeans.QNameSet;

        if r0 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = lengthof r0;

     label2:
        i0 = $i2;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(org.apache.xmlbeans.QNameSet)>(r3);

     label3:
        if i3 <= i0 goto label4;

        $i1 = i3 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(org.apache.xmlbeans.QNameSet,int)>(r3, $i1);

        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label3;

     label4:
        i4 = 0;

     label5:
        if i4 >= i0 goto label8;

        if i4 < i3 goto label6;

        r7 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r6);

        goto label7;

     label6:
        r7 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(org.apache.xmlbeans.QNameSet,int)>(r3, i4);

     label7:
        $r5 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r7;

        $r4 = r0[i4];

        virtualinvoke $r5.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(org.apache.xmlbeans.GDurationSpecification)>($r4);

        i4 = i4 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(java.util.Calendar[], javax.xml.namespace.QName, org.apache.xmlbeans.QNameSet)
    {
        java.util.Calendar[] r0;
        org.apache.xmlbeans.impl.values.XmlObjectBase $r5;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.QNameSet r3;
        org.apache.xmlbeans.impl.values.TypeStoreUser r7;
        java.util.Calendar $r4;
        int i0, $i1, $i2, i3, i4, $i6;
        javax.xml.namespace.QName r6;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: java.util.Calendar[];

        r6 := @parameter1: javax.xml.namespace.QName;

        r3 := @parameter2: org.apache.xmlbeans.QNameSet;

        if r0 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = lengthof r0;

     label2:
        i0 = $i2;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(org.apache.xmlbeans.QNameSet)>(r3);

     label3:
        if i3 <= i0 goto label4;

        $i1 = i3 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(org.apache.xmlbeans.QNameSet,int)>(r3, $i1);

        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label3;

     label4:
        i4 = 0;

     label5:
        if i4 >= i0 goto label8;

        if i4 < i3 goto label6;

        r7 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r6);

        goto label7;

     label6:
        r7 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(org.apache.xmlbeans.QNameSet,int)>(r3, i4);

     label7:
        $r5 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r7;

        $r4 = r0[i4];

        virtualinvoke $r5.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(java.util.Calendar)>($r4);

        i4 = i4 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(java.util.Date[], javax.xml.namespace.QName, org.apache.xmlbeans.QNameSet)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase $r5;
        java.util.Date $r4;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.QNameSet r3;
        org.apache.xmlbeans.impl.values.TypeStoreUser r7;
        int i0, $i1, $i2, i3, i4, $i6;
        java.util.Date[] r0;
        javax.xml.namespace.QName r6;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: java.util.Date[];

        r6 := @parameter1: javax.xml.namespace.QName;

        r3 := @parameter2: org.apache.xmlbeans.QNameSet;

        if r0 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = lengthof r0;

     label2:
        i0 = $i2;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(org.apache.xmlbeans.QNameSet)>(r3);

     label3:
        if i3 <= i0 goto label4;

        $i1 = i3 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(org.apache.xmlbeans.QNameSet,int)>(r3, $i1);

        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label3;

     label4:
        i4 = 0;

     label5:
        if i4 >= i0 goto label8;

        if i4 < i3 goto label6;

        r7 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r6);

        goto label7;

     label6:
        r7 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(org.apache.xmlbeans.QNameSet,int)>(r3, i4);

     label7:
        $r5 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r7;

        $r4 = r0[i4];

        virtualinvoke $r5.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(java.util.Date)>($r4);

        i4 = i4 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(javax.xml.namespace.QName[], javax.xml.namespace.QName, org.apache.xmlbeans.QNameSet)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase $r5;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.QNameSet r3;
        org.apache.xmlbeans.impl.values.TypeStoreUser r7;
        javax.xml.namespace.QName[] r0;
        int i0, $i1, $i2, i3, i4, $i6;
        javax.xml.namespace.QName $r4, r6;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: javax.xml.namespace.QName[];

        r6 := @parameter1: javax.xml.namespace.QName;

        r3 := @parameter2: org.apache.xmlbeans.QNameSet;

        if r0 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = lengthof r0;

     label2:
        i0 = $i2;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(org.apache.xmlbeans.QNameSet)>(r3);

     label3:
        if i3 <= i0 goto label4;

        $i1 = i3 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(org.apache.xmlbeans.QNameSet,int)>(r3, $i1);

        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label3;

     label4:
        i4 = 0;

     label5:
        if i4 >= i0 goto label8;

        if i4 < i3 goto label6;

        r7 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r6);

        goto label7;

     label6:
        r7 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(org.apache.xmlbeans.QNameSet,int)>(r3, i4);

     label7:
        $r5 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r7;

        $r4 = r0[i4];

        virtualinvoke $r5.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(javax.xml.namespace.QName)>($r4);

        i4 = i4 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(org.apache.xmlbeans.StringEnumAbstractBase[], javax.xml.namespace.QName, org.apache.xmlbeans.QNameSet)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase $r5;
        org.apache.xmlbeans.StringEnumAbstractBase[] r0;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.QNameSet r3;
        org.apache.xmlbeans.impl.values.TypeStoreUser r7;
        int i0, $i1, $i2, i3, i4, $i6;
        javax.xml.namespace.QName r6;
        org.apache.xmlbeans.StringEnumAbstractBase $r4;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: org.apache.xmlbeans.StringEnumAbstractBase[];

        r6 := @parameter1: javax.xml.namespace.QName;

        r3 := @parameter2: org.apache.xmlbeans.QNameSet;

        if r0 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = lengthof r0;

     label2:
        i0 = $i2;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(org.apache.xmlbeans.QNameSet)>(r3);

     label3:
        if i3 <= i0 goto label4;

        $i1 = i3 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(org.apache.xmlbeans.QNameSet,int)>(r3, $i1);

        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label3;

     label4:
        i4 = 0;

     label5:
        if i4 >= i0 goto label8;

        if i4 < i3 goto label6;

        r7 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r6);

        goto label7;

     label6:
        r7 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(org.apache.xmlbeans.QNameSet,int)>(r3, i4);

     label7:
        $r5 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r7;

        $r4 = r0[i4];

        virtualinvoke $r5.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(org.apache.xmlbeans.StringEnumAbstractBase)>($r4);

        i4 = i4 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(java.util.List[], javax.xml.namespace.QName, org.apache.xmlbeans.QNameSet)
    {
        java.util.List[] r0;
        org.apache.xmlbeans.impl.values.XmlObjectBase $r5;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.QNameSet r3;
        org.apache.xmlbeans.impl.values.TypeStoreUser r7;
        java.util.List $r4;
        int i0, $i1, $i2, i3, i4, $i6;
        javax.xml.namespace.QName r6;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r1;

        r1 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r0 := @parameter0: java.util.List[];

        r6 := @parameter1: javax.xml.namespace.QName;

        r3 := @parameter2: org.apache.xmlbeans.QNameSet;

        if r0 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = lengthof r0;

     label2:
        i0 = $i2;

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        i3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(org.apache.xmlbeans.QNameSet)>(r3);

     label3:
        if i3 <= i0 goto label4;

        $i1 = i3 - 1;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(org.apache.xmlbeans.QNameSet,int)>(r3, $i1);

        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label3;

     label4:
        i4 = 0;

     label5:
        if i4 >= i0 goto label8;

        if i4 < i3 goto label6;

        r7 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r6);

        goto label7;

     label6:
        r7 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(org.apache.xmlbeans.QNameSet,int)>(r3, i4);

     label7:
        $r5 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r7;

        $r4 = r0[i4];

        virtualinvoke $r5.<org.apache.xmlbeans.impl.values.XmlObjectBase: void set(java.util.List)>($r4);

        i4 = i4 + 1;

        goto label5;

     label8:
        return;
    }

    protected void arraySetterHelper(org.apache.xmlbeans.XmlObject[], javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase $r5, $r8, $r18, $r26;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xmlbeans.impl.values.TypeStore $r1;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r6, $r9, $r14, $r16, $r25, r28;
        org.apache.xmlbeans.XmlObject[] r2;
        javax.xml.namespace.QName r3;
        org.apache.xmlbeans.XmlCursor $r21, $r23, r24;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11, i12, i13, i14, $i15, i16, i17, i18, $i20, $i22;
        org.apache.xmlbeans.XmlObject $r4, $r7, $r10, $r11, $r12, $r13, $r15, $r17, $r19, $r20, $r22, $r27;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r2 := @parameter0: org.apache.xmlbeans.XmlObject[];

        r3 := @parameter1: javax.xml.namespace.QName;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        if r2 == null goto label01;

        $i0 = lengthof r2;

        if $i0 != 0 goto label04;

     label01:
        i7 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>(r3);

     label02:
        if i7 <= 0 goto label03;

        interfaceinvoke $r1.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>(r3, 0);

        $i20 = (int) -1;

        i7 = i7 + $i20;

        goto label02;

     label03:
        return;

     label04:
        i8 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>(r3);

        i9 = 0;

        i10 = 0;

        i11 = 0;

     label05:
        $i1 = lengthof r2;

        if i11 >= $i1 goto label09;

        $r19 = r2[i11];

        $z2 = interfaceinvoke $r19.<org.apache.xmlbeans.XmlObject: boolean isImmutable()>();

        if $z2 == 0 goto label06;

        goto label08;

     label06:
        $r20 = r2[i11];

        $r21 = interfaceinvoke $r20.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlCursor newCursor()>();

        $z3 = interfaceinvoke $r21.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

        if $z3 == 0 goto label07;

        $r22 = interfaceinvoke $r21.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        if $r22 != r0 goto label07;

        interfaceinvoke $r21.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        goto label09;

     label07:
        interfaceinvoke $r21.<org.apache.xmlbeans.XmlCursor: void dispose()>();

     label08:
        i11 = i11 + 1;

        goto label05;

     label09:
        $i2 = lengthof r2;

        if i11 >= $i2 goto label18;

        $r9 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>(r3, 0);

        $r10 = r2[i11];

        if $r9 != $r10 goto label18;

        i12 = 0;

     label10:
        if i12 >= i11 goto label11;

        $r16 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser insert_element_user(javax.xml.namespace.QName,int)>(r3, i12);

        $r18 = (org.apache.xmlbeans.impl.values.XmlObjectBase) $r16;

        $r17 = r2[i12];

        virtualinvoke $r18.<org.apache.xmlbeans.impl.values.XmlObjectBase: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>($r17);

        i12 = i12 + 1;

        goto label10;

     label11:
        i11 = i11 + 1;

        i13 = i12 + 1;

     label12:
        $i6 = lengthof r2;

        if i11 >= $i6 goto label17;

        $r11 = r2[i11];

        $z0 = interfaceinvoke $r11.<org.apache.xmlbeans.XmlObject: boolean isImmutable()>();

        if $z0 == 0 goto label13;

        $r23 = null;

        goto label14;

     label13:
        $r12 = r2[i11];

        $r23 = interfaceinvoke $r12.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlCursor newCursor()>();

     label14:
        r24 = $r23;

        if $r23 == null goto label15;

        $z1 = interfaceinvoke $r23.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

        if $z1 == 0 goto label15;

        $r13 = interfaceinvoke $r23.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        if $r13 != r0 goto label15;

        interfaceinvoke $r23.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        $r14 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>(r3, i13);

        $r15 = r2[i11];

        if $r14 != $r15 goto label17;

        goto label16;

     label15:
        interfaceinvoke r24.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        $r25 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser insert_element_user(javax.xml.namespace.QName,int)>(r3, i13);

        $r26 = (org.apache.xmlbeans.impl.values.XmlObjectBase) $r25;

        $r27 = r2[i11];

        virtualinvoke $r26.<org.apache.xmlbeans.impl.values.XmlObjectBase: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>($r27);

     label16:
        i11 = i11 + 1;

        i13 = i13 + 1;

        goto label12;

     label17:
        i10 = i13;

        i9 = i11;

        i8 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>(r3);

     label18:
        i14 = i11;

     label19:
        $i15 = lengthof r2;

        if i14 >= $i15 goto label20;

        $r6 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r3);

        $r8 = (org.apache.xmlbeans.impl.values.XmlObjectBase) $r6;

        $r7 = r2[i14];

        virtualinvoke $r8.<org.apache.xmlbeans.impl.values.XmlObjectBase: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>($r7);

        i14 = i14 + 1;

        goto label19;

     label20:
        i16 = i11;

     label21:
        $i3 = i16 - i9;

        $i4 = $i3 + i10;

        if i8 <= $i4 goto label22;

        $i5 = i8 - 1;

        interfaceinvoke $r1.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>(r3, $i5);

        $i22 = (int) -1;

        i8 = i8 + $i22;

        goto label21;

     label22:
        i17 = i9;

        i18 = i10;

     label23:
        if i17 >= i16 goto label26;

        if i18 < i8 goto label24;

        r28 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r3);

        goto label25;

     label24:
        r28 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>(r3, i18);

     label25:
        $r5 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r28;

        $r4 = r2[i17];

        virtualinvoke $r5.<org.apache.xmlbeans.impl.values.XmlObjectBase: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>($r4);

        i17 = i17 + 1;

        i18 = i18 + 1;

        goto label23;

     label26:
        return;
    }

    protected void arraySetterHelper(org.apache.xmlbeans.XmlObject[], javax.xml.namespace.QName, org.apache.xmlbeans.QNameSet)
    {
        org.apache.xmlbeans.impl.values.XmlObjectBase $r5, $r9, $r19, $r27;
        org.apache.xmlbeans.QNameSet r3;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xmlbeans.impl.values.TypeStore $r1;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r7, $r10, $r15, $r17, $r26, r29;
        org.apache.xmlbeans.XmlObject[] r2;
        javax.xml.namespace.QName r6;
        org.apache.xmlbeans.XmlCursor $r22, $r24, r25;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11, i12, i13, i14, $i15, i16, i17, i18, $i20, $i22;
        org.apache.xmlbeans.XmlObject $r4, $r8, $r11, $r12, $r13, $r14, $r16, $r18, $r20, $r21, $r23, $r28;
        org.apache.xmlbeans.impl.values.XmlComplexContentImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.values.XmlComplexContentImpl;

        r2 := @parameter0: org.apache.xmlbeans.XmlObject[];

        r6 := @parameter1: javax.xml.namespace.QName;

        r3 := @parameter2: org.apache.xmlbeans.QNameSet;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        if r2 == null goto label01;

        $i0 = lengthof r2;

        if $i0 != 0 goto label04;

     label01:
        i7 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(org.apache.xmlbeans.QNameSet)>(r3);

     label02:
        if i7 <= 0 goto label03;

        interfaceinvoke $r1.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(org.apache.xmlbeans.QNameSet,int)>(r3, 0);

        $i20 = (int) -1;

        i7 = i7 + $i20;

        goto label02;

     label03:
        return;

     label04:
        i8 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(org.apache.xmlbeans.QNameSet)>(r3);

        i9 = 0;

        i10 = 0;

        i11 = 0;

     label05:
        $i1 = lengthof r2;

        if i11 >= $i1 goto label09;

        $r20 = r2[i11];

        $z2 = interfaceinvoke $r20.<org.apache.xmlbeans.XmlObject: boolean isImmutable()>();

        if $z2 == 0 goto label06;

        goto label08;

     label06:
        $r21 = r2[i11];

        $r22 = interfaceinvoke $r21.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlCursor newCursor()>();

        $z3 = interfaceinvoke $r22.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

        if $z3 == 0 goto label07;

        $r23 = interfaceinvoke $r22.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        if $r23 != r0 goto label07;

        interfaceinvoke $r22.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        goto label09;

     label07:
        interfaceinvoke $r22.<org.apache.xmlbeans.XmlCursor: void dispose()>();

     label08:
        i11 = i11 + 1;

        goto label05;

     label09:
        $i2 = lengthof r2;

        if i11 >= $i2 goto label18;

        $r10 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(org.apache.xmlbeans.QNameSet,int)>(r3, 0);

        $r11 = r2[i11];

        if $r10 != $r11 goto label18;

        i12 = 0;

     label10:
        if i12 >= i11 goto label11;

        $r17 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser insert_element_user(org.apache.xmlbeans.QNameSet,javax.xml.namespace.QName,int)>(r3, r6, i12);

        $r19 = (org.apache.xmlbeans.impl.values.XmlObjectBase) $r17;

        $r18 = r2[i12];

        virtualinvoke $r19.<org.apache.xmlbeans.impl.values.XmlObjectBase: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>($r18);

        i12 = i12 + 1;

        goto label10;

     label11:
        i11 = i11 + 1;

        i13 = i12 + 1;

     label12:
        $i6 = lengthof r2;

        if i11 >= $i6 goto label17;

        $r12 = r2[i11];

        $z0 = interfaceinvoke $r12.<org.apache.xmlbeans.XmlObject: boolean isImmutable()>();

        if $z0 == 0 goto label13;

        $r24 = null;

        goto label14;

     label13:
        $r13 = r2[i11];

        $r24 = interfaceinvoke $r13.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlCursor newCursor()>();

     label14:
        r25 = $r24;

        if $r24 == null goto label15;

        $z1 = interfaceinvoke $r24.<org.apache.xmlbeans.XmlCursor: boolean toParent()>();

        if $z1 == 0 goto label15;

        $r14 = interfaceinvoke $r24.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlObject getObject()>();

        if $r14 != r0 goto label15;

        interfaceinvoke $r24.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        $r15 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(org.apache.xmlbeans.QNameSet,int)>(r3, i13);

        $r16 = r2[i11];

        if $r15 != $r16 goto label17;

        goto label16;

     label15:
        interfaceinvoke r25.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        $r26 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser insert_element_user(org.apache.xmlbeans.QNameSet,javax.xml.namespace.QName,int)>(r3, r6, i13);

        $r27 = (org.apache.xmlbeans.impl.values.XmlObjectBase) $r26;

        $r28 = r2[i11];

        virtualinvoke $r27.<org.apache.xmlbeans.impl.values.XmlObjectBase: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>($r28);

     label16:
        i11 = i11 + 1;

        i13 = i13 + 1;

        goto label12;

     label17:
        i10 = i13;

        i9 = i11;

        i8 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>(r6);

     label18:
        i14 = i11;

     label19:
        $i15 = lengthof r2;

        if i14 >= $i15 goto label20;

        $r7 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r6);

        $r9 = (org.apache.xmlbeans.impl.values.XmlObjectBase) $r7;

        $r8 = r2[i14];

        virtualinvoke $r9.<org.apache.xmlbeans.impl.values.XmlObjectBase: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>($r8);

        i14 = i14 + 1;

        goto label19;

     label20:
        i16 = i11;

     label21:
        $i3 = i16 - i9;

        $i4 = $i3 + i10;

        if i8 <= $i4 goto label22;

        $i5 = i8 - 1;

        interfaceinvoke $r1.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(org.apache.xmlbeans.QNameSet,int)>(r3, $i5);

        $i22 = (int) -1;

        i8 = i8 + $i22;

        goto label21;

     label22:
        i17 = i9;

        i18 = i10;

     label23:
        if i17 >= i16 goto label26;

        if i18 < i8 goto label24;

        r29 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>(r6);

        goto label25;

     label24:
        r29 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(org.apache.xmlbeans.QNameSet,int)>(r3, i18);

     label25:
        $r5 = (org.apache.xmlbeans.impl.values.XmlObjectBase) r29;

        $r4 = r2[i17];

        virtualinvoke $r5.<org.apache.xmlbeans.impl.values.XmlObjectBase: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>($r4);

        i17 = i17 + 1;

        i18 = i18 + 1;

        goto label23;

     label26:
        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        boolean $z0, $z1;

        $r0 = <org.apache.xmlbeans.impl.values.XmlComplexContentImpl: java.lang.Class class$org$apache$xmlbeans$impl$values$XmlComplexContentImpl>;

        if $r0 != null goto label1;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.values.XmlComplexContentImpl: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.values.XmlComplexContentImpl");

        <org.apache.xmlbeans.impl.values.XmlComplexContentImpl: java.lang.Class class$org$apache$xmlbeans$impl$values$XmlComplexContentImpl> = $r1;

        goto label2;

     label1:
        $r1 = <org.apache.xmlbeans.impl.values.XmlComplexContentImpl: java.lang.Class class$org$apache$xmlbeans$impl$values$XmlComplexContentImpl>;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.impl.values.XmlComplexContentImpl: boolean $assertionsDisabled> = $z1;

        return;
    }
}
