public abstract class org.springframework.format.number.AbstractNumberFormatter extends java.lang.Object implements org.springframework.format.Formatter
{
    private boolean lenient;

    public void <init>()
    {
        org.springframework.format.number.AbstractNumberFormatter r0;

        r0 := @this: org.springframework.format.number.AbstractNumberFormatter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.format.number.AbstractNumberFormatter: boolean lenient> = 0;

        return;
    }

    public void setLenient(boolean)
    {
        org.springframework.format.number.AbstractNumberFormatter r0;
        boolean z0;

        r0 := @this: org.springframework.format.number.AbstractNumberFormatter;

        z0 := @parameter0: boolean;

        r0.<org.springframework.format.number.AbstractNumberFormatter: boolean lenient> = z0;

        return;
    }

    public java.lang.String print(java.lang.Number, java.util.Locale)
    {
        org.springframework.format.number.AbstractNumberFormatter r0;
        java.util.Locale r1;
        java.lang.String $r4;
        java.lang.Number r3;
        java.text.NumberFormat $r2;

        r0 := @this: org.springframework.format.number.AbstractNumberFormatter;

        r3 := @parameter0: java.lang.Number;

        r1 := @parameter1: java.util.Locale;

        $r2 = virtualinvoke r0.<org.springframework.format.number.AbstractNumberFormatter: java.text.NumberFormat getNumberFormat(java.util.Locale)>(r1);

        $r4 = virtualinvoke $r2.<java.text.NumberFormat: java.lang.String format(java.lang.Object)>(r3);

        return $r4;
    }

    public java.lang.Number parse(java.lang.String, java.util.Locale) throws java.text.ParseException
    {
        java.text.ParsePosition $r8;
        java.text.NumberFormat $r2;
        org.springframework.format.number.AbstractNumberFormatter r0;
        java.util.Locale r1;
        int $i0, $i1, $i2, $i3, $i4, $i6;
        java.lang.String r4;
        java.lang.Number $r5;
        java.text.ParseException $r9, $r10;
        boolean $z0;

        r0 := @this: org.springframework.format.number.AbstractNumberFormatter;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Locale;

        $r2 = virtualinvoke r0.<org.springframework.format.number.AbstractNumberFormatter: java.text.NumberFormat getNumberFormat(java.util.Locale)>(r1);

        $r8 = new java.text.ParsePosition;

        specialinvoke $r8.<java.text.ParsePosition: void <init>(int)>(0);

        $r5 = virtualinvoke $r2.<java.text.NumberFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)>(r4, $r8);

        $i0 = virtualinvoke $r8.<java.text.ParsePosition: int getErrorIndex()>();

        $i6 = (int) -1;

        if $i0 == $i6 goto label1;

        $r9 = new java.text.ParseException;

        $i4 = virtualinvoke $r8.<java.text.ParsePosition: int getIndex()>();

        specialinvoke $r9.<java.text.ParseException: void <init>(java.lang.String,int)>(r4, $i4);

        throw $r9;

     label1:
        $z0 = r0.<org.springframework.format.number.AbstractNumberFormatter: boolean lenient>;

        if $z0 != 0 goto label2;

        $i1 = virtualinvoke r4.<java.lang.String: int length()>();

        $i2 = virtualinvoke $r8.<java.text.ParsePosition: int getIndex()>();

        if $i1 == $i2 goto label2;

        $r10 = new java.text.ParseException;

        $i3 = virtualinvoke $r8.<java.text.ParsePosition: int getIndex()>();

        specialinvoke $r10.<java.text.ParseException: void <init>(java.lang.String,int)>(r4, $i3);

        throw $r10;

     label2:
        return $r5;
    }

    protected abstract java.text.NumberFormat getNumberFormat(java.util.Locale);

    public volatile java.lang.String print(java.lang.Object, java.util.Locale)
    {
        org.springframework.format.number.AbstractNumberFormatter r0;
        java.util.Locale r2;
        java.lang.Object r1;
        java.lang.String $r4;
        java.lang.Number $r3;

        r0 := @this: org.springframework.format.number.AbstractNumberFormatter;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.util.Locale;

        $r3 = (java.lang.Number) r1;

        $r4 = virtualinvoke r0.<org.springframework.format.number.AbstractNumberFormatter: java.lang.String print(java.lang.Number,java.util.Locale)>($r3, r2);

        return $r4;
    }

    public volatile java.lang.Object parse(java.lang.String, java.util.Locale) throws java.text.ParseException
    {
        org.springframework.format.number.AbstractNumberFormatter r0;
        java.util.Locale r2;
        java.lang.String r1;
        java.lang.Number $r3;

        r0 := @this: org.springframework.format.number.AbstractNumberFormatter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Locale;

        $r3 = virtualinvoke r0.<org.springframework.format.number.AbstractNumberFormatter: java.lang.Number parse(java.lang.String,java.util.Locale)>(r1, r2);

        return $r3;
    }
}
