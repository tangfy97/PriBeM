class com.hp.hpl.jena.xmloutput.impl.Unparser$4 extends java.lang.Object implements com.hp.hpl.jena.util.iterator.MapFilter
{
    final com.hp.hpl.jena.xmloutput.impl.Unparser this$0;

    void <init>(com.hp.hpl.jena.xmloutput.impl.Unparser)
    {
        com.hp.hpl.jena.xmloutput.impl.Unparser$4 r0;
        com.hp.hpl.jena.xmloutput.impl.Unparser r1;

        r0 := @this: com.hp.hpl.jena.xmloutput.impl.Unparser$4;

        r1 := @parameter0: com.hp.hpl.jena.xmloutput.impl.Unparser;

        r0.<com.hp.hpl.jena.xmloutput.impl.Unparser$4: com.hp.hpl.jena.xmloutput.impl.Unparser this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.hp.hpl.jena.rdf.model.Statement accept(com.hp.hpl.jena.rdf.model.Statement)
    {
        com.hp.hpl.jena.rdf.model.Property $r1, $r4, $r5, $r6, $r7;
        java.lang.String $r2, $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.hp.hpl.jena.xmloutput.impl.Unparser$4 r10;
        com.hp.hpl.jena.rdf.model.RDFNode $r8;
        com.hp.hpl.jena.rdf.model.Statement r0, $r11;
        com.hp.hpl.jena.rdf.model.Resource $r9;

        r10 := @this: com.hp.hpl.jena.xmloutput.impl.Unparser$4;

        r0 := @parameter0: com.hp.hpl.jena.rdf.model.Statement;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.Property getPredicate()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Property: java.lang.String getNameSpace()>();

        $r3 = staticinvoke <com.hp.hpl.jena.xmloutput.impl.Unparser: java.lang.String access$400()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        $r4 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property type>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label1;

        $r8 = interfaceinvoke r0.<com.hp.hpl.jena.rdf.model.Statement: com.hp.hpl.jena.rdf.model.RDFNode getObject()>();

        $r9 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Resource Statement>;

        $z5 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        if $z5 != 0 goto label3;

     label1:
        $r5 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property object>;

        $z2 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z2 != 0 goto label3;

        $r6 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property predicate>;

        $z3 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z3 != 0 goto label3;

        $r7 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property subject>;

        $z4 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z4 != 0 goto label3;

     label2:
        $r11 = r0;

        goto label4;

     label3:
        $r11 = null;

     label4:
        return $r11;
    }

    public volatile java.lang.Object accept(java.lang.Object)
    {
        com.hp.hpl.jena.xmloutput.impl.Unparser$4 r0;
        java.lang.Object r1;
        com.hp.hpl.jena.rdf.model.Statement $r2, $r3;

        r0 := @this: com.hp.hpl.jena.xmloutput.impl.Unparser$4;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.hp.hpl.jena.rdf.model.Statement) r1;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.xmloutput.impl.Unparser$4: com.hp.hpl.jena.rdf.model.Statement accept(com.hp.hpl.jena.rdf.model.Statement)>($r2);

        return $r3;
    }
}
