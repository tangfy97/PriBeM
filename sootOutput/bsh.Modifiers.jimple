public class bsh.Modifiers extends java.lang.Object implements java.io.Serializable
{
    public static final int CLASS;
    public static final int METHOD;
    public static final int FIELD;
    java.util.Hashtable modifiers;

    public void <init>()
    {
        bsh.Modifiers r0;

        r0 := @this: bsh.Modifiers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void addModifier(int, java.lang.String)
    {
        java.lang.IllegalStateException $r6, $r7;
        bsh.Modifiers r0;
        java.lang.StringBuffer $r8, $r9, $r10;
        int i0, i1;
        java.lang.String r2, $r11;
        java.util.Hashtable $r1, $r4, $r12;
        boolean $z0, $z1, $z2;
        java.lang.Class $r3;
        java.lang.Object $r5;

        r0 := @this: bsh.Modifiers;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        $r1 = r0.<bsh.Modifiers: java.util.Hashtable modifiers>;

        if $r1 != null goto label01;

        $r12 = new java.util.Hashtable;

        specialinvoke $r12.<java.util.Hashtable: void <init>()>();

        r0.<bsh.Modifiers: java.util.Hashtable modifiers> = $r12;

     label01:
        $r4 = r0.<bsh.Modifiers: java.util.Hashtable modifiers>;

        $r3 = <java.lang.Void: java.lang.Class TYPE>;

        $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r3);

        if $r5 == null goto label02;

        $r7 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Duplicate modifier: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label02:
        i1 = 0;

        $z0 = virtualinvoke r0.<bsh.Modifiers: boolean hasModifier(java.lang.String)>("private");

        if $z0 == 0 goto label03;

        i1 = 1;

     label03:
        $z1 = virtualinvoke r0.<bsh.Modifiers: boolean hasModifier(java.lang.String)>("protected");

        if $z1 == 0 goto label04;

        i1 = i1 + 1;

     label04:
        $z2 = virtualinvoke r0.<bsh.Modifiers: boolean hasModifier(java.lang.String)>("public");

        if $z2 == 0 goto label05;

        i1 = i1 + 1;

     label05:
        if i1 <= 1 goto label06;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("public/private/protected cannot be used in combination.");

        throw $r6;

     label06:
        tableswitch(i0)
        {
            case 0: goto label07;
            case 1: goto label08;
            case 2: goto label09;
            default: goto label10;
        };

     label07:
        specialinvoke r0.<bsh.Modifiers: void validateForClass()>();

        goto label10;

     label08:
        specialinvoke r0.<bsh.Modifiers: void validateForMethod()>();

        goto label10;

     label09:
        specialinvoke r0.<bsh.Modifiers: void validateForField()>();

     label10:
        return;
    }

    public boolean hasModifier(java.lang.String)
    {
        bsh.Modifiers r0;
        java.lang.Object $r4;
        java.lang.String r2;
        java.util.Hashtable $r1, $r3, $r5;
        boolean $z0;

        r0 := @this: bsh.Modifiers;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<bsh.Modifiers: java.util.Hashtable modifiers>;

        if $r1 != null goto label1;

        $r5 = new java.util.Hashtable;

        specialinvoke $r5.<java.util.Hashtable: void <init>()>();

        r0.<bsh.Modifiers: java.util.Hashtable modifiers> = $r5;

     label1:
        $r3 = r0.<bsh.Modifiers: java.util.Hashtable modifiers>;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r2);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private void validateForMethod()
    {
        bsh.Modifiers r0;

        r0 := @this: bsh.Modifiers;

        specialinvoke r0.<bsh.Modifiers: void insureNo(java.lang.String,java.lang.String)>("volatile", "Method");

        specialinvoke r0.<bsh.Modifiers: void insureNo(java.lang.String,java.lang.String)>("transient", "Method");

        return;
    }

    private void validateForField()
    {
        bsh.Modifiers r0;

        r0 := @this: bsh.Modifiers;

        specialinvoke r0.<bsh.Modifiers: void insureNo(java.lang.String,java.lang.String)>("synchronized", "Variable");

        specialinvoke r0.<bsh.Modifiers: void insureNo(java.lang.String,java.lang.String)>("native", "Variable");

        specialinvoke r0.<bsh.Modifiers: void insureNo(java.lang.String,java.lang.String)>("abstract", "Variable");

        return;
    }

    private void validateForClass()
    {
        bsh.Modifiers r0;

        r0 := @this: bsh.Modifiers;

        specialinvoke r0.<bsh.Modifiers: void validateForMethod()>();

        specialinvoke r0.<bsh.Modifiers: void insureNo(java.lang.String,java.lang.String)>("native", "Class");

        specialinvoke r0.<bsh.Modifiers: void insureNo(java.lang.String,java.lang.String)>("synchronized", "Class");

        return;
    }

    private void insureNo(java.lang.String, java.lang.String)
    {
        java.lang.IllegalStateException $r2;
        bsh.Modifiers r0;
        java.lang.StringBuffer $r3, $r5, $r6, $r7, $r8;
        java.lang.String r1, r4, $r9;
        boolean $z0;

        r0 := @this: bsh.Modifiers;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<bsh.Modifiers: boolean hasModifier(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" cannot be declared \'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r2;

     label1:
        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r0, $r1, $r4;
        bsh.Modifiers r2;
        java.lang.String $r5;
        java.util.Hashtable $r3;

        r2 := @this: bsh.Modifiers;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Modifiers: ");

        $r3 = r2.<bsh.Modifiers: java.util.Hashtable modifiers>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public static void <clinit>()
    {
        <bsh.Modifiers: int FIELD> = 2;

        <bsh.Modifiers: int METHOD> = 1;

        <bsh.Modifiers: int CLASS> = 0;

        return;
    }
}
