public interface  org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow extends java.lang.Object implements org.apache.xmlbeans.XmlObject
{
    public static final org.apache.xmlbeans.SchemaType type;

    public abstract java.util.List getCList();

    public abstract org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell[] getCArray();

    public abstract org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell getCArray(int);

    public abstract int sizeOfCArray();

    public abstract void setCArray(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell[]);

    public abstract void setCArray(int, org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell);

    public abstract org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell insertNewC(int);

    public abstract org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell addNewC();

    public abstract void removeC(int);

    public abstract org.openxmlformats.schemas.spreadsheetml.x2006.main.CTExtensionList getExtLst();

    public abstract boolean isSetExtLst();

    public abstract void setExtLst(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTExtensionList);

    public abstract org.openxmlformats.schemas.spreadsheetml.x2006.main.CTExtensionList addNewExtLst();

    public abstract void unsetExtLst();

    public abstract long getR();

    public abstract org.apache.xmlbeans.XmlUnsignedInt xgetR();

    public abstract boolean isSetR();

    public abstract void setR(long);

    public abstract void xsetR(org.apache.xmlbeans.XmlUnsignedInt);

    public abstract void unsetR();

    public abstract java.util.List getSpans();

    public abstract org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellSpans xgetSpans();

    public abstract boolean isSetSpans();

    public abstract void setSpans(java.util.List);

    public abstract void xsetSpans(org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellSpans);

    public abstract void unsetSpans();

    public abstract long getS();

    public abstract org.apache.xmlbeans.XmlUnsignedInt xgetS();

    public abstract boolean isSetS();

    public abstract void setS(long);

    public abstract void xsetS(org.apache.xmlbeans.XmlUnsignedInt);

    public abstract void unsetS();

    public abstract boolean getCustomFormat();

    public abstract org.apache.xmlbeans.XmlBoolean xgetCustomFormat();

    public abstract boolean isSetCustomFormat();

    public abstract void setCustomFormat(boolean);

    public abstract void xsetCustomFormat(org.apache.xmlbeans.XmlBoolean);

    public abstract void unsetCustomFormat();

    public abstract double getHt();

    public abstract org.apache.xmlbeans.XmlDouble xgetHt();

    public abstract boolean isSetHt();

    public abstract void setHt(double);

    public abstract void xsetHt(org.apache.xmlbeans.XmlDouble);

    public abstract void unsetHt();

    public abstract boolean getHidden();

    public abstract org.apache.xmlbeans.XmlBoolean xgetHidden();

    public abstract boolean isSetHidden();

    public abstract void setHidden(boolean);

    public abstract void xsetHidden(org.apache.xmlbeans.XmlBoolean);

    public abstract void unsetHidden();

    public abstract boolean getCustomHeight();

    public abstract org.apache.xmlbeans.XmlBoolean xgetCustomHeight();

    public abstract boolean isSetCustomHeight();

    public abstract void setCustomHeight(boolean);

    public abstract void xsetCustomHeight(org.apache.xmlbeans.XmlBoolean);

    public abstract void unsetCustomHeight();

    public abstract short getOutlineLevel();

    public abstract org.apache.xmlbeans.XmlUnsignedByte xgetOutlineLevel();

    public abstract boolean isSetOutlineLevel();

    public abstract void setOutlineLevel(short);

    public abstract void xsetOutlineLevel(org.apache.xmlbeans.XmlUnsignedByte);

    public abstract void unsetOutlineLevel();

    public abstract boolean getCollapsed();

    public abstract org.apache.xmlbeans.XmlBoolean xgetCollapsed();

    public abstract boolean isSetCollapsed();

    public abstract void setCollapsed(boolean);

    public abstract void xsetCollapsed(org.apache.xmlbeans.XmlBoolean);

    public abstract void unsetCollapsed();

    public abstract boolean getThickTop();

    public abstract org.apache.xmlbeans.XmlBoolean xgetThickTop();

    public abstract boolean isSetThickTop();

    public abstract void setThickTop(boolean);

    public abstract void xsetThickTop(org.apache.xmlbeans.XmlBoolean);

    public abstract void unsetThickTop();

    public abstract boolean getThickBot();

    public abstract org.apache.xmlbeans.XmlBoolean xgetThickBot();

    public abstract boolean isSetThickBot();

    public abstract void setThickBot(boolean);

    public abstract void xsetThickBot(org.apache.xmlbeans.XmlBoolean);

    public abstract void unsetThickBot();

    public abstract boolean getPh();

    public abstract org.apache.xmlbeans.XmlBoolean xgetPh();

    public abstract boolean isSetPh();

    public abstract void setPh(boolean);

    public abstract void xsetPh(org.apache.xmlbeans.XmlBoolean);

    public abstract void unsetPh();

    static void <clinit>()
    {
        org.apache.xmlbeans.SchemaTypeSystem $r2;
        java.lang.Class $r0;
        org.apache.xmlbeans.SchemaComponent $r3;
        java.lang.ClassLoader $r1;
        org.apache.xmlbeans.SchemaType $r4;

        $r0 = class "Lorg/openxmlformats/schemas/spreadsheetml/x2006/main/CTRow;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r2 = staticinvoke <org.apache.xmlbeans.XmlBeans: org.apache.xmlbeans.SchemaTypeSystem typeSystemForClassLoader(java.lang.ClassLoader,java.lang.String)>($r1, "schemaorg_apache_xmlbeans.system.sE130CAA0A01A7CDE5A2B4FEB8B311707");

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaTypeSystem: org.apache.xmlbeans.SchemaComponent resolveHandle(java.lang.String)>("ctrowdd39type");

        $r4 = (org.apache.xmlbeans.SchemaType) $r3;

        <org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow: org.apache.xmlbeans.SchemaType type> = $r4;

        return;
    }
}
