public class com.jidesoft.swing.Gripper extends javax.swing.JComponent implements javax.swing.SwingConstants, com.jidesoft.swing.Alignable, com.jidesoft.swing.DraggableHandle, javax.swing.plaf.UIResource
{
    private static final java.lang.String uiClassID;
    public static final java.lang.String ROLLOVER_ENABLED_CHANGED_PROPERTY;
    private boolean _rolloverEnabled;
    private boolean _rollover;
    public static final java.lang.String ROLLOVER_PROPERTY;
    public static final java.lang.String SELECTED_PROPERTY;
    private int _orientation;
    private boolean _selected;

    public void <init>()
    {
        com.jidesoft.swing.Gripper r0;

        r0 := @this: com.jidesoft.swing.Gripper;

        specialinvoke r0.<com.jidesoft.swing.Gripper: void <init>(int)>(0);

        return;
    }

    public void <init>(int)
    {
        int i0;
        com.jidesoft.swing.Gripper r0;

        r0 := @this: com.jidesoft.swing.Gripper;

        i0 := @parameter0: int;

        specialinvoke r0.<javax.swing.JComponent: void <init>()>();

        r0.<com.jidesoft.swing.Gripper: boolean _rolloverEnabled> = 0;

        virtualinvoke r0.<com.jidesoft.swing.Gripper: void setOrientation(int)>(i0);

        virtualinvoke r0.<com.jidesoft.swing.Gripper: void setFocusable(boolean)>(0);

        virtualinvoke r0.<com.jidesoft.swing.Gripper: void updateUI()>();

        return;
    }

    public com.jidesoft.plaf.GripperUI getUI()
    {
        com.jidesoft.plaf.GripperUI $r2;
        javax.swing.plaf.ComponentUI $r1;
        com.jidesoft.swing.Gripper r0;

        r0 := @this: com.jidesoft.swing.Gripper;

        $r1 = r0.<com.jidesoft.swing.Gripper: javax.swing.plaf.ComponentUI ui>;

        $r2 = (com.jidesoft.plaf.GripperUI) $r1;

        return $r2;
    }

    public void updateUI()
    {
        java.lang.Object $r0;
        javax.swing.plaf.ComponentUI $r2;
        com.jidesoft.swing.Gripper r1;

        r1 := @this: com.jidesoft.swing.Gripper;

        $r0 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("GripperUI");

        if $r0 != null goto label1;

        staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: void installJideExtension()>();

     label1:
        $r2 = staticinvoke <javax.swing.UIManager: javax.swing.plaf.ComponentUI getUI(javax.swing.JComponent)>(r1);

        virtualinvoke r1.<com.jidesoft.swing.Gripper: void setUI(javax.swing.plaf.ComponentUI)>($r2);

        return;
    }

    public java.lang.String getUIClassID()
    {
        com.jidesoft.swing.Gripper r0;

        r0 := @this: com.jidesoft.swing.Gripper;

        return "GripperUI";
    }

    public boolean supportVerticalOrientation()
    {
        com.jidesoft.swing.Gripper r0;

        r0 := @this: com.jidesoft.swing.Gripper;

        return 1;
    }

    public boolean supportHorizontalOrientation()
    {
        com.jidesoft.swing.Gripper r0;

        r0 := @this: com.jidesoft.swing.Gripper;

        return 1;
    }

    public void setOrientation(int)
    {
        int i0, i1;
        com.jidesoft.swing.Gripper r0;

        r0 := @this: com.jidesoft.swing.Gripper;

        i1 := @parameter0: int;

        i0 = r0.<com.jidesoft.swing.Gripper: int _orientation>;

        if i0 == i1 goto label1;

        r0.<com.jidesoft.swing.Gripper: int _orientation> = i1;

        virtualinvoke r0.<com.jidesoft.swing.Gripper: void firePropertyChange(java.lang.String,int,int)>("orientation", i0, i1);

     label1:
        return;
    }

    public int getOrientation()
    {
        int $i0;
        com.jidesoft.swing.Gripper r0;

        r0 := @this: com.jidesoft.swing.Gripper;

        $i0 = r0.<com.jidesoft.swing.Gripper: int _orientation>;

        return $i0;
    }

    public java.awt.Cursor getCursor()
    {
        java.awt.Cursor $r1, $r2;
        com.jidesoft.swing.Gripper r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.Gripper;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.Gripper: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>(13);

        return $r2;

     label1:
        $r1 = specialinvoke r0.<javax.swing.JComponent: java.awt.Cursor getCursor()>();

        return $r1;
    }

    public boolean isRolloverEnabled()
    {
        com.jidesoft.swing.Gripper r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.Gripper;

        $z0 = r0.<com.jidesoft.swing.Gripper: boolean _rolloverEnabled>;

        return $z0;
    }

    public void setRolloverEnabled(boolean)
    {
        com.jidesoft.swing.Gripper r0;
        boolean z0, z1, $z2;

        r0 := @this: com.jidesoft.swing.Gripper;

        z1 := @parameter0: boolean;

        z0 = r0.<com.jidesoft.swing.Gripper: boolean _rolloverEnabled>;

        if z1 == z0 goto label1;

        r0.<com.jidesoft.swing.Gripper: boolean _rolloverEnabled> = z1;

        $z2 = r0.<com.jidesoft.swing.Gripper: boolean _rolloverEnabled>;

        virtualinvoke r0.<com.jidesoft.swing.Gripper: void firePropertyChange(java.lang.String,boolean,boolean)>("rolloverEnabled", z0, $z2);

        virtualinvoke r0.<com.jidesoft.swing.Gripper: void repaint()>();

     label1:
        return;
    }

    public boolean isRollover()
    {
        com.jidesoft.swing.Gripper r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.Gripper;

        $z0 = r0.<com.jidesoft.swing.Gripper: boolean _rollover>;

        return $z0;
    }

    public void setRollover(boolean)
    {
        com.jidesoft.swing.Gripper r0;
        boolean z0, z1;

        r0 := @this: com.jidesoft.swing.Gripper;

        z1 := @parameter0: boolean;

        z0 = r0.<com.jidesoft.swing.Gripper: boolean _rollover>;

        if z1 == z0 goto label1;

        r0.<com.jidesoft.swing.Gripper: boolean _rollover> = z1;

        virtualinvoke r0.<com.jidesoft.swing.Gripper: void firePropertyChange(java.lang.String,boolean,boolean)>("ROLLOVER", z0, z1);

        virtualinvoke r0.<com.jidesoft.swing.Gripper: void repaint()>();

     label1:
        return;
    }

    public boolean isSelected()
    {
        com.jidesoft.swing.Gripper r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.Gripper;

        $z0 = r0.<com.jidesoft.swing.Gripper: boolean _selected>;

        return $z0;
    }

    public void setSelected(boolean)
    {
        com.jidesoft.swing.Gripper r0;
        boolean z0, z1, $z2;

        r0 := @this: com.jidesoft.swing.Gripper;

        z1 := @parameter0: boolean;

        z0 = r0.<com.jidesoft.swing.Gripper: boolean _selected>;

        if z1 == z0 goto label1;

        r0.<com.jidesoft.swing.Gripper: boolean _selected> = z1;

        $z2 = r0.<com.jidesoft.swing.Gripper: boolean _selected>;

        virtualinvoke r0.<com.jidesoft.swing.Gripper: void firePropertyChange(java.lang.String,boolean,boolean)>("SELECTED", z0, $z2);

        virtualinvoke r0.<com.jidesoft.swing.Gripper: void repaint()>();

     label1:
        return;
    }

    public static void <clinit>()
    {
        <com.jidesoft.swing.Gripper: java.lang.String SELECTED_PROPERTY> = "SELECTED";

        <com.jidesoft.swing.Gripper: java.lang.String ROLLOVER_PROPERTY> = "ROLLOVER";

        <com.jidesoft.swing.Gripper: java.lang.String ROLLOVER_ENABLED_CHANGED_PROPERTY> = "rolloverEnabled";

        <com.jidesoft.swing.Gripper: java.lang.String uiClassID> = "GripperUI";

        return;
    }
}
