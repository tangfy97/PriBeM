public class org.apache.poi.ss.format.CellFormat extends java.lang.Object
{
    private final java.lang.String format;
    private final org.apache.poi.ss.format.CellFormatPart posNumFmt;
    private final org.apache.poi.ss.format.CellFormatPart zeroNumFmt;
    private final org.apache.poi.ss.format.CellFormatPart negNumFmt;
    private final org.apache.poi.ss.format.CellFormatPart textFmt;
    private final int formatPartCount;
    private static final java.util.regex.Pattern ONE_PART;
    private static final org.apache.poi.ss.format.CellFormatPart DEFAULT_TEXT_FORMAT;
    private static final java.lang.String INVALID_VALUE_FOR_FORMAT;
    private static java.lang.String QUOTE;
    public static final org.apache.poi.ss.format.CellFormat GENERAL_FORMAT;
    private static final java.util.Map formatCache;

    public static org.apache.poi.ss.format.CellFormat getInstance(java.lang.String)
    {
        org.apache.poi.ss.format.CellFormat $r4, r5;
        java.util.Map $r1, $r3;
        java.lang.Object $r2;
        java.lang.String r0;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.poi.ss.format.CellFormat: java.util.Map formatCache>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r5 = (org.apache.poi.ss.format.CellFormat) $r2;

        if r5 != null goto label4;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("General");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("@");

        if $z1 == 0 goto label2;

     label1:
        r5 = <org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormat GENERAL_FORMAT>;

        goto label3;

     label2:
        $r4 = new org.apache.poi.ss.format.CellFormat;

        specialinvoke $r4.<org.apache.poi.ss.format.CellFormat: void <init>(java.lang.String)>(r0);

        r5 = $r4;

     label3:
        $r3 = <org.apache.poi.ss.format.CellFormat: java.util.Map formatCache>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r5);

     label4:
        return r5;
    }

    private void <init>(java.lang.String)
    {
        java.util.regex.Matcher $r3;
        boolean $z0, $z1;
        java.util.logging.Logger $r32;
        org.apache.poi.ss.format.CellFormat r0;
        java.lang.StringBuilder $r31, $r34, $r37;
        java.util.regex.Pattern $r2;
        java.util.ArrayList $r4;
        java.util.logging.Level $r33;
        int $i0, $i1, $i2, $i3;
        java.lang.String r1, $r28, $r35, $r36, $r38, r39;
        java.lang.RuntimeException $r30;
        org.apache.poi.ss.format.CellFormatPart $r6, $r8, $r10, $r11, $r13, $r15, $r16, $r18, $r19, $r21, $r23, $r25, $r27, $r29;
        java.lang.Object $r5, $r7, $r9, $r12, $r14, $r17, $r20, $r22, $r24, $r26;

        r0 := @this: org.apache.poi.ss.format.CellFormat;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.ss.format.CellFormat: java.lang.String format> = r1;

        $r2 = <org.apache.poi.ss.format.CellFormat: java.util.regex.Pattern ONE_PART>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

     label01:
        $z1 = virtualinvoke $r3.<java.util.regex.Matcher: boolean find()>();

        if $z1 == 0 goto label06;

     label02:
        $r28 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group()>();

        r39 = $r28;

        $z0 = virtualinvoke $r28.<java.lang.String: boolean endsWith(java.lang.String)>(";");

        if $z0 == 0 goto label03;

        $i2 = virtualinvoke $r28.<java.lang.String: int length()>();

        $i3 = $i2 - 1;

        r39 = virtualinvoke $r28.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

     label03:
        $r29 = new org.apache.poi.ss.format.CellFormatPart;

        specialinvoke $r29.<org.apache.poi.ss.format.CellFormatPart: void <init>(java.lang.String)>(r39);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r29);

     label04:
        goto label01;

     label05:
        $r30 := @caughtexception;

        $r32 = <org.apache.poi.ss.format.CellFormatter: java.util.logging.Logger logger>;

        $r33 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid format: ");

        $r35 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group()>();

        $r36 = staticinvoke <org.apache.poi.ss.format.CellFormatter: java.lang.String quote(java.lang.String)>($r35);

        $r37 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r32.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r33, $r38, $r30);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(null);

        goto label01;

     label06:
        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        r0.<org.apache.poi.ss.format.CellFormat: int formatPartCount> = $i0;

        $i1 = r0.<org.apache.poi.ss.format.CellFormat: int formatPartCount>;

        tableswitch($i1)
        {
            case 1: goto label07;
            case 2: goto label08;
            case 3: goto label09;
            case 4: goto label10;
            default: goto label10;
        };

     label07:
        $r17 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        $r18 = (org.apache.poi.ss.format.CellFormatPart) $r17;

        r0.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart posNumFmt> = $r18;

        r0.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart negNumFmt> = null;

        r0.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart zeroNumFmt> = null;

        $r19 = <org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart DEFAULT_TEXT_FORMAT>;

        r0.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart textFmt> = $r19;

        goto label11;

     label08:
        $r12 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        $r13 = (org.apache.poi.ss.format.CellFormatPart) $r12;

        r0.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart posNumFmt> = $r13;

        $r14 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(1);

        $r15 = (org.apache.poi.ss.format.CellFormatPart) $r14;

        r0.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart negNumFmt> = $r15;

        r0.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart zeroNumFmt> = null;

        $r16 = <org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart DEFAULT_TEXT_FORMAT>;

        r0.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart textFmt> = $r16;

        goto label11;

     label09:
        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (org.apache.poi.ss.format.CellFormatPart) $r5;

        r0.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart posNumFmt> = $r6;

        $r7 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(1);

        $r8 = (org.apache.poi.ss.format.CellFormatPart) $r7;

        r0.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart negNumFmt> = $r8;

        $r9 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(2);

        $r10 = (org.apache.poi.ss.format.CellFormatPart) $r9;

        r0.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart zeroNumFmt> = $r10;

        $r11 = <org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart DEFAULT_TEXT_FORMAT>;

        r0.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart textFmt> = $r11;

        goto label11;

     label10:
        $r20 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        $r21 = (org.apache.poi.ss.format.CellFormatPart) $r20;

        r0.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart posNumFmt> = $r21;

        $r22 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(1);

        $r23 = (org.apache.poi.ss.format.CellFormatPart) $r22;

        r0.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart negNumFmt> = $r23;

        $r24 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(2);

        $r25 = (org.apache.poi.ss.format.CellFormatPart) $r24;

        r0.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart zeroNumFmt> = $r25;

        $r26 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(3);

        $r27 = (org.apache.poi.ss.format.CellFormatPart) $r26;

        r0.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart textFmt> = $r27;

     label11:
        return;

        catch java.lang.RuntimeException from label02 to label04 with label05;
    }

    public org.apache.poi.ss.format.CellFormatResult apply(java.lang.Object)
    {
        java.util.Date $r4;
        byte $b0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.poi.ss.format.CellFormat r1;
        java.lang.Double $r5, $r15, $r17, $r19;
        int $i1, $i2, $i3, $i4;
        java.lang.Number r13;
        double $d0, $d1, $d2, $d3;
        org.apache.poi.ss.format.CellFormatResult $r3, $r8, $r16, $r20;
        java.lang.IllegalArgumentException $r21;
        org.apache.poi.ss.format.CellFormatPart $r2, $r7, $r9, $r10, $r11, $r12, $r14, $r18;
        java.lang.Object r0;

        r1 := @this: org.apache.poi.ss.format.CellFormat;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.Number;

        if $z0 == 0 goto label5;

        r13 = (java.lang.Number) r0;

        $d2 = virtualinvoke r13.<java.lang.Number: double doubleValue()>();

        $b0 = $d2 cmpg 0.0;

        $i4 = (int) $b0;

        if $i4 >= 0 goto label4;

        $i1 = r1.<org.apache.poi.ss.format.CellFormat: int formatPartCount>;

        if $i1 != 2 goto label1;

        $r11 = r1.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart posNumFmt>;

        $z5 = virtualinvoke $r11.<org.apache.poi.ss.format.CellFormatPart: boolean hasCondition()>();

        if $z5 != 0 goto label1;

        $r12 = r1.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart negNumFmt>;

        $z6 = virtualinvoke $r12.<org.apache.poi.ss.format.CellFormatPart: boolean hasCondition()>();

        if $z6 == 0 goto label3;

     label1:
        $i3 = r1.<org.apache.poi.ss.format.CellFormat: int formatPartCount>;

        if $i3 != 3 goto label2;

        $r10 = r1.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart negNumFmt>;

        $z4 = virtualinvoke $r10.<org.apache.poi.ss.format.CellFormatPart: boolean hasCondition()>();

        if $z4 == 0 goto label3;

     label2:
        $i2 = r1.<org.apache.poi.ss.format.CellFormat: int formatPartCount>;

        if $i2 != 4 goto label4;

        $r9 = r1.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart negNumFmt>;

        $z3 = virtualinvoke $r9.<org.apache.poi.ss.format.CellFormatPart: boolean hasCondition()>();

        if $z3 != 0 goto label4;

     label3:
        $r14 = r1.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart negNumFmt>;

        $d3 = neg $d2;

        $r15 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        $r16 = virtualinvoke $r14.<org.apache.poi.ss.format.CellFormatPart: org.apache.poi.ss.format.CellFormatResult apply(java.lang.Object)>($r15);

        return $r16;

     label4:
        $r17 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        $r18 = specialinvoke r1.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart getApplicableFormatPart(java.lang.Object)>($r17);

        $r19 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        $r20 = virtualinvoke $r18.<org.apache.poi.ss.format.CellFormatPart: org.apache.poi.ss.format.CellFormatResult apply(java.lang.Object)>($r19);

        return $r20;

     label5:
        $z1 = r0 instanceof java.util.Date;

        if $z1 == 0 goto label7;

        $r4 = (java.util.Date) r0;

        $d0 = staticinvoke <org.apache.poi.ss.usermodel.DateUtil: double getExcelDate(java.util.Date)>($r4);

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $d1 = virtualinvoke $r5.<java.lang.Double: double doubleValue()>();

        $z2 = staticinvoke <org.apache.poi.ss.usermodel.DateUtil: boolean isValidExcelDate(double)>($d1);

        if $z2 == 0 goto label6;

        $r7 = specialinvoke r1.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart getApplicableFormatPart(java.lang.Object)>($r5);

        $r8 = virtualinvoke $r7.<org.apache.poi.ss.format.CellFormatPart: org.apache.poi.ss.format.CellFormatResult apply(java.lang.Object)>(r0);

        return $r8;

     label6:
        $r21 = new java.lang.IllegalArgumentException;

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("value not a valid Excel date");

        throw $r21;

     label7:
        $r2 = r1.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart textFmt>;

        $r3 = virtualinvoke $r2.<org.apache.poi.ss.format.CellFormatPart: org.apache.poi.ss.format.CellFormatResult apply(java.lang.Object)>(r0);

        return $r3;
    }

    private org.apache.poi.ss.format.CellFormatResult apply(java.util.Date, double)
    {
        org.apache.poi.ss.format.CellFormatResult $r4;
        java.lang.Double $r1;
        java.util.Date r3;
        org.apache.poi.ss.format.CellFormatPart $r2;
        org.apache.poi.ss.format.CellFormat r0;
        double d0;

        r0 := @this: org.apache.poi.ss.format.CellFormat;

        r3 := @parameter0: java.util.Date;

        d0 := @parameter1: double;

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r2 = specialinvoke r0.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart getApplicableFormatPart(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r2.<org.apache.poi.ss.format.CellFormatPart: org.apache.poi.ss.format.CellFormatResult apply(java.lang.Object)>(r3);

        return $r4;
    }

    public org.apache.poi.ss.format.CellFormatResult apply(org.apache.poi.ss.usermodel.Cell)
    {
        java.lang.Double $r7;
        java.util.Date $r13;
        org.apache.poi.ss.usermodel.Cell r0;
        int $i0;
        java.lang.Boolean $r2;
        java.lang.String $r5;
        boolean $z0, $z1;
        double $d0, $d1, $d2;
        org.apache.poi.ss.format.CellFormatResult $r3, $r4, $r6, $r11, $r12, $r14, $r15;
        org.apache.poi.ss.format.CellFormatPart $r8;
        org.apache.poi.ss.format.CellFormat r1;
        org.apache.poi.ss.format.CellFormatType $r9, $r10;

        r1 := @this: org.apache.poi.ss.format.CellFormat;

        r0 := @parameter0: org.apache.poi.ss.usermodel.Cell;

        $i0 = staticinvoke <org.apache.poi.ss.format.CellFormat: int ultimateType(org.apache.poi.ss.usermodel.Cell)>(r0);

        tableswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label6;
            case 2: goto label7;
            case 3: goto label1;
            case 4: goto label2;
            default: goto label7;
        };

     label1:
        $r4 = virtualinvoke r1.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatResult apply(java.lang.Object)>("");

        return $r4;

     label2:
        $z0 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Cell: boolean getBooleanCellValue()>();

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3 = virtualinvoke r1.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatResult apply(java.lang.Object)>($r2);

        return $r3;

     label3:
        $d0 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Cell: double getNumericCellValue()>();

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r8 = specialinvoke r1.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart getApplicableFormatPart(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<org.apache.poi.ss.format.CellFormatPart: org.apache.poi.ss.format.CellFormatType getCellFormatType()>();

        $r10 = <org.apache.poi.ss.format.CellFormatType: org.apache.poi.ss.format.CellFormatType DATE>;

        if $r9 != $r10 goto label5;

        $d1 = virtualinvoke $r7.<java.lang.Double: double doubleValue()>();

        $z1 = staticinvoke <org.apache.poi.ss.usermodel.DateUtil: boolean isValidExcelDate(double)>($d1);

        if $z1 == 0 goto label4;

        $r13 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Cell: java.util.Date getDateCellValue()>();

        $d2 = virtualinvoke $r7.<java.lang.Double: double doubleValue()>();

        $r14 = specialinvoke r1.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatResult apply(java.util.Date,double)>($r13, $d2);

        return $r14;

     label4:
        $r12 = virtualinvoke r1.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatResult apply(java.lang.Object)>("###############################################################################################################################################################################################################################################################");

        return $r12;

     label5:
        $r11 = virtualinvoke r1.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatResult apply(java.lang.Object)>($r7);

        return $r11;

     label6:
        $r5 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Cell: java.lang.String getStringCellValue()>();

        $r6 = virtualinvoke r1.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatResult apply(java.lang.Object)>($r5);

        return $r6;

     label7:
        $r15 = virtualinvoke r1.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatResult apply(java.lang.Object)>("?");

        return $r15;
    }

    public org.apache.poi.ss.format.CellFormatResult apply(javax.swing.JLabel, java.lang.Object)
    {
        java.awt.Color $r5, $r6;
        org.apache.poi.ss.format.CellFormatResult $r2;
        javax.swing.JLabel r3;
        java.lang.Object r1;
        java.lang.String $r4;
        org.apache.poi.ss.format.CellFormat r0;

        r0 := @this: org.apache.poi.ss.format.CellFormat;

        r3 := @parameter0: javax.swing.JLabel;

        r1 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatResult apply(java.lang.Object)>(r1);

        $r4 = $r2.<org.apache.poi.ss.format.CellFormatResult: java.lang.String text>;

        virtualinvoke r3.<javax.swing.JLabel: void setText(java.lang.String)>($r4);

        $r5 = $r2.<org.apache.poi.ss.format.CellFormatResult: java.awt.Color textColor>;

        if $r5 == null goto label1;

        $r6 = $r2.<org.apache.poi.ss.format.CellFormatResult: java.awt.Color textColor>;

        virtualinvoke r3.<javax.swing.JLabel: void setForeground(java.awt.Color)>($r6);

     label1:
        return $r2;
    }

    private org.apache.poi.ss.format.CellFormatResult apply(javax.swing.JLabel, java.util.Date, double)
    {
        java.awt.Color $r5, $r6;
        org.apache.poi.ss.format.CellFormatResult $r2;
        java.util.Date r1;
        org.apache.poi.ss.format.CellFormat r0;
        javax.swing.JLabel r3;
        java.lang.String $r4;
        double d0;

        r0 := @this: org.apache.poi.ss.format.CellFormat;

        r3 := @parameter0: javax.swing.JLabel;

        r1 := @parameter1: java.util.Date;

        d0 := @parameter2: double;

        $r2 = specialinvoke r0.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatResult apply(java.util.Date,double)>(r1, d0);

        $r4 = $r2.<org.apache.poi.ss.format.CellFormatResult: java.lang.String text>;

        virtualinvoke r3.<javax.swing.JLabel: void setText(java.lang.String)>($r4);

        $r5 = $r2.<org.apache.poi.ss.format.CellFormatResult: java.awt.Color textColor>;

        if $r5 == null goto label1;

        $r6 = $r2.<org.apache.poi.ss.format.CellFormatResult: java.awt.Color textColor>;

        virtualinvoke r3.<javax.swing.JLabel: void setForeground(java.awt.Color)>($r6);

     label1:
        return $r2;
    }

    public org.apache.poi.ss.format.CellFormatResult apply(javax.swing.JLabel, org.apache.poi.ss.usermodel.Cell)
    {
        java.lang.Double $r8;
        java.util.Date $r14;
        org.apache.poi.ss.usermodel.Cell r0;
        int $i0;
        java.lang.Boolean $r3;
        java.lang.String $r6;
        boolean $z0, $z1;
        double $d0, $d1, $d2;
        org.apache.poi.ss.format.CellFormatResult $r4, $r5, $r7, $r12, $r13, $r15, $r16;
        org.apache.poi.ss.format.CellFormatPart $r9;
        org.apache.poi.ss.format.CellFormat r1;
        org.apache.poi.ss.format.CellFormatType $r10, $r11;
        javax.swing.JLabel r2;

        r1 := @this: org.apache.poi.ss.format.CellFormat;

        r2 := @parameter0: javax.swing.JLabel;

        r0 := @parameter1: org.apache.poi.ss.usermodel.Cell;

        $i0 = staticinvoke <org.apache.poi.ss.format.CellFormat: int ultimateType(org.apache.poi.ss.usermodel.Cell)>(r0);

        tableswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label6;
            case 2: goto label7;
            case 3: goto label1;
            case 4: goto label2;
            default: goto label7;
        };

     label1:
        $r5 = virtualinvoke r1.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatResult apply(javax.swing.JLabel,java.lang.Object)>(r2, "");

        return $r5;

     label2:
        $z0 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Cell: boolean getBooleanCellValue()>();

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4 = virtualinvoke r1.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatResult apply(javax.swing.JLabel,java.lang.Object)>(r2, $r3);

        return $r4;

     label3:
        $d0 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Cell: double getNumericCellValue()>();

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r9 = specialinvoke r1.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart getApplicableFormatPart(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<org.apache.poi.ss.format.CellFormatPart: org.apache.poi.ss.format.CellFormatType getCellFormatType()>();

        $r11 = <org.apache.poi.ss.format.CellFormatType: org.apache.poi.ss.format.CellFormatType DATE>;

        if $r10 != $r11 goto label5;

        $d1 = virtualinvoke $r8.<java.lang.Double: double doubleValue()>();

        $z1 = staticinvoke <org.apache.poi.ss.usermodel.DateUtil: boolean isValidExcelDate(double)>($d1);

        if $z1 == 0 goto label4;

        $r14 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Cell: java.util.Date getDateCellValue()>();

        $d2 = virtualinvoke $r8.<java.lang.Double: double doubleValue()>();

        $r15 = specialinvoke r1.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatResult apply(javax.swing.JLabel,java.util.Date,double)>(r2, $r14, $d2);

        return $r15;

     label4:
        $r13 = virtualinvoke r1.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatResult apply(javax.swing.JLabel,java.lang.Object)>(r2, "###############################################################################################################################################################################################################################################################");

        return $r13;

     label5:
        $r12 = virtualinvoke r1.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatResult apply(javax.swing.JLabel,java.lang.Object)>(r2, $r8);

        return $r12;

     label6:
        $r6 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Cell: java.lang.String getStringCellValue()>();

        $r7 = virtualinvoke r1.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatResult apply(javax.swing.JLabel,java.lang.Object)>(r2, $r6);

        return $r7;

     label7:
        $r16 = virtualinvoke r1.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatResult apply(javax.swing.JLabel,java.lang.Object)>(r2, "?");

        return $r16;
    }

    private org.apache.poi.ss.format.CellFormatPart getApplicableFormatPart(java.lang.Object)
    {
        byte $b2, $b3, $b4;
        org.apache.poi.ss.format.CellFormat r3;
        java.lang.StringBuilder $r23, $r24, $r26, $r40;
        java.lang.Double $r10, $r13, $r29, $r31, $r38;
        java.lang.String $r22, $r25, $r27;
        java.lang.Number $r2;
        org.apache.poi.ss.format.CellFormatPart $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r14, $r15, $r16, $r17, $r18, $r19, $r28, $r30, $r32, $r33, $r34, $r35, $r37, $r39, $r41;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        int $i0, $i1, $i5, $i6, $i7;
        double $d0;
        java.lang.IllegalArgumentException $r42;
        java.lang.Object r0;

        r3 := @this: org.apache.poi.ss.format.CellFormat;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.Number;

        if $z0 == 0 goto label16;

        $r2 = (java.lang.Number) r0;

        $d0 = virtualinvoke $r2.<java.lang.Number: double doubleValue()>();

        $i0 = r3.<org.apache.poi.ss.format.CellFormat: int formatPartCount>;

        if $i0 != 1 goto label03;

        $r33 = r3.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart posNumFmt>;

        $z13 = virtualinvoke $r33.<org.apache.poi.ss.format.CellFormatPart: boolean hasCondition()>();

        if $z13 == 0 goto label01;

        $r35 = r3.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart posNumFmt>;

        $z14 = virtualinvoke $r35.<org.apache.poi.ss.format.CellFormatPart: boolean hasCondition()>();

        if $z14 == 0 goto label02;

        $r37 = r3.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart posNumFmt>;

        $r38 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $z15 = virtualinvoke $r37.<org.apache.poi.ss.format.CellFormatPart: boolean applies(java.lang.Object)>($r38);

        if $z15 == 0 goto label02;

     label01:
        $r34 = r3.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart posNumFmt>;

        return $r34;

     label02:
        $r39 = new org.apache.poi.ss.format.CellFormatPart;

        specialinvoke $r39.<org.apache.poi.ss.format.CellFormatPart: void <init>(java.lang.String)>("General");

        return $r39;

     label03:
        $i1 = r3.<org.apache.poi.ss.format.CellFormat: int formatPartCount>;

        if $i1 != 2 goto label09;

        $r15 = r3.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart posNumFmt>;

        $z7 = virtualinvoke $r15.<org.apache.poi.ss.format.CellFormatPart: boolean hasCondition()>();

        if $z7 != 0 goto label04;

        $b4 = $d0 cmpl 0.0;

        $i5 = (int) $b4;

        if $i5 >= 0 goto label05;

     label04:
        $r16 = r3.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart posNumFmt>;

        $z8 = virtualinvoke $r16.<org.apache.poi.ss.format.CellFormatPart: boolean hasCondition()>();

        if $z8 == 0 goto label06;

        $r30 = r3.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart posNumFmt>;

        $r31 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $z12 = virtualinvoke $r30.<org.apache.poi.ss.format.CellFormatPart: boolean applies(java.lang.Object)>($r31);

        if $z12 == 0 goto label06;

     label05:
        $r32 = r3.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart posNumFmt>;

        return $r32;

     label06:
        $r17 = r3.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart negNumFmt>;

        $z9 = virtualinvoke $r17.<org.apache.poi.ss.format.CellFormatPart: boolean hasCondition()>();

        if $z9 == 0 goto label07;

        $r19 = r3.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart negNumFmt>;

        $z10 = virtualinvoke $r19.<org.apache.poi.ss.format.CellFormatPart: boolean hasCondition()>();

        if $z10 == 0 goto label08;

        $r28 = r3.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart negNumFmt>;

        $r29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $z11 = virtualinvoke $r28.<org.apache.poi.ss.format.CellFormatPart: boolean applies(java.lang.Object)>($r29);

        if $z11 == 0 goto label08;

     label07:
        $r18 = r3.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart negNumFmt>;

        return $r18;

     label08:
        $r41 = new org.apache.poi.ss.format.CellFormatPart;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r22 = <org.apache.poi.ss.format.CellFormat: java.lang.String QUOTE>;

        $r23 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("###############################################################################################################################################################################################################################################################");

        $r25 = <org.apache.poi.ss.format.CellFormat: java.lang.String QUOTE>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r41.<org.apache.poi.ss.format.CellFormatPart: void <init>(java.lang.String)>($r27);

        return $r41;

     label09:
        $r4 = r3.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart posNumFmt>;

        $z1 = virtualinvoke $r4.<org.apache.poi.ss.format.CellFormatPart: boolean hasCondition()>();

        if $z1 != 0 goto label10;

        $b3 = $d0 cmpl 0.0;

        $i6 = (int) $b3;

        if $i6 > 0 goto label11;

     label10:
        $r5 = r3.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart posNumFmt>;

        $z2 = virtualinvoke $r5.<org.apache.poi.ss.format.CellFormatPart: boolean hasCondition()>();

        if $z2 == 0 goto label12;

        $r12 = r3.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart posNumFmt>;

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $z6 = virtualinvoke $r12.<org.apache.poi.ss.format.CellFormatPart: boolean applies(java.lang.Object)>($r13);

        if $z6 == 0 goto label12;

     label11:
        $r14 = r3.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart posNumFmt>;

        return $r14;

     label12:
        $r6 = r3.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart negNumFmt>;

        $z3 = virtualinvoke $r6.<org.apache.poi.ss.format.CellFormatPart: boolean hasCondition()>();

        if $z3 != 0 goto label13;

        $b2 = $d0 cmpg 0.0;

        $i7 = (int) $b2;

        if $i7 < 0 goto label14;

     label13:
        $r7 = r3.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart negNumFmt>;

        $z4 = virtualinvoke $r7.<org.apache.poi.ss.format.CellFormatPart: boolean hasCondition()>();

        if $z4 == 0 goto label15;

        $r9 = r3.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart negNumFmt>;

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $z5 = virtualinvoke $r9.<org.apache.poi.ss.format.CellFormatPart: boolean applies(java.lang.Object)>($r10);

        if $z5 == 0 goto label15;

     label14:
        $r11 = r3.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart negNumFmt>;

        return $r11;

     label15:
        $r8 = r3.<org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart zeroNumFmt>;

        return $r8;

     label16:
        $r42 = new java.lang.IllegalArgumentException;

        specialinvoke $r42.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("value must be a Number");

        throw $r42;
    }

    public static int ultimateType(org.apache.poi.ss.usermodel.Cell)
    {
        org.apache.poi.ss.usermodel.Cell r0;
        int $i0, $i1;

        r0 := @parameter0: org.apache.poi.ss.usermodel.Cell;

        $i0 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Cell: int getCellType()>();

        if $i0 != 2 goto label1;

        $i1 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Cell: int getCachedFormulaResultType()>();

        return $i1;

     label1:
        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r1;
        java.lang.String $r3, $r4;
        org.apache.poi.ss.format.CellFormat r0, r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.ss.format.CellFormat;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.apache.poi.ss.format.CellFormat;

        if $z0 == 0 goto label2;

        r2 = (org.apache.poi.ss.format.CellFormat) r1;

        $r4 = r0.<org.apache.poi.ss.format.CellFormat: java.lang.String format>;

        $r3 = r2.<org.apache.poi.ss.format.CellFormat: java.lang.String format>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z1;

     label2:
        return 0;
    }

    public int hashCode()
    {
        int $i0;
        java.lang.String $r1;
        org.apache.poi.ss.format.CellFormat r0;

        r0 := @this: org.apache.poi.ss.format.CellFormat;

        $r1 = r0.<org.apache.poi.ss.format.CellFormat: java.lang.String format>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    void <init>(java.lang.String, org.apache.poi.ss.format.CellFormat$1)
    {
        java.lang.String r1;
        org.apache.poi.ss.format.CellFormat$1 r2;
        org.apache.poi.ss.format.CellFormat r0;

        r0 := @this: org.apache.poi.ss.format.CellFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.poi.ss.format.CellFormat$1;

        specialinvoke r0.<org.apache.poi.ss.format.CellFormat: void <init>(java.lang.String)>(r1);

        return;
    }

    static void <clinit>()
    {
        org.apache.poi.ss.format.CellFormatPart $r7;
        org.apache.poi.ss.format.CellFormat$1 $r8;
        java.lang.StringBuilder $r0, $r3, $r4;
        java.util.regex.Pattern $r1, $r6;
        java.lang.String $r2, $r5;
        java.util.WeakHashMap $r9;

        <org.apache.poi.ss.format.CellFormat: java.lang.String INVALID_VALUE_FOR_FORMAT> = "###############################################################################################################################################################################################################################################################";

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = <org.apache.poi.ss.format.CellFormatPart: java.util.regex.Pattern FORMAT_PAT>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.lang.String pattern()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(;|$)");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>($r5, 6);

        <org.apache.poi.ss.format.CellFormat: java.util.regex.Pattern ONE_PART> = $r6;

        $r7 = new org.apache.poi.ss.format.CellFormatPart;

        specialinvoke $r7.<org.apache.poi.ss.format.CellFormatPart: void <init>(java.lang.String)>("@");

        <org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormatPart DEFAULT_TEXT_FORMAT> = $r7;

        <org.apache.poi.ss.format.CellFormat: java.lang.String QUOTE> = "\"";

        $r8 = new org.apache.poi.ss.format.CellFormat$1;

        specialinvoke $r8.<org.apache.poi.ss.format.CellFormat$1: void <init>(java.lang.String)>("General");

        <org.apache.poi.ss.format.CellFormat: org.apache.poi.ss.format.CellFormat GENERAL_FORMAT> = $r8;

        $r9 = new java.util.WeakHashMap;

        specialinvoke $r9.<java.util.WeakHashMap: void <init>()>();

        <org.apache.poi.ss.format.CellFormat: java.util.Map formatCache> = $r9;

        return;
    }
}
