final enum class org.springframework.expression.spel.standard.TokenKind extends java.lang.Enum
{
    public static final enum org.springframework.expression.spel.standard.TokenKind LITERAL_INT;
    public static final enum org.springframework.expression.spel.standard.TokenKind LITERAL_LONG;
    public static final enum org.springframework.expression.spel.standard.TokenKind LITERAL_HEXINT;
    public static final enum org.springframework.expression.spel.standard.TokenKind LITERAL_HEXLONG;
    public static final enum org.springframework.expression.spel.standard.TokenKind LITERAL_STRING;
    public static final enum org.springframework.expression.spel.standard.TokenKind LITERAL_REAL;
    public static final enum org.springframework.expression.spel.standard.TokenKind LITERAL_REAL_FLOAT;
    public static final enum org.springframework.expression.spel.standard.TokenKind LPAREN;
    public static final enum org.springframework.expression.spel.standard.TokenKind RPAREN;
    public static final enum org.springframework.expression.spel.standard.TokenKind COMMA;
    public static final enum org.springframework.expression.spel.standard.TokenKind IDENTIFIER;
    public static final enum org.springframework.expression.spel.standard.TokenKind COLON;
    public static final enum org.springframework.expression.spel.standard.TokenKind HASH;
    public static final enum org.springframework.expression.spel.standard.TokenKind RSQUARE;
    public static final enum org.springframework.expression.spel.standard.TokenKind LSQUARE;
    public static final enum org.springframework.expression.spel.standard.TokenKind LCURLY;
    public static final enum org.springframework.expression.spel.standard.TokenKind RCURLY;
    public static final enum org.springframework.expression.spel.standard.TokenKind DOT;
    public static final enum org.springframework.expression.spel.standard.TokenKind PLUS;
    public static final enum org.springframework.expression.spel.standard.TokenKind STAR;
    public static final enum org.springframework.expression.spel.standard.TokenKind DIV;
    public static final enum org.springframework.expression.spel.standard.TokenKind NOT;
    public static final enum org.springframework.expression.spel.standard.TokenKind MINUS;
    public static final enum org.springframework.expression.spel.standard.TokenKind SELECT_FIRST;
    public static final enum org.springframework.expression.spel.standard.TokenKind SELECT_LAST;
    public static final enum org.springframework.expression.spel.standard.TokenKind QMARK;
    public static final enum org.springframework.expression.spel.standard.TokenKind PROJECT;
    public static final enum org.springframework.expression.spel.standard.TokenKind GE;
    public static final enum org.springframework.expression.spel.standard.TokenKind GT;
    public static final enum org.springframework.expression.spel.standard.TokenKind LE;
    public static final enum org.springframework.expression.spel.standard.TokenKind LT;
    public static final enum org.springframework.expression.spel.standard.TokenKind EQ;
    public static final enum org.springframework.expression.spel.standard.TokenKind NE;
    public static final enum org.springframework.expression.spel.standard.TokenKind ASSIGN;
    public static final enum org.springframework.expression.spel.standard.TokenKind INSTANCEOF;
    public static final enum org.springframework.expression.spel.standard.TokenKind MATCHES;
    public static final enum org.springframework.expression.spel.standard.TokenKind BETWEEN;
    public static final enum org.springframework.expression.spel.standard.TokenKind SELECT;
    public static final enum org.springframework.expression.spel.standard.TokenKind MOD;
    public static final enum org.springframework.expression.spel.standard.TokenKind POWER;
    public static final enum org.springframework.expression.spel.standard.TokenKind ELVIS;
    public static final enum org.springframework.expression.spel.standard.TokenKind SAFE_NAVI;
    public static final enum org.springframework.expression.spel.standard.TokenKind BEAN_REF;
    char[] tokenChars;
    private boolean hasPayload;
    private static final org.springframework.expression.spel.standard.TokenKind[] ENUM$VALUES;

    static void <clinit>()
    {
        org.springframework.expression.spel.standard.TokenKind $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86;
        org.springframework.expression.spel.standard.TokenKind[] $r43;

        $r0 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r0.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int)>("LITERAL_INT", 0);

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind LITERAL_INT> = $r0;

        $r1 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r1.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int)>("LITERAL_LONG", 1);

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind LITERAL_LONG> = $r1;

        $r2 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r2.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int)>("LITERAL_HEXINT", 2);

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind LITERAL_HEXINT> = $r2;

        $r3 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r3.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int)>("LITERAL_HEXLONG", 3);

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind LITERAL_HEXLONG> = $r3;

        $r4 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r4.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int)>("LITERAL_STRING", 4);

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind LITERAL_STRING> = $r4;

        $r5 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r5.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int)>("LITERAL_REAL", 5);

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind LITERAL_REAL> = $r5;

        $r6 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r6.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int)>("LITERAL_REAL_FLOAT", 6);

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind LITERAL_REAL_FLOAT> = $r6;

        $r7 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r7.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("LPAREN", 7, "(");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind LPAREN> = $r7;

        $r8 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r8.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("RPAREN", 8, ")");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind RPAREN> = $r8;

        $r9 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r9.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("COMMA", 9, ",");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind COMMA> = $r9;

        $r10 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r10.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int)>("IDENTIFIER", 10);

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind IDENTIFIER> = $r10;

        $r11 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r11.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("COLON", 11, ":");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind COLON> = $r11;

        $r12 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r12.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("HASH", 12, "#");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind HASH> = $r12;

        $r13 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r13.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("RSQUARE", 13, "]");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind RSQUARE> = $r13;

        $r14 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r14.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("LSQUARE", 14, "[");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind LSQUARE> = $r14;

        $r15 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r15.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("LCURLY", 15, "{");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind LCURLY> = $r15;

        $r16 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r16.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("RCURLY", 16, "}");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind RCURLY> = $r16;

        $r17 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r17.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("DOT", 17, ".");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind DOT> = $r17;

        $r18 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r18.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("PLUS", 18, "+");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind PLUS> = $r18;

        $r19 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r19.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("STAR", 19, "*");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind STAR> = $r19;

        $r20 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r20.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("DIV", 20, "/");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind DIV> = $r20;

        $r21 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r21.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("NOT", 21, "!");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind NOT> = $r21;

        $r22 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r22.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("MINUS", 22, "-");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind MINUS> = $r22;

        $r23 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r23.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("SELECT_FIRST", 23, "^[");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind SELECT_FIRST> = $r23;

        $r24 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r24.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("SELECT_LAST", 24, "$[");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind SELECT_LAST> = $r24;

        $r25 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r25.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("QMARK", 25, "?");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind QMARK> = $r25;

        $r26 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r26.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("PROJECT", 26, "![");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind PROJECT> = $r26;

        $r27 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r27.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("GE", 27, ">=");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind GE> = $r27;

        $r28 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r28.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("GT", 28, ">");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind GT> = $r28;

        $r29 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r29.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("LE", 29, "<=");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind LE> = $r29;

        $r30 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r30.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("LT", 30, "<");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind LT> = $r30;

        $r31 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r31.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("EQ", 31, "==");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind EQ> = $r31;

        $r32 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r32.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("NE", 32, "!=");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind NE> = $r32;

        $r33 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r33.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("ASSIGN", 33, "=");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind ASSIGN> = $r33;

        $r34 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r34.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("INSTANCEOF", 34, "instanceof");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind INSTANCEOF> = $r34;

        $r35 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r35.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("MATCHES", 35, "matches");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind MATCHES> = $r35;

        $r36 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r36.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("BETWEEN", 36, "between");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind BETWEEN> = $r36;

        $r37 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r37.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("SELECT", 37, "?[");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind SELECT> = $r37;

        $r38 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r38.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("MOD", 38, "%");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind MOD> = $r38;

        $r39 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r39.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("POWER", 39, "^");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind POWER> = $r39;

        $r40 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r40.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("ELVIS", 40, "?:");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind ELVIS> = $r40;

        $r41 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r41.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("SAFE_NAVI", 41, "?.");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind SAFE_NAVI> = $r41;

        $r42 = new org.springframework.expression.spel.standard.TokenKind;

        specialinvoke $r42.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>("BEAN_REF", 42, "@");

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind BEAN_REF> = $r42;

        $r43 = newarray (org.springframework.expression.spel.standard.TokenKind)[43];

        $r44 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind LITERAL_INT>;

        $r43[0] = $r44;

        $r45 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind LITERAL_LONG>;

        $r43[1] = $r45;

        $r46 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind LITERAL_HEXINT>;

        $r43[2] = $r46;

        $r47 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind LITERAL_HEXLONG>;

        $r43[3] = $r47;

        $r48 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind LITERAL_STRING>;

        $r43[4] = $r48;

        $r49 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind LITERAL_REAL>;

        $r43[5] = $r49;

        $r50 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind LITERAL_REAL_FLOAT>;

        $r43[6] = $r50;

        $r51 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind LPAREN>;

        $r43[7] = $r51;

        $r52 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind RPAREN>;

        $r43[8] = $r52;

        $r53 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind COMMA>;

        $r43[9] = $r53;

        $r54 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind IDENTIFIER>;

        $r43[10] = $r54;

        $r55 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind COLON>;

        $r43[11] = $r55;

        $r56 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind HASH>;

        $r43[12] = $r56;

        $r57 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind RSQUARE>;

        $r43[13] = $r57;

        $r58 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind LSQUARE>;

        $r43[14] = $r58;

        $r59 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind LCURLY>;

        $r43[15] = $r59;

        $r60 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind RCURLY>;

        $r43[16] = $r60;

        $r61 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind DOT>;

        $r43[17] = $r61;

        $r62 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind PLUS>;

        $r43[18] = $r62;

        $r63 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind STAR>;

        $r43[19] = $r63;

        $r64 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind DIV>;

        $r43[20] = $r64;

        $r65 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind NOT>;

        $r43[21] = $r65;

        $r66 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind MINUS>;

        $r43[22] = $r66;

        $r67 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind SELECT_FIRST>;

        $r43[23] = $r67;

        $r68 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind SELECT_LAST>;

        $r43[24] = $r68;

        $r69 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind QMARK>;

        $r43[25] = $r69;

        $r70 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind PROJECT>;

        $r43[26] = $r70;

        $r71 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind GE>;

        $r43[27] = $r71;

        $r72 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind GT>;

        $r43[28] = $r72;

        $r73 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind LE>;

        $r43[29] = $r73;

        $r74 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind LT>;

        $r43[30] = $r74;

        $r75 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind EQ>;

        $r43[31] = $r75;

        $r76 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind NE>;

        $r43[32] = $r76;

        $r77 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind ASSIGN>;

        $r43[33] = $r77;

        $r78 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind INSTANCEOF>;

        $r43[34] = $r78;

        $r79 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind MATCHES>;

        $r43[35] = $r79;

        $r80 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind BETWEEN>;

        $r43[36] = $r80;

        $r81 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind SELECT>;

        $r43[37] = $r81;

        $r82 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind MOD>;

        $r43[38] = $r82;

        $r83 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind POWER>;

        $r43[39] = $r83;

        $r84 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind ELVIS>;

        $r43[40] = $r84;

        $r85 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind SAFE_NAVI>;

        $r43[41] = $r85;

        $r86 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind BEAN_REF>;

        $r43[42] = $r86;

        <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind[] ENUM$VALUES> = $r43;

        return;
    }

    private void <init>(java.lang.String, int, java.lang.String)
    {
        int i0, $i1;
        char[] $r3, $r4;
        java.lang.String r1, r2;
        org.springframework.expression.spel.standard.TokenKind r0;
        boolean $z0;

        r0 := @this: org.springframework.expression.spel.standard.TokenKind;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        $r3 = virtualinvoke r2.<java.lang.String: char[] toCharArray()>();

        r0.<org.springframework.expression.spel.standard.TokenKind: char[] tokenChars> = $r3;

        $r4 = r0.<org.springframework.expression.spel.standard.TokenKind: char[] tokenChars>;

        $i1 = lengthof $r4;

        if $i1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<org.springframework.expression.spel.standard.TokenKind: boolean hasPayload> = $z0;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        int i0;
        java.lang.String r1;
        org.springframework.expression.spel.standard.TokenKind r0;

        r0 := @this: org.springframework.expression.spel.standard.TokenKind;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<org.springframework.expression.spel.standard.TokenKind: void <init>(java.lang.String,int,java.lang.String)>(r1, i0, "");

        return;
    }

    public java.lang.String toString()
    {
        int $i0;
        char[] $r4, $r9;
        java.lang.StringBuilder $r0, $r5, $r7, $r10, $r11;
        java.lang.String $r2, $r3, $r6, $r8, $r12;
        org.springframework.expression.spel.standard.TokenKind r1;

        r1 := @this: org.springframework.expression.spel.standard.TokenKind;

        $r0 = new java.lang.StringBuilder;

        $r2 = virtualinvoke r1.<org.springframework.expression.spel.standard.TokenKind: java.lang.String name()>();

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r4 = r1.<org.springframework.expression.spel.standard.TokenKind: char[] tokenChars>;

        $i0 = lengthof $r4;

        if $i0 == 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("(");

        $r8 = new java.lang.String;

        $r9 = r1.<org.springframework.expression.spel.standard.TokenKind: char[] tokenChars>;

        specialinvoke $r8.<java.lang.String: void <init>(char[])>($r9);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r12 = "";

     label2:
        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public boolean hasPayload()
    {
        org.springframework.expression.spel.standard.TokenKind r0;
        boolean $z0;

        r0 := @this: org.springframework.expression.spel.standard.TokenKind;

        $z0 = r0.<org.springframework.expression.spel.standard.TokenKind: boolean hasPayload>;

        return $z0;
    }

    public int getLength()
    {
        int $i0;
        char[] $r1;
        org.springframework.expression.spel.standard.TokenKind r0;

        r0 := @this: org.springframework.expression.spel.standard.TokenKind;

        $r1 = r0.<org.springframework.expression.spel.standard.TokenKind: char[] tokenChars>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public static org.springframework.expression.spel.standard.TokenKind[] values()
    {
        int $i0;
        org.springframework.expression.spel.standard.TokenKind[] $r0, $r1;

        $r0 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind[] ENUM$VALUES>;

        $i0 = lengthof $r0;

        $r1 = newarray (org.springframework.expression.spel.standard.TokenKind)[$i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, $r1, 0, $i0);

        return $r1;
    }

    public static org.springframework.expression.spel.standard.TokenKind valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.springframework.expression.spel.standard.TokenKind $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/springframework/expression/spel/standard/TokenKind;", r0);

        $r2 = (org.springframework.expression.spel.standard.TokenKind) $r1;

        return $r2;
    }
}
