public class org.apache.lucene.queryparser.xml.builders.LikeThisQueryBuilder extends java.lang.Object implements org.apache.lucene.queryparser.xml.QueryBuilder
{
    private static final int DEFAULT_MAX_QUERY_TERMS;
    private static final int DEFAULT_MIN_TERM_FREQUENCY;
    private static final float DEFAULT_PERCENT_TERMS_TO_MATCH;
    private final org.apache.lucene.analysis.Analyzer analyzer;
    private final java.lang.String[] defaultFieldNames;

    public void <init>(org.apache.lucene.analysis.Analyzer, java.lang.String[])
    {
        java.lang.String[] r2;
        org.apache.lucene.queryparser.xml.builders.LikeThisQueryBuilder r0;
        org.apache.lucene.analysis.Analyzer r1;

        r0 := @this: org.apache.lucene.queryparser.xml.builders.LikeThisQueryBuilder;

        r1 := @parameter0: org.apache.lucene.analysis.Analyzer;

        r2 := @parameter1: java.lang.String[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.queryparser.xml.builders.LikeThisQueryBuilder: org.apache.lucene.analysis.Analyzer analyzer> = r1;

        r0.<org.apache.lucene.queryparser.xml.builders.LikeThisQueryBuilder: java.lang.String[] defaultFieldNames> = r2;

        return;
    }

    public org.apache.lucene.search.Query getQuery(org.w3c.dom.Element) throws org.apache.lucene.queryparser.xml.ParserException
    {
        org.apache.lucene.queries.mlt.MoreLikeThisQuery $r39;
        boolean $z0;
        float $f0, $f1, $f2;
        java.lang.StringBuilder $r19, $r22, $r23, $r25, $r37;
        org.apache.lucene.util.Attribute $r8;
        org.apache.lucene.queryparser.xml.ParserException $r38;
        java.lang.String[] $r13, r27, r30;
        java.util.HashSet r29, $r35;
        int $i0, $i1, i2, i3, i4, $i5, $i6, $i7, $i9;
        java.lang.String $r1, r4, $r10, $r11, $r12, $r14, $r15, $r21, $r24, $r26, $r28, $r32, $r34;
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute r9;
        org.apache.lucene.analysis.TokenStream $r7;
        org.apache.lucene.analysis.Analyzer $r6, $r33;
        java.io.IOException $r16;
        org.w3c.dom.Element r0;
        java.io.StringReader $r36;
        java.lang.Class $r20;
        org.apache.lucene.queryparser.xml.builders.LikeThisQueryBuilder r2;

        r2 := @this: org.apache.lucene.queryparser.xml.builders.LikeThisQueryBuilder;

        r0 := @parameter0: org.w3c.dom.Element;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("fieldNames");

        r27 = r2.<org.apache.lucene.queryparser.xml.builders.LikeThisQueryBuilder: java.lang.String[] defaultFieldNames>;

        if $r1 == null goto label02;

        $r11 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r11.<java.lang.String: int length()>();

        if $i0 <= 0 goto label02;

        $r12 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $r13 = virtualinvoke $r12.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        r27 = $r13;

        i2 = 0;

     label01:
        $i1 = lengthof $r13;

        if i2 >= $i1 goto label02;

        $r14 = $r13[i2];

        $r15 = virtualinvoke $r14.<java.lang.String: java.lang.String trim()>();

        $r13[i2] = $r15;

        i2 = i2 + 1;

        goto label01;

     label02:
        $r28 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("stopWords");

        r29 = null;

        if $r28 == null goto label10;

        if r27 == null goto label10;

        $r35 = new java.util.HashSet;

        specialinvoke $r35.<java.util.HashSet: void <init>()>();

        r29 = $r35;

        r30 = r27;

        i3 = lengthof r27;

        i4 = 0;

     label03:
        if i4 >= i3 goto label10;

        r4 = r30[i4];

     label04:
        $r6 = r2.<org.apache.lucene.queryparser.xml.builders.LikeThisQueryBuilder: org.apache.lucene.analysis.Analyzer analyzer>;

        $r36 = new java.io.StringReader;

        specialinvoke $r36.<java.io.StringReader: void <init>(java.lang.String)>($r28);

        $r7 = virtualinvoke $r6.<org.apache.lucene.analysis.Analyzer: org.apache.lucene.analysis.TokenStream tokenStream(java.lang.String,java.io.Reader)>(r4, $r36);

        $r8 = virtualinvoke $r7.<org.apache.lucene.analysis.TokenStream: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/CharTermAttribute;");

        r9 = (org.apache.lucene.analysis.tokenattributes.CharTermAttribute) $r8;

        virtualinvoke $r7.<org.apache.lucene.analysis.TokenStream: void reset()>();

     label05:
        $z0 = virtualinvoke $r7.<org.apache.lucene.analysis.TokenStream: boolean incrementToken()>();

        if $z0 == 0 goto label06;

        $r10 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke $r35.<java.util.Set: boolean add(java.lang.Object)>($r10);

        goto label05;

     label06:
        virtualinvoke $r7.<org.apache.lucene.analysis.TokenStream: void end()>();

        virtualinvoke $r7.<org.apache.lucene.analysis.TokenStream: void close()>();

     label07:
        goto label09;

     label08:
        $r16 := @caughtexception;

        $r38 = new org.apache.lucene.queryparser.xml.ParserException;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IoException parsing stop words list in ");

        $r20 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r21 = virtualinvoke $r20.<java.lang.Class: java.lang.String getName()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r24 = virtualinvoke $r16.<java.io.IOException: java.lang.String getLocalizedMessage()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r38.<org.apache.lucene.queryparser.xml.ParserException: void <init>(java.lang.String)>($r26);

        throw $r38;

     label09:
        i4 = i4 + 1;

        goto label03;

     label10:
        $r39 = new org.apache.lucene.queries.mlt.MoreLikeThisQuery;

        $r32 = staticinvoke <org.apache.lucene.queryparser.xml.DOMUtils: java.lang.String getText(org.w3c.dom.Node)>(r0);

        $r33 = r2.<org.apache.lucene.queryparser.xml.builders.LikeThisQueryBuilder: org.apache.lucene.analysis.Analyzer analyzer>;

        $r34 = r27[0];

        specialinvoke $r39.<org.apache.lucene.queries.mlt.MoreLikeThisQuery: void <init>(java.lang.String,java.lang.String[],org.apache.lucene.analysis.Analyzer,java.lang.String)>($r32, r27, $r33, $r34);

        $i5 = staticinvoke <org.apache.lucene.queryparser.xml.DOMUtils: int getAttribute(org.w3c.dom.Element,java.lang.String,int)>(r0, "maxQueryTerms", 20);

        virtualinvoke $r39.<org.apache.lucene.queries.mlt.MoreLikeThisQuery: void setMaxQueryTerms(int)>($i5);

        $i6 = staticinvoke <org.apache.lucene.queryparser.xml.DOMUtils: int getAttribute(org.w3c.dom.Element,java.lang.String,int)>(r0, "minTermFrequency", 1);

        virtualinvoke $r39.<org.apache.lucene.queries.mlt.MoreLikeThisQuery: void setMinTermFrequency(int)>($i6);

        $f1 = staticinvoke <org.apache.lucene.queryparser.xml.DOMUtils: float getAttribute(org.w3c.dom.Element,java.lang.String,float)>(r0, "percentTermsToMatch", 30.0F);

        $f2 = $f1 / 100.0F;

        virtualinvoke $r39.<org.apache.lucene.queries.mlt.MoreLikeThisQuery: void setPercentTermsToMatch(float)>($f2);

        virtualinvoke $r39.<org.apache.lucene.queries.mlt.MoreLikeThisQuery: void setStopWords(java.util.Set)>(r29);

        $i9 = (int) -1;

        $i7 = staticinvoke <org.apache.lucene.queryparser.xml.DOMUtils: int getAttribute(org.w3c.dom.Element,java.lang.String,int)>(r0, "minDocFreq", $i9);

        if $i7 < 0 goto label11;

        virtualinvoke $r39.<org.apache.lucene.queries.mlt.MoreLikeThisQuery: void setMinDocFreq(int)>($i7);

     label11:
        $f0 = staticinvoke <org.apache.lucene.queryparser.xml.DOMUtils: float getAttribute(org.w3c.dom.Element,java.lang.String,float)>(r0, "boost", 1.0F);

        virtualinvoke $r39.<org.apache.lucene.queries.mlt.MoreLikeThisQuery: void setBoost(float)>($f0);

        return $r39;

        catch java.io.IOException from label04 to label07 with label08;
    }

    public static void <clinit>()
    {
        <org.apache.lucene.queryparser.xml.builders.LikeThisQueryBuilder: float DEFAULT_PERCENT_TERMS_TO_MATCH> = 30.0F;

        <org.apache.lucene.queryparser.xml.builders.LikeThisQueryBuilder: int DEFAULT_MIN_TERM_FREQUENCY> = 1;

        <org.apache.lucene.queryparser.xml.builders.LikeThisQueryBuilder: int DEFAULT_MAX_QUERY_TERMS> = 20;

        return;
    }
}
