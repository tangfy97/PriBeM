public class groovy.model.PropertyModel extends java.lang.Object implements groovy.model.ValueModel, groovy.model.NestedValueModel
{
    private groovy.model.ValueModel sourceModel;
    private java.lang.String property;
    private java.lang.Class type;
    boolean editable;
    static java.lang.Class class$java$lang$Object;

    public void <init>(groovy.model.ValueModel, java.lang.String)
    {
        groovy.model.ValueModel r1;
        java.lang.Class $r3, $r4;
        java.lang.String r2;
        groovy.model.PropertyModel r0;

        r0 := @this: groovy.model.PropertyModel;

        r1 := @parameter0: groovy.model.ValueModel;

        r2 := @parameter1: java.lang.String;

        $r3 = <groovy.model.PropertyModel: java.lang.Class class$java$lang$Object>;

        if $r3 != null goto label1;

        $r4 = staticinvoke <groovy.model.PropertyModel: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <groovy.model.PropertyModel: java.lang.Class class$java$lang$Object> = $r4;

        goto label2;

     label1:
        $r4 = <groovy.model.PropertyModel: java.lang.Class class$java$lang$Object>;

     label2:
        specialinvoke r0.<groovy.model.PropertyModel: void <init>(groovy.model.ValueModel,java.lang.String,java.lang.Class,boolean)>(r1, r2, $r4, 1);

        return;
    }

    public void <init>(groovy.model.ValueModel, java.lang.String, java.lang.Class)
    {
        groovy.model.ValueModel r1;
        java.lang.Class r3;
        java.lang.String r2;
        groovy.model.PropertyModel r0;

        r0 := @this: groovy.model.PropertyModel;

        r1 := @parameter0: groovy.model.ValueModel;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Class;

        specialinvoke r0.<groovy.model.PropertyModel: void <init>(groovy.model.ValueModel,java.lang.String,java.lang.Class,boolean)>(r1, r2, r3, 1);

        return;
    }

    public void <init>(groovy.model.ValueModel, java.lang.String, java.lang.Class, boolean)
    {
        groovy.model.ValueModel r1;
        java.lang.Class r3;
        java.lang.String r2;
        groovy.model.PropertyModel r0;
        boolean z0;

        r0 := @this: groovy.model.PropertyModel;

        r1 := @parameter0: groovy.model.ValueModel;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Class;

        z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<groovy.model.PropertyModel: groovy.model.ValueModel sourceModel> = r1;

        r0.<groovy.model.PropertyModel: java.lang.String property> = r2;

        r0.<groovy.model.PropertyModel: java.lang.Class type> = r3;

        r0.<groovy.model.PropertyModel: boolean editable> = z0;

        return;
    }

    public java.lang.String getProperty()
    {
        java.lang.String $r1;
        groovy.model.PropertyModel r0;

        r0 := @this: groovy.model.PropertyModel;

        $r1 = r0.<groovy.model.PropertyModel: java.lang.String property>;

        return $r1;
    }

    public groovy.model.ValueModel getSourceModel()
    {
        groovy.model.ValueModel $r1;
        groovy.model.PropertyModel r0;

        r0 := @this: groovy.model.PropertyModel;

        $r1 = r0.<groovy.model.PropertyModel: groovy.model.ValueModel sourceModel>;

        return $r1;
    }

    public java.lang.Object getValue()
    {
        groovy.model.ValueModel $r1;
        java.lang.Object $r2, $r4;
        java.lang.String $r3;
        groovy.model.PropertyModel r0;

        r0 := @this: groovy.model.PropertyModel;

        $r1 = r0.<groovy.model.PropertyModel: groovy.model.ValueModel sourceModel>;

        $r2 = interfaceinvoke $r1.<groovy.model.ValueModel: java.lang.Object getValue()>();

        if $r2 == null goto label1;

        $r3 = r0.<groovy.model.PropertyModel: java.lang.String property>;

        $r4 = staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: java.lang.Object getProperty(java.lang.Object,java.lang.String)>($r2, $r3);

        return $r4;

     label1:
        return null;
    }

    public void setValue(java.lang.Object)
    {
        groovy.model.ValueModel $r1;
        java.lang.Object $r2, r3;
        java.lang.String $r4;
        groovy.model.PropertyModel r0;

        r0 := @this: groovy.model.PropertyModel;

        r3 := @parameter0: java.lang.Object;

        $r1 = r0.<groovy.model.PropertyModel: groovy.model.ValueModel sourceModel>;

        $r2 = interfaceinvoke $r1.<groovy.model.ValueModel: java.lang.Object getValue()>();

        if $r2 == null goto label1;

        $r4 = r0.<groovy.model.PropertyModel: java.lang.String property>;

        staticinvoke <org.codehaus.groovy.runtime.InvokerHelper: void setProperty(java.lang.Object,java.lang.String,java.lang.Object)>($r2, $r4, r3);

     label1:
        return;
    }

    public java.lang.Class getType()
    {
        java.lang.Class $r1;
        groovy.model.PropertyModel r0;

        r0 := @this: groovy.model.PropertyModel;

        $r1 = r0.<groovy.model.PropertyModel: java.lang.Class type>;

        return $r1;
    }

    public boolean isEditable()
    {
        groovy.model.PropertyModel r0;
        boolean $z0;

        r0 := @this: groovy.model.PropertyModel;

        $z0 = r0.<groovy.model.PropertyModel: boolean editable>;

        return $z0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
