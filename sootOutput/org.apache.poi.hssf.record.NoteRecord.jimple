public final class org.apache.poi.hssf.record.NoteRecord extends org.apache.poi.hssf.record.StandardRecord
{
    public static final short sid;
    public static final org.apache.poi.hssf.record.NoteRecord[] EMPTY_ARRAY;
    public static final short NOTE_HIDDEN;
    public static final short NOTE_VISIBLE;
    private static final java.lang.Byte DEFAULT_PADDING;
    private int field_1_row;
    private int field_2_col;
    private short field_3_flags;
    private int field_4_shapeid;
    private boolean field_5_hasMultibyte;
    private java.lang.String field_6_author;
    private java.lang.Byte field_7_padding;

    public void <init>()
    {
        org.apache.poi.hssf.record.NoteRecord r0;
        java.lang.Byte $r1;

        r0 := @this: org.apache.poi.hssf.record.NoteRecord;

        specialinvoke r0.<org.apache.poi.hssf.record.StandardRecord: void <init>()>();

        r0.<org.apache.poi.hssf.record.NoteRecord: java.lang.String field_6_author> = "";

        r0.<org.apache.poi.hssf.record.NoteRecord: short field_3_flags> = 0;

        $r1 = <org.apache.poi.hssf.record.NoteRecord: java.lang.Byte DEFAULT_PADDING>;

        r0.<org.apache.poi.hssf.record.NoteRecord: java.lang.Byte field_7_padding> = $r1;

        return;
    }

    public short getSid()
    {
        org.apache.poi.hssf.record.NoteRecord r0;

        r0 := @this: org.apache.poi.hssf.record.NoteRecord;

        return 28;
    }

    public void <init>(org.apache.poi.hssf.record.RecordInputStream)
    {
        short $s1, $s2, $s4;
        org.apache.poi.hssf.record.RecordInputStream r1;
        byte $b5, $b8, $b9;
        int $i0, $i3, $i6, $i7, $i10, $i11, $i12;
        org.apache.poi.hssf.record.NoteRecord r0;
        java.lang.String $r2, $r5;
        java.lang.Byte $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.hssf.record.NoteRecord;

        r1 := @parameter0: org.apache.poi.hssf.record.RecordInputStream;

        specialinvoke r0.<org.apache.poi.hssf.record.StandardRecord: void <init>()>();

        $i0 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: int readUShort()>();

        r0.<org.apache.poi.hssf.record.NoteRecord: int field_1_row> = $i0;

        $s1 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: short readShort()>();

        $i10 = (int) $s1;

        r0.<org.apache.poi.hssf.record.NoteRecord: int field_2_col> = $i10;

        $s2 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: short readShort()>();

        r0.<org.apache.poi.hssf.record.NoteRecord: short field_3_flags> = $s2;

        $i3 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: int readUShort()>();

        r0.<org.apache.poi.hssf.record.NoteRecord: int field_4_shapeid> = $i3;

        $s4 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: short readShort()>();

        $b5 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: byte readByte()>();

        if $b5 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<org.apache.poi.hssf.record.NoteRecord: boolean field_5_hasMultibyte> = $z1;

        $z0 = r0.<org.apache.poi.hssf.record.NoteRecord: boolean field_5_hasMultibyte>;

        if $z0 == 0 goto label3;

        $i11 = (int) $s4;

        $r5 = staticinvoke <org.apache.poi.util.StringUtil: java.lang.String readUnicodeLE(org.apache.poi.util.LittleEndianInput,int)>(r1, $i11);

        r0.<org.apache.poi.hssf.record.NoteRecord: java.lang.String field_6_author> = $r5;

        goto label4;

     label3:
        $i12 = (int) $s4;

        $r2 = staticinvoke <org.apache.poi.util.StringUtil: java.lang.String readCompressedUnicode(org.apache.poi.util.LittleEndianInput,int)>(r1, $i12);

        r0.<org.apache.poi.hssf.record.NoteRecord: java.lang.String field_6_author> = $r2;

     label4:
        $i6 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: int available()>();

        if $i6 != 1 goto label5;

        $b9 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: byte readByte()>();

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b9);

        r0.<org.apache.poi.hssf.record.NoteRecord: java.lang.Byte field_7_padding> = $r4;

        goto label6;

     label5:
        $i7 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: int available()>();

        if $i7 != 2 goto label6;

        if $s4 != 0 goto label6;

        $b8 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: byte readByte()>();

        $r3 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b8);

        r0.<org.apache.poi.hssf.record.NoteRecord: java.lang.Byte field_7_padding> = $r3;

        virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: byte readByte()>();

     label6:
        return;
    }

    public void serialize(org.apache.poi.util.LittleEndianOutput)
    {
        short $s2;
        byte $b6;
        org.apache.poi.util.LittleEndianOutput r0;
        int $i0, $i1, $i3, $i4, $i5, $i7;
        org.apache.poi.hssf.record.NoteRecord r1;
        java.lang.String $r2, $r3, $r6;
        java.lang.Byte $r4, $r5;
        boolean $z0, $z1;

        r1 := @this: org.apache.poi.hssf.record.NoteRecord;

        r0 := @parameter0: org.apache.poi.util.LittleEndianOutput;

        $i0 = r1.<org.apache.poi.hssf.record.NoteRecord: int field_1_row>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i0);

        $i1 = r1.<org.apache.poi.hssf.record.NoteRecord: int field_2_col>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i1);

        $s2 = r1.<org.apache.poi.hssf.record.NoteRecord: short field_3_flags>;

        $i7 = (int) $s2;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i7);

        $i3 = r1.<org.apache.poi.hssf.record.NoteRecord: int field_4_shapeid>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i3);

        $r2 = r1.<org.apache.poi.hssf.record.NoteRecord: java.lang.String field_6_author>;

        $i4 = virtualinvoke $r2.<java.lang.String: int length()>();

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i4);

        $z0 = r1.<org.apache.poi.hssf.record.NoteRecord: boolean field_5_hasMultibyte>;

        if $z0 == 0 goto label1;

        $b6 = 1;

        goto label2;

     label1:
        $b6 = 0;

     label2:
        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeByte(int)>($b6);

        $z1 = r1.<org.apache.poi.hssf.record.NoteRecord: boolean field_5_hasMultibyte>;

        if $z1 == 0 goto label3;

        $r6 = r1.<org.apache.poi.hssf.record.NoteRecord: java.lang.String field_6_author>;

        staticinvoke <org.apache.poi.util.StringUtil: void putUnicodeLE(java.lang.String,org.apache.poi.util.LittleEndianOutput)>($r6, r0);

        goto label4;

     label3:
        $r3 = r1.<org.apache.poi.hssf.record.NoteRecord: java.lang.String field_6_author>;

        staticinvoke <org.apache.poi.util.StringUtil: void putCompressedUnicode(java.lang.String,org.apache.poi.util.LittleEndianOutput)>($r3, r0);

     label4:
        $r4 = r1.<org.apache.poi.hssf.record.NoteRecord: java.lang.Byte field_7_padding>;

        if $r4 == null goto label5;

        $r5 = r1.<org.apache.poi.hssf.record.NoteRecord: java.lang.Byte field_7_padding>;

        $i5 = virtualinvoke $r5.<java.lang.Byte: int intValue()>();

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeByte(int)>($i5);

     label5:
        return;
    }

    protected int getDataSize()
    {
        byte $b4;
        int $i0, $i1, $i2, $i3;
        org.apache.poi.hssf.record.NoteRecord r0;
        java.lang.String $r1;
        java.lang.Byte $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.hssf.record.NoteRecord;

        $r1 = r0.<org.apache.poi.hssf.record.NoteRecord: java.lang.String field_6_author>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $z0 = r0.<org.apache.poi.hssf.record.NoteRecord: boolean field_5_hasMultibyte>;

        if $z0 == 0 goto label1;

        $b4 = 2;

        goto label2;

     label1:
        $b4 = 1;

     label2:
        $i1 = $i0 * $b4;

        $i2 = 11 + $i1;

        $r2 = r0.<org.apache.poi.hssf.record.NoteRecord: java.lang.Byte field_7_padding>;

        if $r2 != null goto label3;

        $z1 = 0;

        goto label4;

     label3:
        $z1 = 1;

     label4:
        $i3 = $i2 + $z1;

        return $i3;
    }

    public java.lang.String toString()
    {
        short $s2;
        java.lang.StringBuffer $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r14;
        int $i0, $i1, $i3, $i4;
        org.apache.poi.hssf.record.NoteRecord r2;
        java.lang.String $r11, $r13;

        r2 := @this: org.apache.poi.hssf.record.NoteRecord;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[NOTE]\n");

        $r1 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    .row    = ");

        $i0 = r2.<org.apache.poi.hssf.record.NoteRecord: int field_1_row>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r4 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    .col    = ");

        $i1 = r2.<org.apache.poi.hssf.record.NoteRecord: int field_2_col>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r6 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    .flags  = ");

        $s2 = r2.<org.apache.poi.hssf.record.NoteRecord: short field_3_flags>;

        $i4 = (int) $s2;

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i4);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r8 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    .shapeid= ");

        $i3 = r2.<org.apache.poi.hssf.record.NoteRecord: int field_4_shapeid>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r10 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    .author = ");

        $r11 = r2.<org.apache.poi.hssf.record.NoteRecord: java.lang.String field_6_author>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[/NOTE]\n");

        $r13 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r13;
    }

    public int getRow()
    {
        int $i0;
        org.apache.poi.hssf.record.NoteRecord r0;

        r0 := @this: org.apache.poi.hssf.record.NoteRecord;

        $i0 = r0.<org.apache.poi.hssf.record.NoteRecord: int field_1_row>;

        return $i0;
    }

    public void setRow(int)
    {
        int i0;
        org.apache.poi.hssf.record.NoteRecord r0;

        r0 := @this: org.apache.poi.hssf.record.NoteRecord;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hssf.record.NoteRecord: int field_1_row> = i0;

        return;
    }

    public int getColumn()
    {
        int $i0;
        org.apache.poi.hssf.record.NoteRecord r0;

        r0 := @this: org.apache.poi.hssf.record.NoteRecord;

        $i0 = r0.<org.apache.poi.hssf.record.NoteRecord: int field_2_col>;

        return $i0;
    }

    public void setColumn(int)
    {
        int i0;
        org.apache.poi.hssf.record.NoteRecord r0;

        r0 := @this: org.apache.poi.hssf.record.NoteRecord;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hssf.record.NoteRecord: int field_2_col> = i0;

        return;
    }

    public short getFlags()
    {
        org.apache.poi.hssf.record.NoteRecord r0;
        short $s0;

        r0 := @this: org.apache.poi.hssf.record.NoteRecord;

        $s0 = r0.<org.apache.poi.hssf.record.NoteRecord: short field_3_flags>;

        return $s0;
    }

    public void setFlags(short)
    {
        org.apache.poi.hssf.record.NoteRecord r0;
        short s0;

        r0 := @this: org.apache.poi.hssf.record.NoteRecord;

        s0 := @parameter0: short;

        r0.<org.apache.poi.hssf.record.NoteRecord: short field_3_flags> = s0;

        return;
    }

    protected boolean authorIsMultibyte()
    {
        org.apache.poi.hssf.record.NoteRecord r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.NoteRecord;

        $z0 = r0.<org.apache.poi.hssf.record.NoteRecord: boolean field_5_hasMultibyte>;

        return $z0;
    }

    public int getShapeId()
    {
        int $i0;
        org.apache.poi.hssf.record.NoteRecord r0;

        r0 := @this: org.apache.poi.hssf.record.NoteRecord;

        $i0 = r0.<org.apache.poi.hssf.record.NoteRecord: int field_4_shapeid>;

        return $i0;
    }

    public void setShapeId(int)
    {
        int i0;
        org.apache.poi.hssf.record.NoteRecord r0;

        r0 := @this: org.apache.poi.hssf.record.NoteRecord;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hssf.record.NoteRecord: int field_4_shapeid> = i0;

        return;
    }

    public java.lang.String getAuthor()
    {
        org.apache.poi.hssf.record.NoteRecord r0;
        java.lang.String $r1;

        r0 := @this: org.apache.poi.hssf.record.NoteRecord;

        $r1 = r0.<org.apache.poi.hssf.record.NoteRecord: java.lang.String field_6_author>;

        return $r1;
    }

    public void setAuthor(java.lang.String)
    {
        org.apache.poi.hssf.record.NoteRecord r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.NoteRecord;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.poi.hssf.record.NoteRecord: java.lang.String field_6_author> = r1;

        $z0 = staticinvoke <org.apache.poi.util.StringUtil: boolean hasMultibyte(java.lang.String)>(r1);

        r0.<org.apache.poi.hssf.record.NoteRecord: boolean field_5_hasMultibyte> = $z0;

        return;
    }

    public java.lang.Object clone()
    {
        short $s2;
        int $i0, $i1, $i3;
        org.apache.poi.hssf.record.NoteRecord $r0, r1;
        java.lang.String $r2;

        r1 := @this: org.apache.poi.hssf.record.NoteRecord;

        $r0 = new org.apache.poi.hssf.record.NoteRecord;

        specialinvoke $r0.<org.apache.poi.hssf.record.NoteRecord: void <init>()>();

        $i0 = r1.<org.apache.poi.hssf.record.NoteRecord: int field_1_row>;

        $r0.<org.apache.poi.hssf.record.NoteRecord: int field_1_row> = $i0;

        $i1 = r1.<org.apache.poi.hssf.record.NoteRecord: int field_2_col>;

        $r0.<org.apache.poi.hssf.record.NoteRecord: int field_2_col> = $i1;

        $s2 = r1.<org.apache.poi.hssf.record.NoteRecord: short field_3_flags>;

        $r0.<org.apache.poi.hssf.record.NoteRecord: short field_3_flags> = $s2;

        $i3 = r1.<org.apache.poi.hssf.record.NoteRecord: int field_4_shapeid>;

        $r0.<org.apache.poi.hssf.record.NoteRecord: int field_4_shapeid> = $i3;

        $r2 = r1.<org.apache.poi.hssf.record.NoteRecord: java.lang.String field_6_author>;

        $r0.<org.apache.poi.hssf.record.NoteRecord: java.lang.String field_6_author> = $r2;

        return $r0;
    }

    static void <clinit>()
    {
        org.apache.poi.hssf.record.NoteRecord[] $r0;
        java.lang.Byte $r1;

        <org.apache.poi.hssf.record.NoteRecord: short NOTE_VISIBLE> = 2;

        <org.apache.poi.hssf.record.NoteRecord: short NOTE_HIDDEN> = 0;

        <org.apache.poi.hssf.record.NoteRecord: short sid> = 28;

        $r0 = newarray (org.apache.poi.hssf.record.NoteRecord)[0];

        <org.apache.poi.hssf.record.NoteRecord: org.apache.poi.hssf.record.NoteRecord[] EMPTY_ARRAY> = $r0;

        $r1 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(0);

        <org.apache.poi.hssf.record.NoteRecord: java.lang.Byte DEFAULT_PADDING> = $r1;

        return;
    }
}
