public final enum class com.google.inject.servlet.UriPatternType extends java.lang.Enum
{
    public static final enum com.google.inject.servlet.UriPatternType SERVLET;
    public static final enum com.google.inject.servlet.UriPatternType REGEX;
    private static final com.google.inject.servlet.UriPatternType[] $VALUES;

    public static com.google.inject.servlet.UriPatternType[] values()
    {
        java.lang.Object $r1;
        com.google.inject.servlet.UriPatternType[] $r0, $r2;

        $r0 = <com.google.inject.servlet.UriPatternType: com.google.inject.servlet.UriPatternType[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (com.google.inject.servlet.UriPatternType[]) $r1;

        return $r2;
    }

    public static com.google.inject.servlet.UriPatternType valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        com.google.inject.servlet.UriPatternType $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/google/inject/servlet/UriPatternType;", r0);

        $r2 = (com.google.inject.servlet.UriPatternType) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        int i0;
        java.lang.String r1;
        com.google.inject.servlet.UriPatternType r0;

        r0 := @this: com.google.inject.servlet.UriPatternType;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static com.google.inject.servlet.UriPatternMatcher get(com.google.inject.servlet.UriPatternType, java.lang.String)
    {
        com.google.inject.servlet.UriPatternType$RegexUriPatternMatcher $r2;
        int[] $r1;
        com.google.inject.servlet.UriPatternType r0;
        int $i0, $i1;
        com.google.inject.servlet.UriPatternType$ServletStyleUriPatternMatcher $r4;
        java.lang.String r3;

        r0 := @parameter0: com.google.inject.servlet.UriPatternType;

        r3 := @parameter1: java.lang.String;

        $r1 = <com.google.inject.servlet.UriPatternType$1: int[] $SwitchMap$com$google$inject$servlet$UriPatternType>;

        $i0 = virtualinvoke r0.<com.google.inject.servlet.UriPatternType: int ordinal()>();

        $i1 = $r1[$i0];

        lookupswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r4 = new com.google.inject.servlet.UriPatternType$ServletStyleUriPatternMatcher;

        specialinvoke $r4.<com.google.inject.servlet.UriPatternType$ServletStyleUriPatternMatcher: void <init>(java.lang.String)>(r3);

        return $r4;

     label2:
        $r2 = new com.google.inject.servlet.UriPatternType$RegexUriPatternMatcher;

        specialinvoke $r2.<com.google.inject.servlet.UriPatternType$RegexUriPatternMatcher: void <init>(java.lang.String)>(r3);

        return $r2;

     label3:
        return null;
    }

    static void <clinit>()
    {
        com.google.inject.servlet.UriPatternType[] $r2;
        com.google.inject.servlet.UriPatternType $r0, $r1, $r3, $r4;

        $r0 = new com.google.inject.servlet.UriPatternType;

        specialinvoke $r0.<com.google.inject.servlet.UriPatternType: void <init>(java.lang.String,int)>("SERVLET", 0);

        <com.google.inject.servlet.UriPatternType: com.google.inject.servlet.UriPatternType SERVLET> = $r0;

        $r1 = new com.google.inject.servlet.UriPatternType;

        specialinvoke $r1.<com.google.inject.servlet.UriPatternType: void <init>(java.lang.String,int)>("REGEX", 1);

        <com.google.inject.servlet.UriPatternType: com.google.inject.servlet.UriPatternType REGEX> = $r1;

        $r2 = newarray (com.google.inject.servlet.UriPatternType)[2];

        $r3 = <com.google.inject.servlet.UriPatternType: com.google.inject.servlet.UriPatternType SERVLET>;

        $r2[0] = $r3;

        $r4 = <com.google.inject.servlet.UriPatternType: com.google.inject.servlet.UriPatternType REGEX>;

        $r2[1] = $r4;

        <com.google.inject.servlet.UriPatternType: com.google.inject.servlet.UriPatternType[] $VALUES> = $r2;

        return;
    }
}
