public abstract class org.apache.batik.parser.TimingParser extends org.apache.batik.parser.AbstractParser
{
    protected static final int TIME_OFFSET;
    protected static final int TIME_SYNCBASE;
    protected static final int TIME_EVENTBASE;
    protected static final int TIME_REPEAT;
    protected static final int TIME_ACCESSKEY;
    protected static final int TIME_ACCESSKEY_SVG12;
    protected static final int TIME_MEDIA_MARKER;
    protected static final int TIME_WALLCLOCK;
    protected static final int TIME_INDEFINITE;
    protected boolean useSVG11AccessKeys;
    protected boolean useSVG12AccessKeys;

    public void <init>(boolean, boolean)
    {
        org.apache.batik.parser.TimingParser r0;
        boolean z0, z1;

        r0 := @this: org.apache.batik.parser.TimingParser;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        specialinvoke r0.<org.apache.batik.parser.AbstractParser: void <init>()>();

        r0.<org.apache.batik.parser.TimingParser: boolean useSVG11AccessKeys> = z0;

        r0.<org.apache.batik.parser.TimingParser: boolean useSVG12AccessKeys> = z1;

        return;
    }

    protected java.lang.Object[] parseTimingSpecifier() throws org.apache.batik.parser.ParseException, java.io.IOException
    {
        java.lang.Float $r5;
        org.apache.batik.parser.TimingParser r0;
        java.lang.Object[] r2, $r3;
        org.apache.batik.util.io.NormalizingReader $r1;
        java.lang.Integer $r4;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8;
        boolean $z0, z1, z2, z3;
        char $c5;
        float $f0;

        r0 := @this: org.apache.batik.parser.TimingParser;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void skipSpaces()>();

        z1 = 0;

        z3 = 0;

        z2 = 0;

        $i0 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i0 != 92 goto label1;

        z1 = 1;

        z3 = 1;

        z2 = 1;

        $r1 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i8 = virtualinvoke $r1.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i8;

     label1:
        r2 = null;

        $i1 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i1 == 43 goto label3;

        $i2 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i2 != 45 goto label2;

        if z3 == 0 goto label3;

     label2:
        $i3 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i3 < 48 goto label4;

        $i7 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i7 > 57 goto label4;

     label3:
        $f0 = virtualinvoke r0.<org.apache.batik.parser.TimingParser: float parseOffset()>();

        $r3 = newarray (java.lang.Object)[2];

        $r4 = new java.lang.Integer;

        specialinvoke $r4.<java.lang.Integer: void <init>(int)>(0);

        $r3[0] = $r4;

        $r5 = new java.lang.Float;

        specialinvoke $r5.<java.lang.Float: void <init>(float)>($f0);

        $r3[1] = $r5;

        r2 = $r3;

        goto label6;

     label4:
        $i4 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        $c5 = (char) $i4;

        $z0 = staticinvoke <org.apache.batik.xml.XMLUtilities: boolean isXMLNameFirstCharacter(char)>($c5);

        if $z0 == 0 goto label5;

        r2 = virtualinvoke r0.<org.apache.batik.parser.TimingParser: java.lang.Object[] parseIDValue(boolean)>(z2);

        goto label6;

     label5:
        $i6 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i6);

     label6:
        return r2;
    }

    protected java.lang.String parseName() throws org.apache.batik.parser.ParseException, java.io.IOException
    {
        org.apache.batik.parser.TimingParser r1;
        org.apache.batik.util.io.NormalizingReader $r2, $r3;
        java.lang.StringBuffer $r0;
        int $i0, $i2, $i3, $i4, $i5, $i7, $i8;
        java.lang.String $r4;
        boolean $z0, z1;
        char $c1, $c6;

        r1 := @this: org.apache.batik.parser.TimingParser;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

     label1:
        $i5 = r1.<org.apache.batik.parser.AbstractParser: int current>;

        $c6 = (char) $i5;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c6);

        $r3 = r1.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i7 = virtualinvoke $r3.<java.io.Reader: int read()>();

        r1.<org.apache.batik.parser.AbstractParser: int current> = $i7;

        z1 = 0;

        $i8 = r1.<org.apache.batik.parser.AbstractParser: int current>;

        if $i8 != 92 goto label2;

        z1 = 1;

        $r2 = r1.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i4 = virtualinvoke $r2.<java.io.Reader: int read()>();

        r1.<org.apache.batik.parser.AbstractParser: int current> = $i4;

     label2:
        $i0 = r1.<org.apache.batik.parser.AbstractParser: int current>;

        $c1 = (char) $i0;

        $z0 = staticinvoke <org.apache.batik.xml.XMLUtilities: boolean isXMLNameCharacter(char)>($c1);

        if $z0 == 0 goto label3;

        if z1 != 0 goto label1;

        $i2 = r1.<org.apache.batik.parser.AbstractParser: int current>;

        if $i2 == 45 goto label3;

        $i3 = r1.<org.apache.batik.parser.AbstractParser: int current>;

        if $i3 != 46 goto label1;

     label3:
        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    protected java.lang.Object[] parseIDValue(boolean) throws org.apache.batik.parser.ParseException, java.io.IOException
    {
        java.lang.Integer r40, $r50, $r54, $r56, $r57, $r58, $r59, $r61, $r62, $r64, $r65, $r67;
        org.apache.batik.parser.TimingParser r0;
        java.lang.Object[] $r6, $r12, $r17, $r19, $r27, $r28, $r33, $r37, $r41, $r44, $r47;
        java.util.Calendar $r15;
        java.lang.StringBuffer $r53;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i56, $i57, $i59, $i60, $i61, $i63;
        java.lang.Float $r51, $r55, $r60, $r63, $r66, $r68;
        java.lang.Character $r52;
        java.lang.String $r1, $r3, $r4, $r36;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11, $z12;
        float f0, f1, f2, f3, f4, f5;
        org.apache.batik.util.io.NormalizingReader $r2, $r5, $r8, $r10, $r11, $r14, $r16, $r21, $r23, $r24, $r25, $r26, $r32;
        char $c6, $c55, $c58;

        r0 := @this: org.apache.batik.parser.TimingParser;

        z11 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<org.apache.batik.parser.TimingParser: java.lang.String parseName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("accessKey");

        if $z0 == 0 goto label01;

        $z10 = r0.<org.apache.batik.parser.TimingParser: boolean useSVG11AccessKeys>;

        if $z10 != 0 goto label02;

     label01:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("accesskey");

        if $z1 == 0 goto label08;

     label02:
        if z11 != 0 goto label08;

        $i45 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i45 == 40 goto label03;

        $i56 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i56);

     label03:
        $r24 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i46 = virtualinvoke $r24.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i46;

        $i47 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        $i63 = (int) -1;

        if $i47 != $i63 goto label04;

        $r27 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportError(java.lang.String,java.lang.Object[])>("end.of.stream", $r27);

     label04:
        $i48 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        $c55 = (char) $i48;

        $r25 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i49 = virtualinvoke $r25.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i49;

        $i50 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i50 == 41 goto label05;

        $i54 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i54);

     label05:
        $r26 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i51 = virtualinvoke $r26.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i51;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void skipSpaces()>();

        f0 = 0.0F;

        $i52 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i52 == 43 goto label06;

        $i53 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i53 != 45 goto label07;

     label06:
        f0 = virtualinvoke r0.<org.apache.batik.parser.TimingParser: float parseOffset()>();

     label07:
        $r28 = newarray (java.lang.Object)[3];

        $r50 = new java.lang.Integer;

        specialinvoke $r50.<java.lang.Integer: void <init>(int)>(4);

        $r28[0] = $r50;

        $r51 = new java.lang.Float;

        specialinvoke $r51.<java.lang.Float: void <init>(float)>(f0);

        $r28[1] = $r51;

        $r52 = new java.lang.Character;

        specialinvoke $r52.<java.lang.Character: void <init>(char)>($c55);

        $r28[2] = $r52;

        return $r28;

     label08:
        $z2 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("accessKey");

        if $z2 == 0 goto label18;

        $z9 = r0.<org.apache.batik.parser.TimingParser: boolean useSVG12AccessKeys>;

        if $z9 == 0 goto label18;

        if z11 != 0 goto label18;

        $i31 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i31 == 40 goto label09;

        $i44 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i44);

     label09:
        $r21 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i32 = virtualinvoke $r21.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i32;

        $r53 = new java.lang.StringBuffer;

        specialinvoke $r53.<java.lang.StringBuffer: void <init>()>();

        goto label11;

     label10:
        $i57 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        $c58 = (char) $i57;

        virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c58);

        $r32 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i59 = virtualinvoke $r32.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i59;

     label11:
        $i60 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i60 < 65 goto label12;

        $i43 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i43 <= 90 goto label10;

     label12:
        $i33 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i33 < 97 goto label13;

        $i42 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i42 <= 122 goto label10;

     label13:
        $i34 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i34 < 48 goto label14;

        $i41 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i41 <= 57 goto label10;

     label14:
        $i35 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i35 == 43 goto label10;

        $i36 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i36 == 41 goto label15;

        $i40 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i40);

     label15:
        $r23 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i37 = virtualinvoke $r23.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i37;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void skipSpaces()>();

        f1 = 0.0F;

        $i38 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i38 == 43 goto label16;

        $i39 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i39 != 45 goto label17;

     label16:
        f1 = virtualinvoke r0.<org.apache.batik.parser.TimingParser: float parseOffset()>();

     label17:
        $r33 = newarray (java.lang.Object)[3];

        $r54 = new java.lang.Integer;

        specialinvoke $r54.<java.lang.Integer: void <init>(int)>(5);

        $r33[0] = $r54;

        $r55 = new java.lang.Float;

        specialinvoke $r55.<java.lang.Float: void <init>(float)>(f1);

        $r33[1] = $r55;

        $r36 = virtualinvoke $r53.<java.lang.StringBuffer: java.lang.String toString()>();

        $r33[2] = $r36;

        return $r33;

     label18:
        $z12 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("wallclock");

        if $z12 == 0 goto label21;

        if z11 != 0 goto label21;

        $i25 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i25 == 40 goto label19;

        $i30 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i30);

     label19:
        $r14 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i26 = virtualinvoke $r14.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i26;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void skipSpaces()>();

        $r15 = virtualinvoke r0.<org.apache.batik.parser.TimingParser: java.util.Calendar parseWallclockValue()>();

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void skipSpaces()>();

        $i27 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i27 == 41 goto label20;

        $r19 = newarray (java.lang.Object)[1];

        $r56 = new java.lang.Integer;

        $i29 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        specialinvoke $r56.<java.lang.Integer: void <init>(int)>($i29);

        $r19[0] = $r56;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportError(java.lang.String,java.lang.Object[])>("character.unexpected", $r19);

     label20:
        $r16 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i28 = virtualinvoke $r16.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i28;

        $r17 = newarray (java.lang.Object)[2];

        $r57 = new java.lang.Integer;

        specialinvoke $r57.<java.lang.Integer: void <init>(int)>(7);

        $r17[0] = $r57;

        $r17[1] = $r15;

        return $r17;

     label21:
        $z3 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("indefinite");

        if $z3 == 0 goto label22;

        if z11 != 0 goto label22;

        $r12 = newarray (java.lang.Object)[1];

        $r58 = new java.lang.Integer;

        specialinvoke $r58.<java.lang.Integer: void <init>(int)>(8);

        $r12[0] = $r58;

        return $r12;

     label22:
        $i0 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i0 != 46 goto label39;

        $r2 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i3 = virtualinvoke $r2.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i3;

        $i4 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i4 != 92 goto label23;

        z11 = 1;

        $r11 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i24 = virtualinvoke $r11.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i24;

     label23:
        $i5 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        $c6 = (char) $i5;

        $z4 = staticinvoke <org.apache.batik.xml.XMLUtilities: boolean isXMLNameFirstCharacter(char)>($c6);

        if $z4 != 0 goto label24;

        $i23 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i23);

     label24:
        $r3 = virtualinvoke r0.<org.apache.batik.parser.TimingParser: java.lang.String parseName()>();

        $z5 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("begin");

        if $z5 != 0 goto label25;

        $z8 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("end");

        if $z8 == 0 goto label28;

     label25:
        if z11 != 0 goto label28;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void skipSpaces()>();

        f2 = 0.0F;

        $i21 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i21 == 43 goto label26;

        $i22 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i22 != 45 goto label27;

     label26:
        f2 = virtualinvoke r0.<org.apache.batik.parser.TimingParser: float parseOffset()>();

     label27:
        $r37 = newarray (java.lang.Object)[4];

        $r59 = new java.lang.Integer;

        specialinvoke $r59.<java.lang.Integer: void <init>(int)>(1);

        $r37[0] = $r59;

        $r60 = new java.lang.Float;

        specialinvoke $r60.<java.lang.Float: void <init>(float)>(f2);

        $r37[1] = $r60;

        $r37[2] = $r1;

        $r37[3] = $r3;

        return $r37;

     label28:
        $z6 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("repeat");

        if $z6 == 0 goto label33;

        if z11 != 0 goto label33;

        r40 = null;

        $i14 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i14 != 40 goto label30;

        $r8 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i16 = virtualinvoke $r8.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i16;

        $r61 = new java.lang.Integer;

        $i17 = virtualinvoke r0.<org.apache.batik.parser.TimingParser: int parseDigits()>();

        specialinvoke $r61.<java.lang.Integer: void <init>(int)>($i17);

        r40 = $r61;

        $i18 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i18 == 41 goto label29;

        $i20 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i20);

     label29:
        $r10 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i19 = virtualinvoke $r10.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i19;

     label30:
        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void skipSpaces()>();

        f3 = 0.0F;

        $i61 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i61 == 43 goto label31;

        $i15 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i15 != 45 goto label32;

     label31:
        f3 = virtualinvoke r0.<org.apache.batik.parser.TimingParser: float parseOffset()>();

     label32:
        $r41 = newarray (java.lang.Object)[4];

        $r62 = new java.lang.Integer;

        specialinvoke $r62.<java.lang.Integer: void <init>(int)>(3);

        $r41[0] = $r62;

        $r63 = new java.lang.Float;

        specialinvoke $r63.<java.lang.Float: void <init>(float)>(f3);

        $r41[1] = $r63;

        $r41[2] = $r1;

        $r41[3] = r40;

        return $r41;

     label33:
        $z7 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("marker");

        if $z7 == 0 goto label36;

        if z11 != 0 goto label36;

        $i9 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i9 == 40 goto label34;

        $i13 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i13);

     label34:
        $r4 = virtualinvoke r0.<org.apache.batik.parser.TimingParser: java.lang.String parseName()>();

        $i10 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i10 == 41 goto label35;

        $i12 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i12);

     label35:
        $r5 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i11 = virtualinvoke $r5.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i11;

        $r6 = newarray (java.lang.Object)[3];

        $r64 = new java.lang.Integer;

        specialinvoke $r64.<java.lang.Integer: void <init>(int)>(6);

        $r6[0] = $r64;

        $r6[1] = $r1;

        $r6[2] = $r4;

        return $r6;

     label36:
        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void skipSpaces()>();

        f4 = 0.0F;

        $i7 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i7 == 43 goto label37;

        $i8 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i8 != 45 goto label38;

     label37:
        f4 = virtualinvoke r0.<org.apache.batik.parser.TimingParser: float parseOffset()>();

     label38:
        $r44 = newarray (java.lang.Object)[4];

        $r65 = new java.lang.Integer;

        specialinvoke $r65.<java.lang.Integer: void <init>(int)>(2);

        $r44[0] = $r65;

        $r66 = new java.lang.Float;

        specialinvoke $r66.<java.lang.Float: void <init>(float)>(f4);

        $r44[1] = $r66;

        $r44[2] = $r1;

        $r44[3] = $r3;

        return $r44;

     label39:
        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void skipSpaces()>();

        f5 = 0.0F;

        $i1 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i1 == 43 goto label40;

        $i2 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i2 != 45 goto label41;

     label40:
        f5 = virtualinvoke r0.<org.apache.batik.parser.TimingParser: float parseOffset()>();

     label41:
        $r47 = newarray (java.lang.Object)[4];

        $r67 = new java.lang.Integer;

        specialinvoke $r67.<java.lang.Integer: void <init>(int)>(2);

        $r47[0] = $r67;

        $r68 = new java.lang.Float;

        specialinvoke $r68.<java.lang.Float: void <init>(float)>(f5);

        $r47[1] = $r68;

        $r47[2] = null;

        $r47[3] = $r1;

        return $r47;
    }

    protected float parseClockValue() throws org.apache.batik.parser.ParseException, java.io.IOException
    {
        org.apache.batik.parser.TimingParser r0;
        org.apache.batik.util.io.NormalizingReader $r1, $r2, $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, f7;

        r0 := @this: org.apache.batik.parser.TimingParser;

        $i0 = virtualinvoke r0.<org.apache.batik.parser.TimingParser: int parseDigits()>();

        $i1 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i1 != 58 goto label4;

        $r2 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i4 = virtualinvoke $r2.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i4;

        $i5 = virtualinvoke r0.<org.apache.batik.parser.TimingParser: int parseDigits()>();

        $i6 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i6 != 58 goto label1;

        $r4 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i11 = virtualinvoke $r4.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i11;

        $i12 = virtualinvoke r0.<org.apache.batik.parser.TimingParser: int parseDigits()>();

        $i14 = $i0 * 3600;

        $i13 = $i5 * 60;

        $i15 = $i14 + $i13;

        $i16 = $i15 + $i12;

        f7 = (float) $i16;

        goto label2;

     label1:
        $i7 = $i0 * 60;

        $i8 = $i7 + $i5;

        f7 = (float) $i8;

     label2:
        $i9 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i9 != 46 goto label3;

        $r3 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i10 = virtualinvoke $r3.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i10;

        $f6 = virtualinvoke r0.<org.apache.batik.parser.TimingParser: float parseFraction()>();

        f7 = f7 + $f6;

     label3:
        goto label6;

     label4:
        $i2 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i2 != 46 goto label5;

        $r1 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i3 = virtualinvoke $r1.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i3;

        $f2 = virtualinvoke r0.<org.apache.batik.parser.TimingParser: float parseFraction()>();

        $f3 = (float) $i0;

        $f4 = $f2 + $f3;

        $f5 = virtualinvoke r0.<org.apache.batik.parser.TimingParser: float parseUnit()>();

        f7 = $f4 * $f5;

        goto label6;

     label5:
        $f0 = (float) $i0;

        $f1 = virtualinvoke r0.<org.apache.batik.parser.TimingParser: float parseUnit()>();

        f7 = $f0 * $f1;

     label6:
        return f7;
    }

    protected float parseOffset() throws org.apache.batik.parser.ParseException, java.io.IOException
    {
        org.apache.batik.parser.TimingParser r0;
        org.apache.batik.util.io.NormalizingReader $r1, $r2;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1, $f2;
        boolean z0;

        r0 := @this: org.apache.batik.parser.TimingParser;

        z0 = 0;

        $i0 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i0 != 45 goto label1;

        z0 = 1;

        $r2 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i3 = virtualinvoke $r2.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i3;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void skipSpaces()>();

        goto label2;

     label1:
        $i1 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i1 != 43 goto label2;

        $r1 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i2 = virtualinvoke $r1.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i2;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void skipSpaces()>();

     label2:
        if z0 == 0 goto label3;

        $f1 = virtualinvoke r0.<org.apache.batik.parser.TimingParser: float parseClockValue()>();

        $f2 = neg $f1;

        return $f2;

     label3:
        $f0 = virtualinvoke r0.<org.apache.batik.parser.TimingParser: float parseClockValue()>();

        return $f0;
    }

    protected int parseDigits() throws org.apache.batik.parser.ParseException, java.io.IOException
    {
        org.apache.batik.parser.TimingParser r0;
        org.apache.batik.util.io.NormalizingReader $r1;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: org.apache.batik.parser.TimingParser;

        i4 = 0;

        $i0 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i0 < 48 goto label1;

        $i3 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i3 <= 57 goto label2;

     label1:
        $i1 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i1);

     label2:
        $i5 = i4 * 10;

        $i6 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        $i7 = $i6 - 48;

        $i8 = $i5 + $i7;

        i4 = $i8;

        $r1 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i9 = virtualinvoke $r1.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i9;

        $i10 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i10 < 48 goto label3;

        $i2 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i2 <= 57 goto label2;

     label3:
        return $i8;
    }

    protected float parseFraction() throws org.apache.batik.parser.ParseException, java.io.IOException
    {
        org.apache.batik.parser.TimingParser r0;
        org.apache.batik.util.io.NormalizingReader $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        float f0, f1, $f2, $f3, $f4;

        r0 := @this: org.apache.batik.parser.TimingParser;

        f0 = 0.0F;

        $i0 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i0 < 48 goto label1;

        $i3 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i3 <= 57 goto label2;

     label1:
        $i1 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i1);

     label2:
        f1 = 0.1F;

     label3:
        $i4 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        $i5 = $i4 - 48;

        $f2 = (float) $i5;

        $f3 = f1 * $f2;

        $f4 = f0 + $f3;

        f0 = $f4;

        f1 = f1 * 0.1F;

        $r1 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i6 = virtualinvoke $r1.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i6;

        $i7 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i7 < 48 goto label4;

        $i2 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i2 <= 57 goto label3;

     label4:
        return $f4;
    }

    protected float parseUnit() throws org.apache.batik.parser.ParseException, java.io.IOException
    {
        org.apache.batik.parser.TimingParser r0;
        org.apache.batik.util.io.NormalizingReader $r1, $r2, $r3, $r4, $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;

        r0 := @this: org.apache.batik.parser.TimingParser;

        $i0 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i0 != 104 goto label1;

        $r6 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i13 = virtualinvoke $r6.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i13;

        return 3600.0F;

     label1:
        $i1 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i1 != 109 goto label5;

        $r2 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i4 = virtualinvoke $r2.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i4;

        $i5 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i5 != 105 goto label3;

        $r4 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i9 = virtualinvoke $r4.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i9;

        $i10 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i10 == 110 goto label2;

        $i12 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i12);

     label2:
        $r5 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i11 = virtualinvoke $r5.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i11;

        return 60.0F;

     label3:
        $i6 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i6 != 115 goto label4;

        $r3 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i8 = virtualinvoke $r3.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i8;

        return 0.001F;

     label4:
        $i7 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i7);

        goto label6;

     label5:
        $i2 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i2 != 115 goto label6;

        $r1 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i3 = virtualinvoke $r1.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i3;

     label6:
        return 1.0F;
    }

    protected java.util.Calendar parseWallclockValue() throws org.apache.batik.parser.ParseException, java.io.IOException
    {
        byte $b42, $b43;
        org.apache.batik.parser.TimingParser r0;
        java.util.Calendar r13;
        java.lang.StringBuffer $r14;
        java.lang.String r12;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8;
        float $f0, f1;
        java.util.SimpleTimeZone $r15;
        org.apache.batik.util.io.NormalizingReader $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, i31, i32, i33, i34, i35, i36, i37, i38, i39, $i40, $i41, $i45;

        r0 := @this: org.apache.batik.parser.TimingParser;

        i31 = 0;

        i32 = 0;

        i33 = 0;

        i34 = 0;

        i35 = 0;

        i36 = 0;

        i37 = 0;

        i38 = 0;

        f1 = 0.0F;

        z0 = 0;

        z6 = 0;

        z5 = 0;

        z4 = 0;

        z1 = 0;

        z8 = 0;

        z7 = 0;

        z2 = 0;

        z3 = 0;

        r12 = null;

        $i0 = virtualinvoke r0.<org.apache.batik.parser.TimingParser: int parseDigits()>();

        i39 = $i0;

        $i1 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i1 != 45 goto label03;

        z0 = 1;

        z6 = 1;

        z5 = 1;

        z4 = 1;

        i31 = $i0;

        $r9 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i23 = virtualinvoke $r9.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i23;

        i32 = virtualinvoke r0.<org.apache.batik.parser.TimingParser: int parseDigits()>();

        $i24 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i24 == 45 goto label01;

        $i30 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i30);

     label01:
        $r10 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i25 = virtualinvoke $r10.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i25;

        i33 = virtualinvoke r0.<org.apache.batik.parser.TimingParser: int parseDigits()>();

        $i26 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i26 == 84 goto label02;

        goto label12;

     label02:
        $r11 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i27 = virtualinvoke $r11.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i27;

        i39 = virtualinvoke r0.<org.apache.batik.parser.TimingParser: int parseDigits()>();

        $i28 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i28 == 58 goto label03;

        $i29 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i29);

     label03:
        $i40 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i40 != 58 goto label12;

        z1 = 1;

        z8 = 1;

        z7 = 1;

        i34 = i39;

        $r2 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i8 = virtualinvoke $r2.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i8;

        i35 = virtualinvoke r0.<org.apache.batik.parser.TimingParser: int parseDigits()>();

        $i9 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i9 != 58 goto label04;

        $r7 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i20 = virtualinvoke $r7.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i20;

        i36 = virtualinvoke r0.<org.apache.batik.parser.TimingParser: int parseDigits()>();

        $i21 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i21 != 46 goto label04;

        $r8 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i22 = virtualinvoke $r8.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i22;

        f1 = virtualinvoke r0.<org.apache.batik.parser.TimingParser: float parseFraction()>();

     label04:
        $i41 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i41 != 90 goto label05;

        z2 = 1;

        r12 = "UTC";

        $r6 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i19 = virtualinvoke $r6.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i19;

        goto label12;

     label05:
        $i10 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i10 == 43 goto label06;

        $i18 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i18 != 45 goto label12;

     label06:
        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        z2 = 1;

        $i11 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i11 != 45 goto label07;

        z3 = 1;

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(45);

        goto label08;

     label07:
        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(43);

     label08:
        $r4 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i12 = virtualinvoke $r4.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i12;

        $i13 = virtualinvoke r0.<org.apache.batik.parser.TimingParser: int parseDigits()>();

        i37 = $i13;

        if $i13 >= 10 goto label09;

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(48);

     label09:
        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i13);

        $i14 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i14 == 58 goto label10;

        $i17 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i17);

     label10:
        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        $r5 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i15 = virtualinvoke $r5.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i15;

        $i16 = virtualinvoke r0.<org.apache.batik.parser.TimingParser: int parseDigits()>();

        i38 = $i16;

        if $i16 >= 10 goto label11;

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(48);

     label11:
        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i16);

        r12 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

     label12:
        if z4 != 0 goto label13;

        if z8 != 0 goto label13;

        $i7 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i7);

     label13:
        if z2 == 0 goto label16;

        if z3 == 0 goto label14;

        $b42 = -1;

        goto label15;

     label14:
        $b42 = 1;

     label15:
        $i4 = i37 * 3600000;

        $i45 = (int) 60000;

        $i3 = i38 * $i45;

        $i5 = $i4 + $i3;

        $i6 = $b42 * $i5;

        $r15 = new java.util.SimpleTimeZone;

        specialinvoke $r15.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>($i6, r12);

        r13 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>($r15);

        goto label17;

     label16:
        r13 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

     label17:
        if z5 == 0 goto label18;

        if z7 == 0 goto label18;

        virtualinvoke r13.<java.util.Calendar: void set(int,int,int,int,int,int)>(i31, i32, i33, i34, i35, i36);

        goto label20;

     label18:
        if z6 == 0 goto label19;

        virtualinvoke r13.<java.util.Calendar: void set(int,int,int,int,int,int)>(i31, i32, i33, 0, 0, 0);

        goto label20;

     label19:
        virtualinvoke r13.<java.util.Calendar: void set(int,int)>(10, i34);

        virtualinvoke r13.<java.util.Calendar: void set(int,int)>(12, i35);

        virtualinvoke r13.<java.util.Calendar: void set(int,int)>(13, i36);

     label20:
        $b43 = f1 cmpl 0.0F;

        if $b43 != 0 goto label21;

        $f0 = f1 * 1000.0F;

        $i2 = (int) $f0;

        virtualinvoke r13.<java.util.Calendar: void set(int,int)>(14, $i2);

        goto label22;

     label21:
        virtualinvoke r13.<java.util.Calendar: void set(int,int)>(14, 0);

     label22:
        return r13;
    }

    public static void <clinit>()
    {
        <org.apache.batik.parser.TimingParser: int TIME_INDEFINITE> = 8;

        <org.apache.batik.parser.TimingParser: int TIME_WALLCLOCK> = 7;

        <org.apache.batik.parser.TimingParser: int TIME_MEDIA_MARKER> = 6;

        <org.apache.batik.parser.TimingParser: int TIME_ACCESSKEY_SVG12> = 5;

        <org.apache.batik.parser.TimingParser: int TIME_ACCESSKEY> = 4;

        <org.apache.batik.parser.TimingParser: int TIME_REPEAT> = 3;

        <org.apache.batik.parser.TimingParser: int TIME_EVENTBASE> = 2;

        <org.apache.batik.parser.TimingParser: int TIME_SYNCBASE> = 1;

        <org.apache.batik.parser.TimingParser: int TIME_OFFSET> = 0;

        return;
    }
}
