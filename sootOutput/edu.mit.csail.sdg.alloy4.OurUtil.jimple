public final class edu.mit.csail.sdg.alloy4.OurUtil extends java.lang.Object
{

    private void <init>()
    {
        edu.mit.csail.sdg.alloy4.OurUtil r0;

        r0 := @this: edu.mit.csail.sdg.alloy4.OurUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static transient javax.swing.JComponent make(javax.swing.JComponent, java.lang.Object[])
    {
        java.awt.Color $r4, $r5;
        java.lang.Object[] r0;
        javax.swing.border.Border $r7;
        int i0, i1;
        java.lang.String $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, z7;
        javax.swing.JComponent r1;
        java.awt.Font $r2, $r9;
        java.awt.Dimension $r6;
        java.lang.Object r3;

        r1 := @parameter0: javax.swing.JComponent;

        r0 := @parameter1: java.lang.Object[];

        z6 = 0;

        z7 = 0;

        if r0 == null goto label8;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label8;

        r3 = r0[i1];

        $z0 = r3 instanceof java.awt.Font;

        if $z0 == 0 goto label2;

        $r9 = (java.awt.Font) r3;

        virtualinvoke r1.<javax.swing.JComponent: void setFont(java.awt.Font)>($r9);

        z6 = 1;

     label2:
        $z1 = r3 instanceof java.lang.String;

        if $z1 == 0 goto label3;

        $r8 = (java.lang.String) r3;

        virtualinvoke r1.<javax.swing.JComponent: void setToolTipText(java.lang.String)>($r8);

     label3:
        $z2 = r3 instanceof javax.swing.border.Border;

        if $z2 == 0 goto label4;

        $r7 = (javax.swing.border.Border) r3;

        virtualinvoke r1.<javax.swing.JComponent: void setBorder(javax.swing.border.Border)>($r7);

     label4:
        $z3 = r3 instanceof java.awt.Dimension;

        if $z3 == 0 goto label5;

        $r6 = (java.awt.Dimension) r3;

        virtualinvoke r1.<javax.swing.JComponent: void setPreferredSize(java.awt.Dimension)>($r6);

     label5:
        $z4 = r3 instanceof java.awt.Color;

        if $z4 == 0 goto label6;

        if z7 != 0 goto label6;

        $r5 = (java.awt.Color) r3;

        virtualinvoke r1.<javax.swing.JComponent: void setForeground(java.awt.Color)>($r5);

        z7 = 1;

        goto label7;

     label6:
        $z5 = r3 instanceof java.awt.Color;

        if $z5 == 0 goto label7;

        $r4 = (java.awt.Color) r3;

        virtualinvoke r1.<javax.swing.JComponent: void setBackground(java.awt.Color)>($r4);

        virtualinvoke r1.<javax.swing.JComponent: void setOpaque(boolean)>(1);

     label7:
        i1 = i1 + 1;

        goto label1;

     label8:
        if z6 != 0 goto label9;

        $r2 = staticinvoke <edu.mit.csail.sdg.alloy4.OurUtil: java.awt.Font getVizFont()>();

        virtualinvoke r1.<javax.swing.JComponent: void setFont(java.awt.Font)>($r2);

     label9:
        return r1;
    }

    public static transient javax.swing.JLabel label(java.lang.String, java.lang.Object[])
    {
        javax.swing.JComponent $r3;
        java.lang.Object[] r2;
        javax.swing.JLabel $r0, $r4;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r0 = new javax.swing.JLabel;

        specialinvoke $r0.<javax.swing.JLabel: void <init>(java.lang.String)>(r1);

        $r3 = staticinvoke <edu.mit.csail.sdg.alloy4.OurUtil: javax.swing.JComponent make(javax.swing.JComponent,java.lang.Object[])>($r0, r2);

        $r4 = (javax.swing.JLabel) $r3;

        return $r4;
    }

    public static transient javax.swing.JTextField textfield(java.lang.String, int, java.lang.Object[])
    {
        javax.swing.JComponent $r3;
        java.lang.Object[] r2;
        javax.swing.JTextField $r0, $r4;
        int i0;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object[];

        $r0 = new javax.swing.JTextField;

        specialinvoke $r0.<javax.swing.JTextField: void <init>(java.lang.String,int)>(r1, i0);

        $r3 = staticinvoke <edu.mit.csail.sdg.alloy4.OurUtil: javax.swing.JComponent make(javax.swing.JComponent,java.lang.Object[])>($r0, r2);

        $r4 = (javax.swing.JTextField) $r3;

        return $r4;
    }

    public static transient javax.swing.JTextArea textarea(java.lang.String, int, int, boolean, boolean, java.lang.Object[])
    {
        java.awt.Color $r3, $r4;
        javax.swing.JComponent $r6, $r9;
        java.lang.Object[] $r2, r8;
        int i0, i1;
        javax.swing.border.EmptyBorder $r5;
        javax.swing.JTextArea $r0, r7, $r10;
        java.lang.String r1;
        boolean z0, z1;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r8 := @parameter5: java.lang.Object[];

        $r0 = new javax.swing.JTextArea;

        specialinvoke $r0.<javax.swing.JTextArea: void <init>(java.lang.String,int,int)>(r1, i0, i1);

        $r2 = newarray (java.lang.Object)[3];

        $r3 = <java.awt.Color: java.awt.Color BLACK>;

        $r2[0] = $r3;

        $r4 = <java.awt.Color: java.awt.Color WHITE>;

        $r2[1] = $r4;

        $r5 = new javax.swing.border.EmptyBorder;

        specialinvoke $r5.<javax.swing.border.EmptyBorder: void <init>(int,int,int,int)>(0, 0, 0, 0);

        $r2[2] = $r5;

        $r6 = staticinvoke <edu.mit.csail.sdg.alloy4.OurUtil: javax.swing.JComponent make(javax.swing.JComponent,java.lang.Object[])>($r0, $r2);

        r7 = (javax.swing.JTextArea) $r6;

        virtualinvoke r7.<javax.swing.JTextArea: void setEditable(boolean)>(z0);

        virtualinvoke r7.<javax.swing.JTextArea: void setLineWrap(boolean)>(z1);

        virtualinvoke r7.<javax.swing.JTextArea: void setWrapStyleWord(boolean)>(z1);

        $r9 = staticinvoke <edu.mit.csail.sdg.alloy4.OurUtil: javax.swing.JComponent make(javax.swing.JComponent,java.lang.Object[])>(r7, r8);

        $r10 = (javax.swing.JTextArea) $r9;

        return $r10;
    }

    public static transient javax.swing.JScrollPane scrollpane(java.awt.Component, java.lang.Object[])
    {
        javax.swing.JComponent $r3, $r8;
        java.lang.Object[] $r1, r7;
        java.awt.Component r5;
        javax.swing.JScrollPane $r0, r4, $r9;
        java.awt.Dimension $r6;
        javax.swing.border.EmptyBorder $r2;

        r5 := @parameter0: java.awt.Component;

        r7 := @parameter1: java.lang.Object[];

        $r0 = new javax.swing.JScrollPane;

        specialinvoke $r0.<javax.swing.JScrollPane: void <init>()>();

        $r1 = newarray (java.lang.Object)[1];

        $r2 = new javax.swing.border.EmptyBorder;

        specialinvoke $r2.<javax.swing.border.EmptyBorder: void <init>(int,int,int,int)>(0, 0, 0, 0);

        $r1[0] = $r2;

        $r3 = staticinvoke <edu.mit.csail.sdg.alloy4.OurUtil: javax.swing.JComponent make(javax.swing.JComponent,java.lang.Object[])>($r0, $r1);

        r4 = (javax.swing.JScrollPane) $r3;

        if r5 == null goto label1;

        virtualinvoke r4.<javax.swing.JScrollPane: void setViewportView(java.awt.Component)>(r5);

     label1:
        $r6 = new java.awt.Dimension;

        specialinvoke $r6.<java.awt.Dimension: void <init>(int,int)>(50, 50);

        virtualinvoke r4.<javax.swing.JScrollPane: void setMinimumSize(java.awt.Dimension)>($r6);

        $r8 = staticinvoke <edu.mit.csail.sdg.alloy4.OurUtil: javax.swing.JComponent make(javax.swing.JComponent,java.lang.Object[])>(r4, r7);

        $r9 = (javax.swing.JScrollPane) $r8;

        return $r9;
    }

    public static java.awt.Font getVizFont()
    {
        java.awt.Font $r0;
        boolean $z0;

        $z0 = staticinvoke <edu.mit.csail.sdg.alloy4.Util: boolean onMac()>();

        if $z0 == 0 goto label1;

        $r0 = new java.awt.Font;

        specialinvoke $r0.<java.awt.Font: void <init>(java.lang.String,int,int)>("Lucida Grande", 0, 11);

        goto label2;

     label1:
        $r0 = new java.awt.Font;

        specialinvoke $r0.<java.awt.Font: void <init>(java.lang.String,int,int)>("Dialog", 0, 12);

     label2:
        return $r0;
    }

    public static int getScreenWidth()
    {
        int $i0;
        java.awt.Dimension $r1;
        java.awt.Toolkit $r0;

        $r0 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $r1 = virtualinvoke $r0.<java.awt.Toolkit: java.awt.Dimension getScreenSize()>();

        $i0 = $r1.<java.awt.Dimension: int width>;

        return $i0;
    }

    public static int getScreenHeight()
    {
        int $i0;
        java.awt.Dimension $r1;
        java.awt.Toolkit $r0;

        $r0 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $r1 = virtualinvoke $r0.<java.awt.Toolkit: java.awt.Dimension getScreenSize()>();

        $i0 = $r1.<java.awt.Dimension: int height>;

        return $i0;
    }

    public static javax.swing.JButton button(java.lang.String, java.lang.String, java.lang.String, java.awt.event.ActionListener)
    {
        java.awt.Color $r6;
        java.awt.event.ActionListener r2;
        javax.swing.JButton $r7;
        java.awt.Font $r3, $r4;
        javax.swing.Icon $r8;
        int $i0, $i1;
        java.lang.String r0, r1, r5;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.awt.event.ActionListener;

        $r7 = new javax.swing.JButton;

        if r1 == null goto label1;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 <= 0 goto label1;

        $r8 = staticinvoke <edu.mit.csail.sdg.alloy4.OurUtil: javax.swing.Icon loadIcon(java.lang.String)>(r1);

        goto label2;

     label1:
        $r8 = null;

     label2:
        specialinvoke $r7.<javax.swing.JButton: void <init>(java.lang.String,javax.swing.Icon)>(r0, $r8);

        if r2 == null goto label3;

        virtualinvoke $r7.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>(r2);

     label3:
        virtualinvoke $r7.<javax.swing.JButton: void setVerticalTextPosition(int)>(3);

        virtualinvoke $r7.<javax.swing.JButton: void setHorizontalTextPosition(int)>(0);

        virtualinvoke $r7.<javax.swing.JButton: void setBorderPainted(boolean)>(0);

        virtualinvoke $r7.<javax.swing.JButton: void setFocusable(boolean)>(0);

        $z0 = staticinvoke <edu.mit.csail.sdg.alloy4.Util: boolean onMac()>();

        if $z0 != 0 goto label4;

        $r6 = new java.awt.Color;

        specialinvoke $r6.<java.awt.Color: void <init>(float,float,float)>(0.9F, 0.9F, 0.9F);

        virtualinvoke $r7.<javax.swing.JButton: void setBackground(java.awt.Color)>($r6);

     label4:
        $r3 = virtualinvoke $r7.<javax.swing.JButton: java.awt.Font getFont()>();

        $r4 = virtualinvoke $r3.<java.awt.Font: java.awt.Font deriveFont(float)>(10.0F);

        virtualinvoke $r7.<javax.swing.JButton: void setFont(java.awt.Font)>($r4);

        if r5 == null goto label5;

        $i0 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i0 <= 0 goto label5;

        virtualinvoke $r7.<javax.swing.JButton: void setToolTipText(java.lang.String)>(r5);

     label5:
        return $r7;
    }

    public static javax.swing.Icon loadIcon(java.lang.String)
    {
        java.awt.image.BufferedImage $r5;
        java.awt.Image $r8;
        java.net.URL $r3;
        javax.swing.ImageIcon $r4, $r6;
        java.lang.Class $r0;
        java.lang.ClassLoader $r1;
        java.lang.String r2;
        java.awt.Toolkit $r7;

        r2 := @parameter0: java.lang.String;

        $r0 = class "Ledu/mit/csail/sdg/alloy4/OurUtil;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r3 = virtualinvoke $r1.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>(r2);

        if $r3 == null goto label1;

        $r6 = new javax.swing.ImageIcon;

        $r7 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $r8 = virtualinvoke $r7.<java.awt.Toolkit: java.awt.Image createImage(java.net.URL)>($r3);

        specialinvoke $r6.<javax.swing.ImageIcon: void <init>(java.awt.Image)>($r8);

        return $r6;

     label1:
        $r4 = new javax.swing.ImageIcon;

        $r5 = new java.awt.image.BufferedImage;

        specialinvoke $r5.<java.awt.image.BufferedImage: void <init>(int,int,int)>(1, 1, 1);

        specialinvoke $r4.<javax.swing.ImageIcon: void <init>(java.awt.Image)>($r5);

        return $r4;
    }

    private static javax.swing.JPanel makeBox(boolean, float, float, java.lang.Object[])
    {
        java.awt.Color $r8, r12;
        java.lang.Object[] r2, $r7;
        java.lang.Integer $r6;
        byte $b2;
        int $i0, $i1, i3, $i4, $i5;
        java.lang.String $r9;
        javax.swing.BoxLayout $r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        javax.swing.JComponent $r4, $r5;
        java.awt.Component r13, $r15;
        java.awt.Dimension $r10, $r11, $r14;
        float f0, f1;
        java.lang.Object r3;
        javax.swing.JPanel $r0;

        z0 := @parameter0: boolean;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        r2 := @parameter3: java.lang.Object[];

        $r0 = new javax.swing.JPanel;

        specialinvoke $r0.<javax.swing.JPanel: void <init>()>();

        $r1 = new javax.swing.BoxLayout;

        if z0 == 0 goto label01;

        $b2 = 0;

        goto label02;

     label01:
        $b2 = 1;

     label02:
        specialinvoke $r1.<javax.swing.BoxLayout: void <init>(java.awt.Container,int)>($r0, $b2);

        virtualinvoke $r0.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r1);

        virtualinvoke $r0.<javax.swing.JPanel: void setAlignmentX(float)>(0.0F);

        virtualinvoke $r0.<javax.swing.JPanel: void setAlignmentY(float)>(0.0F);

        r12 = null;

        $i1 = lengthof r2;

        i3 = 0;

     label03:
        if i3 >= $i1 goto label20;

        r3 = r2[i3];

        r13 = null;

        $z1 = r3 instanceof java.awt.Color;

        if $z1 == 0 goto label04;

        r12 = (java.awt.Color) r3;

        virtualinvoke $r0.<javax.swing.JPanel: void setBackground(java.awt.Color)>(r12);

        goto label19;

     label04:
        $z2 = r3 instanceof java.awt.Dimension;

        if $z2 == 0 goto label05;

        $r10 = (java.awt.Dimension) r3;

        virtualinvoke $r0.<javax.swing.JPanel: void setPreferredSize(java.awt.Dimension)>($r10);

        $r11 = (java.awt.Dimension) r3;

        virtualinvoke $r0.<javax.swing.JPanel: void setMaximumSize(java.awt.Dimension)>($r11);

        goto label19;

     label05:
        $z3 = r3 instanceof java.awt.Component;

        if $z3 == 0 goto label06;

        r13 = (java.awt.Component) r3;

     label06:
        $z4 = r3 instanceof java.lang.String;

        if $z4 == 0 goto label07;

        $r9 = (java.lang.String) r3;

        $r7 = newarray (java.lang.Object)[1];

        $r8 = <java.awt.Color: java.awt.Color BLACK>;

        $r7[0] = $r8;

        r13 = staticinvoke <edu.mit.csail.sdg.alloy4.OurUtil: javax.swing.JLabel label(java.lang.String,java.lang.Object[])>($r9, $r7);

     label07:
        $z5 = r3 instanceof java.lang.Integer;

        if $z5 == 0 goto label12;

        $r6 = (java.lang.Integer) r3;

        $i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        $r14 = new java.awt.Dimension;

        if z0 == 0 goto label08;

        $i4 = $i0;

        goto label09;

     label08:
        $i4 = 1;

     label09:
        if z0 == 0 goto label10;

        $i5 = 1;

        goto label11;

     label10:
        $i5 = $i0;

     label11:
        specialinvoke $r14.<java.awt.Dimension: void <init>(int,int)>($i4, $i5);

        r13 = staticinvoke <javax.swing.Box: java.awt.Component createRigidArea(java.awt.Dimension)>($r14);

     label12:
        if r3 != null goto label15;

        if z0 == 0 goto label13;

        $r15 = staticinvoke <javax.swing.Box: java.awt.Component createHorizontalGlue()>();

        goto label14;

     label13:
        $r15 = staticinvoke <javax.swing.Box: java.awt.Component createVerticalGlue()>();

     label14:
        r13 = $r15;

     label15:
        if r13 != null goto label16;

        goto label19;

     label16:
        if r12 == null goto label17;

        virtualinvoke r13.<java.awt.Component: void setBackground(java.awt.Color)>(r12);

     label17:
        $z6 = r13 instanceof javax.swing.JComponent;

        if $z6 == 0 goto label18;

        $r4 = (javax.swing.JComponent) r13;

        virtualinvoke $r4.<javax.swing.JComponent: void setAlignmentX(float)>(f0);

        $r5 = (javax.swing.JComponent) r13;

        virtualinvoke $r5.<javax.swing.JComponent: void setAlignmentY(float)>(f1);

     label18:
        virtualinvoke $r0.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>(r13);

     label19:
        i3 = i3 + 1;

        goto label03;

     label20:
        return $r0;
    }

    public static transient javax.swing.JPanel makeH(java.lang.Object[])
    {
        java.lang.Object[] r0;
        javax.swing.JPanel $r1;

        r0 := @parameter0: java.lang.Object[];

        $r1 = staticinvoke <edu.mit.csail.sdg.alloy4.OurUtil: javax.swing.JPanel makeBox(boolean,float,float,java.lang.Object[])>(1, 0.5F, 0.5F, r0);

        return $r1;
    }

    public static transient javax.swing.JPanel makeHT(java.lang.Object[])
    {
        java.lang.Object[] r0;
        javax.swing.JPanel $r1;

        r0 := @parameter0: java.lang.Object[];

        $r1 = staticinvoke <edu.mit.csail.sdg.alloy4.OurUtil: javax.swing.JPanel makeBox(boolean,float,float,java.lang.Object[])>(1, 0.5F, 0.0F, r0);

        return $r1;
    }

    public static transient javax.swing.JPanel makeHB(java.lang.Object[])
    {
        java.lang.Object[] r0;
        javax.swing.JPanel $r1;

        r0 := @parameter0: java.lang.Object[];

        $r1 = staticinvoke <edu.mit.csail.sdg.alloy4.OurUtil: javax.swing.JPanel makeBox(boolean,float,float,java.lang.Object[])>(1, 0.5F, 1.0F, r0);

        return $r1;
    }

    public static transient javax.swing.JPanel makeVL(java.lang.Object[])
    {
        java.lang.Object[] r0;
        javax.swing.JPanel $r1;

        r0 := @parameter0: java.lang.Object[];

        $r1 = staticinvoke <edu.mit.csail.sdg.alloy4.OurUtil: javax.swing.JPanel makeBox(boolean,float,float,java.lang.Object[])>(0, 0.0F, 0.5F, r0);

        return $r1;
    }

    public static transient javax.swing.JPanel makeVR(java.lang.Object[])
    {
        java.lang.Object[] r0;
        javax.swing.JPanel $r1;

        r0 := @parameter0: java.lang.Object[];

        $r1 = staticinvoke <edu.mit.csail.sdg.alloy4.OurUtil: javax.swing.JPanel makeBox(boolean,float,float,java.lang.Object[])>(0, 1.0F, 0.5F, r0);

        return $r1;
    }

    public static javax.swing.JSplitPane splitpane(int, java.awt.Component, java.awt.Component, int)
    {
        javax.swing.JSplitPane $r0, r6;
        java.lang.Object[] $r3;
        javax.swing.plaf.basic.BasicSplitPaneUI $r9, $r10;
        edu.mit.csail.sdg.alloy4.OurBorder $r12;
        int i0, i1;
        javax.swing.plaf.SplitPaneUI $r7, $r8;
        boolean $z0, $z1, $z3;
        javax.swing.JComponent $r5;
        java.awt.Component r1, r2;
        javax.swing.border.EmptyBorder $r4;
        javax.swing.plaf.basic.BasicSplitPaneDivider $r11;

        i0 := @parameter0: int;

        r1 := @parameter1: java.awt.Component;

        r2 := @parameter2: java.awt.Component;

        i1 := @parameter3: int;

        $r0 = new javax.swing.JSplitPane;

        specialinvoke $r0.<javax.swing.JSplitPane: void <init>(int,java.awt.Component,java.awt.Component)>(i0, r1, r2);

        $r3 = newarray (java.lang.Object)[1];

        $r4 = new javax.swing.border.EmptyBorder;

        specialinvoke $r4.<javax.swing.border.EmptyBorder: void <init>(int,int,int,int)>(0, 0, 0, 0);

        $r3[0] = $r4;

        $r5 = staticinvoke <edu.mit.csail.sdg.alloy4.OurUtil: javax.swing.JComponent make(javax.swing.JComponent,java.lang.Object[])>($r0, $r3);

        r6 = (javax.swing.JSplitPane) $r5;

        virtualinvoke r6.<javax.swing.JSplitPane: void setContinuousLayout(boolean)>(1);

        virtualinvoke r6.<javax.swing.JSplitPane: void setDividerLocation(int)>(i1);

        virtualinvoke r6.<javax.swing.JSplitPane: void setOneTouchExpandable(boolean)>(0);

        virtualinvoke r6.<javax.swing.JSplitPane: void setResizeWeight(double)>(0.5);

        $z0 = staticinvoke <edu.mit.csail.sdg.alloy4.Util: boolean onMac()>();

        if $z0 == 0 goto label3;

        $r7 = virtualinvoke r6.<javax.swing.JSplitPane: javax.swing.plaf.SplitPaneUI getUI()>();

        $z1 = $r7 instanceof javax.swing.plaf.basic.BasicSplitPaneUI;

        if $z1 == 0 goto label3;

        if i0 == 1 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        $r8 = virtualinvoke r6.<javax.swing.JSplitPane: javax.swing.plaf.SplitPaneUI getUI()>();

        $r9 = (javax.swing.plaf.basic.BasicSplitPaneUI) $r8;

        $r10 = (javax.swing.plaf.basic.BasicSplitPaneUI) $r9;

        $r11 = virtualinvoke $r10.<javax.swing.plaf.basic.BasicSplitPaneUI: javax.swing.plaf.basic.BasicSplitPaneDivider getDivider()>();

        $r12 = new edu.mit.csail.sdg.alloy4.OurBorder;

        specialinvoke $r12.<edu.mit.csail.sdg.alloy4.OurBorder: void <init>(boolean,boolean,boolean,boolean)>($z3, $z3, $z3, $z3);

        virtualinvoke $r11.<javax.swing.plaf.basic.BasicSplitPaneDivider: void setBorder(javax.swing.border.Border)>($r12);

     label3:
        return r6;
    }

    public static void enableAll(javax.swing.JMenu)
    {
        javax.swing.JMenu r0, $r2;
        java.awt.Component $r1;
        javax.swing.JMenuItem $r3;
        int $i0, i1;
        boolean $z0, $z1;

        r0 := @parameter0: javax.swing.JMenu;

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<javax.swing.JMenu: int getMenuComponentCount()>();

        if i1 >= $i0 goto label4;

        $r1 = virtualinvoke r0.<javax.swing.JMenu: java.awt.Component getMenuComponent(int)>(i1);

        $z0 = $r1 instanceof javax.swing.JMenuItem;

        if $z0 == 0 goto label2;

        $r3 = (javax.swing.JMenuItem) $r1;

        virtualinvoke $r3.<javax.swing.JMenuItem: void setEnabled(boolean)>(1);

        goto label3;

     label2:
        $z1 = $r1 instanceof javax.swing.JMenu;

        if $z1 == 0 goto label3;

        $r2 = (javax.swing.JMenu) $r1;

        staticinvoke <edu.mit.csail.sdg.alloy4.OurUtil: void enableAll(javax.swing.JMenu)>($r2);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    public static javax.swing.JMenu menu(javax.swing.JMenuBar, java.lang.String, java.lang.Runnable)
    {
        edu.mit.csail.sdg.alloy4.OurUtil$1 $r7;
        java.lang.Runnable r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i8;
        java.lang.String r1, $r2;
        boolean $z0;
        javax.swing.JMenuBar r4;
        javax.swing.JMenu $r6;
        char $c7;

        r4 := @parameter0: javax.swing.JMenuBar;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Runnable;

        $r6 = new javax.swing.JMenu;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("&", "");

        specialinvoke $r6.<javax.swing.JMenu: void <init>(java.lang.String,boolean)>($r2, 0);

        $z0 = staticinvoke <edu.mit.csail.sdg.alloy4.Util: boolean onMac()>();

        if $z0 != 0 goto label3;

        $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(38);

        i6 = $i0;

        if $i0 < 0 goto label1;

        $i3 = $i0 + 1;

        $i4 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i3 >= $i4 goto label1;

        $i5 = $i0 + 1;

        $c7 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i5);

        $i8 = (int) $c7;

        i6 = $i8;

     label1:
        if i6 < 97 goto label2;

        if i6 > 122 goto label2;

        $i1 = i6 - 97;

        $i2 = $i1 + 65;

        virtualinvoke $r6.<javax.swing.JMenu: void setMnemonic(int)>($i2);

        goto label3;

     label2:
        if i6 < 65 goto label3;

        if i6 > 90 goto label3;

        virtualinvoke $r6.<javax.swing.JMenu: void setMnemonic(int)>(i6);

     label3:
        $r7 = new edu.mit.csail.sdg.alloy4.OurUtil$1;

        specialinvoke $r7.<edu.mit.csail.sdg.alloy4.OurUtil$1: void <init>(java.lang.Runnable,javax.swing.JMenu)>(r3, $r6);

        virtualinvoke $r6.<javax.swing.JMenu: void addMenuListener(javax.swing.event.MenuListener)>($r7);

        if r4 == null goto label4;

        virtualinvoke r4.<javax.swing.JMenuBar: javax.swing.JMenu add(javax.swing.JMenu)>($r6);

     label4:
        return $r6;
    }

    public static transient javax.swing.JMenuItem menuItem(javax.swing.JMenu, java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r3;
        java.awt.event.ActionListener $r10;
        java.lang.Integer $r6;
        java.lang.Character $r11;
        javax.swing.JMenuItem $r12;
        int i0, i1, i2, $i3, $i5;
        java.lang.Boolean $r8;
        java.lang.String r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, $z7;
        javax.swing.KeyStroke $r7;
        javax.swing.JMenu r4;
        javax.swing.Icon $r9;
        char $c4;
        java.lang.Object r5;
        java.awt.Toolkit $r2;

        r4 := @parameter0: javax.swing.JMenu;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $r12 = new javax.swing.JMenuItem;

        specialinvoke $r12.<javax.swing.JMenuItem: void <init>(java.lang.String,javax.swing.Icon)>(r1, null);

        $r2 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        i1 = virtualinvoke $r2.<java.awt.Toolkit: int getMenuShortcutKeyMask()>();

        z6 = 0;

        i0 = lengthof r3;

        i2 = 0;

     label01:
        if i2 >= i0 goto label13;

        r5 = r3[i2];

        $z0 = r5 instanceof java.lang.Character;

        if $z0 != 0 goto label02;

        $z5 = r5 instanceof java.lang.Integer;

        if $z5 == 0 goto label09;

     label02:
        $z1 = r5 instanceof java.lang.Character;

        if $z1 == 0 goto label03;

        $r11 = (java.lang.Character) r5;

        $c4 = virtualinvoke $r11.<java.lang.Character: char charValue()>();

        $i5 = (int) $c4;

        $i3 = $i5;

        goto label04;

     label03:
        $r6 = (java.lang.Integer) r5;

        $i3 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

     label04:
        if $i3 >= 0 goto label05;

        goto label12;

     label05:
        if $i3 != 18 goto label06;

        z6 = 1;

        i1 = i1 | 8;

        goto label12;

     label06:
        if $i3 != 16 goto label07;

        z6 = 1;

        i1 = i1 | 1;

        goto label12;

     label07:
        if z6 != 0 goto label08;

        virtualinvoke $r12.<javax.swing.JMenuItem: void setMnemonic(int)>($i3);

        z6 = 1;

        goto label09;

     label08:
        $r7 = staticinvoke <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>($i3, i1);

        virtualinvoke $r12.<javax.swing.JMenuItem: void setAccelerator(javax.swing.KeyStroke)>($r7);

     label09:
        $z7 = r5 instanceof java.awt.event.ActionListener;

        if $z7 == 0 goto label10;

        $r10 = (java.awt.event.ActionListener) r5;

        virtualinvoke $r12.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>($r10);

     label10:
        $z2 = r5 instanceof javax.swing.Icon;

        if $z2 == 0 goto label11;

        $r9 = (javax.swing.Icon) r5;

        virtualinvoke $r12.<javax.swing.JMenuItem: void setIcon(javax.swing.Icon)>($r9);

     label11:
        $z3 = r5 instanceof java.lang.Boolean;

        if $z3 == 0 goto label12;

        $r8 = (java.lang.Boolean) r5;

        $z4 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r12.<javax.swing.JMenuItem: void setEnabled(boolean)>($z4);

     label12:
        i2 = i2 + 1;

        goto label01;

     label13:
        if r4 == null goto label14;

        virtualinvoke r4.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r12);

     label14:
        return $r12;
    }

    public static void minimize(javax.swing.JFrame)
    {
        javax.swing.JFrame r0;

        r0 := @parameter0: javax.swing.JFrame;

        virtualinvoke r0.<javax.swing.JFrame: void setExtendedState(int)>(1);

        return;
    }

    public static void zoom(javax.swing.JFrame)
    {
        byte $b2;
        int $i0, $i1;
        javax.swing.JFrame r0;

        r0 := @parameter0: javax.swing.JFrame;

        $i0 = virtualinvoke r0.<javax.swing.JFrame: int getExtendedState()>();

        $i1 = $i0 & 6;

        if $i1 == 6 goto label1;

        $b2 = 6;

        goto label2;

     label1:
        $b2 = 0;

     label2:
        virtualinvoke r0.<javax.swing.JFrame: void setExtendedState(int)>($b2);

        return;
    }

    public static void show(javax.swing.JFrame)
    {
        int $i0, $i1, $i3;
        javax.swing.JFrame r0;

        r0 := @parameter0: javax.swing.JFrame;

        virtualinvoke r0.<javax.swing.JFrame: void setVisible(boolean)>(1);

        $i0 = virtualinvoke r0.<javax.swing.JFrame: int getExtendedState()>();

        $i3 = (int) -2;

        $i1 = $i0 & $i3;

        virtualinvoke r0.<javax.swing.JFrame: void setExtendedState(int)>($i1);

        virtualinvoke r0.<javax.swing.JFrame: void requestFocus()>();

        virtualinvoke r0.<javax.swing.JFrame: void toFront()>();

        return;
    }
}
