public abstract class com.hp.hpl.jena.sparql.expr.ExprFunction extends com.hp.hpl.jena.sparql.expr.ExprNode
{
    protected com.hp.hpl.jena.sparql.expr.FunctionLabel funcSymbol;
    protected java.lang.String opSign;
    private java.util.List argList;

    protected void <init>(java.lang.String)
    {
        java.lang.String r2;
        com.hp.hpl.jena.sparql.expr.ExprFunction r0;
        com.hp.hpl.jena.sparql.expr.FunctionLabel $r1;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprFunction;

        r2 := @parameter0: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprNode: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.expr.ExprFunction: java.util.List argList> = null;

        $r1 = new com.hp.hpl.jena.sparql.expr.FunctionLabel;

        specialinvoke $r1.<com.hp.hpl.jena.sparql.expr.FunctionLabel: void <init>(java.lang.String)>(r2);

        r0.<com.hp.hpl.jena.sparql.expr.ExprFunction: com.hp.hpl.jena.sparql.expr.FunctionLabel funcSymbol> = $r1;

        r0.<com.hp.hpl.jena.sparql.expr.ExprFunction: java.lang.String opSign> = null;

        return;
    }

    protected void <init>(java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2;
        com.hp.hpl.jena.sparql.expr.ExprFunction r0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprFunction;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprFunction: void <init>(java.lang.String)>(r1);

        r0.<com.hp.hpl.jena.sparql.expr.ExprFunction: java.lang.String opSign> = r2;

        return;
    }

    public abstract com.hp.hpl.jena.sparql.expr.Expr getArg(int);

    public abstract int numArgs();

    public java.util.List getArgs()
    {
        com.hp.hpl.jena.sparql.expr.ExprFunction r0;
        java.util.ArrayList $r2;
        java.util.List $r1, $r3, $r4, $r6;
        com.hp.hpl.jena.sparql.expr.Expr $r5;
        int $i0, i1;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprFunction;

        $r1 = r0.<com.hp.hpl.jena.sparql.expr.ExprFunction: java.util.List argList>;

        if $r1 == null goto label1;

        $r6 = r0.<com.hp.hpl.jena.sparql.expr.ExprFunction: java.util.List argList>;

        return $r6;

     label1:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.expr.ExprFunction: java.util.List argList> = $r2;

        i1 = 1;

     label2:
        $i0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprFunction: int numArgs()>();

        if i1 > $i0 goto label3;

        $r4 = r0.<com.hp.hpl.jena.sparql.expr.ExprFunction: java.util.List argList>;

        $r5 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprFunction: com.hp.hpl.jena.sparql.expr.Expr getArg(int)>(i1);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);

        i1 = i1 + 1;

        goto label2;

     label3:
        $r3 = r0.<com.hp.hpl.jena.sparql.expr.ExprFunction: java.util.List argList>;

        return $r3;
    }

    public boolean isFunction()
    {
        com.hp.hpl.jena.sparql.expr.ExprFunction r0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprFunction;

        return 1;
    }

    public com.hp.hpl.jena.sparql.expr.ExprFunction getFunction()
    {
        com.hp.hpl.jena.sparql.expr.ExprFunction r0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprFunction;

        return r0;
    }

    public int hashCode()
    {
        com.hp.hpl.jena.sparql.expr.FunctionLabel $r1;
        int $i0, $i1, $i2;
        com.hp.hpl.jena.sparql.expr.ExprFunction r0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprFunction;

        $r1 = r0.<com.hp.hpl.jena.sparql.expr.ExprFunction: com.hp.hpl.jena.sparql.expr.FunctionLabel funcSymbol>;

        $i0 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.expr.FunctionLabel: int hashCode()>();

        $i1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprFunction: int numArgs()>();

        $i2 = $i0 ^ $i1;

        return $i2;
    }

    public boolean equals(java.lang.Object)
    {
        com.hp.hpl.jena.sparql.expr.ExprFunction r0, r4;
        com.hp.hpl.jena.sparql.expr.Expr $r7, $r8;
        int $i0, $i1, $i2, i3;
        boolean $z0, $z1, $z2;
        com.hp.hpl.jena.sparql.expr.FunctionLabel $r5, $r6;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprFunction;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r4 = (com.hp.hpl.jena.sparql.expr.ExprFunction) r1;

        $r6 = r0.<com.hp.hpl.jena.sparql.expr.ExprFunction: com.hp.hpl.jena.sparql.expr.FunctionLabel funcSymbol>;

        $r5 = r4.<com.hp.hpl.jena.sparql.expr.ExprFunction: com.hp.hpl.jena.sparql.expr.FunctionLabel funcSymbol>;

        $z1 = virtualinvoke $r6.<com.hp.hpl.jena.sparql.expr.FunctionLabel: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $i0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprFunction: int numArgs()>();

        $i1 = virtualinvoke r4.<com.hp.hpl.jena.sparql.expr.ExprFunction: int numArgs()>();

        if $i0 == $i1 goto label4;

        return 0;

     label4:
        i3 = 1;

     label5:
        $i2 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprFunction: int numArgs()>();

        if i3 > $i2 goto label7;

        $r7 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.ExprFunction: com.hp.hpl.jena.sparql.expr.Expr getArg(int)>(i3);

        $r8 = virtualinvoke r4.<com.hp.hpl.jena.sparql.expr.ExprFunction: com.hp.hpl.jena.sparql.expr.Expr getArg(int)>(i3);

        $z2 = staticinvoke <org.apache.jena.atlas.lib.Lib: boolean equal(java.lang.Object,java.lang.Object)>($r7, $r8);

        if $z2 != 0 goto label6;

        return 0;

     label6:
        i3 = i3 + 1;

        goto label5;

     label7:
        return 1;
    }

    public java.lang.String getFunctionPrintName(com.hp.hpl.jena.sparql.serializer.SerializationContext)
    {
        com.hp.hpl.jena.sparql.expr.FunctionLabel $r1;
        com.hp.hpl.jena.sparql.serializer.SerializationContext r3;
        java.lang.String $r2;
        com.hp.hpl.jena.sparql.expr.ExprFunction r0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprFunction;

        r3 := @parameter0: com.hp.hpl.jena.sparql.serializer.SerializationContext;

        $r1 = r0.<com.hp.hpl.jena.sparql.expr.ExprFunction: com.hp.hpl.jena.sparql.expr.FunctionLabel funcSymbol>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.expr.FunctionLabel: java.lang.String getSymbol()>();

        return $r2;
    }

    public java.lang.String getFunctionName(com.hp.hpl.jena.sparql.serializer.SerializationContext)
    {
        com.hp.hpl.jena.sparql.expr.FunctionLabel $r1;
        com.hp.hpl.jena.sparql.serializer.SerializationContext r3;
        java.lang.String $r2;
        com.hp.hpl.jena.sparql.expr.ExprFunction r0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprFunction;

        r3 := @parameter0: com.hp.hpl.jena.sparql.serializer.SerializationContext;

        $r1 = r0.<com.hp.hpl.jena.sparql.expr.ExprFunction: com.hp.hpl.jena.sparql.expr.FunctionLabel funcSymbol>;

        $r2 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.expr.FunctionLabel: java.lang.String getSymbol()>();

        return $r2;
    }

    public com.hp.hpl.jena.sparql.expr.FunctionLabel getFunctionSymbol()
    {
        com.hp.hpl.jena.sparql.expr.ExprFunction r0;
        com.hp.hpl.jena.sparql.expr.FunctionLabel $r1;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprFunction;

        $r1 = r0.<com.hp.hpl.jena.sparql.expr.ExprFunction: com.hp.hpl.jena.sparql.expr.FunctionLabel funcSymbol>;

        return $r1;
    }

    public java.lang.String getFunctionIRI()
    {
        com.hp.hpl.jena.sparql.expr.ExprFunction r0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprFunction;

        return null;
    }

    public java.lang.String getOpName()
    {
        java.lang.String $r1;
        com.hp.hpl.jena.sparql.expr.ExprFunction r0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.ExprFunction;

        $r1 = r0.<com.hp.hpl.jena.sparql.expr.ExprFunction: java.lang.String opSign>;

        return $r1;
    }
}
