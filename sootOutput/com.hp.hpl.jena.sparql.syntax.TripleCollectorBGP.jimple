public class com.hp.hpl.jena.sparql.syntax.TripleCollectorBGP extends java.lang.Object implements com.hp.hpl.jena.sparql.syntax.TripleCollectorMark
{
    com.hp.hpl.jena.sparql.core.BasicPattern bgp;

    public void <init>()
    {
        com.hp.hpl.jena.sparql.syntax.TripleCollectorBGP r0;
        com.hp.hpl.jena.sparql.core.BasicPattern $r1;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.TripleCollectorBGP;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.hp.hpl.jena.sparql.core.BasicPattern;

        specialinvoke $r1.<com.hp.hpl.jena.sparql.core.BasicPattern: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.syntax.TripleCollectorBGP: com.hp.hpl.jena.sparql.core.BasicPattern bgp> = $r1;

        return;
    }

    public com.hp.hpl.jena.sparql.core.BasicPattern getBGP()
    {
        com.hp.hpl.jena.sparql.syntax.TripleCollectorBGP r0;
        com.hp.hpl.jena.sparql.core.BasicPattern $r1;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.TripleCollectorBGP;

        $r1 = r0.<com.hp.hpl.jena.sparql.syntax.TripleCollectorBGP: com.hp.hpl.jena.sparql.core.BasicPattern bgp>;

        return $r1;
    }

    public void addTriple(com.hp.hpl.jena.graph.Triple)
    {
        com.hp.hpl.jena.sparql.syntax.TripleCollectorBGP r0;
        com.hp.hpl.jena.sparql.core.BasicPattern $r2;
        com.hp.hpl.jena.graph.Triple r1;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.TripleCollectorBGP;

        r1 := @parameter0: com.hp.hpl.jena.graph.Triple;

        $r2 = r0.<com.hp.hpl.jena.sparql.syntax.TripleCollectorBGP: com.hp.hpl.jena.sparql.core.BasicPattern bgp>;

        virtualinvoke $r2.<com.hp.hpl.jena.sparql.core.BasicPattern: void add(com.hp.hpl.jena.graph.Triple)>(r1);

        return;
    }

    public int mark()
    {
        com.hp.hpl.jena.sparql.syntax.TripleCollectorBGP r0;
        com.hp.hpl.jena.sparql.core.BasicPattern $r1;
        int $i0;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.TripleCollectorBGP;

        $r1 = r0.<com.hp.hpl.jena.sparql.syntax.TripleCollectorBGP: com.hp.hpl.jena.sparql.core.BasicPattern bgp>;

        $i0 = virtualinvoke $r1.<com.hp.hpl.jena.sparql.core.BasicPattern: int size()>();

        return $i0;
    }

    public void addTriple(int, com.hp.hpl.jena.graph.Triple)
    {
        com.hp.hpl.jena.sparql.syntax.TripleCollectorBGP r0;
        int i0;
        com.hp.hpl.jena.sparql.core.BasicPattern $r2;
        com.hp.hpl.jena.graph.Triple r1;

        r0 := @this: com.hp.hpl.jena.sparql.syntax.TripleCollectorBGP;

        i0 := @parameter0: int;

        r1 := @parameter1: com.hp.hpl.jena.graph.Triple;

        $r2 = r0.<com.hp.hpl.jena.sparql.syntax.TripleCollectorBGP: com.hp.hpl.jena.sparql.core.BasicPattern bgp>;

        virtualinvoke $r2.<com.hp.hpl.jena.sparql.core.BasicPattern: void add(int,com.hp.hpl.jena.graph.Triple)>(i0, r1);

        return;
    }

    public void addTriplePath(com.hp.hpl.jena.sparql.core.TriplePath)
    {
        com.hp.hpl.jena.sparql.syntax.TripleCollectorBGP r1;
        com.hp.hpl.jena.sparql.core.TriplePath r2;
        com.hp.hpl.jena.sparql.ARQException $r0;

        r1 := @this: com.hp.hpl.jena.sparql.syntax.TripleCollectorBGP;

        r2 := @parameter0: com.hp.hpl.jena.sparql.core.TriplePath;

        $r0 = new com.hp.hpl.jena.sparql.ARQException;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.ARQException: void <init>(java.lang.String)>("Triples-only collector");

        throw $r0;
    }

    public void addTriplePath(int, com.hp.hpl.jena.sparql.core.TriplePath)
    {
        com.hp.hpl.jena.sparql.syntax.TripleCollectorBGP r1;
        int i0;
        com.hp.hpl.jena.sparql.core.TriplePath r2;
        com.hp.hpl.jena.sparql.ARQException $r0;

        r1 := @this: com.hp.hpl.jena.sparql.syntax.TripleCollectorBGP;

        i0 := @parameter0: int;

        r2 := @parameter1: com.hp.hpl.jena.sparql.core.TriplePath;

        $r0 = new com.hp.hpl.jena.sparql.ARQException;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.ARQException: void <init>(java.lang.String)>("Triples-only collector");

        throw $r0;
    }
}
