public class com.hp.hpl.jena.sparql.pfunction.library.listMember extends com.hp.hpl.jena.sparql.pfunction.library.ListBase1
{

    public void <init>()
    {
        com.hp.hpl.jena.sparql.pfunction.library.listMember r0;

        r0 := @this: com.hp.hpl.jena.sparql.pfunction.library.listMember;

        specialinvoke r0.<com.hp.hpl.jena.sparql.pfunction.library.ListBase1: void <init>()>();

        return;
    }

    public void build(com.hp.hpl.jena.sparql.pfunction.PropFuncArg, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.pfunction.PropFuncArg, com.hp.hpl.jena.sparql.engine.ExecutionContext)
    {
        com.hp.hpl.jena.sparql.pfunction.library.listMember r0;
        com.hp.hpl.jena.query.QueryBuildException $r6;
        com.hp.hpl.jena.graph.Node r2;
        com.hp.hpl.jena.sparql.pfunction.PropFuncArg r1, r3;
        java.util.List $r5;
        int $i0;
        java.lang.StringBuilder $r7, $r8, $r10;
        com.hp.hpl.jena.sparql.engine.ExecutionContext r4;
        java.lang.String $r9, $r11;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.pfunction.library.listMember;

        r1 := @parameter0: com.hp.hpl.jena.sparql.pfunction.PropFuncArg;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        r3 := @parameter2: com.hp.hpl.jena.sparql.pfunction.PropFuncArg;

        r4 := @parameter3: com.hp.hpl.jena.sparql.engine.ExecutionContext;

        specialinvoke r0.<com.hp.hpl.jena.sparql.pfunction.library.ListBase1: void build(com.hp.hpl.jena.sparql.pfunction.PropFuncArg,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.pfunction.PropFuncArg,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r1, r2, r3, r4);

        $z0 = virtualinvoke r3.<com.hp.hpl.jena.sparql.pfunction.PropFuncArg: boolean isList()>();

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r3.<com.hp.hpl.jena.sparql.pfunction.PropFuncArg: java.util.List getArgList()>();

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 == 0 goto label1;

        $r6 = new com.hp.hpl.jena.query.QueryBuildException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("List arguments (object) to ");

        $r9 = virtualinvoke r2.<com.hp.hpl.jena.graph.Node: java.lang.String getURI()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.hp.hpl.jena.query.QueryBuildException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label1:
        return;
    }

    protected com.hp.hpl.jena.sparql.engine.QueryIterator execOneList(com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.engine.ExecutionContext)
    {
        com.hp.hpl.jena.sparql.pfunction.library.listMember r2;
        com.hp.hpl.jena.graph.Node r0, r1, r9;
        com.hp.hpl.jena.sparql.core.Var $r6;
        com.hp.hpl.jena.sparql.engine.binding.Binding r3;
        com.hp.hpl.jena.query.QueryExecException $r8;
        com.hp.hpl.jena.sparql.engine.ExecutionContext r4;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r5, $r7;
        boolean $z0, $z1;

        r2 := @this: com.hp.hpl.jena.sparql.pfunction.library.listMember;

        r3 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r0 := @parameter1: com.hp.hpl.jena.graph.Node;

        r9 := @parameter2: com.hp.hpl.jena.graph.Node;

        r1 := @parameter3: com.hp.hpl.jena.graph.Node;

        r4 := @parameter4: com.hp.hpl.jena.sparql.engine.ExecutionContext;

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.core.Var: boolean isVar(com.hp.hpl.jena.graph.Node)>(r0);

        if $z0 == 0 goto label1;

        $r8 = new com.hp.hpl.jena.query.QueryExecException;

        specialinvoke $r8.<com.hp.hpl.jena.query.QueryExecException: void <init>(java.lang.String)>("List : subject not a list or variable bound to a list");

        throw $r8;

     label1:
        $z1 = staticinvoke <com.hp.hpl.jena.sparql.core.Var: boolean isVar(com.hp.hpl.jena.graph.Node)>(r1);

        if $z1 == 0 goto label2;

        $r6 = staticinvoke <com.hp.hpl.jena.sparql.core.Var: com.hp.hpl.jena.sparql.core.Var alloc(com.hp.hpl.jena.graph.Node)>(r1);

        $r7 = specialinvoke r2.<com.hp.hpl.jena.sparql.pfunction.library.listMember: com.hp.hpl.jena.sparql.engine.QueryIterator members(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.core.Var,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r3, r0, $r6, r4);

        return $r7;

     label2:
        $r5 = specialinvoke r2.<com.hp.hpl.jena.sparql.pfunction.library.listMember: com.hp.hpl.jena.sparql.engine.QueryIterator verify(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r3, r0, r1, r4);

        return $r5;
    }

    protected com.hp.hpl.jena.sparql.engine.QueryIterator execObjectBound(com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.sparql.core.Var, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.engine.ExecutionContext)
    {
        java.util.Iterator $r8;
        com.hp.hpl.jena.sparql.pfunction.library.listMember r9;
        com.hp.hpl.jena.graph.Node r3, r10;
        com.hp.hpl.jena.sparql.core.Var r7;
        com.hp.hpl.jena.sparql.util.graph.GNode $r0;
        java.util.List $r4;
        com.hp.hpl.jena.sparql.engine.binding.Binding r6;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIterExtendByVar $r5;
        com.hp.hpl.jena.sparql.engine.ExecutionContext r1;
        com.hp.hpl.jena.graph.Graph $r2;

        r9 := @this: com.hp.hpl.jena.sparql.pfunction.library.listMember;

        r6 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r7 := @parameter1: com.hp.hpl.jena.sparql.core.Var;

        r10 := @parameter2: com.hp.hpl.jena.graph.Node;

        r3 := @parameter3: com.hp.hpl.jena.graph.Node;

        r1 := @parameter4: com.hp.hpl.jena.sparql.engine.ExecutionContext;

        $r0 = new com.hp.hpl.jena.sparql.util.graph.GNode;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.engine.ExecutionContext: com.hp.hpl.jena.graph.Graph getActiveGraph()>();

        specialinvoke $r0.<com.hp.hpl.jena.sparql.util.graph.GNode: void <init>(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Node)>($r2, r3);

        $r4 = staticinvoke <com.hp.hpl.jena.sparql.util.graph.GraphList: java.util.List listFromMember(com.hp.hpl.jena.sparql.util.graph.GNode)>($r0);

        $r5 = new com.hp.hpl.jena.sparql.engine.iterator.QueryIterExtendByVar;

        $r8 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        specialinvoke $r5.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterExtendByVar: void <init>(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.core.Var,java.util.Iterator,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r6, r7, $r8, r1);

        return $r5;
    }

    private com.hp.hpl.jena.sparql.engine.QueryIterator members(com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.core.Var, com.hp.hpl.jena.sparql.engine.ExecutionContext)
    {
        java.util.Iterator $r8;
        com.hp.hpl.jena.sparql.pfunction.library.listMember r9;
        com.hp.hpl.jena.graph.Node r3;
        com.hp.hpl.jena.sparql.core.Var r7;
        com.hp.hpl.jena.sparql.util.graph.GNode $r0;
        java.util.List $r4;
        com.hp.hpl.jena.sparql.engine.binding.Binding r6;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIterExtendByVar $r5;
        com.hp.hpl.jena.sparql.engine.ExecutionContext r1;
        com.hp.hpl.jena.graph.Graph $r2;

        r9 := @this: com.hp.hpl.jena.sparql.pfunction.library.listMember;

        r6 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r3 := @parameter1: com.hp.hpl.jena.graph.Node;

        r7 := @parameter2: com.hp.hpl.jena.sparql.core.Var;

        r1 := @parameter3: com.hp.hpl.jena.sparql.engine.ExecutionContext;

        $r0 = new com.hp.hpl.jena.sparql.util.graph.GNode;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.engine.ExecutionContext: com.hp.hpl.jena.graph.Graph getActiveGraph()>();

        specialinvoke $r0.<com.hp.hpl.jena.sparql.util.graph.GNode: void <init>(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Node)>($r2, r3);

        $r4 = staticinvoke <com.hp.hpl.jena.sparql.util.graph.GraphList: java.util.List members(com.hp.hpl.jena.sparql.util.graph.GNode)>($r0);

        $r5 = new com.hp.hpl.jena.sparql.engine.iterator.QueryIterExtendByVar;

        $r8 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        specialinvoke $r5.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterExtendByVar: void <init>(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.core.Var,java.util.Iterator,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r6, r7, $r8, r1);

        return $r5;
    }

    private com.hp.hpl.jena.sparql.engine.QueryIterator verify(com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.engine.ExecutionContext)
    {
        com.hp.hpl.jena.sparql.engine.iterator.QueryIterYieldN $r5;
        com.hp.hpl.jena.sparql.pfunction.library.listMember r7;
        com.hp.hpl.jena.graph.Node r3, r4;
        com.hp.hpl.jena.sparql.util.graph.GNode $r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding r6;
        int $i0;
        com.hp.hpl.jena.sparql.engine.ExecutionContext r1;
        com.hp.hpl.jena.graph.Graph $r2;

        r7 := @this: com.hp.hpl.jena.sparql.pfunction.library.listMember;

        r6 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r3 := @parameter1: com.hp.hpl.jena.graph.Node;

        r4 := @parameter2: com.hp.hpl.jena.graph.Node;

        r1 := @parameter3: com.hp.hpl.jena.sparql.engine.ExecutionContext;

        $r0 = new com.hp.hpl.jena.sparql.util.graph.GNode;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.engine.ExecutionContext: com.hp.hpl.jena.graph.Graph getActiveGraph()>();

        specialinvoke $r0.<com.hp.hpl.jena.sparql.util.graph.GNode: void <init>(com.hp.hpl.jena.graph.Graph,com.hp.hpl.jena.graph.Node)>($r2, r3);

        $i0 = staticinvoke <com.hp.hpl.jena.sparql.util.graph.GraphList: int occurs(com.hp.hpl.jena.sparql.util.graph.GNode,com.hp.hpl.jena.graph.Node)>($r0, r4);

        $r5 = new com.hp.hpl.jena.sparql.engine.iterator.QueryIterYieldN;

        specialinvoke $r5.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterYieldN: void <init>(int,com.hp.hpl.jena.sparql.engine.binding.Binding)>($i0, r6);

        return $r5;
    }
}
