public class com.jhlabs.image.MapFilter extends com.jhlabs.image.TransformFilter
{
    private com.jhlabs.math.Function2D xMapFunction;
    private com.jhlabs.math.Function2D yMapFunction;

    public void <init>()
    {
        com.jhlabs.image.MapFilter r0;

        r0 := @this: com.jhlabs.image.MapFilter;

        specialinvoke r0.<com.jhlabs.image.TransformFilter: void <init>()>();

        return;
    }

    public void setXMapFunction(com.jhlabs.math.Function2D)
    {
        com.jhlabs.image.MapFilter r0;
        com.jhlabs.math.Function2D r1;

        r0 := @this: com.jhlabs.image.MapFilter;

        r1 := @parameter0: com.jhlabs.math.Function2D;

        r0.<com.jhlabs.image.MapFilter: com.jhlabs.math.Function2D xMapFunction> = r1;

        return;
    }

    public com.jhlabs.math.Function2D getXMapFunction()
    {
        com.jhlabs.image.MapFilter r0;
        com.jhlabs.math.Function2D $r1;

        r0 := @this: com.jhlabs.image.MapFilter;

        $r1 = r0.<com.jhlabs.image.MapFilter: com.jhlabs.math.Function2D xMapFunction>;

        return $r1;
    }

    public void setYMapFunction(com.jhlabs.math.Function2D)
    {
        com.jhlabs.image.MapFilter r0;
        com.jhlabs.math.Function2D r1;

        r0 := @this: com.jhlabs.image.MapFilter;

        r1 := @parameter0: com.jhlabs.math.Function2D;

        r0.<com.jhlabs.image.MapFilter: com.jhlabs.math.Function2D yMapFunction> = r1;

        return;
    }

    public com.jhlabs.math.Function2D getYMapFunction()
    {
        com.jhlabs.image.MapFilter r0;
        com.jhlabs.math.Function2D $r1;

        r0 := @this: com.jhlabs.image.MapFilter;

        $r1 = r0.<com.jhlabs.image.MapFilter: com.jhlabs.math.Function2D yMapFunction>;

        return $r1;
    }

    protected void transformInverse(int, int, float[])
    {
        java.awt.Rectangle $r4, $r5;
        float[] r3;
        int i0, i1, $i2, $i3;
        com.jhlabs.math.Function2D $r1, $r2;
        com.jhlabs.image.MapFilter r0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;

        r0 := @this: com.jhlabs.image.MapFilter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r3 := @parameter2: float[];

        $r1 = r0.<com.jhlabs.image.MapFilter: com.jhlabs.math.Function2D xMapFunction>;

        $f1 = (float) i0;

        $f0 = (float) i1;

        $f2 = interfaceinvoke $r1.<com.jhlabs.math.Function2D: float evaluate(float,float)>($f1, $f0);

        $r2 = r0.<com.jhlabs.image.MapFilter: com.jhlabs.math.Function2D yMapFunction>;

        $f4 = (float) i0;

        $f3 = (float) i1;

        $f5 = interfaceinvoke $r2.<com.jhlabs.math.Function2D: float evaluate(float,float)>($f4, $f3);

        $r4 = r0.<com.jhlabs.image.TransformFilter: java.awt.Rectangle transformedSpace>;

        $i2 = $r4.<java.awt.Rectangle: int width>;

        $f6 = (float) $i2;

        $f7 = $f2 * $f6;

        r3[0] = $f7;

        $r5 = r0.<com.jhlabs.image.TransformFilter: java.awt.Rectangle transformedSpace>;

        $i3 = $r5.<java.awt.Rectangle: int height>;

        $f8 = (float) $i3;

        $f9 = $f5 * $f8;

        r3[1] = $f9;

        return;
    }

    public java.lang.String toString()
    {
        com.jhlabs.image.MapFilter r0;

        r0 := @this: com.jhlabs.image.MapFilter;

        return "Distort/Map Coordinates...";
    }
}
