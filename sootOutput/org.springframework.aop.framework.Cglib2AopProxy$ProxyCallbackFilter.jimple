class org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter extends java.lang.Object implements net.sf.cglib.proxy.CallbackFilter
{
    private final org.springframework.aop.framework.AdvisedSupport advised;
    private final java.util.Map fixedInterceptorMap;
    private final int fixedInterceptorOffset;

    public void <init>(org.springframework.aop.framework.AdvisedSupport, java.util.Map, int)
    {
        java.util.Map r2;
        int i0;
        org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter r0;
        org.springframework.aop.framework.AdvisedSupport r1;

        r0 := @this: org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter;

        r1 := @parameter0: org.springframework.aop.framework.AdvisedSupport;

        r2 := @parameter1: java.util.Map;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter: org.springframework.aop.framework.AdvisedSupport advised> = r1;

        r0.<org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter: java.util.Map fixedInterceptorMap> = r2;

        r0.<org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter: int fixedInterceptorOffset> = i0;

        return;
    }

    public int accept(java.lang.reflect.Method)
    {
        java.lang.Integer $r20;
        java.util.Map $r16, $r18;
        java.lang.StringBuilder $r12, $r14, $r21, $r23, $r26, $r28, $r32, $r34, $r35, $r38, $r40, $r41, $r42, $r45, $r47, $r48, $r50, $r52, $r54, $r56, $r61, $r63;
        java.lang.String $r11, $r15, $r24, $r29, $r36, $r43, $r49, $r53, $r57, $r64;
        org.springframework.aop.TargetSource $r9;
        java.lang.reflect.Method r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20;
        org.springframework.aop.framework.AdvisedSupport $r2, $r3, $r5, $r7, $r8, $r10;
        org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter r1;
        java.util.List $r6;
        int $i0, $i1, $i2;
        java.lang.Class $r4, $r30, $r58, $r59;
        org.apache.commons.logging.Log $r13, $r17, $r22, $r25, $r27, $r31, $r33, $r37, $r39, $r44, $r46, $r51, $r55, $r60, $r62, $r65, $r66;
        java.lang.Object $r19;

        r1 := @this: org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter;

        r0 := @parameter0: java.lang.reflect.Method;

        $z0 = staticinvoke <org.springframework.aop.support.AopUtils: boolean isFinalizeMethod(java.lang.reflect.Method)>(r0);

        if $z0 == 0 goto label01;

        $r65 = <org.springframework.aop.framework.Cglib2AopProxy: org.apache.commons.logging.Log logger>;

        interfaceinvoke $r65.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Found finalize() method - using NO_OVERRIDE");

        return 2;

     label01:
        $r2 = r1.<org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter: org.springframework.aop.framework.AdvisedSupport advised>;

        $z1 = virtualinvoke $r2.<org.springframework.aop.framework.AdvisedSupport: boolean isOpaque()>();

        if $z1 != 0 goto label03;

        $r58 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $z15 = virtualinvoke $r58.<java.lang.Class: boolean isInterface()>();

        if $z15 == 0 goto label03;

        $r59 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $z16 = virtualinvoke $r59.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(class "Lorg/springframework/aop/framework/Advised;");

        if $z16 == 0 goto label03;

        $r60 = <org.springframework.aop.framework.Cglib2AopProxy: org.apache.commons.logging.Log logger>;

        $z17 = interfaceinvoke $r60.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z17 == 0 goto label02;

        $r62 = <org.springframework.aop.framework.Cglib2AopProxy: org.apache.commons.logging.Log logger>;

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>(java.lang.String)>("Method is declared on Advised interface: ");

        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r62.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r64);

     label02:
        return 4;

     label03:
        $z18 = staticinvoke <org.springframework.aop.support.AopUtils: boolean isEqualsMethod(java.lang.reflect.Method)>(r0);

        if $z18 == 0 goto label04;

        $r55 = <org.springframework.aop.framework.Cglib2AopProxy: org.apache.commons.logging.Log logger>;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>(java.lang.String)>("Found \'equals\' method: ");

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r55.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r57);

        return 5;

     label04:
        $z2 = staticinvoke <org.springframework.aop.support.AopUtils: boolean isHashCodeMethod(java.lang.reflect.Method)>(r0);

        if $z2 == 0 goto label05;

        $r51 = <org.springframework.aop.framework.Cglib2AopProxy: org.apache.commons.logging.Log logger>;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>(java.lang.String)>("Found \'hashCode\' method: ");

        $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r51.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r53);

        return 6;

     label05:
        $r3 = r1.<org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter: org.springframework.aop.framework.AdvisedSupport advised>;

        $r4 = virtualinvoke $r3.<org.springframework.aop.framework.AdvisedSupport: java.lang.Class getTargetClass()>();

        $r5 = r1.<org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter: org.springframework.aop.framework.AdvisedSupport advised>;

        $r6 = virtualinvoke $r5.<org.springframework.aop.framework.AdvisedSupport: java.util.List getInterceptorsAndDynamicInterceptionAdvice(java.lang.reflect.Method,java.lang.Class)>(r0, $r4);

        $z3 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>();

        if $z3 == 0 goto label06;

        $z19 = 0;

        goto label07;

     label06:
        $z19 = 1;

     label07:
        $r7 = r1.<org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter: org.springframework.aop.framework.AdvisedSupport advised>;

        $z4 = virtualinvoke $r7.<org.springframework.aop.framework.AdvisedSupport: boolean isExposeProxy()>();

        $r8 = r1.<org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter: org.springframework.aop.framework.AdvisedSupport advised>;

        $r9 = virtualinvoke $r8.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.TargetSource getTargetSource()>();

        $z5 = interfaceinvoke $r9.<org.springframework.aop.TargetSource: boolean isStatic()>();

        $r10 = r1.<org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter: org.springframework.aop.framework.AdvisedSupport advised>;

        $z6 = virtualinvoke $r10.<org.springframework.aop.framework.AdvisedSupport: boolean isFrozen()>();

        if $z19 != 0 goto label08;

        if $z6 != 0 goto label14;

     label08:
        if $z4 == 0 goto label10;

        $r25 = <org.springframework.aop.framework.Cglib2AopProxy: org.apache.commons.logging.Log logger>;

        $z9 = interfaceinvoke $r25.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z9 == 0 goto label09;

        $r27 = <org.springframework.aop.framework.Cglib2AopProxy: org.apache.commons.logging.Log logger>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>("Must expose proxy on advised method: ");

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r27.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r29);

     label09:
        return 0;

     label10:
        $r11 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.String toString()>();

        if $z5 == 0 goto label12;

        if $z6 == 0 goto label12;

        $r16 = r1.<org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter: java.util.Map fixedInterceptorMap>;

        $z7 = interfaceinvoke $r16.<java.util.Map: boolean containsKey(java.lang.Object)>($r11);

        if $z7 == 0 goto label12;

        $r17 = <org.springframework.aop.framework.Cglib2AopProxy: org.apache.commons.logging.Log logger>;

        $z8 = interfaceinvoke $r17.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z8 == 0 goto label11;

        $r22 = <org.springframework.aop.framework.Cglib2AopProxy: org.apache.commons.logging.Log logger>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>("Method has advice and optimisations are enabled: ");

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r22.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r24);

     label11:
        $r18 = r1.<org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter: java.util.Map fixedInterceptorMap>;

        $r19 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);

        $r20 = (java.lang.Integer) $r19;

        $i0 = virtualinvoke $r20.<java.lang.Integer: int intValue()>();

        $i1 = r1.<org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter: int fixedInterceptorOffset>;

        $i2 = $i0 + $i1;

        return $i2;

     label12:
        $r66 = <org.springframework.aop.framework.Cglib2AopProxy: org.apache.commons.logging.Log logger>;

        $z20 = interfaceinvoke $r66.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z20 == 0 goto label13;

        $r13 = <org.springframework.aop.framework.Cglib2AopProxy: org.apache.commons.logging.Log logger>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unable to apply any optimisations to advised method: ");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r15);

     label13:
        return 0;

     label14:
        if $z4 != 0 goto label15;

        if $z5 != 0 goto label16;

     label15:
        return 1;

     label16:
        $r30 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        if $r4 != $r30 goto label18;

        $r44 = <org.springframework.aop.framework.Cglib2AopProxy: org.apache.commons.logging.Log logger>;

        $z14 = interfaceinvoke $r44.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z14 == 0 goto label17;

        $r46 = <org.springframework.aop.framework.Cglib2AopProxy: org.apache.commons.logging.Log logger>;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>(java.lang.String)>("Method ");

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("has return type same as target type (may return this) - using INVOKE_TARGET");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r46.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r49);

     label17:
        return 1;

     label18:
        $z10 = virtualinvoke $r30.<java.lang.Class: boolean isPrimitive()>();

        if $z10 != 0 goto label19;

        $z12 = virtualinvoke $r30.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r4);

        if $z12 != 0 goto label21;

     label19:
        $r31 = <org.springframework.aop.framework.Cglib2AopProxy: org.apache.commons.logging.Log logger>;

        $z11 = interfaceinvoke $r31.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z11 == 0 goto label20;

        $r33 = <org.springframework.aop.framework.Cglib2AopProxy: org.apache.commons.logging.Log logger>;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>(java.lang.String)>("Method ");

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has return type that ensures this cannot be returned- using DISPATCH_TARGET");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r33.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r36);

     label20:
        return 3;

     label21:
        $r37 = <org.springframework.aop.framework.Cglib2AopProxy: org.apache.commons.logging.Log logger>;

        $z13 = interfaceinvoke $r37.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z13 == 0 goto label22;

        $r39 = <org.springframework.aop.framework.Cglib2AopProxy: org.apache.commons.logging.Log logger>;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>(java.lang.String)>("Method ");

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("has return type that is assignable from the target type (may return this) - ");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("using INVOKE_TARGET");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r39.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r43);

     label22:
        return 1;
    }

    public boolean equals(java.lang.Object)
    {
        org.springframework.aop.TargetSource $r8, $r9;
        org.springframework.aop.Advisor[] $r12, $r13;
        int $i0, $i1, $i2, i3;
        org.springframework.aop.Advisor r14, r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        org.springframework.aop.framework.AdvisedSupport r3, $r4, $r5, $r6, $r7, $r10, $r11;
        org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter r1, r2;
        java.lang.Object r0;

        r1 := @this: org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label01;

        return 1;

     label01:
        $z0 = r0 instanceof org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter;

        if $z0 != 0 goto label02;

        return 0;

     label02:
        r2 = (org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter) r0;

        r3 = r2.<org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter: org.springframework.aop.framework.AdvisedSupport advised>;

        $r4 = r1.<org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter: org.springframework.aop.framework.AdvisedSupport advised>;

        if $r4 == null goto label03;

        if r3 != null goto label04;

     label03:
        return 0;

     label04:
        $r5 = r1.<org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter: org.springframework.aop.framework.AdvisedSupport advised>;

        $z1 = virtualinvoke $r5.<org.springframework.aop.framework.AdvisedSupport: boolean isFrozen()>();

        $z2 = virtualinvoke r3.<org.springframework.aop.framework.AdvisedSupport: boolean isFrozen()>();

        if $z1 == $z2 goto label05;

        return 0;

     label05:
        $r6 = r1.<org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter: org.springframework.aop.framework.AdvisedSupport advised>;

        $z3 = virtualinvoke $r6.<org.springframework.aop.framework.AdvisedSupport: boolean isExposeProxy()>();

        $z4 = virtualinvoke r3.<org.springframework.aop.framework.AdvisedSupport: boolean isExposeProxy()>();

        if $z3 == $z4 goto label06;

        return 0;

     label06:
        $r7 = r1.<org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter: org.springframework.aop.framework.AdvisedSupport advised>;

        $r8 = virtualinvoke $r7.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.TargetSource getTargetSource()>();

        $z5 = interfaceinvoke $r8.<org.springframework.aop.TargetSource: boolean isStatic()>();

        $r9 = virtualinvoke r3.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.TargetSource getTargetSource()>();

        $z6 = interfaceinvoke $r9.<org.springframework.aop.TargetSource: boolean isStatic()>();

        if $z5 == $z6 goto label07;

        return 0;

     label07:
        $r10 = r1.<org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter: org.springframework.aop.framework.AdvisedSupport advised>;

        $z7 = staticinvoke <org.springframework.aop.framework.AopProxyUtils: boolean equalsProxiedInterfaces(org.springframework.aop.framework.AdvisedSupport,org.springframework.aop.framework.AdvisedSupport)>($r10, r3);

        if $z7 != 0 goto label08;

        return 0;

     label08:
        $r11 = r1.<org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter: org.springframework.aop.framework.AdvisedSupport advised>;

        $r12 = virtualinvoke $r11.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.Advisor[] getAdvisors()>();

        $r13 = virtualinvoke r3.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.Advisor[] getAdvisors()>();

        $i1 = lengthof $r12;

        $i0 = lengthof $r13;

        if $i1 == $i0 goto label09;

        return 0;

     label09:
        i3 = 0;

        goto label13;

     label10:
        r14 = $r12[i3];

        r15 = $r13[i3];

        $z8 = specialinvoke r1.<org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter: boolean equalsAdviceClasses(org.springframework.aop.Advisor,org.springframework.aop.Advisor)>(r14, r15);

        if $z8 != 0 goto label11;

        return 0;

     label11:
        $z9 = specialinvoke r1.<org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter: boolean equalsPointcuts(org.springframework.aop.Advisor,org.springframework.aop.Advisor)>(r14, r15);

        if $z9 != 0 goto label12;

        return 0;

     label12:
        i3 = i3 + 1;

     label13:
        $i2 = lengthof $r12;

        if i3 < $i2 goto label10;

        return 1;
    }

    private boolean equalsAdviceClasses(org.springframework.aop.Advisor, org.springframework.aop.Advisor)
    {
        org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter r6;
        org.aopalliance.aop.Advice $r1, $r3;
        java.lang.Class $r4, $r5;
        org.springframework.aop.Advisor r0, r2;
        boolean $z0;

        r6 := @this: org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter;

        r0 := @parameter0: org.springframework.aop.Advisor;

        r2 := @parameter1: org.springframework.aop.Advisor;

        $r1 = interfaceinvoke r0.<org.springframework.aop.Advisor: org.aopalliance.aop.Advice getAdvice()>();

        $r3 = interfaceinvoke r2.<org.springframework.aop.Advisor: org.aopalliance.aop.Advice getAdvice()>();

        if $r1 == null goto label1;

        if $r3 != null goto label3;

     label1:
        if $r1 != $r3 goto label2;

        return 1;

     label2:
        return 0;

     label3:
        $r4 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        return $z0;
    }

    private boolean equalsPointcuts(org.springframework.aop.Advisor, org.springframework.aop.Advisor)
    {
        org.springframework.aop.PointcutAdvisor $r2, $r4;
        org.springframework.aop.Pointcut $r3, $r5;
        org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter r6;
        org.springframework.aop.Advisor r0, r1;
        boolean $z0, $z1, $z2;

        r6 := @this: org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter;

        r0 := @parameter0: org.springframework.aop.Advisor;

        r1 := @parameter1: org.springframework.aop.Advisor;

        $z0 = r0 instanceof org.springframework.aop.PointcutAdvisor;

        if $z0 == 0 goto label2;

        $z1 = r1 instanceof org.springframework.aop.PointcutAdvisor;

        if $z1 == 0 goto label1;

        $r2 = (org.springframework.aop.PointcutAdvisor) r0;

        $r3 = interfaceinvoke $r2.<org.springframework.aop.PointcutAdvisor: org.springframework.aop.Pointcut getPointcut()>();

        $r4 = (org.springframework.aop.PointcutAdvisor) r1;

        $r5 = interfaceinvoke $r4.<org.springframework.aop.PointcutAdvisor: org.springframework.aop.Pointcut getPointcut()>();

        $z2 = staticinvoke <org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>($r3, $r5);

        if $z2 != 0 goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public int hashCode()
    {
        org.springframework.aop.Advisor[] $r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12;
        org.aopalliance.aop.Advice $r4;
        org.springframework.aop.Advisor r3;
        org.springframework.aop.framework.AdvisedSupport $r1, $r6, $r7, $r8, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter r0;
        java.lang.Class $r5;

        r0 := @this: org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter;

        i11 = 0;

        $r1 = r0.<org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter: org.springframework.aop.framework.AdvisedSupport advised>;

        $r2 = virtualinvoke $r1.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.Advisor[] getAdvisors()>();

        i0 = lengthof $r2;

        i12 = 0;

        goto label03;

     label01:
        r3 = $r2[i12];

        $r4 = interfaceinvoke r3.<org.springframework.aop.Advisor: org.aopalliance.aop.Advice getAdvice()>();

        if $r4 == null goto label02;

        $i1 = 13 * i11;

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $i2 = virtualinvoke $r5.<java.lang.Object: int hashCode()>();

        i11 = $i1 + $i2;

     label02:
        i12 = i12 + 1;

     label03:
        if i12 < i0 goto label01;

        $i3 = 13 * i11;

        $r6 = r0.<org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter: org.springframework.aop.framework.AdvisedSupport advised>;

        $z0 = virtualinvoke $r6.<org.springframework.aop.framework.AdvisedSupport: boolean isFrozen()>();

        if $z0 == 0 goto label04;

        $z4 = 1;

        goto label05;

     label04:
        $z4 = 0;

     label05:
        $i10 = $i3 + $z4;

        $i4 = 13 * $i10;

        $r7 = r0.<org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter: org.springframework.aop.framework.AdvisedSupport advised>;

        $z1 = virtualinvoke $r7.<org.springframework.aop.framework.AdvisedSupport: boolean isExposeProxy()>();

        if $z1 == 0 goto label06;

        $z5 = 1;

        goto label07;

     label06:
        $z5 = 0;

     label07:
        $i9 = $i4 + $z5;

        $i5 = 13 * $i9;

        $r8 = r0.<org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter: org.springframework.aop.framework.AdvisedSupport advised>;

        $z2 = virtualinvoke $r8.<org.springframework.aop.framework.AdvisedSupport: boolean isOptimize()>();

        if $z2 == 0 goto label08;

        $z6 = 1;

        goto label09;

     label08:
        $z6 = 0;

     label09:
        $i8 = $i5 + $z6;

        $i6 = 13 * $i8;

        $r9 = r0.<org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter: org.springframework.aop.framework.AdvisedSupport advised>;

        $z3 = virtualinvoke $r9.<org.springframework.aop.framework.AdvisedSupport: boolean isOpaque()>();

        if $z3 == 0 goto label10;

        $z7 = 1;

        goto label11;

     label10:
        $z7 = 0;

     label11:
        $i7 = $i6 + $z7;

        return $i7;
    }
}
