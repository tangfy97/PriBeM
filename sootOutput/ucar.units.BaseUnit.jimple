public class ucar.units.BaseUnit extends ucar.units.DerivedUnitImpl implements ucar.units.Base
{
    private static final long serialVersionUID;
    private static final java.util.SortedMap nameMap;
    private static final java.util.SortedMap quantityMap;
    private final ucar.units.BaseQuantity baseQuantity;

    protected void <init>(ucar.units.UnitName, ucar.units.BaseQuantity) throws ucar.units.NameException
    {
        ucar.units.NameException $r5;
        ucar.units.UnitName r1;
        ucar.units.UnitDimension $r3;
        ucar.units.BaseUnit r0;
        java.lang.String $r2;
        ucar.units.BaseQuantity r4;

        r0 := @this: ucar.units.BaseUnit;

        r1 := @parameter0: ucar.units.UnitName;

        r4 := @parameter1: ucar.units.BaseQuantity;

        specialinvoke r0.<ucar.units.DerivedUnitImpl: void <init>(ucar.units.UnitName)>(r1);

        $r2 = virtualinvoke r1.<ucar.units.UnitName: java.lang.String getSymbol()>();

        if $r2 != null goto label1;

        $r5 = new ucar.units.NameException;

        specialinvoke $r5.<ucar.units.NameException: void <init>(java.lang.String)>("Base unit must have symbol");

        throw $r5;

     label1:
        $r3 = new ucar.units.UnitDimension;

        specialinvoke $r3.<ucar.units.UnitDimension: void <init>(ucar.units.BaseUnit)>(r0);

        virtualinvoke r0.<ucar.units.BaseUnit: void setDimension(ucar.units.UnitDimension)>($r3);

        r0.<ucar.units.BaseUnit: ucar.units.BaseQuantity baseQuantity> = r4;

        return;
    }

    public static synchronized ucar.units.BaseUnit getOrCreate(ucar.units.UnitName, ucar.units.BaseQuantity) throws ucar.units.NameException, ucar.units.UnitExistsException
    {
        ucar.units.UnitExistsException $r9;
        ucar.units.BaseQuantity r4, $r15;
        java.lang.String $r14;
        boolean $z0, $z1;
        ucar.units.UnitName r0, $r8;
        java.lang.Object $r2, $r6;
        java.lang.StringBuilder $r10, $r11, $r12, $r13;
        ucar.units.BaseUnit r3, r7, $r16, $r19, r20;
        java.util.SortedMap $r1, $r5, $r17, $r18;

        r0 := @parameter0: ucar.units.UnitName;

        r4 := @parameter1: ucar.units.BaseQuantity;

        $r1 = <ucar.units.BaseUnit: java.util.SortedMap nameMap>;

        $r2 = interfaceinvoke $r1.<java.util.SortedMap: java.lang.Object get(java.lang.Object)>(r0);

        r3 = (ucar.units.BaseUnit) $r2;

        $r5 = <ucar.units.BaseUnit: java.util.SortedMap quantityMap>;

        $r6 = interfaceinvoke $r5.<java.util.SortedMap: java.lang.Object get(java.lang.Object)>(r4);

        r7 = (ucar.units.BaseUnit) $r6;

        if r3 != null goto label1;

        if r7 == null goto label6;

     label1:
        if r3 == null goto label2;

        $r19 = r3;

        goto label3;

     label2:
        $r19 = r7;

     label3:
        r20 = $r19;

        if r3 == null goto label4;

        $r15 = virtualinvoke r3.<ucar.units.BaseUnit: ucar.units.BaseQuantity getBaseQuantity()>();

        $z1 = virtualinvoke r4.<ucar.units.BaseQuantity: boolean equals(java.lang.Object)>($r15);

        if $z1 == 0 goto label5;

     label4:
        if r7 == null goto label7;

        $r8 = virtualinvoke r7.<ucar.units.BaseUnit: ucar.units.UnitName getUnitName()>();

        $z0 = virtualinvoke r0.<ucar.units.UnitName: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label7;

     label5:
        $r9 = new ucar.units.UnitExistsException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to incompatibly redefine base unit \"");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r20);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<ucar.units.UnitExistsException: void <init>(java.lang.String)>($r14);

        throw $r9;

     label6:
        $r16 = new ucar.units.BaseUnit;

        specialinvoke $r16.<ucar.units.BaseUnit: void <init>(ucar.units.UnitName,ucar.units.BaseQuantity)>(r0, r4);

        r20 = $r16;

        $r17 = <ucar.units.BaseUnit: java.util.SortedMap quantityMap>;

        interfaceinvoke $r17.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r16);

        $r18 = <ucar.units.BaseUnit: java.util.SortedMap nameMap>;

        interfaceinvoke $r18.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r16);

     label7:
        return r20;
    }

    public final ucar.units.BaseQuantity getBaseQuantity()
    {
        ucar.units.BaseUnit r0;
        ucar.units.BaseQuantity $r1;

        r0 := @this: ucar.units.BaseUnit;

        $r1 = r0.<ucar.units.BaseUnit: ucar.units.BaseQuantity baseQuantity>;

        return $r1;
    }

    public final java.lang.String getID()
    {
        ucar.units.BaseUnit r0;
        java.lang.String $r1;

        r0 := @this: ucar.units.BaseUnit;

        $r1 = virtualinvoke r0.<ucar.units.BaseUnit: java.lang.String getSymbol()>();

        return $r1;
    }

    public final java.lang.String toString()
    {
        ucar.units.BaseUnit r0;
        java.lang.String $r1;

        r0 := @this: ucar.units.BaseUnit;

        $r1 = virtualinvoke r0.<ucar.units.BaseUnit: java.lang.String getID()>();

        return $r1;
    }

    public boolean isDimensionless()
    {
        ucar.units.BaseUnit r0;
        ucar.units.BaseQuantity $r1;
        boolean $z0;

        r0 := @this: ucar.units.BaseUnit;

        $r1 = r0.<ucar.units.BaseUnit: ucar.units.BaseQuantity baseQuantity>;

        $z0 = virtualinvoke $r1.<ucar.units.BaseQuantity: boolean isDimensionless()>();

        return $z0;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        ucar.units.BaseQuantity $r6;
        ucar.units.SupplementaryBaseQuantity $r42;
        java.lang.StringBuilder $r3, $r5, $r7, $r9, $r11, $r12, $r14, $r16, $r20, $r22, $r24, $r25, $r27, $r29, $r33, $r35, $r37, $r38, $r43, $r45, $r46, $r48, $r50, $r51, $r53, $r55, $r56;
        ucar.units.RegularBaseQuantity $r2;
        float[] $r17, $r18, $r19, $r30, $r31, $r32;
        java.lang.String $r8, $r13, $r21, $r26, $r34, $r39, $r47, $r52, $r57;
        boolean $z0, $z1, $z2, $z3;
        ucar.units.UnitName $r1, $r41;
        float $f0, $f1;
        java.lang.String[] r58;
        double $d0, $d1;
        java.io.PrintStream $r4, $r10, $r15, $r23, $r28, $r36, $r44, $r49, $r54;
        ucar.units.BaseUnit $r0, $r40;

        r58 := @parameter0: java.lang.String[];

        $r0 = new ucar.units.BaseUnit;

        $r1 = staticinvoke <ucar.units.UnitName: ucar.units.UnitName newUnitName(java.lang.String,java.lang.String,java.lang.String)>("meter", null, "m");

        $r2 = <ucar.units.BaseQuantity: ucar.units.RegularBaseQuantity LENGTH>;

        specialinvoke $r0.<ucar.units.BaseUnit: void <init>(ucar.units.UnitName,ucar.units.BaseQuantity)>($r1, $r2);

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("meter.getBaseQuantity()=");

        $r6 = virtualinvoke $r0.<ucar.units.BaseUnit: ucar.units.BaseQuantity getBaseQuantity()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);

        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("meter.toDerivedUnit(1.)=");

        $d0 = virtualinvoke $r0.<ucar.units.BaseUnit: double toDerivedUnit(double)>(1.0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r13);

        $r15 = <java.lang.System: java.io.PrintStream out>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("meter.toDerivedUnit(new float[] {2})[0]=");

        $r17 = newarray (float)[1];

        $r17[0] = 2.0F;

        $r18 = newarray (float)[1];

        $r19 = virtualinvoke $r0.<ucar.units.BaseUnit: float[] toDerivedUnit(float[],float[])>($r17, $r18);

        $f0 = $r19[0];

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r21);

        $r23 = <java.lang.System: java.io.PrintStream out>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("meter.fromDerivedUnit(1.)=");

        $d1 = virtualinvoke $r0.<ucar.units.BaseUnit: double fromDerivedUnit(double)>(1.0);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r26);

        $r28 = <java.lang.System: java.io.PrintStream out>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("meter.fromDerivedUnit(new float[] {3})[0]=");

        $r30 = newarray (float)[1];

        $r30[0] = 3.0F;

        $r31 = newarray (float)[1];

        $r32 = virtualinvoke $r0.<ucar.units.BaseUnit: float[] fromDerivedUnit(float[],float[])>($r30, $r31);

        $f1 = $r32[0];

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>($r34);

        $r36 = <java.lang.System: java.io.PrintStream out>;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("meter.isCompatible(meter)=");

        $z0 = virtualinvoke $r0.<ucar.units.BaseUnit: boolean isCompatible(ucar.units.Unit)>($r0);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>($r39);

        $r40 = new ucar.units.BaseUnit;

        $r41 = staticinvoke <ucar.units.UnitName: ucar.units.UnitName newUnitName(java.lang.String,java.lang.String,java.lang.String)>("radian", null, "rad");

        $r42 = <ucar.units.BaseQuantity: ucar.units.SupplementaryBaseQuantity PLANE_ANGLE>;

        specialinvoke $r40.<ucar.units.BaseUnit: void <init>(ucar.units.UnitName,ucar.units.BaseQuantity)>($r41, $r42);

        $r44 = <java.lang.System: java.io.PrintStream out>;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("meter.isCompatible(radian)=");

        $z1 = virtualinvoke $r0.<ucar.units.BaseUnit: boolean isCompatible(ucar.units.Unit)>($r40);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r44.<java.io.PrintStream: void println(java.lang.String)>($r47);

        $r49 = <java.lang.System: java.io.PrintStream out>;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("meter.isDimensionless()=");

        $z2 = virtualinvoke $r0.<ucar.units.BaseUnit: boolean isDimensionless()>();

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r49.<java.io.PrintStream: void println(java.lang.String)>($r52);

        $r54 = <java.lang.System: java.io.PrintStream out>;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("radian.isDimensionless()=");

        $z3 = virtualinvoke $r40.<ucar.units.BaseUnit: boolean isDimensionless()>();

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r54.<java.io.PrintStream: void println(java.lang.String)>($r57);

        return;
    }

    static void <clinit>()
    {
        java.util.TreeMap $r0, $r1;

        <ucar.units.BaseUnit: long serialVersionUID> = 1L;

        $r0 = new java.util.TreeMap;

        specialinvoke $r0.<java.util.TreeMap: void <init>()>();

        <ucar.units.BaseUnit: java.util.SortedMap nameMap> = $r0;

        $r1 = new java.util.TreeMap;

        specialinvoke $r1.<java.util.TreeMap: void <init>()>();

        <ucar.units.BaseUnit: java.util.SortedMap quantityMap> = $r1;

        return;
    }
}
