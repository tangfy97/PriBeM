public class org.eclipse.jetty.webapp.WebInfConfiguration extends org.eclipse.jetty.webapp.AbstractConfiguration
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    public static final java.lang.String TEMPDIR_CONFIGURED;
    public static final java.lang.String CONTAINER_JAR_PATTERN;
    public static final java.lang.String WEBINF_JAR_PATTERN;
    public static final java.lang.String RESOURCE_URLS;
    protected org.eclipse.jetty.util.resource.Resource _preUnpackBaseResource;

    public void <init>()
    {
        org.eclipse.jetty.webapp.WebInfConfiguration r0;

        r0 := @this: org.eclipse.jetty.webapp.WebInfConfiguration;

        specialinvoke r0.<org.eclipse.jetty.webapp.AbstractConfiguration: void <init>()>();

        return;
    }

    public void preConfigure(org.eclipse.jetty.webapp.WebAppContext) throws java.lang.Exception
    {
        org.eclipse.jetty.webapp.WebAppContext r1;
        java.net.URL r15;
        java.net.URISyntaxException $r19;
        java.net.URL[] $r14;
        java.net.URLClassLoader $r13;
        java.net.URI[] r26, r27;
        org.eclipse.jetty.webapp.WebInfConfiguration r0;
        java.net.URI $r12, $r16, $r20;
        boolean $z0, $z1;
        java.util.List $r9;
        java.util.regex.Pattern r4, r6, $r23, $r24;
        java.lang.ClassLoader r25;
        int $i0, $i1, $i2, i3, i4, i5, i6;
        java.lang.String $r17, $r18, $r21, $r22;
        java.util.Iterator $r10;
        java.io.File $r2;
        org.eclipse.jetty.webapp.WebInfConfiguration$1 $r7;
        org.eclipse.jetty.webapp.WebInfConfiguration$2 $r8;
        org.eclipse.jetty.util.resource.Resource r28;
        java.lang.Object $r3, $r5, $r11;

        r0 := @this: org.eclipse.jetty.webapp.WebInfConfiguration;

        r1 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        $r2 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebInfConfiguration: java.io.File findWorkDirectory(org.eclipse.jetty.webapp.WebAppContext)>(r1);

        if $r2 == null goto label01;

        virtualinvoke r0.<org.eclipse.jetty.webapp.WebInfConfiguration: void makeTempDirectory(java.io.File,org.eclipse.jetty.webapp.WebAppContext,boolean)>($r2, r1, 0);

     label01:
        virtualinvoke r0.<org.eclipse.jetty.webapp.WebInfConfiguration: void resolveTempDirectory(org.eclipse.jetty.webapp.WebAppContext)>(r1);

        virtualinvoke r0.<org.eclipse.jetty.webapp.WebInfConfiguration: void unpack(org.eclipse.jetty.webapp.WebAppContext)>(r1);

        $r3 = virtualinvoke r1.<org.eclipse.jetty.webapp.WebAppContext: java.lang.Object getAttribute(java.lang.String)>("org.eclipse.jetty.server.webapp.WebInfIncludeJarPattern");

        $r18 = (java.lang.String) $r3;

        if $r18 != null goto label02;

        $r23 = null;

        goto label03;

     label02:
        $r23 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r18);

     label03:
        r4 = $r23;

        $r5 = virtualinvoke r1.<org.eclipse.jetty.webapp.WebAppContext: java.lang.Object getAttribute(java.lang.String)>("org.eclipse.jetty.server.webapp.ContainerIncludeJarPattern");

        $r17 = (java.lang.String) $r5;

        if $r17 != null goto label04;

        $r24 = null;

        goto label05;

     label04:
        $r24 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r17);

     label05:
        r6 = $r24;

        $r7 = new org.eclipse.jetty.webapp.WebInfConfiguration$1;

        specialinvoke $r7.<org.eclipse.jetty.webapp.WebInfConfiguration$1: void <init>(org.eclipse.jetty.webapp.WebInfConfiguration,org.eclipse.jetty.webapp.WebAppContext)>(r0, r1);

        r25 = virtualinvoke r1.<org.eclipse.jetty.webapp.WebAppContext: java.lang.ClassLoader getClassLoader()>();

     label06:
        if r25 == null goto label14;

        $z1 = r25 instanceof java.net.URLClassLoader;

        if $z1 == 0 goto label14;

        $r13 = (java.net.URLClassLoader) r25;

        $r14 = virtualinvoke $r13.<java.net.URLClassLoader: java.net.URL[] getURLs()>();

        if $r14 == null goto label13;

        $i2 = lengthof $r14;

        r26 = newarray (java.net.URI)[$i2];

        i3 = 0;

        i4 = lengthof $r14;

        i5 = 0;

     label07:
        if i5 >= i4 goto label12;

        r15 = $r14[i5];

     label08:
        $r16 = virtualinvoke r15.<java.net.URL: java.net.URI toURI()>();

        r26[i3] = $r16;

     label09:
        goto label11;

     label10:
        $r19 := @caughtexception;

        $r20 = new java.net.URI;

        $r21 = virtualinvoke r15.<java.net.URL: java.lang.String toString()>();

        $r22 = virtualinvoke $r21.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(" ", "%20");

        specialinvoke $r20.<java.net.URI: void <init>(java.lang.String)>($r22);

        r26[i3] = $r20;

     label11:
        i3 = i3 + 1;

        i5 = i5 + 1;

        goto label07;

     label12:
        virtualinvoke $r7.<org.eclipse.jetty.util.PatternMatcher: void match(java.util.regex.Pattern,java.net.URI[],boolean)>(r6, r26, 0);

     label13:
        r25 = virtualinvoke r25.<java.lang.ClassLoader: java.lang.ClassLoader getParent()>();

        goto label06;

     label14:
        $r8 = new org.eclipse.jetty.webapp.WebInfConfiguration$2;

        specialinvoke $r8.<org.eclipse.jetty.webapp.WebInfConfiguration$2: void <init>(org.eclipse.jetty.webapp.WebInfConfiguration,org.eclipse.jetty.webapp.WebAppContext)>(r0, r1);

        $r9 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebInfConfiguration: java.util.List findJars(org.eclipse.jetty.webapp.WebAppContext)>(r1);

        r27 = null;

        if $r9 == null goto label16;

        $i0 = interfaceinvoke $r9.<java.util.List: int size()>();

        r27 = newarray (java.net.URI)[$i0];

        i6 = 0;

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label16;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r28 = (org.eclipse.jetty.util.resource.Resource) $r11;

        $i1 = i6;

        i6 = i6 + 1;

        $r12 = virtualinvoke r28.<org.eclipse.jetty.util.resource.Resource: java.net.URI getURI()>();

        r27[$i1] = $r12;

        goto label15;

     label16:
        virtualinvoke $r8.<org.eclipse.jetty.util.PatternMatcher: void match(java.util.regex.Pattern,java.net.URI[],boolean)>(r4, r27, 1);

        return;

        catch java.net.URISyntaxException from label08 to label09 with label10;
    }

    public void configure(org.eclipse.jetty.webapp.WebAppContext) throws java.lang.Exception
    {
        org.eclipse.jetty.webapp.WebAppContext r0;
        org.eclipse.jetty.webapp.WebInfConfiguration r22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.List $r24;
        java.lang.StringBuilder $r15, $r17, $r18, $r19;
        java.lang.ClassLoader $r7, $r10, $r12;
        java.lang.Object[] $r21;
        int $i0, $i1, $i2, i3;
        java.lang.String $r20;
        org.eclipse.jetty.util.resource.Resource[] r25;
        org.eclipse.jetty.webapp.WebAppClassLoader $r11, $r13;
        java.util.Iterator $r3;
        org.eclipse.jetty.util.resource.Resource $r1, $r2, r6, $r8, $r9;
        java.lang.Object $r5, $r23;
        org.eclipse.jetty.util.log.Logger $r14, $r16;
        org.eclipse.jetty.util.resource.ResourceCollection $r4;

        r22 := @this: org.eclipse.jetty.webapp.WebInfConfiguration;

        r0 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: boolean isStarted()>();

        if $z0 == 0 goto label2;

        $r14 = <org.eclipse.jetty.webapp.WebInfConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        $z7 = interfaceinvoke $r14.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z7 == 0 goto label1;

        $r16 = <org.eclipse.jetty.webapp.WebInfConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot configure webapp ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" after it is started");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = newarray (java.lang.Object)[0];

        interfaceinvoke $r16.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r20, $r21);

     label1:
        return;

     label2:
        $r1 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.util.resource.Resource getWebInf()>();

        if $r1 == null goto label5;

        $z2 = virtualinvoke $r1.<org.eclipse.jetty.util.resource.Resource: boolean isDirectory()>();

        if $z2 == 0 goto label5;

        $r7 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: java.lang.ClassLoader getClassLoader()>();

        $z3 = $r7 instanceof org.eclipse.jetty.webapp.WebAppClassLoader;

        if $z3 == 0 goto label5;

        $r8 = virtualinvoke $r1.<org.eclipse.jetty.util.resource.Resource: org.eclipse.jetty.util.resource.Resource addPath(java.lang.String)>("classes/");

        $z4 = virtualinvoke $r8.<org.eclipse.jetty.util.resource.Resource: boolean exists()>();

        if $z4 == 0 goto label3;

        $r12 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: java.lang.ClassLoader getClassLoader()>();

        $r13 = (org.eclipse.jetty.webapp.WebAppClassLoader) $r12;

        virtualinvoke $r13.<org.eclipse.jetty.webapp.WebAppClassLoader: void addClassPath(org.eclipse.jetty.util.resource.Resource)>($r8);

     label3:
        $r9 = virtualinvoke $r1.<org.eclipse.jetty.util.resource.Resource: org.eclipse.jetty.util.resource.Resource addPath(java.lang.String)>("lib/");

        $z5 = virtualinvoke $r9.<org.eclipse.jetty.util.resource.Resource: boolean exists()>();

        if $z5 != 0 goto label4;

        $z6 = virtualinvoke $r9.<org.eclipse.jetty.util.resource.Resource: boolean isDirectory()>();

        if $z6 == 0 goto label5;

     label4:
        $r10 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: java.lang.ClassLoader getClassLoader()>();

        $r11 = (org.eclipse.jetty.webapp.WebAppClassLoader) $r10;

        virtualinvoke $r11.<org.eclipse.jetty.webapp.WebAppClassLoader: void addJars(org.eclipse.jetty.util.resource.Resource)>($r9);

     label5:
        $r23 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: java.lang.Object getAttribute(java.lang.String)>("org.eclipse.jetty.resources");

        $r24 = (java.util.List) $r23;

        if $r24 == null goto label8;

        $i0 = interfaceinvoke $r24.<java.util.List: int size()>();

        $i1 = $i0 + 1;

        r25 = newarray (org.eclipse.jetty.util.resource.Resource)[$i1];

        i3 = 1;

        $r2 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.util.resource.Resource getBaseResource()>();

        r25[0] = $r2;

        $r3 = interfaceinvoke $r24.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.eclipse.jetty.util.resource.Resource) $r5;

        $i2 = i3;

        i3 = i3 + 1;

        r25[$i2] = r6;

        goto label6;

     label7:
        $r4 = new org.eclipse.jetty.util.resource.ResourceCollection;

        specialinvoke $r4.<org.eclipse.jetty.util.resource.ResourceCollection: void <init>(org.eclipse.jetty.util.resource.Resource[])>(r25);

        virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: void setBaseResource(org.eclipse.jetty.util.resource.Resource)>($r4);

     label8:
        return;
    }

    public void deconfigure(org.eclipse.jetty.webapp.WebAppContext) throws java.lang.Exception
    {
        org.eclipse.jetty.webapp.WebAppContext r0;
        java.io.File $r3, $r5, $r6;
        org.eclipse.jetty.util.resource.Resource $r7;
        org.eclipse.jetty.webapp.WebInfConfiguration r4;
        java.lang.Boolean r2;
        java.lang.Object $r1;
        boolean $z0, $z1;

        r4 := @this: org.eclipse.jetty.webapp.WebInfConfiguration;

        r0 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: java.lang.Object getAttribute(java.lang.String)>("org.eclipse.jetty.tmpdirConfigured");

        r2 = (java.lang.Boolean) $r1;

        $r3 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: java.io.File getTempDirectory()>();

        if $r3 == null goto label2;

        if r2 == null goto label1;

        $z1 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 != 0 goto label2;

     label1:
        $r5 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: java.io.File getTempDirectory()>();

        $z0 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebInfConfiguration: boolean isTempWorkDirectory(java.io.File)>($r5);

        if $z0 != 0 goto label2;

        $r6 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: java.io.File getTempDirectory()>();

        staticinvoke <org.eclipse.jetty.util.IO: boolean delete(java.io.File)>($r6);

        virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: void setTempDirectory(java.io.File)>(null);

        virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: void setAttribute(java.lang.String,java.lang.Object)>("org.eclipse.jetty.tmpdirConfigured", null);

        virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: void setAttribute(java.lang.String,java.lang.Object)>("javax.servlet.context.tempdir", null);

     label2:
        $r7 = r4.<org.eclipse.jetty.webapp.WebInfConfiguration: org.eclipse.jetty.util.resource.Resource _preUnpackBaseResource>;

        virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: void setBaseResource(org.eclipse.jetty.util.resource.Resource)>($r7);

        return;
    }

    public void cloneConfigure(org.eclipse.jetty.webapp.WebAppContext, org.eclipse.jetty.webapp.WebAppContext) throws java.lang.Exception
    {
        org.eclipse.jetty.webapp.WebAppContext r0, r2;
        java.io.File $r3, $r4, $r5;
        org.eclipse.jetty.webapp.WebInfConfiguration r6;
        java.lang.String $r1;
        boolean $z0;

        r6 := @this: org.eclipse.jetty.webapp.WebInfConfiguration;

        r2 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        r0 := @parameter1: org.eclipse.jetty.webapp.WebAppContext;

        $r1 = staticinvoke <org.eclipse.jetty.webapp.WebInfConfiguration: java.lang.String getCanonicalNameForWebAppTmpDir(org.eclipse.jetty.webapp.WebAppContext)>(r0);

        $r3 = virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: java.io.File getTempDirectory()>();

        $r4 = virtualinvoke $r3.<java.io.File: java.io.File getParentFile()>();

        $r5 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>($r1, "", $r4);

        $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        staticinvoke <org.eclipse.jetty.util.IO: boolean delete(java.io.File)>($r5);

     label1:
        virtualinvoke $r5.<java.io.File: boolean mkdir()>();

        virtualinvoke $r5.<java.io.File: void deleteOnExit()>();

        virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: void setTempDirectory(java.io.File)>($r5);

        return;
    }

    public void resolveTempDirectory(org.eclipse.jetty.webapp.WebAppContext)
    {
        org.eclipse.jetty.webapp.WebAppContext r0;
        org.eclipse.jetty.webapp.WebInfConfiguration r2;
        java.lang.Boolean $r5;
        java.lang.String $r13, $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.io.IOException $r6;
        java.io.File $r1, $r3, $r4, $r11, $r12, $r15, $r16;
        java.lang.Exception $r8;
        java.lang.Object $r10, $r14;
        org.eclipse.jetty.util.log.Logger $r7, $r9;

        r2 := @this: org.eclipse.jetty.webapp.WebInfConfiguration;

        r0 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: java.io.File getTempDirectory()>();

        if $r1 == null goto label01;

        $z7 = virtualinvoke $r1.<java.io.File: boolean isDirectory()>();

        if $z7 == 0 goto label01;

        $z8 = virtualinvoke $r1.<java.io.File: boolean canWrite()>();

        if $z8 == 0 goto label01;

        $r5 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: void setAttribute(java.lang.String,java.lang.Object)>("org.eclipse.jetty.tmpdirConfigured", $r5);

        return;

     label01:
        $r10 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: java.lang.Object getAttribute(java.lang.String)>("javax.servlet.context.tempdir");

        $r11 = specialinvoke r2.<org.eclipse.jetty.webapp.WebInfConfiguration: java.io.File asFile(java.lang.Object)>($r10);

        if $r11 == null goto label02;

        $z5 = virtualinvoke $r11.<java.io.File: boolean isDirectory()>();

        if $z5 == 0 goto label02;

        $z6 = virtualinvoke $r11.<java.io.File: boolean canWrite()>();

        if $z6 == 0 goto label02;

        virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: void setAttribute(java.lang.String,java.lang.Object)>("javax.servlet.context.tempdir", $r11);

        virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: void setTempDirectory(java.io.File)>($r11);

        return;

     label02:
        $r12 = new java.io.File;

        $r13 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("jetty.home");

        specialinvoke $r12.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r13, "work");

        $z9 = virtualinvoke $r12.<java.io.File: boolean exists()>();

        if $z9 == 0 goto label03;

        $z3 = virtualinvoke $r12.<java.io.File: boolean canWrite()>();

        if $z3 == 0 goto label03;

        $z4 = virtualinvoke $r12.<java.io.File: boolean isDirectory()>();

        if $z4 == 0 goto label03;

        virtualinvoke r2.<org.eclipse.jetty.webapp.WebInfConfiguration: void makeTempDirectory(java.io.File,org.eclipse.jetty.webapp.WebAppContext,boolean)>($r12, r0, 0);

        goto label05;

     label03:
        $r14 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: java.lang.Object getAttribute(java.lang.String)>("org.eclipse.jetty.webapp.basetempdir");

        $r15 = specialinvoke r2.<org.eclipse.jetty.webapp.WebInfConfiguration: java.io.File asFile(java.lang.Object)>($r14);

        if $r15 == null goto label04;

        $z1 = virtualinvoke $r15.<java.io.File: boolean isDirectory()>();

        if $z1 == 0 goto label04;

        $z2 = virtualinvoke $r15.<java.io.File: boolean canWrite()>();

        if $z2 == 0 goto label04;

        virtualinvoke r2.<org.eclipse.jetty.webapp.WebInfConfiguration: void makeTempDirectory(java.io.File,org.eclipse.jetty.webapp.WebAppContext,boolean)>($r15, r0, 0);

        goto label05;

     label04:
        $r16 = new java.io.File;

        $r17 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.io.tmpdir");

        specialinvoke $r16.<java.io.File: void <init>(java.lang.String)>($r17);

        virtualinvoke r2.<org.eclipse.jetty.webapp.WebInfConfiguration: void makeTempDirectory(java.io.File,org.eclipse.jetty.webapp.WebAppContext,boolean)>($r16, r0, 1);

     label05:
        goto label07;

     label06:
        $r8 := @caughtexception;

        $r9 = <org.eclipse.jetty.webapp.WebInfConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r9.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r8);

     label07:
        $r3 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: java.io.File getTempDirectory()>();

        if $r3 != null goto label12;

     label08:
        $r4 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>("JettyContext", "");

        $z0 = virtualinvoke $r4.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label09;

        staticinvoke <org.eclipse.jetty.util.IO: boolean delete(java.io.File)>($r4);

     label09:
        virtualinvoke $r4.<java.io.File: boolean mkdir()>();

        virtualinvoke $r4.<java.io.File: void deleteOnExit()>();

        virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: void setTempDirectory(java.io.File)>($r4);

     label10:
        goto label12;

     label11:
        $r6 := @caughtexception;

        $r7 = <org.eclipse.jetty.webapp.WebInfConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r7.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>("tmpdir", $r6);

        staticinvoke <java.lang.System: void exit(int)>(1);

     label12:
        return;

        catch java.lang.Exception from label02 to label05 with label06;
        catch java.io.IOException from label08 to label10 with label11;
    }

    private java.io.File asFile(java.lang.Object)
    {
        org.eclipse.jetty.webapp.WebInfConfiguration r4;
        java.lang.Object r0;
        java.lang.String $r2;
        java.io.File $r1, $r3;
        boolean $z0, $z1;

        r4 := @this: org.eclipse.jetty.webapp.WebInfConfiguration;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return null;

     label1:
        $z0 = r0 instanceof java.io.File;

        if $z0 == 0 goto label2;

        $r3 = (java.io.File) r0;

        return $r3;

     label2:
        $z1 = r0 instanceof java.lang.String;

        if $z1 == 0 goto label3;

        $r1 = new java.io.File;

        $r2 = (java.lang.String) r0;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r2);

        return $r1;

     label3:
        return null;
    }

    public void makeTempDirectory(java.io.File, org.eclipse.jetty.webapp.WebAppContext, boolean) throws java.io.IOException
    {
        org.eclipse.jetty.webapp.WebAppContext r1;
        org.eclipse.jetty.webapp.WebInfConfiguration r4;
        boolean $z0, $z1, $z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.lang.StringBuilder $r5, $r7, $r8, $r13, $r14, $r15, $r18, $r20, $r21, $r22, $r23, $r27, $r29, $r30;
        java.lang.Object[] $r10, $r25, $r32;
        java.lang.String $r2, $r9, $r12, $r16, $r24, $r31;
        java.io.File r0, $r3, $r11, $r17, r33;
        org.eclipse.jetty.util.log.Logger $r6, $r19, $r26, $r28, $r34;

        r4 := @this: org.eclipse.jetty.webapp.WebInfConfiguration;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: org.eclipse.jetty.webapp.WebAppContext;

        z3 := @parameter2: boolean;

        if r0 == null goto label7;

        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label7;

        $z1 = virtualinvoke r0.<java.io.File: boolean canWrite()>();

        if $z1 == 0 goto label7;

        $z2 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();

        if $z2 == 0 goto label7;

        $r2 = staticinvoke <org.eclipse.jetty.webapp.WebInfConfiguration: java.lang.String getCanonicalNameForWebAppTmpDir(org.eclipse.jetty.webapp.WebAppContext)>(r1);

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, $r2);

        r33 = $r3;

        if z3 == 0 goto label3;

        $z6 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z6 == 0 goto label3;

        $z7 = staticinvoke <org.eclipse.jetty.util.IO: boolean delete(java.io.File)>($r3);

        if $z7 != 0 goto label1;

        $r26 = <org.eclipse.jetty.webapp.WebInfConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        $z9 = interfaceinvoke $r26.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z9 == 0 goto label1;

        $r28 = <org.eclipse.jetty.webapp.WebInfConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to delete temp dir ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        $r32 = newarray (java.lang.Object)[0];

        interfaceinvoke $r28.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r31, $r32);

     label1:
        $z10 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z10 == 0 goto label3;

        $r12 = virtualinvoke $r3.<java.io.File: java.lang.String toString()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>($r16, "");

        r33 = $r17;

        $z8 = virtualinvoke $r17.<java.io.File: boolean exists()>();

        if $z8 == 0 goto label2;

        staticinvoke <org.eclipse.jetty.util.IO: boolean delete(java.io.File)>($r17);

     label2:
        $r19 = <org.eclipse.jetty.webapp.WebInfConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t reuse ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", using ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = newarray (java.lang.Object)[0];

        interfaceinvoke $r19.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r24, $r25);

     label3:
        $z11 = virtualinvoke r33.<java.io.File: boolean exists()>();

        if $z11 != 0 goto label4;

        virtualinvoke r33.<java.io.File: boolean mkdir()>();

     label4:
        $z4 = virtualinvoke r4.<org.eclipse.jetty.webapp.WebInfConfiguration: boolean isTempWorkDirectory(java.io.File)>(r33);

        if $z4 != 0 goto label5;

        virtualinvoke r33.<java.io.File: void deleteOnExit()>();

        $r11 = new java.io.File;

        specialinvoke $r11.<java.io.File: void <init>(java.io.File,java.lang.String)>(r33, ".active");

        $z5 = virtualinvoke $r11.<java.io.File: boolean exists()>();

        if $z5 != 0 goto label5;

        virtualinvoke $r11.<java.io.File: boolean mkdir()>();

     label5:
        $r34 = <org.eclipse.jetty.webapp.WebInfConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        $z12 = interfaceinvoke $r34.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z12 == 0 goto label6;

        $r6 = <org.eclipse.jetty.webapp.WebInfConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Set temp dir ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r33);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = newarray (java.lang.Object)[0];

        interfaceinvoke $r6.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r9, $r10);

     label6:
        virtualinvoke r1.<org.eclipse.jetty.webapp.WebAppContext: void setTempDirectory(java.io.File)>(r33);

     label7:
        return;
    }

    public void unpack(org.eclipse.jetty.webapp.WebAppContext) throws java.io.IOException
    {
        byte $b2;
        org.eclipse.jetty.webapp.WebInfConfiguration r2;
        java.lang.StringBuilder $r9, $r10, $r16, $r17, $r18, $r20, $r26, $r27, $r28, $r29, $r38, $r39, $r46, $r47, $r53, $r54, $r55, $r56, $r62, $r63, $r64, $r65, $r72, $r73, $r74, $r75, $r98, $r99, $r100, $r101, $r102, $r103, $r108, $r109, $r111, $r127, $r128, $r131, $r132, $r133, $r134, $r136, $r140, $r142, $r144;
        java.lang.Object[] $r12, $r22, $r31, $r41, $r49, $r58, $r67, $r77, $r105, $r113;
        long $l0, $l1;
        org.eclipse.jetty.util.resource.Resource $r1, $r3, $r4, $r5, $r59, $r68, $r80, $r95, r115, $r121, $r123;
        org.eclipse.jetty.util.resource.ResourceCollection $r143;
        int $i3, $i4, $i5, $i6;
        org.eclipse.jetty.util.resource.Resource[] $r125;
        org.eclipse.jetty.util.log.Logger $r8, $r15, $r25, $r35, $r37, $r43, $r45, $r52, $r61, $r71, $r97, $r107, $r126;
        java.lang.String $r11, $r19, $r21, $r30, $r34, $r40, $r48, $r57, $r66, $r76, $r82, $r83, $r85, $r86, $r87, $r88, $r94, $r104, $r112, $r118, $r122;
        java.io.File $r32, $r33, $r50, $r69, $r79, $r81, $r89, $r90, $r91, $r92, $r93, r117, $r120, $r129, $r130, $r137, $r138, $r139, $r141;
        org.eclipse.jetty.webapp.WebAppContext r0;
        java.net.URL $r110, $r114, $r116;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34;
        java.io.FileNotFoundException $r135;

        r2 := @this: org.eclipse.jetty.webapp.WebInfConfiguration;

        r0 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.util.resource.Resource getBaseResource()>();

        r115 = $r1;

        $r3 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.util.resource.Resource getBaseResource()>();

        r2.<org.eclipse.jetty.webapp.WebInfConfiguration: org.eclipse.jetty.util.resource.Resource _preUnpackBaseResource> = $r3;

        if $r1 != null goto label18;

        $r34 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: java.lang.String getWar()>();

        if $r34 == null goto label01;

        $i5 = virtualinvoke $r34.<java.lang.String: int length()>();

        if $i5 <= 0 goto label01;

        r115 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.util.resource.Resource newResource(java.lang.String)>($r34);

        goto label02;

     label01:
        r115 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.util.resource.Resource getBaseResource()>();

     label02:
        $r116 = virtualinvoke r115.<org.eclipse.jetty.util.resource.Resource: java.net.URL getAlias()>();

        if $r116 == null goto label03;

        $r107 = <org.eclipse.jetty.webapp.WebInfConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        $r127 = new java.lang.StringBuilder;

        specialinvoke $r127.<java.lang.StringBuilder: void <init>()>();

        $r108 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r115);

        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" anti-aliased to ");

        $r110 = virtualinvoke r115.<org.eclipse.jetty.util.resource.Resource: java.net.URL getAlias()>();

        $r111 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r110);

        $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.String toString()>();

        $r113 = newarray (java.lang.Object)[0];

        interfaceinvoke $r107.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r112, $r113);

        $r114 = virtualinvoke r115.<org.eclipse.jetty.util.resource.Resource: java.net.URL getAlias()>();

        r115 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.util.resource.Resource newResource(java.net.URL)>($r114);

     label03:
        $r35 = <org.eclipse.jetty.webapp.WebInfConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        $z7 = interfaceinvoke $r35.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z7 == 0 goto label04;

        $r97 = <org.eclipse.jetty.webapp.WebInfConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        $r128 = new java.lang.StringBuilder;

        specialinvoke $r128.<java.lang.StringBuilder: void <init>()>();

        $r98 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Try webapp=");

        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r115);

        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", exists=");

        $z25 = virtualinvoke r115.<org.eclipse.jetty.util.resource.Resource: boolean exists()>();

        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z25);

        $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", directory=");

        $z26 = virtualinvoke r115.<org.eclipse.jetty.util.resource.Resource: boolean isDirectory()>();

        $r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z26);

        $r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.String toString()>();

        $r105 = newarray (java.lang.Object)[0];

        interfaceinvoke $r97.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r104, $r105);

     label04:
        $z8 = virtualinvoke r115.<org.eclipse.jetty.util.resource.Resource: boolean exists()>();

        if $z8 == 0 goto label05;

        $z21 = virtualinvoke r115.<org.eclipse.jetty.util.resource.Resource: boolean isDirectory()>();

        if $z21 != 0 goto label05;

        $r94 = virtualinvoke r115.<java.lang.Object: java.lang.String toString()>();

        $z22 = virtualinvoke $r94.<java.lang.String: boolean startsWith(java.lang.String)>("jar:");

        if $z22 != 0 goto label05;

        $r95 = staticinvoke <org.eclipse.jetty.util.resource.JarResource: org.eclipse.jetty.util.resource.Resource newJarResource(org.eclipse.jetty.util.resource.Resource)>(r115);

        $z23 = virtualinvoke $r95.<org.eclipse.jetty.util.resource.Resource: boolean exists()>();

        if $z23 == 0 goto label05;

        $z24 = virtualinvoke $r95.<org.eclipse.jetty.util.resource.Resource: boolean isDirectory()>();

        if $z24 == 0 goto label05;

        r115 = $r95;

     label05:
        $z27 = virtualinvoke r115.<org.eclipse.jetty.util.resource.Resource: boolean exists()>();

        if $z27 == 0 goto label15;

        $z11 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: boolean isCopyWebDir()>();

        if $z11 == 0 goto label06;

        $r92 = virtualinvoke r115.<org.eclipse.jetty.util.resource.Resource: java.io.File getFile()>();

        if $r92 == null goto label06;

        $r93 = virtualinvoke r115.<org.eclipse.jetty.util.resource.Resource: java.io.File getFile()>();

        $z20 = virtualinvoke $r93.<java.io.File: boolean isDirectory()>();

        if $z20 != 0 goto label09;

     label06:
        $z28 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: boolean isExtractWAR()>();

        if $z28 == 0 goto label07;

        $r90 = virtualinvoke r115.<org.eclipse.jetty.util.resource.Resource: java.io.File getFile()>();

        if $r90 == null goto label07;

        $r91 = virtualinvoke r115.<org.eclipse.jetty.util.resource.Resource: java.io.File getFile()>();

        $z19 = virtualinvoke $r91.<java.io.File: boolean isDirectory()>();

        if $z19 == 0 goto label09;

     label07:
        $z29 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: boolean isExtractWAR()>();

        if $z29 == 0 goto label08;

        $r89 = virtualinvoke r115.<org.eclipse.jetty.util.resource.Resource: java.io.File getFile()>();

        if $r89 == null goto label09;

     label08:
        $z12 = virtualinvoke r115.<org.eclipse.jetty.util.resource.Resource: boolean isDirectory()>();

        if $z12 != 0 goto label15;

     label09:
        r117 = null;

        if $r34 == null goto label10;

        $r80 = staticinvoke <org.eclipse.jetty.util.resource.Resource: org.eclipse.jetty.util.resource.Resource newResource(java.lang.String)>($r34);

        $r81 = virtualinvoke $r80.<org.eclipse.jetty.util.resource.Resource: java.io.File getFile()>();

        if $r81 == null goto label10;

        $r82 = virtualinvoke $r81.<java.io.File: java.lang.String getName()>();

        $r83 = virtualinvoke $r82.<java.lang.String: java.lang.String toLowerCase()>();

        $z15 = virtualinvoke $r83.<java.lang.String: boolean endsWith(java.lang.String)>(".war");

        if $z15 == 0 goto label10;

        $r129 = new java.io.File;

        $r85 = virtualinvoke $r81.<java.io.File: java.lang.String getParent()>();

        $r86 = virtualinvoke $r81.<java.io.File: java.lang.String getName()>();

        $r87 = virtualinvoke $r81.<java.io.File: java.lang.String getName()>();

        $i3 = virtualinvoke $r87.<java.lang.String: int length()>();

        $i4 = $i3 - 4;

        $r88 = virtualinvoke $r86.<java.lang.String: java.lang.String substring(int,int)>(0, $i4);

        specialinvoke $r129.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r85, $r88);

        $z16 = virtualinvoke $r129.<java.io.File: boolean exists()>();

        if $z16 == 0 goto label10;

        $z17 = virtualinvoke $r129.<java.io.File: boolean isDirectory()>();

        if $z17 == 0 goto label10;

        $z18 = virtualinvoke $r129.<java.io.File: boolean canWrite()>();

        if $z18 == 0 goto label10;

        r117 = $r129;

     label10:
        if r117 != null goto label11;

        $r130 = new java.io.File;

        $r79 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: java.io.File getTempDirectory()>();

        specialinvoke $r130.<java.io.File: void <init>(java.io.File,java.lang.String)>($r79, "webapp");

        r117 = $r130;

     label11:
        $r50 = virtualinvoke r115.<org.eclipse.jetty.util.resource.Resource: java.io.File getFile()>();

        if $r50 == null goto label12;

        $r69 = virtualinvoke r115.<org.eclipse.jetty.util.resource.Resource: java.io.File getFile()>();

        $z14 = virtualinvoke $r69.<java.io.File: boolean isDirectory()>();

        if $z14 == 0 goto label12;

        $r71 = <org.eclipse.jetty.webapp.WebInfConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        $r131 = new java.lang.StringBuilder;

        specialinvoke $r131.<java.lang.StringBuilder: void <init>()>();

        $r72 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Copy ");

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r115);

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r117);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        $r77 = newarray (java.lang.Object)[0];

        interfaceinvoke $r71.<org.eclipse.jetty.util.log.Logger: void info(java.lang.String,java.lang.Object[])>($r76, $r77);

        virtualinvoke r115.<org.eclipse.jetty.util.resource.Resource: void copyTo(java.io.File)>(r117);

        goto label14;

     label12:
        $z13 = virtualinvoke r117.<java.io.File: boolean exists()>();

        if $z13 != 0 goto label13;

        virtualinvoke r117.<java.io.File: boolean mkdir()>();

        $r61 = <org.eclipse.jetty.webapp.WebInfConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        $r132 = new java.lang.StringBuilder;

        specialinvoke $r132.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Extract ");

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r115);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r117);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        $r67 = newarray (java.lang.Object)[0];

        interfaceinvoke $r61.<org.eclipse.jetty.util.log.Logger: void info(java.lang.String,java.lang.Object[])>($r66, $r67);

        $r68 = staticinvoke <org.eclipse.jetty.util.resource.JarResource: org.eclipse.jetty.util.resource.Resource newJarResource(org.eclipse.jetty.util.resource.Resource)>(r115);

        virtualinvoke $r68.<org.eclipse.jetty.util.resource.Resource: void copyTo(java.io.File)>(r117);

        goto label14;

     label13:
        $l0 = virtualinvoke r115.<org.eclipse.jetty.util.resource.Resource: long lastModified()>();

        $l1 = virtualinvoke r117.<java.io.File: long lastModified()>();

        $b2 = $l0 cmp $l1;

        $i6 = (int) $b2;

        if $i6 <= 0 goto label14;

        staticinvoke <org.eclipse.jetty.util.IO: boolean delete(java.io.File)>(r117);

        virtualinvoke r117.<java.io.File: boolean mkdir()>();

        $r52 = <org.eclipse.jetty.webapp.WebInfConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        $r133 = new java.lang.StringBuilder;

        specialinvoke $r133.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Extract ");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r115);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r117);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        $r58 = newarray (java.lang.Object)[0];

        interfaceinvoke $r52.<org.eclipse.jetty.util.log.Logger: void info(java.lang.String,java.lang.Object[])>($r57, $r58);

        $r59 = staticinvoke <org.eclipse.jetty.util.resource.JarResource: org.eclipse.jetty.util.resource.Resource newJarResource(org.eclipse.jetty.util.resource.Resource)>(r115);

        virtualinvoke $r59.<org.eclipse.jetty.util.resource.Resource: void copyTo(java.io.File)>(r117);

     label14:
        $r118 = virtualinvoke r117.<java.io.File: java.lang.String getCanonicalPath()>();

        r115 = staticinvoke <org.eclipse.jetty.util.resource.Resource: org.eclipse.jetty.util.resource.Resource newResource(java.lang.String)>($r118);

     label15:
        $z30 = virtualinvoke r115.<org.eclipse.jetty.util.resource.Resource: boolean exists()>();

        if $z30 == 0 goto label16;

        $z9 = virtualinvoke r115.<org.eclipse.jetty.util.resource.Resource: boolean isDirectory()>();

        if $z9 != 0 goto label17;

     label16:
        $r37 = <org.eclipse.jetty.webapp.WebInfConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        $r134 = new java.lang.StringBuilder;

        specialinvoke $r134.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Web application not found ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        $r41 = newarray (java.lang.Object)[0];

        interfaceinvoke $r37.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>($r40, $r41);

        $r135 = new java.io.FileNotFoundException;

        specialinvoke $r135.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r34);

        throw $r135;

     label17:
        virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: void setBaseResource(org.eclipse.jetty.util.resource.Resource)>(r115);

        $r43 = <org.eclipse.jetty.webapp.WebInfConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        $z10 = interfaceinvoke $r43.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z10 == 0 goto label18;

        $r45 = <org.eclipse.jetty.webapp.WebInfConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        $r136 = new java.lang.StringBuilder;

        specialinvoke $r136.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("webapp=");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r115);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        $r49 = newarray (java.lang.Object)[0];

        interfaceinvoke $r45.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r48, $r49);

     label18:
        $z31 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: boolean isCopyWebInf()>();

        if $z31 == 0 goto label26;

        $r4 = virtualinvoke r115.<org.eclipse.jetty.util.resource.Resource: org.eclipse.jetty.util.resource.Resource addPath(java.lang.String)>("WEB-INF/");

        $z0 = $r4 instanceof org.eclipse.jetty.util.resource.ResourceCollection;

        if $z0 != 0 goto label19;

        $z4 = virtualinvoke $r4.<org.eclipse.jetty.util.resource.Resource: boolean exists()>();

        if $z4 == 0 goto label26;

        $z5 = virtualinvoke $r4.<org.eclipse.jetty.util.resource.Resource: boolean isDirectory()>();

        if $z5 == 0 goto label26;

        $r32 = virtualinvoke $r4.<org.eclipse.jetty.util.resource.Resource: java.io.File getFile()>();

        if $r32 == null goto label19;

        $r33 = virtualinvoke $r4.<org.eclipse.jetty.util.resource.Resource: java.io.File getFile()>();

        $z6 = virtualinvoke $r33.<java.io.File: boolean isDirectory()>();

        if $z6 != 0 goto label26;

     label19:
        $r137 = new java.io.File;

        $r120 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: java.io.File getTempDirectory()>();

        specialinvoke $r137.<java.io.File: void <init>(java.io.File,java.lang.String)>($r120, "webinf");

        $z32 = virtualinvoke $r137.<java.io.File: boolean exists()>();

        if $z32 == 0 goto label20;

        staticinvoke <org.eclipse.jetty.util.IO: boolean delete(java.io.File)>($r137);

     label20:
        virtualinvoke $r137.<java.io.File: boolean mkdir()>();

        $r5 = virtualinvoke $r4.<org.eclipse.jetty.util.resource.Resource: org.eclipse.jetty.util.resource.Resource addPath(java.lang.String)>("lib/");

        $r138 = new java.io.File;

        specialinvoke $r138.<java.io.File: void <init>(java.io.File,java.lang.String)>($r137, "WEB-INF");

        virtualinvoke $r138.<java.io.File: boolean mkdir()>();

        $z1 = virtualinvoke $r5.<org.eclipse.jetty.util.resource.Resource: boolean exists()>();

        if $z1 == 0 goto label22;

        $r139 = new java.io.File;

        specialinvoke $r139.<java.io.File: void <init>(java.io.File,java.lang.String)>($r138, "lib");

        $z3 = virtualinvoke $r139.<java.io.File: boolean exists()>();

        if $z3 == 0 goto label21;

        staticinvoke <org.eclipse.jetty.util.IO: boolean delete(java.io.File)>($r139);

     label21:
        virtualinvoke $r139.<java.io.File: boolean mkdir()>();

        $r25 = <org.eclipse.jetty.webapp.WebInfConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        $r140 = new java.lang.StringBuilder;

        specialinvoke $r140.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Copying WEB-INF/lib ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r139);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        $r31 = newarray (java.lang.Object)[0];

        interfaceinvoke $r25.<org.eclipse.jetty.util.log.Logger: void info(java.lang.String,java.lang.Object[])>($r30, $r31);

        virtualinvoke $r5.<org.eclipse.jetty.util.resource.Resource: void copyTo(java.io.File)>($r139);

     label22:
        $r121 = virtualinvoke $r4.<org.eclipse.jetty.util.resource.Resource: org.eclipse.jetty.util.resource.Resource addPath(java.lang.String)>("classes/");

        $z33 = virtualinvoke $r121.<org.eclipse.jetty.util.resource.Resource: boolean exists()>();

        if $z33 == 0 goto label24;

        $r141 = new java.io.File;

        specialinvoke $r141.<java.io.File: void <init>(java.io.File,java.lang.String)>($r138, "classes");

        $z2 = virtualinvoke $r141.<java.io.File: boolean exists()>();

        if $z2 == 0 goto label23;

        staticinvoke <org.eclipse.jetty.util.IO: boolean delete(java.io.File)>($r141);

     label23:
        virtualinvoke $r141.<java.io.File: boolean mkdir()>();

        $r15 = <org.eclipse.jetty.webapp.WebInfConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        $r142 = new java.lang.StringBuilder;

        specialinvoke $r142.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Copying WEB-INF/classes from ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r121);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r19 = virtualinvoke $r141.<java.io.File: java.lang.String getAbsolutePath()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r22 = newarray (java.lang.Object)[0];

        interfaceinvoke $r15.<org.eclipse.jetty.util.log.Logger: void info(java.lang.String,java.lang.Object[])>($r21, $r22);

        virtualinvoke $r121.<org.eclipse.jetty.util.resource.Resource: void copyTo(java.io.File)>($r141);

     label24:
        $r122 = virtualinvoke $r137.<java.io.File: java.lang.String getCanonicalPath()>();

        $r123 = staticinvoke <org.eclipse.jetty.util.resource.Resource: org.eclipse.jetty.util.resource.Resource newResource(java.lang.String)>($r122);

        $r143 = new org.eclipse.jetty.util.resource.ResourceCollection;

        $r125 = newarray (org.eclipse.jetty.util.resource.Resource)[2];

        $r125[0] = $r123;

        $r125[1] = r115;

        specialinvoke $r143.<org.eclipse.jetty.util.resource.ResourceCollection: void <init>(org.eclipse.jetty.util.resource.Resource[])>($r125);

        $r126 = <org.eclipse.jetty.webapp.WebInfConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        $z34 = interfaceinvoke $r126.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z34 == 0 goto label25;

        $r8 = <org.eclipse.jetty.webapp.WebInfConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        $r144 = new java.lang.StringBuilder;

        specialinvoke $r144.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("context.resourcebase = ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r143);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = newarray (java.lang.Object)[0];

        interfaceinvoke $r8.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r11, $r12);

     label25:
        virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: void setBaseResource(org.eclipse.jetty.util.resource.Resource)>($r143);

     label26:
        return;
    }

    public java.io.File findWorkDirectory(org.eclipse.jetty.webapp.WebAppContext) throws java.io.IOException
    {
        org.eclipse.jetty.webapp.WebAppContext r0;
        org.eclipse.jetty.util.resource.Resource $r1, $r2;
        org.eclipse.jetty.webapp.WebInfConfiguration r5;
        java.io.File $r3, $r4;
        boolean $z0;

        r5 := @this: org.eclipse.jetty.webapp.WebInfConfiguration;

        r0 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.util.resource.Resource getBaseResource()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.util.resource.Resource getWebInf()>();

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<org.eclipse.jetty.util.resource.Resource: boolean exists()>();

        if $z0 == 0 goto label1;

        $r3 = new java.io.File;

        $r4 = virtualinvoke $r2.<org.eclipse.jetty.util.resource.Resource: java.io.File getFile()>();

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, "work");

        return $r3;

     label1:
        return null;
    }

    public boolean isTempWorkDirectory(java.io.File)
    {
        org.eclipse.jetty.webapp.WebInfConfiguration r4;
        java.lang.String $r1, $r3;
        java.io.File r0, $r2;
        boolean $z0, $z1;

        r4 := @this: org.eclipse.jetty.webapp.WebInfConfiguration;

        r0 := @parameter0: java.io.File;

        if r0 != null goto label1;

        return 0;

     label1:
        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("work");

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $r2 = virtualinvoke r0.<java.io.File: java.io.File getParentFile()>();

        if $r2 != null goto label3;

        return 0;

     label3:
        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getName()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("work");

        return $z1;
    }

    public static java.lang.String getCanonicalNameForWebAppTmpDir(org.eclipse.jetty.webapp.WebAppContext)
    {
        org.eclipse.jetty.webapp.WebAppContext r1;
        java.net.URL $r28;
        org.eclipse.jetty.server.Server $r2, $r14;
        boolean $z0, $z1, $z2;
        java.lang.Exception $r21;
        java.lang.String[] $r7;
        java.lang.StringBuffer $r32;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, $i15, $i16;
        java.lang.String $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r23, r24, $r27, $r29, $r30, r31;
        org.eclipse.jetty.server.Connector[] $r15;
        char $c3;
        org.eclipse.jetty.util.resource.Resource $r25, r26;
        org.eclipse.jetty.util.log.Logger $r22;
        org.eclipse.jetty.server.Connector $r16, $r17, $r18, $r19, $r20;

        r1 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        $r32 = new java.lang.StringBuffer;

        specialinvoke $r32.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("jetty-");

        $r2 = virtualinvoke r1.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.Server getServer()>();

        if $r2 == null goto label09;

        $r14 = virtualinvoke r1.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.server.Server getServer()>();

        $r15 = virtualinvoke $r14.<org.eclipse.jetty.server.Server: org.eclipse.jetty.server.Connector[] getConnectors()>();

        $i11 = lengthof $r15;

        if $i11 <= 0 goto label09;

        if $r15 == null goto label01;

        $r19 = $r15[0];

        if $r19 != null goto label02;

     label01:
        $r23 = "";

        goto label03;

     label02:
        $r20 = $r15[0];

        $r23 = interfaceinvoke $r20.<org.eclipse.jetty.server.Connector: java.lang.String getHost()>();

     label03:
        r24 = $r23;

        if $r23 != null goto label04;

        r24 = "0.0.0.0";

     label04:
        virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r24);

        virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-");

        if $r15 == null goto label05;

        $r17 = $r15[0];

        if $r17 != null goto label06;

     label05:
        $i12 = 0;

        goto label07;

     label06:
        $r18 = $r15[0];

        $i12 = interfaceinvoke $r18.<org.eclipse.jetty.server.Connector: int getLocalPort()>();

     label07:
        i13 = $i12;

        if $i12 >= 0 goto label08;

        $r16 = $r15[0];

        i13 = interfaceinvoke $r16.<org.eclipse.jetty.server.Connector: int getPort()>();

     label08:
        virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i13);

        virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-");

     label09:
        $r25 = virtualinvoke r1.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.util.resource.Resource getBaseResource()>();

        r26 = $r25;

        if $r25 != null goto label12;

        $r11 = virtualinvoke r1.<org.eclipse.jetty.webapp.WebAppContext: java.lang.String getWar()>();

        if $r11 == null goto label10;

        $r13 = virtualinvoke r1.<org.eclipse.jetty.webapp.WebAppContext: java.lang.String getWar()>();

        $i10 = virtualinvoke $r13.<java.lang.String: int length()>();

        if $i10 != 0 goto label11;

     label10:
        $r12 = virtualinvoke r1.<org.eclipse.jetty.webapp.WebAppContext: java.lang.String getResourceBase()>();

        virtualinvoke r1.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.util.resource.Resource newResource(java.lang.String)>($r12);

     label11:
        $r27 = virtualinvoke r1.<org.eclipse.jetty.webapp.WebAppContext: java.lang.String getWar()>();

        r26 = virtualinvoke r1.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.util.resource.Resource newResource(java.lang.String)>($r27);

     label12:
        $r28 = virtualinvoke r26.<org.eclipse.jetty.util.resource.Resource: java.net.URL getURL()>();

        $r29 = virtualinvoke $r28.<java.net.URL: java.lang.String getPath()>();

        $r30 = staticinvoke <org.eclipse.jetty.util.URIUtil: java.lang.String decodePath(java.lang.String)>($r29);

        r31 = $r30;

        $z2 = virtualinvoke $r30.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z2 == 0 goto label13;

        $i8 = virtualinvoke $r30.<java.lang.String: int length()>();

        $i9 = $i8 - 1;

        r31 = virtualinvoke $r30.<java.lang.String: java.lang.String substring(int,int)>(0, $i9);

     label13:
        $z0 = virtualinvoke r31.<java.lang.String: boolean endsWith(java.lang.String)>("!");

        if $z0 == 0 goto label14;

        $i6 = virtualinvoke r31.<java.lang.String: int length()>();

        $i7 = $i6 - 1;

        r31 = virtualinvoke r31.<java.lang.String: java.lang.String substring(int,int)>(0, $i7);

     label14:
        $i0 = virtualinvoke r31.<java.lang.String: int lastIndexOf(java.lang.String)>("/");

        $i1 = $i0 + 1;

        $i2 = virtualinvoke r31.<java.lang.String: int length()>();

        $r3 = virtualinvoke r31.<java.lang.String: java.lang.String substring(int,int)>($i1, $i2);

        virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-");

     label15:
        goto label17;

     label16:
        $r21 := @caughtexception;

        $r22 = <org.eclipse.jetty.webapp.WebInfConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r22.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>("Can\'t generate resourceBase as part of webapp tmp dir name", $r21);

     label17:
        $r4 = virtualinvoke r1.<org.eclipse.jetty.webapp.WebAppContext: java.lang.String getContextPath()>();

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(char,char)>(47, 95);

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String replace(char,char)>(92, 95);

        virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-");

        $r7 = virtualinvoke r1.<org.eclipse.jetty.webapp.WebAppContext: java.lang.String[] getVirtualHosts()>();

        if $r7 == null goto label18;

        $i5 = lengthof $r7;

        if $i5 > 0 goto label19;

     label18:
        virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("any");

        goto label20;

     label19:
        $r10 = $r7[0];

        virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

     label20:
        i14 = 0;

     label21:
        $i15 = virtualinvoke $r32.<java.lang.StringBuffer: int length()>();

        if i14 >= $i15 goto label23;

        $c3 = virtualinvoke $r32.<java.lang.StringBuffer: char charAt(int)>(i14);

        $z1 = staticinvoke <java.lang.Character: boolean isJavaIdentifierPart(char)>($c3);

        if $z1 != 0 goto label22;

        $r9 = "-.";

        $i16 = (int) $c3;

        $i4 = virtualinvoke $r9.<java.lang.String: int indexOf(int)>($i16);

        if $i4 >= 0 goto label22;

        virtualinvoke $r32.<java.lang.StringBuffer: void setCharAt(int,char)>(i14, 46);

     label22:
        i14 = i14 + 1;

        goto label21;

     label23:
        virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-");

        $r8 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;

        catch java.lang.Exception from label09 to label15 with label16;
    }

    protected java.util.List findJars(org.eclipse.jetty.webapp.WebAppContext) throws java.lang.Exception
    {
        org.eclipse.jetty.webapp.WebAppContext r1;
        java.lang.String[] $r4;
        java.util.ArrayList $r0;
        org.eclipse.jetty.webapp.WebInfConfiguration r11;
        int $i0, $i1, i2;
        java.lang.String $r5, $r7, $r8, $r12;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Exception $r9;
        org.eclipse.jetty.util.resource.Resource $r2, $r3, $r6;
        org.eclipse.jetty.util.log.Logger $r10;

        r11 := @this: org.eclipse.jetty.webapp.WebInfConfiguration;

        r1 := @parameter0: org.eclipse.jetty.webapp.WebAppContext;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = virtualinvoke r1.<org.eclipse.jetty.webapp.WebAppContext: org.eclipse.jetty.util.resource.Resource getWebInf()>();

        if $r2 == null goto label01;

        $z0 = virtualinvoke $r2.<org.eclipse.jetty.util.resource.Resource: boolean exists()>();

        if $z0 != 0 goto label02;

     label01:
        return null;

     label02:
        $r3 = virtualinvoke $r2.<org.eclipse.jetty.util.resource.Resource: org.eclipse.jetty.util.resource.Resource addPath(java.lang.String)>("/lib");

        $z1 = virtualinvoke $r3.<org.eclipse.jetty.util.resource.Resource: boolean exists()>();

        if $z1 == 0 goto label11;

        $z2 = virtualinvoke $r3.<org.eclipse.jetty.util.resource.Resource: boolean isDirectory()>();

        if $z2 == 0 goto label11;

        $r4 = virtualinvoke $r3.<org.eclipse.jetty.util.resource.Resource: java.lang.String[] list()>();

        i2 = 0;

     label03:
        if $r4 == null goto label11;

        $i0 = lengthof $r4;

        if i2 >= $i0 goto label11;

     label04:
        $r5 = $r4[i2];

        $r6 = virtualinvoke $r3.<org.eclipse.jetty.util.resource.Resource: org.eclipse.jetty.util.resource.Resource addPath(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<org.eclipse.jetty.util.resource.Resource: java.lang.String getName()>();

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String toLowerCase()>();

        $i1 = virtualinvoke $r8.<java.lang.String: int lastIndexOf(int)>(46);

        if $i1 >= 0 goto label05;

        $r12 = null;

        goto label06;

     label05:
        $r12 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int)>($i1);

     label06:
        if $r12 == null goto label08;

        $z3 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(".jar");

        if $z3 != 0 goto label07;

        $z4 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(".zip");

        if $z4 == 0 goto label08;

     label07:
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

     label08:
        goto label10;

     label09:
        $r9 := @caughtexception;

        $r10 = <org.eclipse.jetty.webapp.WebInfConfiguration: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r10.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>("EXCEPTION ", $r9);

     label10:
        i2 = i2 + 1;

        goto label03;

     label11:
        return $r0;

        catch java.lang.Exception from label04 to label08 with label09;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        <org.eclipse.jetty.webapp.WebInfConfiguration: java.lang.String RESOURCE_URLS> = "org.eclipse.jetty.resources";

        <org.eclipse.jetty.webapp.WebInfConfiguration: java.lang.String WEBINF_JAR_PATTERN> = "org.eclipse.jetty.server.webapp.WebInfIncludeJarPattern";

        <org.eclipse.jetty.webapp.WebInfConfiguration: java.lang.String CONTAINER_JAR_PATTERN> = "org.eclipse.jetty.server.webapp.ContainerIncludeJarPattern";

        <org.eclipse.jetty.webapp.WebInfConfiguration: java.lang.String TEMPDIR_CONFIGURED> = "org.eclipse.jetty.tmpdirConfigured";

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/webapp/WebInfConfiguration;");

        <org.eclipse.jetty.webapp.WebInfConfiguration: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
