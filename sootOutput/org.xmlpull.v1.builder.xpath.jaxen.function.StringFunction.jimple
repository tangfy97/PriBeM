public class org.xmlpull.v1.builder.xpath.jaxen.function.StringFunction extends java.lang.Object implements org.xmlpull.v1.builder.xpath.jaxen.Function
{

    public void <init>()
    {
        org.xmlpull.v1.builder.xpath.jaxen.function.StringFunction r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.function.StringFunction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object call(org.xmlpull.v1.builder.xpath.jaxen.Context, java.util.List) throws org.xmlpull.v1.builder.xpath.jaxen.FunctionCallException
    {
        org.xmlpull.v1.builder.xpath.jaxen.Context r3;
        java.util.List r0, $r6;
        org.xmlpull.v1.builder.xpath.jaxen.FunctionCallException $r1;
        int $i0;
        java.lang.Object $r2;
        java.lang.String $r5, $r8;
        org.xmlpull.v1.builder.xpath.jaxen.function.StringFunction r9;
        org.xmlpull.v1.builder.xpath.jaxen.Navigator $r4, $r7;

        r9 := @this: org.xmlpull.v1.builder.xpath.jaxen.function.StringFunction;

        r3 := @parameter0: org.xmlpull.v1.builder.xpath.jaxen.Context;

        r0 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r6 = virtualinvoke r3.<org.xmlpull.v1.builder.xpath.jaxen.Context: java.util.List getNodeSet()>();

        $r7 = virtualinvoke r3.<org.xmlpull.v1.builder.xpath.jaxen.Context: org.xmlpull.v1.builder.xpath.jaxen.Navigator getNavigator()>();

        $r8 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.function.StringFunction: java.lang.String evaluate(java.lang.Object,org.xmlpull.v1.builder.xpath.jaxen.Navigator)>($r6, $r7);

        return $r8;

     label1:
        if $i0 != 1 goto label2;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = virtualinvoke r3.<org.xmlpull.v1.builder.xpath.jaxen.Context: org.xmlpull.v1.builder.xpath.jaxen.Navigator getNavigator()>();

        $r5 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.function.StringFunction: java.lang.String evaluate(java.lang.Object,org.xmlpull.v1.builder.xpath.jaxen.Navigator)>($r2, $r4);

        return $r5;

     label2:
        $r1 = new org.xmlpull.v1.builder.xpath.jaxen.FunctionCallException;

        specialinvoke $r1.<org.xmlpull.v1.builder.xpath.jaxen.FunctionCallException: void <init>(java.lang.String)>("string() requires one argument.");

        throw $r1;
    }

    public static java.lang.String evaluate(java.lang.Object, org.xmlpull.v1.builder.xpath.jaxen.Navigator)
    {
        byte $b1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.util.List r15;
        float $f0, $f1;
        org.xmlpull.v1.builder.xpath.jaxen.Navigator r1;
        java.lang.Double r16;
        int $i0, $i2, $i3, $i4;
        java.lang.String $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        java.lang.Object r0, $r6;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: org.xmlpull.v1.builder.xpath.jaxen.Navigator;

        if r0 != null goto label01;

        return "";

     label01:
        $z0 = r0 instanceof java.lang.String;

        if $z0 == 0 goto label02;

        $r14 = (java.lang.String) r0;

        return $r14;

     label02:
        $z1 = interfaceinvoke r1.<org.xmlpull.v1.builder.xpath.jaxen.Navigator: boolean isElement(java.lang.Object)>(r0);

        if $z1 == 0 goto label03;

        $r13 = interfaceinvoke r1.<org.xmlpull.v1.builder.xpath.jaxen.Navigator: java.lang.String getElementStringValue(java.lang.Object)>(r0);

        return $r13;

     label03:
        $z2 = interfaceinvoke r1.<org.xmlpull.v1.builder.xpath.jaxen.Navigator: boolean isAttribute(java.lang.Object)>(r0);

        if $z2 == 0 goto label04;

        $r12 = interfaceinvoke r1.<org.xmlpull.v1.builder.xpath.jaxen.Navigator: java.lang.String getAttributeStringValue(java.lang.Object)>(r0);

        return $r12;

     label04:
        $z3 = interfaceinvoke r1.<org.xmlpull.v1.builder.xpath.jaxen.Navigator: boolean isText(java.lang.Object)>(r0);

        if $z3 == 0 goto label05;

        $r11 = interfaceinvoke r1.<org.xmlpull.v1.builder.xpath.jaxen.Navigator: java.lang.String getTextStringValue(java.lang.Object)>(r0);

        return $r11;

     label05:
        $z4 = interfaceinvoke r1.<org.xmlpull.v1.builder.xpath.jaxen.Navigator: boolean isProcessingInstruction(java.lang.Object)>(r0);

        if $z4 == 0 goto label06;

        $r10 = interfaceinvoke r1.<org.xmlpull.v1.builder.xpath.jaxen.Navigator: java.lang.String getProcessingInstructionData(java.lang.Object)>(r0);

        return $r10;

     label06:
        $z5 = interfaceinvoke r1.<org.xmlpull.v1.builder.xpath.jaxen.Navigator: boolean isComment(java.lang.Object)>(r0);

        if $z5 == 0 goto label07;

        $r9 = interfaceinvoke r1.<org.xmlpull.v1.builder.xpath.jaxen.Navigator: java.lang.String getCommentStringValue(java.lang.Object)>(r0);

        return $r9;

     label07:
        $z6 = interfaceinvoke r1.<org.xmlpull.v1.builder.xpath.jaxen.Navigator: boolean isNamespace(java.lang.Object)>(r0);

        if $z6 == 0 goto label08;

        $r8 = interfaceinvoke r1.<org.xmlpull.v1.builder.xpath.jaxen.Navigator: java.lang.String getNamespaceStringValue(java.lang.Object)>(r0);

        return $r8;

     label08:
        $z7 = r0 instanceof java.util.List;

        if $z7 == 0 goto label10;

        r15 = (java.util.List) r0;

        $i4 = interfaceinvoke r15.<java.util.List: int size()>();

        if $i4 <= 0 goto label09;

        $r6 = interfaceinvoke r15.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = staticinvoke <org.xmlpull.v1.builder.xpath.jaxen.function.StringFunction: java.lang.String evaluate(java.lang.Object,org.xmlpull.v1.builder.xpath.jaxen.Navigator)>($r6, r1);

        return $r7;

     label09:
        goto label17;

     label10:
        $z8 = r0 instanceof java.lang.Boolean;

        if $z8 == 0 goto label11;

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r5;

     label11:
        $z9 = r0 instanceof java.lang.Integer;

        if $z9 == 0 goto label12;

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r4;

     label12:
        $z10 = r0 instanceof java.lang.Double;

        if $z10 == 0 goto label17;

        r16 = (java.lang.Double) r0;

        $z11 = virtualinvoke r16.<java.lang.Double: boolean isNaN()>();

        if $z11 == 0 goto label13;

        return "NaN";

     label13:
        $z12 = virtualinvoke r16.<java.lang.Double: boolean isInfinite()>();

        if $z12 == 0 goto label15;

        $i3 = virtualinvoke r16.<java.lang.Double: int intValue()>();

        if $i3 >= 0 goto label14;

        return "-Infinity";

     label14:
        return "Infinity";

     label15:
        $f0 = virtualinvoke r16.<java.lang.Double: float floatValue()>();

        $i0 = virtualinvoke r16.<java.lang.Double: int intValue()>();

        $f1 = (float) $i0;

        $b1 = $f0 cmpl $f1;

        if $b1 != 0 goto label16;

        $i2 = virtualinvoke r16.<java.lang.Double: int intValue()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        return $r3;

     label16:
        $r2 = virtualinvoke r16.<java.lang.Double: java.lang.String toString()>();

        return $r2;

     label17:
        return "";
    }
}
