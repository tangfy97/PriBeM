public class ucar.nc2.ft.point.standard.Table$TableStructure extends ucar.nc2.ft.point.standard.Table
{
    ucar.nc2.dataset.StructureDS struct;
    ucar.nc2.Dimension dim;
    ucar.nc2.Dimension outer;
    ucar.nc2.ft.point.standard.TableConfig$StructureType stype;
    static final boolean $assertionsDisabled;

    void <init>(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.ft.point.standard.TableConfig)
    {
        ucar.nc2.ft.point.standard.TableConfig r2;
        ucar.nc2.ft.point.standard.TableConfig$StructureType $r3, $r4, $r24, $r25;
        ucar.nc2.Group $r12, $r35;
        ucar.nc2.ft.point.standard.Table$TableStructure r0;
        java.lang.StringBuilder $r53, $r54, $r56;
        java.lang.AssertionError $r28, $r30, $r40;
        ucar.nc2.Structure $r50;
        java.util.ArrayList $r58;
        java.lang.String $r6, $r8, $r16, $r23, $r27, $r31, $r38, $r41, $r55, $r57;
        ucar.nc2.dataset.StructureDS $r26, $r43, $r44, $r45, $r49, $r51, $r59;
        ucar.nc2.Dimension $r7, $r9, $r11, $r13, $r14, $r29, $r32, $r34, $r36, $r39, $r46;
        ucar.nc2.dataset.NetcdfDataset r1;
        java.lang.IllegalStateException $r52;
        int[] $r5;
        boolean $z0, $z1, $z2, $z3;
        ucar.ma2.DataType $r19, $r20;
        java.util.List $r15, $r21, $r22, $r37, $r47, $r48, $r60;
        ucar.nc2.dataset.StructurePseudoDS $r33;
        ucar.nc2.dataset.StructurePseudo2Dim $r10;
        int $i0, $i1;
        ucar.nc2.Variable r18, $r42;
        java.util.Iterator $r61;
        java.lang.Object $r17;

        r0 := @this: ucar.nc2.ft.point.standard.Table$TableStructure;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: ucar.nc2.ft.point.standard.TableConfig;

        specialinvoke r0.<ucar.nc2.ft.point.standard.Table: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.ft.point.standard.TableConfig)>(r1, r2);

        $r3 = r2.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.ft.point.standard.TableConfig$StructureType structureType>;

        r0.<ucar.nc2.ft.point.standard.Table$TableStructure: ucar.nc2.ft.point.standard.TableConfig$StructureType stype> = $r3;

        $r5 = <ucar.nc2.ft.point.standard.Table$1: int[] $SwitchMap$ucar$nc2$ft$point$standard$TableConfig$StructureType>;

        $r4 = r2.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.ft.point.standard.TableConfig$StructureType structureType>;

        $i0 = virtualinvoke $r4.<ucar.nc2.ft.point.standard.TableConfig$StructureType: int ordinal()>();

        $i1 = $r5[$i0];

        tableswitch($i1)
        {
            case 1: goto label01;
            case 2: goto label03;
            case 3: goto label05;
            default: goto label08;
        };

     label01:
        $r41 = r2.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String structName>;

        $r42 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>($r41);

        $r43 = (ucar.nc2.dataset.StructureDS) $r42;

        r0.<ucar.nc2.ft.point.standard.Table$TableStructure: ucar.nc2.dataset.StructureDS struct> = $r43;

        $r44 = r0.<ucar.nc2.ft.point.standard.Table$TableStructure: ucar.nc2.dataset.StructureDS struct>;

        if $r44 != null goto label02;

        $r52 = new java.lang.IllegalStateException;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cant find Structure ");

        $r55 = r2.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String structName>;

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r52.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r57);

        throw $r52;

     label02:
        $r45 = r0.<ucar.nc2.ft.point.standard.Table$TableStructure: ucar.nc2.dataset.StructureDS struct>;

        $r46 = virtualinvoke $r45.<ucar.nc2.dataset.StructureDS: ucar.nc2.Dimension getDimension(int)>(0);

        r0.<ucar.nc2.ft.point.standard.Table$TableStructure: ucar.nc2.Dimension dim> = $r46;

        $r47 = r2.<ucar.nc2.ft.point.standard.TableConfig: java.util.List vars>;

        if $r47 == null goto label08;

        $r49 = r0.<ucar.nc2.ft.point.standard.Table$TableStructure: ucar.nc2.dataset.StructureDS struct>;

        $r48 = r2.<ucar.nc2.ft.point.standard.TableConfig: java.util.List vars>;

        $r50 = virtualinvoke $r49.<ucar.nc2.dataset.StructureDS: ucar.nc2.Structure select(java.util.List)>($r48);

        $r51 = (ucar.nc2.dataset.StructureDS) $r50;

        r0.<ucar.nc2.ft.point.standard.Table$TableStructure: ucar.nc2.dataset.StructureDS struct> = $r51;

        goto label08;

     label03:
        $r31 = r2.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName>;

        $r32 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>($r31);

        r0.<ucar.nc2.ft.point.standard.Table$TableStructure: ucar.nc2.Dimension dim> = $r32;

        $z2 = <ucar.nc2.ft.point.standard.Table$TableStructure: boolean $assertionsDisabled>;

        if $z2 != 0 goto label04;

        $r39 = r0.<ucar.nc2.ft.point.standard.Table$TableStructure: ucar.nc2.Dimension dim>;

        if $r39 != null goto label04;

        $r40 = new java.lang.AssertionError;

        specialinvoke $r40.<java.lang.AssertionError: void <init>()>();

        throw $r40;

     label04:
        $r33 = new ucar.nc2.dataset.StructurePseudoDS;

        $r34 = r0.<ucar.nc2.ft.point.standard.Table$TableStructure: ucar.nc2.Dimension dim>;

        $r35 = virtualinvoke $r34.<ucar.nc2.Dimension: ucar.nc2.Group getGroup()>();

        $r38 = r2.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String structName>;

        $r37 = r2.<ucar.nc2.ft.point.standard.TableConfig: java.util.List vars>;

        $r36 = r0.<ucar.nc2.ft.point.standard.Table$TableStructure: ucar.nc2.Dimension dim>;

        specialinvoke $r33.<ucar.nc2.dataset.StructurePseudoDS: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,java.util.List,ucar.nc2.Dimension)>(r1, $r35, $r38, $r37, $r36);

        r0.<ucar.nc2.ft.point.standard.Table$TableStructure: ucar.nc2.dataset.StructureDS struct> = $r33;

        goto label08;

     label05:
        $r6 = r2.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String dimName>;

        $r7 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>($r6);

        r0.<ucar.nc2.ft.point.standard.Table$TableStructure: ucar.nc2.Dimension dim> = $r7;

        $r8 = r2.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String outerName>;

        $r9 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>($r8);

        r0.<ucar.nc2.ft.point.standard.Table$TableStructure: ucar.nc2.Dimension outer> = $r9;

        $z0 = <ucar.nc2.ft.point.standard.Table$TableStructure: boolean $assertionsDisabled>;

        if $z0 != 0 goto label06;

        $r29 = r0.<ucar.nc2.ft.point.standard.Table$TableStructure: ucar.nc2.Dimension dim>;

        if $r29 != null goto label06;

        $r30 = new java.lang.AssertionError;

        specialinvoke $r30.<java.lang.AssertionError: void <init>()>();

        throw $r30;

     label06:
        $z1 = <ucar.nc2.ft.point.standard.Table$TableStructure: boolean $assertionsDisabled>;

        if $z1 != 0 goto label07;

        $r27 = r2.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String outerName>;

        if $r27 != null goto label07;

        $r28 = new java.lang.AssertionError;

        specialinvoke $r28.<java.lang.AssertionError: void <init>()>();

        throw $r28;

     label07:
        $r10 = new ucar.nc2.dataset.StructurePseudo2Dim;

        $r11 = r0.<ucar.nc2.ft.point.standard.Table$TableStructure: ucar.nc2.Dimension dim>;

        $r12 = virtualinvoke $r11.<ucar.nc2.Dimension: ucar.nc2.Group getGroup()>();

        $r16 = r2.<ucar.nc2.ft.point.standard.TableConfig: java.lang.String structName>;

        $r15 = r2.<ucar.nc2.ft.point.standard.TableConfig: java.util.List vars>;

        $r14 = r0.<ucar.nc2.ft.point.standard.Table$TableStructure: ucar.nc2.Dimension dim>;

        $r13 = r0.<ucar.nc2.ft.point.standard.Table$TableStructure: ucar.nc2.Dimension outer>;

        specialinvoke $r10.<ucar.nc2.dataset.StructurePseudo2Dim: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,java.util.List,ucar.nc2.Dimension,ucar.nc2.Dimension)>(r1, $r12, $r16, $r15, $r14, $r13);

        r0.<ucar.nc2.ft.point.standard.Table$TableStructure: ucar.nc2.dataset.StructureDS struct> = $r10;

     label08:
        $r58 = new java.util.ArrayList;

        specialinvoke $r58.<java.util.ArrayList: void <init>()>();

        r2.<ucar.nc2.ft.point.standard.TableConfig: java.util.List vars> = $r58;

        $r59 = r0.<ucar.nc2.ft.point.standard.Table$TableStructure: ucar.nc2.dataset.StructureDS struct>;

        $r60 = virtualinvoke $r59.<ucar.nc2.dataset.StructureDS: java.util.List getVariables()>();

        $r61 = interfaceinvoke $r60.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z3 = interfaceinvoke $r61.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label12;

        $r17 = interfaceinvoke $r61.<java.util.Iterator: java.lang.Object next()>();

        r18 = (ucar.nc2.Variable) $r17;

        $r19 = virtualinvoke r18.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        $r20 = <ucar.ma2.DataType: ucar.ma2.DataType STRUCTURE>;

        if $r19 != $r20 goto label10;

        $r25 = r2.<ucar.nc2.ft.point.standard.TableConfig: ucar.nc2.ft.point.standard.TableConfig$StructureType structureType>;

        $r24 = <ucar.nc2.ft.point.standard.TableConfig$StructureType: ucar.nc2.ft.point.standard.TableConfig$StructureType PsuedoStructure>;

        if $r25 != $r24 goto label11;

        $r26 = r0.<ucar.nc2.ft.point.standard.Table$TableStructure: ucar.nc2.dataset.StructureDS struct>;

        virtualinvoke $r26.<ucar.nc2.dataset.StructureDS: boolean removeMemberVariable(ucar.nc2.Variable)>(r18);

        goto label11;

     label10:
        $r21 = r0.<ucar.nc2.ft.point.standard.Table$TableStructure: java.util.List cols>;

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>(r18);

        $r22 = r2.<ucar.nc2.ft.point.standard.TableConfig: java.util.List vars>;

        $r23 = virtualinvoke r18.<ucar.nc2.Variable: java.lang.String getShortName()>();

        interfaceinvoke $r22.<java.util.List: boolean add(java.lang.Object)>($r23);

     label11:
        goto label09;

     label12:
        return;
    }

    protected void showTableExtraInfo(java.lang.String, java.util.Formatter)
    {
        java.lang.Object[] $r1;
        java.util.Formatter r0;
        ucar.nc2.dataset.StructureDS $r4, $r8;
        ucar.nc2.ft.point.standard.Table$TableStructure r3;
        ucar.nc2.Dimension $r6;
        java.lang.Class $r9;
        java.lang.String r2, $r5, $r7, $r10;

        r3 := @this: ucar.nc2.ft.point.standard.Table$TableStructure;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.Formatter;

        $r1 = newarray (java.lang.Object)[4];

        $r1[0] = r2;

        $r4 = r3.<ucar.nc2.ft.point.standard.Table$TableStructure: ucar.nc2.dataset.StructureDS struct>;

        $r5 = virtualinvoke $r4.<ucar.nc2.dataset.StructureDS: java.lang.String getNameAndDimensions()>();

        $r1[1] = $r5;

        $r6 = r3.<ucar.nc2.ft.point.standard.Table$TableStructure: ucar.nc2.Dimension dim>;

        $r7 = virtualinvoke $r6.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r1[2] = $r7;

        $r8 = r3.<ucar.nc2.ft.point.standard.Table$TableStructure: ucar.nc2.dataset.StructureDS struct>;

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $r1[3] = $r10;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%sstruct=%s, dim=%s type=%s%n", $r1);

        return;
    }

    public ucar.nc2.dataset.VariableDS findVariable(java.lang.String)
    {
        ucar.nc2.dataset.StructureDS $r2;
        ucar.nc2.dataset.VariableDS $r4;
        ucar.nc2.ft.point.standard.Table$TableStructure r0;
        ucar.nc2.Variable $r3;
        java.lang.String r1;

        r0 := @this: ucar.nc2.ft.point.standard.Table$TableStructure;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.nc2.ft.point.standard.Table$TableStructure: ucar.nc2.dataset.StructureDS struct>;

        $r3 = virtualinvoke $r2.<ucar.nc2.dataset.StructureDS: ucar.nc2.Variable findVariable(java.lang.String)>(r1);

        $r4 = (ucar.nc2.dataset.VariableDS) $r3;

        return $r4;
    }

    public java.lang.String showDimension()
    {
        ucar.nc2.ft.point.standard.Table$TableStructure r0;
        ucar.nc2.Dimension $r1;
        java.lang.String $r2;

        r0 := @this: ucar.nc2.ft.point.standard.Table$TableStructure;

        $r1 = r0.<ucar.nc2.ft.point.standard.Table$TableStructure: ucar.nc2.Dimension dim>;

        $r2 = virtualinvoke $r1.<ucar.nc2.Dimension: java.lang.String getName()>();

        return $r2;
    }

    public ucar.ma2.StructureDataIterator getStructureDataIterator(ucar.nc2.ft.point.standard.Cursor, int) throws java.io.IOException
    {
        ucar.nc2.dataset.StructureDS $r1;
        ucar.ma2.StructureDataIterator $r2;
        int i0;
        ucar.nc2.ft.point.standard.Table$TableStructure r0;
        ucar.nc2.ft.point.standard.Cursor r3;

        r0 := @this: ucar.nc2.ft.point.standard.Table$TableStructure;

        r3 := @parameter0: ucar.nc2.ft.point.standard.Cursor;

        i0 := @parameter1: int;

        $r1 = r0.<ucar.nc2.ft.point.standard.Table$TableStructure: ucar.nc2.dataset.StructureDS struct>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.StructureDS: ucar.ma2.StructureDataIterator getStructureIterator(int)>(i0);

        return $r2;
    }

    public java.lang.String getName()
    {
        ucar.nc2.ft.point.standard.TableConfig$StructureType $r2;
        ucar.nc2.dataset.StructureDS $r6;
        ucar.nc2.ft.point.standard.Table$TableStructure r1;
        java.lang.StringBuilder $r0, $r4, $r5, $r8, $r9;
        java.lang.String $r3, $r7, $r10;

        r1 := @this: ucar.nc2.ft.point.standard.Table$TableStructure;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<ucar.nc2.ft.point.standard.Table$TableStructure: ucar.nc2.ft.point.standard.TableConfig$StructureType stype>;

        $r3 = virtualinvoke $r2.<ucar.nc2.ft.point.standard.TableConfig$StructureType: java.lang.String toString()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r6 = r1.<ucar.nc2.ft.point.standard.Table$TableStructure: ucar.nc2.dataset.StructureDS struct>;

        $r7 = virtualinvoke $r6.<ucar.nc2.dataset.StructureDS: java.lang.String getName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lucar/nc2/ft/point/standard/Table;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <ucar.nc2.ft.point.standard.Table$TableStructure: boolean $assertionsDisabled> = $z1;

        return;
    }
}
