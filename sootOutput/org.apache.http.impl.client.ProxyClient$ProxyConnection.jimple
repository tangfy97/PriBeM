class org.apache.http.impl.client.ProxyClient$ProxyConnection extends org.apache.http.impl.DefaultHttpClientConnection implements org.apache.http.conn.HttpRoutedConnection
{
    private final org.apache.http.conn.routing.HttpRoute route;

    void <init>(org.apache.http.conn.routing.HttpRoute)
    {
        org.apache.http.conn.routing.HttpRoute r1;
        org.apache.http.impl.client.ProxyClient$ProxyConnection r0;

        r0 := @this: org.apache.http.impl.client.ProxyClient$ProxyConnection;

        r1 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        specialinvoke r0.<org.apache.http.impl.DefaultHttpClientConnection: void <init>()>();

        r0.<org.apache.http.impl.client.ProxyClient$ProxyConnection: org.apache.http.conn.routing.HttpRoute route> = r1;

        return;
    }

    public org.apache.http.conn.routing.HttpRoute getRoute()
    {
        org.apache.http.conn.routing.HttpRoute $r1;
        org.apache.http.impl.client.ProxyClient$ProxyConnection r0;

        r0 := @this: org.apache.http.impl.client.ProxyClient$ProxyConnection;

        $r1 = r0.<org.apache.http.impl.client.ProxyClient$ProxyConnection: org.apache.http.conn.routing.HttpRoute route>;

        return $r1;
    }

    public boolean isSecure()
    {
        org.apache.http.impl.client.ProxyClient$ProxyConnection r0;

        r0 := @this: org.apache.http.impl.client.ProxyClient$ProxyConnection;

        return 0;
    }

    public javax.net.ssl.SSLSession getSSLSession()
    {
        org.apache.http.impl.client.ProxyClient$ProxyConnection r0;

        r0 := @this: org.apache.http.impl.client.ProxyClient$ProxyConnection;

        return null;
    }

    public java.net.Socket getSocket()
    {
        java.net.Socket $r1;
        org.apache.http.impl.client.ProxyClient$ProxyConnection r0;

        r0 := @this: org.apache.http.impl.client.ProxyClient$ProxyConnection;

        $r1 = specialinvoke r0.<org.apache.http.impl.DefaultHttpClientConnection: java.net.Socket getSocket()>();

        return $r1;
    }
}
