final class com.google.common.collect.CustomConcurrentHashMap$KeySet extends java.util.AbstractSet
{
    final com.google.common.collect.CustomConcurrentHashMap this$0;

    void <init>(com.google.common.collect.CustomConcurrentHashMap)
    {
        com.google.common.collect.CustomConcurrentHashMap r1;
        com.google.common.collect.CustomConcurrentHashMap$KeySet r0;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$KeySet;

        r1 := @parameter0: com.google.common.collect.CustomConcurrentHashMap;

        r0.<com.google.common.collect.CustomConcurrentHashMap$KeySet: com.google.common.collect.CustomConcurrentHashMap this$0> = r1;

        specialinvoke r0.<java.util.AbstractSet: void <init>()>();

        return;
    }

    public java.util.Iterator iterator()
    {
        com.google.common.collect.CustomConcurrentHashMap$KeyIterator $r0;
        com.google.common.collect.CustomConcurrentHashMap $r2;
        com.google.common.collect.CustomConcurrentHashMap$KeySet r1;

        r1 := @this: com.google.common.collect.CustomConcurrentHashMap$KeySet;

        $r0 = new com.google.common.collect.CustomConcurrentHashMap$KeyIterator;

        $r2 = r1.<com.google.common.collect.CustomConcurrentHashMap$KeySet: com.google.common.collect.CustomConcurrentHashMap this$0>;

        specialinvoke $r0.<com.google.common.collect.CustomConcurrentHashMap$KeyIterator: void <init>(com.google.common.collect.CustomConcurrentHashMap)>($r2);

        return $r0;
    }

    public int size()
    {
        int $i0;
        com.google.common.collect.CustomConcurrentHashMap $r1;
        com.google.common.collect.CustomConcurrentHashMap$KeySet r0;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$KeySet;

        $r1 = r0.<com.google.common.collect.CustomConcurrentHashMap$KeySet: com.google.common.collect.CustomConcurrentHashMap this$0>;

        $i0 = virtualinvoke $r1.<com.google.common.collect.CustomConcurrentHashMap: int size()>();

        return $i0;
    }

    public boolean isEmpty()
    {
        com.google.common.collect.CustomConcurrentHashMap $r1;
        com.google.common.collect.CustomConcurrentHashMap$KeySet r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$KeySet;

        $r1 = r0.<com.google.common.collect.CustomConcurrentHashMap$KeySet: com.google.common.collect.CustomConcurrentHashMap this$0>;

        $z0 = virtualinvoke $r1.<com.google.common.collect.CustomConcurrentHashMap: boolean isEmpty()>();

        return $z0;
    }

    public boolean contains(java.lang.Object)
    {
        com.google.common.collect.CustomConcurrentHashMap$KeySet r0;
        java.lang.Object r1;
        com.google.common.collect.CustomConcurrentHashMap $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$KeySet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.CustomConcurrentHashMap$KeySet: com.google.common.collect.CustomConcurrentHashMap this$0>;

        $z0 = virtualinvoke $r2.<com.google.common.collect.CustomConcurrentHashMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean remove(java.lang.Object)
    {
        com.google.common.collect.CustomConcurrentHashMap$KeySet r0;
        java.lang.Object r1, $r3;
        com.google.common.collect.CustomConcurrentHashMap $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$KeySet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.CustomConcurrentHashMap$KeySet: com.google.common.collect.CustomConcurrentHashMap this$0>;

        $r3 = virtualinvoke $r2.<com.google.common.collect.CustomConcurrentHashMap: java.lang.Object remove(java.lang.Object)>(r1);

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void clear()
    {
        com.google.common.collect.CustomConcurrentHashMap $r1;
        com.google.common.collect.CustomConcurrentHashMap$KeySet r0;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$KeySet;

        $r1 = r0.<com.google.common.collect.CustomConcurrentHashMap$KeySet: com.google.common.collect.CustomConcurrentHashMap this$0>;

        virtualinvoke $r1.<com.google.common.collect.CustomConcurrentHashMap: void clear()>();

        return;
    }
}
