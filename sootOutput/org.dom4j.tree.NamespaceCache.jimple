public class org.dom4j.tree.NamespaceCache extends java.lang.Object
{
    private static final java.lang.String CONCURRENTREADERHASHMAP_CLASS;
    protected static java.util.Map cache;
    protected static java.util.Map noPrefixCache;

    public void <init>()
    {
        org.dom4j.tree.NamespaceCache r0;

        r0 := @this: org.dom4j.tree.NamespaceCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.dom4j.Namespace get(java.lang.String, java.lang.String)
    {
        java.lang.Throwable $r10;
        org.dom4j.Namespace $r6, r12;
        org.dom4j.tree.NamespaceCache r0;
        java.util.Map $r2;
        java.lang.Object $r4, $r5, $r8, $r9;
        java.lang.String r1, r3;
        java.lang.ref.WeakReference $r7, r11, r13;

        r0 := @this: org.dom4j.tree.NamespaceCache;

        r3 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<org.dom4j.tree.NamespaceCache: java.util.Map getURICache(java.lang.String)>(r1);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r11 = (java.lang.ref.WeakReference) $r4;

        r12 = null;

        if r11 == null goto label1;

        $r9 = virtualinvoke r11.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r12 = (org.dom4j.Namespace) $r9;

     label1:
        if r12 != null goto label8;

        entermonitor $r2;

     label2:
        $r5 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r13 = (java.lang.ref.WeakReference) $r5;

        if r13 == null goto label3;

        $r8 = virtualinvoke r13.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r12 = (org.dom4j.Namespace) $r8;

     label3:
        if r12 != null goto label4;

        $r6 = virtualinvoke r0.<org.dom4j.tree.NamespaceCache: org.dom4j.Namespace createNamespace(java.lang.String,java.lang.String)>(r3, r1);

        r12 = $r6;

        $r7 = new java.lang.ref.WeakReference;

        specialinvoke $r7.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r6);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r7);

     label4:
        exitmonitor $r2;

     label5:
        goto label8;

     label6:
        $r10 := @caughtexception;

        exitmonitor $r2;

     label7:
        throw $r10;

     label8:
        return r12;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public org.dom4j.Namespace get(java.lang.String)
    {
        java.lang.Throwable $r12;
        java.util.Map $r1, $r3, $r4, $r9;
        java.lang.String r0;
        java.lang.ref.WeakReference $r8, r13, r15;
        org.dom4j.Namespace $r7, r14;
        org.dom4j.tree.NamespaceCache r6;
        java.lang.Object $r2, $r5, $r10, $r11;

        r6 := @this: org.dom4j.tree.NamespaceCache;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.dom4j.tree.NamespaceCache: java.util.Map noPrefixCache>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r13 = (java.lang.ref.WeakReference) $r2;

        r14 = null;

        if r13 == null goto label1;

        $r11 = virtualinvoke r13.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r14 = (org.dom4j.Namespace) $r11;

     label1:
        if r14 != null goto label8;

        $r3 = <org.dom4j.tree.NamespaceCache: java.util.Map noPrefixCache>;

        entermonitor $r3;

     label2:
        $r4 = <org.dom4j.tree.NamespaceCache: java.util.Map noPrefixCache>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r15 = (java.lang.ref.WeakReference) $r5;

        if r15 == null goto label3;

        $r10 = virtualinvoke r15.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r14 = (org.dom4j.Namespace) $r10;

     label3:
        if r14 != null goto label4;

        $r7 = virtualinvoke r6.<org.dom4j.tree.NamespaceCache: org.dom4j.Namespace createNamespace(java.lang.String,java.lang.String)>("", r0);

        r14 = $r7;

        $r9 = <org.dom4j.tree.NamespaceCache: java.util.Map noPrefixCache>;

        $r8 = new java.lang.ref.WeakReference;

        specialinvoke $r8.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r7);

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r8);

     label4:
        exitmonitor $r3;

     label5:
        goto label8;

     label6:
        $r12 := @caughtexception;

        exitmonitor $r3;

     label7:
        throw $r12;

     label8:
        return r14;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    protected java.util.Map getURICache(java.lang.String)
    {
        java.lang.Throwable $r8;
        org.dom4j.tree.ConcurrentReaderHashMap $r6;
        org.dom4j.tree.NamespaceCache r9;
        java.util.Map $r1, $r3, $r4, $r7, r10;
        java.lang.Object $r2, $r5;
        java.lang.String r0;

        r9 := @this: org.dom4j.tree.NamespaceCache;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.dom4j.tree.NamespaceCache: java.util.Map cache>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r10 = (java.util.Map) $r2;

        if r10 != null goto label6;

        $r3 = <org.dom4j.tree.NamespaceCache: java.util.Map cache>;

        entermonitor $r3;

     label1:
        $r4 = <org.dom4j.tree.NamespaceCache: java.util.Map cache>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r10 = (java.util.Map) $r5;

        if r10 != null goto label2;

        $r6 = new org.dom4j.tree.ConcurrentReaderHashMap;

        specialinvoke $r6.<org.dom4j.tree.ConcurrentReaderHashMap: void <init>()>();

        r10 = $r6;

        $r7 = <org.dom4j.tree.NamespaceCache: java.util.Map cache>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r6);

     label2:
        exitmonitor $r3;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        exitmonitor $r3;

     label5:
        throw $r8;

     label6:
        return r10;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected org.dom4j.Namespace createNamespace(java.lang.String, java.lang.String)
    {
        org.dom4j.Namespace $r0;
        org.dom4j.tree.NamespaceCache r3;
        java.lang.String r1, r2;

        r3 := @this: org.dom4j.tree.NamespaceCache;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r0 = new org.dom4j.Namespace;

        specialinvoke $r0.<org.dom4j.Namespace: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Throwable $r18, $r21;
        java.lang.Float $r8, $r14;
        java.lang.Object[] $r6, $r12;
        org.dom4j.tree.ConcurrentReaderHashMap $r19, $r20;
        java.lang.reflect.Constructor $r5;
        java.lang.Integer $r7, $r9, $r13, $r15;
        java.util.Map $r11, $r17, $r24, $r26;
        java.lang.Class[] $r1;
        java.lang.Class $r0, $r2, $r3, $r4, $r22;
        java.lang.Object $r10, $r16, $r23, $r25;

        <org.dom4j.tree.NamespaceCache: java.lang.String CONCURRENTREADERHASHMAP_CLASS> = "EDU.oswego.cs.dl.util.concurrent.ConcurrentReaderHashMap";

     label1:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.util.concurrent.ConcurrentHashMap");

        $r1 = newarray (java.lang.Class)[3];

        $r2 = <java.lang.Integer: java.lang.Class TYPE>;

        $r1[0] = $r2;

        $r3 = <java.lang.Float: java.lang.Class TYPE>;

        $r1[1] = $r3;

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r1[2] = $r4;

        $r5 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r1);

        $r6 = newarray (java.lang.Object)[3];

        $r7 = new java.lang.Integer;

        specialinvoke $r7.<java.lang.Integer: void <init>(int)>(11);

        $r6[0] = $r7;

        $r8 = new java.lang.Float;

        specialinvoke $r8.<java.lang.Float: void <init>(float)>(0.75F);

        $r6[1] = $r8;

        $r9 = new java.lang.Integer;

        specialinvoke $r9.<java.lang.Integer: void <init>(int)>(1);

        $r6[2] = $r9;

        $r10 = virtualinvoke $r5.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r6);

        $r11 = (java.util.Map) $r10;

        <org.dom4j.tree.NamespaceCache: java.util.Map cache> = $r11;

        $r12 = newarray (java.lang.Object)[3];

        $r13 = new java.lang.Integer;

        specialinvoke $r13.<java.lang.Integer: void <init>(int)>(11);

        $r12[0] = $r13;

        $r14 = new java.lang.Float;

        specialinvoke $r14.<java.lang.Float: void <init>(float)>(0.75F);

        $r12[1] = $r14;

        $r15 = new java.lang.Integer;

        specialinvoke $r15.<java.lang.Integer: void <init>(int)>(1);

        $r12[2] = $r15;

        $r16 = virtualinvoke $r5.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r12);

        $r17 = (java.util.Map) $r16;

        <org.dom4j.tree.NamespaceCache: java.util.Map noPrefixCache> = $r17;

     label2:
        goto label7;

     label3:
        $r21 := @caughtexception;

     label4:
        $r22 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("EDU.oswego.cs.dl.util.concurrent.ConcurrentReaderHashMap");

        $r23 = virtualinvoke $r22.<java.lang.Class: java.lang.Object newInstance()>();

        $r24 = (java.util.Map) $r23;

        <org.dom4j.tree.NamespaceCache: java.util.Map cache> = $r24;

        $r25 = virtualinvoke $r22.<java.lang.Class: java.lang.Object newInstance()>();

        $r26 = (java.util.Map) $r25;

        <org.dom4j.tree.NamespaceCache: java.util.Map noPrefixCache> = $r26;

     label5:
        goto label7;

     label6:
        $r18 := @caughtexception;

        $r19 = new org.dom4j.tree.ConcurrentReaderHashMap;

        specialinvoke $r19.<org.dom4j.tree.ConcurrentReaderHashMap: void <init>()>();

        <org.dom4j.tree.NamespaceCache: java.util.Map cache> = $r19;

        $r20 = new org.dom4j.tree.ConcurrentReaderHashMap;

        specialinvoke $r20.<org.dom4j.tree.ConcurrentReaderHashMap: void <init>()>();

        <org.dom4j.tree.NamespaceCache: java.util.Map noPrefixCache> = $r20;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label6;
    }
}
