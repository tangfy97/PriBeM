public class org.apache.cxf.service.model.OperationInfo extends org.apache.cxf.service.model.AbstractPropertiesHolder implements org.apache.cxf.service.model.NamedItem
{
    private static final java.util.logging.Logger LOG;
    org.apache.cxf.service.model.InterfaceInfo intf;
    javax.xml.namespace.QName opName;
    java.lang.String inName;
    org.apache.cxf.service.model.MessageInfo inputMessage;
    java.lang.String outName;
    org.apache.cxf.service.model.MessageInfo outputMessage;
    java.util.Map faults;
    org.apache.cxf.service.model.OperationInfo unwrappedOperation;
    java.util.List parameterOrdering;

    public void <init>()
    {
        org.apache.cxf.service.model.OperationInfo r0;

        r0 := @this: org.apache.cxf.service.model.OperationInfo;

        specialinvoke r0.<org.apache.cxf.service.model.AbstractPropertiesHolder: void <init>()>();

        return;
    }

    void <init>(org.apache.cxf.service.model.InterfaceInfo, javax.xml.namespace.QName)
    {
        org.apache.cxf.service.model.OperationInfo r0;
        javax.xml.namespace.QName r2;
        org.apache.cxf.service.model.InterfaceInfo r1;

        r0 := @this: org.apache.cxf.service.model.OperationInfo;

        r1 := @parameter0: org.apache.cxf.service.model.InterfaceInfo;

        r2 := @parameter1: javax.xml.namespace.QName;

        specialinvoke r0.<org.apache.cxf.service.model.AbstractPropertiesHolder: void <init>()>();

        r0.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.InterfaceInfo intf> = r1;

        virtualinvoke r0.<org.apache.cxf.service.model.OperationInfo: void setName(javax.xml.namespace.QName)>(r2);

        return;
    }

    void <init>(org.apache.cxf.service.model.OperationInfo)
    {
        org.apache.cxf.service.model.InterfaceInfo $r2;
        org.apache.cxf.service.model.OperationInfo r0, r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.cxf.service.model.OperationInfo;

        r1 := @parameter0: org.apache.cxf.service.model.OperationInfo;

        specialinvoke r0.<org.apache.cxf.service.model.AbstractPropertiesHolder: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.InterfaceInfo getInterface()>();

        r0.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.InterfaceInfo intf> = $r2;

        $r3 = virtualinvoke r1.<org.apache.cxf.service.model.OperationInfo: javax.xml.namespace.QName getName()>();

        virtualinvoke r0.<org.apache.cxf.service.model.OperationInfo: void setName(javax.xml.namespace.QName)>($r3);

        return;
    }

    public javax.xml.namespace.QName getName()
    {
        org.apache.cxf.service.model.OperationInfo r0;
        javax.xml.namespace.QName $r1;

        r0 := @this: org.apache.cxf.service.model.OperationInfo;

        $r1 = r0.<org.apache.cxf.service.model.OperationInfo: javax.xml.namespace.QName opName>;

        return $r1;
    }

    public final void setName(javax.xml.namespace.QName)
    {
        org.apache.cxf.service.model.OperationInfo r1;
        javax.xml.namespace.QName r0;
        java.lang.NullPointerException $r2;

        r1 := @this: org.apache.cxf.service.model.OperationInfo;

        r0 := @parameter0: javax.xml.namespace.QName;

        if r0 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Operation Name cannot be null.");

        throw $r2;

     label1:
        r1.<org.apache.cxf.service.model.OperationInfo: javax.xml.namespace.QName opName> = r0;

        return;
    }

    public org.apache.cxf.service.model.InterfaceInfo getInterface()
    {
        org.apache.cxf.service.model.OperationInfo r0;
        org.apache.cxf.service.model.InterfaceInfo $r1;

        r0 := @this: org.apache.cxf.service.model.OperationInfo;

        $r1 = r0.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.InterfaceInfo intf>;

        return $r1;
    }

    public org.apache.cxf.service.model.MessageInfo createMessage(javax.xml.namespace.QName, org.apache.cxf.service.model.MessageInfo$Type)
    {
        org.apache.cxf.service.model.MessageInfo$Type r2;
        org.apache.cxf.service.model.MessageInfo $r0;
        org.apache.cxf.service.model.OperationInfo r1;
        javax.xml.namespace.QName r3;

        r1 := @this: org.apache.cxf.service.model.OperationInfo;

        r3 := @parameter0: javax.xml.namespace.QName;

        r2 := @parameter1: org.apache.cxf.service.model.MessageInfo$Type;

        $r0 = new org.apache.cxf.service.model.MessageInfo;

        specialinvoke $r0.<org.apache.cxf.service.model.MessageInfo: void <init>(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.service.model.MessageInfo$Type,javax.xml.namespace.QName)>(r1, r2, r3);

        return $r0;
    }

    public org.apache.cxf.service.model.MessageInfo getOutput()
    {
        org.apache.cxf.service.model.OperationInfo r0;
        org.apache.cxf.service.model.MessageInfo $r1;

        r0 := @this: org.apache.cxf.service.model.OperationInfo;

        $r1 = r0.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo outputMessage>;

        return $r1;
    }

    public java.lang.String getOutputName()
    {
        org.apache.cxf.service.model.OperationInfo r0;
        java.lang.String $r1;

        r0 := @this: org.apache.cxf.service.model.OperationInfo;

        $r1 = r0.<org.apache.cxf.service.model.OperationInfo: java.lang.String outName>;

        return $r1;
    }

    public void setOutput(java.lang.String, org.apache.cxf.service.model.MessageInfo)
    {
        org.apache.cxf.service.model.MessageInfo r2, $r5, $r7;
        org.apache.cxf.service.model.OperationInfo r0, $r3, $r4, $r6;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.service.model.OperationInfo;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.cxf.service.model.MessageInfo;

        r0.<org.apache.cxf.service.model.OperationInfo: java.lang.String outName> = r1;

        r0.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo outputMessage> = r2;

        $r3 = r0.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.OperationInfo unwrappedOperation>;

        if $r3 == null goto label1;

        $r4 = r0.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.OperationInfo unwrappedOperation>;

        $r5 = virtualinvoke $r4.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getOutput()>();

        if $r5 == null goto label1;

        $r6 = r0.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.OperationInfo unwrappedOperation>;

        $r7 = virtualinvoke $r6.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getOutput()>();

        virtualinvoke $r7.<org.apache.cxf.service.model.MessageInfo: void setDelegate(org.apache.cxf.service.model.AbstractPropertiesHolder,boolean)>(r2, 0);

     label1:
        return;
    }

    public boolean hasOutput()
    {
        org.apache.cxf.service.model.OperationInfo r0;
        org.apache.cxf.service.model.MessageInfo $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.model.OperationInfo;

        $r1 = r0.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo outputMessage>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.apache.cxf.service.model.MessageInfo getInput()
    {
        org.apache.cxf.service.model.OperationInfo r0;
        org.apache.cxf.service.model.MessageInfo $r1;

        r0 := @this: org.apache.cxf.service.model.OperationInfo;

        $r1 = r0.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo inputMessage>;

        return $r1;
    }

    public java.lang.String getInputName()
    {
        org.apache.cxf.service.model.OperationInfo r0;
        java.lang.String $r1;

        r0 := @this: org.apache.cxf.service.model.OperationInfo;

        $r1 = r0.<org.apache.cxf.service.model.OperationInfo: java.lang.String inName>;

        return $r1;
    }

    public void setInput(java.lang.String, org.apache.cxf.service.model.MessageInfo)
    {
        org.apache.cxf.service.model.MessageInfo r2, $r5, $r7;
        org.apache.cxf.service.model.OperationInfo r0, $r3, $r4, $r6;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.service.model.OperationInfo;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.cxf.service.model.MessageInfo;

        r0.<org.apache.cxf.service.model.OperationInfo: java.lang.String inName> = r1;

        r0.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo inputMessage> = r2;

        $r3 = r0.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.OperationInfo unwrappedOperation>;

        if $r3 == null goto label1;

        $r4 = r0.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.OperationInfo unwrappedOperation>;

        $r5 = virtualinvoke $r4.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        if $r5 == null goto label1;

        $r6 = r0.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.OperationInfo unwrappedOperation>;

        $r7 = virtualinvoke $r6.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        virtualinvoke $r7.<org.apache.cxf.service.model.MessageInfo: void setDelegate(org.apache.cxf.service.model.AbstractPropertiesHolder,boolean)>(r2, 0);

     label1:
        return;
    }

    public boolean hasInput()
    {
        org.apache.cxf.service.model.OperationInfo r0;
        org.apache.cxf.service.model.MessageInfo $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.model.OperationInfo;

        $r1 = r0.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo inputMessage>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isOneWay()
    {
        org.apache.cxf.service.model.MessageInfo $r1, $r2;
        org.apache.cxf.service.model.OperationInfo r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.model.OperationInfo;

        $r1 = r0.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo inputMessage>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo outputMessage>;

        if $r2 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isUnwrappedCapable()
    {
        org.apache.cxf.service.model.OperationInfo r0, $r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.model.OperationInfo;

        $r1 = r0.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.OperationInfo unwrappedOperation>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.apache.cxf.service.model.OperationInfo getUnwrappedOperation()
    {
        org.apache.cxf.service.model.OperationInfo r0, $r1;

        r0 := @this: org.apache.cxf.service.model.OperationInfo;

        $r1 = r0.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.OperationInfo unwrappedOperation>;

        return $r1;
    }

    public void setUnwrappedOperation(org.apache.cxf.service.model.OperationInfo)
    {
        org.apache.cxf.service.model.OperationInfo r0, r1;

        r0 := @this: org.apache.cxf.service.model.OperationInfo;

        r1 := @parameter0: org.apache.cxf.service.model.OperationInfo;

        r0.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.OperationInfo unwrappedOperation> = r1;

        return;
    }

    public boolean isUnwrapped()
    {
        org.apache.cxf.service.model.OperationInfo r0;

        r0 := @this: org.apache.cxf.service.model.OperationInfo;

        return 0;
    }

    public org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName, javax.xml.namespace.QName)
    {
        java.lang.Object[] $r8, $r13;
        org.apache.cxf.common.i18n.Message $r7, $r12;
        java.lang.NullPointerException $r11;
        java.util.Map $r2, $r5;
        org.apache.cxf.service.model.FaultInfo $r3;
        java.lang.String $r10, $r15;
        boolean $z0;
        org.apache.cxf.service.model.OperationInfo r1;
        java.lang.IllegalArgumentException $r6;
        java.util.logging.Logger $r9, $r14;
        javax.xml.namespace.QName r0, r4;

        r1 := @this: org.apache.cxf.service.model.OperationInfo;

        r0 := @parameter0: javax.xml.namespace.QName;

        r4 := @parameter1: javax.xml.namespace.QName;

        if r0 != null goto label1;

        $r11 = new java.lang.NullPointerException;

        $r12 = new org.apache.cxf.common.i18n.Message;

        $r14 = <org.apache.cxf.service.model.OperationInfo: java.util.logging.Logger LOG>;

        $r13 = newarray (java.lang.Object)[0];

        specialinvoke $r12.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Object[])>("FAULT.NAME.NOT.NULL", $r14, $r13);

        $r15 = virtualinvoke $r12.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.NullPointerException: void <init>(java.lang.String)>($r15);

        throw $r11;

     label1:
        $r2 = r1.<org.apache.cxf.service.model.OperationInfo: java.util.Map faults>;

        if $r2 == null goto label2;

        $r5 = r1.<org.apache.cxf.service.model.OperationInfo: java.util.Map faults>;

        $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new org.apache.cxf.common.i18n.Message;

        $r9 = <org.apache.cxf.service.model.OperationInfo: java.util.logging.Logger LOG>;

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = r0;

        specialinvoke $r7.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Object[])>("DUPLICATED.FAULT.NAME", $r9, $r8);

        $r10 = virtualinvoke $r7.<org.apache.cxf.common.i18n.Message: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label2:
        $r3 = new org.apache.cxf.service.model.FaultInfo;

        specialinvoke $r3.<org.apache.cxf.service.model.FaultInfo: void <init>(javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.service.model.OperationInfo)>(r0, r4, r1);

        virtualinvoke r1.<org.apache.cxf.service.model.OperationInfo: void addFault(org.apache.cxf.service.model.FaultInfo)>($r3);

        return $r3;
    }

    public synchronized void addFault(org.apache.cxf.service.model.FaultInfo)
    {
        java.util.Map $r1, $r3;
        org.apache.cxf.service.model.OperationInfo r0;
        java.util.concurrent.ConcurrentHashMap $r5;
        org.apache.cxf.service.model.FaultInfo r2;
        javax.xml.namespace.QName $r4;

        r0 := @this: org.apache.cxf.service.model.OperationInfo;

        r2 := @parameter0: org.apache.cxf.service.model.FaultInfo;

        $r1 = r0.<org.apache.cxf.service.model.OperationInfo: java.util.Map faults>;

        if $r1 != null goto label1;

        $r5 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r5.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(4, 0.75F, 2);

        r0.<org.apache.cxf.service.model.OperationInfo: java.util.Map faults> = $r5;

     label1:
        $r3 = r0.<org.apache.cxf.service.model.OperationInfo: java.util.Map faults>;

        $r4 = virtualinvoke r2.<org.apache.cxf.service.model.FaultInfo: javax.xml.namespace.QName getFaultName()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r2);

        return;
    }

    public void removeFault(javax.xml.namespace.QName)
    {
        java.util.Map $r1, $r3;
        org.apache.cxf.service.model.OperationInfo r0;
        javax.xml.namespace.QName r2;

        r0 := @this: org.apache.cxf.service.model.OperationInfo;

        r2 := @parameter0: javax.xml.namespace.QName;

        $r1 = r0.<org.apache.cxf.service.model.OperationInfo: java.util.Map faults>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.cxf.service.model.OperationInfo: java.util.Map faults>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);

     label1:
        return;
    }

    public org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)
    {
        java.util.Map $r1, $r3;
        org.apache.cxf.service.model.OperationInfo r0;
        java.lang.Object $r4;
        org.apache.cxf.service.model.FaultInfo $r5;
        javax.xml.namespace.QName r2;

        r0 := @this: org.apache.cxf.service.model.OperationInfo;

        r2 := @parameter0: javax.xml.namespace.QName;

        $r1 = r0.<org.apache.cxf.service.model.OperationInfo: java.util.Map faults>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.cxf.service.model.OperationInfo: java.util.Map faults>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r5 = (org.apache.cxf.service.model.FaultInfo) $r4;

        return $r5;

     label1:
        return null;
    }

    public boolean hasFaults()
    {
        java.util.Map $r1, $r2;
        org.apache.cxf.service.model.OperationInfo r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.model.OperationInfo;

        $r1 = r0.<org.apache.cxf.service.model.OperationInfo: java.util.Map faults>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.cxf.service.model.OperationInfo: java.util.Map faults>;

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.util.Collection getFaults()
    {
        java.util.List $r5;
        java.util.Map $r1, $r2;
        java.util.Collection $r3, $r4;
        org.apache.cxf.service.model.OperationInfo r0;

        r0 := @this: org.apache.cxf.service.model.OperationInfo;

        $r1 = r0.<org.apache.cxf.service.model.OperationInfo: java.util.Map faults>;

        if $r1 != null goto label1;

        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r5;

     label1:
        $r2 = r0.<org.apache.cxf.service.model.OperationInfo: java.util.Map faults>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $r4 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r3);

        return $r4;
    }

    public void setParameterOrdering(java.util.List)
    {
        org.apache.cxf.service.model.OperationInfo r0;
        java.util.List r1;

        r0 := @this: org.apache.cxf.service.model.OperationInfo;

        r1 := @parameter0: java.util.List;

        r0.<org.apache.cxf.service.model.OperationInfo: java.util.List parameterOrdering> = r1;

        return;
    }

    public java.util.List getParameterOrdering()
    {
        org.apache.cxf.service.model.OperationInfo r0;
        java.util.List $r1;

        r0 := @this: org.apache.cxf.service.model.OperationInfo;

        $r1 = r0.<org.apache.cxf.service.model.OperationInfo: java.util.List parameterOrdering>;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.apache.cxf.service.model.OperationInfo r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5;
        javax.xml.namespace.QName $r3;
        java.lang.String $r6;

        r2 := @this: org.apache.cxf.service.model.OperationInfo;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[OperationInfo: ");

        $r3 = r2.<org.apache.cxf.service.model.OperationInfo: javax.xml.namespace.QName opName>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public int hashCode()
    {
        org.apache.cxf.service.model.OperationInfo r0;
        int $i0, $i2;
        javax.xml.namespace.QName $r1, $r2;

        r0 := @this: org.apache.cxf.service.model.OperationInfo;

        $r1 = r0.<org.apache.cxf.service.model.OperationInfo: javax.xml.namespace.QName opName>;

        if $r1 != null goto label1;

        $i2 = (int) -1;

        $i0 = $i2;

        goto label2;

     label1:
        $r2 = r0.<org.apache.cxf.service.model.OperationInfo: javax.xml.namespace.QName opName>;

        $i0 = virtualinvoke $r2.<javax.xml.namespace.QName: int hashCode()>();

     label2:
        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Map $r9, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.cxf.service.model.InterfaceInfo $r11, $r13;
        org.apache.cxf.service.model.MessageInfo $r5, $r6, $r7, $r8;
        org.apache.cxf.service.model.OperationInfo r1, r2;
        java.lang.Object r0;
        javax.xml.namespace.QName $r3, $r4, $r12, $r14;

        r1 := @this: org.apache.cxf.service.model.OperationInfo;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof org.apache.cxf.service.model.OperationInfo;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.apache.cxf.service.model.OperationInfo) r0;

        $r4 = r1.<org.apache.cxf.service.model.OperationInfo: javax.xml.namespace.QName opName>;

        $r3 = r2.<org.apache.cxf.service.model.OperationInfo: javax.xml.namespace.QName opName>;

        $z1 = staticinvoke <org.apache.cxf.service.model.OperationInfo: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 == 0 goto label3;

        $r6 = r1.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo inputMessage>;

        $r5 = r2.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo inputMessage>;

        $z2 = staticinvoke <org.apache.cxf.service.model.OperationInfo: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z2 == 0 goto label3;

        $r8 = r1.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo outputMessage>;

        $r7 = r2.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo outputMessage>;

        $z3 = staticinvoke <org.apache.cxf.service.model.OperationInfo: boolean equals(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z3 == 0 goto label3;

        $r10 = r1.<org.apache.cxf.service.model.OperationInfo: java.util.Map faults>;

        $r9 = r2.<org.apache.cxf.service.model.OperationInfo: java.util.Map faults>;

        $z4 = staticinvoke <org.apache.cxf.service.model.OperationInfo: boolean equals(java.lang.Object,java.lang.Object)>($r10, $r9);

        if $z4 == 0 goto label3;

        $r11 = r1.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.InterfaceInfo intf>;

        $r12 = virtualinvoke $r11.<org.apache.cxf.service.model.InterfaceInfo: javax.xml.namespace.QName getName()>();

        $r13 = r2.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.InterfaceInfo intf>;

        $r14 = virtualinvoke $r13.<org.apache.cxf.service.model.InterfaceInfo: javax.xml.namespace.QName getName()>();

        $z5 = staticinvoke <org.apache.cxf.service.model.OperationInfo: boolean equals(java.lang.Object,java.lang.Object)>($r12, $r14);

        if $z5 == 0 goto label3;

        $z6 = 1;

        goto label4;

     label3:
        $z6 = 0;

     label4:
        return $z6;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/service/model/OperationInfo;");

        <org.apache.cxf.service.model.OperationInfo: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
