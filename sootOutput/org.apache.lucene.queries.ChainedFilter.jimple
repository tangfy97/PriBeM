public class org.apache.lucene.queries.ChainedFilter extends org.apache.lucene.search.Filter
{
    public static final int OR;
    public static final int AND;
    public static final int ANDNOT;
    public static final int XOR;
    public static final int DEFAULT;
    private org.apache.lucene.search.Filter[] chain;
    private int[] logicArray;
    private int logic;

    public void <init>(org.apache.lucene.search.Filter[])
    {
        int $i1;
        org.apache.lucene.queries.ChainedFilter r0;
        org.apache.lucene.search.Filter[] r1;

        r0 := @this: org.apache.lucene.queries.ChainedFilter;

        r1 := @parameter0: org.apache.lucene.search.Filter[];

        specialinvoke r0.<org.apache.lucene.search.Filter: void <init>()>();

        r0.<org.apache.lucene.queries.ChainedFilter: org.apache.lucene.search.Filter[] chain> = null;

        $i1 = (int) -1;

        r0.<org.apache.lucene.queries.ChainedFilter: int logic> = $i1;

        r0.<org.apache.lucene.queries.ChainedFilter: org.apache.lucene.search.Filter[] chain> = r1;

        return;
    }

    public void <init>(org.apache.lucene.search.Filter[], int[])
    {
        int[] r2;
        int $i1;
        org.apache.lucene.queries.ChainedFilter r0;
        org.apache.lucene.search.Filter[] r1;

        r0 := @this: org.apache.lucene.queries.ChainedFilter;

        r1 := @parameter0: org.apache.lucene.search.Filter[];

        r2 := @parameter1: int[];

        specialinvoke r0.<org.apache.lucene.search.Filter: void <init>()>();

        r0.<org.apache.lucene.queries.ChainedFilter: org.apache.lucene.search.Filter[] chain> = null;

        $i1 = (int) -1;

        r0.<org.apache.lucene.queries.ChainedFilter: int logic> = $i1;

        r0.<org.apache.lucene.queries.ChainedFilter: org.apache.lucene.search.Filter[] chain> = r1;

        r0.<org.apache.lucene.queries.ChainedFilter: int[] logicArray> = r2;

        return;
    }

    public void <init>(org.apache.lucene.search.Filter[], int)
    {
        int i0, $i2;
        org.apache.lucene.queries.ChainedFilter r0;
        org.apache.lucene.search.Filter[] r1;

        r0 := @this: org.apache.lucene.queries.ChainedFilter;

        r1 := @parameter0: org.apache.lucene.search.Filter[];

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.lucene.search.Filter: void <init>()>();

        r0.<org.apache.lucene.queries.ChainedFilter: org.apache.lucene.search.Filter[] chain> = null;

        $i2 = (int) -1;

        r0.<org.apache.lucene.queries.ChainedFilter: int logic> = $i2;

        r0.<org.apache.lucene.queries.ChainedFilter: org.apache.lucene.search.Filter[] chain> = r1;

        r0.<org.apache.lucene.queries.ChainedFilter: int logic> = i0;

        return;
    }

    public org.apache.lucene.search.DocIdSet getDocIdSet(org.apache.lucene.index.AtomicReaderContext, org.apache.lucene.util.Bits) throws java.io.IOException
    {
        org.apache.lucene.queries.ChainedFilter r1;
        org.apache.lucene.search.DocIdSet $r4, $r6, $r8, $r9, $r10, $r11;
        int[] r0, $r2, $r7;
        int $i0, $i1, $i3;
        org.apache.lucene.util.Bits r5;
        org.apache.lucene.index.AtomicReaderContext r3;

        r1 := @this: org.apache.lucene.queries.ChainedFilter;

        r3 := @parameter0: org.apache.lucene.index.AtomicReaderContext;

        r5 := @parameter1: org.apache.lucene.util.Bits;

        r0 = newarray (int)[1];

        r0[0] = 0;

        $i0 = r1.<org.apache.lucene.queries.ChainedFilter: int logic>;

        $i3 = (int) -1;

        if $i0 == $i3 goto label1;

        $i1 = r1.<org.apache.lucene.queries.ChainedFilter: int logic>;

        $r10 = specialinvoke r1.<org.apache.lucene.queries.ChainedFilter: org.apache.lucene.search.DocIdSet getDocIdSet(org.apache.lucene.index.AtomicReaderContext,int,int[])>(r3, $i1, r0);

        $r11 = staticinvoke <org.apache.lucene.search.BitsFilteredDocIdSet: org.apache.lucene.search.DocIdSet wrap(org.apache.lucene.search.DocIdSet,org.apache.lucene.util.Bits)>($r10, r5);

        return $r11;

     label1:
        $r2 = r1.<org.apache.lucene.queries.ChainedFilter: int[] logicArray>;

        if $r2 == null goto label2;

        $r7 = r1.<org.apache.lucene.queries.ChainedFilter: int[] logicArray>;

        $r8 = specialinvoke r1.<org.apache.lucene.queries.ChainedFilter: org.apache.lucene.search.DocIdSet getDocIdSet(org.apache.lucene.index.AtomicReaderContext,int[],int[])>(r3, $r7, r0);

        $r9 = staticinvoke <org.apache.lucene.search.BitsFilteredDocIdSet: org.apache.lucene.search.DocIdSet wrap(org.apache.lucene.search.DocIdSet,org.apache.lucene.util.Bits)>($r8, r5);

        return $r9;

     label2:
        $r4 = specialinvoke r1.<org.apache.lucene.queries.ChainedFilter: org.apache.lucene.search.DocIdSet getDocIdSet(org.apache.lucene.index.AtomicReaderContext,int,int[])>(r3, 0, r0);

        $r6 = staticinvoke <org.apache.lucene.search.BitsFilteredDocIdSet: org.apache.lucene.search.DocIdSet wrap(org.apache.lucene.search.DocIdSet,org.apache.lucene.util.Bits)>($r4, r5);

        return $r6;
    }

    private org.apache.lucene.search.DocIdSetIterator getDISI(org.apache.lucene.search.Filter, org.apache.lucene.index.AtomicReaderContext) throws java.io.IOException
    {
        org.apache.lucene.queries.ChainedFilter r8;
        org.apache.lucene.search.Filter r0;
        org.apache.lucene.search.DocIdSet $r2, $r4, $r6;
        org.apache.lucene.index.AtomicReaderContext r1;
        org.apache.lucene.search.DocIdSetIterator $r3, $r5, $r7;

        r8 := @this: org.apache.lucene.queries.ChainedFilter;

        r0 := @parameter0: org.apache.lucene.search.Filter;

        r1 := @parameter1: org.apache.lucene.index.AtomicReaderContext;

        $r2 = virtualinvoke r0.<org.apache.lucene.search.Filter: org.apache.lucene.search.DocIdSet getDocIdSet(org.apache.lucene.index.AtomicReaderContext,org.apache.lucene.util.Bits)>(r1, null);

        if $r2 != null goto label1;

        $r6 = <org.apache.lucene.search.DocIdSet: org.apache.lucene.search.DocIdSet EMPTY_DOCIDSET>;

        $r7 = virtualinvoke $r6.<org.apache.lucene.search.DocIdSet: org.apache.lucene.search.DocIdSetIterator iterator()>();

        return $r7;

     label1:
        $r3 = virtualinvoke $r2.<org.apache.lucene.search.DocIdSet: org.apache.lucene.search.DocIdSetIterator iterator()>();

        if $r3 != null goto label2;

        $r4 = <org.apache.lucene.search.DocIdSet: org.apache.lucene.search.DocIdSet EMPTY_DOCIDSET>;

        $r5 = virtualinvoke $r4.<org.apache.lucene.search.DocIdSet: org.apache.lucene.search.DocIdSetIterator iterator()>();

        return $r5;

     label2:
        return $r3;
    }

    private org.apache.lucene.util.OpenBitSetDISI initialResult(org.apache.lucene.index.AtomicReaderContext, int, int[]) throws java.io.IOException
    {
        org.apache.lucene.queries.ChainedFilter r4;
        long $l5;
        org.apache.lucene.util.OpenBitSetDISI $r2, $r3, $r9, r13;
        int[] r5;
        int i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11;
        org.apache.lucene.search.DocIdSetIterator $r8, $r12;
        org.apache.lucene.search.Filter[] $r6, $r10;
        org.apache.lucene.search.Filter $r7, $r11;
        org.apache.lucene.index.AtomicReaderContext r0;
        org.apache.lucene.index.AtomicReader $r1;

        r4 := @this: org.apache.lucene.queries.ChainedFilter;

        r0 := @parameter0: org.apache.lucene.index.AtomicReaderContext;

        i0 := @parameter1: int;

        r5 := @parameter2: int[];

        $r1 = virtualinvoke r0.<org.apache.lucene.index.AtomicReaderContext: org.apache.lucene.index.AtomicReader reader()>();

        if i0 != 1 goto label1;

        $r9 = new org.apache.lucene.util.OpenBitSetDISI;

        $r10 = r4.<org.apache.lucene.queries.ChainedFilter: org.apache.lucene.search.Filter[] chain>;

        $i8 = r5[0];

        $r11 = $r10[$i8];

        $r12 = specialinvoke r4.<org.apache.lucene.queries.ChainedFilter: org.apache.lucene.search.DocIdSetIterator getDISI(org.apache.lucene.search.Filter,org.apache.lucene.index.AtomicReaderContext)>($r11, r0);

        $i9 = virtualinvoke $r1.<org.apache.lucene.index.AtomicReader: int maxDoc()>();

        specialinvoke $r9.<org.apache.lucene.util.OpenBitSetDISI: void <init>(org.apache.lucene.search.DocIdSetIterator,int)>($r12, $i9);

        r13 = $r9;

        $i10 = r5[0];

        $i11 = $i10 + 1;

        r5[0] = $i11;

        goto label3;

     label1:
        if i0 != 2 goto label2;

        $r3 = new org.apache.lucene.util.OpenBitSetDISI;

        $r6 = r4.<org.apache.lucene.queries.ChainedFilter: org.apache.lucene.search.Filter[] chain>;

        $i2 = r5[0];

        $r7 = $r6[$i2];

        $r8 = specialinvoke r4.<org.apache.lucene.queries.ChainedFilter: org.apache.lucene.search.DocIdSetIterator getDISI(org.apache.lucene.search.Filter,org.apache.lucene.index.AtomicReaderContext)>($r7, r0);

        $i3 = virtualinvoke $r1.<org.apache.lucene.index.AtomicReader: int maxDoc()>();

        specialinvoke $r3.<org.apache.lucene.util.OpenBitSetDISI: void <init>(org.apache.lucene.search.DocIdSetIterator,int)>($r8, $i3);

        r13 = $r3;

        $i4 = virtualinvoke $r1.<org.apache.lucene.index.AtomicReader: int maxDoc()>();

        $l5 = (long) $i4;

        virtualinvoke $r3.<org.apache.lucene.util.OpenBitSetDISI: void flip(long,long)>(0L, $l5);

        $i6 = r5[0];

        $i7 = $i6 + 1;

        r5[0] = $i7;

        goto label3;

     label2:
        $r2 = new org.apache.lucene.util.OpenBitSetDISI;

        $i1 = virtualinvoke $r1.<org.apache.lucene.index.AtomicReader: int maxDoc()>();

        specialinvoke $r2.<org.apache.lucene.util.OpenBitSetDISI: void <init>(int)>($i1);

        r13 = $r2;

     label3:
        return r13;
    }

    private org.apache.lucene.search.DocIdSet getDocIdSet(org.apache.lucene.index.AtomicReaderContext, int, int[]) throws java.io.IOException
    {
        org.apache.lucene.queries.ChainedFilter r0;
        org.apache.lucene.util.OpenBitSetDISI $r3;
        org.apache.lucene.search.Filter[] $r4, $r5;
        org.apache.lucene.search.Filter $r6;
        org.apache.lucene.search.DocIdSet $r7;
        int[] r2;
        int i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.lucene.index.AtomicReaderContext r1;

        r0 := @this: org.apache.lucene.queries.ChainedFilter;

        r1 := @parameter0: org.apache.lucene.index.AtomicReaderContext;

        i0 := @parameter1: int;

        r2 := @parameter2: int[];

        $r3 = specialinvoke r0.<org.apache.lucene.queries.ChainedFilter: org.apache.lucene.util.OpenBitSetDISI initialResult(org.apache.lucene.index.AtomicReaderContext,int,int[])>(r1, i0, r2);

     label1:
        $i2 = r2[0];

        $r4 = r0.<org.apache.lucene.queries.ChainedFilter: org.apache.lucene.search.Filter[] chain>;

        $i1 = lengthof $r4;

        if $i2 >= $i1 goto label2;

        $r5 = r0.<org.apache.lucene.queries.ChainedFilter: org.apache.lucene.search.Filter[] chain>;

        $i3 = r2[0];

        $r6 = $r5[$i3];

        $r7 = virtualinvoke $r6.<org.apache.lucene.search.Filter: org.apache.lucene.search.DocIdSet getDocIdSet(org.apache.lucene.index.AtomicReaderContext,org.apache.lucene.util.Bits)>(r1, null);

        specialinvoke r0.<org.apache.lucene.queries.ChainedFilter: void doChain(org.apache.lucene.util.OpenBitSetDISI,int,org.apache.lucene.search.DocIdSet)>($r3, i0, $r7);

        $i4 = r2[0];

        $i5 = $i4 + 1;

        r2[0] = $i5;

        goto label1;

     label2:
        return $r3;
    }

    private org.apache.lucene.search.DocIdSet getDocIdSet(org.apache.lucene.index.AtomicReaderContext, int[], int[]) throws java.io.IOException
    {
        org.apache.lucene.queries.ChainedFilter r1;
        org.apache.lucene.util.OpenBitSetDISI $r5;
        org.apache.lucene.search.DocIdSet $r9;
        int[] r0, r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.IllegalArgumentException $r10;
        org.apache.lucene.search.Filter[] $r2, $r6, $r7;
        org.apache.lucene.search.Filter $r8;
        org.apache.lucene.index.AtomicReaderContext r3;

        r1 := @this: org.apache.lucene.queries.ChainedFilter;

        r3 := @parameter0: org.apache.lucene.index.AtomicReaderContext;

        r0 := @parameter1: int[];

        r4 := @parameter2: int[];

        $i1 = lengthof r0;

        $r2 = r1.<org.apache.lucene.queries.ChainedFilter: org.apache.lucene.search.Filter[] chain>;

        $i0 = lengthof $r2;

        if $i1 == $i0 goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid number of elements in logic array");

        throw $r10;

     label1:
        $i2 = r0[0];

        $r5 = specialinvoke r1.<org.apache.lucene.queries.ChainedFilter: org.apache.lucene.util.OpenBitSetDISI initialResult(org.apache.lucene.index.AtomicReaderContext,int,int[])>(r3, $i2, r4);

     label2:
        $i4 = r4[0];

        $r6 = r1.<org.apache.lucene.queries.ChainedFilter: org.apache.lucene.search.Filter[] chain>;

        $i3 = lengthof $r6;

        if $i4 >= $i3 goto label3;

        $i5 = r4[0];

        $i7 = r0[$i5];

        $r7 = r1.<org.apache.lucene.queries.ChainedFilter: org.apache.lucene.search.Filter[] chain>;

        $i6 = r4[0];

        $r8 = $r7[$i6];

        $r9 = virtualinvoke $r8.<org.apache.lucene.search.Filter: org.apache.lucene.search.DocIdSet getDocIdSet(org.apache.lucene.index.AtomicReaderContext,org.apache.lucene.util.Bits)>(r3, null);

        specialinvoke r1.<org.apache.lucene.queries.ChainedFilter: void doChain(org.apache.lucene.util.OpenBitSetDISI,int,org.apache.lucene.search.DocIdSet)>($r5, $i7, $r9);

        $i8 = r4[0];

        $i9 = $i8 + 1;

        r4[0] = $i9;

        goto label2;

     label3:
        return $r5;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.search.Filter r4;
        int i0, i1;
        java.lang.StringBuilder $r0;
        org.apache.lucene.queries.ChainedFilter r1;
        java.lang.String $r3;
        org.apache.lucene.search.Filter[] r2;

        r1 := @this: org.apache.lucene.queries.ChainedFilter;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ChainedFilter: [");

        r2 = r1.<org.apache.lucene.queries.ChainedFilter: org.apache.lucene.search.Filter[] chain>;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r4 = r2[i1];

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    private void doChain(org.apache.lucene.util.OpenBitSetDISI, int, org.apache.lucene.search.DocIdSet) throws java.io.IOException
    {
        org.apache.lucene.queries.ChainedFilter r3;
        org.apache.lucene.util.OpenBitSetDISI r2;
        org.apache.lucene.search.DocIdSet r0, $r4, $r5;
        int i0;
        org.apache.lucene.util.OpenBitSet $r6, $r7, $r8, $r9;
        boolean $z0;
        org.apache.lucene.search.DocIdSetIterator $r1, r10;

        r3 := @this: org.apache.lucene.queries.ChainedFilter;

        r2 := @parameter0: org.apache.lucene.util.OpenBitSetDISI;

        i0 := @parameter1: int;

        r0 := @parameter2: org.apache.lucene.search.DocIdSet;

        $z0 = r0 instanceof org.apache.lucene.util.OpenBitSet;

        if $z0 == 0 goto label06;

        tableswitch(i0)
        {
            case 0: goto label01;
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            default: goto label05;
        };

     label01:
        $r9 = (org.apache.lucene.util.OpenBitSet) r0;

        virtualinvoke r2.<org.apache.lucene.util.OpenBitSetDISI: void or(org.apache.lucene.util.OpenBitSet)>($r9);

        goto label14;

     label02:
        $r8 = (org.apache.lucene.util.OpenBitSet) r0;

        virtualinvoke r2.<org.apache.lucene.util.OpenBitSetDISI: void and(org.apache.lucene.util.OpenBitSet)>($r8);

        goto label14;

     label03:
        $r7 = (org.apache.lucene.util.OpenBitSet) r0;

        virtualinvoke r2.<org.apache.lucene.util.OpenBitSetDISI: void andNot(org.apache.lucene.util.OpenBitSet)>($r7);

        goto label14;

     label04:
        $r6 = (org.apache.lucene.util.OpenBitSet) r0;

        virtualinvoke r2.<org.apache.lucene.util.OpenBitSetDISI: void xor(org.apache.lucene.util.OpenBitSet)>($r6);

        goto label14;

     label05:
        specialinvoke r3.<org.apache.lucene.queries.ChainedFilter: void doChain(org.apache.lucene.util.OpenBitSetDISI,int,org.apache.lucene.search.DocIdSet)>(r2, 0, r0);

        goto label14;

     label06:
        if r0 != null goto label07;

        $r5 = <org.apache.lucene.search.DocIdSet: org.apache.lucene.search.DocIdSet EMPTY_DOCIDSET>;

        r10 = virtualinvoke $r5.<org.apache.lucene.search.DocIdSet: org.apache.lucene.search.DocIdSetIterator iterator()>();

        goto label08;

     label07:
        $r1 = virtualinvoke r0.<org.apache.lucene.search.DocIdSet: org.apache.lucene.search.DocIdSetIterator iterator()>();

        r10 = $r1;

        if $r1 != null goto label08;

        $r4 = <org.apache.lucene.search.DocIdSet: org.apache.lucene.search.DocIdSet EMPTY_DOCIDSET>;

        r10 = virtualinvoke $r4.<org.apache.lucene.search.DocIdSet: org.apache.lucene.search.DocIdSetIterator iterator()>();

     label08:
        tableswitch(i0)
        {
            case 0: goto label09;
            case 1: goto label10;
            case 2: goto label11;
            case 3: goto label12;
            default: goto label13;
        };

     label09:
        virtualinvoke r2.<org.apache.lucene.util.OpenBitSetDISI: void inPlaceOr(org.apache.lucene.search.DocIdSetIterator)>(r10);

        goto label14;

     label10:
        virtualinvoke r2.<org.apache.lucene.util.OpenBitSetDISI: void inPlaceAnd(org.apache.lucene.search.DocIdSetIterator)>(r10);

        goto label14;

     label11:
        virtualinvoke r2.<org.apache.lucene.util.OpenBitSetDISI: void inPlaceNot(org.apache.lucene.search.DocIdSetIterator)>(r10);

        goto label14;

     label12:
        virtualinvoke r2.<org.apache.lucene.util.OpenBitSetDISI: void inPlaceXor(org.apache.lucene.search.DocIdSetIterator)>(r10);

        goto label14;

     label13:
        specialinvoke r3.<org.apache.lucene.queries.ChainedFilter: void doChain(org.apache.lucene.util.OpenBitSetDISI,int,org.apache.lucene.search.DocIdSet)>(r2, 0, r0);

     label14:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.lucene.queries.ChainedFilter: int DEFAULT> = 0;

        <org.apache.lucene.queries.ChainedFilter: int XOR> = 3;

        <org.apache.lucene.queries.ChainedFilter: int ANDNOT> = 2;

        <org.apache.lucene.queries.ChainedFilter: int AND> = 1;

        <org.apache.lucene.queries.ChainedFilter: int OR> = 0;

        return;
    }
}
