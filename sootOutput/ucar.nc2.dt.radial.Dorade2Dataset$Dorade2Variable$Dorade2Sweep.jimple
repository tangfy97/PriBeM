class ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep extends java.lang.Object implements ucar.nc2.dt.RadialDatasetSweep$Sweep
{
    int nrays;
    int ngates;
    double meanElevation;
    ucar.nc2.Variable sweepVar;
    int sweepno;
    final ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable this$1;

    void <init>(ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable, ucar.nc2.Variable, int, int, int)
    {
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep r0;
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable r1;
        int i0, i1, i2;
        ucar.nc2.Variable r2;

        r0 := @this: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep;

        r1 := @parameter0: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable;

        r2 := @parameter1: ucar.nc2.Variable;

        i2 := @parameter2: int;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r0.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: double meanElevation> = #NaN;

        r0.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: ucar.nc2.Variable sweepVar> = r2;

        r0.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: int nrays> = i0;

        r0.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: int ngates> = i1;

        r0.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: int sweepno> = i2;

        return;
    }

    public ucar.nc2.Variable getsweepVar()
    {
        ucar.nc2.Variable $r1;
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep r0;

        r0 := @this: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep;

        $r1 = r0.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: ucar.nc2.Variable sweepVar>;

        return $r1;
    }

    public ucar.nc2.dt.RadialDatasetSweep$Type getType()
    {
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep r0;

        r0 := @this: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep;

        return null;
    }

    public float getLon(int)
    {
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep r0;
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable $r1;
        int i0;
        float $f0;
        float[] $r3;
        ucar.nc2.dt.radial.Dorade2Dataset $r2;

        r0 := @this: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable this$1>;

        $r2 = $r1.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable: ucar.nc2.dt.radial.Dorade2Dataset this$0>;

        $r3 = $r2.<ucar.nc2.dt.radial.Dorade2Dataset: float[] lonv>;

        $f0 = $r3[i0];

        return $f0;
    }

    public int getGateNumber()
    {
        int $i0;
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep r0;

        r0 := @this: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep;

        $i0 = r0.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: int ngates>;

        return $i0;
    }

    public int getRadialNumber()
    {
        int $i0;
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep r0;

        r0 := @this: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep;

        $i0 = r0.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: int nrays>;

        return $i0;
    }

    public int getSweepIndex()
    {
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep r0;

        r0 := @this: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep;

        return 0;
    }

    public float[] readData() throws java.io.IOException
    {
        float[] $r2;
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep r0;
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable $r1;

        r0 := @this: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep;

        $r1 = r0.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable this$1>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable: float[] readAllData()>();

        return $r2;
    }

    public float[] readData(int) throws java.io.IOException
    {
        float[] $r9, $r10;
        int[] $r2, r4;
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep r0;
        int $i0, i1;
        ucar.nc2.Variable $r1, $r3, $r5;
        java.lang.String $r13;
        java.io.IOException $r12;
        ucar.ma2.Array $r6;
        ucar.ma2.InvalidRangeException $r11;
        java.lang.Class $r7;
        java.lang.Object $r8;

        r0 := @this: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep;

        i1 := @parameter0: int;

        $r1 = r0.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: ucar.nc2.Variable sweepVar>;

        $r2 = virtualinvoke $r1.<ucar.nc2.Variable: int[] getShape()>();

        $r3 = r0.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: ucar.nc2.Variable sweepVar>;

        $i0 = virtualinvoke $r3.<ucar.nc2.Variable: int getRank()>();

        r4 = newarray (int)[$i0];

        $r2[0] = 1;

        r4[0] = i1;

     label1:
        $r5 = r0.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: ucar.nc2.Variable sweepVar>;

        $r6 = virtualinvoke $r5.<ucar.nc2.Variable: ucar.ma2.Array read(int[],int[])>(r4, $r2);

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        $r12 = new java.io.IOException;

        $r13 = virtualinvoke $r11.<ucar.ma2.InvalidRangeException: java.lang.String getMessage()>();

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label4:
        $r7 = <java.lang.Float: java.lang.Class TYPE>;

        $r8 = virtualinvoke $r6.<ucar.ma2.Array: java.lang.Object get1DJavaArray(java.lang.Class)>($r7);

        $r9 = (float[]) $r8;

        $r10 = (float[]) $r9;

        return $r10;

        catch ucar.ma2.InvalidRangeException from label1 to label2 with label3;
    }

    public float getBeamWidth()
    {
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable $r1, $r2, $r7;
        java.io.IOException $r9;
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep r0;
        float $f0, $f1;
        ucar.nc2.Variable $r6;
        ucar.nc2.dt.radial.Dorade2Dataset $r3, $r4, $r8;
        ucar.nc2.dataset.NetcdfDataset $r5;

        r0 := @this: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep;

     label1:
        $r1 = r0.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable this$1>;

        $r4 = $r1.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable: ucar.nc2.dt.radial.Dorade2Dataset this$0>;

        $r2 = r0.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable this$1>;

        $r3 = $r2.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable: ucar.nc2.dt.radial.Dorade2Dataset this$0>;

        $r5 = staticinvoke <ucar.nc2.dt.radial.Dorade2Dataset: ucar.nc2.dataset.NetcdfDataset access$100(ucar.nc2.dt.radial.Dorade2Dataset)>($r3);

        $r6 = virtualinvoke $r5.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("bm_width");

        $f0 = virtualinvoke $r6.<ucar.nc2.Variable: float readScalarFloat()>();

        $r4.<ucar.nc2.dt.radial.Dorade2Dataset: float bwidthv> = $f0;

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        virtualinvoke $r9.<java.io.IOException: void printStackTrace()>();

     label4:
        $r7 = r0.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable this$1>;

        $r8 = $r7.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable: ucar.nc2.dt.radial.Dorade2Dataset this$0>;

        $f1 = $r8.<ucar.nc2.dt.radial.Dorade2Dataset: float bwidthv>;

        return $f1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public float getNyquistFrequency()
    {
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep r0;

        r0 := @this: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep;

        return 0.0F;
    }

    public float getRangeToFirstGate()
    {
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable $r1, $r2, $r7;
        java.io.IOException $r9;
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep r0;
        float $f0, $f1;
        ucar.nc2.Variable $r6;
        ucar.nc2.dt.radial.Dorade2Dataset $r3, $r4, $r8;
        ucar.nc2.dataset.NetcdfDataset $r5;

        r0 := @this: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep;

     label1:
        $r1 = r0.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable this$1>;

        $r4 = $r1.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable: ucar.nc2.dt.radial.Dorade2Dataset this$0>;

        $r2 = r0.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable this$1>;

        $r3 = $r2.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable: ucar.nc2.dt.radial.Dorade2Dataset this$0>;

        $r5 = staticinvoke <ucar.nc2.dt.radial.Dorade2Dataset: ucar.nc2.dataset.NetcdfDataset access$100(ucar.nc2.dt.radial.Dorade2Dataset)>($r3);

        $r6 = virtualinvoke $r5.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("Range_to_First_Cell");

        $f0 = virtualinvoke $r6.<ucar.nc2.Variable: float readScalarFloat()>();

        $r4.<ucar.nc2.dt.radial.Dorade2Dataset: float ranv> = $f0;

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        virtualinvoke $r9.<java.io.IOException: void printStackTrace()>();

     label4:
        $r7 = r0.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable this$1>;

        $r8 = $r7.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable: ucar.nc2.dt.radial.Dorade2Dataset this$0>;

        $f1 = $r8.<ucar.nc2.dt.radial.Dorade2Dataset: float ranv>;

        return $f1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public float getGateSize()
    {
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable $r1, $r2, $r7;
        java.io.IOException $r9;
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep r0;
        float $f0, $f1;
        ucar.nc2.Variable $r6;
        ucar.nc2.dt.radial.Dorade2Dataset $r3, $r4, $r8;
        ucar.nc2.dataset.NetcdfDataset $r5;

        r0 := @this: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep;

     label1:
        $r1 = r0.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable this$1>;

        $r4 = $r1.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable: ucar.nc2.dt.radial.Dorade2Dataset this$0>;

        $r2 = r0.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable this$1>;

        $r3 = $r2.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable: ucar.nc2.dt.radial.Dorade2Dataset this$0>;

        $r5 = staticinvoke <ucar.nc2.dt.radial.Dorade2Dataset: ucar.nc2.dataset.NetcdfDataset access$100(ucar.nc2.dt.radial.Dorade2Dataset)>($r3);

        $r6 = virtualinvoke $r5.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("Cell_Spacing");

        $f0 = virtualinvoke $r6.<ucar.nc2.Variable: float readScalarFloat()>();

        $r4.<ucar.nc2.dt.radial.Dorade2Dataset: float cellv> = $f0;

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        virtualinvoke $r9.<java.io.IOException: void printStackTrace()>();

     label4:
        $r7 = r0.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable this$1>;

        $r8 = $r7.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable: ucar.nc2.dt.radial.Dorade2Dataset this$0>;

        $f1 = $r8.<ucar.nc2.dt.radial.Dorade2Dataset: float cellv>;

        return $f1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public float getMeanElevation()
    {
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable $r2;
        float[] $r4;
        long $l1;
        ucar.ma2.Array $r5;
        int[] r0;
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep r1;
        int $i0;
        float $f0;
        ucar.nc2.dt.radial.Dorade2Dataset $r3;
        double $d0, $d1, $d2, $d3;

        r1 := @this: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep;

        r0 = newarray (int)[1];

        $i0 = r1.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: int nrays>;

        r0[0] = $i0;

        $r2 = r1.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable this$1>;

        $r3 = $r2.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable: ucar.nc2.dt.radial.Dorade2Dataset this$0>;

        $r4 = $r3.<ucar.nc2.dt.radial.Dorade2Dataset: float[] elev>;

        $r5 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[],java.lang.Object)>(class "Ljava/lang/Float;", r0, $r4);

        $d0 = staticinvoke <ucar.ma2.MAMath: double sumDouble(ucar.ma2.Array)>($r5);

        $l1 = virtualinvoke $r5.<ucar.ma2.Array: long getSize()>();

        $d1 = (double) $l1;

        $d2 = $d0 / $d1;

        r1.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: double meanElevation> = $d2;

        $d3 = r1.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: double meanElevation>;

        $f0 = (float) $d3;

        return $f0;
    }

    public float getElevation(int)
    {
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep r0;
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable $r1;
        int i0;
        float $f0;
        float[] $r3;
        ucar.nc2.dt.radial.Dorade2Dataset $r2;

        r0 := @this: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable this$1>;

        $r2 = $r1.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable: ucar.nc2.dt.radial.Dorade2Dataset this$0>;

        $r3 = $r2.<ucar.nc2.dt.radial.Dorade2Dataset: float[] elev>;

        $f0 = $r3[i0];

        return $f0;
    }

    public float[] getElevation()
    {
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep r0;
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable $r1;
        float[] $r3;
        ucar.nc2.dt.radial.Dorade2Dataset $r2;

        r0 := @this: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep;

        $r1 = r0.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable this$1>;

        $r2 = $r1.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable: ucar.nc2.dt.radial.Dorade2Dataset this$0>;

        $r3 = $r2.<ucar.nc2.dt.radial.Dorade2Dataset: float[] elev>;

        return $r3;
    }

    public float getAzimuth(int)
    {
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep r0;
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable $r1;
        int i0;
        float $f0;
        float[] $r3;
        ucar.nc2.dt.radial.Dorade2Dataset $r2;

        r0 := @this: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable this$1>;

        $r2 = $r1.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable: ucar.nc2.dt.radial.Dorade2Dataset this$0>;

        $r3 = $r2.<ucar.nc2.dt.radial.Dorade2Dataset: float[] aziv>;

        $f0 = $r3[i0];

        return $f0;
    }

    public float[] getAzimuth()
    {
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep r0;
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable $r1;
        float[] $r3;
        ucar.nc2.dt.radial.Dorade2Dataset $r2;

        r0 := @this: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep;

        $r1 = r0.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable this$1>;

        $r2 = $r1.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable: ucar.nc2.dt.radial.Dorade2Dataset this$0>;

        $r3 = $r2.<ucar.nc2.dt.radial.Dorade2Dataset: float[] aziv>;

        return $r3;
    }

    public float getTime()
    {
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep r0;
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable $r1;
        double[] $r3;
        float $f0;
        ucar.nc2.dt.radial.Dorade2Dataset $r2;
        double $d0;

        r0 := @this: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep;

        $r1 = r0.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable this$1>;

        $r2 = $r1.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable: ucar.nc2.dt.radial.Dorade2Dataset this$0>;

        $r3 = $r2.<ucar.nc2.dt.radial.Dorade2Dataset: double[] timv>;

        $d0 = $r3[0];

        $f0 = (float) $d0;

        return $f0;
    }

    public float getTime(int)
    {
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep r0;
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable $r1;
        int i0;
        double[] $r3;
        float $f0;
        ucar.nc2.dt.radial.Dorade2Dataset $r2;
        double $d0;

        r0 := @this: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable this$1>;

        $r2 = $r1.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable: ucar.nc2.dt.radial.Dorade2Dataset this$0>;

        $r3 = $r2.<ucar.nc2.dt.radial.Dorade2Dataset: double[] timv>;

        $d0 = $r3[i0];

        $f0 = (float) $d0;

        return $f0;
    }

    public ucar.unidata.geoloc.EarthLocation getOrigin(int)
    {
        ucar.unidata.geoloc.EarthLocationImpl $r0;
        float[] $r4, $r7, $r10;
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep r1;
        int i0;
        double $d0, $d1, $d2;
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable $r2, $r5, $r8;
        float $f0, $f1, $f2;
        ucar.nc2.dt.radial.Dorade2Dataset $r3, $r6, $r9;

        r1 := @this: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep;

        i0 := @parameter0: int;

        $r0 = new ucar.unidata.geoloc.EarthLocationImpl;

        $r2 = r1.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable this$1>;

        $r3 = $r2.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable: ucar.nc2.dt.radial.Dorade2Dataset this$0>;

        $r4 = $r3.<ucar.nc2.dt.radial.Dorade2Dataset: float[] latv>;

        $f0 = $r4[i0];

        $d2 = (double) $f0;

        $r5 = r1.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable this$1>;

        $r6 = $r5.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable: ucar.nc2.dt.radial.Dorade2Dataset this$0>;

        $r7 = $r6.<ucar.nc2.dt.radial.Dorade2Dataset: float[] lonv>;

        $f1 = $r7[i0];

        $d1 = (double) $f1;

        $r8 = r1.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable this$1>;

        $r9 = $r8.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable: ucar.nc2.dt.radial.Dorade2Dataset this$0>;

        $r10 = $r9.<ucar.nc2.dt.radial.Dorade2Dataset: float[] altv>;

        $f2 = $r10[i0];

        $d0 = (double) $f2;

        specialinvoke $r0.<ucar.unidata.geoloc.EarthLocationImpl: void <init>(double,double,double)>($d2, $d1, $d0);

        return $r0;
    }

    public float getMeanAzimuth()
    {
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep r0;
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable $r2;
        ucar.nc2.dt.RadialDatasetSweep$Type $r1;
        float $f0;

        r0 := @this: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep;

        $r1 = virtualinvoke r0.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: ucar.nc2.dt.RadialDatasetSweep$Type getType()>();

        if $r1 == null goto label1;

        $r2 = r0.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable this$1>;

        $f0 = $r2.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable: float azi>;

        return $f0;

     label1:
        return 0.0F;
    }

    public java.util.Date getStartingTime()
    {
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep r0;
        java.util.Date $r3;
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable $r1;
        ucar.nc2.dt.radial.Dorade2Dataset $r2;

        r0 := @this: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep;

        $r1 = r0.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable this$1>;

        $r2 = $r1.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable: ucar.nc2.dt.radial.Dorade2Dataset this$0>;

        $r3 = staticinvoke <ucar.nc2.dt.radial.Dorade2Dataset: java.util.Date access$200(ucar.nc2.dt.radial.Dorade2Dataset)>($r2);

        return $r3;
    }

    public java.util.Date getEndingTime()
    {
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep r0;
        java.util.Date $r3;
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable $r1;
        ucar.nc2.dt.radial.Dorade2Dataset $r2;

        r0 := @this: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep;

        $r1 = r0.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable this$1>;

        $r2 = $r1.<ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable: ucar.nc2.dt.radial.Dorade2Dataset this$0>;

        $r3 = staticinvoke <ucar.nc2.dt.radial.Dorade2Dataset: java.util.Date access$300(ucar.nc2.dt.radial.Dorade2Dataset)>($r2);

        return $r3;
    }

    public void clearSweepMemory()
    {
        ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep r0;

        r0 := @this: ucar.nc2.dt.radial.Dorade2Dataset$Dorade2Variable$Dorade2Sweep;

        return;
    }
}
