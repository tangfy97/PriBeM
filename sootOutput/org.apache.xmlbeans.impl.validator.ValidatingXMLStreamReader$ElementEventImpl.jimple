class org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl extends java.lang.Object implements org.apache.xmlbeans.impl.common.ValidatorListener$Event
{
    private static final int BUF_LENGTH;
    private char[] _buf;
    private int _length;
    private boolean _supportForGetTextCharacters;
    private javax.xml.stream.XMLStreamReader _xmlStream;

    private void <init>()
    {
        char[] $r1;
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (char)[1024];

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: char[] _buf> = $r1;

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: boolean _supportForGetTextCharacters> = 1;

        return;
    }

    private void setXMLStreamReader(javax.xml.stream.XMLStreamReader)
    {
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl r0;
        javax.xml.stream.XMLStreamReader r1;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl;

        r1 := @parameter0: javax.xml.stream.XMLStreamReader;

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: javax.xml.stream.XMLStreamReader _xmlStream> = r1;

        return;
    }

    public org.apache.xmlbeans.XmlCursor getLocationAsCursor()
    {
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl;

        return null;
    }

    public javax.xml.stream.Location getLocation()
    {
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl r0;
        javax.xml.stream.XMLStreamReader $r1;
        javax.xml.stream.Location $r2;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: javax.xml.stream.XMLStreamReader _xmlStream>;

        $r2 = interfaceinvoke $r1.<javax.xml.stream.XMLStreamReader: javax.xml.stream.Location getLocation()>();

        return $r2;
    }

    public java.lang.String getXsiType()
    {
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl r0;
        java.lang.String $r2;
        javax.xml.stream.XMLStreamReader $r1;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: javax.xml.stream.XMLStreamReader _xmlStream>;

        $r2 = interfaceinvoke $r1.<javax.xml.stream.XMLStreamReader: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema-instance", "type");

        return $r2;
    }

    public java.lang.String getXsiNil()
    {
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl r0;
        java.lang.String $r2;
        javax.xml.stream.XMLStreamReader $r1;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: javax.xml.stream.XMLStreamReader _xmlStream>;

        $r2 = interfaceinvoke $r1.<javax.xml.stream.XMLStreamReader: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema-instance", "nil");

        return $r2;
    }

    public java.lang.String getXsiLoc()
    {
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl r0;
        java.lang.String $r2;
        javax.xml.stream.XMLStreamReader $r1;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: javax.xml.stream.XMLStreamReader _xmlStream>;

        $r2 = interfaceinvoke $r1.<javax.xml.stream.XMLStreamReader: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema-instance", "schemaLocation");

        return $r2;
    }

    public java.lang.String getXsiNoLoc()
    {
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl r0;
        java.lang.String $r2;
        javax.xml.stream.XMLStreamReader $r1;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: javax.xml.stream.XMLStreamReader _xmlStream>;

        $r2 = interfaceinvoke $r1.<javax.xml.stream.XMLStreamReader: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema-instance", "noNamespaceSchemaLocation");

        return $r2;
    }

    public javax.xml.namespace.QName getName()
    {
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl r0;
        javax.xml.stream.XMLStreamReader $r1, $r3, $r5;
        javax.xml.namespace.QName $r2;
        java.lang.String $r4, $r6;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: javax.xml.stream.XMLStreamReader _xmlStream>;

        $z0 = interfaceinvoke $r1.<javax.xml.stream.XMLStreamReader: boolean hasName()>();

        if $z0 == 0 goto label1;

        $r2 = new javax.xml.namespace.QName;

        $r3 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: javax.xml.stream.XMLStreamReader _xmlStream>;

        $r4 = interfaceinvoke $r3.<javax.xml.stream.XMLStreamReader: java.lang.String getNamespaceURI()>();

        $r5 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: javax.xml.stream.XMLStreamReader _xmlStream>;

        $r6 = interfaceinvoke $r5.<javax.xml.stream.XMLStreamReader: java.lang.String getLocalName()>();

        specialinvoke $r2.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r4, $r6);

        return $r2;

     label1:
        return null;
    }

    public java.lang.String getText()
    {
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl r0;
        int $i0;
        char[] $r2;
        java.lang.String $r1;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl;

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: int _length> = 0;

        specialinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: void addTextToBuffer()>();

        $r1 = new java.lang.String;

        $r2 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: char[] _buf>;

        $i0 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: int _length>;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>($r2, 0, $i0);

        return $r1;
    }

    public java.lang.String getText(int)
    {
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl r0;
        javax.xml.stream.XMLStreamReader $r1;
        int i0;
        java.lang.String $r2, $r3;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: javax.xml.stream.XMLStreamReader _xmlStream>;

        $r2 = interfaceinvoke $r1.<javax.xml.stream.XMLStreamReader: java.lang.String getText()>();

        $r3 = staticinvoke <org.apache.xmlbeans.impl.common.XmlWhitespace: java.lang.String collapse(java.lang.String,int)>($r2, i0);

        return $r3;
    }

    public boolean textIsWhitespace()
    {
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl r0;
        javax.xml.stream.XMLStreamReader $r1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: javax.xml.stream.XMLStreamReader _xmlStream>;

        $z0 = interfaceinvoke $r1.<javax.xml.stream.XMLStreamReader: boolean isWhiteSpace()>();

        return $z0;
    }

    public java.lang.String getNamespaceForPrefix(java.lang.String)
    {
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl r0;
        javax.xml.stream.XMLStreamReader $r2;
        java.lang.String r1, $r3;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: javax.xml.stream.XMLStreamReader _xmlStream>;

        $r3 = interfaceinvoke $r2.<javax.xml.stream.XMLStreamReader: java.lang.String getNamespaceURI(java.lang.String)>(r1);

        return $r3;
    }

    private void addTextToBuffer()
    {
        javax.xml.stream.XMLStreamReader $r1, $r2, $r4, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl r0;
        java.lang.Exception $r8;
        char[] $r3, $r5, $r6;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: javax.xml.stream.XMLStreamReader _xmlStream>;

        $i0 = interfaceinvoke $r1.<javax.xml.stream.XMLStreamReader: int getTextLength()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: void ensureBufferLength(int)>($i0);

        $z0 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: boolean _supportForGetTextCharacters>;

        if $z0 == 0 goto label4;

     label1:
        $r7 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: javax.xml.stream.XMLStreamReader _xmlStream>;

        $r6 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: char[] _buf>;

        $i5 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: int _length>;

        $i6 = interfaceinvoke $r7.<javax.xml.stream.XMLStreamReader: int getTextCharacters(int,char[],int,int)>(0, $r6, $i5, $i0);

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: int _length> = $i6;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: boolean _supportForGetTextCharacters> = 0;

     label4:
        $z1 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: boolean _supportForGetTextCharacters>;

        if $z1 != 0 goto label5;

        $r2 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: javax.xml.stream.XMLStreamReader _xmlStream>;

        $r3 = interfaceinvoke $r2.<javax.xml.stream.XMLStreamReader: char[] getTextCharacters()>();

        $r4 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: javax.xml.stream.XMLStreamReader _xmlStream>;

        $i1 = interfaceinvoke $r4.<javax.xml.stream.XMLStreamReader: int getTextStart()>();

        $r5 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: char[] _buf>;

        $i2 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: int _length>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i1, $r5, $i2, $i0);

        $i3 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: int _length>;

        $i4 = $i3 + $i0;

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: int _length> = $i4;

     label5:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void ensureBufferLength(int)
    {
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        char[] $r1, r2, $r3;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: int _length>;

        $i3 = $i1 + i0;

        $r1 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: char[] _buf>;

        $i2 = lengthof $r1;

        if $i3 <= $i2 goto label2;

        $i4 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: int _length>;

        $i5 = $i4 + i0;

        r2 = newarray (char)[$i5];

        $i6 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: int _length>;

        if $i6 <= 0 goto label1;

        $r3 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: char[] _buf>;

        $i7 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: int _length>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r2, 0, $i7);

     label1:
        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: char[] _buf> = r2;

     label2:
        return;
    }

    void <init>(org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$1)
    {
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl r0;
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$1 r1;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl;

        r1 := @parameter0: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$1;

        specialinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: void <init>()>();

        return;
    }

    static void access$400(org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl, javax.xml.stream.XMLStreamReader)
    {
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl r0;
        javax.xml.stream.XMLStreamReader r1;

        r0 := @parameter0: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl;

        r1 := @parameter1: javax.xml.stream.XMLStreamReader;

        specialinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: void setXMLStreamReader(javax.xml.stream.XMLStreamReader)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: int BUF_LENGTH> = 1024;

        return;
    }
}
