final class org.waveprotocol.box.common.Snippets$2 extends java.lang.Object implements org.waveprotocol.wave.model.document.operation.DocInitializationCursor
{
    final java.lang.StringBuilder val$sb;
    final int val$maxSnippetLength;
    final org.waveprotocol.wave.model.wave.data.ReadableWaveletData val$wavelet;

    void <init>(java.lang.StringBuilder, int, org.waveprotocol.wave.model.wave.data.ReadableWaveletData)
    {
        org.waveprotocol.wave.model.wave.data.ReadableWaveletData r2;
        org.waveprotocol.box.common.Snippets$2 r0;
        int i0;
        java.lang.StringBuilder r1;

        r0 := @this: org.waveprotocol.box.common.Snippets$2;

        r1 := @parameter0: java.lang.StringBuilder;

        i0 := @parameter1: int;

        r2 := @parameter2: org.waveprotocol.wave.model.wave.data.ReadableWaveletData;

        r0.<org.waveprotocol.box.common.Snippets$2: java.lang.StringBuilder val$sb> = r1;

        r0.<org.waveprotocol.box.common.Snippets$2: int val$maxSnippetLength> = i0;

        r0.<org.waveprotocol.box.common.Snippets$2: org.waveprotocol.wave.model.wave.data.ReadableWaveletData val$wavelet> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void annotationBoundary(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap)
    {
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap r1;
        org.waveprotocol.box.common.Snippets$2 r0;

        r0 := @this: org.waveprotocol.box.common.Snippets$2;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap;

        return;
    }

    public void characters(java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.box.common.Snippets$2 r0;

        r0 := @this: org.waveprotocol.box.common.Snippets$2;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void elementEnd()
    {
        org.waveprotocol.box.common.Snippets$2 r0;

        r0 := @this: org.waveprotocol.box.common.Snippets$2;

        return;
    }

    public void elementStart(java.lang.String, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.box.common.Snippets$2 r0;
        org.waveprotocol.wave.model.wave.data.ReadableBlipData[] $r9;
        org.waveprotocol.wave.model.wave.data.ReadableWaveletData $r7;
        int $i0, $i1;
        org.waveprotocol.wave.model.wave.data.ReadableBlipData $r8;
        java.lang.String r2, $r3, r6, $r12;
        boolean $z0;
        org.waveprotocol.wave.model.document.operation.Attributes r4;
        java.util.List $r11;
        java.lang.StringBuilder $r1, $r10, $r13;
        java.lang.Object $r5;

        r0 := @this: org.waveprotocol.box.common.Snippets$2;

        r2 := @parameter0: java.lang.String;

        r4 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        $r1 = r0.<org.waveprotocol.box.common.Snippets$2: java.lang.StringBuilder val$sb>;

        $i0 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        $i1 = r0.<org.waveprotocol.box.common.Snippets$2: int val$maxSnippetLength>;

        if $i0 < $i1 goto label1;

        return;

     label1:
        $r3 = "blip";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r4.<org.waveprotocol.wave.model.document.operation.Attributes: java.lang.Object get(java.lang.Object)>("id");

        r6 = (java.lang.String) $r5;

        if r6 == null goto label3;

        $r7 = r0.<org.waveprotocol.box.common.Snippets$2: org.waveprotocol.wave.model.wave.data.ReadableWaveletData val$wavelet>;

        $r8 = interfaceinvoke $r7.<org.waveprotocol.wave.model.wave.data.ReadableWaveletData: org.waveprotocol.wave.model.wave.data.ReadableBlipData getDocument(java.lang.String)>(r6);

        if $r8 != null goto label2;

        return;

     label2:
        $r10 = r0.<org.waveprotocol.box.common.Snippets$2: java.lang.StringBuilder val$sb>;

        $r9 = newarray (org.waveprotocol.wave.model.wave.data.ReadableBlipData)[1];

        $r9[0] = $r8;

        $r11 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r9);

        $r12 = staticinvoke <org.waveprotocol.box.common.Snippets: java.lang.String collateTextForDocuments(java.lang.Iterable)>($r11);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = r0.<org.waveprotocol.box.common.Snippets$2: java.lang.StringBuilder val$sb>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label3:
        return;
    }
}
