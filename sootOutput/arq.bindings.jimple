public class arq.bindings extends java.lang.Object
{

    public void <init>()
    {
        arq.bindings r0;

        r0 := @this: arq.bindings;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.io.PrintStream r1;
        com.hp.hpl.jena.sparql.engine.binding.Binding $r4;
        com.hp.hpl.jena.sparql.engine.binding.BindingInputStream $r2;
        java.lang.String[] r5;
        com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream $r3;
        java.io.InputStream r0;
        boolean $z0;

        r5 := @parameter0: java.lang.String[];

        r0 = <java.lang.System: java.io.InputStream in>;

        r1 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new com.hp.hpl.jena.sparql.engine.binding.BindingInputStream;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: void <init>(java.io.InputStream)>(r0);

        $r3 = new com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream;

        specialinvoke $r3.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: void <init>(java.io.OutputStream)>(r1);

     label1:
        $z0 = virtualinvoke $r2.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke $r2.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: com.hp.hpl.jena.sparql.engine.binding.Binding next()>();

        virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: void send(com.hp.hpl.jena.sparql.engine.binding.Binding)>($r4);

        goto label1;

     label2:
        virtualinvoke $r3.<com.hp.hpl.jena.sparql.engine.binding.BindingOutputStream: void flush()>();

        return;
    }
}
