class org.eclipse.jetty.servlets.GzipFilter$1$1 extends org.eclipse.jetty.http.gzip.AbstractCompressedStream
{
    final org.eclipse.jetty.servlets.GzipFilter$1 this$1;

    void <init>(org.eclipse.jetty.servlets.GzipFilter$1, java.lang.String, javax.servlet.http.HttpServletRequest, org.eclipse.jetty.http.gzip.CompressedResponseWrapper, java.lang.String)
    {
        org.eclipse.jetty.http.gzip.CompressedResponseWrapper r4;
        javax.servlet.http.HttpServletRequest r3;
        org.eclipse.jetty.servlets.GzipFilter$1 r1;
        java.lang.String r2, r5;
        org.eclipse.jetty.servlets.GzipFilter$1$1 r0;

        r0 := @this: org.eclipse.jetty.servlets.GzipFilter$1$1;

        r1 := @parameter0: org.eclipse.jetty.servlets.GzipFilter$1;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javax.servlet.http.HttpServletRequest;

        r4 := @parameter3: org.eclipse.jetty.http.gzip.CompressedResponseWrapper;

        r5 := @parameter4: java.lang.String;

        r0.<org.eclipse.jetty.servlets.GzipFilter$1$1: org.eclipse.jetty.servlets.GzipFilter$1 this$1> = r1;

        specialinvoke r0.<org.eclipse.jetty.http.gzip.AbstractCompressedStream: void <init>(java.lang.String,javax.servlet.http.HttpServletRequest,org.eclipse.jetty.http.gzip.CompressedResponseWrapper,java.lang.String)>(r2, r3, r4, r5);

        return;
    }

    protected java.util.zip.DeflaterOutputStream createStream() throws java.io.IOException
    {
        org.eclipse.jetty.servlets.GzipFilter$1$1 r0;

        r0 := @this: org.eclipse.jetty.servlets.GzipFilter$1$1;

        return null;
    }
}
