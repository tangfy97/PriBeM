public class org.waveprotocol.box.server.persistence.lucene.FSIndexDirectory extends java.lang.Object implements org.waveprotocol.box.server.persistence.lucene.IndexDirectory
{
    private org.apache.lucene.store.Directory directory;

    public void <init>(java.lang.String)
    {
        org.waveprotocol.box.server.persistence.PersistenceException $r11;
        org.apache.lucene.store.Directory $r1;
        java.lang.String r2, $r10, $r16;
        org.waveprotocol.box.server.waveserver.IndexException $r6, $r12;
        org.apache.lucene.store.FSDirectory $r4;
        java.io.IOException $r5;
        java.io.File $r3;
        org.waveprotocol.box.server.persistence.lucene.FSIndexDirectory r0;
        java.lang.StringBuilder $r7, $r8, $r9, $r13, $r14, $r15;

        r0 := @this: org.waveprotocol.box.server.persistence.lucene.FSIndexDirectory;

        r2 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = r0.<org.waveprotocol.box.server.persistence.lucene.FSIndexDirectory: org.apache.lucene.store.Directory directory>;

        if $r1 != null goto label7;

     label1:
        $r3 = staticinvoke <org.waveprotocol.box.server.persistence.file.FileUtils: java.io.File createDirIfNotExists(java.lang.String,java.lang.String)>(r2, "");

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        $r12 = new org.waveprotocol.box.server.waveserver.IndexException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create index directory ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<org.waveprotocol.box.server.waveserver.IndexException: void <init>(java.lang.String,java.lang.Throwable)>($r16, $r11);

        throw $r12;

     label4:
        $r4 = staticinvoke <org.apache.lucene.store.FSDirectory: org.apache.lucene.store.FSDirectory open(java.io.File)>($r3);

        r0.<org.waveprotocol.box.server.persistence.lucene.FSIndexDirectory: org.apache.lucene.store.Directory directory> = $r4;

     label5:
        goto label7;

     label6:
        $r5 := @caughtexception;

        $r6 = new org.waveprotocol.box.server.waveserver.IndexException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot open index directory ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.waveprotocol.box.server.waveserver.IndexException: void <init>(java.lang.String,java.lang.Throwable)>($r10, $r5);

        throw $r6;

     label7:
        return;

        catch org.waveprotocol.box.server.persistence.PersistenceException from label1 to label2 with label3;
        catch java.io.IOException from label4 to label5 with label6;
    }

    public org.apache.lucene.store.Directory getDirectory() throws org.waveprotocol.box.server.waveserver.IndexException
    {
        org.waveprotocol.box.server.persistence.lucene.FSIndexDirectory r0;
        org.apache.lucene.store.Directory $r1;

        r0 := @this: org.waveprotocol.box.server.persistence.lucene.FSIndexDirectory;

        $r1 = r0.<org.waveprotocol.box.server.persistence.lucene.FSIndexDirectory: org.apache.lucene.store.Directory directory>;

        return $r1;
    }
}
