public class org.eclipse.jetty.util.Scanner extends org.eclipse.jetty.util.component.AbstractLifeCycle
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    private static int __scannerId;
    private int _scanInterval;
    private int _scanCount;
    private final java.util.List _listeners;
    private final java.util.Map _prevScan;
    private final java.util.Map _currentScan;
    private java.io.FilenameFilter _filter;
    private final java.util.List _scanDirs;
    private volatile boolean _running;
    private boolean _reportExisting;
    private boolean _reportDirs;
    private java.util.Timer _timer;
    private java.util.TimerTask _task;
    private int _scanDepth;
    private final java.util.Map _notifications;

    public void <init>()
    {
        java.util.HashMap $r2, $r3, $r5;
        org.eclipse.jetty.util.Scanner r0;
        java.util.ArrayList $r1, $r4;

        r0 := @this: org.eclipse.jetty.util.Scanner;

        specialinvoke r0.<org.eclipse.jetty.util.component.AbstractLifeCycle: void <init>()>();

        r0.<org.eclipse.jetty.util.Scanner: int _scanCount> = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.eclipse.jetty.util.Scanner: java.util.List _listeners> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.eclipse.jetty.util.Scanner: java.util.Map _prevScan> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.eclipse.jetty.util.Scanner: java.util.Map _currentScan> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.eclipse.jetty.util.Scanner: java.util.List _scanDirs> = $r4;

        r0.<org.eclipse.jetty.util.Scanner: boolean _running> = 0;

        r0.<org.eclipse.jetty.util.Scanner: boolean _reportExisting> = 1;

        r0.<org.eclipse.jetty.util.Scanner: boolean _reportDirs> = 1;

        r0.<org.eclipse.jetty.util.Scanner: int _scanDepth> = 0;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<org.eclipse.jetty.util.Scanner: java.util.Map _notifications> = $r5;

        return;
    }

    public int getScanInterval()
    {
        int $i0;
        org.eclipse.jetty.util.Scanner r0;

        r0 := @this: org.eclipse.jetty.util.Scanner;

        $i0 = r0.<org.eclipse.jetty.util.Scanner: int _scanInterval>;

        return $i0;
    }

    public synchronized void setScanInterval(int)
    {
        int i0;
        org.eclipse.jetty.util.Scanner r0;

        r0 := @this: org.eclipse.jetty.util.Scanner;

        i0 := @parameter0: int;

        r0.<org.eclipse.jetty.util.Scanner: int _scanInterval> = i0;

        virtualinvoke r0.<org.eclipse.jetty.util.Scanner: void schedule()>();

        return;
    }

    public void setScanDir(java.io.File)
    {
        java.util.List $r1, $r3;
        org.eclipse.jetty.util.Scanner r0;
        java.io.File r2;

        r0 := @this: org.eclipse.jetty.util.Scanner;

        r2 := @parameter0: java.io.File;

        $r1 = r0.<org.eclipse.jetty.util.Scanner: java.util.List _scanDirs>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r3 = r0.<org.eclipse.jetty.util.Scanner: java.util.List _scanDirs>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    public java.io.File getScanDir()
    {
        java.util.List $r1, $r2;
        java.lang.Object $r3;
        org.eclipse.jetty.util.Scanner r0;
        java.io.File $r4;

        r0 := @this: org.eclipse.jetty.util.Scanner;

        $r1 = r0.<org.eclipse.jetty.util.Scanner: java.util.List _scanDirs>;

        if $r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = r0.<org.eclipse.jetty.util.Scanner: java.util.List _scanDirs>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (java.io.File) $r3;

     label2:
        return $r4;
    }

    public void setScanDirs(java.util.List)
    {
        java.util.List $r1, r2, $r3;
        org.eclipse.jetty.util.Scanner r0;

        r0 := @this: org.eclipse.jetty.util.Scanner;

        r2 := @parameter0: java.util.List;

        $r1 = r0.<org.eclipse.jetty.util.Scanner: java.util.List _scanDirs>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r3 = r0.<org.eclipse.jetty.util.Scanner: java.util.List _scanDirs>;

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>(r2);

        return;
    }

    public synchronized void addScanDir(java.io.File)
    {
        java.util.List $r2;
        org.eclipse.jetty.util.Scanner r0;
        java.io.File r1;

        r0 := @this: org.eclipse.jetty.util.Scanner;

        r1 := @parameter0: java.io.File;

        $r2 = r0.<org.eclipse.jetty.util.Scanner: java.util.List _scanDirs>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public java.util.List getScanDirs()
    {
        java.util.List $r1, $r2;
        org.eclipse.jetty.util.Scanner r0;

        r0 := @this: org.eclipse.jetty.util.Scanner;

        $r1 = r0.<org.eclipse.jetty.util.Scanner: java.util.List _scanDirs>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public void setRecursive(boolean)
    {
        byte $b0;
        org.eclipse.jetty.util.Scanner r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.util.Scanner;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $b0 = -1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        r0.<org.eclipse.jetty.util.Scanner: int _scanDepth> = $b0;

        return;
    }

    public boolean getRecursive()
    {
        int $i0, $i2;
        org.eclipse.jetty.util.Scanner r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.util.Scanner;

        $i0 = r0.<org.eclipse.jetty.util.Scanner: int _scanDepth>;

        $i2 = (int) -1;

        if $i0 != $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int getScanDepth()
    {
        int $i0;
        org.eclipse.jetty.util.Scanner r0;

        r0 := @this: org.eclipse.jetty.util.Scanner;

        $i0 = r0.<org.eclipse.jetty.util.Scanner: int _scanDepth>;

        return $i0;
    }

    public void setScanDepth(int)
    {
        int i0;
        org.eclipse.jetty.util.Scanner r0;

        r0 := @this: org.eclipse.jetty.util.Scanner;

        i0 := @parameter0: int;

        r0.<org.eclipse.jetty.util.Scanner: int _scanDepth> = i0;

        return;
    }

    public void setFilenameFilter(java.io.FilenameFilter)
    {
        java.io.FilenameFilter r1;
        org.eclipse.jetty.util.Scanner r0;

        r0 := @this: org.eclipse.jetty.util.Scanner;

        r1 := @parameter0: java.io.FilenameFilter;

        r0.<org.eclipse.jetty.util.Scanner: java.io.FilenameFilter _filter> = r1;

        return;
    }

    public java.io.FilenameFilter getFilenameFilter()
    {
        java.io.FilenameFilter $r1;
        org.eclipse.jetty.util.Scanner r0;

        r0 := @this: org.eclipse.jetty.util.Scanner;

        $r1 = r0.<org.eclipse.jetty.util.Scanner: java.io.FilenameFilter _filter>;

        return $r1;
    }

    public void setReportExistingFilesOnStartup(boolean)
    {
        org.eclipse.jetty.util.Scanner r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.util.Scanner;

        z0 := @parameter0: boolean;

        r0.<org.eclipse.jetty.util.Scanner: boolean _reportExisting> = z0;

        return;
    }

    public boolean getReportExistingFilesOnStartup()
    {
        org.eclipse.jetty.util.Scanner r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.util.Scanner;

        $z0 = r0.<org.eclipse.jetty.util.Scanner: boolean _reportExisting>;

        return $z0;
    }

    public void setReportDirs(boolean)
    {
        org.eclipse.jetty.util.Scanner r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.util.Scanner;

        z0 := @parameter0: boolean;

        r0.<org.eclipse.jetty.util.Scanner: boolean _reportDirs> = z0;

        return;
    }

    public boolean getReportDirs()
    {
        org.eclipse.jetty.util.Scanner r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.util.Scanner;

        $z0 = r0.<org.eclipse.jetty.util.Scanner: boolean _reportDirs>;

        return $z0;
    }

    public synchronized void addListener(org.eclipse.jetty.util.Scanner$Listener)
    {
        org.eclipse.jetty.util.Scanner$Listener r0;
        java.util.List $r2;
        org.eclipse.jetty.util.Scanner r1;

        r1 := @this: org.eclipse.jetty.util.Scanner;

        r0 := @parameter0: org.eclipse.jetty.util.Scanner$Listener;

        if r0 != null goto label1;

        return;

     label1:
        $r2 = r1.<org.eclipse.jetty.util.Scanner: java.util.List _listeners>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r0);

        return;
    }

    public synchronized void removeListener(org.eclipse.jetty.util.Scanner$Listener)
    {
        org.eclipse.jetty.util.Scanner$Listener r0;
        java.util.List $r2;
        org.eclipse.jetty.util.Scanner r1;

        r1 := @this: org.eclipse.jetty.util.Scanner;

        r0 := @parameter0: org.eclipse.jetty.util.Scanner$Listener;

        if r0 != null goto label1;

        return;

     label1:
        $r2 = r1.<org.eclipse.jetty.util.Scanner: java.util.List _listeners>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r0);

        return;
    }

    public synchronized void doStart()
    {
        java.util.Map $r1, $r2;
        org.eclipse.jetty.util.Scanner r0;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.util.Scanner;

        $z0 = r0.<org.eclipse.jetty.util.Scanner: boolean _running>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<org.eclipse.jetty.util.Scanner: boolean _running> = 1;

        $z1 = r0.<org.eclipse.jetty.util.Scanner: boolean _reportExisting>;

        if $z1 == 0 goto label2;

        virtualinvoke r0.<org.eclipse.jetty.util.Scanner: void scan()>();

        virtualinvoke r0.<org.eclipse.jetty.util.Scanner: void scan()>();

        goto label3;

     label2:
        virtualinvoke r0.<org.eclipse.jetty.util.Scanner: void scanFiles()>();

        $r2 = r0.<org.eclipse.jetty.util.Scanner: java.util.Map _prevScan>;

        $r1 = r0.<org.eclipse.jetty.util.Scanner: java.util.Map _currentScan>;

        interfaceinvoke $r2.<java.util.Map: void putAll(java.util.Map)>($r1);

     label3:
        virtualinvoke r0.<org.eclipse.jetty.util.Scanner: void schedule()>();

        return;
    }

    public java.util.TimerTask newTimerTask()
    {
        org.eclipse.jetty.util.Scanner$1 $r0;
        org.eclipse.jetty.util.Scanner r1;

        r1 := @this: org.eclipse.jetty.util.Scanner;

        $r0 = new org.eclipse.jetty.util.Scanner$1;

        specialinvoke $r0.<org.eclipse.jetty.util.Scanner$1: void <init>(org.eclipse.jetty.util.Scanner)>(r1);

        return $r0;
    }

    public java.util.Timer newTimer()
    {
        java.util.Timer $r0;
        int $i0, $i1;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        org.eclipse.jetty.util.Scanner r5;

        r5 := @this: org.eclipse.jetty.util.Scanner;

        $r0 = new java.util.Timer;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scanner-");

        $i0 = <org.eclipse.jetty.util.Scanner: int __scannerId>;

        $i1 = $i0 + 1;

        <org.eclipse.jetty.util.Scanner: int __scannerId> = $i1;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.util.Timer: void <init>(java.lang.String,boolean)>($r4, 1);

        return $r0;
    }

    public void schedule()
    {
        java.util.Timer $r1, $r3, $r5, $r8;
        long $l2, $l3, $l5, $l6;
        int $i0, $i1, $i4;
        java.util.TimerTask $r2, $r4, $r6, $r7;
        boolean $z0;
        org.eclipse.jetty.util.Scanner r0;

        r0 := @this: org.eclipse.jetty.util.Scanner;

        $z0 = r0.<org.eclipse.jetty.util.Scanner: boolean _running>;

        if $z0 == 0 goto label3;

        $r1 = r0.<org.eclipse.jetty.util.Scanner: java.util.Timer _timer>;

        if $r1 == null goto label1;

        $r8 = r0.<org.eclipse.jetty.util.Scanner: java.util.Timer _timer>;

        virtualinvoke $r8.<java.util.Timer: void cancel()>();

     label1:
        $r2 = r0.<org.eclipse.jetty.util.Scanner: java.util.TimerTask _task>;

        if $r2 == null goto label2;

        $r7 = r0.<org.eclipse.jetty.util.Scanner: java.util.TimerTask _task>;

        virtualinvoke $r7.<java.util.TimerTask: boolean cancel()>();

     label2:
        $i0 = virtualinvoke r0.<org.eclipse.jetty.util.Scanner: int getScanInterval()>();

        if $i0 <= 0 goto label3;

        $r3 = virtualinvoke r0.<org.eclipse.jetty.util.Scanner: java.util.Timer newTimer()>();

        r0.<org.eclipse.jetty.util.Scanner: java.util.Timer _timer> = $r3;

        $r4 = virtualinvoke r0.<org.eclipse.jetty.util.Scanner: java.util.TimerTask newTimerTask()>();

        r0.<org.eclipse.jetty.util.Scanner: java.util.TimerTask _task> = $r4;

        $r5 = r0.<org.eclipse.jetty.util.Scanner: java.util.Timer _timer>;

        $r6 = r0.<org.eclipse.jetty.util.Scanner: java.util.TimerTask _task>;

        $i1 = virtualinvoke r0.<org.eclipse.jetty.util.Scanner: int getScanInterval()>();

        $l2 = (long) $i1;

        $l3 = 1010L * $l2;

        $i4 = virtualinvoke r0.<org.eclipse.jetty.util.Scanner: int getScanInterval()>();

        $l5 = (long) $i4;

        $l6 = 1010L * $l5;

        virtualinvoke $r5.<java.util.Timer: void schedule(java.util.TimerTask,long,long)>($r6, $l3, $l6);

     label3:
        return;
    }

    public synchronized void doStop()
    {
        java.util.Timer $r1, $r4;
        java.util.TimerTask $r2, $r3;
        org.eclipse.jetty.util.Scanner r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.util.Scanner;

        $z0 = r0.<org.eclipse.jetty.util.Scanner: boolean _running>;

        if $z0 == 0 goto label3;

        r0.<org.eclipse.jetty.util.Scanner: boolean _running> = 0;

        $r1 = r0.<org.eclipse.jetty.util.Scanner: java.util.Timer _timer>;

        if $r1 == null goto label1;

        $r4 = r0.<org.eclipse.jetty.util.Scanner: java.util.Timer _timer>;

        virtualinvoke $r4.<java.util.Timer: void cancel()>();

     label1:
        $r2 = r0.<org.eclipse.jetty.util.Scanner: java.util.TimerTask _task>;

        if $r2 == null goto label2;

        $r3 = r0.<org.eclipse.jetty.util.Scanner: java.util.TimerTask _task>;

        virtualinvoke $r3.<java.util.TimerTask: boolean cancel()>();

     label2:
        r0.<org.eclipse.jetty.util.Scanner: java.util.TimerTask _task> = null;

        r0.<org.eclipse.jetty.util.Scanner: java.util.Timer _timer> = null;

     label3:
        return;
    }

    public synchronized void scan()
    {
        java.lang.Error $r11;
        org.eclipse.jetty.util.Scanner$ScanListener $r10;
        java.util.Map $r1, $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2;
        boolean $z0, $z1;
        java.util.Iterator $r7;
        java.lang.Exception $r13;
        org.eclipse.jetty.util.Scanner$Listener r9;
        java.util.List $r6;
        java.lang.Object $r8;
        org.eclipse.jetty.util.log.Logger $r12, $r14;
        org.eclipse.jetty.util.Scanner r0;

        r0 := @this: org.eclipse.jetty.util.Scanner;

        $i0 = r0.<org.eclipse.jetty.util.Scanner: int _scanCount>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jetty.util.Scanner: int _scanCount> = $i1;

        specialinvoke r0.<org.eclipse.jetty.util.Scanner: void reportScanStart(int)>($i1);

        virtualinvoke r0.<org.eclipse.jetty.util.Scanner: void scanFiles()>();

        $r2 = r0.<org.eclipse.jetty.util.Scanner: java.util.Map _currentScan>;

        $r1 = r0.<org.eclipse.jetty.util.Scanner: java.util.Map _prevScan>;

        virtualinvoke r0.<org.eclipse.jetty.util.Scanner: void reportDifferences(java.util.Map,java.util.Map)>($r2, $r1);

        $r3 = r0.<org.eclipse.jetty.util.Scanner: java.util.Map _prevScan>;

        interfaceinvoke $r3.<java.util.Map: void clear()>();

        $r5 = r0.<org.eclipse.jetty.util.Scanner: java.util.Map _prevScan>;

        $r4 = r0.<org.eclipse.jetty.util.Scanner: java.util.Map _currentScan>;

        interfaceinvoke $r5.<java.util.Map: void putAll(java.util.Map)>($r4);

        $i2 = r0.<org.eclipse.jetty.util.Scanner: int _scanCount>;

        specialinvoke r0.<org.eclipse.jetty.util.Scanner: void reportScanEnd(int)>($i2);

        $r6 = r0.<org.eclipse.jetty.util.Scanner: java.util.List _listeners>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.eclipse.jetty.util.Scanner$Listener) $r8;

     label2:
        $z1 = r9 instanceof org.eclipse.jetty.util.Scanner$ScanListener;

        if $z1 == 0 goto label3;

        $r10 = (org.eclipse.jetty.util.Scanner$ScanListener) r9;

        interfaceinvoke $r10.<org.eclipse.jetty.util.Scanner$ScanListener: void scan()>();

     label3:
        goto label6;

     label4:
        $r13 := @caughtexception;

        $r14 = <org.eclipse.jetty.util.Scanner: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r14.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>($r13);

        goto label6;

     label5:
        $r11 := @caughtexception;

        $r12 = <org.eclipse.jetty.util.Scanner: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r12.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>($r11);

     label6:
        goto label1;

     label7:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
        catch java.lang.Error from label2 to label3 with label5;
    }

    public synchronized void scanFiles()
    {
        java.util.Iterator $r4;
        java.io.IOException $r9;
        java.io.File r6, $r7;
        java.util.List $r1, $r3;
        java.util.Map $r2, $r8;
        java.lang.Object $r5;
        org.eclipse.jetty.util.log.Logger $r10;
        org.eclipse.jetty.util.Scanner r0;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.util.Scanner;

        $r1 = r0.<org.eclipse.jetty.util.Scanner: java.util.List _scanDirs>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<org.eclipse.jetty.util.Scanner: java.util.Map _currentScan>;

        interfaceinvoke $r2.<java.util.Map: void clear()>();

        $r3 = r0.<org.eclipse.jetty.util.Scanner: java.util.List _scanDirs>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.io.File) $r5;

        if r6 == null goto label6;

        $z1 = virtualinvoke r6.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label6;

     label3:
        $r7 = virtualinvoke r6.<java.io.File: java.io.File getCanonicalFile()>();

        $r8 = r0.<org.eclipse.jetty.util.Scanner: java.util.Map _currentScan>;

        specialinvoke r0.<org.eclipse.jetty.util.Scanner: void scanFile(java.io.File,java.util.Map,int)>($r7, $r8, 0);

     label4:
        goto label6;

     label5:
        $r9 := @caughtexception;

        $r10 = <org.eclipse.jetty.util.Scanner: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r10.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>("Error scanning files.", $r9);

     label6:
        goto label2;

     label7:
        return;

        catch java.io.IOException from label3 to label4 with label5;
    }

    public synchronized void reportDifferences(java.util.Map, java.util.Map)
    {
        java.util.Map r1, r3, $r11, $r28, $r34, $r37, $r44, $r48, $r50, $r54;
        java.util.Set $r2, $r4, $r6, $r12;
        java.lang.StringBuilder $r22, $r24, $r26, $r27, $r29;
        java.lang.Object[] $r31;
        java.util.ArrayList $r9;
        java.lang.String $r30, r56, r59, r62;
        java.util.Map$Entry r55, r61;
        int[] $r17, $r36, $r46, $r52;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.util.List $r25;
        org.eclipse.jetty.util.Scanner$TimeNSize $r19, $r41;
        org.eclipse.jetty.util.Scanner r10;
        java.util.HashSet $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.util.Iterator $r5, $r7, $r13;
        org.eclipse.jetty.util.Scanner$Notification $r21, $r33, $r43, $r47, $r49, $r53, r57, r58, r60;
        java.lang.Object $r14, $r15, $r16, $r18, $r20, $r32, $r35, $r38, $r39, $r40, $r42, $r45, $r51;
        org.eclipse.jetty.util.log.Logger $r8, $r23;

        r10 := @this: org.eclipse.jetty.util.Scanner;

        r3 := @parameter0: java.util.Map;

        r1 := @parameter1: java.util.Map;

        $r0 = new java.util.HashSet;

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        specialinvoke $r0.<java.util.HashSet: void <init>(java.util.Collection)>($r2);

        $r4 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r38 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r55 = (java.util.Map$Entry) $r38;

        $r39 = interfaceinvoke r55.<java.util.Map$Entry: java.lang.Object getKey()>();

        r56 = (java.lang.String) $r39;

        $z8 = interfaceinvoke $r0.<java.util.Set: boolean contains(java.lang.Object)>(r56);

        if $z8 != 0 goto label04;

        $r50 = r10.<org.eclipse.jetty.util.Scanner: java.util.Map _notifications>;

        $r49 = <org.eclipse.jetty.util.Scanner$Notification: org.eclipse.jetty.util.Scanner$Notification ADDED>;

        $r51 = interfaceinvoke $r50.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r56, $r49);

        r57 = (org.eclipse.jetty.util.Scanner$Notification) $r51;

        if r57 == null goto label03;

        $r52 = <org.eclipse.jetty.util.Scanner$2: int[] $SwitchMap$org$eclipse$jetty$util$Scanner$Notification>;

        $i6 = virtualinvoke r57.<org.eclipse.jetty.util.Scanner$Notification: int ordinal()>();

        $i7 = $r52[$i6];

        lookupswitch($i7)
        {
            case 1: goto label02;
            case 2: goto label02;
            default: goto label03;
        };

     label02:
        $r54 = r10.<org.eclipse.jetty.util.Scanner: java.util.Map _notifications>;

        $r53 = <org.eclipse.jetty.util.Scanner$Notification: org.eclipse.jetty.util.Scanner$Notification CHANGED>;

        interfaceinvoke $r54.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r56, $r53);

     label03:
        goto label06;

     label04:
        $r40 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r56);

        $r41 = (org.eclipse.jetty.util.Scanner$TimeNSize) $r40;

        $r42 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r56);

        $z9 = virtualinvoke $r41.<org.eclipse.jetty.util.Scanner$TimeNSize: boolean equals(java.lang.Object)>($r42);

        if $z9 != 0 goto label06;

        $r44 = r10.<org.eclipse.jetty.util.Scanner: java.util.Map _notifications>;

        $r43 = <org.eclipse.jetty.util.Scanner$Notification: org.eclipse.jetty.util.Scanner$Notification CHANGED>;

        $r45 = interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r56, $r43);

        r58 = (org.eclipse.jetty.util.Scanner$Notification) $r45;

        if r58 == null goto label06;

        $r46 = <org.eclipse.jetty.util.Scanner$2: int[] $SwitchMap$org$eclipse$jetty$util$Scanner$Notification>;

        $i4 = virtualinvoke r58.<org.eclipse.jetty.util.Scanner$Notification: int ordinal()>();

        $i5 = $r46[$i4];

        lookupswitch($i5)
        {
            case 3: goto label05;
            default: goto label06;
        };

     label05:
        $r48 = r10.<org.eclipse.jetty.util.Scanner: java.util.Map _notifications>;

        $r47 = <org.eclipse.jetty.util.Scanner$Notification: org.eclipse.jetty.util.Scanner$Notification ADDED>;

        interfaceinvoke $r48.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r56, $r47);

     label06:
        goto label01;

     label07:
        $r6 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label08:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r32 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r59 = (java.lang.String) $r32;

        $z7 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r59);

        if $z7 != 0 goto label10;

        $r34 = r10.<org.eclipse.jetty.util.Scanner: java.util.Map _notifications>;

        $r33 = <org.eclipse.jetty.util.Scanner$Notification: org.eclipse.jetty.util.Scanner$Notification REMOVED>;

        $r35 = interfaceinvoke $r34.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r59, $r33);

        r60 = (org.eclipse.jetty.util.Scanner$Notification) $r35;

        if r60 == null goto label10;

        $r36 = <org.eclipse.jetty.util.Scanner$2: int[] $SwitchMap$org$eclipse$jetty$util$Scanner$Notification>;

        $i2 = virtualinvoke r60.<org.eclipse.jetty.util.Scanner$Notification: int ordinal()>();

        $i3 = $r36[$i2];

        lookupswitch($i3)
        {
            case 3: goto label09;
            default: goto label10;
        };

     label09:
        $r37 = r10.<org.eclipse.jetty.util.Scanner: java.util.Map _notifications>;

        interfaceinvoke $r37.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r59);

     label10:
        goto label08;

     label11:
        $r8 = <org.eclipse.jetty.util.Scanner: org.eclipse.jetty.util.log.Logger LOG>;

        $z2 = interfaceinvoke $r8.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z2 == 0 goto label12;

        $r23 = <org.eclipse.jetty.util.Scanner: org.eclipse.jetty.util.log.Logger LOG>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("scanned ");

        $r25 = r10.<org.eclipse.jetty.util.Scanner: java.util.List _scanDirs>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r28 = r10.<org.eclipse.jetty.util.Scanner: java.util.Map _notifications>;

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        $r31 = newarray (java.lang.Object)[0];

        interfaceinvoke $r23.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r30, $r31);

     label12:
        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        $r11 = r10.<org.eclipse.jetty.util.Scanner: java.util.Map _notifications>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Set entrySet()>();

        $r13 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label13:
        $z10 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label20;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r61 = (java.util.Map$Entry) $r14;

        $r15 = interfaceinvoke r61.<java.util.Map$Entry: java.lang.Object getKey()>();

        r62 = (java.lang.String) $r15;

        $z4 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r62);

        if $z4 == 0 goto label14;

        $r18 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r62);

        $r19 = (org.eclipse.jetty.util.Scanner$TimeNSize) $r18;

        $r20 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r62);

        $z6 = virtualinvoke $r19.<org.eclipse.jetty.util.Scanner$TimeNSize: boolean equals(java.lang.Object)>($r20);

        if $z6 != 0 goto label15;

        goto label13;

     label14:
        $z5 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r62);

        if $z5 == 0 goto label15;

        goto label13;

     label15:
        $r16 = interfaceinvoke r61.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r21 = (org.eclipse.jetty.util.Scanner$Notification) $r16;

        interfaceinvoke $r13.<java.util.Iterator: void remove()>();

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r62);

        $r17 = <org.eclipse.jetty.util.Scanner$2: int[] $SwitchMap$org$eclipse$jetty$util$Scanner$Notification>;

        $i0 = virtualinvoke $r21.<org.eclipse.jetty.util.Scanner$Notification: int ordinal()>();

        $i1 = $r17[$i0];

        tableswitch($i1)
        {
            case 1: goto label18;
            case 2: goto label17;
            case 3: goto label16;
            default: goto label19;
        };

     label16:
        specialinvoke r10.<org.eclipse.jetty.util.Scanner: void reportAddition(java.lang.String)>(r62);

        goto label19;

     label17:
        specialinvoke r10.<org.eclipse.jetty.util.Scanner: void reportChange(java.lang.String)>(r62);

        goto label19;

     label18:
        specialinvoke r10.<org.eclipse.jetty.util.Scanner: void reportRemoval(java.lang.String)>(r62);

     label19:
        goto label13;

     label20:
        $z3 = interfaceinvoke $r9.<java.util.List: boolean isEmpty()>();

        if $z3 != 0 goto label21;

        specialinvoke r10.<org.eclipse.jetty.util.Scanner: void reportBulkChanges(java.util.List)>($r9);

     label21:
        return;
    }

    private void scanFile(java.io.File, java.util.Map, int)
    {
        java.util.Map r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.List $r9;
        org.eclipse.jetty.util.Scanner$TimeNSize $r17;
        org.eclipse.jetty.util.Scanner r1;
        java.io.FilenameFilter $r2, $r10, $r11;
        java.lang.Object[] $r6;
        long $l0, $l1;
        int i2, $i3, $i4, $i5, $i6, i7, $i9;
        java.lang.String $r3, $r13;
        java.io.IOException $r14;
        java.io.File r0, $r8, $r12;
        org.eclipse.jetty.util.log.Logger $r7, $r15;
        java.io.File[] $r16;

        r1 := @this: org.eclipse.jetty.util.Scanner;

        r0 := @parameter0: java.io.File;

        r4 := @parameter1: java.util.Map;

        i2 := @parameter2: int;

     label01:
        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label03;

     label02:
        return;

     label03:
        $z1 = virtualinvoke r0.<java.io.File: boolean isFile()>();

        if $z1 != 0 goto label04;

        if i2 <= 0 goto label06;

        $z4 = r1.<org.eclipse.jetty.util.Scanner: boolean _reportDirs>;

        if $z4 == 0 goto label06;

        $z5 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();

        if $z5 == 0 goto label06;

     label04:
        $r2 = r1.<org.eclipse.jetty.util.Scanner: java.io.FilenameFilter _filter>;

        if $r2 == null goto label05;

        $r10 = r1.<org.eclipse.jetty.util.Scanner: java.io.FilenameFilter _filter>;

        if $r10 == null goto label06;

        $r11 = r1.<org.eclipse.jetty.util.Scanner: java.io.FilenameFilter _filter>;

        $r12 = virtualinvoke r0.<java.io.File: java.io.File getParentFile()>();

        $r13 = virtualinvoke r0.<java.io.File: java.lang.String getName()>();

        $z3 = interfaceinvoke $r11.<java.io.FilenameFilter: boolean accept(java.io.File,java.lang.String)>($r12, $r13);

        if $z3 == 0 goto label06;

     label05:
        $r3 = virtualinvoke r0.<java.io.File: java.lang.String getCanonicalPath()>();

        $r17 = new org.eclipse.jetty.util.Scanner$TimeNSize;

        $l0 = virtualinvoke r0.<java.io.File: long lastModified()>();

        $l1 = virtualinvoke r0.<java.io.File: long length()>();

        specialinvoke $r17.<org.eclipse.jetty.util.Scanner$TimeNSize: void <init>(long,long)>($l0, $l1);

        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r17);

     label06:
        $z6 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();

        if $z6 == 0 goto label11;

        $i3 = r1.<org.eclipse.jetty.util.Scanner: int _scanDepth>;

        if i2 < $i3 goto label07;

        $i6 = r1.<org.eclipse.jetty.util.Scanner: int _scanDepth>;

        $i9 = (int) -1;

        if $i6 == $i9 goto label07;

        $r9 = r1.<org.eclipse.jetty.util.Scanner: java.util.List _scanDirs>;

        $z2 = interfaceinvoke $r9.<java.util.List: boolean contains(java.lang.Object)>(r0);

        if $z2 == 0 goto label11;

     label07:
        $r16 = virtualinvoke r0.<java.io.File: java.io.File[] listFiles()>();

        if $r16 == null goto label10;

        i7 = 0;

     label08:
        $i4 = lengthof $r16;

        if i7 >= $i4 goto label09;

        $r8 = $r16[i7];

        $i5 = i2 + 1;

        specialinvoke r1.<org.eclipse.jetty.util.Scanner: void scanFile(java.io.File,java.util.Map,int)>($r8, r4, $i5);

        i7 = i7 + 1;

        goto label08;

     label09:
        goto label11;

     label10:
        $r7 = <org.eclipse.jetty.util.Scanner: org.eclipse.jetty.util.log.Logger LOG>;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r0;

        interfaceinvoke $r7.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>("Error listing files in directory {}", $r6);

     label11:
        goto label13;

     label12:
        $r14 := @caughtexception;

        $r15 = <org.eclipse.jetty.util.Scanner: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r15.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>("Error scanning watched files", $r14);

     label13:
        return;

        catch java.io.IOException from label01 to label02 with label12;
        catch java.io.IOException from label03 to label11 with label12;
    }

    private void warn(java.lang.Object, java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r8;
        java.lang.StringBuilder $r0, $r3, $r4, $r6;
        java.lang.Object r2;
        org.eclipse.jetty.util.log.Logger $r1;
        java.lang.String r5, $r7;
        org.eclipse.jetty.util.Scanner r9;

        r9 := @this: org.eclipse.jetty.util.Scanner;

        r2 := @parameter0: java.lang.Object;

        r5 := @parameter1: java.lang.String;

        r8 := @parameter2: java.lang.Throwable;

        $r1 = <org.eclipse.jetty.util.Scanner: org.eclipse.jetty.util.log.Logger LOG>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed on \'");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>($r7, r8);

        return;
    }

    private void reportAddition(java.lang.String)
    {
        java.util.Iterator $r2;
        java.lang.Error $r7;
        java.lang.Exception $r8;
        org.eclipse.jetty.util.Scanner$Listener r4;
        java.util.List $r1;
        java.lang.Object $r3;
        java.lang.String r5;
        org.eclipse.jetty.util.Scanner r0;
        boolean $z0, $z1;
        org.eclipse.jetty.util.Scanner$DiscreteListener $r6;

        r0 := @this: org.eclipse.jetty.util.Scanner;

        r5 := @parameter0: java.lang.String;

        $r1 = r0.<org.eclipse.jetty.util.Scanner: java.util.List _listeners>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.eclipse.jetty.util.Scanner$Listener) $r3;

     label2:
        $z1 = r4 instanceof org.eclipse.jetty.util.Scanner$DiscreteListener;

        if $z1 == 0 goto label3;

        $r6 = (org.eclipse.jetty.util.Scanner$DiscreteListener) r4;

        interfaceinvoke $r6.<org.eclipse.jetty.util.Scanner$DiscreteListener: void fileAdded(java.lang.String)>(r5);

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        specialinvoke r0.<org.eclipse.jetty.util.Scanner: void warn(java.lang.Object,java.lang.String,java.lang.Throwable)>(r4, r5, $r8);

        goto label6;

     label5:
        $r7 := @caughtexception;

        specialinvoke r0.<org.eclipse.jetty.util.Scanner: void warn(java.lang.Object,java.lang.String,java.lang.Throwable)>(r4, r5, $r7);

     label6:
        goto label1;

     label7:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
        catch java.lang.Error from label2 to label3 with label5;
    }

    private void reportRemoval(java.lang.String)
    {
        java.util.Iterator $r2;
        java.lang.Error $r6;
        java.lang.Exception $r7;
        java.util.List $r1;
        java.lang.Object $r3;
        java.lang.String r4;
        org.eclipse.jetty.util.Scanner r0;
        boolean $z0, $z1;
        org.eclipse.jetty.util.Scanner$DiscreteListener $r5;

        r0 := @this: org.eclipse.jetty.util.Scanner;

        r4 := @parameter0: java.lang.String;

        $r1 = r0.<org.eclipse.jetty.util.Scanner: java.util.List _listeners>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

     label2:
        $z1 = $r3 instanceof org.eclipse.jetty.util.Scanner$DiscreteListener;

        if $z1 == 0 goto label3;

        $r5 = (org.eclipse.jetty.util.Scanner$DiscreteListener) $r3;

        interfaceinvoke $r5.<org.eclipse.jetty.util.Scanner$DiscreteListener: void fileRemoved(java.lang.String)>(r4);

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        specialinvoke r0.<org.eclipse.jetty.util.Scanner: void warn(java.lang.Object,java.lang.String,java.lang.Throwable)>($r3, r4, $r7);

        goto label6;

     label5:
        $r6 := @caughtexception;

        specialinvoke r0.<org.eclipse.jetty.util.Scanner: void warn(java.lang.Object,java.lang.String,java.lang.Throwable)>($r3, r4, $r6);

     label6:
        goto label1;

     label7:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
        catch java.lang.Error from label2 to label3 with label5;
    }

    private void reportChange(java.lang.String)
    {
        java.util.Iterator $r2;
        java.lang.Error $r7;
        java.lang.Exception $r8;
        org.eclipse.jetty.util.Scanner$Listener r4;
        java.util.List $r1;
        java.lang.Object $r3;
        java.lang.String r5;
        org.eclipse.jetty.util.Scanner r0;
        boolean $z0, $z1;
        org.eclipse.jetty.util.Scanner$DiscreteListener $r6;

        r0 := @this: org.eclipse.jetty.util.Scanner;

        r5 := @parameter0: java.lang.String;

        $r1 = r0.<org.eclipse.jetty.util.Scanner: java.util.List _listeners>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.eclipse.jetty.util.Scanner$Listener) $r3;

     label2:
        $z1 = r4 instanceof org.eclipse.jetty.util.Scanner$DiscreteListener;

        if $z1 == 0 goto label3;

        $r6 = (org.eclipse.jetty.util.Scanner$DiscreteListener) r4;

        interfaceinvoke $r6.<org.eclipse.jetty.util.Scanner$DiscreteListener: void fileChanged(java.lang.String)>(r5);

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        specialinvoke r0.<org.eclipse.jetty.util.Scanner: void warn(java.lang.Object,java.lang.String,java.lang.Throwable)>(r4, r5, $r8);

        goto label6;

     label5:
        $r7 := @caughtexception;

        specialinvoke r0.<org.eclipse.jetty.util.Scanner: void warn(java.lang.Object,java.lang.String,java.lang.Throwable)>(r4, r5, $r7);

     label6:
        goto label1;

     label7:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
        catch java.lang.Error from label2 to label3 with label5;
    }

    private void reportBulkChanges(java.util.List)
    {
        org.eclipse.jetty.util.Scanner$BulkListener $r6;
        java.util.Iterator $r2;
        java.lang.Error $r7;
        java.lang.Exception $r9;
        org.eclipse.jetty.util.Scanner$Listener r4;
        java.util.List $r1, r5;
        java.lang.Object $r3;
        java.lang.String $r8, $r10;
        org.eclipse.jetty.util.Scanner r0;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.util.Scanner;

        r5 := @parameter0: java.util.List;

        $r1 = r0.<org.eclipse.jetty.util.Scanner: java.util.List _listeners>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.eclipse.jetty.util.Scanner$Listener) $r3;

     label2:
        $z1 = r4 instanceof org.eclipse.jetty.util.Scanner$BulkListener;

        if $z1 == 0 goto label3;

        $r6 = (org.eclipse.jetty.util.Scanner$BulkListener) r4;

        interfaceinvoke $r6.<org.eclipse.jetty.util.Scanner$BulkListener: void filesChanged(java.util.List)>(r5);

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        $r10 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<org.eclipse.jetty.util.Scanner: void warn(java.lang.Object,java.lang.String,java.lang.Throwable)>(r4, $r10, $r9);

        goto label6;

     label5:
        $r7 := @caughtexception;

        $r8 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();

        specialinvoke r0.<org.eclipse.jetty.util.Scanner: void warn(java.lang.Object,java.lang.String,java.lang.Throwable)>(r4, $r8, $r7);

     label6:
        goto label1;

     label7:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
        catch java.lang.Error from label2 to label3 with label5;
    }

    private void reportScanStart(int)
    {
        int i0;
        java.lang.String $r12;
        boolean $z0, $z1;
        java.util.Iterator $r2;
        java.lang.Exception $r6;
        org.eclipse.jetty.util.Scanner$Listener r4;
        org.eclipse.jetty.util.Scanner$ScanCycleListener $r5;
        java.util.List $r1;
        java.lang.Object $r3;
        java.lang.StringBuilder $r7, $r9, $r10, $r11;
        org.eclipse.jetty.util.log.Logger $r8;
        org.eclipse.jetty.util.Scanner r0;

        r0 := @this: org.eclipse.jetty.util.Scanner;

        i0 := @parameter0: int;

        $r1 = r0.<org.eclipse.jetty.util.Scanner: java.util.List _listeners>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.eclipse.jetty.util.Scanner$Listener) $r3;

     label2:
        $z1 = r4 instanceof org.eclipse.jetty.util.Scanner$ScanCycleListener;

        if $z1 == 0 goto label3;

        $r5 = (org.eclipse.jetty.util.Scanner$ScanCycleListener) r4;

        interfaceinvoke $r5.<org.eclipse.jetty.util.Scanner$ScanCycleListener: void scanStarted(int)>(i0);

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        $r8 = <org.eclipse.jetty.util.Scanner: org.eclipse.jetty.util.log.Logger LOG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed on scan start for cycle ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>($r12, $r6);

     label5:
        goto label1;

     label6:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    private void reportScanEnd(int)
    {
        int i0;
        java.lang.String $r12;
        boolean $z0, $z1;
        java.util.Iterator $r2;
        java.lang.Exception $r6;
        org.eclipse.jetty.util.Scanner$Listener r4;
        org.eclipse.jetty.util.Scanner$ScanCycleListener $r5;
        java.util.List $r1;
        java.lang.Object $r3;
        java.lang.StringBuilder $r7, $r9, $r10, $r11;
        org.eclipse.jetty.util.log.Logger $r8;
        org.eclipse.jetty.util.Scanner r0;

        r0 := @this: org.eclipse.jetty.util.Scanner;

        i0 := @parameter0: int;

        $r1 = r0.<org.eclipse.jetty.util.Scanner: java.util.List _listeners>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.eclipse.jetty.util.Scanner$Listener) $r3;

     label2:
        $z1 = r4 instanceof org.eclipse.jetty.util.Scanner$ScanCycleListener;

        if $z1 == 0 goto label3;

        $r5 = (org.eclipse.jetty.util.Scanner$ScanCycleListener) r4;

        interfaceinvoke $r5.<org.eclipse.jetty.util.Scanner$ScanCycleListener: void scanEnded(int)>(i0);

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        $r8 = <org.eclipse.jetty.util.Scanner: org.eclipse.jetty.util.log.Logger LOG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed on scan end for cycle ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>($r12, $r6);

     label5:
        goto label1;

     label6:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/util/Scanner;");

        <org.eclipse.jetty.util.Scanner: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        <org.eclipse.jetty.util.Scanner: int __scannerId> = 0;

        return;
    }
}
