public abstract class org.apache.cxf.interceptor.AbstractBasicInterceptorProvider extends java.lang.Object implements org.apache.cxf.interceptor.InterceptorProvider
{
    private java.util.List in;
    private java.util.List out;
    private java.util.List outFault;
    private java.util.List inFault;

    public void <init>()
    {
        org.apache.cxf.interceptor.AbstractBasicInterceptorProvider r0;
        org.apache.cxf.common.util.ModCountCopyOnWriteArrayList $r1, $r2, $r3, $r4;

        r0 := @this: org.apache.cxf.interceptor.AbstractBasicInterceptorProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.cxf.common.util.ModCountCopyOnWriteArrayList;

        specialinvoke $r1.<org.apache.cxf.common.util.ModCountCopyOnWriteArrayList: void <init>()>();

        r0.<org.apache.cxf.interceptor.AbstractBasicInterceptorProvider: java.util.List in> = $r1;

        $r2 = new org.apache.cxf.common.util.ModCountCopyOnWriteArrayList;

        specialinvoke $r2.<org.apache.cxf.common.util.ModCountCopyOnWriteArrayList: void <init>()>();

        r0.<org.apache.cxf.interceptor.AbstractBasicInterceptorProvider: java.util.List out> = $r2;

        $r3 = new org.apache.cxf.common.util.ModCountCopyOnWriteArrayList;

        specialinvoke $r3.<org.apache.cxf.common.util.ModCountCopyOnWriteArrayList: void <init>()>();

        r0.<org.apache.cxf.interceptor.AbstractBasicInterceptorProvider: java.util.List outFault> = $r3;

        $r4 = new org.apache.cxf.common.util.ModCountCopyOnWriteArrayList;

        specialinvoke $r4.<org.apache.cxf.common.util.ModCountCopyOnWriteArrayList: void <init>()>();

        r0.<org.apache.cxf.interceptor.AbstractBasicInterceptorProvider: java.util.List inFault> = $r4;

        return;
    }

    public java.util.List getOutFaultInterceptors()
    {
        org.apache.cxf.interceptor.AbstractBasicInterceptorProvider r0;
        java.util.List $r1;

        r0 := @this: org.apache.cxf.interceptor.AbstractBasicInterceptorProvider;

        $r1 = r0.<org.apache.cxf.interceptor.AbstractBasicInterceptorProvider: java.util.List outFault>;

        return $r1;
    }

    public java.util.List getInFaultInterceptors()
    {
        org.apache.cxf.interceptor.AbstractBasicInterceptorProvider r0;
        java.util.List $r1;

        r0 := @this: org.apache.cxf.interceptor.AbstractBasicInterceptorProvider;

        $r1 = r0.<org.apache.cxf.interceptor.AbstractBasicInterceptorProvider: java.util.List inFault>;

        return $r1;
    }

    public java.util.List getInInterceptors()
    {
        org.apache.cxf.interceptor.AbstractBasicInterceptorProvider r0;
        java.util.List $r1;

        r0 := @this: org.apache.cxf.interceptor.AbstractBasicInterceptorProvider;

        $r1 = r0.<org.apache.cxf.interceptor.AbstractBasicInterceptorProvider: java.util.List in>;

        return $r1;
    }

    public java.util.List getOutInterceptors()
    {
        org.apache.cxf.interceptor.AbstractBasicInterceptorProvider r0;
        java.util.List $r1;

        r0 := @this: org.apache.cxf.interceptor.AbstractBasicInterceptorProvider;

        $r1 = r0.<org.apache.cxf.interceptor.AbstractBasicInterceptorProvider: java.util.List out>;

        return $r1;
    }

    public void setInInterceptors(java.util.List)
    {
        java.util.List $r1, r2, $r3;
        org.apache.cxf.interceptor.AbstractBasicInterceptorProvider r0;

        r0 := @this: org.apache.cxf.interceptor.AbstractBasicInterceptorProvider;

        r2 := @parameter0: java.util.List;

        $r1 = r0.<org.apache.cxf.interceptor.AbstractBasicInterceptorProvider: java.util.List in>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r3 = r0.<org.apache.cxf.interceptor.AbstractBasicInterceptorProvider: java.util.List in>;

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>(r2);

        return;
    }

    public void setInFaultInterceptors(java.util.List)
    {
        java.util.List $r1, r2, $r3;
        org.apache.cxf.interceptor.AbstractBasicInterceptorProvider r0;

        r0 := @this: org.apache.cxf.interceptor.AbstractBasicInterceptorProvider;

        r2 := @parameter0: java.util.List;

        $r1 = r0.<org.apache.cxf.interceptor.AbstractBasicInterceptorProvider: java.util.List inFault>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r3 = r0.<org.apache.cxf.interceptor.AbstractBasicInterceptorProvider: java.util.List inFault>;

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>(r2);

        return;
    }

    public void setOutInterceptors(java.util.List)
    {
        java.util.List $r1, r2, $r3;
        org.apache.cxf.interceptor.AbstractBasicInterceptorProvider r0;

        r0 := @this: org.apache.cxf.interceptor.AbstractBasicInterceptorProvider;

        r2 := @parameter0: java.util.List;

        $r1 = r0.<org.apache.cxf.interceptor.AbstractBasicInterceptorProvider: java.util.List out>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r3 = r0.<org.apache.cxf.interceptor.AbstractBasicInterceptorProvider: java.util.List out>;

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>(r2);

        return;
    }

    public void setOutFaultInterceptors(java.util.List)
    {
        java.util.List $r1, r2, $r3;
        org.apache.cxf.interceptor.AbstractBasicInterceptorProvider r0;

        r0 := @this: org.apache.cxf.interceptor.AbstractBasicInterceptorProvider;

        r2 := @parameter0: java.util.List;

        $r1 = r0.<org.apache.cxf.interceptor.AbstractBasicInterceptorProvider: java.util.List outFault>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r3 = r0.<org.apache.cxf.interceptor.AbstractBasicInterceptorProvider: java.util.List outFault>;

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>(r2);

        return;
    }
}
