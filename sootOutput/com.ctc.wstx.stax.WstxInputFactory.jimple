public final class com.ctc.wstx.stax.WstxInputFactory extends org.codehaus.stax2.XMLInputFactory2 implements com.ctc.wstx.sr.ReaderCreator, com.ctc.wstx.cfg.InputConfigFlags
{
    static final int MAX_SYMBOL_TABLE_SIZE;
    static final int MAX_SYMBOL_TABLE_GENERATIONS;
    protected final com.ctc.wstx.api.ReaderConfig mConfig;
    protected javax.xml.stream.util.XMLEventAllocator mAllocator;
    protected com.ctc.wstx.util.SimpleCache mDTDCache;
    static final com.ctc.wstx.util.SymbolTable mRootSymbols;
    com.ctc.wstx.util.SymbolTable mSymbols;

    public void <init>()
    {
        com.ctc.wstx.stax.WstxInputFactory r0;
        com.ctc.wstx.util.SymbolTable $r1;
        com.ctc.wstx.api.ReaderConfig $r2;

        r0 := @this: com.ctc.wstx.stax.WstxInputFactory;

        specialinvoke r0.<org.codehaus.stax2.XMLInputFactory2: void <init>()>();

        r0.<com.ctc.wstx.stax.WstxInputFactory: javax.xml.stream.util.XMLEventAllocator mAllocator> = null;

        r0.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.util.SimpleCache mDTDCache> = null;

        $r1 = <com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.util.SymbolTable mRootSymbols>;

        r0.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.util.SymbolTable mSymbols> = $r1;

        $r2 = staticinvoke <com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.api.ReaderConfig createFullDefaults()>();

        r0.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.api.ReaderConfig mConfig> = $r2;

        return;
    }

    public synchronized com.ctc.wstx.dtd.DTDSubset findCachedDTD(com.ctc.wstx.dtd.DTDId)
    {
        com.ctc.wstx.dtd.DTDSubset $r5;
        com.ctc.wstx.util.SimpleCache $r1, $r3;
        com.ctc.wstx.stax.WstxInputFactory r0;
        com.ctc.wstx.dtd.DTDId r2;
        java.lang.Object $r4;

        r0 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r2 := @parameter0: com.ctc.wstx.dtd.DTDId;

        $r1 = r0.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.util.SimpleCache mDTDCache>;

        if $r1 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r3 = r0.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.util.SimpleCache mDTDCache>;

        $r4 = virtualinvoke $r3.<com.ctc.wstx.util.SimpleCache: java.lang.Object find(java.lang.Object)>(r2);

        $r5 = (com.ctc.wstx.dtd.DTDSubset) $r4;

     label2:
        return $r5;
    }

    public synchronized void updateSymbolTable(com.ctc.wstx.util.SymbolTable)
    {
        com.ctc.wstx.stax.WstxInputFactory r0;
        com.ctc.wstx.util.SymbolTable r1, r2, $r3, $r4;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r2 := @parameter0: com.ctc.wstx.util.SymbolTable;

        r1 = r0.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.util.SymbolTable mSymbols>;

        $z0 = virtualinvoke r2.<com.ctc.wstx.util.SymbolTable: boolean isDirectChildOf(com.ctc.wstx.util.SymbolTable)>(r1);

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke r2.<com.ctc.wstx.util.SymbolTable: int size()>();

        if $i0 > 12000 goto label1;

        $i1 = virtualinvoke r2.<com.ctc.wstx.util.SymbolTable: int version()>();

        if $i1 <= 500 goto label2;

     label1:
        $r3 = <com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.util.SymbolTable mRootSymbols>;

        r0.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.util.SymbolTable mSymbols> = $r3;

        goto label3;

     label2:
        $r4 = r0.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.util.SymbolTable mSymbols>;

        virtualinvoke $r4.<com.ctc.wstx.util.SymbolTable: void mergeChild(com.ctc.wstx.util.SymbolTable)>(r2);

     label3:
        return;
    }

    public synchronized void addCachedDTD(com.ctc.wstx.dtd.DTDId, com.ctc.wstx.dtd.DTDSubset)
    {
        com.ctc.wstx.stax.WstxInputFactory r0;
        com.ctc.wstx.dtd.DTDId r2;
        com.ctc.wstx.api.ReaderConfig $r6;
        com.ctc.wstx.dtd.DTDSubset r3;
        com.ctc.wstx.util.SimpleCache $r1, $r4, $r5;
        int $i0;

        r0 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r2 := @parameter0: com.ctc.wstx.dtd.DTDId;

        r3 := @parameter1: com.ctc.wstx.dtd.DTDSubset;

        $r1 = r0.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.util.SimpleCache mDTDCache>;

        if $r1 != null goto label1;

        $r5 = new com.ctc.wstx.util.SimpleCache;

        $r6 = r0.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.api.ReaderConfig mConfig>;

        $i0 = virtualinvoke $r6.<com.ctc.wstx.api.ReaderConfig: int getDtdCacheSize()>();

        specialinvoke $r5.<com.ctc.wstx.util.SimpleCache: void <init>(int)>($i0);

        r0.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.util.SimpleCache mDTDCache> = $r5;

     label1:
        $r4 = r0.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.util.SimpleCache mDTDCache>;

        virtualinvoke $r4.<com.ctc.wstx.util.SimpleCache: void add(java.lang.Object,java.lang.Object)>(r2, r3);

        return;
    }

    public javax.xml.stream.XMLEventReader createFilteredReader(javax.xml.stream.XMLEventReader, javax.xml.stream.EventFilter)
    {
        com.ctc.wstx.evt.FilteredEventReader $r0;
        javax.xml.stream.XMLEventReader r1;
        com.ctc.wstx.stax.WstxInputFactory r3;
        javax.xml.stream.EventFilter r2;

        r3 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r1 := @parameter0: javax.xml.stream.XMLEventReader;

        r2 := @parameter1: javax.xml.stream.EventFilter;

        $r0 = new com.ctc.wstx.evt.FilteredEventReader;

        specialinvoke $r0.<com.ctc.wstx.evt.FilteredEventReader: void <init>(javax.xml.stream.XMLEventReader,javax.xml.stream.EventFilter)>(r1, r2);

        return $r0;
    }

    public javax.xml.stream.XMLStreamReader createFilteredReader(javax.xml.stream.XMLStreamReader, javax.xml.stream.StreamFilter) throws javax.xml.stream.XMLStreamException
    {
        javax.xml.stream.XMLStreamReader r1;
        com.ctc.wstx.stax.FilteredStreamReader $r0;
        javax.xml.stream.StreamFilter r2;
        com.ctc.wstx.stax.WstxInputFactory r3;
        boolean $z0;

        r3 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r1 := @parameter0: javax.xml.stream.XMLStreamReader;

        r2 := @parameter1: javax.xml.stream.StreamFilter;

        $r0 = new com.ctc.wstx.stax.FilteredStreamReader;

        specialinvoke $r0.<com.ctc.wstx.stax.FilteredStreamReader: void <init>(javax.xml.stream.XMLStreamReader,javax.xml.stream.StreamFilter)>(r1, r2);

        $z0 = interfaceinvoke r2.<javax.xml.stream.StreamFilter: boolean accept(javax.xml.stream.XMLStreamReader)>($r0);

        if $z0 != 0 goto label1;

        virtualinvoke $r0.<com.ctc.wstx.stax.FilteredStreamReader: int next()>();

     label1:
        return $r0;
    }

    public javax.xml.stream.XMLEventReader createXMLEventReader(java.io.InputStream) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.evt.WstxEventReader $r0;
        org.codehaus.stax2.XMLStreamReader2 $r4;
        javax.xml.stream.util.XMLEventAllocator $r2;
        com.ctc.wstx.stax.WstxInputFactory r1;
        java.io.InputStream r3;

        r1 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r3 := @parameter0: java.io.InputStream;

        $r0 = new com.ctc.wstx.evt.WstxEventReader;

        $r2 = virtualinvoke r1.<com.ctc.wstx.stax.WstxInputFactory: javax.xml.stream.util.XMLEventAllocator createEventAllocator()>();

        $r4 = virtualinvoke r1.<com.ctc.wstx.stax.WstxInputFactory: org.codehaus.stax2.XMLStreamReader2 createSR(java.lang.String,java.io.InputStream,java.lang.String,boolean,boolean)>(null, r3, null, 1, 0);

        specialinvoke $r0.<com.ctc.wstx.evt.WstxEventReader: void <init>(javax.xml.stream.util.XMLEventAllocator,javax.xml.stream.XMLStreamReader)>($r2, $r4);

        return $r0;
    }

    public javax.xml.stream.XMLEventReader createXMLEventReader(java.io.InputStream, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.evt.WstxEventReader $r0;
        org.codehaus.stax2.XMLStreamReader2 $r5;
        javax.xml.stream.util.XMLEventAllocator $r2;
        com.ctc.wstx.stax.WstxInputFactory r1;
        java.lang.String r4;
        java.io.InputStream r3;

        r1 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r3 := @parameter0: java.io.InputStream;

        r4 := @parameter1: java.lang.String;

        $r0 = new com.ctc.wstx.evt.WstxEventReader;

        $r2 = virtualinvoke r1.<com.ctc.wstx.stax.WstxInputFactory: javax.xml.stream.util.XMLEventAllocator createEventAllocator()>();

        $r5 = virtualinvoke r1.<com.ctc.wstx.stax.WstxInputFactory: org.codehaus.stax2.XMLStreamReader2 createSR(java.lang.String,java.io.InputStream,java.lang.String,boolean,boolean)>(null, r3, r4, 1, 0);

        specialinvoke $r0.<com.ctc.wstx.evt.WstxEventReader: void <init>(javax.xml.stream.util.XMLEventAllocator,javax.xml.stream.XMLStreamReader)>($r2, $r5);

        return $r0;
    }

    public javax.xml.stream.XMLEventReader createXMLEventReader(java.io.Reader) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.evt.WstxEventReader $r0;
        org.codehaus.stax2.XMLStreamReader2 $r4;
        javax.xml.stream.util.XMLEventAllocator $r2;
        com.ctc.wstx.stax.WstxInputFactory r1;
        java.io.Reader r3;

        r1 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r3 := @parameter0: java.io.Reader;

        $r0 = new com.ctc.wstx.evt.WstxEventReader;

        $r2 = virtualinvoke r1.<com.ctc.wstx.stax.WstxInputFactory: javax.xml.stream.util.XMLEventAllocator createEventAllocator()>();

        $r4 = virtualinvoke r1.<com.ctc.wstx.stax.WstxInputFactory: org.codehaus.stax2.XMLStreamReader2 createSR(java.lang.String,java.io.Reader,boolean,boolean)>(null, r3, 1, 0);

        specialinvoke $r0.<com.ctc.wstx.evt.WstxEventReader: void <init>(javax.xml.stream.util.XMLEventAllocator,javax.xml.stream.XMLStreamReader)>($r2, $r4);

        return $r0;
    }

    public javax.xml.stream.XMLEventReader createXMLEventReader(javax.xml.transform.Source) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.evt.WstxEventReader $r0;
        org.codehaus.stax2.XMLStreamReader2 $r4;
        javax.xml.stream.util.XMLEventAllocator $r2;
        com.ctc.wstx.stax.WstxInputFactory r1;
        javax.xml.transform.Source r3;

        r1 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r3 := @parameter0: javax.xml.transform.Source;

        $r0 = new com.ctc.wstx.evt.WstxEventReader;

        $r2 = virtualinvoke r1.<com.ctc.wstx.stax.WstxInputFactory: javax.xml.stream.util.XMLEventAllocator createEventAllocator()>();

        $r4 = virtualinvoke r1.<com.ctc.wstx.stax.WstxInputFactory: org.codehaus.stax2.XMLStreamReader2 createSR(javax.xml.transform.Source,boolean)>(r3, 1);

        specialinvoke $r0.<com.ctc.wstx.evt.WstxEventReader: void <init>(javax.xml.stream.util.XMLEventAllocator,javax.xml.stream.XMLStreamReader)>($r2, $r4);

        return $r0;
    }

    public javax.xml.stream.XMLEventReader createXMLEventReader(java.lang.String, java.io.InputStream) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.evt.WstxEventReader $r0;
        org.codehaus.stax2.XMLStreamReader2 $r5;
        javax.xml.stream.util.XMLEventAllocator $r2;
        com.ctc.wstx.stax.WstxInputFactory r1;
        java.lang.String r3;
        java.io.InputStream r4;

        r1 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.io.InputStream;

        $r0 = new com.ctc.wstx.evt.WstxEventReader;

        $r2 = virtualinvoke r1.<com.ctc.wstx.stax.WstxInputFactory: javax.xml.stream.util.XMLEventAllocator createEventAllocator()>();

        $r5 = virtualinvoke r1.<com.ctc.wstx.stax.WstxInputFactory: org.codehaus.stax2.XMLStreamReader2 createSR(java.lang.String,java.io.InputStream,java.lang.String,boolean,boolean)>(r3, r4, null, 1, 0);

        specialinvoke $r0.<com.ctc.wstx.evt.WstxEventReader: void <init>(javax.xml.stream.util.XMLEventAllocator,javax.xml.stream.XMLStreamReader)>($r2, $r5);

        return $r0;
    }

    public javax.xml.stream.XMLEventReader createXMLEventReader(java.lang.String, java.io.Reader) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.evt.WstxEventReader $r0;
        org.codehaus.stax2.XMLStreamReader2 $r5;
        javax.xml.stream.util.XMLEventAllocator $r2;
        com.ctc.wstx.stax.WstxInputFactory r1;
        java.lang.String r3;
        java.io.Reader r4;

        r1 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.io.Reader;

        $r0 = new com.ctc.wstx.evt.WstxEventReader;

        $r2 = virtualinvoke r1.<com.ctc.wstx.stax.WstxInputFactory: javax.xml.stream.util.XMLEventAllocator createEventAllocator()>();

        $r5 = virtualinvoke r1.<com.ctc.wstx.stax.WstxInputFactory: org.codehaus.stax2.XMLStreamReader2 createSR(java.lang.String,java.io.Reader,boolean,boolean)>(r3, r4, 1, 0);

        specialinvoke $r0.<com.ctc.wstx.evt.WstxEventReader: void <init>(javax.xml.stream.util.XMLEventAllocator,javax.xml.stream.XMLStreamReader)>($r2, $r5);

        return $r0;
    }

    public javax.xml.stream.XMLEventReader createXMLEventReader(javax.xml.stream.XMLStreamReader) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.evt.WstxEventReader $r0;
        javax.xml.stream.XMLStreamReader r3;
        javax.xml.stream.util.XMLEventAllocator $r2;
        com.ctc.wstx.stax.WstxInputFactory r1;

        r1 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r3 := @parameter0: javax.xml.stream.XMLStreamReader;

        $r0 = new com.ctc.wstx.evt.WstxEventReader;

        $r2 = virtualinvoke r1.<com.ctc.wstx.stax.WstxInputFactory: javax.xml.stream.util.XMLEventAllocator createEventAllocator()>();

        specialinvoke $r0.<com.ctc.wstx.evt.WstxEventReader: void <init>(javax.xml.stream.util.XMLEventAllocator,javax.xml.stream.XMLStreamReader)>($r2, r3);

        return $r0;
    }

    public javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.stax.WstxInputFactory r0;
        org.codehaus.stax2.XMLStreamReader2 $r2;
        java.io.InputStream r1;

        r0 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r1 := @parameter0: java.io.InputStream;

        $r2 = virtualinvoke r0.<com.ctc.wstx.stax.WstxInputFactory: org.codehaus.stax2.XMLStreamReader2 createSR(java.lang.String,java.io.InputStream,java.lang.String,boolean,boolean)>(null, r1, null, 0, 0);

        return $r2;
    }

    public javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.XMLStreamReader2 $r3;
        com.ctc.wstx.stax.WstxInputFactory r0;
        java.lang.String r2;
        java.io.InputStream r1;

        r0 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<com.ctc.wstx.stax.WstxInputFactory: org.codehaus.stax2.XMLStreamReader2 createSR(java.lang.String,java.io.InputStream,java.lang.String,boolean,boolean)>(null, r1, r2, 0, 0);

        return $r3;
    }

    public javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.Reader) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.stax.WstxInputFactory r0;
        java.io.Reader r1;
        org.codehaus.stax2.XMLStreamReader2 $r2;

        r0 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r1 := @parameter0: java.io.Reader;

        $r2 = virtualinvoke r0.<com.ctc.wstx.stax.WstxInputFactory: org.codehaus.stax2.XMLStreamReader2 createSR(java.lang.String,java.io.Reader,boolean,boolean)>(null, r1, 0, 0);

        return $r2;
    }

    public javax.xml.stream.XMLStreamReader createXMLStreamReader(javax.xml.transform.Source) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.stax.WstxInputFactory r0;
        javax.xml.transform.Source r1;
        org.codehaus.stax2.XMLStreamReader2 $r2;

        r0 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r1 := @parameter0: javax.xml.transform.Source;

        $r2 = virtualinvoke r0.<com.ctc.wstx.stax.WstxInputFactory: org.codehaus.stax2.XMLStreamReader2 createSR(javax.xml.transform.Source,boolean)>(r1, 0);

        return $r2;
    }

    public javax.xml.stream.XMLStreamReader createXMLStreamReader(java.lang.String, java.io.InputStream) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.XMLStreamReader2 $r3;
        com.ctc.wstx.stax.WstxInputFactory r0;
        java.lang.String r1;
        java.io.InputStream r2;

        r0 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.InputStream;

        $r3 = virtualinvoke r0.<com.ctc.wstx.stax.WstxInputFactory: org.codehaus.stax2.XMLStreamReader2 createSR(java.lang.String,java.io.InputStream,java.lang.String,boolean,boolean)>(r1, r2, null, 0, 0);

        return $r3;
    }

    public javax.xml.stream.XMLStreamReader createXMLStreamReader(java.lang.String, java.io.Reader) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.XMLStreamReader2 $r3;
        com.ctc.wstx.stax.WstxInputFactory r0;
        java.lang.String r1;
        java.io.Reader r2;

        r0 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.Reader;

        $r3 = virtualinvoke r0.<com.ctc.wstx.stax.WstxInputFactory: org.codehaus.stax2.XMLStreamReader2 createSR(java.lang.String,java.io.Reader,boolean,boolean)>(r1, r2, 0, 0);

        return $r3;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        javax.xml.stream.util.XMLEventAllocator $r4;
        com.ctc.wstx.stax.WstxInputFactory r0;
        java.lang.Object $r3;
        java.lang.String r1;
        com.ctc.wstx.api.ReaderConfig $r2;
        boolean $z0;

        r0 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.api.ReaderConfig mConfig>;

        $r3 = virtualinvoke $r2.<com.ctc.wstx.api.ReaderConfig: java.lang.Object getProperty(java.lang.String)>(r1);

        if $r3 != null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("javax.xml.stream.allocator");

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<com.ctc.wstx.stax.WstxInputFactory: javax.xml.stream.util.XMLEventAllocator getEventAllocator()>();

        return $r4;

     label1:
        return $r3;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        javax.xml.stream.util.XMLEventAllocator $r5;
        com.ctc.wstx.stax.WstxInputFactory r0;
        com.ctc.wstx.api.ReaderConfig $r3;
        java.lang.Object r2;
        java.lang.String r1, $r4;
        boolean $z0, $z1;

        r0 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.api.ReaderConfig mConfig>;

        $z0 = virtualinvoke $r3.<com.ctc.wstx.api.ReaderConfig: boolean setProperty(java.lang.String,java.lang.Object)>(r1, r2);

        if $z0 != 0 goto label1;

        $r4 = "javax.xml.stream.allocator";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        $r5 = (javax.xml.stream.util.XMLEventAllocator) r2;

        virtualinvoke r0.<com.ctc.wstx.stax.WstxInputFactory: void setEventAllocator(javax.xml.stream.util.XMLEventAllocator)>($r5);

     label1:
        return;
    }

    public javax.xml.stream.util.XMLEventAllocator getEventAllocator()
    {
        javax.xml.stream.util.XMLEventAllocator $r1;
        com.ctc.wstx.stax.WstxInputFactory r0;

        r0 := @this: com.ctc.wstx.stax.WstxInputFactory;

        $r1 = r0.<com.ctc.wstx.stax.WstxInputFactory: javax.xml.stream.util.XMLEventAllocator mAllocator>;

        return $r1;
    }

    public javax.xml.stream.XMLReporter getXMLReporter()
    {
        com.ctc.wstx.stax.WstxInputFactory r0;
        com.ctc.wstx.api.ReaderConfig $r1;
        javax.xml.stream.XMLReporter $r2;

        r0 := @this: com.ctc.wstx.stax.WstxInputFactory;

        $r1 = r0.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.api.ReaderConfig mConfig>;

        $r2 = virtualinvoke $r1.<com.ctc.wstx.api.ReaderConfig: javax.xml.stream.XMLReporter getXMLReporter()>();

        return $r2;
    }

    public javax.xml.stream.XMLResolver getXMLResolver()
    {
        com.ctc.wstx.stax.WstxInputFactory r0;
        com.ctc.wstx.api.ReaderConfig $r1;
        javax.xml.stream.XMLResolver $r2;

        r0 := @this: com.ctc.wstx.stax.WstxInputFactory;

        $r1 = r0.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.api.ReaderConfig mConfig>;

        $r2 = virtualinvoke $r1.<com.ctc.wstx.api.ReaderConfig: javax.xml.stream.XMLResolver getXMLResolver()>();

        return $r2;
    }

    public boolean isPropertySupported(java.lang.String)
    {
        com.ctc.wstx.stax.WstxInputFactory r0;
        java.lang.String r1;
        com.ctc.wstx.api.ReaderConfig $r2;
        boolean $z0;

        r0 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.api.ReaderConfig mConfig>;

        $z0 = virtualinvoke $r2.<com.ctc.wstx.api.ReaderConfig: boolean isPropertySupported(java.lang.String)>(r1);

        return $z0;
    }

    public void setEventAllocator(javax.xml.stream.util.XMLEventAllocator)
    {
        javax.xml.stream.util.XMLEventAllocator r1;
        com.ctc.wstx.stax.WstxInputFactory r0;

        r0 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r1 := @parameter0: javax.xml.stream.util.XMLEventAllocator;

        r0.<com.ctc.wstx.stax.WstxInputFactory: javax.xml.stream.util.XMLEventAllocator mAllocator> = r1;

        return;
    }

    public void setXMLReporter(javax.xml.stream.XMLReporter)
    {
        com.ctc.wstx.stax.WstxInputFactory r0;
        com.ctc.wstx.api.ReaderConfig $r2;
        javax.xml.stream.XMLReporter r1;

        r0 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r1 := @parameter0: javax.xml.stream.XMLReporter;

        $r2 = r0.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.api.ReaderConfig mConfig>;

        virtualinvoke $r2.<com.ctc.wstx.api.ReaderConfig: void setXMLReporter(javax.xml.stream.XMLReporter)>(r1);

        return;
    }

    public void setXMLResolver(javax.xml.stream.XMLResolver)
    {
        com.ctc.wstx.stax.WstxInputFactory r0;
        javax.xml.stream.XMLResolver r1;
        com.ctc.wstx.api.ReaderConfig $r2;

        r0 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r1 := @parameter0: javax.xml.stream.XMLResolver;

        $r2 = r0.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.api.ReaderConfig mConfig>;

        virtualinvoke $r2.<com.ctc.wstx.api.ReaderConfig: void setXMLResolver(javax.xml.stream.XMLResolver)>(r1);

        return;
    }

    public org.codehaus.stax2.XMLEventReader2 createXMLEventReader(java.net.URL) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.evt.WstxEventReader $r0;
        org.codehaus.stax2.XMLStreamReader2 $r5;
        java.net.URL r4;
        javax.xml.stream.util.XMLEventAllocator $r2;
        com.ctc.wstx.stax.WstxInputFactory r1;
        com.ctc.wstx.api.ReaderConfig $r3;

        r1 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r4 := @parameter0: java.net.URL;

        $r0 = new com.ctc.wstx.evt.WstxEventReader;

        $r2 = virtualinvoke r1.<com.ctc.wstx.stax.WstxInputFactory: javax.xml.stream.util.XMLEventAllocator createEventAllocator()>();

        $r3 = virtualinvoke r1.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.api.ReaderConfig createPrivateConfig()>();

        $r5 = virtualinvoke r1.<com.ctc.wstx.stax.WstxInputFactory: org.codehaus.stax2.XMLStreamReader2 createSR(com.ctc.wstx.api.ReaderConfig,java.net.URL,boolean,boolean)>($r3, r4, 1, 1);

        specialinvoke $r0.<com.ctc.wstx.evt.WstxEventReader: void <init>(javax.xml.stream.util.XMLEventAllocator,javax.xml.stream.XMLStreamReader)>($r2, $r5);

        return $r0;
    }

    public org.codehaus.stax2.XMLEventReader2 createXMLEventReader(java.io.File) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.evt.WstxEventReader $r0;
        org.codehaus.stax2.XMLStreamReader2 $r4;
        javax.xml.stream.util.XMLEventAllocator $r2;
        com.ctc.wstx.stax.WstxInputFactory r1;
        java.io.File r3;

        r1 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r3 := @parameter0: java.io.File;

        $r0 = new com.ctc.wstx.evt.WstxEventReader;

        $r2 = virtualinvoke r1.<com.ctc.wstx.stax.WstxInputFactory: javax.xml.stream.util.XMLEventAllocator createEventAllocator()>();

        $r4 = virtualinvoke r1.<com.ctc.wstx.stax.WstxInputFactory: org.codehaus.stax2.XMLStreamReader2 createSR(java.io.File,boolean,boolean)>(r3, 1, 1);

        specialinvoke $r0.<com.ctc.wstx.evt.WstxEventReader: void <init>(javax.xml.stream.util.XMLEventAllocator,javax.xml.stream.XMLStreamReader)>($r2, $r4);

        return $r0;
    }

    public org.codehaus.stax2.XMLStreamReader2 createXMLStreamReader(java.net.URL) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.XMLStreamReader2 $r3;
        java.net.URL r2;
        com.ctc.wstx.stax.WstxInputFactory r0;
        com.ctc.wstx.api.ReaderConfig $r1;

        r0 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r2 := @parameter0: java.net.URL;

        $r1 = virtualinvoke r0.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.api.ReaderConfig createPrivateConfig()>();

        $r3 = virtualinvoke r0.<com.ctc.wstx.stax.WstxInputFactory: org.codehaus.stax2.XMLStreamReader2 createSR(com.ctc.wstx.api.ReaderConfig,java.net.URL,boolean,boolean)>($r1, r2, 0, 1);

        return $r3;
    }

    public org.codehaus.stax2.XMLStreamReader2 createXMLStreamReader(java.io.File) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.stax.WstxInputFactory r0;
        org.codehaus.stax2.XMLStreamReader2 $r2;
        java.io.File r1;

        r0 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r1 := @parameter0: java.io.File;

        $r2 = virtualinvoke r0.<com.ctc.wstx.stax.WstxInputFactory: org.codehaus.stax2.XMLStreamReader2 createSR(java.io.File,boolean,boolean)>(r1, 0, 1);

        return $r2;
    }

    public void configureForXmlConformance()
    {
        com.ctc.wstx.stax.WstxInputFactory r0;
        com.ctc.wstx.api.ReaderConfig $r1;

        r0 := @this: com.ctc.wstx.stax.WstxInputFactory;

        $r1 = r0.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.api.ReaderConfig mConfig>;

        virtualinvoke $r1.<com.ctc.wstx.api.ReaderConfig: void configureForXmlConformance()>();

        return;
    }

    public void configureForConvenience()
    {
        com.ctc.wstx.stax.WstxInputFactory r0;
        com.ctc.wstx.api.ReaderConfig $r1;

        r0 := @this: com.ctc.wstx.stax.WstxInputFactory;

        $r1 = r0.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.api.ReaderConfig mConfig>;

        virtualinvoke $r1.<com.ctc.wstx.api.ReaderConfig: void configureForConvenience()>();

        return;
    }

    public void configureForSpeed()
    {
        com.ctc.wstx.stax.WstxInputFactory r0;
        com.ctc.wstx.api.ReaderConfig $r1;

        r0 := @this: com.ctc.wstx.stax.WstxInputFactory;

        $r1 = r0.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.api.ReaderConfig mConfig>;

        virtualinvoke $r1.<com.ctc.wstx.api.ReaderConfig: void configureForSpeed()>();

        return;
    }

    public void configureForLowMemUsage()
    {
        com.ctc.wstx.stax.WstxInputFactory r0;
        com.ctc.wstx.api.ReaderConfig $r1;

        r0 := @this: com.ctc.wstx.stax.WstxInputFactory;

        $r1 = r0.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.api.ReaderConfig mConfig>;

        virtualinvoke $r1.<com.ctc.wstx.api.ReaderConfig: void configureForLowMemUsage()>();

        return;
    }

    public void configureForRoundTripping()
    {
        com.ctc.wstx.stax.WstxInputFactory r0;
        com.ctc.wstx.api.ReaderConfig $r1;

        r0 := @this: com.ctc.wstx.stax.WstxInputFactory;

        $r1 = r0.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.api.ReaderConfig mConfig>;

        virtualinvoke $r1.<com.ctc.wstx.api.ReaderConfig: void configureForRoundTripping()>();

        return;
    }

    public com.ctc.wstx.api.ReaderConfig getConfig()
    {
        com.ctc.wstx.stax.WstxInputFactory r0;
        com.ctc.wstx.api.ReaderConfig $r1;

        r0 := @this: com.ctc.wstx.stax.WstxInputFactory;

        $r1 = r0.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.api.ReaderConfig mConfig>;

        return $r1;
    }

    private org.codehaus.stax2.XMLStreamReader2 doCreateSR(com.ctc.wstx.api.ReaderConfig, java.lang.String, com.ctc.wstx.io.InputBootstrapper, java.net.URL, boolean, boolean) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.sr.ValidatingStreamReader $r7;
        java.net.URL r4;
        com.ctc.wstx.io.BranchingReaderSource $r5;
        com.ctc.wstx.stax.WstxInputFactory r6;
        java.io.IOException $r8, $r10;
        java.io.Reader $r2;
        com.ctc.wstx.io.InputBootstrapper r0;
        com.ctc.wstx.api.ReaderConfig r1;
        com.ctc.wstx.exc.WstxIOException $r9, $r11;
        java.lang.String r3;
        boolean $z0, z1, z2;

        r6 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r1 := @parameter0: com.ctc.wstx.api.ReaderConfig;

        r3 := @parameter1: java.lang.String;

        r0 := @parameter2: com.ctc.wstx.io.InputBootstrapper;

        r4 := @parameter3: java.net.URL;

        z1 := @parameter4: boolean;

        z2 := @parameter5: boolean;

        if z2 != 0 goto label1;

        z2 = virtualinvoke r1.<com.ctc.wstx.api.ReaderConfig: boolean willAutoCloseInput()>();

     label1:
        $r2 = virtualinvoke r0.<com.ctc.wstx.io.InputBootstrapper: java.io.Reader bootstrapInput(com.ctc.wstx.api.ReaderConfig,boolean,int)>(r1, 1, 0);

        $z0 = virtualinvoke r0.<com.ctc.wstx.io.InputBootstrapper: boolean declaredXml11()>();

        if $z0 == 0 goto label2;

        virtualinvoke r1.<com.ctc.wstx.api.ReaderConfig: void enableXml11(boolean)>(1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        $r11 = new com.ctc.wstx.exc.WstxIOException;

        specialinvoke $r11.<com.ctc.wstx.exc.WstxIOException: void <init>(java.io.IOException)>($r10);

        throw $r11;

     label4:
        $r5 = staticinvoke <com.ctc.wstx.io.InputSourceFactory: com.ctc.wstx.io.BranchingReaderSource constructDocumentSource(com.ctc.wstx.api.ReaderConfig,com.ctc.wstx.io.InputBootstrapper,java.lang.String,java.lang.String,java.net.URL,java.io.Reader,boolean)>(r1, r0, null, r3, r4, $r2, z2);

     label5:
        $r7 = staticinvoke <com.ctc.wstx.sr.ValidatingStreamReader: com.ctc.wstx.sr.ValidatingStreamReader createValidatingStreamReader(com.ctc.wstx.io.BranchingReaderSource,com.ctc.wstx.sr.ReaderCreator,com.ctc.wstx.api.ReaderConfig,com.ctc.wstx.io.InputBootstrapper,boolean)>($r5, r6, r1, r0, z1);

     label6:
        return $r7;

     label7:
        $r8 := @caughtexception;

        $r9 = new com.ctc.wstx.exc.WstxIOException;

        specialinvoke $r9.<com.ctc.wstx.exc.WstxIOException: void <init>(java.io.IOException)>($r8);

        throw $r9;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.io.IOException from label5 to label6 with label7;
    }

    public org.codehaus.stax2.XMLStreamReader2 createSR(com.ctc.wstx.api.ReaderConfig, java.lang.String, com.ctc.wstx.io.InputBootstrapper, boolean, boolean) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.XMLStreamReader2 $r8;
        java.net.URL $r1, r7;
        com.ctc.wstx.stax.WstxInputFactory r2;
        java.io.IOException $r5;
        com.ctc.wstx.api.ReaderConfig r0;
        com.ctc.wstx.io.InputBootstrapper r4;
        int $i0;
        com.ctc.wstx.exc.WstxIOException $r6;
        java.lang.String r3;
        boolean z0, z1;

        r2 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r0 := @parameter0: com.ctc.wstx.api.ReaderConfig;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: com.ctc.wstx.io.InputBootstrapper;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        $r1 = virtualinvoke r0.<com.ctc.wstx.api.ReaderConfig: java.net.URL getBaseURL()>();

        r7 = $r1;

        if $r1 != null goto label4;

        if r3 == null goto label4;

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label4;

     label1:
        r7 = staticinvoke <com.ctc.wstx.util.URLUtil: java.net.URL urlFromSystemId(java.lang.String)>(r3);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new com.ctc.wstx.exc.WstxIOException;

        specialinvoke $r6.<com.ctc.wstx.exc.WstxIOException: void <init>(java.io.IOException)>($r5);

        throw $r6;

     label4:
        $r8 = specialinvoke r2.<com.ctc.wstx.stax.WstxInputFactory: org.codehaus.stax2.XMLStreamReader2 doCreateSR(com.ctc.wstx.api.ReaderConfig,java.lang.String,com.ctc.wstx.io.InputBootstrapper,java.net.URL,boolean,boolean)>(r0, r3, r4, r7, z0, z1);

        return $r8;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected org.codehaus.stax2.XMLStreamReader2 createSR(java.lang.String, java.io.InputStream, java.lang.String, boolean, boolean) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.XMLStreamReader2 $r6, $r9;
        com.ctc.wstx.stax.WstxInputFactory r1;
        com.ctc.wstx.io.ReaderBootstrapper $r8;
        java.io.Reader $r7;
        java.lang.IllegalArgumentException $r10;
        com.ctc.wstx.api.ReaderConfig $r2;
        com.ctc.wstx.io.StreamBootstrapper $r5;
        int $i0;
        java.lang.String r3, r4;
        java.io.InputStream r0;
        boolean z0, z1;

        r1 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: java.io.InputStream;

        r3 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        if r0 != null goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null InputStream is not a valid argument");

        throw $r10;

     label1:
        $r2 = virtualinvoke r1.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.api.ReaderConfig createPrivateConfig()>();

        if r3 == null goto label2;

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

     label2:
        $r5 = staticinvoke <com.ctc.wstx.io.StreamBootstrapper: com.ctc.wstx.io.StreamBootstrapper getInstance(java.io.InputStream,java.lang.String,java.lang.String)>(r0, null, r4);

        $r6 = virtualinvoke r1.<com.ctc.wstx.stax.WstxInputFactory: org.codehaus.stax2.XMLStreamReader2 createSR(com.ctc.wstx.api.ReaderConfig,java.lang.String,com.ctc.wstx.io.InputBootstrapper,boolean,boolean)>($r2, r4, $r5, z0, z1);

        return $r6;

     label3:
        $r7 = staticinvoke <com.ctc.wstx.io.DefaultInputResolver: java.io.Reader constructOptimizedReader(com.ctc.wstx.api.ReaderConfig,java.io.InputStream,boolean,java.lang.String)>($r2, r0, 0, r3);

        $r8 = staticinvoke <com.ctc.wstx.io.ReaderBootstrapper: com.ctc.wstx.io.ReaderBootstrapper getInstance(java.io.Reader,java.lang.String,java.lang.String,java.lang.String)>($r7, null, r4, r3);

        $r9 = virtualinvoke r1.<com.ctc.wstx.stax.WstxInputFactory: org.codehaus.stax2.XMLStreamReader2 createSR(com.ctc.wstx.api.ReaderConfig,java.lang.String,com.ctc.wstx.io.InputBootstrapper,boolean,boolean)>($r2, r4, $r8, z0, z1);

        return $r9;
    }

    protected org.codehaus.stax2.XMLStreamReader2 createSR(com.ctc.wstx.api.ReaderConfig, java.net.URL, boolean, boolean) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.XMLStreamReader2 $r4;
        java.net.URL r2;
        com.ctc.wstx.stax.WstxInputFactory r0;
        java.io.IOException $r5;
        com.ctc.wstx.api.ReaderConfig r1;
        com.ctc.wstx.exc.WstxIOException $r6;
        java.io.InputStream $r3;
        boolean z0, z1;

        r0 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r1 := @parameter0: com.ctc.wstx.api.ReaderConfig;

        r2 := @parameter1: java.net.URL;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

     label1:
        $r3 = staticinvoke <com.ctc.wstx.util.URLUtil: java.io.InputStream optimizedStreamFromURL(java.net.URL)>(r2);

        $r4 = specialinvoke r0.<com.ctc.wstx.stax.WstxInputFactory: org.codehaus.stax2.XMLStreamReader2 createSR(com.ctc.wstx.api.ReaderConfig,java.net.URL,java.io.InputStream,boolean,boolean)>(r1, r2, $r3, z0, z1);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = new com.ctc.wstx.exc.WstxIOException;

        specialinvoke $r6.<com.ctc.wstx.exc.WstxIOException: void <init>(java.io.IOException)>($r5);

        throw $r6;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private org.codehaus.stax2.XMLStreamReader2 createSR(com.ctc.wstx.api.ReaderConfig, java.net.URL, java.io.InputStream, boolean, boolean) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.XMLStreamReader2 $r6;
        java.net.URL r0;
        com.ctc.wstx.stax.WstxInputFactory r2;
        com.ctc.wstx.api.ReaderConfig r3;
        com.ctc.wstx.io.StreamBootstrapper $r5;
        java.lang.String $r1;
        java.io.InputStream r4;
        boolean z0, z1;

        r2 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r3 := @parameter0: com.ctc.wstx.api.ReaderConfig;

        r0 := @parameter1: java.net.URL;

        r4 := @parameter2: java.io.InputStream;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        $r1 = virtualinvoke r0.<java.net.URL: java.lang.String toExternalForm()>();

        $r5 = staticinvoke <com.ctc.wstx.io.StreamBootstrapper: com.ctc.wstx.io.StreamBootstrapper getInstance(java.io.InputStream,java.lang.String,java.lang.String)>(r4, null, $r1);

        $r6 = specialinvoke r2.<com.ctc.wstx.stax.WstxInputFactory: org.codehaus.stax2.XMLStreamReader2 doCreateSR(com.ctc.wstx.api.ReaderConfig,java.lang.String,com.ctc.wstx.io.InputBootstrapper,java.net.URL,boolean,boolean)>(r3, $r1, $r5, r0, z0, z1);

        return $r6;
    }

    protected org.codehaus.stax2.XMLStreamReader2 createSR(java.lang.String, java.io.Reader, boolean, boolean) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.XMLStreamReader2 $r5;
        com.ctc.wstx.stax.WstxInputFactory r0;
        com.ctc.wstx.io.ReaderBootstrapper $r4;
        java.io.Reader r3;
        com.ctc.wstx.api.ReaderConfig $r1;
        java.lang.String r2;
        boolean z0, z1;

        r0 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.io.Reader;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r1 = virtualinvoke r0.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.api.ReaderConfig createPrivateConfig()>();

        $r4 = staticinvoke <com.ctc.wstx.io.ReaderBootstrapper: com.ctc.wstx.io.ReaderBootstrapper getInstance(java.io.Reader,java.lang.String,java.lang.String,java.lang.String)>(r3, null, r2, null);

        $r5 = virtualinvoke r0.<com.ctc.wstx.stax.WstxInputFactory: org.codehaus.stax2.XMLStreamReader2 createSR(com.ctc.wstx.api.ReaderConfig,java.lang.String,com.ctc.wstx.io.InputBootstrapper,boolean,boolean)>($r1, r2, $r4, z0, z1);

        return $r5;
    }

    protected org.codehaus.stax2.XMLStreamReader2 createSR(java.io.File, boolean, boolean) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.XMLStreamReader2 $r5;
        java.net.URL $r3;
        com.ctc.wstx.stax.WstxInputFactory r0;
        java.io.IOException $r6;
        java.io.FileInputStream $r4;
        com.ctc.wstx.api.ReaderConfig $r1;
        java.io.File r2;
        com.ctc.wstx.exc.WstxIOException $r7;
        boolean z0, z1;

        r0 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r2 := @parameter0: java.io.File;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

     label1:
        $r1 = virtualinvoke r0.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.api.ReaderConfig createPrivateConfig()>();

        $r3 = virtualinvoke r2.<java.io.File: java.net.URL toURL()>();

        $r4 = new java.io.FileInputStream;

        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>(r2);

        $r5 = specialinvoke r0.<com.ctc.wstx.stax.WstxInputFactory: org.codehaus.stax2.XMLStreamReader2 createSR(com.ctc.wstx.api.ReaderConfig,java.net.URL,java.io.InputStream,boolean,boolean)>($r1, $r3, $r4, z0, z1);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        $r7 = new com.ctc.wstx.exc.WstxIOException;

        specialinvoke $r7.<com.ctc.wstx.exc.WstxIOException: void <init>(java.io.IOException)>($r6);

        throw $r7;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected org.codehaus.stax2.XMLStreamReader2 createSR(javax.xml.transform.Source, boolean) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.XMLStreamReader2 $r14, $r15;
        java.net.URL $r13;
        com.ctc.wstx.api.ReaderConfig $r1;
        javax.xml.stream.XMLStreamException $r12;
        com.ctc.wstx.exc.WstxIOException $r20, $r22;
        boolean $z0, $z1, $z2, $z3, z4, z5;
        java.io.Reader r23;
        javax.xml.transform.dom.DOMSource r31;
        javax.xml.transform.stream.StreamSource r29;
        javax.xml.transform.Source r2;
        com.ctc.wstx.io.InputBootstrapper r32;
        java.lang.StringBuffer $r4, $r5, $r7, $r8;
        java.lang.String $r9, r25, r26, r27;
        org.xml.sax.InputSource $r11;
        com.ctc.wstx.stax.WstxInputFactory r0;
        java.io.IOException $r19, $r21;
        java.lang.IllegalArgumentException $r3;
        javax.xml.transform.sax.SAXSource r30;
        org.codehaus.stax2.io.Stax2Source r28;
        java.lang.Class $r6;
        com.ctc.wstx.dom.DOMWrappingReader $r10;
        java.io.InputStream $r16, $r17, $r18, r24;

        r0 := @this: com.ctc.wstx.stax.WstxInputFactory;

        r2 := @parameter0: javax.xml.transform.Source;

        z4 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.api.ReaderConfig createPrivateConfig()>();

        r23 = null;

        r24 = null;

        r25 = null;

        r26 = null;

        r27 = null;

        $z0 = r2 instanceof org.codehaus.stax2.io.Stax2Source;

        if $z0 == 0 goto label05;

        r28 = (org.codehaus.stax2.io.Stax2Source) r2;

        r26 = virtualinvoke r28.<org.codehaus.stax2.io.Stax2Source: java.lang.String getSystemId()>();

        r25 = virtualinvoke r28.<org.codehaus.stax2.io.Stax2Source: java.lang.String getPublicId()>();

        r27 = virtualinvoke r28.<org.codehaus.stax2.io.Stax2Source: java.lang.String getEncoding()>();

     label01:
        $r18 = virtualinvoke r28.<org.codehaus.stax2.io.Stax2Source: java.io.InputStream constructInputStream()>();

        r24 = $r18;

        if $r18 != null goto label02;

        r23 = virtualinvoke r28.<org.codehaus.stax2.io.Stax2Source: java.io.Reader constructReader()>();

     label02:
        goto label04;

     label03:
        $r21 := @caughtexception;

        $r22 = new com.ctc.wstx.exc.WstxIOException;

        specialinvoke $r22.<com.ctc.wstx.exc.WstxIOException: void <init>(java.io.IOException)>($r21);

        throw $r22;

     label04:
        z5 = 1;

        goto label11;

     label05:
        $z1 = r2 instanceof javax.xml.transform.stream.StreamSource;

        if $z1 == 0 goto label07;

        r29 = (javax.xml.transform.stream.StreamSource) r2;

        r26 = virtualinvoke r29.<javax.xml.transform.stream.StreamSource: java.lang.String getSystemId()>();

        r25 = virtualinvoke r29.<javax.xml.transform.stream.StreamSource: java.lang.String getPublicId()>();

        $r17 = virtualinvoke r29.<javax.xml.transform.stream.StreamSource: java.io.InputStream getInputStream()>();

        r24 = $r17;

        if $r17 != null goto label06;

        r23 = virtualinvoke r29.<javax.xml.transform.stream.StreamSource: java.io.Reader getReader()>();

     label06:
        z5 = virtualinvoke $r1.<com.ctc.wstx.api.ReaderConfig: boolean willAutoCloseInput()>();

        goto label11;

     label07:
        $z2 = r2 instanceof javax.xml.transform.sax.SAXSource;

        if $z2 == 0 goto label09;

        r30 = (javax.xml.transform.sax.SAXSource) r2;

        $r11 = virtualinvoke r30.<javax.xml.transform.sax.SAXSource: org.xml.sax.InputSource getInputSource()>();

        if $r11 == null goto label08;

        r26 = virtualinvoke $r11.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        r25 = virtualinvoke $r11.<org.xml.sax.InputSource: java.lang.String getPublicId()>();

        r27 = virtualinvoke $r11.<org.xml.sax.InputSource: java.lang.String getEncoding()>();

        $r16 = virtualinvoke $r11.<org.xml.sax.InputSource: java.io.InputStream getByteStream()>();

        r24 = $r16;

        if $r16 != null goto label08;

        r23 = virtualinvoke $r11.<org.xml.sax.InputSource: java.io.Reader getCharacterStream()>();

     label08:
        z5 = virtualinvoke $r1.<com.ctc.wstx.api.ReaderConfig: boolean willAutoCloseInput()>();

        goto label11;

     label09:
        $z3 = r2 instanceof javax.xml.transform.dom.DOMSource;

        if $z3 == 0 goto label10;

        r31 = (javax.xml.transform.dom.DOMSource) r2;

        $r10 = staticinvoke <com.ctc.wstx.dom.DOMWrappingReader: com.ctc.wstx.dom.DOMWrappingReader createFrom(com.ctc.wstx.api.ReaderConfig,javax.xml.transform.dom.DOMSource)>($r1, r31);

        return $r10;

     label10:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Can not instantiate StAX reader for XML source type ");

        $r6 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (unrecognized type)");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r3;

     label11:
        if r23 == null goto label12;

        r32 = staticinvoke <com.ctc.wstx.io.ReaderBootstrapper: com.ctc.wstx.io.ReaderBootstrapper getInstance(java.io.Reader,java.lang.String,java.lang.String,java.lang.String)>(r23, r25, r26, r27);

        goto label18;

     label12:
        if r24 == null goto label13;

        r32 = staticinvoke <com.ctc.wstx.io.StreamBootstrapper: com.ctc.wstx.io.StreamBootstrapper getInstance(java.io.InputStream,java.lang.String,java.lang.String)>(r24, r25, r26);

        goto label18;

     label13:
        if r26 == null goto label17;

     label14:
        $r13 = staticinvoke <com.ctc.wstx.util.URLUtil: java.net.URL urlFromSystemId(java.lang.String)>(r26);

        $r14 = virtualinvoke r0.<com.ctc.wstx.stax.WstxInputFactory: org.codehaus.stax2.XMLStreamReader2 createSR(com.ctc.wstx.api.ReaderConfig,java.net.URL,boolean,boolean)>($r1, $r13, z4, z5);

     label15:
        return $r14;

     label16:
        $r19 := @caughtexception;

        $r20 = new com.ctc.wstx.exc.WstxIOException;

        specialinvoke $r20.<com.ctc.wstx.exc.WstxIOException: void <init>(java.io.IOException)>($r19);

        throw $r20;

     label17:
        $r12 = new javax.xml.stream.XMLStreamException;

        specialinvoke $r12.<javax.xml.stream.XMLStreamException: void <init>(java.lang.String)>("Can not create StAX reader for the Source passed -- neither reader, input stream nor system id was accessible; can not use other types of sources (like embedded SAX streams)");

        throw $r12;

     label18:
        $r15 = virtualinvoke r0.<com.ctc.wstx.stax.WstxInputFactory: org.codehaus.stax2.XMLStreamReader2 createSR(com.ctc.wstx.api.ReaderConfig,java.lang.String,com.ctc.wstx.io.InputBootstrapper,boolean,boolean)>($r1, r26, r32, z4, z5);

        return $r15;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.io.IOException from label14 to label15 with label16;
    }

    protected javax.xml.stream.util.XMLEventAllocator createEventAllocator()
    {
        com.ctc.wstx.evt.DefaultEventAllocator $r5;
        javax.xml.stream.util.XMLEventAllocator $r1, $r3, $r4;
        com.ctc.wstx.stax.WstxInputFactory r0;
        com.ctc.wstx.api.ReaderConfig $r2;
        boolean $z0;

        r0 := @this: com.ctc.wstx.stax.WstxInputFactory;

        $r1 = r0.<com.ctc.wstx.stax.WstxInputFactory: javax.xml.stream.util.XMLEventAllocator mAllocator>;

        if $r1 == null goto label1;

        $r3 = r0.<com.ctc.wstx.stax.WstxInputFactory: javax.xml.stream.util.XMLEventAllocator mAllocator>;

        $r4 = interfaceinvoke $r3.<javax.xml.stream.util.XMLEventAllocator: javax.xml.stream.util.XMLEventAllocator newInstance()>();

        return $r4;

     label1:
        $r2 = r0.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.api.ReaderConfig mConfig>;

        $z0 = virtualinvoke $r2.<com.ctc.wstx.api.ReaderConfig: boolean willPreserveLocation()>();

        if $z0 == 0 goto label2;

        $r5 = staticinvoke <com.ctc.wstx.evt.DefaultEventAllocator: com.ctc.wstx.evt.DefaultEventAllocator getDefaultInstance()>();

        goto label3;

     label2:
        $r5 = staticinvoke <com.ctc.wstx.evt.DefaultEventAllocator: com.ctc.wstx.evt.DefaultEventAllocator getFastInstance()>();

     label3:
        return $r5;
    }

    public com.ctc.wstx.api.ReaderConfig createPrivateConfig()
    {
        com.ctc.wstx.util.SymbolTable $r1, $r3;
        com.ctc.wstx.stax.WstxInputFactory r0;
        com.ctc.wstx.api.ReaderConfig $r2, $r4;

        r0 := @this: com.ctc.wstx.stax.WstxInputFactory;

        $r2 = r0.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.api.ReaderConfig mConfig>;

        $r1 = r0.<com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.util.SymbolTable mSymbols>;

        $r3 = virtualinvoke $r1.<com.ctc.wstx.util.SymbolTable: com.ctc.wstx.util.SymbolTable makeChild()>();

        $r4 = virtualinvoke $r2.<com.ctc.wstx.api.ReaderConfig: com.ctc.wstx.api.ReaderConfig createNonShared(com.ctc.wstx.util.SymbolTable)>($r3);

        return $r4;
    }

    static void <clinit>()
    {
        com.ctc.wstx.util.SymbolTable $r0, $r1;

        <com.ctc.wstx.stax.WstxInputFactory: int MAX_SYMBOL_TABLE_GENERATIONS> = 500;

        <com.ctc.wstx.stax.WstxInputFactory: int MAX_SYMBOL_TABLE_SIZE> = 12000;

        $r0 = staticinvoke <com.ctc.wstx.util.DefaultXmlSymbolTable: com.ctc.wstx.util.SymbolTable getInstance()>();

        <com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.util.SymbolTable mRootSymbols> = $r0;

        $r1 = <com.ctc.wstx.stax.WstxInputFactory: com.ctc.wstx.util.SymbolTable mRootSymbols>;

        virtualinvoke $r1.<com.ctc.wstx.util.SymbolTable: void setInternStrings(boolean)>(1);

        return;
    }
}
