final class org.apache.lucene.index.CoalescedDeletes$3 extends java.lang.Object implements java.util.Iterator
{
    org.apache.lucene.index.Term current;
    org.apache.lucene.index.CoalescedDeletes$TermMergeQueue queue;
    org.apache.lucene.index.CoalescedDeletes$SubIterator[] top;
    int numTop;
    static final boolean $assertionsDisabled;
    final java.util.List val$iterators;

    void <init>(java.util.List)
    {
        org.apache.lucene.index.Term $r12;
        org.apache.lucene.index.CoalescedDeletes$SubIterator $r10;
        org.apache.lucene.index.CoalescedDeletes$3 r0;
        int $i0, $i1, $i2, i3;
        boolean $z0, $z1;
        java.util.Iterator $r7, r9;
        java.util.List r1, $r3, $r4, $r6;
        org.apache.lucene.index.CoalescedDeletes$TermMergeQueue $r2, $r13;
        org.apache.lucene.index.CoalescedDeletes$SubIterator[] $r5;
        java.lang.Object $r8, $r11;

        r0 := @this: org.apache.lucene.index.CoalescedDeletes$3;

        r1 := @parameter0: java.util.List;

        r0.<org.apache.lucene.index.CoalescedDeletes$3: java.util.List val$iterators> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.apache.lucene.index.CoalescedDeletes$TermMergeQueue;

        $r3 = r0.<org.apache.lucene.index.CoalescedDeletes$3: java.util.List val$iterators>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        specialinvoke $r2.<org.apache.lucene.index.CoalescedDeletes$TermMergeQueue: void <init>(int)>($i0);

        r0.<org.apache.lucene.index.CoalescedDeletes$3: org.apache.lucene.index.CoalescedDeletes$TermMergeQueue queue> = $r2;

        $r4 = r0.<org.apache.lucene.index.CoalescedDeletes$3: java.util.List val$iterators>;

        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        $r5 = newarray (org.apache.lucene.index.CoalescedDeletes$SubIterator)[$i1];

        r0.<org.apache.lucene.index.CoalescedDeletes$3: org.apache.lucene.index.CoalescedDeletes$SubIterator[] top> = $r5;

        i3 = 0;

        $r6 = r0.<org.apache.lucene.index.CoalescedDeletes$3: java.util.List val$iterators>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.util.Iterator) $r8;

        $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r10 = new org.apache.lucene.index.CoalescedDeletes$SubIterator;

        specialinvoke $r10.<org.apache.lucene.index.CoalescedDeletes$SubIterator: void <init>(org.apache.lucene.index.CoalescedDeletes$1)>(null);

        $r11 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (org.apache.lucene.index.Term) $r11;

        $r10.<org.apache.lucene.index.CoalescedDeletes$SubIterator: org.apache.lucene.index.Term current> = $r12;

        $r10.<org.apache.lucene.index.CoalescedDeletes$SubIterator: java.util.Iterator iterator> = r9;

        $i2 = i3;

        i3 = i3 + 1;

        $r10.<org.apache.lucene.index.CoalescedDeletes$SubIterator: int index> = $i2;

        $r13 = r0.<org.apache.lucene.index.CoalescedDeletes$3: org.apache.lucene.index.CoalescedDeletes$TermMergeQueue queue>;

        virtualinvoke $r13.<org.apache.lucene.index.CoalescedDeletes$TermMergeQueue: java.lang.Object add(java.lang.Object)>($r10);

     label2:
        goto label1;

     label3:
        return;
    }

    public boolean hasNext()
    {
        java.util.Iterator $r4;
        org.apache.lucene.index.CoalescedDeletes$SubIterator $r3;
        org.apache.lucene.index.CoalescedDeletes$TermMergeQueue $r1;
        org.apache.lucene.index.CoalescedDeletes$SubIterator[] $r2;
        org.apache.lucene.index.CoalescedDeletes$3 r0;
        int $i0, $i1, i2;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.CoalescedDeletes$3;

        $r1 = r0.<org.apache.lucene.index.CoalescedDeletes$3: org.apache.lucene.index.CoalescedDeletes$TermMergeQueue queue>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.CoalescedDeletes$TermMergeQueue: int size()>();

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        i2 = 0;

     label2:
        $i1 = r0.<org.apache.lucene.index.CoalescedDeletes$3: int numTop>;

        if i2 >= $i1 goto label4;

        $r2 = r0.<org.apache.lucene.index.CoalescedDeletes$3: org.apache.lucene.index.CoalescedDeletes$SubIterator[] top>;

        $r3 = $r2[i2];

        $r4 = $r3.<org.apache.lucene.index.CoalescedDeletes$SubIterator: java.util.Iterator iterator>;

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return 0;
    }

    public org.apache.lucene.index.Term next()
    {
        org.apache.lucene.index.CoalescedDeletes$TermMergeQueue $r1;
        org.apache.lucene.index.CoalescedDeletes$3 r0;
        int $i0;
        org.apache.lucene.index.Term $r2;

        r0 := @this: org.apache.lucene.index.CoalescedDeletes$3;

        specialinvoke r0.<org.apache.lucene.index.CoalescedDeletes$3: void pushTop()>();

        $r1 = r0.<org.apache.lucene.index.CoalescedDeletes$3: org.apache.lucene.index.CoalescedDeletes$TermMergeQueue queue>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.CoalescedDeletes$TermMergeQueue: int size()>();

        if $i0 <= 0 goto label1;

        specialinvoke r0.<org.apache.lucene.index.CoalescedDeletes$3: void pullTop()>();

        goto label2;

     label1:
        r0.<org.apache.lucene.index.CoalescedDeletes$3: org.apache.lucene.index.Term current> = null;

     label2:
        $r2 = r0.<org.apache.lucene.index.CoalescedDeletes$3: org.apache.lucene.index.Term current>;

        return $r2;
    }

    public void remove()
    {
        org.apache.lucene.index.CoalescedDeletes$3 r1;
        java.lang.UnsupportedOperationException $r0;

        r1 := @this: org.apache.lucene.index.CoalescedDeletes$3;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    private void pullTop()
    {
        org.apache.lucene.index.Term $r3, $r9, $r10;
        org.apache.lucene.index.CoalescedDeletes$SubIterator $r2, $r6, $r8, $r15;
        java.lang.AssertionError $r11;
        org.apache.lucene.index.CoalescedDeletes$3 r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1;
        org.apache.lucene.index.CoalescedDeletes$TermMergeQueue $r4, $r13, $r16;
        org.apache.lucene.index.CoalescedDeletes$SubIterator[] $r1, $r7, $r12;
        java.lang.Object $r5, $r14;

        r0 := @this: org.apache.lucene.index.CoalescedDeletes$3;

        $z0 = <org.apache.lucene.index.CoalescedDeletes$3: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i0 = r0.<org.apache.lucene.index.CoalescedDeletes$3: int numTop>;

        if $i0 == 0 goto label1;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label1:
        $r12 = r0.<org.apache.lucene.index.CoalescedDeletes$3: org.apache.lucene.index.CoalescedDeletes$SubIterator[] top>;

        $i1 = r0.<org.apache.lucene.index.CoalescedDeletes$3: int numTop>;

        $i2 = $i1 + 1;

        r0.<org.apache.lucene.index.CoalescedDeletes$3: int numTop> = $i2;

        $r13 = r0.<org.apache.lucene.index.CoalescedDeletes$3: org.apache.lucene.index.CoalescedDeletes$TermMergeQueue queue>;

        $r14 = virtualinvoke $r13.<org.apache.lucene.index.CoalescedDeletes$TermMergeQueue: java.lang.Object pop()>();

        $r15 = (org.apache.lucene.index.CoalescedDeletes$SubIterator) $r14;

        $r12[$i1] = $r15;

        $r16 = r0.<org.apache.lucene.index.CoalescedDeletes$3: org.apache.lucene.index.CoalescedDeletes$TermMergeQueue queue>;

        $i3 = virtualinvoke $r16.<org.apache.lucene.index.CoalescedDeletes$TermMergeQueue: int size()>();

        if $i3 == 0 goto label2;

        $r4 = r0.<org.apache.lucene.index.CoalescedDeletes$3: org.apache.lucene.index.CoalescedDeletes$TermMergeQueue queue>;

        $r5 = virtualinvoke $r4.<org.apache.lucene.index.CoalescedDeletes$TermMergeQueue: java.lang.Object top()>();

        $r6 = (org.apache.lucene.index.CoalescedDeletes$SubIterator) $r5;

        $r10 = $r6.<org.apache.lucene.index.CoalescedDeletes$SubIterator: org.apache.lucene.index.Term current>;

        $r7 = r0.<org.apache.lucene.index.CoalescedDeletes$3: org.apache.lucene.index.CoalescedDeletes$SubIterator[] top>;

        $r8 = $r7[0];

        $r9 = $r8.<org.apache.lucene.index.CoalescedDeletes$SubIterator: org.apache.lucene.index.Term current>;

        $z1 = virtualinvoke $r10.<org.apache.lucene.index.Term: boolean equals(java.lang.Object)>($r9);

        if $z1 != 0 goto label1;

        goto label2;

     label2:
        $r1 = r0.<org.apache.lucene.index.CoalescedDeletes$3: org.apache.lucene.index.CoalescedDeletes$SubIterator[] top>;

        $r2 = $r1[0];

        $r3 = $r2.<org.apache.lucene.index.CoalescedDeletes$SubIterator: org.apache.lucene.index.Term current>;

        r0.<org.apache.lucene.index.CoalescedDeletes$3: org.apache.lucene.index.Term current> = $r3;

        return;
    }

    private void pushTop()
    {
        org.apache.lucene.index.Term $r12;
        org.apache.lucene.index.CoalescedDeletes$SubIterator $r2, $r5, $r8, $r10, $r14;
        org.apache.lucene.index.CoalescedDeletes$3 r0;
        int $i0, i1;
        boolean $z0;
        java.util.Iterator $r3, $r9;
        org.apache.lucene.index.CoalescedDeletes$TermMergeQueue $r15;
        org.apache.lucene.index.CoalescedDeletes$SubIterator[] $r1, $r4, $r6, $r7, $r13;
        java.lang.Object $r11;

        r0 := @this: org.apache.lucene.index.CoalescedDeletes$3;

        i1 = 0;

     label1:
        $i0 = r0.<org.apache.lucene.index.CoalescedDeletes$3: int numTop>;

        if i1 >= $i0 goto label4;

        $r1 = r0.<org.apache.lucene.index.CoalescedDeletes$3: org.apache.lucene.index.CoalescedDeletes$SubIterator[] top>;

        $r2 = $r1[i1];

        $r3 = $r2.<org.apache.lucene.index.CoalescedDeletes$SubIterator: java.util.Iterator iterator>;

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = r0.<org.apache.lucene.index.CoalescedDeletes$3: org.apache.lucene.index.CoalescedDeletes$SubIterator[] top>;

        $r10 = $r6[i1];

        $r7 = r0.<org.apache.lucene.index.CoalescedDeletes$3: org.apache.lucene.index.CoalescedDeletes$SubIterator[] top>;

        $r8 = $r7[i1];

        $r9 = $r8.<org.apache.lucene.index.CoalescedDeletes$SubIterator: java.util.Iterator iterator>;

        $r11 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (org.apache.lucene.index.Term) $r11;

        $r10.<org.apache.lucene.index.CoalescedDeletes$SubIterator: org.apache.lucene.index.Term current> = $r12;

        $r15 = r0.<org.apache.lucene.index.CoalescedDeletes$3: org.apache.lucene.index.CoalescedDeletes$TermMergeQueue queue>;

        $r13 = r0.<org.apache.lucene.index.CoalescedDeletes$3: org.apache.lucene.index.CoalescedDeletes$SubIterator[] top>;

        $r14 = $r13[i1];

        virtualinvoke $r15.<org.apache.lucene.index.CoalescedDeletes$TermMergeQueue: java.lang.Object add(java.lang.Object)>($r14);

        goto label3;

     label2:
        $r4 = r0.<org.apache.lucene.index.CoalescedDeletes$3: org.apache.lucene.index.CoalescedDeletes$SubIterator[] top>;

        $r5 = $r4[i1];

        $r5.<org.apache.lucene.index.CoalescedDeletes$SubIterator: org.apache.lucene.index.Term current> = null;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        r0.<org.apache.lucene.index.CoalescedDeletes$3: int numTop> = 0;

        return;
    }

    public volatile java.lang.Object next()
    {
        org.apache.lucene.index.CoalescedDeletes$3 r0;
        org.apache.lucene.index.Term $r1;

        r0 := @this: org.apache.lucene.index.CoalescedDeletes$3;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.CoalescedDeletes$3: org.apache.lucene.index.Term next()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/CoalescedDeletes;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.CoalescedDeletes$3: boolean $assertionsDisabled> = $z1;

        return;
    }
}
