public abstract class org.springframework.web.HttpMediaTypeException extends javax.servlet.ServletException
{
    private final java.util.List supportedMediaTypes;

    protected void <init>(java.lang.String)
    {
        org.springframework.web.HttpMediaTypeException r0;
        java.util.List $r2;
        java.lang.String r1;

        r0 := @this: org.springframework.web.HttpMediaTypeException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<javax.servlet.ServletException: void <init>(java.lang.String)>(r1);

        $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<org.springframework.web.HttpMediaTypeException: java.util.List supportedMediaTypes> = $r2;

        return;
    }

    protected void <init>(java.lang.String, java.util.List)
    {
        org.springframework.web.HttpMediaTypeException r0;
        java.util.List r2;
        java.lang.String r1;

        r0 := @this: org.springframework.web.HttpMediaTypeException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        specialinvoke r0.<javax.servlet.ServletException: void <init>(java.lang.String)>(r1);

        r0.<org.springframework.web.HttpMediaTypeException: java.util.List supportedMediaTypes> = r2;

        return;
    }

    public java.util.List getSupportedMediaTypes()
    {
        org.springframework.web.HttpMediaTypeException r0;
        java.util.List $r1;

        r0 := @this: org.springframework.web.HttpMediaTypeException;

        $r1 = r0.<org.springframework.web.HttpMediaTypeException: java.util.List supportedMediaTypes>;

        return $r1;
    }
}
