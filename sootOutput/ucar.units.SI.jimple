public final class ucar.units.SI extends ucar.units.UnitSystemImpl
{
    private static final long serialVersionUID;
    private static ucar.units.SI si;
    public static final ucar.units.Unit AMOUNT_OF_SUBSTANCE_UNIT;
    public static final ucar.units.Unit ELECTRIC_CURRENT_UNIT;
    public static final ucar.units.Unit LENGTH_UNIT;
    public static final ucar.units.Unit LUMINOUS_INTENSITY_UNIT;
    public static final ucar.units.Unit MASS_UNIT;
    public static final ucar.units.Unit PLANE_ANGLE_UNIT;
    public static final ucar.units.Unit SOLID_ANGLE_UNIT;
    public static final ucar.units.Unit THERMODYNAMIC_TEMPERATURE_UNIT;
    public static final ucar.units.Unit TIME_UNIT;
    public static final ucar.units.BaseUnit AMPERE;
    public static final ucar.units.BaseUnit CANDELA;
    public static final ucar.units.BaseUnit KELVIN;
    public static final ucar.units.BaseUnit KILOGRAM;
    public static final ucar.units.BaseUnit METER;
    public static final ucar.units.BaseUnit METRE;
    public static final ucar.units.BaseUnit MOLE;
    public static final ucar.units.BaseUnit SECOND;
    public static final ucar.units.BaseUnit RADIAN;
    public static final ucar.units.BaseUnit STERADIAN;
    public static final ucar.units.Unit HERTZ;
    public static final ucar.units.Unit NEWTON;
    public static final ucar.units.Unit PASCAL;
    public static final ucar.units.Unit JOULE;
    public static final ucar.units.Unit WATT;
    public static final ucar.units.Unit COULOMB;
    public static final ucar.units.Unit VOLT;
    public static final ucar.units.Unit FARAD;
    public static final ucar.units.Unit OHM;
    public static final ucar.units.Unit SIEMENS;
    public static final ucar.units.Unit WEBER;
    public static final ucar.units.Unit TESLA;
    public static final ucar.units.Unit HENRY;
    public static final ucar.units.Unit DEGREE_CELSIUS;
    public static final ucar.units.Unit LUMEN;
    public static final ucar.units.Unit LUX;
    public static final ucar.units.Unit BECQUEREL;
    public static final ucar.units.Unit GRAY;
    public static final ucar.units.Unit SIEVERT;
    public static final ucar.units.Unit MINUTE;
    public static final ucar.units.Unit HOUR;
    public static final ucar.units.Unit DAY;
    public static final ucar.units.Unit ARC_DEGREE;
    public static final ucar.units.Unit ARC_MINUTE;
    public static final ucar.units.Unit ARC_SECOND;
    public static final ucar.units.Unit LITER;
    public static final ucar.units.Unit LITRE;
    public static final ucar.units.Unit METRIC_TON;
    public static final ucar.units.Unit TONNE;
    public static final ucar.units.Unit NAUTICAL_MILE;
    public static final ucar.units.Unit KNOT;
    public static final ucar.units.Unit ANGSTROM;
    public static final ucar.units.Unit ARE;
    public static final ucar.units.Unit HECTARE;
    public static final ucar.units.Unit BARN;
    public static final ucar.units.Unit BAR;
    public static final ucar.units.Unit GAL;
    public static final ucar.units.Unit CURIE;
    public static final ucar.units.Unit ROENTGEN;
    public static final ucar.units.Unit RAD;
    public static final ucar.units.Unit REM;

    private static ucar.units.BaseUnit bu(java.lang.String, java.lang.String, ucar.units.BaseQuantity) throws ucar.units.NameException, ucar.units.UnitExistsException
    {
        ucar.units.UnitName $r2;
        java.lang.String r0, r1;
        ucar.units.BaseQuantity r3;
        ucar.units.BaseUnit $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: ucar.units.BaseQuantity;

        $r2 = staticinvoke <ucar.units.UnitName: ucar.units.UnitName newUnitName(java.lang.String,java.lang.String,java.lang.String)>(r0, null, r1);

        $r4 = staticinvoke <ucar.units.BaseUnit: ucar.units.BaseUnit getOrCreate(ucar.units.UnitName,ucar.units.BaseQuantity)>($r2, r3);

        return $r4;
    }

    private static ucar.units.Unit du(java.lang.String, java.lang.String, ucar.units.Unit) throws ucar.units.NameException
    {
        ucar.units.UnitName $r3;
        ucar.units.Unit r0, $r4;
        java.lang.String r1, r2;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r0 := @parameter2: ucar.units.Unit;

        $r3 = staticinvoke <ucar.units.UnitName: ucar.units.UnitName newUnitName(java.lang.String,java.lang.String,java.lang.String)>(r1, null, r2);

        $r4 = interfaceinvoke r0.<ucar.units.Unit: ucar.units.Unit clone(ucar.units.UnitName)>($r3);

        return $r4;
    }

    private void <init>() throws ucar.units.UnitExistsException, ucar.units.NameException, ucar.units.PrefixDBException, ucar.units.NoSuchUnitException
    {
        ucar.units.SI r0;
        ucar.units.UnitDBImpl $r1, $r2;

        r0 := @this: ucar.units.SI;

        $r1 = staticinvoke <ucar.units.SI: ucar.units.UnitDBImpl baseUnitDB()>();

        $r2 = staticinvoke <ucar.units.SI: ucar.units.UnitDBImpl derivedUnitDB()>();

        specialinvoke r0.<ucar.units.UnitSystemImpl: void <init>(ucar.units.UnitDBImpl,ucar.units.UnitDBImpl)>($r1, $r2);

        return;
    }

    private static ucar.units.UnitDBImpl baseUnitDB() throws ucar.units.NameException, ucar.units.UnitExistsException, ucar.units.NoSuchUnitException
    {
        ucar.units.UnitDBImpl $r0;
        ucar.units.BaseUnit $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        $r0 = new ucar.units.UnitDBImpl;

        specialinvoke $r0.<ucar.units.UnitDBImpl: void <init>(int,int)>(9, 9);

        $r1 = <ucar.units.SI: ucar.units.BaseUnit AMPERE>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r1);

        $r2 = <ucar.units.SI: ucar.units.BaseUnit CANDELA>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r2);

        $r3 = <ucar.units.SI: ucar.units.BaseUnit KELVIN>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r3);

        $r4 = <ucar.units.SI: ucar.units.BaseUnit KILOGRAM>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r4);

        $r5 = <ucar.units.SI: ucar.units.BaseUnit METER>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r5);

        $r6 = <ucar.units.SI: ucar.units.BaseUnit MOLE>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r6);

        $r7 = <ucar.units.SI: ucar.units.BaseUnit SECOND>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r7);

        $r8 = <ucar.units.SI: ucar.units.BaseUnit RADIAN>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r8);

        $r9 = <ucar.units.SI: ucar.units.BaseUnit STERADIAN>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r9);

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addAlias(java.lang.String,java.lang.String)>("metre", "meter");

        return $r0;
    }

    private static ucar.units.UnitDBImpl derivedUnitDB() throws ucar.units.NameException, ucar.units.UnitExistsException, ucar.units.NoSuchUnitException
    {
        ucar.units.Unit $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39;
        ucar.units.UnitDBImpl $r0;

        $r0 = new ucar.units.UnitDBImpl;

        specialinvoke $r0.<ucar.units.UnitDBImpl: void <init>(int,int)>(42, 43);

        $r1 = <ucar.units.SI: ucar.units.Unit HERTZ>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r1);

        $r2 = <ucar.units.SI: ucar.units.Unit NEWTON>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r2);

        $r3 = <ucar.units.SI: ucar.units.Unit PASCAL>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r3);

        $r4 = <ucar.units.SI: ucar.units.Unit JOULE>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r4);

        $r5 = <ucar.units.SI: ucar.units.Unit WATT>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r5);

        $r6 = <ucar.units.SI: ucar.units.Unit COULOMB>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r6);

        $r7 = <ucar.units.SI: ucar.units.Unit VOLT>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r7);

        $r8 = <ucar.units.SI: ucar.units.Unit FARAD>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r8);

        $r9 = <ucar.units.SI: ucar.units.Unit OHM>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r9);

        $r10 = <ucar.units.SI: ucar.units.Unit SIEMENS>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r10);

        $r11 = <ucar.units.SI: ucar.units.Unit WEBER>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r11);

        $r12 = <ucar.units.SI: ucar.units.Unit TESLA>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r12);

        $r13 = <ucar.units.SI: ucar.units.Unit HENRY>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r13);

        $r14 = <ucar.units.SI: ucar.units.Unit DEGREE_CELSIUS>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r14);

        $r15 = <ucar.units.SI: ucar.units.Unit LUMEN>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r15);

        $r16 = <ucar.units.SI: ucar.units.Unit LUX>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r16);

        $r17 = <ucar.units.SI: ucar.units.Unit BECQUEREL>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r17);

        $r18 = <ucar.units.SI: ucar.units.Unit GRAY>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r18);

        $r19 = <ucar.units.SI: ucar.units.Unit SIEVERT>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r19);

        $r20 = <ucar.units.SI: ucar.units.Unit MINUTE>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r20);

        $r21 = <ucar.units.SI: ucar.units.Unit HOUR>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r21);

        $r22 = <ucar.units.SI: ucar.units.Unit DAY>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r22);

        $r23 = <ucar.units.SI: ucar.units.Unit ARC_DEGREE>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r23);

        $r24 = <ucar.units.SI: ucar.units.Unit ARC_MINUTE>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r24);

        $r25 = <ucar.units.SI: ucar.units.Unit ARC_SECOND>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r25);

        $r26 = <ucar.units.SI: ucar.units.Unit LITER>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r26);

        $r27 = <ucar.units.SI: ucar.units.Unit METRIC_TON>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r27);

        $r28 = <ucar.units.SI: ucar.units.Unit NAUTICAL_MILE>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r28);

        $r29 = <ucar.units.SI: ucar.units.Unit KNOT>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r29);

        $r30 = <ucar.units.SI: ucar.units.Unit ANGSTROM>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r30);

        $r31 = <ucar.units.SI: ucar.units.Unit ARE>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r31);

        $r32 = <ucar.units.SI: ucar.units.Unit HECTARE>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r32);

        $r33 = <ucar.units.SI: ucar.units.Unit BARN>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r33);

        $r34 = <ucar.units.SI: ucar.units.Unit BAR>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r34);

        $r35 = <ucar.units.SI: ucar.units.Unit GAL>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r35);

        $r36 = <ucar.units.SI: ucar.units.Unit CURIE>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r36);

        $r37 = <ucar.units.SI: ucar.units.Unit ROENTGEN>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r37);

        $r38 = <ucar.units.SI: ucar.units.Unit RAD>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r38);

        $r39 = <ucar.units.SI: ucar.units.Unit REM>;

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addUnit(ucar.units.Unit)>($r39);

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addAlias(java.lang.String,java.lang.String,java.lang.String)>("litre", "liter", "l");

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addAlias(java.lang.String,java.lang.String)>("tonne", "metric ton");

        virtualinvoke $r0.<ucar.units.UnitDBImpl: void addSymbol(java.lang.String,java.lang.String)>("tne", "tonne");

        return $r0;
    }

    public static ucar.units.SI instance() throws ucar.units.UnitSystemException
    {
        java.lang.Throwable $r3;
        ucar.units.UnitSystemException $r5;
        ucar.units.UnitException $r4;
        ucar.units.SI $r0, $r1, $r2;

        entermonitor class "Lucar/units/SI;";

     label1:
        $r0 = <ucar.units.SI: ucar.units.SI si>;

        if $r0 != null goto label5;

     label2:
        $r2 = new ucar.units.SI;

        specialinvoke $r2.<ucar.units.SI: void <init>()>();

        <ucar.units.SI: ucar.units.SI si> = $r2;

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

        $r5 = new ucar.units.UnitSystemException;

        specialinvoke $r5.<ucar.units.UnitSystemException: void <init>(java.lang.String,java.lang.Exception)>("Couldn\'t initialize class SI", $r4);

        throw $r5;

     label5:
        exitmonitor class "Lucar/units/SI;";

     label6:
        goto label9;

     label7:
        $r3 := @caughtexception;

        exitmonitor class "Lucar/units/SI;";

     label8:
        throw $r3;

     label9:
        $r1 = <ucar.units.SI: ucar.units.SI si>;

        return $r1;

        catch ucar.units.UnitException from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.String[] r0;

        r0 := @parameter0: java.lang.String[];

        staticinvoke <ucar.units.SI: ucar.units.SI instance()>();

        return;
    }

    static void <clinit>()
    {
        ucar.units.SupplementaryBaseQuantity $r13, $r15;
        ucar.units.OffsetUnit $r147;
        java.lang.StringBuilder $r89, $r90, $r93, $r94, $r167, $r168;
        ucar.units.UnitException $r85;
        ucar.units.ScaledUnit $r148, $r149, $r150, $r151, $r152, $r153, $r154, $r155, $r156, $r157, $r158, $r159, $r160, $r161, $r162, $r163, $r164, $r165, $r166;
        int $i1, $i3;
        java.io.PrintStream $r88;
        ucar.units.BaseUnit $r1, $r3, $r5, $r7, $r9, $r12, $r14, $r16, r95, r96, r97, r98, r99, r100, r101, r102, r103, $r144;
        ucar.units.RegularBaseQuantity $r0, $r2, $r4, $r6, $r8, $r10, $r11;
        java.lang.String $r86, $r91, $r143;
        ucar.units.Unit $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r54, $r56, $r59, $r61, $r64, $r67, $r68, $r71, $r72, $r75, $r78, $r79, $r82, r104, r105, r106, r107, r108, r109, r110, r111, r112, r113, r114, r115, r116, r117, r118, r119, r120, r121, r122, r123, r124, r125, r126, r127, r128, r129, r130, r131, r132, r133, r134, r135, r136, r137, r138, r139, r140, r141, r142, $r145, $r146;

        <ucar.units.SI: long serialVersionUID> = 1L;

        r95 = null;

        r96 = null;

        r97 = null;

        r98 = null;

        r99 = null;

        r100 = null;

        r101 = null;

        r102 = null;

        r103 = null;

        r104 = null;

        r105 = null;

        r106 = null;

        r107 = null;

        r108 = null;

        r109 = null;

        r110 = null;

        r111 = null;

        r112 = null;

        r113 = null;

        r114 = null;

        r115 = null;

        r116 = null;

        r117 = null;

        r118 = null;

        r119 = null;

        r120 = null;

        r121 = null;

        r122 = null;

        r123 = null;

        r124 = null;

        r125 = null;

        r126 = null;

        r127 = null;

        r128 = null;

        r129 = null;

        r130 = null;

        r131 = null;

        r132 = null;

        r133 = null;

        r134 = null;

        r135 = null;

        r136 = null;

        r137 = null;

        r138 = null;

        r139 = null;

        r140 = null;

        r141 = null;

        r142 = null;

     label1:
        $r0 = <ucar.units.BaseQuantity: ucar.units.RegularBaseQuantity ELECTRIC_CURRENT>;

        $r1 = staticinvoke <ucar.units.SI: ucar.units.BaseUnit bu(java.lang.String,java.lang.String,ucar.units.BaseQuantity)>("ampere", "A", $r0);

        r95 = $r1;

        $r2 = <ucar.units.BaseQuantity: ucar.units.RegularBaseQuantity LUMINOUS_INTENSITY>;

        $r3 = staticinvoke <ucar.units.SI: ucar.units.BaseUnit bu(java.lang.String,java.lang.String,ucar.units.BaseQuantity)>("candela", "cd", $r2);

        r96 = $r3;

        $r4 = <ucar.units.BaseQuantity: ucar.units.RegularBaseQuantity THERMODYNAMIC_TEMPERATURE>;

        $r5 = staticinvoke <ucar.units.SI: ucar.units.BaseUnit bu(java.lang.String,java.lang.String,ucar.units.BaseQuantity)>("kelvin", "K", $r4);

        r97 = $r5;

        $r6 = <ucar.units.BaseQuantity: ucar.units.RegularBaseQuantity MASS>;

        $r7 = staticinvoke <ucar.units.SI: ucar.units.BaseUnit bu(java.lang.String,java.lang.String,ucar.units.BaseQuantity)>("kilogram", "kg", $r6);

        r98 = $r7;

        $r8 = <ucar.units.BaseQuantity: ucar.units.RegularBaseQuantity LENGTH>;

        $r9 = staticinvoke <ucar.units.SI: ucar.units.BaseUnit bu(java.lang.String,java.lang.String,ucar.units.BaseQuantity)>("meter", "m", $r8);

        r99 = $r9;

        $r10 = <ucar.units.BaseQuantity: ucar.units.RegularBaseQuantity AMOUNT_OF_SUBSTANCE>;

        r100 = staticinvoke <ucar.units.SI: ucar.units.BaseUnit bu(java.lang.String,java.lang.String,ucar.units.BaseQuantity)>("mole", "mol", $r10);

        $r11 = <ucar.units.BaseQuantity: ucar.units.RegularBaseQuantity TIME>;

        $r12 = staticinvoke <ucar.units.SI: ucar.units.BaseUnit bu(java.lang.String,java.lang.String,ucar.units.BaseQuantity)>("second", "s", $r11);

        r101 = $r12;

        $r13 = <ucar.units.BaseQuantity: ucar.units.SupplementaryBaseQuantity PLANE_ANGLE>;

        $r14 = staticinvoke <ucar.units.SI: ucar.units.BaseUnit bu(java.lang.String,java.lang.String,ucar.units.BaseQuantity)>("radian", "rad", $r13);

        r102 = $r14;

        $r15 = <ucar.units.BaseQuantity: ucar.units.SupplementaryBaseQuantity SOLID_ANGLE>;

        $r16 = staticinvoke <ucar.units.SI: ucar.units.BaseUnit bu(java.lang.String,java.lang.String,ucar.units.BaseQuantity)>("steradian", "sr", $r15);

        r103 = $r16;

        $i1 = (int) -1;

        $r17 = virtualinvoke $r12.<ucar.units.BaseUnit: ucar.units.Unit raiseTo(int)>($i1);

        $r18 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("hertz", "Hz", $r17);

        r104 = $r18;

        $r19 = virtualinvoke $r7.<ucar.units.BaseUnit: ucar.units.Unit multiplyBy(ucar.units.Unit)>($r9);

        $r20 = virtualinvoke $r12.<ucar.units.BaseUnit: ucar.units.Unit raiseTo(int)>(2);

        $r21 = interfaceinvoke $r19.<ucar.units.Unit: ucar.units.Unit divideBy(ucar.units.Unit)>($r20);

        $r22 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("newton", "N", $r21);

        r105 = $r22;

        $r23 = virtualinvoke $r9.<ucar.units.BaseUnit: ucar.units.Unit raiseTo(int)>(2);

        $r24 = interfaceinvoke $r22.<ucar.units.Unit: ucar.units.Unit divideBy(ucar.units.Unit)>($r23);

        $r25 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("pascal", "Pa", $r24);

        r106 = $r25;

        $r26 = interfaceinvoke $r22.<ucar.units.Unit: ucar.units.Unit multiplyBy(ucar.units.Unit)>($r9);

        $r27 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("joule", "J", $r26);

        r107 = $r27;

        $r28 = interfaceinvoke $r27.<ucar.units.Unit: ucar.units.Unit divideBy(ucar.units.Unit)>($r12);

        $r29 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("watt", "W", $r28);

        r108 = $r29;

        $r30 = virtualinvoke $r1.<ucar.units.BaseUnit: ucar.units.Unit multiplyBy(ucar.units.Unit)>($r12);

        $r31 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("coulomb", "C", $r30);

        r109 = $r31;

        $r32 = interfaceinvoke $r29.<ucar.units.Unit: ucar.units.Unit divideBy(ucar.units.Unit)>($r1);

        $r33 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("volt", "V", $r32);

        r110 = $r33;

        $r34 = interfaceinvoke $r31.<ucar.units.Unit: ucar.units.Unit divideBy(ucar.units.Unit)>($r33);

        r111 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("farad", "F", $r34);

        $r35 = interfaceinvoke $r33.<ucar.units.Unit: ucar.units.Unit divideBy(ucar.units.Unit)>($r1);

        $r36 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("ohm", "Ohm", $r35);

        r112 = $r36;

        $i3 = (int) -1;

        $r37 = interfaceinvoke $r36.<ucar.units.Unit: ucar.units.Unit raiseTo(int)>($i3);

        r113 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("siemens", "S", $r37);

        $r38 = interfaceinvoke $r33.<ucar.units.Unit: ucar.units.Unit multiplyBy(ucar.units.Unit)>($r12);

        $r39 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("weber", "Wb", $r38);

        r114 = $r39;

        $r40 = virtualinvoke $r9.<ucar.units.BaseUnit: ucar.units.Unit raiseTo(int)>(2);

        $r41 = interfaceinvoke $r39.<ucar.units.Unit: ucar.units.Unit divideBy(ucar.units.Unit)>($r40);

        r115 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("tesla", "T", $r41);

        $r42 = interfaceinvoke $r39.<ucar.units.Unit: ucar.units.Unit divideBy(ucar.units.Unit)>($r1);

        r116 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("henry", "H", $r42);

        $r147 = new ucar.units.OffsetUnit;

        specialinvoke $r147.<ucar.units.OffsetUnit: void <init>(ucar.units.Unit,double)>($r5, 273.15);

        r117 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("degree celsius", "Cel", $r147);

        $r44 = virtualinvoke $r3.<ucar.units.BaseUnit: ucar.units.Unit multiplyBy(ucar.units.Unit)>($r16);

        $r45 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("lumen", "lm", $r44);

        r118 = $r45;

        $r46 = virtualinvoke $r9.<ucar.units.BaseUnit: ucar.units.Unit raiseTo(int)>(2);

        $r47 = interfaceinvoke $r45.<ucar.units.Unit: ucar.units.Unit divideBy(ucar.units.Unit)>($r46);

        r119 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("lux", "lx", $r47);

        $r48 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("becquerel", "Bq", $r18);

        r120 = $r48;

        $r49 = interfaceinvoke $r27.<ucar.units.Unit: ucar.units.Unit divideBy(ucar.units.Unit)>($r7);

        $r50 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("gray", "Gy", $r49);

        r121 = $r50;

        $r51 = interfaceinvoke $r27.<ucar.units.Unit: ucar.units.Unit divideBy(ucar.units.Unit)>($r7);

        $r52 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("sievert", "Sv", $r51);

        r122 = $r52;

        $r148 = new ucar.units.ScaledUnit;

        specialinvoke $r148.<ucar.units.ScaledUnit: void <init>(double,ucar.units.Unit)>(60.0, $r12);

        $r54 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("minute", "min", $r148);

        r123 = $r54;

        $r149 = new ucar.units.ScaledUnit;

        specialinvoke $r149.<ucar.units.ScaledUnit: void <init>(double,ucar.units.Unit)>(60.0, $r54);

        $r56 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("hour", "h", $r149);

        r124 = $r56;

        $r150 = new ucar.units.ScaledUnit;

        specialinvoke $r150.<ucar.units.ScaledUnit: void <init>(double,ucar.units.Unit)>(24.0, $r56);

        r125 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("day", "d", $r150);

        $r151 = new ucar.units.ScaledUnit;

        specialinvoke $r151.<ucar.units.ScaledUnit: void <init>(double,ucar.units.Unit)>(0.017453292519943295, $r14);

        $r59 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("arc degree", "deg", $r151);

        r126 = $r59;

        $r152 = new ucar.units.ScaledUnit;

        specialinvoke $r152.<ucar.units.ScaledUnit: void <init>(double,ucar.units.Unit)>(0.016666666666666666, $r59);

        $r61 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("arc minute", "\'", $r152);

        r127 = $r61;

        $r153 = new ucar.units.ScaledUnit;

        specialinvoke $r153.<ucar.units.ScaledUnit: void <init>(double,ucar.units.Unit)>(0.016666666666666666, $r61);

        r128 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("arc second", "\"", $r153);

        $r154 = new ucar.units.ScaledUnit;

        $r64 = virtualinvoke $r9.<ucar.units.BaseUnit: ucar.units.Unit raiseTo(int)>(3);

        specialinvoke $r154.<ucar.units.ScaledUnit: void <init>(double,ucar.units.Unit)>(0.001, $r64);

        r129 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("liter", "L", $r154);

        $r155 = new ucar.units.ScaledUnit;

        specialinvoke $r155.<ucar.units.ScaledUnit: void <init>(double,ucar.units.Unit)>(1000.0, $r7);

        r130 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("metric ton", "t", $r155);

        $r156 = new ucar.units.ScaledUnit;

        specialinvoke $r156.<ucar.units.ScaledUnit: void <init>(double,ucar.units.Unit)>(1852.0, $r9);

        $r67 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("nautical mile", "nmi", $r156);

        r131 = $r67;

        $r68 = interfaceinvoke $r67.<ucar.units.Unit: ucar.units.Unit divideBy(ucar.units.Unit)>($r56);

        r132 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("knot", "kt", $r68);

        $r157 = new ucar.units.ScaledUnit;

        specialinvoke $r157.<ucar.units.ScaledUnit: void <init>(double,ucar.units.Unit)>(1.0E-10, $r9);

        r133 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("angstrom", null, $r157);

        $r158 = new ucar.units.ScaledUnit;

        specialinvoke $r158.<ucar.units.ScaledUnit: void <init>(double,ucar.units.Unit)>(10.0, $r9);

        $r71 = virtualinvoke $r158.<ucar.units.ScaledUnit: ucar.units.Unit raiseTo(int)>(2);

        $r72 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("are", "are", $r71);

        r134 = $r72;

        $r159 = new ucar.units.ScaledUnit;

        specialinvoke $r159.<ucar.units.ScaledUnit: void <init>(double,ucar.units.Unit)>(100.0, $r72);

        r135 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("hectare", "ha", $r159);

        $r160 = new ucar.units.ScaledUnit;

        $r75 = virtualinvoke $r9.<ucar.units.BaseUnit: ucar.units.Unit raiseTo(int)>(2);

        specialinvoke $r160.<ucar.units.ScaledUnit: void <init>(double,ucar.units.Unit)>(1.0E-28, $r75);

        r136 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("barn", "b", $r160);

        $r161 = new ucar.units.ScaledUnit;

        specialinvoke $r161.<ucar.units.ScaledUnit: void <init>(double,ucar.units.Unit)>(100000.0, $r25);

        r137 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("bar", "bar", $r161);

        $r162 = new ucar.units.ScaledUnit;

        specialinvoke $r162.<ucar.units.ScaledUnit: void <init>(double,ucar.units.Unit)>(0.01, $r9);

        $r78 = virtualinvoke $r12.<ucar.units.BaseUnit: ucar.units.Unit raiseTo(int)>(2);

        $r79 = virtualinvoke $r162.<ucar.units.ScaledUnit: ucar.units.Unit divideBy(ucar.units.Unit)>($r78);

        r138 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("gal", "Gal", $r79);

        $r163 = new ucar.units.ScaledUnit;

        specialinvoke $r163.<ucar.units.ScaledUnit: void <init>(double,ucar.units.Unit)>(3.7E10, $r48);

        r139 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("curie", "Ci", $r163);

        $r164 = new ucar.units.ScaledUnit;

        $r82 = interfaceinvoke $r31.<ucar.units.Unit: ucar.units.Unit divideBy(ucar.units.Unit)>($r7);

        specialinvoke $r164.<ucar.units.ScaledUnit: void <init>(double,ucar.units.Unit)>(2.58E-4, $r82);

        r140 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("roentgen", "R", $r164);

        $r165 = new ucar.units.ScaledUnit;

        specialinvoke $r165.<ucar.units.ScaledUnit: void <init>(double,ucar.units.Unit)>(0.01, $r50);

        r141 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("rad", "rd", $r165);

        $r166 = new ucar.units.ScaledUnit;

        specialinvoke $r166.<ucar.units.ScaledUnit: void <init>(double,ucar.units.Unit)>(0.01, $r52);

        r142 = staticinvoke <ucar.units.SI: ucar.units.Unit du(java.lang.String,java.lang.String,ucar.units.Unit)>("rem", "rem", $r166);

     label2:
        goto label6;

     label3:
        $r85 := @caughtexception;

        $r86 = virtualinvoke $r85.<ucar.units.UnitException: java.lang.String getMessage()>();

        $r88 = <java.lang.System: java.io.PrintStream err>;

        $r167 = new java.lang.StringBuilder;

        specialinvoke $r167.<java.lang.StringBuilder: void <init>()>();

        $r89 = virtualinvoke $r167.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t initialize class SI");

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r86);

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();

        if $r91 != null goto label4;

        $r143 = "";

        goto label5;

     label4:
        $r168 = new java.lang.StringBuilder;

        specialinvoke $r168.<java.lang.StringBuilder: void <init>()>();

        $r93 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r86);

        $r143 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        virtualinvoke $r88.<java.io.PrintStream: void println(java.lang.String)>($r143);

     label6:
        <ucar.units.SI: ucar.units.Unit AMOUNT_OF_SUBSTANCE_UNIT> = r100;

        <ucar.units.SI: ucar.units.Unit ELECTRIC_CURRENT_UNIT> = r95;

        <ucar.units.SI: ucar.units.Unit LENGTH_UNIT> = r99;

        <ucar.units.SI: ucar.units.Unit LUMINOUS_INTENSITY_UNIT> = r96;

        <ucar.units.SI: ucar.units.Unit MASS_UNIT> = r98;

        <ucar.units.SI: ucar.units.Unit PLANE_ANGLE_UNIT> = r102;

        <ucar.units.SI: ucar.units.Unit SOLID_ANGLE_UNIT> = r103;

        <ucar.units.SI: ucar.units.Unit THERMODYNAMIC_TEMPERATURE_UNIT> = r97;

        <ucar.units.SI: ucar.units.Unit TIME_UNIT> = r101;

        <ucar.units.SI: ucar.units.BaseUnit AMPERE> = r95;

        <ucar.units.SI: ucar.units.BaseUnit CANDELA> = r96;

        <ucar.units.SI: ucar.units.BaseUnit KELVIN> = r97;

        <ucar.units.SI: ucar.units.BaseUnit KILOGRAM> = r98;

        <ucar.units.SI: ucar.units.BaseUnit METER> = r99;

        $r144 = <ucar.units.SI: ucar.units.BaseUnit METER>;

        <ucar.units.SI: ucar.units.BaseUnit METRE> = $r144;

        <ucar.units.SI: ucar.units.BaseUnit MOLE> = r100;

        <ucar.units.SI: ucar.units.BaseUnit SECOND> = r101;

        <ucar.units.SI: ucar.units.BaseUnit RADIAN> = r102;

        <ucar.units.SI: ucar.units.BaseUnit STERADIAN> = r103;

        <ucar.units.SI: ucar.units.Unit HERTZ> = r104;

        <ucar.units.SI: ucar.units.Unit NEWTON> = r105;

        <ucar.units.SI: ucar.units.Unit PASCAL> = r106;

        <ucar.units.SI: ucar.units.Unit JOULE> = r107;

        <ucar.units.SI: ucar.units.Unit WATT> = r108;

        <ucar.units.SI: ucar.units.Unit COULOMB> = r109;

        <ucar.units.SI: ucar.units.Unit VOLT> = r110;

        <ucar.units.SI: ucar.units.Unit FARAD> = r111;

        <ucar.units.SI: ucar.units.Unit OHM> = r112;

        <ucar.units.SI: ucar.units.Unit SIEMENS> = r113;

        <ucar.units.SI: ucar.units.Unit WEBER> = r114;

        <ucar.units.SI: ucar.units.Unit TESLA> = r115;

        <ucar.units.SI: ucar.units.Unit HENRY> = r116;

        <ucar.units.SI: ucar.units.Unit DEGREE_CELSIUS> = r117;

        <ucar.units.SI: ucar.units.Unit LUMEN> = r118;

        <ucar.units.SI: ucar.units.Unit LUX> = r119;

        <ucar.units.SI: ucar.units.Unit BECQUEREL> = r120;

        <ucar.units.SI: ucar.units.Unit GRAY> = r121;

        <ucar.units.SI: ucar.units.Unit SIEVERT> = r122;

        <ucar.units.SI: ucar.units.Unit MINUTE> = r123;

        <ucar.units.SI: ucar.units.Unit HOUR> = r124;

        <ucar.units.SI: ucar.units.Unit DAY> = r125;

        <ucar.units.SI: ucar.units.Unit ARC_DEGREE> = r126;

        <ucar.units.SI: ucar.units.Unit ARC_MINUTE> = r127;

        <ucar.units.SI: ucar.units.Unit ARC_SECOND> = r128;

        <ucar.units.SI: ucar.units.Unit LITER> = r129;

        $r145 = <ucar.units.SI: ucar.units.Unit LITER>;

        <ucar.units.SI: ucar.units.Unit LITRE> = $r145;

        <ucar.units.SI: ucar.units.Unit METRIC_TON> = r130;

        $r146 = <ucar.units.SI: ucar.units.Unit METRIC_TON>;

        <ucar.units.SI: ucar.units.Unit TONNE> = $r146;

        <ucar.units.SI: ucar.units.Unit NAUTICAL_MILE> = r131;

        <ucar.units.SI: ucar.units.Unit KNOT> = r132;

        <ucar.units.SI: ucar.units.Unit ANGSTROM> = r133;

        <ucar.units.SI: ucar.units.Unit ARE> = r134;

        <ucar.units.SI: ucar.units.Unit HECTARE> = r135;

        <ucar.units.SI: ucar.units.Unit BARN> = r136;

        <ucar.units.SI: ucar.units.Unit BAR> = r137;

        <ucar.units.SI: ucar.units.Unit GAL> = r138;

        <ucar.units.SI: ucar.units.Unit CURIE> = r139;

        <ucar.units.SI: ucar.units.Unit ROENTGEN> = r140;

        <ucar.units.SI: ucar.units.Unit RAD> = r141;

        <ucar.units.SI: ucar.units.Unit REM> = r142;

        return;

        catch ucar.units.UnitException from label1 to label2 with label3;
    }
}
