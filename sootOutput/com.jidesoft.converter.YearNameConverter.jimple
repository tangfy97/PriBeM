public class com.jidesoft.converter.YearNameConverter extends java.lang.Object implements com.jidesoft.converter.ObjectConverter
{
    public static com.jidesoft.converter.ConverterContext CONTEXT;

    public void <init>()
    {
        com.jidesoft.converter.YearNameConverter r0;

        r0 := @this: com.jidesoft.converter.YearNameConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String toString(java.lang.Object, com.jidesoft.converter.ConverterContext)
    {
        com.jidesoft.converter.ConverterContext r3;
        com.jidesoft.converter.YearNameConverter r2;
        java.lang.Object r0;
        java.lang.String $r1;
        boolean $z0;

        r2 := @this: com.jidesoft.converter.YearNameConverter;

        r0 := @parameter0: java.lang.Object;

        r3 := @parameter1: com.jidesoft.converter.ConverterContext;

        if r0 == null goto label1;

        $z0 = r0 instanceof java.lang.Number;

        if $z0 != 0 goto label2;

     label1:
        return "";

     label2:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    public boolean supportToString(java.lang.Object, com.jidesoft.converter.ConverterContext)
    {
        java.lang.Object r1;
        com.jidesoft.converter.ConverterContext r2;
        com.jidesoft.converter.YearNameConverter r0;

        r0 := @this: com.jidesoft.converter.YearNameConverter;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: com.jidesoft.converter.ConverterContext;

        return 1;
    }

    public java.lang.Object fromString(java.lang.String, com.jidesoft.converter.ConverterContext)
    {
        com.jidesoft.converter.ConverterContext r4;
        com.jidesoft.converter.YearNameConverter r3;
        int $i0;
        java.lang.NumberFormatException $r2;
        java.lang.String r0;
        java.lang.Integer $r1;

        r3 := @this: com.jidesoft.converter.YearNameConverter;

        r0 := @parameter0: java.lang.String;

        r4 := @parameter1: com.jidesoft.converter.ConverterContext;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r0);

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        return r0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public boolean supportFromString(java.lang.String, com.jidesoft.converter.ConverterContext)
    {
        java.lang.String r1;
        com.jidesoft.converter.ConverterContext r2;
        com.jidesoft.converter.YearNameConverter r0;

        r0 := @this: com.jidesoft.converter.YearNameConverter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.jidesoft.converter.ConverterContext;

        return 1;
    }

    static void <clinit>()
    {
        com.jidesoft.converter.ConverterContext $r0;

        $r0 = new com.jidesoft.converter.ConverterContext;

        specialinvoke $r0.<com.jidesoft.converter.ConverterContext: void <init>(java.lang.String)>("YearName");

        <com.jidesoft.converter.YearNameConverter: com.jidesoft.converter.ConverterContext CONTEXT> = $r0;

        return;
    }
}
