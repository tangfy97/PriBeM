public class com.jidesoft.swing.ContentContainer extends javax.swing.JPanel
{
    private com.jidesoft.plaf.basic.ThemePainter _painter;

    public void <init>()
    {
        com.jidesoft.swing.ContentContainer r0;
        javax.swing.border.Border $r1;

        r0 := @this: com.jidesoft.swing.ContentContainer;

        specialinvoke r0.<javax.swing.JPanel: void <init>()>();

        $r1 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder()>();

        virtualinvoke r0.<com.jidesoft.swing.ContentContainer: void setBorder(javax.swing.border.Border)>($r1);

        virtualinvoke r0.<com.jidesoft.swing.ContentContainer: void setOpaque(boolean)>(1);

        virtualinvoke r0.<com.jidesoft.swing.ContentContainer: void updateUI()>();

        virtualinvoke r0.<com.jidesoft.swing.ContentContainer: void setFocusCycleRoot(boolean)>(0);

        virtualinvoke r0.<com.jidesoft.swing.ContentContainer: void setFocusable(boolean)>(0);

        return;
    }

    public void updateUI()
    {
        java.lang.Object $r1, $r2;
        com.jidesoft.plaf.basic.ThemePainter $r3;
        com.jidesoft.swing.ContentContainer r0;

        r0 := @this: com.jidesoft.swing.ContentContainer;

        specialinvoke r0.<javax.swing.JPanel: void updateUI()>();

        $r1 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("Theme.painter");

        if $r1 != null goto label1;

        staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: void installJideExtension()>();

     label1:
        staticinvoke <javax.swing.LookAndFeel: void installColors(javax.swing.JComponent,java.lang.String,java.lang.String)>(r0, "ContentContainer.background", "ContentContainer.foreground");

        $r2 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("Theme.painter");

        $r3 = (com.jidesoft.plaf.basic.ThemePainter) $r2;

        r0.<com.jidesoft.swing.ContentContainer: com.jidesoft.plaf.basic.ThemePainter _painter> = $r3;

        return;
    }

    protected void paintComponent(java.awt.Graphics)
    {
        java.awt.Rectangle $r3;
        java.awt.Graphics r1;
        int $i0, $i1;
        com.jidesoft.plaf.basic.ThemePainter $r2, $r4;
        com.jidesoft.swing.ContentContainer r0;
        boolean $z0;

        r0 := @this: com.jidesoft.swing.ContentContainer;

        r1 := @parameter0: java.awt.Graphics;

        specialinvoke r0.<javax.swing.JPanel: void paintComponent(java.awt.Graphics)>(r1);

        $r2 = r0.<com.jidesoft.swing.ContentContainer: com.jidesoft.plaf.basic.ThemePainter _painter>;

        if $r2 == null goto label1;

        $z0 = virtualinvoke r0.<com.jidesoft.swing.ContentContainer: boolean isOpaque()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<com.jidesoft.swing.ContentContainer: com.jidesoft.plaf.basic.ThemePainter _painter>;

        $r3 = new java.awt.Rectangle;

        $i0 = virtualinvoke r0.<com.jidesoft.swing.ContentContainer: int getWidth()>();

        $i1 = virtualinvoke r0.<com.jidesoft.swing.ContentContainer: int getHeight()>();

        specialinvoke $r3.<java.awt.Rectangle: void <init>(int,int,int,int)>(0, 0, $i0, $i1);

        interfaceinvoke $r4.<com.jidesoft.plaf.basic.ThemePainter: void paintContentBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r0, r1, $r3, 0, 0);

     label1:
        return;
    }
}
