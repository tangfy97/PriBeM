public class org.apache.batik.bridge.SVGUseElementBridge extends org.apache.batik.bridge.AbstractGraphicsNodeBridge
{
    protected org.apache.batik.bridge.SVGUseElementBridge$ReferencedElementMutationListener l;
    protected org.apache.batik.bridge.BridgeContext subCtx;

    public void <init>()
    {
        org.apache.batik.bridge.SVGUseElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGUseElementBridge;

        specialinvoke r0.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: void <init>()>();

        return;
    }

    public java.lang.String getLocalName()
    {
        org.apache.batik.bridge.SVGUseElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGUseElementBridge;

        return "use";
    }

    public org.apache.batik.bridge.Bridge getInstance()
    {
        org.apache.batik.bridge.SVGUseElementBridge $r0, r1;

        r1 := @this: org.apache.batik.bridge.SVGUseElementBridge;

        $r0 = new org.apache.batik.bridge.SVGUseElementBridge;

        specialinvoke $r0.<org.apache.batik.bridge.SVGUseElementBridge: void <init>()>();

        return $r0;
    }

    public org.apache.batik.gvt.GraphicsNode createGraphicsNode(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element)
    {
        org.apache.batik.bridge.UserAgent $r2;
        org.w3c.dom.Element r0;
        org.apache.batik.bridge.BridgeContext r1;
        org.apache.batik.bridge.SVGUseElementBridge r3;
        boolean $z0;
        org.apache.batik.gvt.CompositeGraphicsNode $r4;

        r3 := @this: org.apache.batik.bridge.SVGUseElementBridge;

        r1 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r0 := @parameter1: org.w3c.dom.Element;

        $r2 = virtualinvoke r1.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.UserAgent getUserAgent()>();

        $z0 = staticinvoke <org.apache.batik.bridge.SVGUtilities: boolean matchUserAgent(org.w3c.dom.Element,org.apache.batik.bridge.UserAgent)>(r0, $r2);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r4 = virtualinvoke r3.<org.apache.batik.bridge.SVGUseElementBridge: org.apache.batik.gvt.CompositeGraphicsNode buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)>(r1, r0, null);

        virtualinvoke r3.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: void associateSVGContext(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)>(r1, r0, $r4);

        return $r4;
    }

    public org.apache.batik.gvt.CompositeGraphicsNode buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element, org.apache.batik.gvt.CompositeGraphicsNode)
    {
        org.apache.batik.dom.svg.SVGOMUseElement r1;
        java.awt.geom.Rectangle2D $r24;
        org.apache.batik.gvt.CompositeGraphicsNode $r41, r64;
        org.w3c.dom.Document $r6, $r8;
        org.apache.batik.dom.svg.SVGOMAnimatedLength $r49, r69;
        org.apache.batik.gvt.GraphicsNode $r19, $r42;
        org.apache.batik.bridge.BridgeException $r60, $r63;
        org.apache.batik.bridge.BridgeContext r4, $r58, r65;
        org.w3c.dom.svg.SVGLength $r45, $r47;
        java.awt.geom.AffineTransform $r22;
        java.lang.Object[] $r61;
        org.apache.batik.dom.svg.LiveAttributeException $r62;
        org.apache.batik.bridge.SVGUseElementBridge r10;
        java.lang.String $r3, $r12, $r13, $r14, $r15, $r46, $r48, $r53, $r54, $r55;
        org.apache.batik.dom.svg.SVGOMDocument r7, r9;
        org.apache.batik.dom.events.NodeEventTarget r70, r71;
        java.awt.RenderingHints $r23;
        org.w3c.dom.svg.SVGAnimatedString $r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z8, $z9;
        org.apache.batik.bridge.GVTBuilder $r18;
        org.apache.batik.dom.svg.SVGOMUseShadowRoot $r16;
        org.w3c.dom.svg.SVGTransformable $r21;
        org.apache.batik.css.engine.CSSContext $r57;
        java.util.List $r20;
        org.apache.batik.bridge.SVGUseElementBridge$ReferencedElementMutationListener $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40;
        org.w3c.dom.Attr r67;
        org.apache.batik.css.engine.CSSEngine $r56;
        org.w3c.dom.Node $r11, $r17, $r52, r68;
        int $i0, $i1, $i2, i3, i4;
        org.w3c.dom.svg.SVGAnimatedLength $r43, $r44;
        org.w3c.dom.NamedNodeMap $r51;
        org.w3c.dom.Element r0, $r5, $r50, $r59, r66;

        r10 := @this: org.apache.batik.bridge.SVGUseElementBridge;

        r4 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r0 := @parameter1: org.w3c.dom.Element;

        r64 := @parameter2: org.apache.batik.gvt.CompositeGraphicsNode;

        r1 = (org.apache.batik.dom.svg.SVGOMUseElement) r0;

        $r2 = virtualinvoke r1.<org.apache.batik.dom.svg.SVGURIReferenceGraphicsElement: org.w3c.dom.svg.SVGAnimatedString getHref()>();

        $r3 = interfaceinvoke $r2.<org.w3c.dom.svg.SVGAnimatedString: java.lang.String getAnimVal()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label01;

        $r60 = new org.apache.batik.bridge.BridgeException;

        $r61 = newarray (java.lang.Object)[1];

        $r61[0] = "xlink:href";

        specialinvoke $r60.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>(r4, r0, "attribute.missing", $r61);

        throw $r60;

     label01:
        $r5 = virtualinvoke r4.<org.apache.batik.bridge.BridgeContext: org.w3c.dom.Element getReferencedElement(org.w3c.dom.Element,java.lang.String)>(r0, $r3);

        $r6 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        r7 = (org.apache.batik.dom.svg.SVGOMDocument) $r6;

        $r8 = interfaceinvoke $r5.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        r9 = (org.apache.batik.dom.svg.SVGOMDocument) $r8;

        if r9 != r7 goto label02;

        $z9 = 1;

        $z8 = 1;

        goto label03;

     label02:
        $z9 = 0;

        $z8 = 0;

     label03:
        z0 = $z9;

        r65 = r4;

        r10.<org.apache.batik.bridge.SVGUseElementBridge: org.apache.batik.bridge.BridgeContext subCtx> = null;

        if $z8 != 0 goto label04;

        $r56 = virtualinvoke r9.<org.apache.batik.dom.AbstractStylableDocument: org.apache.batik.css.engine.CSSEngine getCSSEngine()>();

        $r57 = virtualinvoke $r56.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.CSSContext getCSSContext()>();

        $r58 = (org.apache.batik.bridge.BridgeContext) $r57;

        r10.<org.apache.batik.bridge.SVGUseElementBridge: org.apache.batik.bridge.BridgeContext subCtx> = $r58;

        r65 = r10.<org.apache.batik.bridge.SVGUseElementBridge: org.apache.batik.bridge.BridgeContext subCtx>;

     label04:
        $r11 = virtualinvoke r7.<org.apache.batik.dom.AbstractDocument: org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean,boolean)>($r5, 1, 1);

        $r59 = (org.w3c.dom.Element) $r11;

        r66 = $r59;

        $r12 = "symbol";

        $r13 = interfaceinvoke $r59.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z1 == 0 goto label09;

        $r50 = virtualinvoke r7.<org.apache.batik.dom.svg.SVGOMDocument: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "svg");

        $r51 = interfaceinvoke $r59.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>();

        $i2 = interfaceinvoke $r51.<org.w3c.dom.NamedNodeMap: int getLength()>();

        i3 = 0;

        goto label06;

     label05:
        $r52 = interfaceinvoke $r51.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i3);

        r67 = (org.w3c.dom.Attr) $r52;

        $r53 = interfaceinvoke r67.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        $r54 = interfaceinvoke r67.<org.w3c.dom.Attr: java.lang.String getName()>();

        $r55 = interfaceinvoke r67.<org.w3c.dom.Attr: java.lang.String getValue()>();

        interfaceinvoke $r50.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>($r53, $r54, $r55);

        i3 = i3 + 1;

     label06:
        if i3 < $i2 goto label05;

        r68 = interfaceinvoke $r59.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label08;

     label07:
        interfaceinvoke $r50.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r68);

        r68 = interfaceinvoke $r59.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

     label08:
        if r68 != null goto label07;

        r66 = $r50;

     label09:
        $r14 = "svg";

        $r15 = interfaceinvoke r66.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z2 == 0 goto label14;

     label10:
        $r43 = virtualinvoke r1.<org.apache.batik.dom.svg.SVGOMUseElement: org.w3c.dom.svg.SVGAnimatedLength getWidth()>();

        r69 = (org.apache.batik.dom.svg.SVGOMAnimatedLength) $r43;

        $z5 = virtualinvoke r69.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean isSpecified()>();

        if $z5 == 0 goto label11;

        $r47 = virtualinvoke r69.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: org.w3c.dom.svg.SVGLength getAnimVal()>();

        $r48 = interfaceinvoke $r47.<org.w3c.dom.svg.SVGLength: java.lang.String getValueAsString()>();

        interfaceinvoke r66.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "width", $r48);

     label11:
        $r44 = virtualinvoke r1.<org.apache.batik.dom.svg.SVGOMUseElement: org.w3c.dom.svg.SVGAnimatedLength getHeight()>();

        $r49 = (org.apache.batik.dom.svg.SVGOMAnimatedLength) $r44;

        $z6 = virtualinvoke $r49.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean isSpecified()>();

        if $z6 == 0 goto label12;

        $r45 = virtualinvoke $r49.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: org.w3c.dom.svg.SVGLength getAnimVal()>();

        $r46 = interfaceinvoke $r45.<org.w3c.dom.svg.SVGLength: java.lang.String getValueAsString()>();

        interfaceinvoke r66.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "height", $r46);

     label12:
        goto label14;

     label13:
        $r62 := @caughtexception;

        $r63 = new org.apache.batik.bridge.BridgeException;

        specialinvoke $r63.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.apache.batik.dom.svg.LiveAttributeException)>(r4, $r62);

        throw $r63;

     label14:
        $r16 = new org.apache.batik.dom.svg.SVGOMUseShadowRoot;

        specialinvoke $r16.<org.apache.batik.dom.svg.SVGOMUseShadowRoot: void <init>(org.apache.batik.dom.AbstractDocument,org.w3c.dom.Element,boolean)>(r7, r0, z0);

        virtualinvoke $r16.<org.apache.batik.dom.AbstractParentNode: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r66);

        if r64 != null goto label15;

        $r41 = new org.apache.batik.gvt.CompositeGraphicsNode;

        specialinvoke $r41.<org.apache.batik.gvt.CompositeGraphicsNode: void <init>()>();

        r64 = $r41;

        $r42 = r10.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: org.apache.batik.gvt.GraphicsNode node>;

        virtualinvoke r10.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: void associateSVGContext(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)>(r4, r0, $r42);

        goto label18;

     label15:
        $i1 = virtualinvoke r64.<org.apache.batik.gvt.CompositeGraphicsNode: int size()>();

        i4 = 0;

        goto label17;

     label16:
        virtualinvoke r64.<org.apache.batik.gvt.CompositeGraphicsNode: java.lang.Object remove(int)>(0);

        i4 = i4 + 1;

     label17:
        if i4 < $i1 goto label16;

     label18:
        $r17 = virtualinvoke r1.<org.apache.batik.dom.svg.SVGOMUseElement: org.w3c.dom.Node getCSSFirstChild()>();

        if $r17 == null goto label19;

        virtualinvoke r10.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: void disposeTree(org.w3c.dom.Node)>($r17);

     label19:
        virtualinvoke r1.<org.apache.batik.dom.svg.SVGOMUseElement: void setUseShadowTree(org.apache.batik.dom.svg.SVGOMUseShadowRoot)>($r16);

        staticinvoke <org.apache.batik.bridge.CSSUtilities: void computeStyleAndURIs(org.w3c.dom.Element,org.w3c.dom.Element,java.lang.String)>($r5, r66, $r3);

        $r18 = virtualinvoke r4.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.GVTBuilder getGVTBuilder()>();

        $r19 = virtualinvoke $r18.<org.apache.batik.bridge.GVTBuilder: org.apache.batik.gvt.GraphicsNode build(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)>(r4, r66);

        $r20 = virtualinvoke r64.<org.apache.batik.gvt.CompositeGraphicsNode: java.util.List getChildren()>();

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>($r19);

        $r21 = (org.w3c.dom.svg.SVGTransformable) r0;

        $r22 = virtualinvoke r10.<org.apache.batik.bridge.SVGUseElementBridge: java.awt.geom.AffineTransform computeTransform(org.w3c.dom.svg.SVGTransformable,org.apache.batik.bridge.BridgeContext)>($r21, r4);

        virtualinvoke r64.<org.apache.batik.gvt.AbstractGraphicsNode: void setTransform(java.awt.geom.AffineTransform)>($r22);

        $z3 = staticinvoke <org.apache.batik.bridge.CSSUtilities: boolean convertVisibility(org.w3c.dom.Element)>(r0);

        virtualinvoke r64.<org.apache.batik.gvt.CompositeGraphicsNode: void setVisible(boolean)>($z3);

        $r23 = staticinvoke <org.apache.batik.bridge.CSSUtilities: java.awt.RenderingHints convertColorRendering(org.w3c.dom.Element,java.awt.RenderingHints)>(r0, null);

        if $r23 == null goto label20;

        virtualinvoke r64.<org.apache.batik.gvt.AbstractGraphicsNode: void setRenderingHints(java.awt.RenderingHints)>($r23);

     label20:
        $r24 = staticinvoke <org.apache.batik.bridge.CSSUtilities: java.awt.geom.Rectangle2D convertEnableBackground(org.w3c.dom.Element)>(r0);

        if $r24 == null goto label21;

        virtualinvoke r64.<org.apache.batik.gvt.CompositeGraphicsNode: void setBackgroundEnable(java.awt.geom.Rectangle2D)>($r24);

     label21:
        $r25 = r10.<org.apache.batik.bridge.SVGUseElementBridge: org.apache.batik.bridge.SVGUseElementBridge$ReferencedElementMutationListener l>;

        if $r25 == null goto label22;

        $r36 = r10.<org.apache.batik.bridge.SVGUseElementBridge: org.apache.batik.bridge.SVGUseElementBridge$ReferencedElementMutationListener l>;

        r70 = $r36.<org.apache.batik.bridge.SVGUseElementBridge$ReferencedElementMutationListener: org.apache.batik.dom.events.NodeEventTarget target>;

        $r37 = r10.<org.apache.batik.bridge.SVGUseElementBridge: org.apache.batik.bridge.SVGUseElementBridge$ReferencedElementMutationListener l>;

        interfaceinvoke r70.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "DOMAttrModified", $r37, 1);

        $r38 = r10.<org.apache.batik.bridge.SVGUseElementBridge: org.apache.batik.bridge.SVGUseElementBridge$ReferencedElementMutationListener l>;

        interfaceinvoke r70.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "DOMNodeInserted", $r38, 1);

        $r39 = r10.<org.apache.batik.bridge.SVGUseElementBridge: org.apache.batik.bridge.SVGUseElementBridge$ReferencedElementMutationListener l>;

        interfaceinvoke r70.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "DOMNodeRemoved", $r39, 1);

        $r40 = r10.<org.apache.batik.bridge.SVGUseElementBridge: org.apache.batik.bridge.SVGUseElementBridge$ReferencedElementMutationListener l>;

        interfaceinvoke r70.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "DOMCharacterDataModified", $r40, 1);

        r10.<org.apache.batik.bridge.SVGUseElementBridge: org.apache.batik.bridge.SVGUseElementBridge$ReferencedElementMutationListener l> = null;

     label22:
        if z0 == 0 goto label23;

        $z4 = virtualinvoke r4.<org.apache.batik.bridge.BridgeContext: boolean isDynamic()>();

        if $z4 == 0 goto label23;

        $r26 = new org.apache.batik.bridge.SVGUseElementBridge$ReferencedElementMutationListener;

        specialinvoke $r26.<org.apache.batik.bridge.SVGUseElementBridge$ReferencedElementMutationListener: void <init>(org.apache.batik.bridge.SVGUseElementBridge)>(r10);

        r10.<org.apache.batik.bridge.SVGUseElementBridge: org.apache.batik.bridge.SVGUseElementBridge$ReferencedElementMutationListener l> = $r26;

        r71 = (org.apache.batik.dom.events.NodeEventTarget) $r5;

        $r27 = r10.<org.apache.batik.bridge.SVGUseElementBridge: org.apache.batik.bridge.SVGUseElementBridge$ReferencedElementMutationListener l>;

        $r27.<org.apache.batik.bridge.SVGUseElementBridge$ReferencedElementMutationListener: org.apache.batik.dom.events.NodeEventTarget target> = r71;

        $r28 = r10.<org.apache.batik.bridge.SVGUseElementBridge: org.apache.batik.bridge.SVGUseElementBridge$ReferencedElementMutationListener l>;

        interfaceinvoke r71.<org.apache.batik.dom.events.NodeEventTarget: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "DOMAttrModified", $r28, 1, null);

        $r29 = r10.<org.apache.batik.bridge.SVGUseElementBridge: org.apache.batik.bridge.SVGUseElementBridge$ReferencedElementMutationListener l>;

        virtualinvoke r65.<org.apache.batik.bridge.BridgeContext: void storeEventListenerNS(org.w3c.dom.events.EventTarget,java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>(r71, "http://www.w3.org/2001/xml-events", "DOMAttrModified", $r29, 1);

        $r30 = r10.<org.apache.batik.bridge.SVGUseElementBridge: org.apache.batik.bridge.SVGUseElementBridge$ReferencedElementMutationListener l>;

        interfaceinvoke r71.<org.apache.batik.dom.events.NodeEventTarget: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "DOMNodeInserted", $r30, 1, null);

        $r31 = r10.<org.apache.batik.bridge.SVGUseElementBridge: org.apache.batik.bridge.SVGUseElementBridge$ReferencedElementMutationListener l>;

        virtualinvoke r65.<org.apache.batik.bridge.BridgeContext: void storeEventListenerNS(org.w3c.dom.events.EventTarget,java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>(r71, "http://www.w3.org/2001/xml-events", "DOMNodeInserted", $r31, 1);

        $r32 = r10.<org.apache.batik.bridge.SVGUseElementBridge: org.apache.batik.bridge.SVGUseElementBridge$ReferencedElementMutationListener l>;

        interfaceinvoke r71.<org.apache.batik.dom.events.NodeEventTarget: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "DOMNodeRemoved", $r32, 1, null);

        $r33 = r10.<org.apache.batik.bridge.SVGUseElementBridge: org.apache.batik.bridge.SVGUseElementBridge$ReferencedElementMutationListener l>;

        virtualinvoke r65.<org.apache.batik.bridge.BridgeContext: void storeEventListenerNS(org.w3c.dom.events.EventTarget,java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>(r71, "http://www.w3.org/2001/xml-events", "DOMNodeRemoved", $r33, 1);

        $r34 = r10.<org.apache.batik.bridge.SVGUseElementBridge: org.apache.batik.bridge.SVGUseElementBridge$ReferencedElementMutationListener l>;

        interfaceinvoke r71.<org.apache.batik.dom.events.NodeEventTarget: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "DOMCharacterDataModified", $r34, 1, null);

        $r35 = r10.<org.apache.batik.bridge.SVGUseElementBridge: org.apache.batik.bridge.SVGUseElementBridge$ReferencedElementMutationListener l>;

        virtualinvoke r65.<org.apache.batik.bridge.BridgeContext: void storeEventListenerNS(org.w3c.dom.events.EventTarget,java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>(r71, "http://www.w3.org/2001/xml-events", "DOMCharacterDataModified", $r35, 1);

     label23:
        return r64;

        catch org.apache.batik.dom.svg.LiveAttributeException from label10 to label12 with label13;
    }

    public void dispose()
    {
        org.apache.batik.bridge.SVGUseElementBridge$ReferencedElementMutationListener $r1, $r5, $r6, $r7, $r8, $r9;
        org.apache.batik.dom.svg.SVGOMUseElement $r10;
        org.apache.batik.bridge.SVGUseElementBridge r0;
        org.apache.batik.dom.events.NodeEventTarget r11;
        org.w3c.dom.Element $r2;
        org.w3c.dom.Node $r3, $r4;

        r0 := @this: org.apache.batik.bridge.SVGUseElementBridge;

        $r1 = r0.<org.apache.batik.bridge.SVGUseElementBridge: org.apache.batik.bridge.SVGUseElementBridge$ReferencedElementMutationListener l>;

        if $r1 == null goto label1;

        $r5 = r0.<org.apache.batik.bridge.SVGUseElementBridge: org.apache.batik.bridge.SVGUseElementBridge$ReferencedElementMutationListener l>;

        r11 = $r5.<org.apache.batik.bridge.SVGUseElementBridge$ReferencedElementMutationListener: org.apache.batik.dom.events.NodeEventTarget target>;

        $r6 = r0.<org.apache.batik.bridge.SVGUseElementBridge: org.apache.batik.bridge.SVGUseElementBridge$ReferencedElementMutationListener l>;

        interfaceinvoke r11.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "DOMAttrModified", $r6, 1);

        $r7 = r0.<org.apache.batik.bridge.SVGUseElementBridge: org.apache.batik.bridge.SVGUseElementBridge$ReferencedElementMutationListener l>;

        interfaceinvoke r11.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "DOMNodeInserted", $r7, 1);

        $r8 = r0.<org.apache.batik.bridge.SVGUseElementBridge: org.apache.batik.bridge.SVGUseElementBridge$ReferencedElementMutationListener l>;

        interfaceinvoke r11.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "DOMNodeRemoved", $r8, 1);

        $r9 = r0.<org.apache.batik.bridge.SVGUseElementBridge: org.apache.batik.bridge.SVGUseElementBridge$ReferencedElementMutationListener l>;

        interfaceinvoke r11.<org.apache.batik.dom.events.NodeEventTarget: void removeEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>("http://www.w3.org/2001/xml-events", "DOMCharacterDataModified", $r9, 1);

        r0.<org.apache.batik.bridge.SVGUseElementBridge: org.apache.batik.bridge.SVGUseElementBridge$ReferencedElementMutationListener l> = null;

     label1:
        $r2 = r0.<org.apache.batik.bridge.AnimatableSVGBridge: org.w3c.dom.Element e>;

        $r10 = (org.apache.batik.dom.svg.SVGOMUseElement) $r2;

        if $r10 == null goto label2;

        $r3 = virtualinvoke $r10.<org.apache.batik.dom.svg.SVGOMUseElement: org.w3c.dom.Node getCSSFirstChild()>();

        if $r3 == null goto label2;

        $r4 = virtualinvoke $r10.<org.apache.batik.dom.svg.SVGOMUseElement: org.w3c.dom.Node getCSSFirstChild()>();

        virtualinvoke r0.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: void disposeTree(org.w3c.dom.Node)>($r4);

     label2:
        specialinvoke r0.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: void dispose()>();

        r0.<org.apache.batik.bridge.SVGUseElementBridge: org.apache.batik.bridge.BridgeContext subCtx> = null;

        return;
    }

    protected java.awt.geom.AffineTransform computeTransform(org.w3c.dom.svg.SVGTransformable, org.apache.batik.bridge.BridgeContext)
    {
        org.apache.batik.dom.svg.LiveAttributeException $r9;
        org.apache.batik.bridge.SVGUseElementBridge r0;
        org.w3c.dom.svg.SVGUseElement r4;
        org.w3c.dom.svg.SVGAnimatedLength $r5, $r6;
        double $d0, $d1;
        org.apache.batik.bridge.BridgeException $r10;
        org.w3c.dom.svg.SVGTransformable r1;
        org.apache.batik.bridge.BridgeContext r2;
        java.awt.geom.AffineTransform $r3, $r8;
        float $f0, $f1;
        org.apache.batik.dom.svg.AbstractSVGAnimatedLength r7, r11;

        r0 := @this: org.apache.batik.bridge.SVGUseElementBridge;

        r1 := @parameter0: org.w3c.dom.svg.SVGTransformable;

        r2 := @parameter1: org.apache.batik.bridge.BridgeContext;

        $r3 = specialinvoke r0.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: java.awt.geom.AffineTransform computeTransform(org.w3c.dom.svg.SVGTransformable,org.apache.batik.bridge.BridgeContext)>(r1, r2);

        r4 = (org.w3c.dom.svg.SVGUseElement) r1;

     label1:
        $r5 = interfaceinvoke r4.<org.w3c.dom.svg.SVGUseElement: org.w3c.dom.svg.SVGAnimatedLength getX()>();

        r11 = (org.apache.batik.dom.svg.AbstractSVGAnimatedLength) $r5;

        $f0 = virtualinvoke r11.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: float getCheckedValue()>();

        $r6 = interfaceinvoke r4.<org.w3c.dom.svg.SVGUseElement: org.w3c.dom.svg.SVGAnimatedLength getY()>();

        r7 = (org.apache.batik.dom.svg.AbstractSVGAnimatedLength) $r6;

        $f1 = virtualinvoke r7.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: float getCheckedValue()>();

        $d1 = (double) $f0;

        $d0 = (double) $f1;

        $r8 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>($d1, $d0);

        virtualinvoke $r8.<java.awt.geom.AffineTransform: void preConcatenate(java.awt.geom.AffineTransform)>($r3);

        return $r8;

     label2:
        $r9 := @caughtexception;

        $r10 = new org.apache.batik.bridge.BridgeException;

        specialinvoke $r10.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.apache.batik.dom.svg.LiveAttributeException)>(r2, $r9);

        throw $r10;

        catch org.apache.batik.dom.svg.LiveAttributeException from label1 to label2 with label2;
    }

    protected org.apache.batik.gvt.GraphicsNode instantiateGraphicsNode()
    {
        org.apache.batik.bridge.SVGUseElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGUseElementBridge;

        return null;
    }

    public boolean isComposite()
    {
        org.apache.batik.bridge.SVGUseElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGUseElementBridge;

        return 0;
    }

    public void buildGraphicsNode(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element, org.apache.batik.gvt.GraphicsNode)
    {
        org.apache.batik.bridge.SVGUseElementBridge$CursorMouseOverListener $r5;
        org.w3c.dom.Element r2;
        org.apache.batik.gvt.GraphicsNode r3;
        org.apache.batik.bridge.BridgeContext r1;
        org.apache.batik.bridge.SVGUseElementBridge r0;
        boolean $z0;
        org.apache.batik.dom.events.NodeEventTarget r4;

        r0 := @this: org.apache.batik.bridge.SVGUseElementBridge;

        r1 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r2 := @parameter1: org.w3c.dom.Element;

        r3 := @parameter2: org.apache.batik.gvt.GraphicsNode;

        specialinvoke r0.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: void buildGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode)>(r1, r2, r3);

        $z0 = virtualinvoke r1.<org.apache.batik.bridge.BridgeContext: boolean isInteractive()>();

        if $z0 == 0 goto label1;

        r4 = (org.apache.batik.dom.events.NodeEventTarget) r2;

        $r5 = new org.apache.batik.bridge.SVGUseElementBridge$CursorMouseOverListener;

        specialinvoke $r5.<org.apache.batik.bridge.SVGUseElementBridge$CursorMouseOverListener: void <init>(org.apache.batik.bridge.BridgeContext)>(r1);

        interfaceinvoke r4.<org.apache.batik.dom.events.NodeEventTarget: void addEventListenerNS(java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean,java.lang.Object)>("http://www.w3.org/2001/xml-events", "mouseover", $r5, 0, null);

        virtualinvoke r1.<org.apache.batik.bridge.BridgeContext: void storeEventListenerNS(org.w3c.dom.events.EventTarget,java.lang.String,java.lang.String,org.w3c.dom.events.EventListener,boolean)>(r4, "http://www.w3.org/2001/xml-events", "mouseover", $r5, 0);

     label1:
        return;
    }

    public void handleAnimatedAttributeChanged(org.apache.batik.dom.svg.AnimatedLiveAttributeValue)
    {
        org.apache.batik.dom.svg.LiveAttributeException $r4;
        org.apache.batik.bridge.SVGUseElementBridge r3;
        org.apache.batik.gvt.CompositeGraphicsNode $r15;
        java.lang.String $r1, $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.batik.dom.svg.AnimatedLiveAttributeValue r0;
        org.apache.batik.gvt.GraphicsNode $r7, $r14;
        org.apache.batik.bridge.BridgeException $r5;
        org.apache.batik.bridge.BridgeContext $r6, $r10, $r12;
        org.w3c.dom.svg.SVGTransformable $r9;
        java.awt.geom.AffineTransform $r11;
        org.w3c.dom.Element $r8, $r13;

        r3 := @this: org.apache.batik.bridge.SVGUseElementBridge;

        r0 := @parameter0: org.apache.batik.dom.svg.AnimatedLiveAttributeValue;

     label1:
        $r1 = interfaceinvoke r0.<org.apache.batik.dom.svg.AnimatedLiveAttributeValue: java.lang.String getNamespaceURI()>();

        $r2 = interfaceinvoke r0.<org.apache.batik.dom.svg.AnimatedLiveAttributeValue: java.lang.String getLocalName()>();

        if $r1 != null goto label3;

        $z4 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("x");

        if $z4 != 0 goto label2;

        $z5 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("y");

        if $z5 != 0 goto label2;

        $z6 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("transform");

        if $z6 == 0 goto label3;

     label2:
        $r7 = r3.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: org.apache.batik.gvt.GraphicsNode node>;

        $r8 = r3.<org.apache.batik.bridge.AnimatableSVGBridge: org.w3c.dom.Element e>;

        $r9 = (org.w3c.dom.svg.SVGTransformable) $r8;

        $r10 = r3.<org.apache.batik.bridge.AnimatableSVGBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r11 = virtualinvoke r3.<org.apache.batik.bridge.SVGUseElementBridge: java.awt.geom.AffineTransform computeTransform(org.w3c.dom.svg.SVGTransformable,org.apache.batik.bridge.BridgeContext)>($r9, $r10);

        interfaceinvoke $r7.<org.apache.batik.gvt.GraphicsNode: void setTransform(java.awt.geom.AffineTransform)>($r11);

        virtualinvoke r3.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: void handleGeometryChanged()>();

        goto label6;

     label3:
        if $r1 != null goto label4;

        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("width");

        if $z2 != 0 goto label5;

        $z3 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("height");

        if $z3 != 0 goto label5;

     label4:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/1999/xlink");

        if $z0 == 0 goto label6;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("href");

        if $z1 == 0 goto label6;

     label5:
        $r12 = r3.<org.apache.batik.bridge.AnimatableSVGBridge: org.apache.batik.bridge.BridgeContext ctx>;

        $r13 = r3.<org.apache.batik.bridge.AnimatableSVGBridge: org.w3c.dom.Element e>;

        $r14 = r3.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: org.apache.batik.gvt.GraphicsNode node>;

        $r15 = (org.apache.batik.gvt.CompositeGraphicsNode) $r14;

        virtualinvoke r3.<org.apache.batik.bridge.SVGUseElementBridge: org.apache.batik.gvt.CompositeGraphicsNode buildCompositeGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.CompositeGraphicsNode)>($r12, $r13, $r15);

     label6:
        goto label8;

     label7:
        $r4 := @caughtexception;

        $r5 = new org.apache.batik.bridge.BridgeException;

        $r6 = r3.<org.apache.batik.bridge.AnimatableSVGBridge: org.apache.batik.bridge.BridgeContext ctx>;

        specialinvoke $r5.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.apache.batik.dom.svg.LiveAttributeException)>($r6, $r4);

        throw $r5;

     label8:
        specialinvoke r3.<org.apache.batik.bridge.AbstractGraphicsNodeBridge: void handleAnimatedAttributeChanged(org.apache.batik.dom.svg.AnimatedLiveAttributeValue)>(r0);

        return;

        catch org.apache.batik.dom.svg.LiveAttributeException from label1 to label6 with label7;
    }
}
