public class org.waveprotocol.wave.client.editor.content.FullContentView extends java.lang.Object implements org.waveprotocol.wave.client.editor.content.ContentView
{
    public static final org.waveprotocol.wave.client.editor.content.ContentView INSTANCE;

    public void <init>()
    {
        org.waveprotocol.wave.client.editor.content.FullContentView r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public short getNodeType(org.waveprotocol.wave.client.editor.content.ContentNode)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode r0;
        org.waveprotocol.wave.client.editor.content.FullContentView r1;
        short $s0;

        r1 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentNode;

        $s0 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentNode: short getNodeType()>();

        return $s0;
    }

    public java.lang.String getData(org.waveprotocol.wave.client.editor.content.ContentTextNode)
    {
        org.waveprotocol.wave.client.editor.content.FullContentView r2;
        org.waveprotocol.wave.client.editor.content.ContentTextNode r0;
        java.lang.String $r1;

        r2 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentTextNode;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentTextNode: java.lang.String getData()>();

        return $r1;
    }

    public org.waveprotocol.wave.client.editor.content.ContentElement getDocumentElement()
    {
        org.waveprotocol.wave.client.editor.content.FullContentView r1;
        java.lang.RuntimeException $r0;

        r1 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("This is not implemented because the view is meant as a generic singleton");

        throw $r0;
    }

    public org.waveprotocol.wave.client.editor.content.ContentNode getFirstChild(org.waveprotocol.wave.client.editor.content.ContentNode)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode r0, $r1;
        org.waveprotocol.wave.client.editor.content.FullContentView r2;

        r2 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentNode;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentNode: org.waveprotocol.wave.client.editor.content.ContentNode getFirstChild()>();

        return $r1;
    }

    public org.waveprotocol.wave.client.editor.content.ContentNode getLastChild(org.waveprotocol.wave.client.editor.content.ContentNode)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode r0, $r1;
        org.waveprotocol.wave.client.editor.content.FullContentView r2;

        r2 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentNode;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentNode: org.waveprotocol.wave.client.editor.content.ContentNode getLastChild()>();

        return $r1;
    }

    public int getLength(org.waveprotocol.wave.client.editor.content.ContentTextNode)
    {
        int $i0;
        org.waveprotocol.wave.client.editor.content.FullContentView r1;
        org.waveprotocol.wave.client.editor.content.ContentTextNode r0;

        r1 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentTextNode;

        $i0 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentTextNode: int getLength()>();

        return $i0;
    }

    public org.waveprotocol.wave.client.editor.content.ContentNode getNextSibling(org.waveprotocol.wave.client.editor.content.ContentNode)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode r0, $r1;
        org.waveprotocol.wave.client.editor.content.FullContentView r2;

        r2 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentNode;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentNode: org.waveprotocol.wave.client.editor.content.ContentNode getNextSibling()>();

        return $r1;
    }

    public org.waveprotocol.wave.client.editor.content.ContentElement getParentElement(org.waveprotocol.wave.client.editor.content.ContentNode)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode r0;
        org.waveprotocol.wave.client.editor.content.FullContentView r2;
        org.waveprotocol.wave.client.editor.content.ContentElement $r1;

        r2 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentNode;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentNode: org.waveprotocol.wave.client.editor.content.ContentElement getParentElement()>();

        return $r1;
    }

    public org.waveprotocol.wave.client.editor.content.ContentNode getPreviousSibling(org.waveprotocol.wave.client.editor.content.ContentNode)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode r0, $r1;
        org.waveprotocol.wave.client.editor.content.FullContentView r2;

        r2 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentNode;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentNode: org.waveprotocol.wave.client.editor.content.ContentNode getPreviousSibling()>();

        return $r1;
    }

    public org.waveprotocol.wave.client.editor.content.ContentElement asElement(org.waveprotocol.wave.client.editor.content.ContentNode)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode r0;
        org.waveprotocol.wave.client.editor.content.FullContentView r1;
        org.waveprotocol.wave.client.editor.content.ContentElement $r2;

        r1 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentNode;

        if r0 == null goto label1;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentNode: org.waveprotocol.wave.client.editor.content.ContentElement asElement()>();

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public org.waveprotocol.wave.client.editor.content.ContentTextNode asText(org.waveprotocol.wave.client.editor.content.ContentNode)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode r0;
        org.waveprotocol.wave.client.editor.content.FullContentView r1;
        org.waveprotocol.wave.client.editor.content.ContentTextNode $r2;

        r1 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentNode;

        if r0 == null goto label1;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentNode: org.waveprotocol.wave.client.editor.content.ContentTextNode asText()>();

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public boolean isSameNode(org.waveprotocol.wave.client.editor.content.ContentNode, org.waveprotocol.wave.client.editor.content.ContentNode)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode r0, r1;
        org.waveprotocol.wave.client.editor.content.FullContentView r2;
        boolean $z0;

        r2 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentNode;

        r1 := @parameter1: org.waveprotocol.wave.client.editor.content.ContentNode;

        if r0 != r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.util.Map getAttributes(org.waveprotocol.wave.client.editor.content.ContentElement)
    {
        org.waveprotocol.wave.client.editor.content.FullContentView r3;
        java.util.Map $r2;
        org.waveprotocol.wave.client.editor.content.ContentElement r0;
        org.waveprotocol.wave.model.util.StringMap $r1;

        r3 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentElement: org.waveprotocol.wave.model.util.StringMap getAttributes()>();

        $r2 = staticinvoke <org.waveprotocol.wave.model.util.CollectionUtils: java.util.Map newJavaMap(org.waveprotocol.wave.model.util.ReadableStringMap)>($r1);

        return $r2;
    }

    public java.lang.String getAttribute(org.waveprotocol.wave.client.editor.content.ContentElement, java.lang.String)
    {
        org.waveprotocol.wave.client.editor.content.FullContentView r3;
        org.waveprotocol.wave.client.editor.content.ContentElement r0;
        java.lang.String r1, $r2;

        r3 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentElement: java.lang.String getAttribute(java.lang.String)>(r1);

        return $r2;
    }

    public java.lang.String getTagName(org.waveprotocol.wave.client.editor.content.ContentElement)
    {
        org.waveprotocol.wave.client.editor.content.FullContentView r2;
        org.waveprotocol.wave.client.editor.content.ContentElement r0;
        java.lang.String $r1;

        r2 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentElement: java.lang.String getTagName()>();

        return $r1;
    }

    public void onBeforeFilter(org.waveprotocol.wave.model.document.util.Point)
    {
        org.waveprotocol.wave.client.editor.content.FullContentView r0;
        org.waveprotocol.wave.model.document.util.Point r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r1 := @parameter0: org.waveprotocol.wave.model.document.util.Point;

        return;
    }

    public org.waveprotocol.wave.client.editor.content.ContentNode getVisibleNode(org.waveprotocol.wave.client.editor.content.ContentNode)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode r0;
        org.waveprotocol.wave.client.editor.content.FullContentView r1;

        r1 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentNode;

        return r0;
    }

    public org.waveprotocol.wave.client.editor.content.ContentNode getVisibleNodeFirst(org.waveprotocol.wave.client.editor.content.ContentNode)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode r0;
        org.waveprotocol.wave.client.editor.content.FullContentView r1;

        r1 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentNode;

        return r0;
    }

    public org.waveprotocol.wave.client.editor.content.ContentNode getVisibleNodeLast(org.waveprotocol.wave.client.editor.content.ContentNode)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode r0;
        org.waveprotocol.wave.client.editor.content.FullContentView r1;

        r1 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentNode;

        return r0;
    }

    public org.waveprotocol.wave.client.editor.content.ContentNode getVisibleNodeNext(org.waveprotocol.wave.client.editor.content.ContentNode)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode r0;
        org.waveprotocol.wave.client.editor.content.FullContentView r1;

        r1 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentNode;

        return r0;
    }

    public org.waveprotocol.wave.client.editor.content.ContentNode getVisibleNodePrevious(org.waveprotocol.wave.client.editor.content.ContentNode)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode r0;
        org.waveprotocol.wave.client.editor.content.FullContentView r1;

        r1 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentNode;

        return r0;
    }

    public volatile java.lang.Object getVisibleNodeLast(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.FullContentView r0;
        org.waveprotocol.wave.client.editor.content.ContentNode $r2, $r3;
        java.lang.Object r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.client.editor.content.ContentNode) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.FullContentView: org.waveprotocol.wave.client.editor.content.ContentNode getVisibleNodeLast(org.waveprotocol.wave.client.editor.content.ContentNode)>($r2);

        return $r3;
    }

    public volatile java.lang.Object getVisibleNodeFirst(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.FullContentView r0;
        org.waveprotocol.wave.client.editor.content.ContentNode $r2, $r3;
        java.lang.Object r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.client.editor.content.ContentNode) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.FullContentView: org.waveprotocol.wave.client.editor.content.ContentNode getVisibleNodeFirst(org.waveprotocol.wave.client.editor.content.ContentNode)>($r2);

        return $r3;
    }

    public volatile java.lang.Object getVisibleNodePrevious(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.FullContentView r0;
        org.waveprotocol.wave.client.editor.content.ContentNode $r2, $r3;
        java.lang.Object r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.client.editor.content.ContentNode) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.FullContentView: org.waveprotocol.wave.client.editor.content.ContentNode getVisibleNodePrevious(org.waveprotocol.wave.client.editor.content.ContentNode)>($r2);

        return $r3;
    }

    public volatile java.lang.Object getVisibleNodeNext(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.FullContentView r0;
        org.waveprotocol.wave.client.editor.content.ContentNode $r2, $r3;
        java.lang.Object r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.client.editor.content.ContentNode) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.FullContentView: org.waveprotocol.wave.client.editor.content.ContentNode getVisibleNodeNext(org.waveprotocol.wave.client.editor.content.ContentNode)>($r2);

        return $r3;
    }

    public volatile java.lang.Object getVisibleNode(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.FullContentView r0;
        org.waveprotocol.wave.client.editor.content.ContentNode $r2, $r3;
        java.lang.Object r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.client.editor.content.ContentNode) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.FullContentView: org.waveprotocol.wave.client.editor.content.ContentNode getVisibleNode(org.waveprotocol.wave.client.editor.content.ContentNode)>($r2);

        return $r3;
    }

    public volatile java.lang.Object asText(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.FullContentView r0;
        org.waveprotocol.wave.client.editor.content.ContentNode $r2;
        org.waveprotocol.wave.client.editor.content.ContentTextNode $r3;
        java.lang.Object r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.client.editor.content.ContentNode) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.FullContentView: org.waveprotocol.wave.client.editor.content.ContentTextNode asText(org.waveprotocol.wave.client.editor.content.ContentNode)>($r2);

        return $r3;
    }

    public volatile java.lang.Object asElement(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.FullContentView r0;
        org.waveprotocol.wave.client.editor.content.ContentNode $r2;
        java.lang.Object r1;
        org.waveprotocol.wave.client.editor.content.ContentElement $r3;

        r0 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.client.editor.content.ContentNode) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.FullContentView: org.waveprotocol.wave.client.editor.content.ContentElement asElement(org.waveprotocol.wave.client.editor.content.ContentNode)>($r2);

        return $r3;
    }

    public volatile int getLength(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.FullContentView r0;
        org.waveprotocol.wave.client.editor.content.ContentTextNode $r2;
        int $i0;
        java.lang.Object r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.client.editor.content.ContentTextNode) r1;

        $i0 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.FullContentView: int getLength(org.waveprotocol.wave.client.editor.content.ContentTextNode)>($r2);

        return $i0;
    }

    public volatile java.lang.String getData(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.FullContentView r0;
        org.waveprotocol.wave.client.editor.content.ContentTextNode $r2;
        java.lang.Object r1;
        java.lang.String $r3;

        r0 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.client.editor.content.ContentTextNode) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.FullContentView: java.lang.String getData(org.waveprotocol.wave.client.editor.content.ContentTextNode)>($r2);

        return $r3;
    }

    public volatile java.util.Map getAttributes(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.FullContentView r0;
        java.util.Map $r3;
        java.lang.Object r1;
        org.waveprotocol.wave.client.editor.content.ContentElement $r2;

        r0 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.client.editor.content.ContentElement) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.FullContentView: java.util.Map getAttributes(org.waveprotocol.wave.client.editor.content.ContentElement)>($r2);

        return $r3;
    }

    public volatile java.lang.String getAttribute(java.lang.Object, java.lang.String)
    {
        org.waveprotocol.wave.client.editor.content.FullContentView r0;
        java.lang.Object r1;
        org.waveprotocol.wave.client.editor.content.ContentElement $r3;
        java.lang.String r2, $r4;

        r0 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        $r3 = (org.waveprotocol.wave.client.editor.content.ContentElement) r1;

        $r4 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.FullContentView: java.lang.String getAttribute(org.waveprotocol.wave.client.editor.content.ContentElement,java.lang.String)>($r3, r2);

        return $r4;
    }

    public volatile java.lang.String getTagName(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.FullContentView r0;
        java.lang.Object r1;
        org.waveprotocol.wave.client.editor.content.ContentElement $r2;
        java.lang.String $r3;

        r0 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.client.editor.content.ContentElement) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.FullContentView: java.lang.String getTagName(org.waveprotocol.wave.client.editor.content.ContentElement)>($r2);

        return $r3;
    }

    public volatile boolean isSameNode(java.lang.Object, java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.FullContentView r0;
        org.waveprotocol.wave.client.editor.content.ContentNode $r3, $r4;
        java.lang.Object r1, r2;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.waveprotocol.wave.client.editor.content.ContentNode) r1;

        $r3 = (org.waveprotocol.wave.client.editor.content.ContentNode) r2;

        $z0 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.FullContentView: boolean isSameNode(org.waveprotocol.wave.client.editor.content.ContentNode,org.waveprotocol.wave.client.editor.content.ContentNode)>($r4, $r3);

        return $z0;
    }

    public volatile java.lang.Object getNextSibling(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.FullContentView r0;
        org.waveprotocol.wave.client.editor.content.ContentNode $r2, $r3;
        java.lang.Object r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.client.editor.content.ContentNode) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.FullContentView: org.waveprotocol.wave.client.editor.content.ContentNode getNextSibling(org.waveprotocol.wave.client.editor.content.ContentNode)>($r2);

        return $r3;
    }

    public volatile java.lang.Object getPreviousSibling(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.FullContentView r0;
        org.waveprotocol.wave.client.editor.content.ContentNode $r2, $r3;
        java.lang.Object r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.client.editor.content.ContentNode) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.FullContentView: org.waveprotocol.wave.client.editor.content.ContentNode getPreviousSibling(org.waveprotocol.wave.client.editor.content.ContentNode)>($r2);

        return $r3;
    }

    public volatile java.lang.Object getLastChild(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.FullContentView r0;
        org.waveprotocol.wave.client.editor.content.ContentNode $r2, $r3;
        java.lang.Object r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.client.editor.content.ContentNode) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.FullContentView: org.waveprotocol.wave.client.editor.content.ContentNode getLastChild(org.waveprotocol.wave.client.editor.content.ContentNode)>($r2);

        return $r3;
    }

    public volatile java.lang.Object getFirstChild(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.FullContentView r0;
        org.waveprotocol.wave.client.editor.content.ContentNode $r2, $r3;
        java.lang.Object r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.client.editor.content.ContentNode) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.FullContentView: org.waveprotocol.wave.client.editor.content.ContentNode getFirstChild(org.waveprotocol.wave.client.editor.content.ContentNode)>($r2);

        return $r3;
    }

    public volatile short getNodeType(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.FullContentView r0;
        org.waveprotocol.wave.client.editor.content.ContentNode $r2;
        short $s0;
        java.lang.Object r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.client.editor.content.ContentNode) r1;

        $s0 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.FullContentView: short getNodeType(org.waveprotocol.wave.client.editor.content.ContentNode)>($r2);

        return $s0;
    }

    public volatile java.lang.Object getParentElement(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.content.FullContentView r0;
        org.waveprotocol.wave.client.editor.content.ContentNode $r2;
        java.lang.Object r1;
        org.waveprotocol.wave.client.editor.content.ContentElement $r3;

        r0 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.client.editor.content.ContentNode) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.FullContentView: org.waveprotocol.wave.client.editor.content.ContentElement getParentElement(org.waveprotocol.wave.client.editor.content.ContentNode)>($r2);

        return $r3;
    }

    public volatile java.lang.Object getDocumentElement()
    {
        org.waveprotocol.wave.client.editor.content.FullContentView r0;
        org.waveprotocol.wave.client.editor.content.ContentElement $r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.FullContentView;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.FullContentView: org.waveprotocol.wave.client.editor.content.ContentElement getDocumentElement()>();

        return $r1;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.client.editor.content.FullContentView $r0;

        $r0 = new org.waveprotocol.wave.client.editor.content.FullContentView;

        specialinvoke $r0.<org.waveprotocol.wave.client.editor.content.FullContentView: void <init>()>();

        <org.waveprotocol.wave.client.editor.content.FullContentView: org.waveprotocol.wave.client.editor.content.ContentView INSTANCE> = $r0;

        return;
    }
}
