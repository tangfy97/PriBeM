public class org.mozilla.javascript.NativeJavaObject extends java.lang.Object implements org.mozilla.javascript.Scriptable, org.mozilla.javascript.Wrapper, java.io.Serializable
{
    static final long serialVersionUID;
    private static final int JSTYPE_UNDEFINED;
    private static final int JSTYPE_NULL;
    private static final int JSTYPE_BOOLEAN;
    private static final int JSTYPE_NUMBER;
    private static final int JSTYPE_STRING;
    private static final int JSTYPE_JAVA_CLASS;
    private static final int JSTYPE_JAVA_OBJECT;
    private static final int JSTYPE_JAVA_ARRAY;
    private static final int JSTYPE_OBJECT;
    static final byte CONVERSION_TRIVIAL;
    static final byte CONVERSION_NONTRIVIAL;
    static final byte CONVERSION_NONE;
    protected org.mozilla.javascript.Scriptable prototype;
    protected org.mozilla.javascript.Scriptable parent;
    protected transient java.lang.Object javaObject;
    protected transient java.lang.Class staticType;
    protected transient org.mozilla.javascript.JavaMembers members;
    private transient java.util.Hashtable fieldAndMethods;
    private static final java.lang.Object COERCED_INTERFACE_KEY;
    private static java.lang.reflect.Method adapter_writeAdapterObject;
    private static java.lang.reflect.Method adapter_readAdapterObject;

    public void <init>()
    {
        org.mozilla.javascript.NativeJavaObject r0;

        r0 := @this: org.mozilla.javascript.NativeJavaObject;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(org.mozilla.javascript.Scriptable, java.lang.Object, java.lang.Class)
    {
        org.mozilla.javascript.NativeJavaObject r0;
        org.mozilla.javascript.Scriptable r1;
        java.lang.Object r2;
        java.lang.Class r3;

        r0 := @this: org.mozilla.javascript.NativeJavaObject;

        r1 := @parameter0: org.mozilla.javascript.Scriptable;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.mozilla.javascript.NativeJavaObject: org.mozilla.javascript.Scriptable parent> = r1;

        r0.<org.mozilla.javascript.NativeJavaObject: java.lang.Object javaObject> = r2;

        r0.<org.mozilla.javascript.NativeJavaObject: java.lang.Class staticType> = r3;

        virtualinvoke r0.<org.mozilla.javascript.NativeJavaObject: void initMembers()>();

        return;
    }

    protected void initMembers()
    {
        org.mozilla.javascript.JavaMembers $r4, $r6;
        org.mozilla.javascript.NativeJavaObject r0;
        org.mozilla.javascript.Scriptable $r3;
        java.lang.Object $r1, $r5, $r8;
        java.lang.Class $r2, r9;
        java.util.Hashtable $r7;

        r0 := @this: org.mozilla.javascript.NativeJavaObject;

        $r1 = r0.<org.mozilla.javascript.NativeJavaObject: java.lang.Object javaObject>;

        if $r1 == null goto label1;

        $r8 = r0.<org.mozilla.javascript.NativeJavaObject: java.lang.Object javaObject>;

        r9 = virtualinvoke $r8.<java.lang.Object: java.lang.Class getClass()>();

        goto label2;

     label1:
        r9 = r0.<org.mozilla.javascript.NativeJavaObject: java.lang.Class staticType>;

     label2:
        $r3 = r0.<org.mozilla.javascript.NativeJavaObject: org.mozilla.javascript.Scriptable parent>;

        $r2 = r0.<org.mozilla.javascript.NativeJavaObject: java.lang.Class staticType>;

        $r4 = staticinvoke <org.mozilla.javascript.JavaMembers: org.mozilla.javascript.JavaMembers lookupClass(org.mozilla.javascript.Scriptable,java.lang.Class,java.lang.Class)>($r3, r9, $r2);

        r0.<org.mozilla.javascript.NativeJavaObject: org.mozilla.javascript.JavaMembers members> = $r4;

        $r6 = r0.<org.mozilla.javascript.NativeJavaObject: org.mozilla.javascript.JavaMembers members>;

        $r5 = r0.<org.mozilla.javascript.NativeJavaObject: java.lang.Object javaObject>;

        $r7 = virtualinvoke $r6.<org.mozilla.javascript.JavaMembers: java.util.Hashtable getFieldAndMethodsObjects(org.mozilla.javascript.Scriptable,java.lang.Object,boolean)>(r0, $r5, 0);

        r0.<org.mozilla.javascript.NativeJavaObject: java.util.Hashtable fieldAndMethods> = $r7;

        return;
    }

    public boolean has(java.lang.String, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.JavaMembers $r2;
        org.mozilla.javascript.NativeJavaObject r0;
        org.mozilla.javascript.Scriptable r3;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.NativeJavaObject;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: org.mozilla.javascript.Scriptable;

        $r2 = r0.<org.mozilla.javascript.NativeJavaObject: org.mozilla.javascript.JavaMembers members>;

        $z0 = virtualinvoke $r2.<org.mozilla.javascript.JavaMembers: boolean has(java.lang.String,boolean)>(r1, 0);

        return $z0;
    }

    public boolean has(int, org.mozilla.javascript.Scriptable)
    {
        int i0;
        org.mozilla.javascript.NativeJavaObject r0;
        org.mozilla.javascript.Scriptable r1;

        r0 := @this: org.mozilla.javascript.NativeJavaObject;

        i0 := @parameter0: int;

        r1 := @parameter1: org.mozilla.javascript.Scriptable;

        return 0;
    }

    public java.lang.Object get(java.lang.String, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.JavaMembers $r4;
        org.mozilla.javascript.NativeJavaObject r0;
        org.mozilla.javascript.Scriptable r8;
        java.lang.Object $r3, $r5, $r7;
        java.lang.String r2;
        java.util.Hashtable $r1, $r6;

        r0 := @this: org.mozilla.javascript.NativeJavaObject;

        r2 := @parameter0: java.lang.String;

        r8 := @parameter1: org.mozilla.javascript.Scriptable;

        $r1 = r0.<org.mozilla.javascript.NativeJavaObject: java.util.Hashtable fieldAndMethods>;

        if $r1 == null goto label1;

        $r6 = r0.<org.mozilla.javascript.NativeJavaObject: java.util.Hashtable fieldAndMethods>;

        $r7 = virtualinvoke $r6.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r2);

        if $r7 == null goto label1;

        return $r7;

     label1:
        $r4 = r0.<org.mozilla.javascript.NativeJavaObject: org.mozilla.javascript.JavaMembers members>;

        $r3 = r0.<org.mozilla.javascript.NativeJavaObject: java.lang.Object javaObject>;

        $r5 = virtualinvoke $r4.<org.mozilla.javascript.JavaMembers: java.lang.Object get(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object,boolean)>(r0, r2, $r3, 0);

        return $r5;
    }

    public java.lang.Object get(int, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.JavaMembers $r1;
        org.mozilla.javascript.NativeJavaObject r0;
        org.mozilla.javascript.Scriptable r4;
        int i0;
        java.lang.String $r2;
        java.lang.RuntimeException $r3;

        r0 := @this: org.mozilla.javascript.NativeJavaObject;

        i0 := @parameter0: int;

        r4 := @parameter1: org.mozilla.javascript.Scriptable;

        $r1 = r0.<org.mozilla.javascript.NativeJavaObject: org.mozilla.javascript.JavaMembers members>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r3 = virtualinvoke $r1.<org.mozilla.javascript.JavaMembers: java.lang.RuntimeException reportMemberNotFound(java.lang.String)>($r2);

        throw $r3;
    }

    public void put(java.lang.String, org.mozilla.javascript.Scriptable, java.lang.Object)
    {
        org.mozilla.javascript.JavaMembers $r5, $r6;
        org.mozilla.javascript.NativeJavaObject r0;
        org.mozilla.javascript.Scriptable $r1, $r7, $r8, r9;
        java.lang.Object r3, $r4;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.NativeJavaObject;

        r2 := @parameter0: java.lang.String;

        r9 := @parameter1: org.mozilla.javascript.Scriptable;

        r3 := @parameter2: java.lang.Object;

        $r1 = r0.<org.mozilla.javascript.NativeJavaObject: org.mozilla.javascript.Scriptable prototype>;

        if $r1 == null goto label1;

        $r6 = r0.<org.mozilla.javascript.NativeJavaObject: org.mozilla.javascript.JavaMembers members>;

        $z0 = virtualinvoke $r6.<org.mozilla.javascript.JavaMembers: boolean has(java.lang.String,boolean)>(r2, 0);

        if $z0 == 0 goto label2;

     label1:
        $r5 = r0.<org.mozilla.javascript.NativeJavaObject: org.mozilla.javascript.JavaMembers members>;

        $r4 = r0.<org.mozilla.javascript.NativeJavaObject: java.lang.Object javaObject>;

        virtualinvoke $r5.<org.mozilla.javascript.JavaMembers: void put(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object,java.lang.Object,boolean)>(r0, r2, $r4, r3, 0);

        goto label3;

     label2:
        $r8 = r0.<org.mozilla.javascript.NativeJavaObject: org.mozilla.javascript.Scriptable prototype>;

        $r7 = r0.<org.mozilla.javascript.NativeJavaObject: org.mozilla.javascript.Scriptable prototype>;

        interfaceinvoke $r8.<org.mozilla.javascript.Scriptable: void put(java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object)>(r2, $r7, r3);

     label3:
        return;
    }

    public void put(int, org.mozilla.javascript.Scriptable, java.lang.Object)
    {
        org.mozilla.javascript.JavaMembers $r1;
        org.mozilla.javascript.NativeJavaObject r0;
        org.mozilla.javascript.Scriptable r4;
        int i0;
        java.lang.Object r5;
        java.lang.String $r2;
        java.lang.RuntimeException $r3;

        r0 := @this: org.mozilla.javascript.NativeJavaObject;

        i0 := @parameter0: int;

        r4 := @parameter1: org.mozilla.javascript.Scriptable;

        r5 := @parameter2: java.lang.Object;

        $r1 = r0.<org.mozilla.javascript.NativeJavaObject: org.mozilla.javascript.JavaMembers members>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r3 = virtualinvoke $r1.<org.mozilla.javascript.JavaMembers: java.lang.RuntimeException reportMemberNotFound(java.lang.String)>($r2);

        throw $r3;
    }

    public boolean hasInstance(org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.NativeJavaObject r0;
        org.mozilla.javascript.Scriptable r1;

        r0 := @this: org.mozilla.javascript.NativeJavaObject;

        r1 := @parameter0: org.mozilla.javascript.Scriptable;

        return 0;
    }

    public void delete(java.lang.String)
    {
        org.mozilla.javascript.NativeJavaObject r0;
        java.lang.String r1;

        r0 := @this: org.mozilla.javascript.NativeJavaObject;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void delete(int)
    {
        int i0;
        org.mozilla.javascript.NativeJavaObject r0;

        r0 := @this: org.mozilla.javascript.NativeJavaObject;

        i0 := @parameter0: int;

        return;
    }

    public org.mozilla.javascript.Scriptable getPrototype()
    {
        org.mozilla.javascript.NativeJavaObject r0;
        org.mozilla.javascript.Scriptable $r1, $r2, $r4, $r5;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.NativeJavaObject;

        $r1 = r0.<org.mozilla.javascript.NativeJavaObject: org.mozilla.javascript.Scriptable prototype>;

        if $r1 != null goto label1;

        $r3 = r0.<org.mozilla.javascript.NativeJavaObject: java.lang.Object javaObject>;

        $z0 = $r3 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $r4 = r0.<org.mozilla.javascript.NativeJavaObject: org.mozilla.javascript.Scriptable parent>;

        $r5 = staticinvoke <org.mozilla.javascript.ScriptableObject: org.mozilla.javascript.Scriptable getClassPrototype(org.mozilla.javascript.Scriptable,java.lang.String)>($r4, "String");

        return $r5;

     label1:
        $r2 = r0.<org.mozilla.javascript.NativeJavaObject: org.mozilla.javascript.Scriptable prototype>;

        return $r2;
    }

    public void setPrototype(org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.NativeJavaObject r0;
        org.mozilla.javascript.Scriptable r1;

        r0 := @this: org.mozilla.javascript.NativeJavaObject;

        r1 := @parameter0: org.mozilla.javascript.Scriptable;

        r0.<org.mozilla.javascript.NativeJavaObject: org.mozilla.javascript.Scriptable prototype> = r1;

        return;
    }

    public org.mozilla.javascript.Scriptable getParentScope()
    {
        org.mozilla.javascript.NativeJavaObject r0;
        org.mozilla.javascript.Scriptable $r1;

        r0 := @this: org.mozilla.javascript.NativeJavaObject;

        $r1 = r0.<org.mozilla.javascript.NativeJavaObject: org.mozilla.javascript.Scriptable parent>;

        return $r1;
    }

    public void setParentScope(org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.NativeJavaObject r0;
        org.mozilla.javascript.Scriptable r1;

        r0 := @this: org.mozilla.javascript.NativeJavaObject;

        r1 := @parameter0: org.mozilla.javascript.Scriptable;

        r0.<org.mozilla.javascript.NativeJavaObject: org.mozilla.javascript.Scriptable parent> = r1;

        return;
    }

    public java.lang.Object[] getIds()
    {
        org.mozilla.javascript.JavaMembers $r1;
        org.mozilla.javascript.NativeJavaObject r0;
        java.lang.Object[] $r2;

        r0 := @this: org.mozilla.javascript.NativeJavaObject;

        $r1 = r0.<org.mozilla.javascript.NativeJavaObject: org.mozilla.javascript.JavaMembers members>;

        $r2 = virtualinvoke $r1.<org.mozilla.javascript.JavaMembers: java.lang.Object[] getIds(boolean)>(0);

        return $r2;
    }

    public static java.lang.Object wrap(org.mozilla.javascript.Scriptable, java.lang.Object, java.lang.Class)
    {
        org.mozilla.javascript.Scriptable r2;
        org.mozilla.javascript.Context $r0;
        java.lang.Object r3, $r5;
        java.lang.Class r4;
        org.mozilla.javascript.WrapFactory $r1;

        r2 := @parameter0: org.mozilla.javascript.Scriptable;

        r3 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.lang.Class;

        $r0 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.Context getContext()>();

        $r1 = virtualinvoke $r0.<org.mozilla.javascript.Context: org.mozilla.javascript.WrapFactory getWrapFactory()>();

        $r5 = virtualinvoke $r1.<org.mozilla.javascript.WrapFactory: java.lang.Object wrap(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Class)>($r0, r2, r3, r4);

        return $r5;
    }

    public java.lang.Object unwrap()
    {
        java.lang.Object $r1;
        org.mozilla.javascript.NativeJavaObject r0;

        r0 := @this: org.mozilla.javascript.NativeJavaObject;

        $r1 = r0.<org.mozilla.javascript.NativeJavaObject: java.lang.Object javaObject>;

        return $r1;
    }

    public java.lang.String getClassName()
    {
        org.mozilla.javascript.NativeJavaObject r0;

        r0 := @this: org.mozilla.javascript.NativeJavaObject;

        return "JavaObject";
    }

    public java.lang.Object getDefaultValue(java.lang.Class)
    {
        java.lang.Object[] $r14;
        java.lang.Boolean $r11;
        org.mozilla.javascript.Function r19;
        java.lang.String r18;
        boolean $z0, $z1, $z2, $z3;
        double $d0;
        org.mozilla.javascript.NativeJavaObject r0;
        org.mozilla.javascript.Context $r12;
        org.mozilla.javascript.EvaluatorException $r5;
        org.mozilla.javascript.Scriptable $r13;
        java.lang.Object $r1, $r6, $r8, $r9, $r10, $r15, r17;
        java.lang.Class $r2, $r3, $r4, $r7, r16;

        r0 := @this: org.mozilla.javascript.NativeJavaObject;

        r16 := @parameter0: java.lang.Class;

        if r16 != null goto label01;

        $r15 = r0.<org.mozilla.javascript.NativeJavaObject: java.lang.Object javaObject>;

        $z3 = $r15 instanceof java.lang.Boolean;

        if $z3 == 0 goto label01;

        r16 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class BooleanClass>;

     label01:
        if r16 == null goto label02;

        $r2 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class StringClass>;

        if r16 != $r2 goto label03;

     label02:
        $r1 = r0.<org.mozilla.javascript.NativeJavaObject: java.lang.Object javaObject>;

        r17 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        goto label11;

     label03:
        $r3 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class BooleanClass>;

        if r16 != $r3 goto label04;

        r18 = "booleanValue";

        goto label06;

     label04:
        $r4 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class NumberClass>;

        if r16 != $r4 goto label05;

        r18 = "doubleValue";

        goto label06;

     label05:
        $r5 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError0(java.lang.String)>("msg.default.value");

        throw $r5;

     label06:
        $r6 = virtualinvoke r0.<org.mozilla.javascript.NativeJavaObject: java.lang.Object get(java.lang.String,org.mozilla.javascript.Scriptable)>(r18, r0);

        $z0 = $r6 instanceof org.mozilla.javascript.Function;

        if $z0 == 0 goto label07;

        r19 = (org.mozilla.javascript.Function) $r6;

        $r12 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.Context getContext()>();

        $r13 = interfaceinvoke r19.<org.mozilla.javascript.Function: org.mozilla.javascript.Scriptable getParentScope()>();

        $r14 = <org.mozilla.javascript.ScriptRuntime: java.lang.Object[] emptyArgs>;

        r17 = interfaceinvoke r19.<org.mozilla.javascript.Function: java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>($r12, $r13, r0, $r14);

        goto label11;

     label07:
        $r7 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class NumberClass>;

        if r16 != $r7 goto label10;

        $r9 = r0.<org.mozilla.javascript.NativeJavaObject: java.lang.Object javaObject>;

        $z1 = $r9 instanceof java.lang.Boolean;

        if $z1 == 0 goto label10;

        $r10 = r0.<org.mozilla.javascript.NativeJavaObject: java.lang.Object javaObject>;

        $r11 = (java.lang.Boolean) $r10;

        $z2 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 == 0 goto label08;

        $d0 = 1.0;

        goto label09;

     label08:
        $d0 = 0.0;

     label09:
        r17 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d0);

        goto label11;

     label10:
        $r8 = r0.<org.mozilla.javascript.NativeJavaObject: java.lang.Object javaObject>;

        r17 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

     label11:
        return r17;
    }

    public static boolean canConvert(java.lang.Object, java.lang.Class)
    {
        int $i0;
        java.lang.Object r0;
        java.lang.Class r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Class;

        $i0 = staticinvoke <org.mozilla.javascript.NativeJavaObject: int getConversionWeight(java.lang.Object,java.lang.Class)>(r0, r1);

        if $i0 >= 99 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static int getConversionWeight(java.lang.Object, java.lang.Class)
    {
        java.lang.reflect.Method[] $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        org.mozilla.javascript.Wrapper $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.Object r0, r28;
        java.lang.Class r1, $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Class;

        $i0 = staticinvoke <org.mozilla.javascript.NativeJavaObject: int getJSTypeCode(java.lang.Object)>(r0);

        tableswitch($i0)
        {
            case 0: goto label01;
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label08;
            case 4: goto label13;
            case 5: goto label17;
            case 6: goto label20;
            case 7: goto label20;
            case 8: goto label26;
            default: goto label34;
        };

     label01:
        $r26 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class StringClass>;

        if r1 == $r26 goto label02;

        $r27 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ObjectClass>;

        if r1 != $r27 goto label34;

     label02:
        return 1;

     label03:
        $z13 = virtualinvoke r1.<java.lang.Class: boolean isPrimitive()>();

        if $z13 != 0 goto label34;

        return 1;

     label04:
        $r22 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r1 != $r22 goto label05;

        return 1;

     label05:
        $r23 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class BooleanClass>;

        if r1 != $r23 goto label06;

        return 2;

     label06:
        $r24 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ObjectClass>;

        if r1 != $r24 goto label07;

        return 3;

     label07:
        $r25 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class StringClass>;

        if r1 != $r25 goto label34;

        return 4;

     label08:
        $z11 = virtualinvoke r1.<java.lang.Class: boolean isPrimitive()>();

        if $z11 == 0 goto label10;

        $r20 = <java.lang.Double: java.lang.Class TYPE>;

        if r1 != $r20 goto label09;

        return 1;

     label09:
        $r21 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r1 == $r21 goto label34;

        $i5 = staticinvoke <org.mozilla.javascript.NativeJavaObject: int getSizeRank(java.lang.Class)>(r1);

        $i6 = 1 + $i5;

        return $i6;

     label10:
        $r17 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class StringClass>;

        if r1 != $r17 goto label11;

        return 9;

     label11:
        $r18 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ObjectClass>;

        if r1 != $r18 goto label12;

        return 10;

     label12:
        $r19 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class NumberClass>;

        $z12 = virtualinvoke $r19.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1);

        if $z12 == 0 goto label34;

        return 2;

     label13:
        $r14 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class StringClass>;

        if r1 != $r14 goto label14;

        return 1;

     label14:
        $z9 = virtualinvoke r1.<java.lang.Class: boolean isInstance(java.lang.Object)>(r0);

        if $z9 == 0 goto label15;

        return 2;

     label15:
        $z10 = virtualinvoke r1.<java.lang.Class: boolean isPrimitive()>();

        if $z10 == 0 goto label34;

        $r15 = <java.lang.Character: java.lang.Class TYPE>;

        if r1 != $r15 goto label16;

        return 3;

     label16:
        $r16 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r1 == $r16 goto label34;

        return 4;

     label17:
        $r11 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ClassClass>;

        if r1 != $r11 goto label18;

        return 1;

     label18:
        $r12 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ObjectClass>;

        if r1 != $r12 goto label19;

        return 3;

     label19:
        $r13 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class StringClass>;

        if r1 != $r13 goto label34;

        return 4;

     label20:
        r28 = r0;

        $z6 = r0 instanceof org.mozilla.javascript.Wrapper;

        if $z6 == 0 goto label21;

        $r10 = (org.mozilla.javascript.Wrapper) r0;

        r28 = interfaceinvoke $r10.<org.mozilla.javascript.Wrapper: java.lang.Object unwrap()>();

     label21:
        $z7 = virtualinvoke r1.<java.lang.Class: boolean isInstance(java.lang.Object)>(r28);

        if $z7 == 0 goto label22;

        return 0;

     label22:
        $r8 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class StringClass>;

        if r1 != $r8 goto label23;

        return 2;

     label23:
        $z8 = virtualinvoke r1.<java.lang.Class: boolean isPrimitive()>();

        if $z8 == 0 goto label34;

        $r9 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r1 == $r9 goto label34;

        if $i0 != 7 goto label24;

        $i7 = 0;

        goto label25;

     label24:
        $i4 = staticinvoke <org.mozilla.javascript.NativeJavaObject: int getSizeRank(java.lang.Class)>(r1);

        $i7 = 2 + $i4;

     label25:
        return $i7;

     label26:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if r1 != $r2 goto label27;

        return 1;

     label27:
        $z0 = virtualinvoke r1.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label28;

        $z5 = r0 instanceof org.mozilla.javascript.NativeArray;

        if $z5 == 0 goto label34;

        return 1;

     label28:
        $r3 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ObjectClass>;

        if r1 != $r3 goto label29;

        return 2;

     label29:
        $r4 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class StringClass>;

        if r1 != $r4 goto label30;

        return 3;

     label30:
        $r5 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class DateClass>;

        if r1 != $r5 goto label31;

        $z4 = r0 instanceof org.mozilla.javascript.NativeDate;

        if $z4 == 0 goto label34;

        return 1;

     label31:
        $z1 = virtualinvoke r1.<java.lang.Class: boolean isInterface()>();

        if $z1 == 0 goto label33;

        $z3 = r0 instanceof org.mozilla.javascript.Function;

        if $z3 == 0 goto label32;

        $r7 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        $i3 = lengthof $r7;

        if $i3 != 1 goto label32;

        return 1;

     label32:
        return 11;

     label33:
        $z2 = virtualinvoke r1.<java.lang.Class: boolean isPrimitive()>();

        if $z2 == 0 goto label34;

        $r6 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r1 == $r6 goto label34;

        $i1 = staticinvoke <org.mozilla.javascript.NativeJavaObject: int getSizeRank(java.lang.Class)>(r1);

        $i2 = 3 + $i1;

        return $i2;

     label34:
        return 99;
    }

    static int getSizeRank(java.lang.Class)
    {
        java.lang.Class r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @parameter0: java.lang.Class;

        $r1 = <java.lang.Double: java.lang.Class TYPE>;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        $r2 = <java.lang.Float: java.lang.Class TYPE>;

        if r0 != $r2 goto label2;

        return 2;

     label2:
        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        if r0 != $r3 goto label3;

        return 3;

     label3:
        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        if r0 != $r4 goto label4;

        return 4;

     label4:
        $r5 = <java.lang.Short: java.lang.Class TYPE>;

        if r0 != $r5 goto label5;

        return 5;

     label5:
        $r6 = <java.lang.Character: java.lang.Class TYPE>;

        if r0 != $r6 goto label6;

        return 6;

     label6:
        $r7 = <java.lang.Byte: java.lang.Class TYPE>;

        if r0 != $r7 goto label7;

        return 7;

     label7:
        $r8 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r0 != $r8 goto label8;

        return 99;

     label8:
        return 8;
    }

    private static int getJSTypeCode(java.lang.Object)
    {
        java.lang.Object r0, $r1;
        java.lang.Class $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label01;

        return 1;

     label01:
        $r1 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        if r0 != $r1 goto label02;

        return 0;

     label02:
        $z0 = r0 instanceof java.lang.String;

        if $z0 == 0 goto label03;

        return 4;

     label03:
        $z1 = r0 instanceof java.lang.Number;

        if $z1 == 0 goto label04;

        return 3;

     label04:
        $z2 = r0 instanceof java.lang.Boolean;

        if $z2 == 0 goto label05;

        return 2;

     label05:
        $z3 = r0 instanceof org.mozilla.javascript.Scriptable;

        if $z3 == 0 goto label09;

        $z6 = r0 instanceof org.mozilla.javascript.NativeJavaClass;

        if $z6 == 0 goto label06;

        return 5;

     label06:
        $z7 = r0 instanceof org.mozilla.javascript.NativeJavaArray;

        if $z7 == 0 goto label07;

        return 7;

     label07:
        $z8 = r0 instanceof org.mozilla.javascript.Wrapper;

        if $z8 == 0 goto label08;

        return 6;

     label08:
        return 8;

     label09:
        $z4 = r0 instanceof java.lang.Class;

        if $z4 == 0 goto label10;

        return 5;

     label10:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z5 = virtualinvoke $r2.<java.lang.Class: boolean isArray()>();

        if $z5 == 0 goto label11;

        return 7;

     label11:
        return 6;
    }

    public static java.lang.Object coerceType(java.lang.Class, java.lang.Object)
    {
        java.lang.Class r0;
        java.lang.Object r1, $r2;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Object;

        $r2 = staticinvoke <org.mozilla.javascript.NativeJavaObject: java.lang.Object coerceTypeImpl(java.lang.Class,java.lang.Object)>(r0, r1);

        return $r2;
    }

    static java.lang.Object coerceTypeImpl(java.lang.Class, java.lang.Object)
    {
        org.mozilla.javascript.NativeDate $r16;
        byte $b4;
        java.lang.Character $r61;
        org.mozilla.javascript.Wrapper $r10, $r23, $r30;
        org.mozilla.javascript.Callable $r7;
        long $l1, $l3, $l5;
        java.lang.String $r20, $r22, $r29, $r33, $r36, $r48, $r53;
        org.mozilla.javascript.Context $r6;
        org.mozilla.javascript.EvaluatorException $r57;
        java.util.Date $r62;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19;
        org.mozilla.javascript.NativeArray r59;
        int $i0, $i2, $i6, i8, $i9;
        double $d0;
        char $c7;
        org.mozilla.javascript.ScriptableObject r60;
        java.lang.Class r0, $r1, $r2, $r12, $r18, $r21, $r24, $r26, $r27, $r28, $r31, $r32, $r37, $r38, $r40, $r41, $r42, $r43, $r45, $r46, $r49, $r50, $r51, $r52, $r54, $r55, $r56;
        java.lang.Object $r3, $r4, $r5, $r8, $r9, $r11, $r13, $r14, $r15, $r19, $r25, $r34, $r39, $r44, $r47, r58;

        r0 := @parameter0: java.lang.Class;

        r58 := @parameter1: java.lang.Object;

        if r58 == null goto label01;

        $r56 = virtualinvoke r58.<java.lang.Object: java.lang.Class getClass()>();

        if $r56 != r0 goto label01;

        return r58;

     label01:
        $i0 = staticinvoke <org.mozilla.javascript.NativeJavaObject: int getJSTypeCode(java.lang.Object)>(r58);

        tableswitch($i0)
        {
            case 0: goto label04;
            case 1: goto label02;
            case 2: goto label07;
            case 3: goto label11;
            case 4: goto label17;
            case 5: goto label26;
            case 6: goto label31;
            case 7: goto label31;
            case 8: goto label37;
            default: goto label55;
        };

     label02:
        $z19 = virtualinvoke r0.<java.lang.Class: boolean isPrimitive()>();

        if $z19 == 0 goto label03;

        staticinvoke <org.mozilla.javascript.NativeJavaObject: void reportConversionError(java.lang.Object,java.lang.Class)>(r58, r0);

     label03:
        return null;

     label04:
        $r54 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class StringClass>;

        if r0 == $r54 goto label05;

        $r55 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ObjectClass>;

        if r0 != $r55 goto label06;

     label05:
        return "undefined";

     label06:
        staticinvoke <org.mozilla.javascript.NativeJavaObject: void reportConversionError(java.lang.Object,java.lang.Class)>("undefined", r0);

        goto label55;

     label07:
        $r49 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r0 == $r49 goto label08;

        $r50 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class BooleanClass>;

        if r0 == $r50 goto label08;

        $r51 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ObjectClass>;

        if r0 != $r51 goto label09;

     label08:
        return r58;

     label09:
        $r52 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class StringClass>;

        if r0 != $r52 goto label10;

        $r53 = virtualinvoke r58.<java.lang.Object: java.lang.String toString()>();

        return $r53;

     label10:
        staticinvoke <org.mozilla.javascript.NativeJavaObject: void reportConversionError(java.lang.Object,java.lang.Class)>(r58, r0);

        goto label55;

     label11:
        $r41 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class StringClass>;

        if r0 != $r41 goto label12;

        $r48 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r58);

        return $r48;

     label12:
        $r42 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ObjectClass>;

        if r0 != $r42 goto label13;

        $r46 = <java.lang.Double: java.lang.Class TYPE>;

        $r47 = staticinvoke <org.mozilla.javascript.NativeJavaObject: java.lang.Object coerceToNumber(java.lang.Class,java.lang.Object)>($r46, r58);

        return $r47;

     label13:
        $z17 = virtualinvoke r0.<java.lang.Class: boolean isPrimitive()>();

        if $z17 == 0 goto label14;

        $r45 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r0 != $r45 goto label15;

     label14:
        $r43 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class NumberClass>;

        $z18 = virtualinvoke $r43.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z18 == 0 goto label16;

     label15:
        $r44 = staticinvoke <org.mozilla.javascript.NativeJavaObject: java.lang.Object coerceToNumber(java.lang.Class,java.lang.Object)>(r0, r58);

        return $r44;

     label16:
        staticinvoke <org.mozilla.javascript.NativeJavaObject: void reportConversionError(java.lang.Object,java.lang.Class)>(r58, r0);

        goto label55;

     label17:
        $r31 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class StringClass>;

        if r0 == $r31 goto label18;

        $z14 = virtualinvoke r0.<java.lang.Class: boolean isInstance(java.lang.Object)>(r58);

        if $z14 == 0 goto label19;

     label18:
        return r58;

     label19:
        $r32 = <java.lang.Character: java.lang.Class TYPE>;

        if r0 == $r32 goto label20;

        $r37 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class CharacterClass>;

        if r0 != $r37 goto label22;

     label20:
        $r33 = (java.lang.String) r58;

        $i6 = virtualinvoke $r33.<java.lang.String: int length()>();

        if $i6 != 1 goto label21;

        $r61 = new java.lang.Character;

        $r36 = (java.lang.String) r58;

        $c7 = virtualinvoke $r36.<java.lang.String: char charAt(int)>(0);

        specialinvoke $r61.<java.lang.Character: void <init>(char)>($c7);

        return $r61;

     label21:
        $r34 = staticinvoke <org.mozilla.javascript.NativeJavaObject: java.lang.Object coerceToNumber(java.lang.Class,java.lang.Object)>(r0, r58);

        return $r34;

     label22:
        $z15 = virtualinvoke r0.<java.lang.Class: boolean isPrimitive()>();

        if $z15 == 0 goto label23;

        $r40 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r0 != $r40 goto label24;

     label23:
        $r38 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class NumberClass>;

        $z16 = virtualinvoke $r38.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z16 == 0 goto label25;

     label24:
        $r39 = staticinvoke <org.mozilla.javascript.NativeJavaObject: java.lang.Object coerceToNumber(java.lang.Class,java.lang.Object)>(r0, r58);

        return $r39;

     label25:
        staticinvoke <org.mozilla.javascript.NativeJavaObject: void reportConversionError(java.lang.Object,java.lang.Class)>(r58, r0);

        goto label55;

     label26:
        $z13 = r58 instanceof org.mozilla.javascript.Wrapper;

        if $z13 == 0 goto label27;

        $r30 = (org.mozilla.javascript.Wrapper) r58;

        r58 = interfaceinvoke $r30.<org.mozilla.javascript.Wrapper: java.lang.Object unwrap()>();

     label27:
        $r26 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ClassClass>;

        if r0 == $r26 goto label28;

        $r27 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ObjectClass>;

        if r0 != $r27 goto label29;

     label28:
        return r58;

     label29:
        $r28 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class StringClass>;

        if r0 != $r28 goto label30;

        $r29 = virtualinvoke r58.<java.lang.Object: java.lang.String toString()>();

        return $r29;

     label30:
        staticinvoke <org.mozilla.javascript.NativeJavaObject: void reportConversionError(java.lang.Object,java.lang.Class)>(r58, r0);

        goto label55;

     label31:
        $z10 = virtualinvoke r0.<java.lang.Class: boolean isPrimitive()>();

        if $z10 == 0 goto label33;

        $r24 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r0 != $r24 goto label32;

        staticinvoke <org.mozilla.javascript.NativeJavaObject: void reportConversionError(java.lang.Object,java.lang.Class)>(r58, r0);

     label32:
        $r25 = staticinvoke <org.mozilla.javascript.NativeJavaObject: java.lang.Object coerceToNumber(java.lang.Class,java.lang.Object)>(r0, r58);

        return $r25;

     label33:
        $z11 = r58 instanceof org.mozilla.javascript.Wrapper;

        if $z11 == 0 goto label34;

        $r23 = (org.mozilla.javascript.Wrapper) r58;

        r58 = interfaceinvoke $r23.<org.mozilla.javascript.Wrapper: java.lang.Object unwrap()>();

     label34:
        $r21 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class StringClass>;

        if r0 != $r21 goto label35;

        $r22 = virtualinvoke r58.<java.lang.Object: java.lang.String toString()>();

        return $r22;

     label35:
        $z12 = virtualinvoke r0.<java.lang.Class: boolean isInstance(java.lang.Object)>(r58);

        if $z12 == 0 goto label36;

        return r58;

     label36:
        staticinvoke <org.mozilla.javascript.NativeJavaObject: void reportConversionError(java.lang.Object,java.lang.Class)>(r58, r0);

        goto label55;

     label37:
        $r1 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class StringClass>;

        if r0 != $r1 goto label38;

        $r20 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r58);

        return $r20;

     label38:
        $z0 = virtualinvoke r0.<java.lang.Class: boolean isPrimitive()>();

        if $z0 == 0 goto label40;

        $r18 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r0 != $r18 goto label39;

        staticinvoke <org.mozilla.javascript.NativeJavaObject: void reportConversionError(java.lang.Object,java.lang.Class)>(r58, r0);

     label39:
        $r19 = staticinvoke <org.mozilla.javascript.NativeJavaObject: java.lang.Object coerceToNumber(java.lang.Class,java.lang.Object)>(r0, r58);

        return $r19;

     label40:
        $z1 = virtualinvoke r0.<java.lang.Class: boolean isInstance(java.lang.Object)>(r58);

        if $z1 == 0 goto label41;

        return r58;

     label41:
        $r2 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class DateClass>;

        if r0 != $r2 goto label42;

        $z9 = r58 instanceof org.mozilla.javascript.NativeDate;

        if $z9 == 0 goto label42;

        $r16 = (org.mozilla.javascript.NativeDate) r58;

        $d0 = virtualinvoke $r16.<org.mozilla.javascript.NativeDate: double getJSTimeValue()>();

        $r62 = new java.util.Date;

        $l5 = (long) $d0;

        specialinvoke $r62.<java.util.Date: void <init>(long)>($l5);

        return $r62;

     label42:
        $z2 = virtualinvoke r0.<java.lang.Class: boolean isArray()>();

        if $z2 == 0 goto label49;

        $z8 = r58 instanceof org.mozilla.javascript.NativeArray;

        if $z8 == 0 goto label49;

        r59 = (org.mozilla.javascript.NativeArray) r58;

        $l1 = virtualinvoke r59.<org.mozilla.javascript.NativeArray: long getLength()>();

        $r12 = virtualinvoke r0.<java.lang.Class: java.lang.Class getComponentType()>();

        $i2 = (int) $l1;

        $r13 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r12, $i2);

        i8 = 0;

     label43:
        $l3 = (long) i8;

        $b4 = $l3 cmp $l1;

        $i9 = (int) $b4;

        if $i9 >= 0 goto label48;

     label44:
        $r14 = virtualinvoke r59.<org.mozilla.javascript.NativeArray: java.lang.Object get(int,org.mozilla.javascript.Scriptable)>(i8, r59);

        $r15 = staticinvoke <org.mozilla.javascript.NativeJavaObject: java.lang.Object coerceType(java.lang.Class,java.lang.Object)>($r12, $r14);

        staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>($r13, i8, $r15);

     label45:
        goto label47;

     label46:
        $r57 := @caughtexception;

        staticinvoke <org.mozilla.javascript.NativeJavaObject: void reportConversionError(java.lang.Object,java.lang.Class)>(r58, r0);

     label47:
        i8 = i8 + 1;

        goto label43;

     label48:
        return $r13;

     label49:
        $z3 = r58 instanceof org.mozilla.javascript.Wrapper;

        if $z3 == 0 goto label51;

        $r10 = (org.mozilla.javascript.Wrapper) r58;

        $r11 = interfaceinvoke $r10.<org.mozilla.javascript.Wrapper: java.lang.Object unwrap()>();

        r58 = $r11;

        $z7 = virtualinvoke r0.<java.lang.Class: boolean isInstance(java.lang.Object)>($r11);

        if $z7 == 0 goto label50;

        return $r11;

     label50:
        staticinvoke <org.mozilla.javascript.NativeJavaObject: void reportConversionError(java.lang.Object,java.lang.Class)>($r11, r0);

        goto label55;

     label51:
        $z4 = virtualinvoke r0.<java.lang.Class: boolean isInterface()>();

        if $z4 == 0 goto label54;

        $z5 = r58 instanceof org.mozilla.javascript.Callable;

        if $z5 == 0 goto label54;

        $z6 = r58 instanceof org.mozilla.javascript.ScriptableObject;

        if $z6 == 0 goto label53;

        r60 = (org.mozilla.javascript.ScriptableObject) r58;

        $r3 = <org.mozilla.javascript.NativeJavaObject: java.lang.Object COERCED_INTERFACE_KEY>;

        $r4 = staticinvoke <org.mozilla.javascript.Kit: java.lang.Object makeHashKeyFromPair(java.lang.Object,java.lang.Object)>($r3, r0);

        $r5 = virtualinvoke r60.<org.mozilla.javascript.ScriptableObject: java.lang.Object getAssociatedValue(java.lang.Object)>($r4);

        if $r5 == null goto label52;

        return $r5;

     label52:
        $r6 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.Context getContext()>();

        $r7 = (org.mozilla.javascript.Callable) r58;

        $r8 = staticinvoke <org.mozilla.javascript.InterfaceAdapter: java.lang.Object create(org.mozilla.javascript.Context,java.lang.Class,org.mozilla.javascript.Callable)>($r6, r0, $r7);

        $r9 = virtualinvoke r60.<org.mozilla.javascript.ScriptableObject: java.lang.Object associateValue(java.lang.Object,java.lang.Object)>($r4, $r8);

        return $r9;

     label53:
        staticinvoke <org.mozilla.javascript.NativeJavaObject: void reportConversionError(java.lang.Object,java.lang.Class)>(r58, r0);

        goto label55;

     label54:
        staticinvoke <org.mozilla.javascript.NativeJavaObject: void reportConversionError(java.lang.Object,java.lang.Class)>(r58, r0);

     label55:
        return r58;

        catch org.mozilla.javascript.EvaluatorException from label44 to label45 with label46;
    }

    private static java.lang.Object coerceToNumber(java.lang.Class, java.lang.Object)
    {
        java.lang.Float $r43, $r44, $r45, $r46;
        java.lang.Integer $r47;
        byte $b3, $b4, $b5, $b6, $b7, $b16;
        java.lang.Character $r41;
        java.lang.Long $r48;
        java.lang.Double $r42, $r51;
        long $l0, $l8, $l10, $l11, $l14;
        short $s13;
        java.lang.Short $r49;
        java.lang.Byte $r50;
        boolean $z0, $z1;
        float $f0, $f1, $f2;
        int $i1, $i9, $i12, $i15, $i17, $i18, $i19, $i20;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;
        char $c2;
        java.lang.Object r0, $r39;
        java.lang.Class $r1, r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r16, $r17, $r18, $r20, $r21, $r22, $r23, $r25, $r26, $r27, $r28, $r30, $r31, $r32, $r33, $r35, $r36, $r38;

        r2 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.Object;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = <java.lang.Character: java.lang.Class TYPE>;

        if r2 == $r3 goto label01;

        $r7 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class CharacterClass>;

        if r2 != $r7 goto label03;

     label01:
        $r4 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class CharacterClass>;

        if $r1 != $r4 goto label02;

        return r0;

     label02:
        $r41 = new java.lang.Character;

        $r6 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class CharacterClass>;

        $l0 = staticinvoke <org.mozilla.javascript.NativeJavaObject: long toInteger(java.lang.Object,java.lang.Class,double,double)>(r0, $r6, 0.0, 65535.0);

        $i1 = (int) $l0;

        $c2 = (char) $i1;

        specialinvoke $r41.<java.lang.Character: void <init>(char)>($c2);

        return $r41;

     label03:
        $r8 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ObjectClass>;

        if r2 == $r8 goto label04;

        $r9 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class DoubleClass>;

        if r2 == $r9 goto label04;

        $r10 = <java.lang.Double: java.lang.Class TYPE>;

        if r2 != $r10 goto label07;

     label04:
        $r38 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class DoubleClass>;

        if $r1 != $r38 goto label05;

        $r39 = r0;

        goto label06;

     label05:
        $r42 = new java.lang.Double;

        $r39 = $r42;

        $d0 = staticinvoke <org.mozilla.javascript.NativeJavaObject: double toDouble(java.lang.Object)>(r0);

        specialinvoke $r42.<java.lang.Double: void <init>(double)>($d0);

     label06:
        return $r39;

     label07:
        $r11 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class FloatClass>;

        if r2 == $r11 goto label08;

        $r16 = <java.lang.Float: java.lang.Class TYPE>;

        if r2 != $r16 goto label18;

     label08:
        $r12 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class FloatClass>;

        if $r1 != $r12 goto label09;

        return r0;

     label09:
        $d1 = staticinvoke <org.mozilla.javascript.NativeJavaObject: double toDouble(java.lang.Object)>(r0);

        $z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d1);

        if $z0 != 0 goto label10;

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        if $z1 != 0 goto label10;

        $b3 = $d1 cmpl 0.0;

        if $b3 != 0 goto label11;

     label10:
        $r43 = new java.lang.Float;

        $f1 = (float) $d1;

        specialinvoke $r43.<java.lang.Float: void <init>(float)>($f1);

        return $r43;

     label11:
        $d2 = staticinvoke <java.lang.Math: double abs(double)>($d1);

        $b4 = $d2 cmpg 1.401298464324817E-45;

        $i17 = (int) $b4;

        if $i17 >= 0 goto label14;

        $r44 = new java.lang.Float;

        $b7 = $d1 cmpl 0.0;

        $i18 = (int) $b7;

        if $i18 <= 0 goto label12;

        $d6 = 0.0;

        goto label13;

     label12:
        $d6 = -0.0;

     label13:
        specialinvoke $r44.<java.lang.Float: void <init>(double)>($d6);

        return $r44;

     label14:
        $b5 = $d2 cmpl 3.4028234663852886E38;

        $i19 = (int) $b5;

        if $i19 <= 0 goto label17;

        $r45 = new java.lang.Float;

        $b6 = $d1 cmpl 0.0;

        $i20 = (int) $b6;

        if $i20 <= 0 goto label15;

        $f2 = #InfinityF;

        goto label16;

     label15:
        $f2 = #-InfinityF;

     label16:
        specialinvoke $r45.<java.lang.Float: void <init>(float)>($f2);

        return $r45;

     label17:
        $r46 = new java.lang.Float;

        $f0 = (float) $d1;

        specialinvoke $r46.<java.lang.Float: void <init>(float)>($f0);

        return $r46;

     label18:
        $r17 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class IntegerClass>;

        if r2 == $r17 goto label19;

        $r21 = <java.lang.Integer: java.lang.Class TYPE>;

        if r2 != $r21 goto label21;

     label19:
        $r18 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class IntegerClass>;

        if $r1 != $r18 goto label20;

        return r0;

     label20:
        $r47 = new java.lang.Integer;

        $r20 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class IntegerClass>;

        $l8 = staticinvoke <org.mozilla.javascript.NativeJavaObject: long toInteger(java.lang.Object,java.lang.Class,double,double)>(r0, $r20, -2.147483648E9, 2.147483647E9);

        $i9 = (int) $l8;

        specialinvoke $r47.<java.lang.Integer: void <init>(int)>($i9);

        return $r47;

     label21:
        $r22 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class LongClass>;

        if r2 == $r22 goto label22;

        $r26 = <java.lang.Long: java.lang.Class TYPE>;

        if r2 != $r26 goto label24;

     label22:
        $r23 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class LongClass>;

        if $r1 != $r23 goto label23;

        return r0;

     label23:
        $d3 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>(4890909195324358655L);

        $d4 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>(-4332462841530417152L);

        $r48 = new java.lang.Long;

        $r25 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class LongClass>;

        $l10 = staticinvoke <org.mozilla.javascript.NativeJavaObject: long toInteger(java.lang.Object,java.lang.Class,double,double)>(r0, $r25, $d4, $d3);

        specialinvoke $r48.<java.lang.Long: void <init>(long)>($l10);

        return $r48;

     label24:
        $r27 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ShortClass>;

        if r2 == $r27 goto label25;

        $r31 = <java.lang.Short: java.lang.Class TYPE>;

        if r2 != $r31 goto label27;

     label25:
        $r28 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ShortClass>;

        if $r1 != $r28 goto label26;

        return r0;

     label26:
        $r49 = new java.lang.Short;

        $r30 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ShortClass>;

        $l11 = staticinvoke <org.mozilla.javascript.NativeJavaObject: long toInteger(java.lang.Object,java.lang.Class,double,double)>(r0, $r30, -32768.0, 32767.0);

        $i12 = (int) $l11;

        $s13 = (short) $i12;

        specialinvoke $r49.<java.lang.Short: void <init>(short)>($s13);

        return $r49;

     label27:
        $r32 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ByteClass>;

        if r2 == $r32 goto label28;

        $r36 = <java.lang.Byte: java.lang.Class TYPE>;

        if r2 != $r36 goto label30;

     label28:
        $r33 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ByteClass>;

        if $r1 != $r33 goto label29;

        return r0;

     label29:
        $r50 = new java.lang.Byte;

        $r35 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ByteClass>;

        $l14 = staticinvoke <org.mozilla.javascript.NativeJavaObject: long toInteger(java.lang.Object,java.lang.Class,double,double)>(r0, $r35, -128.0, 127.0);

        $i15 = (int) $l14;

        $b16 = (byte) $i15;

        specialinvoke $r50.<java.lang.Byte: void <init>(byte)>($b16);

        return $r50;

     label30:
        $r51 = new java.lang.Double;

        $d5 = staticinvoke <org.mozilla.javascript.NativeJavaObject: double toDouble(java.lang.Object)>(r0);

        specialinvoke $r51.<java.lang.Double: void <init>(double)>($d5);

        return $r51;
    }

    private static double toDouble(java.lang.Object)
    {
        java.lang.NoSuchMethodException $r13;
        java.lang.SecurityException $r12;
        java.lang.String $r6, $r15;
        java.lang.Number $r3, $r7;
        java.lang.reflect.Method r14;
        boolean $z0, $z1, $z2, $z3;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        java.lang.IllegalAccessException $r10;
        org.mozilla.javascript.Wrapper $r4;
        java.lang.reflect.InvocationTargetException $r8;
        java.lang.Object r0, $r2, $r5;
        java.lang.Class $r1, $r9, $r11;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.Number;

        if $z0 == 0 goto label01;

        $r7 = (java.lang.Number) r0;

        $d4 = virtualinvoke $r7.<java.lang.Number: double doubleValue()>();

        return $d4;

     label01:
        $z1 = r0 instanceof java.lang.String;

        if $z1 == 0 goto label02;

        $r6 = (java.lang.String) r0;

        $d3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.String)>($r6);

        return $d3;

     label02:
        $z2 = r0 instanceof org.mozilla.javascript.Scriptable;

        if $z2 == 0 goto label04;

        $z3 = r0 instanceof org.mozilla.javascript.Wrapper;

        if $z3 == 0 goto label03;

        $r4 = (org.mozilla.javascript.Wrapper) r0;

        $r5 = interfaceinvoke $r4.<org.mozilla.javascript.Wrapper: java.lang.Object unwrap()>();

        $d2 = staticinvoke <org.mozilla.javascript.NativeJavaObject: double toDouble(java.lang.Object)>($r5);

        return $d2;

     label03:
        $d1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>(r0);

        return $d1;

     label04:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r14 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("doubleValue", null);

     label05:
        goto label08;

     label06:
        $r13 := @caughtexception;

        r14 = null;

        goto label08;

     label07:
        $r12 := @caughtexception;

        r14 = null;

     label08:
        if r14 == null goto label13;

     label09:
        $r2 = virtualinvoke r14.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, null);

        $r3 = (java.lang.Number) $r2;

        $d0 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

     label10:
        return $d0;

     label11:
        $r10 := @caughtexception;

        $r11 = <java.lang.Double: java.lang.Class TYPE>;

        staticinvoke <org.mozilla.javascript.NativeJavaObject: void reportConversionError(java.lang.Object,java.lang.Class)>(r0, $r11);

        goto label13;

     label12:
        $r8 := @caughtexception;

        $r9 = <java.lang.Double: java.lang.Class TYPE>;

        staticinvoke <org.mozilla.javascript.NativeJavaObject: void reportConversionError(java.lang.Object,java.lang.Class)>(r0, $r9);

     label13:
        $r15 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $d5 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.String)>($r15);

        return $d5;

        catch java.lang.NoSuchMethodException from label04 to label05 with label06;
        catch java.lang.SecurityException from label04 to label05 with label07;
        catch java.lang.IllegalAccessException from label09 to label10 with label11;
        catch java.lang.reflect.InvocationTargetException from label09 to label10 with label12;
    }

    private static long toInteger(java.lang.Object, java.lang.Class, double, double)
    {
        long $l3;
        byte $b0, $b1, $b2;
        int $i4, $i5, $i6;
        java.lang.String $r1, $r3;
        double $d0, d1, d2, d3;
        boolean $z0, $z1;
        java.lang.Object r0;
        java.lang.Class r2;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        $d0 = staticinvoke <org.mozilla.javascript.NativeJavaObject: double toDouble(java.lang.Object)>(r0);

        $z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z1 == 0 goto label2;

     label1:
        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r0);

        staticinvoke <org.mozilla.javascript.NativeJavaObject: void reportConversionError(java.lang.Object,java.lang.Class)>($r1, r2);

     label2:
        $b2 = $d0 cmpl 0.0;

        $i4 = (int) $b2;

        if $i4 <= 0 goto label3;

        d3 = staticinvoke <java.lang.Math: double floor(double)>($d0);

        goto label4;

     label3:
        d3 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

     label4:
        $b0 = d3 cmpg d1;

        $i5 = (int) $b0;

        if $i5 < 0 goto label5;

        $b1 = d3 cmpl d2;

        $i6 = (int) $b1;

        if $i6 <= 0 goto label6;

     label5:
        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r0);

        staticinvoke <org.mozilla.javascript.NativeJavaObject: void reportConversionError(java.lang.Object,java.lang.Class)>($r3, r2);

     label6:
        $l3 = (long) d3;

        return $l3;
    }

    static void reportConversionError(java.lang.Object, java.lang.Class)
    {
        org.mozilla.javascript.EvaluatorException $r4;
        java.lang.Object r0;
        java.lang.Class r2;
        java.lang.String $r1, $r3;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        $r3 = staticinvoke <org.mozilla.javascript.JavaMembers: java.lang.String javaSignature(java.lang.Class)>(r2);

        $r4 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError2(java.lang.String,java.lang.Object,java.lang.Object)>("msg.conversion.not.allowed", $r1, $r3);

        throw $r4;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.lang.Object[] $r12;
        java.io.ObjectOutputStream r0;
        java.lang.String $r6, $r9;
        java.lang.reflect.Method $r11, $r14;
        boolean $z0;
        org.mozilla.javascript.NativeJavaObject r1;
        java.io.IOException $r15, $r17;
        java.lang.Exception $r16;
        java.lang.Object $r2, $r3, $r7, $r10, $r13;
        java.lang.Class $r4, $r5, $r8, $r18;

        r1 := @this: org.mozilla.javascript.NativeJavaObject;

        r0 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r0.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $r2 = r1.<org.mozilla.javascript.NativeJavaObject: java.lang.Object javaObject>;

        if $r2 == null goto label6;

        $r7 = r1.<org.mozilla.javascript.NativeJavaObject: java.lang.Object javaObject>;

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("adapter");

        if $z0 == 0 goto label5;

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeBoolean(boolean)>(1);

        $r11 = <org.mozilla.javascript.NativeJavaObject: java.lang.reflect.Method adapter_writeAdapterObject>;

        if $r11 != null goto label1;

        $r15 = new java.io.IOException;

        specialinvoke $r15.<java.io.IOException: void <init>()>();

        throw $r15;

     label1:
        $r12 = newarray (java.lang.Object)[2];

        $r13 = r1.<org.mozilla.javascript.NativeJavaObject: java.lang.Object javaObject>;

        $r12[0] = $r13;

        $r12[1] = r0;

     label2:
        $r14 = <org.mozilla.javascript.NativeJavaObject: java.lang.reflect.Method adapter_writeAdapterObject>;

        virtualinvoke $r14.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r12);

     label3:
        goto label7;

     label4:
        $r16 := @caughtexception;

        $r17 = new java.io.IOException;

        specialinvoke $r17.<java.io.IOException: void <init>()>();

        throw $r17;

     label5:
        virtualinvoke r0.<java.io.ObjectOutputStream: void writeBoolean(boolean)>(0);

        $r10 = r1.<org.mozilla.javascript.NativeJavaObject: java.lang.Object javaObject>;

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r10);

        goto label7;

     label6:
        virtualinvoke r0.<java.io.ObjectOutputStream: void writeBoolean(boolean)>(0);

        $r3 = r1.<org.mozilla.javascript.NativeJavaObject: java.lang.Object javaObject>;

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r3);

     label7:
        $r18 = r1.<org.mozilla.javascript.NativeJavaObject: java.lang.Class staticType>;

        if $r18 == null goto label8;

        $r4 = r1.<org.mozilla.javascript.NativeJavaObject: java.lang.Class staticType>;

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r6);

        goto label9;

     label8:
        virtualinvoke r0.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);

     label9:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.mozilla.javascript.NativeJavaObject r1;
        java.lang.Object[] $r6;
        java.io.ObjectInputStream r0;
        java.io.IOException $r12;
        java.lang.Exception $r11;
        java.lang.Object $r2, $r3, $r8;
        java.lang.Class $r4;
        java.lang.ClassNotFoundException $r10;
        java.lang.String $r9;
        java.lang.reflect.Method $r5, $r7;
        boolean $z0;

        r1 := @this: org.mozilla.javascript.NativeJavaObject;

        r0 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r0.<java.io.ObjectInputStream: void defaultReadObject()>();

        $z0 = virtualinvoke r0.<java.io.ObjectInputStream: boolean readBoolean()>();

        if $z0 == 0 goto label5;

        $r5 = <org.mozilla.javascript.NativeJavaObject: java.lang.reflect.Method adapter_readAdapterObject>;

        if $r5 != null goto label1;

        $r10 = new java.lang.ClassNotFoundException;

        specialinvoke $r10.<java.lang.ClassNotFoundException: void <init>()>();

        throw $r10;

     label1:
        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = r1;

        $r6[1] = r0;

     label2:
        $r7 = <org.mozilla.javascript.NativeJavaObject: java.lang.reflect.Method adapter_readAdapterObject>;

        $r8 = virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r6);

        r1.<org.mozilla.javascript.NativeJavaObject: java.lang.Object javaObject> = $r8;

     label3:
        goto label6;

     label4:
        $r11 := @caughtexception;

        $r12 = new java.io.IOException;

        specialinvoke $r12.<java.io.IOException: void <init>()>();

        throw $r12;

     label5:
        $r2 = virtualinvoke r0.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        r1.<org.mozilla.javascript.NativeJavaObject: java.lang.Object javaObject> = $r2;

     label6:
        $r3 = virtualinvoke r0.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r9 = (java.lang.String) $r3;

        if $r9 == null goto label7;

        $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r9);

        r1.<org.mozilla.javascript.NativeJavaObject: java.lang.Class staticType> = $r4;

        goto label8;

     label7:
        r1.<org.mozilla.javascript.NativeJavaObject: java.lang.Class staticType> = null;

     label8:
        virtualinvoke r1.<org.mozilla.javascript.NativeJavaObject: void initMembers()>();

        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    static void <clinit>()
    {
        java.lang.Class[] r1;
        java.lang.Exception $r9;
        java.lang.Object $r0;
        java.lang.Class $r2, $r3, $r4, $r6, $r7;
        java.lang.reflect.Method $r5, $r8;

        <org.mozilla.javascript.NativeJavaObject: byte CONVERSION_NONE> = 99;

        <org.mozilla.javascript.NativeJavaObject: byte CONVERSION_NONTRIVIAL> = 0;

        <org.mozilla.javascript.NativeJavaObject: byte CONVERSION_TRIVIAL> = 1;

        <org.mozilla.javascript.NativeJavaObject: int JSTYPE_OBJECT> = 8;

        <org.mozilla.javascript.NativeJavaObject: int JSTYPE_JAVA_ARRAY> = 7;

        <org.mozilla.javascript.NativeJavaObject: int JSTYPE_JAVA_OBJECT> = 6;

        <org.mozilla.javascript.NativeJavaObject: int JSTYPE_JAVA_CLASS> = 5;

        <org.mozilla.javascript.NativeJavaObject: int JSTYPE_STRING> = 4;

        <org.mozilla.javascript.NativeJavaObject: int JSTYPE_NUMBER> = 3;

        <org.mozilla.javascript.NativeJavaObject: int JSTYPE_BOOLEAN> = 2;

        <org.mozilla.javascript.NativeJavaObject: int JSTYPE_NULL> = 1;

        <org.mozilla.javascript.NativeJavaObject: int JSTYPE_UNDEFINED> = 0;

        <org.mozilla.javascript.NativeJavaObject: long serialVersionUID> = -6948590651130498591L;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <org.mozilla.javascript.NativeJavaObject: java.lang.Object COERCED_INTERFACE_KEY> = $r0;

        r1 = newarray (java.lang.Class)[2];

        $r2 = staticinvoke <org.mozilla.javascript.Kit: java.lang.Class classOrNull(java.lang.String)>("org.mozilla.javascript.JavaAdapter");

        if $r2 == null goto label4;

     label1:
        $r3 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ObjectClass>;

        r1[0] = $r3;

        $r4 = staticinvoke <org.mozilla.javascript.Kit: java.lang.Class classOrNull(java.lang.String)>("java.io.ObjectOutputStream");

        r1[1] = $r4;

        $r5 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("writeAdapterObject", r1);

        <org.mozilla.javascript.NativeJavaObject: java.lang.reflect.Method adapter_writeAdapterObject> = $r5;

        $r6 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ScriptableClass>;

        r1[0] = $r6;

        $r7 = staticinvoke <org.mozilla.javascript.Kit: java.lang.Class classOrNull(java.lang.String)>("java.io.ObjectInputStream");

        r1[1] = $r7;

        $r8 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("readAdapterObject", r1);

        <org.mozilla.javascript.NativeJavaObject: java.lang.reflect.Method adapter_readAdapterObject> = $r8;

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        <org.mozilla.javascript.NativeJavaObject: java.lang.reflect.Method adapter_writeAdapterObject> = null;

        <org.mozilla.javascript.NativeJavaObject: java.lang.reflect.Method adapter_readAdapterObject> = null;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
