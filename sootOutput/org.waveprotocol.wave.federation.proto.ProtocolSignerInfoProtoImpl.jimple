public final class org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl extends java.lang.Object implements org.waveprotocol.wave.federation.ProtocolSignerInfo, org.waveprotocol.wave.communication.gson.GsonSerializable, org.waveprotocol.wave.communication.proto.ProtoWrapper
{
    private org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo proto;
    private org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder protoBuilder;

    public void <init>()
    {
        org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo proto> = null;

        $r1 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder newBuilder()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder protoBuilder> = $r1;

        return;
    }

    public void <init>(org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo)
    {
        org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo r2;
        org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl;

        r2 := @parameter0: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo proto> = null;

        $r1 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder newBuilder()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder protoBuilder> = $r1;

        r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo proto> = r2;

        return;
    }

    public void <init>(org.waveprotocol.wave.federation.ProtocolSignerInfo)
    {
        org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl r0;
        org.waveprotocol.wave.federation.ProtocolSignerInfo r2;
        org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl;

        r2 := @parameter0: org.waveprotocol.wave.federation.ProtocolSignerInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo proto> = null;

        $r1 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder newBuilder()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder protoBuilder> = $r1;

        virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: void copyFrom(org.waveprotocol.wave.federation.ProtocolSignerInfo)>(r2);

        return;
    }

    public org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo getPB()
    {
        org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo proto>;

        return $r1;
    }

    public void setPB(org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo)
    {
        org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl;

        r1 := @parameter0: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo;

        r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo proto> = r1;

        r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder protoBuilder> = null;

        return;
    }

    public void copyFrom(org.waveprotocol.wave.federation.ProtocolSignerInfo)
    {
        org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl r0;
        org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm $r2;
        java.util.Iterator $r5;
        org.waveprotocol.wave.federation.ProtocolSignerInfo r1;
        java.util.List $r4;
        org.waveprotocol.wave.communication.Blob r7;
        java.lang.Object $r6;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolSignerInfo;

        $r2 = interfaceinvoke r1.<org.waveprotocol.wave.federation.ProtocolSignerInfo: org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm getHashAlgorithm()>();

        virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: void setHashAlgorithm(org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm)>($r2);

        $r3 = interfaceinvoke r1.<org.waveprotocol.wave.federation.ProtocolSignerInfo: java.lang.String getDomain()>();

        virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: void setDomain(java.lang.String)>($r3);

        virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: void clearCertificate()>();

        $r4 = interfaceinvoke r1.<org.waveprotocol.wave.federation.ProtocolSignerInfo: java.util.List getCertificate()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.waveprotocol.wave.communication.Blob) $r6;

        virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: void addCertificate(org.waveprotocol.wave.communication.Blob)>(r7);

        goto label1;

     label2:
        return;
    }

    public org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm getHashAlgorithm()
    {
        org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$HashAlgorithm $r2;
        org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm $r3;
        org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo proto>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$HashAlgorithm getHashAlgorithm()>();

        $r3 = specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm toPojoEnumHashAlgorithm(org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$HashAlgorithm)>($r2);

        return $r3;
    }

    public void setHashAlgorithm(org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm)
    {
        org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl r0;
        org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm r1;
        org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$HashAlgorithm $r3;
        org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder $r2;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder protoBuilder>;

        $r3 = specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$HashAlgorithm toProtoEnumHashAlgorithm(org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm)>(r1);

        virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder setHashAlgorithm(org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$HashAlgorithm)>($r3);

        return;
    }

    public java.lang.String getDomain()
    {
        org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo $r1;
        java.lang.String $r2;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo proto>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo: java.lang.String getDomain()>();

        return $r2;
    }

    public void setDomain(java.lang.String)
    {
        org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl r0;
        java.lang.String r1;
        org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder $r2;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder setDomain(java.lang.String)>(r1);

        return;
    }

    public java.util.List getCertificate()
    {
        org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl r0;
        byte[] $r5;
        org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo $r3;
        java.util.ArrayList $r1;
        com.google.protobuf.ByteString $r4;
        int $i0, i1;
        org.waveprotocol.wave.communication.Blob $r2;
        java.lang.String $r6;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: void switchToProto()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: int getCertificateSize()>();

        if i1 >= $i0 goto label2;

        $r2 = new org.waveprotocol.wave.communication.Blob;

        $r3 = r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo proto>;

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo: com.google.protobuf.ByteString getCertificate(int)>(i1);

        $r5 = virtualinvoke $r4.<com.google.protobuf.ByteString: byte[] toByteArray()>();

        $r6 = staticinvoke <org.waveprotocol.wave.communication.Codec: java.lang.String encode(byte[])>($r5);

        specialinvoke $r2.<org.waveprotocol.wave.communication.Blob: void <init>(java.lang.String)>($r6);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public void addAllCertificate(java.util.List)
    {
        org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl r4;
        java.util.List r0;
        java.util.Iterator $r1;
        org.waveprotocol.wave.communication.Blob r3;
        java.lang.Object $r2;
        boolean $z0;

        r4 := @this: org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.waveprotocol.wave.communication.Blob) $r2;

        virtualinvoke r4.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: void addCertificate(org.waveprotocol.wave.communication.Blob)>(r3);

        goto label1;

     label2:
        return;
    }

    public org.waveprotocol.wave.communication.Blob getCertificate(int)
    {
        org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl r0;
        com.google.protobuf.ByteString $r3;
        byte[] $r4;
        org.waveprotocol.wave.communication.Blob $r1;
        int i0;
        org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo $r2;
        java.lang.String $r5;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl;

        i0 := @parameter0: int;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: void switchToProto()>();

        $r1 = new org.waveprotocol.wave.communication.Blob;

        $r2 = r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo proto>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo: com.google.protobuf.ByteString getCertificate(int)>(i0);

        $r4 = virtualinvoke $r3.<com.google.protobuf.ByteString: byte[] toByteArray()>();

        $r5 = staticinvoke <org.waveprotocol.wave.communication.Codec: java.lang.String encode(byte[])>($r4);

        specialinvoke $r1.<org.waveprotocol.wave.communication.Blob: void <init>(java.lang.String)>($r5);

        return $r1;
    }

    public void setCertificate(int, org.waveprotocol.wave.communication.Blob)
    {
        org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl r0;
        com.google.protobuf.ByteString $r5;
        byte[] $r4;
        int i0;
        org.waveprotocol.wave.communication.Blob r1;
        java.lang.String $r3;
        org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder $r2;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: org.waveprotocol.wave.communication.Blob;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder protoBuilder>;

        $r3 = virtualinvoke r1.<org.waveprotocol.wave.communication.Blob: java.lang.String getData()>();

        $r4 = staticinvoke <org.waveprotocol.wave.communication.Codec: byte[] decode(java.lang.String)>($r3);

        $r5 = staticinvoke <com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[])>($r4);

        virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder setCertificate(int,com.google.protobuf.ByteString)>(i0, $r5);

        return;
    }

    public int getCertificateSize()
    {
        org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo $r1;
        int $i0;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo proto>;

        $i0 = virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo: int getCertificateCount()>();

        return $i0;
    }

    public void addCertificate(org.waveprotocol.wave.communication.Blob)
    {
        org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl r0;
        com.google.protobuf.ByteString $r5;
        byte[] $r4;
        org.waveprotocol.wave.communication.Blob r1;
        java.lang.String $r3;
        org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder $r2;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl;

        r1 := @parameter0: org.waveprotocol.wave.communication.Blob;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder protoBuilder>;

        $r3 = virtualinvoke r1.<org.waveprotocol.wave.communication.Blob: java.lang.String getData()>();

        $r4 = staticinvoke <org.waveprotocol.wave.communication.Codec: byte[] decode(java.lang.String)>($r3);

        $r5 = staticinvoke <com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[])>($r4);

        virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder addCertificate(com.google.protobuf.ByteString)>($r5);

        return;
    }

    public void clearCertificate()
    {
        org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder protoBuilder>;

        virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder clearCertificate()>();

        return;
    }

    private org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$HashAlgorithm toProtoEnumHashAlgorithm(org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm)
    {
        org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl r2;
        org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm r0;
        org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$HashAlgorithm $r1;
        int $i0;

        r2 := @this: org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl;

        r0 := @parameter0: org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm;

        $i0 = virtualinvoke r0.<org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm: int getValue()>();

        $r1 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$HashAlgorithm: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$HashAlgorithm valueOf(int)>($i0);

        return $r1;
    }

    private org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm toPojoEnumHashAlgorithm(org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$HashAlgorithm)
    {
        org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl r4;
        org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$HashAlgorithm r0;
        java.lang.Enum $r2;
        org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm $r3;
        org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm[] $r1;
        int $i0;

        r4 := @this: org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl;

        r0 := @parameter0: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$HashAlgorithm;

        $i0 = virtualinvoke r0.<org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$HashAlgorithm: int getNumber()>();

        $r1 = staticinvoke <org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm: org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm[] values()>();

        $r2 = staticinvoke <org.waveprotocol.wave.communication.ProtoEnums: java.lang.Enum valOf(int,java.lang.Enum[])>($i0, $r1);

        $r3 = (org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm) $r2;

        return $r3;
    }

    private void switchToProto()
    {
        org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo $r1, $r3;
        org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder $r2;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo proto>;

        if $r1 != null goto label1;

        $r2 = r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder protoBuilder>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo build()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo proto> = $r3;

        r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder protoBuilder> = null;

     label1:
        return;
    }

    private void switchToProtoBuilder()
    {
        org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo $r2, $r3;
        org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder $r1, $r4;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder protoBuilder>;

        if $r1 != null goto label3;

        $r2 = r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo proto>;

        if $r2 != null goto label1;

        $r4 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder newBuilder()>();

        goto label2;

     label1:
        $r3 = r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo proto>;

        $r4 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder newBuilder(org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo)>($r3);

     label2:
        r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder protoBuilder> = $r4;

        r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo proto> = null;

     label3:
        return;
    }

    private void invalidateAll()
    {
        org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl;

        r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo proto> = null;

        $r1 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder newBuilder()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$Builder protoBuilder> = $r1;

        return;
    }

    public com.google.gson.JsonElement toGson(org.waveprotocol.wave.communication.json.RawStringData, com.google.gson.Gson)
    {
        org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl r2;
        com.google.gson.JsonObject $r0;
        org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm $r3;
        java.lang.Integer $r4;
        com.google.gson.Gson r12;
        int $i0, $i1, i2;
        com.google.gson.JsonPrimitive $r1, $r5, $r8;
        java.lang.String $r6, $r10;
        org.waveprotocol.wave.communication.json.RawStringData r11;
        com.google.gson.JsonArray $r7;
        org.waveprotocol.wave.communication.Blob $r9;

        r2 := @this: org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl;

        r11 := @parameter0: org.waveprotocol.wave.communication.json.RawStringData;

        r12 := @parameter1: com.google.gson.Gson;

        $r0 = new com.google.gson.JsonObject;

        specialinvoke $r0.<com.google.gson.JsonObject: void <init>()>();

        $r1 = new com.google.gson.JsonPrimitive;

        $r3 = virtualinvoke r2.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm getHashAlgorithm()>();

        $i0 = virtualinvoke $r3.<org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm: int getValue()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        specialinvoke $r1.<com.google.gson.JsonPrimitive: void <init>(java.lang.Number)>($r4);

        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("1", $r1);

        $r5 = new com.google.gson.JsonPrimitive;

        $r6 = virtualinvoke r2.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: java.lang.String getDomain()>();

        specialinvoke $r5.<com.google.gson.JsonPrimitive: void <init>(java.lang.String)>($r6);

        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("2", $r5);

        $r7 = new com.google.gson.JsonArray;

        specialinvoke $r7.<com.google.gson.JsonArray: void <init>()>();

        i2 = 0;

     label1:
        $i1 = virtualinvoke r2.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: int getCertificateSize()>();

        if i2 >= $i1 goto label2;

        $r8 = new com.google.gson.JsonPrimitive;

        $r9 = virtualinvoke r2.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.communication.Blob getCertificate(int)>(i2);

        $r10 = virtualinvoke $r9.<org.waveprotocol.wave.communication.Blob: java.lang.String getData()>();

        specialinvoke $r8.<com.google.gson.JsonPrimitive: void <init>(java.lang.String)>($r10);

        virtualinvoke $r7.<com.google.gson.JsonArray: void add(com.google.gson.JsonElement)>($r8);

        i2 = i2 + 1;

        goto label1;

     label2:
        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("3", $r7);

        return $r0;
    }

    public void fromGson(com.google.gson.JsonElement, com.google.gson.Gson, org.waveprotocol.wave.communication.json.RawStringData) throws org.waveprotocol.wave.communication.gson.GsonException
    {
        org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl r2;
        com.google.gson.JsonObject $r1;
        org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm $r13;
        com.google.gson.JsonElement r0, $r3, $r6, $r8, $r10;
        java.lang.Enum $r12;
        com.google.gson.Gson r14;
        org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm[] $r11;
        int $i0, $i1, i2;
        java.lang.String $r7, $r9;
        boolean $z0, $z1, $z2;
        org.waveprotocol.wave.communication.json.RawStringData r15;
        com.google.gson.JsonArray $r4;
        org.waveprotocol.wave.communication.Blob $r5;

        r2 := @this: org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl;

        r0 := @parameter0: com.google.gson.JsonElement;

        r14 := @parameter1: com.google.gson.Gson;

        r15 := @parameter2: org.waveprotocol.wave.communication.json.RawStringData;

        $r1 = virtualinvoke r0.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>();

        specialinvoke r2.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: void invalidateAll()>();

        $z0 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("1");

        if $z0 == 0 goto label1;

        $r10 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("1");

        $i1 = virtualinvoke $r10.<com.google.gson.JsonElement: int getAsInt()>();

        $r11 = staticinvoke <org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm: org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm[] values()>();

        $r12 = staticinvoke <org.waveprotocol.wave.communication.ProtoEnums: java.lang.Enum valOf(int,java.lang.Enum[])>($i1, $r11);

        $r13 = (org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm) $r12;

        virtualinvoke r2.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: void setHashAlgorithm(org.waveprotocol.wave.federation.ProtocolSignerInfo$HashAlgorithm)>($r13);

     label1:
        $z1 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("2");

        if $z1 == 0 goto label2;

        $r8 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("2");

        $r9 = virtualinvoke $r8.<com.google.gson.JsonElement: java.lang.String getAsString()>();

        virtualinvoke r2.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: void setDomain(java.lang.String)>($r9);

     label2:
        $z2 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("3");

        if $z2 == 0 goto label4;

        $r3 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("3");

        $r4 = virtualinvoke $r3.<com.google.gson.JsonElement: com.google.gson.JsonArray getAsJsonArray()>();

        i2 = 0;

     label3:
        $i0 = virtualinvoke $r4.<com.google.gson.JsonArray: int size()>();

        if i2 >= $i0 goto label4;

        $r5 = new org.waveprotocol.wave.communication.Blob;

        $r6 = virtualinvoke $r4.<com.google.gson.JsonArray: com.google.gson.JsonElement get(int)>(i2);

        $r7 = virtualinvoke $r6.<com.google.gson.JsonElement: java.lang.String getAsString()>();

        specialinvoke $r5.<org.waveprotocol.wave.communication.Blob: void <init>(java.lang.String)>($r7);

        virtualinvoke r2.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: void addCertificate(org.waveprotocol.wave.communication.Blob)>($r5);

        i2 = i2 + 1;

        goto label3;

     label4:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl r0, $r3;
        org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo $r2, $r4;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl;

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo getPB()>();

        $r3 = (org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl) r1;

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo getPB()>();

        $z1 = virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo: boolean equals(java.lang.Object)>($r4);

        return $z1;

     label2:
        return 0;
    }

    public boolean isEqualTo(java.lang.Object)
    {
        org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl r0;
        org.waveprotocol.wave.federation.ProtocolSignerInfo $r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl;

        r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = r1 instanceof org.waveprotocol.wave.federation.ProtocolSignerInfo;

        if $z1 == 0 goto label2;

        $r2 = (org.waveprotocol.wave.federation.ProtocolSignerInfo) r1;

        $z2 = staticinvoke <org.waveprotocol.wave.federation.ProtocolSignerInfoUtil: boolean isEqual(org.waveprotocol.wave.federation.ProtocolSignerInfo,org.waveprotocol.wave.federation.ProtocolSignerInfo)>(r0, $r2);

        return $z2;

     label2:
        return 0;
    }

    public int hashCode()
    {
        org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo $r1;
        int $i0;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo getPB()>();

        $i0 = virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo $r1;
        java.lang.String $r2;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo getPB()>();

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo: java.lang.String toString()>();

        return $r2;
    }

    public volatile com.google.protobuf.MessageLite getPB()
    {
        org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo getPB()>();

        return $r1;
    }

    public volatile void setPB(com.google.protobuf.MessageLite)
    {
        org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo $r2;
        com.google.protobuf.MessageLite r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl;

        r1 := @parameter0: com.google.protobuf.MessageLite;

        $r2 = (org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo) r1;

        virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolSignerInfoProtoImpl: void setPB(org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo)>($r2);

        return;
    }
}
