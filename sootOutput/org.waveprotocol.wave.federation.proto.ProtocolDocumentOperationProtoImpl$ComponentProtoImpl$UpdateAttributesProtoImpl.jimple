public final class org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl extends java.lang.Object implements org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes, org.waveprotocol.wave.communication.gson.GsonSerializable, org.waveprotocol.wave.communication.proto.ProtoWrapper
{
    private org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes proto;
    private org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder protoBuilder;

    public void <init>()
    {
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes proto> = null;

        $r1 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder newBuilder()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder protoBuilder> = $r1;

        return;
    }

    public void <init>(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes)
    {
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes r2;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl;

        r2 := @parameter0: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes proto> = null;

        $r1 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder newBuilder()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder protoBuilder> = $r1;

        r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes proto> = r2;

        return;
    }

    public void <init>(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes)
    {
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder $r1;
        org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes r2;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl;

        r2 := @parameter0: org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes proto> = null;

        $r1 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder newBuilder()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder protoBuilder> = $r1;

        virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: void copyFrom(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes)>(r2);

        return;
    }

    public org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes getPB()
    {
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes proto>;

        return $r1;
    }

    public void setPB(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes)
    {
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl;

        r1 := @parameter0: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes;

        r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes proto> = r1;

        r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder protoBuilder> = null;

        return;
    }

    public void copyFrom(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes)
    {
        java.util.Iterator $r3;
        org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes r0;
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$KeyValueUpdateProtoImpl $r6;
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl r1;
        java.util.List $r2;
        java.lang.Object $r4;
        org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$KeyValueUpdate r5;
        boolean $z0, $z1, $z2;

        r1 := @this: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl;

        r0 := @parameter0: org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes;

        $z0 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes: boolean hasEmpty()>();

        if $z0 == 0 goto label1;

        $z1 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes: boolean getEmpty()>();

        virtualinvoke r1.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: void setEmpty(boolean)>($z1);

        goto label2;

     label1:
        virtualinvoke r1.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: void clearEmpty()>();

     label2:
        virtualinvoke r1.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: void clearAttributeUpdate()>();

        $r2 = interfaceinvoke r0.<org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes: java.util.List getAttributeUpdate()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$KeyValueUpdate) $r4;

        $r6 = new org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$KeyValueUpdateProtoImpl;

        specialinvoke $r6.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$KeyValueUpdateProtoImpl: void <init>(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$KeyValueUpdate)>(r5);

        virtualinvoke r1.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: void addAttributeUpdate(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$KeyValueUpdate)>($r6);

        goto label3;

     label4:
        return;
    }

    public boolean hasEmpty()
    {
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes proto>;

        $z0 = virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes: boolean hasEmpty()>();

        return $z0;
    }

    public void clearEmpty()
    {
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder protoBuilder>;

        virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder clearEmpty()>();

        return;
    }

    public boolean getEmpty()
    {
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes proto>;

        $z0 = virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes: boolean getEmpty()>();

        return $z0;
    }

    public void setEmpty(boolean)
    {
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder $r1;
        boolean z0;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder protoBuilder>;

        virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder setEmpty(boolean)>(z0);

        return;
    }

    public java.util.List getAttributeUpdate()
    {
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl r0;
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$KeyValueUpdateProtoImpl $r2;
        int $i0, i1;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes $r3;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValueUpdate $r4;
        java.util.ArrayList $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: void switchToProto()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        i1 = 0;

     label1:
        $i0 = virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: int getAttributeUpdateSize()>();

        if i1 >= $i0 goto label2;

        $r2 = new org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$KeyValueUpdateProtoImpl;

        $r3 = r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes proto>;

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValueUpdate getAttributeUpdate(int)>(i1);

        specialinvoke $r2.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$KeyValueUpdateProtoImpl: void <init>(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValueUpdate)>($r4);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public void addAllAttributeUpdate(java.util.List)
    {
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl r4;
        java.util.List r0;
        java.util.Iterator $r1;
        java.lang.Object $r2;
        org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$KeyValueUpdate r3;
        boolean $z0;

        r4 := @this: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$KeyValueUpdate) $r2;

        virtualinvoke r4.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: void addAttributeUpdate(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$KeyValueUpdate)>(r3);

        goto label1;

     label2:
        return;
    }

    public org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$KeyValueUpdateProtoImpl getAttributeUpdate(int)
    {
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl r0;
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$KeyValueUpdateProtoImpl $r1;
        int i0;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes $r2;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValueUpdate $r3;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl;

        i0 := @parameter0: int;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: void switchToProto()>();

        $r1 = new org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$KeyValueUpdateProtoImpl;

        $r2 = r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes proto>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValueUpdate getAttributeUpdate(int)>(i0);

        specialinvoke $r1.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$KeyValueUpdateProtoImpl: void <init>(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValueUpdate)>($r3);

        return $r1;
    }

    public void setAttributeUpdate(int, org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$KeyValueUpdate)
    {
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl r0;
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$KeyValueUpdateProtoImpl $r3;
        int i0;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValueUpdate $r4;
        org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$KeyValueUpdate r1;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder $r2;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$KeyValueUpdate;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder protoBuilder>;

        $r3 = specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$KeyValueUpdateProtoImpl getOrCreateKeyValueUpdateProtoImpl(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$KeyValueUpdate)>(r1);

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$KeyValueUpdateProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValueUpdate getPB()>();

        virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder setAttributeUpdate(int,org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValueUpdate)>(i0, $r4);

        return;
    }

    public int getAttributeUpdateSize()
    {
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes $r1;
        int $i0;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes proto>;

        $i0 = virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes: int getAttributeUpdateCount()>();

        return $i0;
    }

    public void addAttributeUpdate(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$KeyValueUpdate)
    {
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl r0;
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$KeyValueUpdateProtoImpl $r3;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValueUpdate $r4;
        org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$KeyValueUpdate r1;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder $r2;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$KeyValueUpdate;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder protoBuilder>;

        $r3 = specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$KeyValueUpdateProtoImpl getOrCreateKeyValueUpdateProtoImpl(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$KeyValueUpdate)>(r1);

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$KeyValueUpdateProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValueUpdate getPB()>();

        virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder addAttributeUpdate(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$KeyValueUpdate)>($r4);

        return;
    }

    public void clearAttributeUpdate()
    {
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl;

        specialinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder protoBuilder>;

        virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder clearAttributeUpdate()>();

        return;
    }

    private org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$KeyValueUpdateProtoImpl getOrCreateKeyValueUpdateProtoImpl(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$KeyValueUpdate)
    {
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl r3;
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$KeyValueUpdateProtoImpl $r1, $r2;
        org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$KeyValueUpdate r0;
        boolean $z0;

        r3 := @this: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl;

        r0 := @parameter0: org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$KeyValueUpdate;

        $z0 = r0 instanceof org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$KeyValueUpdateProtoImpl;

        if $z0 == 0 goto label1;

        $r2 = (org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$KeyValueUpdateProtoImpl) r0;

        return $r2;

     label1:
        $r1 = new org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$KeyValueUpdateProtoImpl;

        specialinvoke $r1.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$KeyValueUpdateProtoImpl: void <init>()>();

        virtualinvoke $r1.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$KeyValueUpdateProtoImpl: void copyFrom(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$KeyValueUpdate)>(r0);

        return $r1;
    }

    private void switchToProto()
    {
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes $r1, $r3;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder $r2;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes proto>;

        if $r1 != null goto label1;

        $r2 = r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder protoBuilder>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes build()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes proto> = $r3;

        r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder protoBuilder> = null;

     label1:
        return;
    }

    private void switchToProtoBuilder()
    {
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes $r2, $r3;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder $r1, $r4;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder protoBuilder>;

        if $r1 != null goto label3;

        $r2 = r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes proto>;

        if $r2 != null goto label1;

        $r4 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder newBuilder()>();

        goto label2;

     label1:
        $r3 = r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes proto>;

        $r4 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder newBuilder(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes)>($r3);

     label2:
        r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder protoBuilder> = $r4;

        r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes proto> = null;

     label3:
        return;
    }

    private void invalidateAll()
    {
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl;

        r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes proto> = null;

        $r1 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder newBuilder()>();

        r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes$Builder protoBuilder> = $r1;

        return;
    }

    public com.google.gson.JsonElement toGson(org.waveprotocol.wave.communication.json.RawStringData, com.google.gson.Gson)
    {
        com.google.gson.JsonObject $r0;
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$KeyValueUpdateProtoImpl $r3;
        org.waveprotocol.wave.communication.json.RawStringData r4;
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl r1;
        com.google.gson.JsonElement $r6;
        com.google.gson.JsonArray $r2;
        com.google.gson.Gson r5;
        int i0, $i1;
        java.lang.Boolean $r8;
        com.google.gson.JsonPrimitive $r7;
        boolean $z0, $z1;

        r1 := @this: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl;

        r4 := @parameter0: org.waveprotocol.wave.communication.json.RawStringData;

        r5 := @parameter1: com.google.gson.Gson;

        $r0 = new com.google.gson.JsonObject;

        specialinvoke $r0.<com.google.gson.JsonObject: void <init>()>();

        $z0 = virtualinvoke r1.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: boolean hasEmpty()>();

        if $z0 == 0 goto label1;

        $r7 = new com.google.gson.JsonPrimitive;

        $z1 = virtualinvoke r1.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: boolean getEmpty()>();

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        specialinvoke $r7.<com.google.gson.JsonPrimitive: void <init>(java.lang.Boolean)>($r8);

        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("1", $r7);

     label1:
        $r2 = new com.google.gson.JsonArray;

        specialinvoke $r2.<com.google.gson.JsonArray: void <init>()>();

        i0 = 0;

     label2:
        $i1 = virtualinvoke r1.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: int getAttributeUpdateSize()>();

        if i0 >= $i1 goto label3;

        $r3 = virtualinvoke r1.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$KeyValueUpdateProtoImpl getAttributeUpdate(int)>(i0);

        $r6 = interfaceinvoke $r3.<org.waveprotocol.wave.communication.gson.GsonSerializable: com.google.gson.JsonElement toGson(org.waveprotocol.wave.communication.json.RawStringData,com.google.gson.Gson)>(r4, r5);

        virtualinvoke $r2.<com.google.gson.JsonArray: void add(com.google.gson.JsonElement)>($r6);

        i0 = i0 + 1;

        goto label2;

     label3:
        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("2", $r2);

        return $r0;
    }

    public void fromGson(com.google.gson.JsonElement, com.google.gson.Gson, org.waveprotocol.wave.communication.json.RawStringData) throws org.waveprotocol.wave.communication.gson.GsonException
    {
        com.google.gson.JsonObject $r1;
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$KeyValueUpdateProtoImpl $r5;
        com.google.gson.JsonElement r0, $r3, $r6, $r9;
        com.google.gson.Gson r7;
        int $i0, i1;
        boolean $z0, $z1, $z2, $z3;
        org.waveprotocol.wave.communication.json.RawStringData r8;
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl r2;
        com.google.gson.JsonArray $r4;

        r2 := @this: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl;

        r0 := @parameter0: com.google.gson.JsonElement;

        r7 := @parameter1: com.google.gson.Gson;

        r8 := @parameter2: org.waveprotocol.wave.communication.json.RawStringData;

        $r1 = virtualinvoke r0.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>();

        specialinvoke r2.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: void invalidateAll()>();

        $z0 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("1");

        if $z0 == 0 goto label1;

        $r9 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("1");

        $z1 = virtualinvoke $r9.<com.google.gson.JsonElement: boolean isJsonNull()>();

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke $r9.<com.google.gson.JsonElement: boolean getAsBoolean()>();

        virtualinvoke r2.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: void setEmpty(boolean)>($z2);

     label1:
        $z3 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("2");

        if $z3 == 0 goto label3;

        $r3 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("2");

        $r4 = virtualinvoke $r3.<com.google.gson.JsonElement: com.google.gson.JsonArray getAsJsonArray()>();

        i1 = 0;

     label2:
        $i0 = virtualinvoke $r4.<com.google.gson.JsonArray: int size()>();

        if i1 >= $i0 goto label3;

        $r5 = new org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$KeyValueUpdateProtoImpl;

        specialinvoke $r5.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$KeyValueUpdateProtoImpl: void <init>()>();

        $r6 = virtualinvoke $r4.<com.google.gson.JsonArray: com.google.gson.JsonElement get(int)>(i1);

        staticinvoke <org.waveprotocol.wave.communication.gson.GsonUtil: void extractJsonObject(org.waveprotocol.wave.communication.gson.GsonSerializable,com.google.gson.JsonElement,com.google.gson.Gson,org.waveprotocol.wave.communication.json.RawStringData)>($r5, $r6, r7, r8);

        virtualinvoke r2.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: void addAttributeUpdate(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$KeyValueUpdate)>($r5);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl r0, $r3;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes $r2, $r4;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl;

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes getPB()>();

        $r3 = (org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl) r1;

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes getPB()>();

        $z1 = virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes: boolean equals(java.lang.Object)>($r4);

        return $z1;

     label2:
        return 0;
    }

    public boolean isEqualTo(java.lang.Object)
    {
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl r0;
        org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes $r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl;

        r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = r1 instanceof org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes;

        if $z1 == 0 goto label2;

        $r2 = (org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes) r1;

        $z2 = staticinvoke <org.waveprotocol.wave.federation.ProtocolDocumentOperationUtil$ComponentUtil$UpdateAttributesUtil: boolean isEqual(org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes,org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$UpdateAttributes)>(r0, $r2);

        return $z2;

     label2:
        return 0;
    }

    public int hashCode()
    {
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes $r1;
        int $i0;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes getPB()>();

        $i0 = virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes $r1;
        java.lang.String $r2;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes getPB()>();

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes: java.lang.String toString()>();

        return $r2;
    }

    public volatile org.waveprotocol.wave.federation.ProtocolDocumentOperation$Component$KeyValueUpdate getAttributeUpdate(int)
    {
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl r0;
        int i0;
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$KeyValueUpdateProtoImpl $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$KeyValueUpdateProtoImpl getAttributeUpdate(int)>(i0);

        return $r1;
    }

    public volatile com.google.protobuf.MessageLite getPB()
    {
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes $r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes getPB()>();

        return $r1;
    }

    public volatile void setPB(com.google.protobuf.MessageLite)
    {
        org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl r0;
        org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes $r2;
        com.google.protobuf.MessageLite r1;

        r0 := @this: org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl;

        r1 := @parameter0: com.google.protobuf.MessageLite;

        $r2 = (org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes) r1;

        virtualinvoke r0.<org.waveprotocol.wave.federation.proto.ProtocolDocumentOperationProtoImpl$ComponentProtoImpl$UpdateAttributesProtoImpl: void setPB(org.waveprotocol.wave.federation.Proto$ProtocolDocumentOperation$Component$UpdateAttributes)>($r2);

        return;
    }
}
