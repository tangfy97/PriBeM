public final class org.waveprotocol.wave.model.testing.Response extends java.lang.Object
{

    public static org.waveprotocol.wave.model.testing.Response$ResponseAnswer of(java.lang.Object)
    {
        java.lang.Object r1;
        org.waveprotocol.wave.model.testing.Response$ResponseAnswer $r0;

        r1 := @parameter0: java.lang.Object;

        $r0 = new org.waveprotocol.wave.model.testing.Response$ResponseAnswer;

        specialinvoke $r0.<org.waveprotocol.wave.model.testing.Response$ResponseAnswer: void <init>(java.lang.Object)>(r1);

        return $r0;
    }

    public static transient org.waveprotocol.wave.model.testing.Response$ResponseAnswer ofList(java.lang.Object[])
    {
        java.util.List $r2;
        java.lang.Object[] r1;
        org.waveprotocol.wave.model.testing.Response$ResponseAnswer $r0;

        r1 := @parameter0: java.lang.Object[];

        $r0 = new org.waveprotocol.wave.model.testing.Response$ResponseAnswer;

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        specialinvoke $r0.<org.waveprotocol.wave.model.testing.Response$ResponseAnswer: void <init>(java.lang.Object)>($r2);

        return $r0;
    }

    private void <init>()
    {
        org.waveprotocol.wave.model.testing.Response r0;

        r0 := @this: org.waveprotocol.wave.model.testing.Response;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
}
