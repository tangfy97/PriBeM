public final class org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl extends java.lang.Object implements org.waveprotocol.box.common.comms.ProtocolSubmitResponse, org.waveprotocol.wave.communication.gson.GsonSerializable, org.waveprotocol.wave.communication.proto.ProtoWrapper
{
    private org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse proto;
    private org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder protoBuilder;

    public void <init>()
    {
        org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder $r1;

        r0 := @this: org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse proto> = null;

        $r1 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder newBuilder()>();

        r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder protoBuilder> = $r1;

        return;
    }

    public void <init>(org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse)
    {
        org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder $r1;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse r2;

        r0 := @this: org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl;

        r2 := @parameter0: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse proto> = null;

        $r1 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder newBuilder()>();

        r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder protoBuilder> = $r1;

        r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse proto> = r2;

        return;
    }

    public void <init>(org.waveprotocol.box.common.comms.ProtocolSubmitResponse)
    {
        org.waveprotocol.box.common.comms.ProtocolSubmitResponse r2;
        org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder $r1;

        r0 := @this: org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl;

        r2 := @parameter0: org.waveprotocol.box.common.comms.ProtocolSubmitResponse;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse proto> = null;

        $r1 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder newBuilder()>();

        r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder protoBuilder> = $r1;

        virtualinvoke r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: void copyFrom(org.waveprotocol.box.common.comms.ProtocolSubmitResponse)>(r2);

        return;
    }

    public org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse getPB()
    {
        org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse $r1;

        r0 := @this: org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse proto>;

        return $r1;
    }

    public void setPB(org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse)
    {
        org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse r1;

        r0 := @this: org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl;

        r1 := @parameter0: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse;

        r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse proto> = r1;

        r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder protoBuilder> = null;

        return;
    }

    public void copyFrom(org.waveprotocol.box.common.comms.ProtocolSubmitResponse)
    {
        org.waveprotocol.box.common.comms.ProtocolSubmitResponse r1;
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl $r2;
        org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl r0;
        int $i0;
        org.waveprotocol.wave.federation.ProtocolHashedVersion $r3;
        java.lang.String $r4;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl;

        r1 := @parameter0: org.waveprotocol.box.common.comms.ProtocolSubmitResponse;

        $i0 = interfaceinvoke r1.<org.waveprotocol.box.common.comms.ProtocolSubmitResponse: int getOperationsApplied()>();

        virtualinvoke r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: void setOperationsApplied(int)>($i0);

        $z0 = interfaceinvoke r1.<org.waveprotocol.box.common.comms.ProtocolSubmitResponse: boolean hasErrorMessage()>();

        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke r1.<org.waveprotocol.box.common.comms.ProtocolSubmitResponse: java.lang.String getErrorMessage()>();

        virtualinvoke r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: void setErrorMessage(java.lang.String)>($r4);

        goto label2;

     label1:
        virtualinvoke r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: void clearErrorMessage()>();

     label2:
        $z1 = interfaceinvoke r1.<org.waveprotocol.box.common.comms.ProtocolSubmitResponse: boolean hasHashedVersionAfterApplication()>();

        if $z1 == 0 goto label3;

        $r2 = new org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        $r3 = interfaceinvoke r1.<org.waveprotocol.box.common.comms.ProtocolSubmitResponse: org.waveprotocol.wave.federation.ProtocolHashedVersion getHashedVersionAfterApplication()>();

        specialinvoke $r2.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: void <init>(org.waveprotocol.wave.federation.ProtocolHashedVersion)>($r3);

        virtualinvoke r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: void setHashedVersionAfterApplication(org.waveprotocol.wave.federation.ProtocolHashedVersion)>($r2);

        goto label4;

     label3:
        virtualinvoke r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: void clearHashedVersionAfterApplication()>();

     label4:
        return;
    }

    public int getOperationsApplied()
    {
        int $i0;
        org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse $r1;

        r0 := @this: org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse proto>;

        $i0 = virtualinvoke $r1.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse: int getOperationsApplied()>();

        return $i0;
    }

    public void setOperationsApplied(int)
    {
        int i0;
        org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder $r1;

        r0 := @this: org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl;

        i0 := @parameter0: int;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder protoBuilder>;

        virtualinvoke $r1.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder setOperationsApplied(int)>(i0);

        return;
    }

    public boolean hasErrorMessage()
    {
        org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse proto>;

        $z0 = virtualinvoke $r1.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse: boolean hasErrorMessage()>();

        return $z0;
    }

    public void clearErrorMessage()
    {
        org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder $r1;

        r0 := @this: org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder protoBuilder>;

        virtualinvoke $r1.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder clearErrorMessage()>();

        return;
    }

    public java.lang.String getErrorMessage()
    {
        java.lang.String $r2;
        org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse $r1;

        r0 := @this: org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse proto>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse: java.lang.String getErrorMessage()>();

        return $r2;
    }

    public void setErrorMessage(java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder $r2;

        r0 := @this: org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: void switchToProtoBuilder()>();

        $r2 = r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder protoBuilder>;

        virtualinvoke $r2.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder setErrorMessage(java.lang.String)>(r1);

        return;
    }

    public boolean hasHashedVersionAfterApplication()
    {
        org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: void switchToProto()>();

        $r1 = r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse proto>;

        $z0 = virtualinvoke $r1.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse: boolean hasHashedVersionAfterApplication()>();

        return $z0;
    }

    public void clearHashedVersionAfterApplication()
    {
        org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder $r1;

        r0 := @this: org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder protoBuilder>;

        virtualinvoke $r1.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder clearHashedVersionAfterApplication()>();

        return;
    }

    public org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl getHashedVersionAfterApplication()
    {
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl $r1;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion $r3;
        org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse $r2;

        r0 := @this: org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: void switchToProto()>();

        $r1 = new org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        $r2 = r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse proto>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion getHashedVersionAfterApplication()>();

        specialinvoke $r1.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: void <init>(org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion)>($r3);

        return $r1;
    }

    public void setHashedVersionAfterApplication(org.waveprotocol.wave.federation.ProtocolHashedVersion)
    {
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl $r4;
        org.waveprotocol.wave.federation.ProtocolHashedVersion r2;
        org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion $r5;
        org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder $r1, $r3;

        r0 := @this: org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl;

        r2 := @parameter0: org.waveprotocol.wave.federation.ProtocolHashedVersion;

        specialinvoke r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: void switchToProtoBuilder()>();

        $r1 = r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder protoBuilder>;

        virtualinvoke $r1.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder clearHashedVersionAfterApplication()>();

        $r3 = r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder protoBuilder>;

        $r4 = specialinvoke r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl getOrCreateProtocolHashedVersionProtoImpl(org.waveprotocol.wave.federation.ProtocolHashedVersion)>(r2);

        $r5 = virtualinvoke $r4.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion getPB()>();

        virtualinvoke $r3.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder setHashedVersionAfterApplication(org.waveprotocol.wave.federation.Proto$ProtocolHashedVersion)>($r5);

        return;
    }

    private org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl getOrCreateProtocolHashedVersionProtoImpl(org.waveprotocol.wave.federation.ProtocolHashedVersion)
    {
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl $r1, $r2;
        org.waveprotocol.wave.federation.ProtocolHashedVersion r0;
        org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl r3;
        boolean $z0;

        r3 := @this: org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl;

        r0 := @parameter0: org.waveprotocol.wave.federation.ProtocolHashedVersion;

        $z0 = r0 instanceof org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        if $z0 == 0 goto label1;

        $r2 = (org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl) r0;

        return $r2;

     label1:
        $r1 = new org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        specialinvoke $r1.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: void <init>()>();

        virtualinvoke $r1.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: void copyFrom(org.waveprotocol.wave.federation.ProtocolHashedVersion)>(r0);

        return $r1;
    }

    private void switchToProto()
    {
        org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse $r1, $r3;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder $r2;

        r0 := @this: org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl;

        $r1 = r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse proto>;

        if $r1 != null goto label1;

        $r2 = r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder protoBuilder>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse build()>();

        r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse proto> = $r3;

        r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder protoBuilder> = null;

     label1:
        return;
    }

    private void switchToProtoBuilder()
    {
        org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder $r1, $r4;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse $r2, $r3;

        r0 := @this: org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl;

        $r1 = r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder protoBuilder>;

        if $r1 != null goto label3;

        $r2 = r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse proto>;

        if $r2 != null goto label1;

        $r4 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder newBuilder()>();

        goto label2;

     label1:
        $r3 = r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse proto>;

        $r4 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder newBuilder(org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse)>($r3);

     label2:
        r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder protoBuilder> = $r4;

        r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse proto> = null;

     label3:
        return;
    }

    private void invalidateAll()
    {
        org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder $r1;

        r0 := @this: org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl;

        r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse proto> = null;

        $r1 = staticinvoke <org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder newBuilder()>();

        r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse$Builder protoBuilder> = $r1;

        return;
    }

    public com.google.gson.JsonElement toGson(org.waveprotocol.wave.communication.json.RawStringData, com.google.gson.Gson)
    {
        com.google.gson.JsonObject $r0;
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl $r4;
        org.waveprotocol.wave.communication.json.RawStringData r5;
        org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl r2;
        java.lang.Integer $r3;
        com.google.gson.JsonElement $r7;
        com.google.gson.Gson r6;
        int $i0;
        com.google.gson.JsonPrimitive $r1, $r8;
        java.lang.String $r9;
        boolean $z0, $z1;

        r2 := @this: org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl;

        r5 := @parameter0: org.waveprotocol.wave.communication.json.RawStringData;

        r6 := @parameter1: com.google.gson.Gson;

        $r0 = new com.google.gson.JsonObject;

        specialinvoke $r0.<com.google.gson.JsonObject: void <init>()>();

        $r1 = new com.google.gson.JsonPrimitive;

        $i0 = virtualinvoke r2.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: int getOperationsApplied()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        specialinvoke $r1.<com.google.gson.JsonPrimitive: void <init>(java.lang.Number)>($r3);

        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("1", $r1);

        $z0 = virtualinvoke r2.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: boolean hasErrorMessage()>();

        if $z0 == 0 goto label1;

        $r8 = new com.google.gson.JsonPrimitive;

        $r9 = virtualinvoke r2.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: java.lang.String getErrorMessage()>();

        specialinvoke $r8.<com.google.gson.JsonPrimitive: void <init>(java.lang.String)>($r9);

        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("2", $r8);

     label1:
        $z1 = virtualinvoke r2.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: boolean hasHashedVersionAfterApplication()>();

        if $z1 == 0 goto label2;

        $r4 = virtualinvoke r2.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl getHashedVersionAfterApplication()>();

        $r7 = interfaceinvoke $r4.<org.waveprotocol.wave.communication.gson.GsonSerializable: com.google.gson.JsonElement toGson(org.waveprotocol.wave.communication.json.RawStringData,com.google.gson.Gson)>(r5, r6);

        virtualinvoke $r0.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("3", $r7);

     label2:
        return $r0;
    }

    public void fromGson(com.google.gson.JsonElement, com.google.gson.Gson, org.waveprotocol.wave.communication.json.RawStringData) throws org.waveprotocol.wave.communication.gson.GsonException
    {
        com.google.gson.JsonObject $r1;
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl $r4;
        com.google.gson.JsonElement r0, $r3, $r7, $r9;
        com.google.gson.Gson r5;
        int $i0;
        java.lang.String $r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.waveprotocol.wave.communication.json.RawStringData r6;
        org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl r2;

        r2 := @this: org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl;

        r0 := @parameter0: com.google.gson.JsonElement;

        r5 := @parameter1: com.google.gson.Gson;

        r6 := @parameter2: org.waveprotocol.wave.communication.json.RawStringData;

        $r1 = virtualinvoke r0.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>();

        specialinvoke r2.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: void invalidateAll()>();

        $z0 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("1");

        if $z0 == 0 goto label1;

        $r9 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("1");

        $i0 = virtualinvoke $r9.<com.google.gson.JsonElement: int getAsInt()>();

        virtualinvoke r2.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: void setOperationsApplied(int)>($i0);

     label1:
        $z1 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("2");

        if $z1 == 0 goto label2;

        $r7 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("2");

        $z3 = virtualinvoke $r7.<com.google.gson.JsonElement: boolean isJsonNull()>();

        if $z3 != 0 goto label2;

        $r8 = virtualinvoke $r7.<com.google.gson.JsonElement: java.lang.String getAsString()>();

        virtualinvoke r2.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: void setErrorMessage(java.lang.String)>($r8);

     label2:
        $z4 = virtualinvoke $r1.<com.google.gson.JsonObject: boolean has(java.lang.String)>("3");

        if $z4 == 0 goto label3;

        $r3 = virtualinvoke $r1.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("3");

        $z2 = virtualinvoke $r3.<com.google.gson.JsonElement: boolean isJsonNull()>();

        if $z2 != 0 goto label3;

        $r4 = new org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl;

        specialinvoke $r4.<org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl: void <init>()>();

        staticinvoke <org.waveprotocol.wave.communication.gson.GsonUtil: void extractJsonObject(org.waveprotocol.wave.communication.gson.GsonSerializable,com.google.gson.JsonElement,com.google.gson.Gson,org.waveprotocol.wave.communication.json.RawStringData)>($r4, $r3, r5, r6);

        virtualinvoke r2.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: void setHashedVersionAfterApplication(org.waveprotocol.wave.federation.ProtocolHashedVersion)>($r4);

     label3:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r1;
        org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl r0, $r3;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse $r2, $r4;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl;

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse getPB()>();

        $r3 = (org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl) r1;

        $r4 = virtualinvoke $r3.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse getPB()>();

        $z1 = virtualinvoke $r2.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse: boolean equals(java.lang.Object)>($r4);

        return $z1;

     label2:
        return 0;
    }

    public boolean isEqualTo(java.lang.Object)
    {
        org.waveprotocol.box.common.comms.ProtocolSubmitResponse $r2;
        java.lang.Object r1;
        org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl;

        r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = r1 instanceof org.waveprotocol.box.common.comms.ProtocolSubmitResponse;

        if $z1 == 0 goto label2;

        $r2 = (org.waveprotocol.box.common.comms.ProtocolSubmitResponse) r1;

        $z2 = staticinvoke <org.waveprotocol.box.common.comms.ProtocolSubmitResponseUtil: boolean isEqual(org.waveprotocol.box.common.comms.ProtocolSubmitResponse,org.waveprotocol.box.common.comms.ProtocolSubmitResponse)>(r0, $r2);

        return $z2;

     label2:
        return 0;
    }

    public int hashCode()
    {
        int $i0;
        org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse $r1;

        r0 := @this: org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse getPB()>();

        $i0 = virtualinvoke $r1.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        java.lang.String $r2;
        org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse $r1;

        r0 := @this: org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse getPB()>();

        $r2 = virtualinvoke $r1.<org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse: java.lang.String toString()>();

        return $r2;
    }

    public volatile org.waveprotocol.wave.federation.ProtocolHashedVersion getHashedVersionAfterApplication()
    {
        org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl $r1;
        org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl r0;

        r0 := @this: org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.wave.federation.proto.ProtocolHashedVersionProtoImpl getHashedVersionAfterApplication()>();

        return $r1;
    }

    public volatile com.google.protobuf.MessageLite getPB()
    {
        org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse $r1;

        r0 := @this: org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse getPB()>();

        return $r1;
    }

    public volatile void setPB(com.google.protobuf.MessageLite)
    {
        com.google.protobuf.MessageLite r1;
        org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl r0;
        org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse $r2;

        r0 := @this: org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl;

        r1 := @parameter0: com.google.protobuf.MessageLite;

        $r2 = (org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse) r1;

        virtualinvoke r0.<org.waveprotocol.box.common.comms.proto.ProtocolSubmitResponseProtoImpl: void setPB(org.waveprotocol.box.common.comms.WaveClientRpc$ProtocolSubmitResponse)>($r2);

        return;
    }
}
