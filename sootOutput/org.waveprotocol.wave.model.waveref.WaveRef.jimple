public final class org.waveprotocol.wave.model.waveref.WaveRef extends java.lang.Object
{
    private final org.waveprotocol.wave.model.id.WaveId waveId;
    private final org.waveprotocol.wave.model.id.WaveletId waveletId;
    private final java.lang.String documentId;

    public static org.waveprotocol.wave.model.waveref.WaveRef of(org.waveprotocol.wave.model.id.WaveId)
    {
        org.waveprotocol.wave.model.waveref.WaveRef $r1;
        org.waveprotocol.wave.model.id.WaveId r0;

        r0 := @parameter0: org.waveprotocol.wave.model.id.WaveId;

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r0, "Null wave Id");

        $r1 = new org.waveprotocol.wave.model.waveref.WaveRef;

        specialinvoke $r1.<org.waveprotocol.wave.model.waveref.WaveRef: void <init>(org.waveprotocol.wave.model.id.WaveId,org.waveprotocol.wave.model.id.WaveletId,java.lang.String)>(r0, null, null);

        return $r1;
    }

    public static org.waveprotocol.wave.model.waveref.WaveRef of(org.waveprotocol.wave.model.id.WaveId, org.waveprotocol.wave.model.id.WaveletId)
    {
        org.waveprotocol.wave.model.waveref.WaveRef $r2;
        org.waveprotocol.wave.model.id.WaveletId r1;
        org.waveprotocol.wave.model.id.WaveId r0;

        r0 := @parameter0: org.waveprotocol.wave.model.id.WaveId;

        r1 := @parameter1: org.waveprotocol.wave.model.id.WaveletId;

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r0, "Null wave Id");

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "Null wavelet Id");

        $r2 = new org.waveprotocol.wave.model.waveref.WaveRef;

        specialinvoke $r2.<org.waveprotocol.wave.model.waveref.WaveRef: void <init>(org.waveprotocol.wave.model.id.WaveId,org.waveprotocol.wave.model.id.WaveletId,java.lang.String)>(r0, r1, null);

        return $r2;
    }

    public static org.waveprotocol.wave.model.waveref.WaveRef of(org.waveprotocol.wave.model.id.WaveId, org.waveprotocol.wave.model.id.WaveletId, java.lang.String)
    {
        org.waveprotocol.wave.model.id.WaveId r0;
        org.waveprotocol.wave.model.waveref.WaveRef $r3;
        org.waveprotocol.wave.model.id.WaveletId r1;
        java.lang.String r2;

        r0 := @parameter0: org.waveprotocol.wave.model.id.WaveId;

        r1 := @parameter1: org.waveprotocol.wave.model.id.WaveletId;

        r2 := @parameter2: java.lang.String;

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r0, "Null wave Id");

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "Null wavelet Id");

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "Null blip Id");

        $r3 = new org.waveprotocol.wave.model.waveref.WaveRef;

        specialinvoke $r3.<org.waveprotocol.wave.model.waveref.WaveRef: void <init>(org.waveprotocol.wave.model.id.WaveId,org.waveprotocol.wave.model.id.WaveletId,java.lang.String)>(r0, r1, r2);

        return $r3;
    }

    private void <init>(org.waveprotocol.wave.model.id.WaveId, org.waveprotocol.wave.model.id.WaveletId, java.lang.String)
    {
        org.waveprotocol.wave.model.id.WaveId r1;
        org.waveprotocol.wave.model.waveref.WaveRef r0;
        org.waveprotocol.wave.model.id.WaveletId r2;
        java.lang.String r3;

        r0 := @this: org.waveprotocol.wave.model.waveref.WaveRef;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveId;

        r2 := @parameter1: org.waveprotocol.wave.model.id.WaveletId;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "Waveref must have non-null wave-id");

        r0.<org.waveprotocol.wave.model.waveref.WaveRef: org.waveprotocol.wave.model.id.WaveId waveId> = r1;

        r0.<org.waveprotocol.wave.model.waveref.WaveRef: org.waveprotocol.wave.model.id.WaveletId waveletId> = r2;

        if r2 == null goto label1;

        r0.<org.waveprotocol.wave.model.waveref.WaveRef: java.lang.String documentId> = r3;

        goto label2;

     label1:
        r0.<org.waveprotocol.wave.model.waveref.WaveRef: java.lang.String documentId> = null;

     label2:
        return;
    }

    public org.waveprotocol.wave.model.id.WaveId getWaveId()
    {
        org.waveprotocol.wave.model.waveref.WaveRef r0;
        org.waveprotocol.wave.model.id.WaveId $r1;

        r0 := @this: org.waveprotocol.wave.model.waveref.WaveRef;

        $r1 = r0.<org.waveprotocol.wave.model.waveref.WaveRef: org.waveprotocol.wave.model.id.WaveId waveId>;

        return $r1;
    }

    public org.waveprotocol.wave.model.id.WaveletId getWaveletId()
    {
        org.waveprotocol.wave.model.waveref.WaveRef r0;
        org.waveprotocol.wave.model.id.WaveletId $r1;

        r0 := @this: org.waveprotocol.wave.model.waveref.WaveRef;

        $r1 = r0.<org.waveprotocol.wave.model.waveref.WaveRef: org.waveprotocol.wave.model.id.WaveletId waveletId>;

        return $r1;
    }

    public java.lang.String getDocumentId()
    {
        org.waveprotocol.wave.model.waveref.WaveRef r0;
        java.lang.String $r1;

        r0 := @this: org.waveprotocol.wave.model.waveref.WaveRef;

        $r1 = r0.<org.waveprotocol.wave.model.waveref.WaveRef: java.lang.String documentId>;

        return $r1;
    }

    public boolean hasWaveletId()
    {
        org.waveprotocol.wave.model.waveref.WaveRef r0;
        org.waveprotocol.wave.model.id.WaveletId $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.waveref.WaveRef;

        $r1 = r0.<org.waveprotocol.wave.model.waveref.WaveRef: org.waveprotocol.wave.model.id.WaveletId waveletId>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasDocumentId()
    {
        org.waveprotocol.wave.model.waveref.WaveRef r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.waveref.WaveRef;

        $r1 = r0.<org.waveprotocol.wave.model.waveref.WaveRef: java.lang.String documentId>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        org.waveprotocol.wave.model.id.WaveId $r3, $r4;
        org.waveprotocol.wave.model.waveref.WaveRef r0, r2;
        org.waveprotocol.wave.model.id.WaveletId $r5, $r6;
        java.lang.Object r1;
        java.lang.String $r7, $r8;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.waveprotocol.wave.model.waveref.WaveRef;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.waveprotocol.wave.model.waveref.WaveRef;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.waveprotocol.wave.model.waveref.WaveRef) r1;

        $r3 = r0.<org.waveprotocol.wave.model.waveref.WaveRef: org.waveprotocol.wave.model.id.WaveId waveId>;

        $r4 = virtualinvoke r2.<org.waveprotocol.wave.model.waveref.WaveRef: org.waveprotocol.wave.model.id.WaveId getWaveId()>();

        $z1 = staticinvoke <org.waveprotocol.wave.model.util.ValueUtils: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $z1 == 0 goto label3;

        $r5 = r0.<org.waveprotocol.wave.model.waveref.WaveRef: org.waveprotocol.wave.model.id.WaveletId waveletId>;

        $r6 = virtualinvoke r2.<org.waveprotocol.wave.model.waveref.WaveRef: org.waveprotocol.wave.model.id.WaveletId getWaveletId()>();

        $z2 = staticinvoke <org.waveprotocol.wave.model.util.ValueUtils: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6);

        if $z2 == 0 goto label3;

        $r7 = r0.<org.waveprotocol.wave.model.waveref.WaveRef: java.lang.String documentId>;

        $r8 = virtualinvoke r2.<org.waveprotocol.wave.model.waveref.WaveRef: java.lang.String getDocumentId()>();

        $z3 = staticinvoke <org.waveprotocol.wave.model.util.ValueUtils: boolean equal(java.lang.Object,java.lang.Object)>($r7, $r8);

        if $z3 == 0 goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        return $z4;
    }

    public int hashCode()
    {
        org.waveprotocol.wave.model.id.WaveId $r1;
        org.waveprotocol.wave.model.waveref.WaveRef r0;
        org.waveprotocol.wave.model.id.WaveletId $r2, $r5;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String $r3, $r4;

        r0 := @this: org.waveprotocol.wave.model.waveref.WaveRef;

        $r1 = r0.<org.waveprotocol.wave.model.waveref.WaveRef: org.waveprotocol.wave.model.id.WaveId waveId>;

        $i0 = virtualinvoke $r1.<org.waveprotocol.wave.model.id.WaveId: int hashCode()>();

        i5 = 31 + $i0;

        $r2 = r0.<org.waveprotocol.wave.model.waveref.WaveRef: org.waveprotocol.wave.model.id.WaveletId waveletId>;

        if $r2 == null goto label1;

        $i3 = 31 * i5;

        $r5 = r0.<org.waveprotocol.wave.model.waveref.WaveRef: org.waveprotocol.wave.model.id.WaveletId waveletId>;

        $i4 = virtualinvoke $r5.<org.waveprotocol.wave.model.id.WaveletId: int hashCode()>();

        i5 = $i3 + $i4;

     label1:
        $r3 = r0.<org.waveprotocol.wave.model.waveref.WaveRef: java.lang.String documentId>;

        if $r3 == null goto label2;

        $i1 = 31 * i5;

        $r4 = r0.<org.waveprotocol.wave.model.waveref.WaveRef: java.lang.String documentId>;

        $i2 = virtualinvoke $r4.<java.lang.String: int hashCode()>();

        i5 = $i1 + $i2;

     label2:
        return i5;
    }

    public java.lang.String toString()
    {
        org.waveprotocol.wave.model.id.WaveId $r2, $r10;
        org.waveprotocol.wave.model.waveref.WaveRef r1;
        org.waveprotocol.wave.model.id.WaveletId $r3, $r8;
        java.lang.StringBuilder $r0, $r5;
        java.lang.String $r4, $r6, $r7, $r9, $r11;

        r1 := @this: org.waveprotocol.wave.model.waveref.WaveRef;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("[WaveRef:");

        $r2 = r1.<org.waveprotocol.wave.model.waveref.WaveRef: org.waveprotocol.wave.model.id.WaveId waveId>;

        if $r2 == null goto label1;

        $r10 = r1.<org.waveprotocol.wave.model.waveref.WaveRef: org.waveprotocol.wave.model.id.WaveId waveId>;

        $r11 = virtualinvoke $r10.<org.waveprotocol.wave.model.id.WaveId: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

     label1:
        $r3 = r1.<org.waveprotocol.wave.model.waveref.WaveRef: org.waveprotocol.wave.model.id.WaveletId waveletId>;

        if $r3 == null goto label2;

        $r8 = r1.<org.waveprotocol.wave.model.waveref.WaveRef: org.waveprotocol.wave.model.id.WaveletId waveletId>;

        $r9 = virtualinvoke $r8.<org.waveprotocol.wave.model.id.WaveletId: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

     label2:
        $r4 = r1.<org.waveprotocol.wave.model.waveref.WaveRef: java.lang.String documentId>;

        if $r4 == null goto label3;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[documentId:");

        $r7 = r1.<org.waveprotocol.wave.model.waveref.WaveRef: java.lang.String documentId>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

     label3:
        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
}
