public final class edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary extends edu.mit.csail.sdg.alloy4compiler.ast.Expr
{
    public final edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op;
    public final edu.mit.csail.sdg.alloy4compiler.ast.Expr sub;
    private edu.mit.csail.sdg.alloy4.Pos span;

    public edu.mit.csail.sdg.alloy4.Pos span()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r1, $r2;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary r0;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r3;
        edu.mit.csail.sdg.alloy4.Pos $r4, $r5, $r6, $r7, $r8, $r9, r10;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary;

        r10 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4.Pos span>;

        if r10 != null goto label2;

        $r2 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op NOOP>;

        if $r2 != $r1 goto label1;

        $r8 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4.Pos pos>;

        $r7 = <edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos UNKNOWN>;

        if $r8 == $r7 goto label1;

        $r9 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4.Pos pos>;

        r10 = $r9;

        r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4.Pos span> = $r9;

        goto label2;

     label1:
        $r4 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4.Pos pos>;

        $r3 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $r5 = virtualinvoke $r3.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r6 = virtualinvoke $r4.<edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos merge(edu.mit.csail.sdg.alloy4.Pos)>($r5);

        r10 = $r6;

        r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4.Pos span> = $r6;

     label2:
        return r10;
    }

    public void toString(java.lang.StringBuilder, int)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r2, $r8, $r12;
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r5;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r7, $r10, $r11, $r14;
        int[] $r9;
        int i0, $i1, $i2, $i3, i4, $i6, $i8, $i10;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary r1;
        java.lang.StringBuilder r0, $r3, $r4, $r6, $r13;

        r1 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary;

        r0 := @parameter0: java.lang.StringBuilder;

        i0 := @parameter1: int;

        if i0 >= 0 goto label11;

        $r9 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$1: int[] $SwitchMap$edu$mit$csail$sdg$alloy4compiler$ast$ExprUnary$Op>;

        $r8 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $i2 = virtualinvoke $r8.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: int ordinal()>();

        $i3 = $r9[$i2];

        tableswitch($i3)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label05;
            case 6: goto label06;
            case 7: goto label07;
            case 8: goto label08;
            default: goto label09;
        };

     label01:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("some ");

        goto label10;

     label02:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lone ");

        goto label10;

     label03:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("one ");

        goto label10;

     label04:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("set ");

        goto label10;

     label05:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exactly ");

        goto label10;

     label06:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("int[");

        $r11 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $i6 = (int) -1;

        virtualinvoke $r11.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: void toString(java.lang.StringBuilder,int)>(r0, $i6);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        return;

     label07:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Int[");

        $r10 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $i8 = (int) -1;

        virtualinvoke $r10.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: void toString(java.lang.StringBuilder,int)>(r0, $i8);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        return;

     label08:
        goto label10;

     label09:
        $r12 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $r13 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label10:
        $r14 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $i10 = (int) -1;

        virtualinvoke $r14.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: void toString(java.lang.StringBuilder,int)>(r0, $i10);

        goto label14;

     label11:
        i4 = 0;

     label12:
        if i4 >= i0 goto label13;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        i4 = i4 + 1;

        goto label12;

     label13:
        $r2 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $r3 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with type=");

        $r5 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r7 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $i1 = i0 + 2;

        virtualinvoke $r7.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: void toString(java.lang.StringBuilder,int)>(r0, $i1);

     label14:
        return;
    }

    private void <init>(edu.mit.csail.sdg.alloy4.Pos, edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op, edu.mit.csail.sdg.alloy4compiler.ast.Expr, edu.mit.csail.sdg.alloy4compiler.ast.Type, long, edu.mit.csail.sdg.alloy4.JoinableList)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op r4, $r5, $r7, $r8, $r9, $r10;
        edu.mit.csail.sdg.alloy4compiler.ast.Type r3;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary r0;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r2;
        long l0;
        edu.mit.csail.sdg.alloy4.JoinableList r6;
        byte $b1;
        edu.mit.csail.sdg.alloy4.Pos r1;
        boolean $z0;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4.Pos;

        r4 := @parameter1: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op;

        r2 := @parameter2: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r3 := @parameter3: edu.mit.csail.sdg.alloy4compiler.ast.Type;

        l0 := @parameter4: long;

        r6 := @parameter5: edu.mit.csail.sdg.alloy4.JoinableList;

        $z0 = r2.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean ambiguous>;

        $r5 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op EXACTLYOF>;

        if r4 == $r5 goto label1;

        $r7 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op SOMEOF>;

        if r4 == $r7 goto label1;

        $r8 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op LONEOF>;

        if r4 == $r8 goto label1;

        $r9 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op ONEOF>;

        if r4 == $r9 goto label1;

        $r10 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op SETOF>;

        if r4 != $r10 goto label2;

     label1:
        $b1 = 1;

        goto label3;

     label2:
        $b1 = 0;

     label3:
        specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: void <init>(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,boolean,edu.mit.csail.sdg.alloy4compiler.ast.Type,int,long,edu.mit.csail.sdg.alloy4.JoinableList)>(r1, null, $z0, r3, $b1, l0, r6);

        r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4.Pos span> = null;

        r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op> = r4;

        r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub> = r2;

        return;
    }

    public boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r1, $r2, $r4, $r5, $r9, $r10;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r6, $r7, $r12, r13;
        boolean $z0, $z1, $z2, $z3, $z4;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary r0, r3, $r8, $r11;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary;

        r13 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        $r2 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op NOOP>;

        if $r2 != $r1 goto label1;

        $r12 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $z3 = virtualinvoke $r12.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r13);

        return $z3;

     label1:
        $z0 = r13 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary;

        if $z0 == 0 goto label2;

        $r8 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary) r13;

        $r10 = $r8.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $r9 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op NOOP>;

        if $r10 != $r9 goto label2;

        $r11 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary) r13;

        r13 = $r11.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        goto label1;

     label2:
        if r13 != r0 goto label3;

        return 1;

     label3:
        $z1 = r13 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary;

        if $z1 != 0 goto label4;

        return 0;

     label4:
        r3 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary) r13;

        $r5 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $r4 = r3.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        if $r5 != $r4 goto label5;

        $r7 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $r6 = r3.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $z2 = virtualinvoke $r7.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r6);

        if $z2 == 0 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        return $z4;
    }

    public edu.mit.csail.sdg.alloy4compiler.ast.Expr resolve(edu.mit.csail.sdg.alloy4compiler.ast.Type, java.util.Collection)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r3, $r13, $r29, $r30, $r64, $r65;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary r0;
        java.lang.StringBuilder $r18, $r19, $r20, $r21, $r25, $r35, $r37, $r38, $r42, $r54, $r55, $r59;
        long $l3, $l4, $l5;
        java.lang.String $r26, $r43, $r60;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r6, $r10, $r11, $r16, $r22, $r27, $r39, $r44, $r46, $r52, $r56, $r67, $r68, $r69;
        int[] $r4;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig $r47;
        boolean $z0, $z1, $z2;
        java.util.Collection r5;
        edu.mit.csail.sdg.alloy4.Pos $r12, $r17, $r36, $r53;
        edu.mit.csail.sdg.alloy4compiler.ast.Type r2, $r7, $r8, $r9, $r14, $r23, $r24, $r28, $r31, $r32, $r33, $r40, $r41, $r45, $r48, $r49, $r50, $r57, $r58, r63, $r66;
        edu.mit.csail.sdg.alloy4.ErrorWarning $r15, $r34, $r51, r61, r62;
        edu.mit.csail.sdg.alloy4.JoinableList $r1;
        int $i0, $i1, $i2;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary;

        r2 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Type;

        r5 := @parameter1: java.util.Collection;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4.JoinableList errors>;

        $i0 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4.JoinableList: int size()>();

        if $i0 <= 0 goto label01;

        return r0;

     label01:
        r61 = null;

        r62 = null;

        r63 = r2;

        $r4 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$1: int[] $SwitchMap$edu$mit$csail$sdg$alloy4compiler$ast$ExprUnary$Op>;

        $r3 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $i1 = virtualinvoke $r3.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: int ordinal()>();

        $i2 = $r4[$i1];

        tableswitch($i2)
        {
            case 6: goto label09;
            case 7: goto label08;
            case 8: goto label10;
            case 9: goto label02;
            case 10: goto label07;
            case 11: goto label07;
            case 12: goto label07;
            case 13: goto label07;
            case 14: goto label03;
            case 15: goto label03;
            case 16: goto label03;
            case 17: goto label07;
            default: goto label10;
        };

     label02:
        r63 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type FORMULA>;

        goto label10;

     label03:
        if r5 == null goto label04;

        $r30 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $r29 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op TRANSPOSE>;

        if $r30 == $r29 goto label04;

        $r32 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r31 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r33 = virtualinvoke $r32.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type join(edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r31);

        $z1 = virtualinvoke $r33.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasNoTuple()>();

        if $z1 == 0 goto label04;

        $r34 = new edu.mit.csail.sdg.alloy4.ErrorWarning;

        $r36 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4.Pos pos>;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is redundant since its domain and range are disjoint: ");

        $r39 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $r40 = $r39.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r41 = virtualinvoke $r40.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type extract(int)>(2);

        $r42 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r34.<edu.mit.csail.sdg.alloy4.ErrorWarning: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r36, $r43);

        r61 = $r34;

     label04:
        $r64 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $r65 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op TRANSPOSE>;

        if $r64 == $r65 goto label05;

        $r27 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $r28 = $r27.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r66 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Type resolveClosure(edu.mit.csail.sdg.alloy4compiler.ast.Type,edu.mit.csail.sdg.alloy4compiler.ast.Type)>(r2, $r28);

        goto label06;

     label05:
        $r6 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $r7 = $r6.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r8 = virtualinvoke $r7.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type transpose()>();

        $r9 = virtualinvoke $r8.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type intersect(edu.mit.csail.sdg.alloy4compiler.ast.Type)>(r2);

        $r66 = virtualinvoke $r9.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type transpose()>();

     label06:
        r63 = $r66;

        if r5 == null goto label10;

        $r14 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        if $r66 != $r14 goto label10;

        $z0 = virtualinvoke r2.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasTuple()>();

        if $z0 == 0 goto label10;

        $r15 = new edu.mit.csail.sdg.alloy4.ErrorWarning;

        $r16 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $r17 = virtualinvoke $r16.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The value of this expression does not contribute to the value of the parent.\nParent\'s relevant type = ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nThis expression\'s type = ");

        $r22 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $r23 = $r22.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r24 = virtualinvoke $r23.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type extract(int)>(2);

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<edu.mit.csail.sdg.alloy4.ErrorWarning: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r17, $r26);

        r62 = $r15;

        goto label10;

     label07:
        $r44 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $r45 = $r44.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        r63 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type removesBoolAndInt(edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r45);

        goto label10;

     label08:
        r63 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type INT>;

        goto label10;

     label09:
        $r46 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $r49 = $r46.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r47 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig SIGINT>;

        $r48 = $r47.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r50 = virtualinvoke $r49.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type intersect(edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r48);

        r63 = $r50;

        if r5 == null goto label10;

        $z2 = virtualinvoke $r50.<edu.mit.csail.sdg.alloy4compiler.ast.Type: boolean hasNoTuple()>();

        if $z2 == 0 goto label10;

        $r51 = new edu.mit.csail.sdg.alloy4.ErrorWarning;

        $r52 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $r53 = virtualinvoke $r52.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4.Pos span()>();

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This expression should contain Int atoms.\nInstead, its possible type(s) are:\n");

        $r56 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $r57 = $r56.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r58 = virtualinvoke $r57.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type extract(int)>(1);

        $r59 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r58);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r51.<edu.mit.csail.sdg.alloy4.ErrorWarning: void <init>(edu.mit.csail.sdg.alloy4.Pos,java.lang.String)>($r53, $r60);

        r61 = $r51;

     label10:
        $r67 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $r68 = virtualinvoke $r67.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr resolve(edu.mit.csail.sdg.alloy4compiler.ast.Type,java.util.Collection)>(r63, r5);

        if r61 == null goto label11;

        interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>(r61);

     label11:
        if r62 == null goto label12;

        interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>(r62);

     label12:
        $r10 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        if $r68 != $r10 goto label13;

        $r69 = r0;

        goto label14;

     label13:
        $r13 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $r12 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4.Pos pos>;

        $l4 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: long weight>;

        $r11 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $l3 = $r11.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: long weight>;

        $l5 = $l4 - $l3;

        $r69 = virtualinvoke $r13.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.Expr make(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4.Err,long)>($r12, $r68, null, $l5);

     label14:
        return $r69;
    }

    private static edu.mit.csail.sdg.alloy4compiler.ast.Type resolveClosure(edu.mit.csail.sdg.alloy4compiler.ast.Type, edu.mit.csail.sdg.alloy4compiler.ast.Type)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig $r9, $r10, $r14, $r15, $r17, $r18, $r27, $r28, r30, r31, r33, r34;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        edu.mit.csail.sdg.alloy4compiler.ast.Type r2, r5, r35;
        int $i0, $i1, $i2, $i3;
        java.util.LinkedHashSet $r0;
        edu.mit.csail.sdg.alloy4.DirectedGraph $r1;
        java.util.Iterator $r3, $r4, $r6, $r7, $r11, $r19, $r21, $r24;
        edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType r13, r29, r32, r36;
        java.lang.Object $r8, $r12, $r16, $r20, $r22, $r23, $r25, $r26;

        r5 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Type;

        r2 := @parameter1: edu.mit.csail.sdg.alloy4compiler.ast.Type;

        $r0 = new java.util.LinkedHashSet;

        specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>();

        $r1 = new edu.mit.csail.sdg.alloy4.DirectedGraph;

        specialinvoke $r1.<edu.mit.csail.sdg.alloy4.DirectedGraph: void <init>()>();

        $r3 = virtualinvoke r2.<edu.mit.csail.sdg.alloy4compiler.ast.Type: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r26 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r29 = (edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType) $r26;

        $i3 = virtualinvoke r29.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: int arity()>();

        if $i3 != 2 goto label02;

        $r27 = virtualinvoke r29.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig get(int)>(0);

        $r28 = virtualinvoke r29.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig get(int)>(1);

        virtualinvoke $r0.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r27);

        virtualinvoke $r0.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r28);

        virtualinvoke $r1.<edu.mit.csail.sdg.alloy4.DirectedGraph: void addEdge(java.lang.Object,java.lang.Object)>($r27, $r28);

     label02:
        goto label01;

     label03:
        $r4 = virtualinvoke $r0.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r23 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r30 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) $r23;

        $r24 = virtualinvoke $r0.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label05:
        $z13 = interfaceinvoke $r24.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label07;

        $r25 = interfaceinvoke $r24.<java.util.Iterator: java.lang.Object next()>();

        r31 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) $r25;

        if r30 == r31 goto label06;

        $z14 = virtualinvoke r30.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: boolean intersects(edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig)>(r31);

        if $z14 == 0 goto label06;

        virtualinvoke $r1.<edu.mit.csail.sdg.alloy4.DirectedGraph: void addEdge(java.lang.Object,java.lang.Object)>(r30, r31);

     label06:
        goto label05;

     label07:
        goto label04;

     label08:
        $r6 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.ast.Type: java.util.Iterator iterator()>();

     label09:
        $z2 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label18;

        $r16 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r32 = (edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType) $r16;

        $i2 = virtualinvoke r32.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: int arity()>();

        if $i2 != 2 goto label17;

        $r17 = virtualinvoke r32.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig get(int)>(0);

        $r18 = virtualinvoke r32.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig get(int)>(1);

        $z7 = virtualinvoke $r0.<java.util.LinkedHashSet: boolean contains(java.lang.Object)>($r17);

        if $z7 != 0 goto label13;

        $r21 = virtualinvoke $r0.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label10:
        $z11 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label12;

        $r22 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r33 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) $r22;

        $z12 = virtualinvoke $r17.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: boolean intersects(edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig)>(r33);

        if $z12 == 0 goto label11;

        virtualinvoke $r1.<edu.mit.csail.sdg.alloy4.DirectedGraph: void addEdge(java.lang.Object,java.lang.Object)>($r17, r33);

        virtualinvoke $r1.<edu.mit.csail.sdg.alloy4.DirectedGraph: void addEdge(java.lang.Object,java.lang.Object)>(r33, $r17);

     label11:
        goto label10;

     label12:
        virtualinvoke $r0.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r17);

     label13:
        $z8 = virtualinvoke $r0.<java.util.LinkedHashSet: boolean contains(java.lang.Object)>($r18);

        if $z8 != 0 goto label17;

        $r19 = virtualinvoke $r0.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label14:
        $z9 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label16;

        $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r34 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) $r20;

        $z10 = virtualinvoke $r18.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: boolean intersects(edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig)>(r34);

        if $z10 == 0 goto label15;

        virtualinvoke $r1.<edu.mit.csail.sdg.alloy4.DirectedGraph: void addEdge(java.lang.Object,java.lang.Object)>($r18, r34);

        virtualinvoke $r1.<edu.mit.csail.sdg.alloy4.DirectedGraph: void addEdge(java.lang.Object,java.lang.Object)>(r34, $r18);

     label15:
        goto label14;

     label16:
        virtualinvoke $r0.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r18);

     label17:
        goto label09;

     label18:
        r35 = <edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type EMPTY>;

        $r7 = virtualinvoke r2.<edu.mit.csail.sdg.alloy4compiler.ast.Type: java.util.Iterator iterator()>();

     label19:
        $z3 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label23;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r36 = (edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType) $r8;

        $i0 = virtualinvoke r36.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: int arity()>();

        if $i0 != 2 goto label22;

        $r9 = virtualinvoke r36.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig get(int)>(0);

        $r10 = virtualinvoke r36.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig get(int)>(1);

        $r11 = virtualinvoke r5.<edu.mit.csail.sdg.alloy4compiler.ast.Type: java.util.Iterator iterator()>();

     label20:
        $z4 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label22;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType) $r12;

        $i1 = virtualinvoke r13.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: int arity()>();

        if $i1 != 2 goto label21;

        $r14 = virtualinvoke r13.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig get(int)>(0);

        $r15 = virtualinvoke r13.<edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig get(int)>(1);

        $z5 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4.DirectedGraph: boolean hasPath(java.lang.Object,java.lang.Object)>($r14, $r9);

        if $z5 == 0 goto label21;

        $z6 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4.DirectedGraph: boolean hasPath(java.lang.Object,java.lang.Object)>($r10, $r15);

        if $z6 == 0 goto label21;

        r35 = virtualinvoke r35.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type merge(edu.mit.csail.sdg.alloy4compiler.ast.Type$ProductType)>(r36);

        goto label22;

     label21:
        goto label20;

     label22:
        goto label19;

     label23:
        return r35;
    }

    public int getDepth()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary r0;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r1;
        int $i0, $i1;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary;

        $r1 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $i0 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: int getDepth()>();

        $i1 = 1 + $i0;

        return $i1;
    }

    final java.lang.Object accept(edu.mit.csail.sdg.alloy4compiler.ast.VisitReturn) throws edu.mit.csail.sdg.alloy4.Err
    {
        java.lang.Object $r2;
        edu.mit.csail.sdg.alloy4compiler.ast.VisitReturn r0;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary r1;

        r1 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.VisitReturn;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.VisitReturn: java.lang.Object visit(edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary)>(r1);

        return $r2;
    }

    public java.lang.String getDescription()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r1, $r2, $r4;
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r7;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary r0;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r10;
        java.lang.StringBuilder $r3, $r5, $r6, $r8, $r9;
        java.lang.String $r11;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary;

        $r2 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op NOOP>;

        if $r2 != $r1 goto label1;

        $r10 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $r11 = virtualinvoke $r10.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: java.lang.String getDescription()>();

        goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" <i>");

        $r7 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Type type>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</i>");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return $r11;
    }

    public java.util.List getSubnodes()
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r1, $r2;
        java.util.List $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary r0;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r4, $r5;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr[] $r3;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary;

        $r2 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op NOOP>;

        if $r2 != $r1 goto label1;

        $r5 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $r6 = virtualinvoke $r5.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: java.util.List getSubnodes()>();

        goto label2;

     label1:
        $r3 = newarray (edu.mit.csail.sdg.alloy4compiler.ast.Expr)[1];

        $r4 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $r3[0] = $r4;

        $r6 = staticinvoke <edu.mit.csail.sdg.alloy4.Util: edu.mit.csail.sdg.alloy4.ConstList asList(java.lang.Object[])>($r3);

     label2:
        return $r6;
    }

    void <init>(edu.mit.csail.sdg.alloy4.Pos, edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op, edu.mit.csail.sdg.alloy4compiler.ast.Expr, edu.mit.csail.sdg.alloy4compiler.ast.Type, long, edu.mit.csail.sdg.alloy4.JoinableList, edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$1)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op r2;
        edu.mit.csail.sdg.alloy4compiler.ast.Type r4;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary r0;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r3;
        long l0;
        edu.mit.csail.sdg.alloy4.JoinableList r5;
        edu.mit.csail.sdg.alloy4.Pos r1;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$1 r6;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4.Pos;

        r2 := @parameter1: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op;

        r3 := @parameter2: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

        r4 := @parameter3: edu.mit.csail.sdg.alloy4compiler.ast.Type;

        l0 := @parameter4: long;

        r5 := @parameter5: edu.mit.csail.sdg.alloy4.JoinableList;

        r6 := @parameter6: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$1;

        specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: void <init>(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op,edu.mit.csail.sdg.alloy4compiler.ast.Expr,edu.mit.csail.sdg.alloy4compiler.ast.Type,long,edu.mit.csail.sdg.alloy4.JoinableList)>(r1, r2, r3, r4, l0, r5);

        return;
    }
}
