public class org.apache.lucene.search.IndexSearcher extends java.lang.Object
{
    final org.apache.lucene.index.IndexReader reader;
    protected final org.apache.lucene.index.IndexReaderContext readerContext;
    protected final java.util.List leafContexts;
    protected final org.apache.lucene.search.IndexSearcher$LeafSlice[] leafSlices;
    private final java.util.concurrent.ExecutorService executor;
    private static final org.apache.lucene.search.similarities.Similarity defaultSimilarity;
    private org.apache.lucene.search.similarities.Similarity similarity;
    static final boolean $assertionsDisabled;

    public static org.apache.lucene.search.similarities.Similarity getDefaultSimilarity()
    {
        org.apache.lucene.search.similarities.Similarity $r0;

        $r0 = <org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.similarities.Similarity defaultSimilarity>;

        return $r0;
    }

    public void <init>(org.apache.lucene.index.IndexReader)
    {
        org.apache.lucene.index.IndexReader r1;
        org.apache.lucene.search.IndexSearcher r0;

        r0 := @this: org.apache.lucene.search.IndexSearcher;

        r1 := @parameter0: org.apache.lucene.index.IndexReader;

        specialinvoke r0.<org.apache.lucene.search.IndexSearcher: void <init>(org.apache.lucene.index.IndexReader,java.util.concurrent.ExecutorService)>(r1, null);

        return;
    }

    public void <init>(org.apache.lucene.index.IndexReader, java.util.concurrent.ExecutorService)
    {
        org.apache.lucene.index.IndexReader r1;
        java.util.concurrent.ExecutorService r3;
        org.apache.lucene.search.IndexSearcher r0;
        org.apache.lucene.index.IndexReaderContext $r2;

        r0 := @this: org.apache.lucene.search.IndexSearcher;

        r1 := @parameter0: org.apache.lucene.index.IndexReader;

        r3 := @parameter1: java.util.concurrent.ExecutorService;

        $r2 = virtualinvoke r1.<org.apache.lucene.index.IndexReader: org.apache.lucene.index.IndexReaderContext getContext()>();

        specialinvoke r0.<org.apache.lucene.search.IndexSearcher: void <init>(org.apache.lucene.index.IndexReaderContext,java.util.concurrent.ExecutorService)>($r2, r3);

        return;
    }

    public void <init>(org.apache.lucene.index.IndexReaderContext, java.util.concurrent.ExecutorService)
    {
        java.lang.AssertionError $r7;
        org.apache.lucene.search.similarities.Similarity $r1;
        java.lang.String $r12;
        java.util.concurrent.ExecutorService r4;
        boolean $z0, $z1;
        java.util.List $r5, $r6;
        java.lang.StringBuilder $r8, $r9, $r11;
        org.apache.lucene.search.IndexSearcher$LeafSlice[] $r13;
        org.apache.lucene.index.IndexReader $r3, $r10;
        org.apache.lucene.search.IndexSearcher r0;
        org.apache.lucene.index.IndexReaderContext r2;

        r0 := @this: org.apache.lucene.search.IndexSearcher;

        r2 := @parameter0: org.apache.lucene.index.IndexReaderContext;

        r4 := @parameter1: java.util.concurrent.ExecutorService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.similarities.Similarity defaultSimilarity>;

        r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.similarities.Similarity similarity> = $r1;

        $z0 = <org.apache.lucene.search.IndexSearcher: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = r2.<org.apache.lucene.index.IndexReaderContext: boolean isTopLevel>;

        if $z1 != 0 goto label1;

        $r7 = new java.lang.AssertionError;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IndexSearcher\'s ReaderContext must be topLevel for reader");

        $r10 = virtualinvoke r2.<org.apache.lucene.index.IndexReaderContext: org.apache.lucene.index.IndexReader reader()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>($r12);

        throw $r7;

     label1:
        $r3 = virtualinvoke r2.<org.apache.lucene.index.IndexReaderContext: org.apache.lucene.index.IndexReader reader()>();

        r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.index.IndexReader reader> = $r3;

        r0.<org.apache.lucene.search.IndexSearcher: java.util.concurrent.ExecutorService executor> = r4;

        r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.index.IndexReaderContext readerContext> = r2;

        $r5 = virtualinvoke r2.<org.apache.lucene.index.IndexReaderContext: java.util.List leaves()>();

        r0.<org.apache.lucene.search.IndexSearcher: java.util.List leafContexts> = $r5;

        if r4 != null goto label2;

        $r13 = null;

        goto label3;

     label2:
        $r6 = r0.<org.apache.lucene.search.IndexSearcher: java.util.List leafContexts>;

        $r13 = virtualinvoke r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.IndexSearcher$LeafSlice[] slices(java.util.List)>($r6);

     label3:
        r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.IndexSearcher$LeafSlice[] leafSlices> = $r13;

        return;
    }

    public void <init>(org.apache.lucene.index.IndexReaderContext)
    {
        org.apache.lucene.search.IndexSearcher r0;
        org.apache.lucene.index.IndexReaderContext r1;

        r0 := @this: org.apache.lucene.search.IndexSearcher;

        r1 := @parameter0: org.apache.lucene.index.IndexReaderContext;

        specialinvoke r0.<org.apache.lucene.search.IndexSearcher: void <init>(org.apache.lucene.index.IndexReaderContext,java.util.concurrent.ExecutorService)>(r1, null);

        return;
    }

    protected org.apache.lucene.search.IndexSearcher$LeafSlice[] slices(java.util.List)
    {
        org.apache.lucene.search.IndexSearcher$LeafSlice $r2;
        org.apache.lucene.index.AtomicReaderContext[] $r3;
        java.util.List r0;
        int $i0, $i1, i2;
        java.lang.Object $r4;
        org.apache.lucene.search.IndexSearcher$LeafSlice[] r1;
        org.apache.lucene.index.AtomicReaderContext $r5;
        org.apache.lucene.search.IndexSearcher r6;

        r6 := @this: org.apache.lucene.search.IndexSearcher;

        r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        r1 = newarray (org.apache.lucene.search.IndexSearcher$LeafSlice)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label2;

        $r2 = new org.apache.lucene.search.IndexSearcher$LeafSlice;

        $r3 = newarray (org.apache.lucene.index.AtomicReaderContext)[1];

        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);

        $r5 = (org.apache.lucene.index.AtomicReaderContext) $r4;

        $r3[0] = $r5;

        specialinvoke $r2.<org.apache.lucene.search.IndexSearcher$LeafSlice: void <init>(org.apache.lucene.index.AtomicReaderContext[])>($r3);

        r1[i2] = $r2;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }

    public org.apache.lucene.index.IndexReader getIndexReader()
    {
        org.apache.lucene.index.IndexReader $r1;
        org.apache.lucene.search.IndexSearcher r0;

        r0 := @this: org.apache.lucene.search.IndexSearcher;

        $r1 = r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.index.IndexReader reader>;

        return $r1;
    }

    public org.apache.lucene.document.Document doc(int) throws java.io.IOException
    {
        org.apache.lucene.document.Document $r2;
        int i0;
        org.apache.lucene.index.IndexReader $r1;
        org.apache.lucene.search.IndexSearcher r0;

        r0 := @this: org.apache.lucene.search.IndexSearcher;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.index.IndexReader reader>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.index.IndexReader: org.apache.lucene.document.Document document(int)>(i0);

        return $r2;
    }

    public void doc(int, org.apache.lucene.index.StoredFieldVisitor) throws java.io.IOException
    {
        int i0;
        org.apache.lucene.index.StoredFieldVisitor r1;
        org.apache.lucene.index.IndexReader $r2;
        org.apache.lucene.search.IndexSearcher r0;

        r0 := @this: org.apache.lucene.search.IndexSearcher;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.lucene.index.StoredFieldVisitor;

        $r2 = r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.index.IndexReader reader>;

        virtualinvoke $r2.<org.apache.lucene.index.IndexReader: void document(int,org.apache.lucene.index.StoredFieldVisitor)>(i0, r1);

        return;
    }

    public org.apache.lucene.document.Document doc(int, java.util.Set) throws java.io.IOException
    {
        org.apache.lucene.document.Document $r3;
        int i0;
        java.util.Set r1;
        org.apache.lucene.index.IndexReader $r2;
        org.apache.lucene.search.IndexSearcher r0;

        r0 := @this: org.apache.lucene.search.IndexSearcher;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Set;

        $r2 = r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.index.IndexReader reader>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.IndexReader: org.apache.lucene.document.Document document(int,java.util.Set)>(i0, r1);

        return $r3;
    }

    public final org.apache.lucene.document.Document document(int, java.util.Set) throws java.io.IOException
    {
        org.apache.lucene.document.Document $r2;
        int i0;
        java.util.Set r1;
        org.apache.lucene.search.IndexSearcher r0;

        r0 := @this: org.apache.lucene.search.IndexSearcher;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Set;

        $r2 = virtualinvoke r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.document.Document doc(int,java.util.Set)>(i0, r1);

        return $r2;
    }

    public void setSimilarity(org.apache.lucene.search.similarities.Similarity)
    {
        org.apache.lucene.search.IndexSearcher r0;
        org.apache.lucene.search.similarities.Similarity r1;

        r0 := @this: org.apache.lucene.search.IndexSearcher;

        r1 := @parameter0: org.apache.lucene.search.similarities.Similarity;

        r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.similarities.Similarity similarity> = r1;

        return;
    }

    public org.apache.lucene.search.similarities.Similarity getSimilarity()
    {
        org.apache.lucene.search.IndexSearcher r0;
        org.apache.lucene.search.similarities.Similarity $r1;

        r0 := @this: org.apache.lucene.search.IndexSearcher;

        $r1 = r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.similarities.Similarity similarity>;

        return $r1;
    }

    protected org.apache.lucene.search.Query wrapFilter(org.apache.lucene.search.Query, org.apache.lucene.search.Filter)
    {
        org.apache.lucene.search.Filter r0;
        org.apache.lucene.search.Query r1, $r3;
        org.apache.lucene.search.FilteredQuery $r4;
        org.apache.lucene.search.IndexSearcher r2;

        r2 := @this: org.apache.lucene.search.IndexSearcher;

        r1 := @parameter0: org.apache.lucene.search.Query;

        r0 := @parameter1: org.apache.lucene.search.Filter;

        if r0 != null goto label1;

        $r3 = r1;

        goto label2;

     label1:
        $r4 = new org.apache.lucene.search.FilteredQuery;

        $r3 = $r4;

        specialinvoke $r4.<org.apache.lucene.search.FilteredQuery: void <init>(org.apache.lucene.search.Query,org.apache.lucene.search.Filter)>(r1, r0);

     label2:
        return $r3;
    }

    public org.apache.lucene.search.TopDocs searchAfter(org.apache.lucene.search.ScoreDoc, org.apache.lucene.search.Query, int) throws java.io.IOException
    {
        org.apache.lucene.search.Query r1;
        org.apache.lucene.search.TopDocs $r4;
        org.apache.lucene.search.ScoreDoc r3;
        org.apache.lucene.search.Weight $r2;
        int i0;
        org.apache.lucene.search.IndexSearcher r0;

        r0 := @this: org.apache.lucene.search.IndexSearcher;

        r3 := @parameter0: org.apache.lucene.search.ScoreDoc;

        r1 := @parameter1: org.apache.lucene.search.Query;

        i0 := @parameter2: int;

        $r2 = virtualinvoke r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.Weight createNormalizedWeight(org.apache.lucene.search.Query)>(r1);

        $r4 = virtualinvoke r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.TopDocs search(org.apache.lucene.search.Weight,org.apache.lucene.search.ScoreDoc,int)>($r2, r3, i0);

        return $r4;
    }

    public org.apache.lucene.search.TopDocs searchAfter(org.apache.lucene.search.ScoreDoc, org.apache.lucene.search.Query, org.apache.lucene.search.Filter, int) throws java.io.IOException
    {
        org.apache.lucene.search.Query r1, $r3;
        org.apache.lucene.search.TopDocs $r6;
        org.apache.lucene.search.ScoreDoc r5;
        org.apache.lucene.search.Weight $r4;
        org.apache.lucene.search.Filter r2;
        int i0;
        org.apache.lucene.search.IndexSearcher r0;

        r0 := @this: org.apache.lucene.search.IndexSearcher;

        r5 := @parameter0: org.apache.lucene.search.ScoreDoc;

        r1 := @parameter1: org.apache.lucene.search.Query;

        r2 := @parameter2: org.apache.lucene.search.Filter;

        i0 := @parameter3: int;

        $r3 = virtualinvoke r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.Query wrapFilter(org.apache.lucene.search.Query,org.apache.lucene.search.Filter)>(r1, r2);

        $r4 = virtualinvoke r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.Weight createNormalizedWeight(org.apache.lucene.search.Query)>($r3);

        $r6 = virtualinvoke r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.TopDocs search(org.apache.lucene.search.Weight,org.apache.lucene.search.ScoreDoc,int)>($r4, r5, i0);

        return $r6;
    }

    public org.apache.lucene.search.TopDocs search(org.apache.lucene.search.Query, int) throws java.io.IOException
    {
        org.apache.lucene.search.Query r1;
        org.apache.lucene.search.TopDocs $r2;
        int i0;
        org.apache.lucene.search.IndexSearcher r0;

        r0 := @this: org.apache.lucene.search.IndexSearcher;

        r1 := @parameter0: org.apache.lucene.search.Query;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.TopDocs search(org.apache.lucene.search.Query,org.apache.lucene.search.Filter,int)>(r1, null, i0);

        return $r2;
    }

    public org.apache.lucene.search.TopDocs search(org.apache.lucene.search.Query, org.apache.lucene.search.Filter, int) throws java.io.IOException
    {
        org.apache.lucene.search.Query r1, $r3;
        org.apache.lucene.search.Filter r2;
        org.apache.lucene.search.TopDocs $r5;
        org.apache.lucene.search.Weight $r4;
        int i0;
        org.apache.lucene.search.IndexSearcher r0;

        r0 := @this: org.apache.lucene.search.IndexSearcher;

        r1 := @parameter0: org.apache.lucene.search.Query;

        r2 := @parameter1: org.apache.lucene.search.Filter;

        i0 := @parameter2: int;

        $r3 = virtualinvoke r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.Query wrapFilter(org.apache.lucene.search.Query,org.apache.lucene.search.Filter)>(r1, r2);

        $r4 = virtualinvoke r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.Weight createNormalizedWeight(org.apache.lucene.search.Query)>($r3);

        $r5 = virtualinvoke r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.TopDocs search(org.apache.lucene.search.Weight,org.apache.lucene.search.ScoreDoc,int)>($r4, null, i0);

        return $r5;
    }

    public void search(org.apache.lucene.search.Query, org.apache.lucene.search.Filter, org.apache.lucene.search.Collector) throws java.io.IOException
    {
        org.apache.lucene.search.Query r1, $r4;
        org.apache.lucene.search.Filter r2;
        java.util.List $r3;
        org.apache.lucene.search.Weight $r5;
        org.apache.lucene.search.Collector r6;
        org.apache.lucene.search.IndexSearcher r0;

        r0 := @this: org.apache.lucene.search.IndexSearcher;

        r1 := @parameter0: org.apache.lucene.search.Query;

        r2 := @parameter1: org.apache.lucene.search.Filter;

        r6 := @parameter2: org.apache.lucene.search.Collector;

        $r3 = r0.<org.apache.lucene.search.IndexSearcher: java.util.List leafContexts>;

        $r4 = virtualinvoke r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.Query wrapFilter(org.apache.lucene.search.Query,org.apache.lucene.search.Filter)>(r1, r2);

        $r5 = virtualinvoke r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.Weight createNormalizedWeight(org.apache.lucene.search.Query)>($r4);

        virtualinvoke r0.<org.apache.lucene.search.IndexSearcher: void search(java.util.List,org.apache.lucene.search.Weight,org.apache.lucene.search.Collector)>($r3, $r5, r6);

        return;
    }

    public void search(org.apache.lucene.search.Query, org.apache.lucene.search.Collector) throws java.io.IOException
    {
        org.apache.lucene.search.Query r1;
        java.util.List $r2;
        org.apache.lucene.search.Weight $r3;
        org.apache.lucene.search.Collector r4;
        org.apache.lucene.search.IndexSearcher r0;

        r0 := @this: org.apache.lucene.search.IndexSearcher;

        r1 := @parameter0: org.apache.lucene.search.Query;

        r4 := @parameter1: org.apache.lucene.search.Collector;

        $r2 = r0.<org.apache.lucene.search.IndexSearcher: java.util.List leafContexts>;

        $r3 = virtualinvoke r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.Weight createNormalizedWeight(org.apache.lucene.search.Query)>(r1);

        virtualinvoke r0.<org.apache.lucene.search.IndexSearcher: void search(java.util.List,org.apache.lucene.search.Weight,org.apache.lucene.search.Collector)>($r2, $r3, r4);

        return;
    }

    public org.apache.lucene.search.TopFieldDocs search(org.apache.lucene.search.Query, org.apache.lucene.search.Filter, int, org.apache.lucene.search.Sort) throws java.io.IOException
    {
        org.apache.lucene.search.Query r1, $r3;
        org.apache.lucene.search.Sort r5;
        org.apache.lucene.search.Weight $r4;
        org.apache.lucene.search.Filter r2;
        int i0;
        org.apache.lucene.search.TopFieldDocs $r6;
        org.apache.lucene.search.IndexSearcher r0;

        r0 := @this: org.apache.lucene.search.IndexSearcher;

        r1 := @parameter0: org.apache.lucene.search.Query;

        r2 := @parameter1: org.apache.lucene.search.Filter;

        i0 := @parameter2: int;

        r5 := @parameter3: org.apache.lucene.search.Sort;

        $r3 = virtualinvoke r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.Query wrapFilter(org.apache.lucene.search.Query,org.apache.lucene.search.Filter)>(r1, r2);

        $r4 = virtualinvoke r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.Weight createNormalizedWeight(org.apache.lucene.search.Query)>($r3);

        $r6 = virtualinvoke r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.TopFieldDocs search(org.apache.lucene.search.Weight,int,org.apache.lucene.search.Sort,boolean,boolean)>($r4, i0, r5, 0, 0);

        return $r6;
    }

    public org.apache.lucene.search.TopFieldDocs search(org.apache.lucene.search.Query, org.apache.lucene.search.Filter, int, org.apache.lucene.search.Sort, boolean, boolean) throws java.io.IOException
    {
        org.apache.lucene.search.Query r1, $r3;
        org.apache.lucene.search.Sort r5;
        org.apache.lucene.search.Weight $r4;
        org.apache.lucene.search.Filter r2;
        int i0;
        org.apache.lucene.search.TopFieldDocs $r6;
        org.apache.lucene.search.IndexSearcher r0;
        boolean z0, z1;

        r0 := @this: org.apache.lucene.search.IndexSearcher;

        r1 := @parameter0: org.apache.lucene.search.Query;

        r2 := @parameter1: org.apache.lucene.search.Filter;

        i0 := @parameter2: int;

        r5 := @parameter3: org.apache.lucene.search.Sort;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        $r3 = virtualinvoke r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.Query wrapFilter(org.apache.lucene.search.Query,org.apache.lucene.search.Filter)>(r1, r2);

        $r4 = virtualinvoke r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.Weight createNormalizedWeight(org.apache.lucene.search.Query)>($r3);

        $r6 = virtualinvoke r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.TopFieldDocs search(org.apache.lucene.search.Weight,int,org.apache.lucene.search.Sort,boolean,boolean)>($r4, i0, r5, z0, z1);

        return $r6;
    }

    public org.apache.lucene.search.TopDocs searchAfter(org.apache.lucene.search.ScoreDoc, org.apache.lucene.search.Query, org.apache.lucene.search.Filter, int, org.apache.lucene.search.Sort) throws java.io.IOException
    {
        org.apache.lucene.search.Query r2, $r4;
        org.apache.lucene.search.ScoreDoc r0;
        org.apache.lucene.search.Weight $r5;
        org.apache.lucene.search.FieldDoc $r7;
        int i0;
        java.lang.String $r13;
        boolean $z0;
        org.apache.lucene.search.Sort r6;
        java.lang.IllegalArgumentException $r9;
        org.apache.lucene.search.Filter r3;
        java.lang.StringBuilder $r10, $r11, $r12;
        org.apache.lucene.search.TopFieldDocs $r8;
        org.apache.lucene.search.IndexSearcher r1;

        r1 := @this: org.apache.lucene.search.IndexSearcher;

        r0 := @parameter0: org.apache.lucene.search.ScoreDoc;

        r2 := @parameter1: org.apache.lucene.search.Query;

        r3 := @parameter2: org.apache.lucene.search.Filter;

        i0 := @parameter3: int;

        r6 := @parameter4: org.apache.lucene.search.Sort;

        if r0 == null goto label1;

        $z0 = r0 instanceof org.apache.lucene.search.FieldDoc;

        if $z0 != 0 goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("after must be a FieldDoc; got ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label1:
        $r4 = virtualinvoke r1.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.Query wrapFilter(org.apache.lucene.search.Query,org.apache.lucene.search.Filter)>(r2, r3);

        $r5 = virtualinvoke r1.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.Weight createNormalizedWeight(org.apache.lucene.search.Query)>($r4);

        $r7 = (org.apache.lucene.search.FieldDoc) r0;

        $r8 = virtualinvoke r1.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.TopFieldDocs search(org.apache.lucene.search.Weight,org.apache.lucene.search.FieldDoc,int,org.apache.lucene.search.Sort,boolean,boolean,boolean)>($r5, $r7, i0, r6, 1, 0, 0);

        return $r8;
    }

    public org.apache.lucene.search.TopFieldDocs search(org.apache.lucene.search.Query, int, org.apache.lucene.search.Sort) throws java.io.IOException
    {
        org.apache.lucene.search.Query r1;
        org.apache.lucene.search.Sort r3;
        org.apache.lucene.search.Weight $r2;
        int i0;
        org.apache.lucene.search.TopFieldDocs $r4;
        org.apache.lucene.search.IndexSearcher r0;

        r0 := @this: org.apache.lucene.search.IndexSearcher;

        r1 := @parameter0: org.apache.lucene.search.Query;

        i0 := @parameter1: int;

        r3 := @parameter2: org.apache.lucene.search.Sort;

        $r2 = virtualinvoke r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.Weight createNormalizedWeight(org.apache.lucene.search.Query)>(r1);

        $r4 = virtualinvoke r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.TopFieldDocs search(org.apache.lucene.search.Weight,int,org.apache.lucene.search.Sort,boolean,boolean)>($r2, i0, r3, 0, 0);

        return $r4;
    }

    public org.apache.lucene.search.TopDocs searchAfter(org.apache.lucene.search.ScoreDoc, org.apache.lucene.search.Query, int, org.apache.lucene.search.Sort) throws java.io.IOException
    {
        org.apache.lucene.search.Query r2;
        org.apache.lucene.search.ScoreDoc r0;
        org.apache.lucene.search.Sort r4;
        org.apache.lucene.search.Weight $r3;
        org.apache.lucene.search.FieldDoc $r5;
        java.lang.IllegalArgumentException $r7;
        int i0;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11;
        org.apache.lucene.search.TopFieldDocs $r6;
        org.apache.lucene.search.IndexSearcher r1;
        boolean $z0;

        r1 := @this: org.apache.lucene.search.IndexSearcher;

        r0 := @parameter0: org.apache.lucene.search.ScoreDoc;

        r2 := @parameter1: org.apache.lucene.search.Query;

        i0 := @parameter2: int;

        r4 := @parameter3: org.apache.lucene.search.Sort;

        if r0 == null goto label1;

        $z0 = r0 instanceof org.apache.lucene.search.FieldDoc;

        if $z0 != 0 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("after must be a FieldDoc; got ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label1:
        $r3 = virtualinvoke r1.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.Weight createNormalizedWeight(org.apache.lucene.search.Query)>(r2);

        $r5 = (org.apache.lucene.search.FieldDoc) r0;

        $r6 = virtualinvoke r1.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.TopFieldDocs search(org.apache.lucene.search.Weight,org.apache.lucene.search.FieldDoc,int,org.apache.lucene.search.Sort,boolean,boolean,boolean)>($r3, $r5, i0, r4, 1, 0, 0);

        return $r6;
    }

    public org.apache.lucene.search.TopDocs searchAfter(org.apache.lucene.search.ScoreDoc, org.apache.lucene.search.Query, org.apache.lucene.search.Filter, int, org.apache.lucene.search.Sort, boolean, boolean) throws java.io.IOException
    {
        org.apache.lucene.search.Query r2, $r4;
        org.apache.lucene.search.ScoreDoc r0;
        org.apache.lucene.search.Weight $r5;
        org.apache.lucene.search.FieldDoc $r7;
        int i0;
        java.lang.String $r13;
        boolean z0, z1, $z2;
        org.apache.lucene.search.Sort r6;
        java.lang.IllegalArgumentException $r9;
        org.apache.lucene.search.Filter r3;
        java.lang.StringBuilder $r10, $r11, $r12;
        org.apache.lucene.search.TopFieldDocs $r8;
        org.apache.lucene.search.IndexSearcher r1;

        r1 := @this: org.apache.lucene.search.IndexSearcher;

        r0 := @parameter0: org.apache.lucene.search.ScoreDoc;

        r2 := @parameter1: org.apache.lucene.search.Query;

        r3 := @parameter2: org.apache.lucene.search.Filter;

        i0 := @parameter3: int;

        r6 := @parameter4: org.apache.lucene.search.Sort;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        if r0 == null goto label1;

        $z2 = r0 instanceof org.apache.lucene.search.FieldDoc;

        if $z2 != 0 goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("after must be a FieldDoc; got ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label1:
        $r4 = virtualinvoke r1.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.Query wrapFilter(org.apache.lucene.search.Query,org.apache.lucene.search.Filter)>(r2, r3);

        $r5 = virtualinvoke r1.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.Weight createNormalizedWeight(org.apache.lucene.search.Query)>($r4);

        $r7 = (org.apache.lucene.search.FieldDoc) r0;

        $r8 = virtualinvoke r1.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.TopFieldDocs search(org.apache.lucene.search.Weight,org.apache.lucene.search.FieldDoc,int,org.apache.lucene.search.Sort,boolean,boolean,boolean)>($r5, $r7, i0, r6, 1, z0, z1);

        return $r8;
    }

    protected org.apache.lucene.search.TopDocs search(org.apache.lucene.search.Weight, org.apache.lucene.search.ScoreDoc, int) throws java.io.IOException
    {
        org.apache.lucene.search.ScoreDoc $r11, r16;
        org.apache.lucene.search.HitQueue $r22;
        org.apache.lucene.search.ScoreDoc[] r21;
        boolean $z0;
        java.util.List $r18;
        org.apache.lucene.search.IndexSearcher$ExecutionHelper $r24;
        float $f0, f1;
        org.apache.lucene.index.IndexReader $r1;
        org.apache.lucene.search.IndexSearcher r0;
        org.apache.lucene.search.IndexSearcher$LeafSlice $r17;
        org.apache.lucene.search.Weight r15;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11, $i13;
        java.util.concurrent.ExecutorService $r2, $r6;
        org.apache.lucene.search.TopDocs $r19, r20, $r26;
        java.util.Iterator $r8;
        java.util.concurrent.locks.ReentrantLock $r23;
        org.apache.lucene.search.IndexSearcher$SearcherCallableNoSort $r25;
        java.lang.Object $r10, $r12;
        org.apache.lucene.search.IndexSearcher$LeafSlice[] $r7, $r14;

        r0 := @this: org.apache.lucene.search.IndexSearcher;

        r15 := @parameter0: org.apache.lucene.search.Weight;

        r16 := @parameter1: org.apache.lucene.search.ScoreDoc;

        i7 := @parameter2: int;

        $r1 = r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.index.IndexReader reader>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.IndexReader: int maxDoc()>();

        i8 = $i0;

        if $i0 != 0 goto label1;

        i8 = 1;

     label1:
        $i1 = staticinvoke <java.lang.Math: int min(int,int)>(i7, i8);

        $r2 = r0.<org.apache.lucene.search.IndexSearcher: java.util.concurrent.ExecutorService executor>;

        if $r2 != null goto label2;

        $r18 = r0.<org.apache.lucene.search.IndexSearcher: java.util.List leafContexts>;

        $r19 = virtualinvoke r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.TopDocs search(java.util.List,org.apache.lucene.search.Weight,org.apache.lucene.search.ScoreDoc,int)>($r18, r15, r16, $i1);

        return $r19;

     label2:
        $r22 = new org.apache.lucene.search.HitQueue;

        specialinvoke $r22.<org.apache.lucene.search.HitQueue: void <init>(int,boolean)>($i1, 0);

        $r23 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r23.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        $r24 = new org.apache.lucene.search.IndexSearcher$ExecutionHelper;

        $r6 = r0.<org.apache.lucene.search.IndexSearcher: java.util.concurrent.ExecutorService executor>;

        specialinvoke $r24.<org.apache.lucene.search.IndexSearcher$ExecutionHelper: void <init>(java.util.concurrent.Executor)>($r6);

        i9 = 0;

     label3:
        $r7 = r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.IndexSearcher$LeafSlice[] leafSlices>;

        $i2 = lengthof $r7;

        if i9 >= $i2 goto label4;

        $r25 = new org.apache.lucene.search.IndexSearcher$SearcherCallableNoSort;

        $r14 = r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.IndexSearcher$LeafSlice[] leafSlices>;

        $r17 = $r14[i9];

        specialinvoke $r25.<org.apache.lucene.search.IndexSearcher$SearcherCallableNoSort: void <init>(java.util.concurrent.locks.Lock,org.apache.lucene.search.IndexSearcher,org.apache.lucene.search.IndexSearcher$LeafSlice,org.apache.lucene.search.Weight,org.apache.lucene.search.ScoreDoc,int,org.apache.lucene.search.HitQueue)>($r23, r0, $r17, r15, r16, $i1, $r22);

        virtualinvoke $r24.<org.apache.lucene.search.IndexSearcher$ExecutionHelper: void submit(java.util.concurrent.Callable)>($r25);

        i9 = i9 + 1;

        goto label3;

     label4:
        i10 = 0;

        f1 = #-InfinityF;

        $r8 = virtualinvoke $r24.<org.apache.lucene.search.IndexSearcher$ExecutionHelper: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r12 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r20 = (org.apache.lucene.search.TopDocs) $r12;

        $i5 = r20.<org.apache.lucene.search.TopDocs: int totalHits>;

        if $i5 == 0 goto label6;

        $i6 = r20.<org.apache.lucene.search.TopDocs: int totalHits>;

        i10 = i10 + $i6;

        $f0 = virtualinvoke r20.<org.apache.lucene.search.TopDocs: float getMaxScore()>();

        f1 = staticinvoke <java.lang.Math: float max(float,float)>(f1, $f0);

     label6:
        goto label5;

     label7:
        $i3 = virtualinvoke $r22.<org.apache.lucene.search.HitQueue: int size()>();

        r21 = newarray (org.apache.lucene.search.ScoreDoc)[$i3];

        $i4 = virtualinvoke $r22.<org.apache.lucene.search.HitQueue: int size()>();

        i11 = $i4 - 1;

     label8:
        if i11 < 0 goto label9;

        $r10 = virtualinvoke $r22.<org.apache.lucene.search.HitQueue: java.lang.Object pop()>();

        $r11 = (org.apache.lucene.search.ScoreDoc) $r10;

        r21[i11] = $r11;

        $i13 = (int) -1;

        i11 = i11 + $i13;

        goto label8;

     label9:
        $r26 = new org.apache.lucene.search.TopDocs;

        specialinvoke $r26.<org.apache.lucene.search.TopDocs: void <init>(int,org.apache.lucene.search.ScoreDoc[],float)>(i10, r21, f1);

        return $r26;
    }

    protected org.apache.lucene.search.TopDocs search(java.util.List, org.apache.lucene.search.Weight, org.apache.lucene.search.ScoreDoc, int) throws java.io.IOException
    {
        org.apache.lucene.search.TopDocs $r6;
        org.apache.lucene.search.ScoreDoc r2;
        org.apache.lucene.search.Weight r3;
        org.apache.lucene.search.TopScoreDocCollector $r4;
        java.util.List r5;
        int $i0, $i1, i2, i3;
        org.apache.lucene.index.IndexReader $r1;
        org.apache.lucene.search.IndexSearcher r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.search.IndexSearcher;

        r5 := @parameter0: java.util.List;

        r3 := @parameter1: org.apache.lucene.search.Weight;

        r2 := @parameter2: org.apache.lucene.search.ScoreDoc;

        i2 := @parameter3: int;

        $r1 = r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.index.IndexReader reader>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.IndexReader: int maxDoc()>();

        i3 = $i0;

        if $i0 != 0 goto label1;

        i3 = 1;

     label1:
        $i1 = staticinvoke <java.lang.Math: int min(int,int)>(i2, i3);

        $z0 = virtualinvoke r3.<org.apache.lucene.search.Weight: boolean scoresDocsOutOfOrder()>();

        if $z0 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        $r4 = staticinvoke <org.apache.lucene.search.TopScoreDocCollector: org.apache.lucene.search.TopScoreDocCollector create(int,org.apache.lucene.search.ScoreDoc,boolean)>($i1, r2, $z1);

        virtualinvoke r0.<org.apache.lucene.search.IndexSearcher: void search(java.util.List,org.apache.lucene.search.Weight,org.apache.lucene.search.Collector)>(r5, r3, $r4);

        $r6 = virtualinvoke $r4.<org.apache.lucene.search.TopScoreDocCollector: org.apache.lucene.search.TopDocs topDocs()>();

        return $r6;
    }

    protected org.apache.lucene.search.TopFieldDocs search(org.apache.lucene.search.Weight, int, org.apache.lucene.search.Sort, boolean, boolean) throws java.io.IOException
    {
        org.apache.lucene.search.Sort r2;
        org.apache.lucene.search.Weight r1;
        int i0;
        org.apache.lucene.search.TopFieldDocs $r3;
        org.apache.lucene.search.IndexSearcher r0;
        boolean z0, z1;

        r0 := @this: org.apache.lucene.search.IndexSearcher;

        r1 := @parameter0: org.apache.lucene.search.Weight;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.lucene.search.Sort;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        $r3 = virtualinvoke r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.TopFieldDocs search(org.apache.lucene.search.Weight,org.apache.lucene.search.FieldDoc,int,org.apache.lucene.search.Sort,boolean,boolean,boolean)>(r1, null, i0, r2, 1, z0, z1);

        return $r3;
    }

    protected org.apache.lucene.search.TopFieldDocs search(org.apache.lucene.search.Weight, org.apache.lucene.search.FieldDoc, int, org.apache.lucene.search.Sort, boolean, boolean, boolean) throws java.io.IOException
    {
        org.apache.lucene.search.SortField[] $r14;
        org.apache.lucene.search.FieldDoc r4;
        java.lang.NullPointerException $r23;
        org.apache.lucene.search.ScoreDoc[] $r13;
        boolean z0, z1, z2, $z3;
        org.apache.lucene.search.Sort r0;
        org.apache.lucene.search.IndexSearcher$ExecutionHelper $r7;
        java.util.List $r21;
        float $f0, $f1, f2;
        org.apache.lucene.search.TopFieldCollector $r5;
        org.apache.lucene.search.TopFieldDocs $r12, r16, $r22, r24;
        org.apache.lucene.index.IndexReader $r2;
        org.apache.lucene.search.IndexSearcher r1;
        org.apache.lucene.search.IndexSearcher$LeafSlice $r20;
        org.apache.lucene.search.Weight r19;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8;
        java.util.concurrent.ExecutorService $r3, $r8;
        org.apache.lucene.search.TopDocs $r11;
        java.util.concurrent.locks.ReentrantLock $r6;
        java.util.Iterator $r10;
        org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort $r17;
        java.lang.Object $r15;
        org.apache.lucene.search.IndexSearcher$LeafSlice[] $r9, $r18;

        r1 := @this: org.apache.lucene.search.IndexSearcher;

        r19 := @parameter0: org.apache.lucene.search.Weight;

        r4 := @parameter1: org.apache.lucene.search.FieldDoc;

        i5 := @parameter2: int;

        r0 := @parameter3: org.apache.lucene.search.Sort;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        z2 := @parameter6: boolean;

        if r0 != null goto label1;

        $r23 = new java.lang.NullPointerException;

        specialinvoke $r23.<java.lang.NullPointerException: void <init>(java.lang.String)>("Sort must not be null");

        throw $r23;

     label1:
        $r2 = r1.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.index.IndexReader reader>;

        $i0 = virtualinvoke $r2.<org.apache.lucene.index.IndexReader: int maxDoc()>();

        i6 = $i0;

        if $i0 != 0 goto label2;

        i6 = 1;

     label2:
        $i1 = staticinvoke <java.lang.Math: int min(int,int)>(i5, i6);

        $r3 = r1.<org.apache.lucene.search.IndexSearcher: java.util.concurrent.ExecutorService executor>;

        if $r3 != null goto label3;

        $r21 = r1.<org.apache.lucene.search.IndexSearcher: java.util.List leafContexts>;

        $r22 = virtualinvoke r1.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.TopFieldDocs search(java.util.List,org.apache.lucene.search.Weight,org.apache.lucene.search.FieldDoc,int,org.apache.lucene.search.Sort,boolean,boolean,boolean)>($r21, r19, r4, $i1, r0, z0, z1, z2);

        return $r22;

     label3:
        $r5 = staticinvoke <org.apache.lucene.search.TopFieldCollector: org.apache.lucene.search.TopFieldCollector create(org.apache.lucene.search.Sort,int,org.apache.lucene.search.FieldDoc,boolean,boolean,boolean,boolean)>(r0, $i1, r4, z0, z1, z2, 0);

        $r6 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r6.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        $r7 = new org.apache.lucene.search.IndexSearcher$ExecutionHelper;

        $r8 = r1.<org.apache.lucene.search.IndexSearcher: java.util.concurrent.ExecutorService executor>;

        specialinvoke $r7.<org.apache.lucene.search.IndexSearcher$ExecutionHelper: void <init>(java.util.concurrent.Executor)>($r8);

        i7 = 0;

     label4:
        $r9 = r1.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.IndexSearcher$LeafSlice[] leafSlices>;

        $i2 = lengthof $r9;

        if i7 >= $i2 goto label5;

        $r17 = new org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort;

        $r18 = r1.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.IndexSearcher$LeafSlice[] leafSlices>;

        $r20 = $r18[i7];

        specialinvoke $r17.<org.apache.lucene.search.IndexSearcher$SearcherCallableWithSort: void <init>(java.util.concurrent.locks.Lock,org.apache.lucene.search.IndexSearcher,org.apache.lucene.search.IndexSearcher$LeafSlice,org.apache.lucene.search.Weight,org.apache.lucene.search.FieldDoc,int,org.apache.lucene.search.TopFieldCollector,org.apache.lucene.search.Sort,boolean,boolean)>($r6, r1, $r20, r19, r4, $i1, $r5, r0, z1, z2);

        virtualinvoke $r7.<org.apache.lucene.search.IndexSearcher$ExecutionHelper: void submit(java.util.concurrent.Callable)>($r17);

        i7 = i7 + 1;

        goto label4;

     label5:
        i8 = 0;

        f2 = #-InfinityF;

        $r10 = virtualinvoke $r7.<org.apache.lucene.search.IndexSearcher$ExecutionHelper: java.util.Iterator iterator()>();

     label6:
        $z3 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label8;

        $r15 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r16 = (org.apache.lucene.search.TopFieldDocs) $r15;

        $i3 = r16.<org.apache.lucene.search.TopFieldDocs: int totalHits>;

        if $i3 == 0 goto label7;

        $i4 = r16.<org.apache.lucene.search.TopFieldDocs: int totalHits>;

        i8 = i8 + $i4;

        $f1 = virtualinvoke r16.<org.apache.lucene.search.TopFieldDocs: float getMaxScore()>();

        f2 = staticinvoke <java.lang.Math: float max(float,float)>(f2, $f1);

     label7:
        goto label6;

     label8:
        $r11 = virtualinvoke $r5.<org.apache.lucene.search.TopFieldCollector: org.apache.lucene.search.TopDocs topDocs()>();

        r24 = (org.apache.lucene.search.TopFieldDocs) $r11;

        $r12 = new org.apache.lucene.search.TopFieldDocs;

        $r13 = r24.<org.apache.lucene.search.TopFieldDocs: org.apache.lucene.search.ScoreDoc[] scoreDocs>;

        $r14 = r24.<org.apache.lucene.search.TopFieldDocs: org.apache.lucene.search.SortField[] fields>;

        $f0 = virtualinvoke r24.<org.apache.lucene.search.TopFieldDocs: float getMaxScore()>();

        specialinvoke $r12.<org.apache.lucene.search.TopFieldDocs: void <init>(int,org.apache.lucene.search.ScoreDoc[],org.apache.lucene.search.SortField[],float)>(i8, $r13, $r14, $f0);

        return $r12;
    }

    protected org.apache.lucene.search.TopFieldDocs search(java.util.List, org.apache.lucene.search.Weight, org.apache.lucene.search.FieldDoc, int, org.apache.lucene.search.Sort, boolean, boolean, boolean) throws java.io.IOException
    {
        org.apache.lucene.search.Weight r4;
        org.apache.lucene.search.FieldDoc r3;
        int $i0, $i1, i2, i3;
        boolean z0, z1, z2, $z3, $z4;
        org.apache.lucene.search.TopDocs $r7;
        org.apache.lucene.search.Sort r2;
        java.util.List r6;
        org.apache.lucene.search.TopFieldCollector $r5;
        org.apache.lucene.search.TopFieldDocs $r8;
        org.apache.lucene.index.IndexReader $r1;
        org.apache.lucene.search.IndexSearcher r0;

        r0 := @this: org.apache.lucene.search.IndexSearcher;

        r6 := @parameter0: java.util.List;

        r4 := @parameter1: org.apache.lucene.search.Weight;

        r3 := @parameter2: org.apache.lucene.search.FieldDoc;

        i2 := @parameter3: int;

        r2 := @parameter4: org.apache.lucene.search.Sort;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        z2 := @parameter7: boolean;

        $r1 = r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.index.IndexReader reader>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.IndexReader: int maxDoc()>();

        i3 = $i0;

        if $i0 != 0 goto label1;

        i3 = 1;

     label1:
        $i1 = staticinvoke <java.lang.Math: int min(int,int)>(i2, i3);

        $z3 = virtualinvoke r4.<org.apache.lucene.search.Weight: boolean scoresDocsOutOfOrder()>();

        if $z3 != 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        $r5 = staticinvoke <org.apache.lucene.search.TopFieldCollector: org.apache.lucene.search.TopFieldCollector create(org.apache.lucene.search.Sort,int,org.apache.lucene.search.FieldDoc,boolean,boolean,boolean,boolean)>(r2, $i1, r3, z0, z1, z2, $z4);

        virtualinvoke r0.<org.apache.lucene.search.IndexSearcher: void search(java.util.List,org.apache.lucene.search.Weight,org.apache.lucene.search.Collector)>(r6, r4, $r5);

        $r7 = virtualinvoke $r5.<org.apache.lucene.search.TopFieldCollector: org.apache.lucene.search.TopDocs topDocs()>();

        $r8 = (org.apache.lucene.search.TopFieldDocs) $r7;

        return $r8;
    }

    protected void search(java.util.List, org.apache.lucene.search.Weight, org.apache.lucene.search.Collector) throws java.io.IOException
    {
        org.apache.lucene.search.Scorer $r8;
        java.util.Iterator $r1;
        org.apache.lucene.search.Weight r5;
        org.apache.lucene.search.Collector r4;
        org.apache.lucene.search.CollectionTerminatedException $r9, $r10;
        java.util.List r0;
        java.lang.Object $r2;
        org.apache.lucene.util.Bits $r7;
        org.apache.lucene.index.AtomicReaderContext r3;
        org.apache.lucene.index.AtomicReader $r6;
        boolean $z0, $z1, $z2;
        org.apache.lucene.search.IndexSearcher r11;

        r11 := @this: org.apache.lucene.search.IndexSearcher;

        r0 := @parameter0: java.util.List;

        r5 := @parameter1: org.apache.lucene.search.Weight;

        r4 := @parameter2: org.apache.lucene.search.Collector;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label12;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.lucene.index.AtomicReaderContext) $r2;

     label02:
        virtualinvoke r4.<org.apache.lucene.search.Collector: void setNextReader(org.apache.lucene.index.AtomicReaderContext)>(r3);

     label03:
        goto label05;

     label04:
        $r10 := @caughtexception;

        goto label01;

     label05:
        $z0 = virtualinvoke r4.<org.apache.lucene.search.Collector: boolean acceptsDocsOutOfOrder()>();

        if $z0 != 0 goto label06;

        $z2 = 1;

        goto label07;

     label06:
        $z2 = 0;

     label07:
        $r6 = virtualinvoke r3.<org.apache.lucene.index.AtomicReaderContext: org.apache.lucene.index.AtomicReader reader()>();

        $r7 = virtualinvoke $r6.<org.apache.lucene.index.AtomicReader: org.apache.lucene.util.Bits getLiveDocs()>();

        $r8 = virtualinvoke r5.<org.apache.lucene.search.Weight: org.apache.lucene.search.Scorer scorer(org.apache.lucene.index.AtomicReaderContext,boolean,boolean,org.apache.lucene.util.Bits)>(r3, $z2, 1, $r7);

        if $r8 == null goto label11;

     label08:
        virtualinvoke $r8.<org.apache.lucene.search.Scorer: void score(org.apache.lucene.search.Collector)>(r4);

     label09:
        goto label11;

     label10:
        $r9 := @caughtexception;

     label11:
        goto label01;

     label12:
        return;

        catch org.apache.lucene.search.CollectionTerminatedException from label02 to label03 with label04;
        catch org.apache.lucene.search.CollectionTerminatedException from label08 to label09 with label10;
    }

    public org.apache.lucene.search.Query rewrite(org.apache.lucene.search.Query) throws java.io.IOException
    {
        org.apache.lucene.search.Query r0, r4, r5;
        org.apache.lucene.index.IndexReader $r2, $r3;
        org.apache.lucene.search.IndexSearcher r1;

        r1 := @this: org.apache.lucene.search.IndexSearcher;

        r0 := @parameter0: org.apache.lucene.search.Query;

        r4 = r0;

        $r2 = r1.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.index.IndexReader reader>;

        r5 = virtualinvoke r0.<org.apache.lucene.search.Query: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader)>($r2);

     label1:
        if r5 == r4 goto label2;

        r4 = r5;

        $r3 = r1.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.index.IndexReader reader>;

        r5 = virtualinvoke r5.<org.apache.lucene.search.Query: org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader)>($r3);

        goto label1;

     label2:
        return r4;
    }

    public org.apache.lucene.search.Explanation explain(org.apache.lucene.search.Query, int) throws java.io.IOException
    {
        org.apache.lucene.search.Query r1;
        org.apache.lucene.search.Explanation $r3;
        org.apache.lucene.search.Weight $r2;
        int i0;
        org.apache.lucene.search.IndexSearcher r0;

        r0 := @this: org.apache.lucene.search.IndexSearcher;

        r1 := @parameter0: org.apache.lucene.search.Query;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.Weight createNormalizedWeight(org.apache.lucene.search.Query)>(r1);

        $r3 = virtualinvoke r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.Explanation explain(org.apache.lucene.search.Weight,int)>($r2, i0);

        return $r3;
    }

    protected org.apache.lucene.search.Explanation explain(org.apache.lucene.search.Weight, int) throws java.io.IOException
    {
        org.apache.lucene.search.Explanation $r6;
        org.apache.lucene.search.Weight r5;
        java.util.List $r1, $r2;
        int i0, $i1, $i2, i3;
        java.lang.Object $r3;
        org.apache.lucene.index.AtomicReaderContext r4;
        org.apache.lucene.search.IndexSearcher r0;

        r0 := @this: org.apache.lucene.search.IndexSearcher;

        r5 := @parameter0: org.apache.lucene.search.Weight;

        i0 := @parameter1: int;

        $r1 = r0.<org.apache.lucene.search.IndexSearcher: java.util.List leafContexts>;

        $i1 = staticinvoke <org.apache.lucene.index.ReaderUtil: int subIndex(int,java.util.List)>(i0, $r1);

        $r2 = r0.<org.apache.lucene.search.IndexSearcher: java.util.List leafContexts>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i1);

        r4 = (org.apache.lucene.index.AtomicReaderContext) $r3;

        $i2 = r4.<org.apache.lucene.index.AtomicReaderContext: int docBase>;

        i3 = i0 - $i2;

        $r6 = virtualinvoke r5.<org.apache.lucene.search.Weight: org.apache.lucene.search.Explanation explain(org.apache.lucene.index.AtomicReaderContext,int)>(r4, i3);

        return $r6;
    }

    public org.apache.lucene.search.Weight createNormalizedWeight(org.apache.lucene.search.Query) throws java.io.IOException
    {
        org.apache.lucene.search.Query $r1, r4;
        org.apache.lucene.search.Weight $r2;
        org.apache.lucene.search.similarities.Similarity $r3;
        float $f0, $f1, f2;
        org.apache.lucene.search.IndexSearcher r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.search.IndexSearcher;

        r4 := @parameter0: org.apache.lucene.search.Query;

        $r1 = virtualinvoke r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.Query rewrite(org.apache.lucene.search.Query)>(r4);

        $r2 = virtualinvoke $r1.<org.apache.lucene.search.Query: org.apache.lucene.search.Weight createWeight(org.apache.lucene.search.IndexSearcher)>(r0);

        $f0 = virtualinvoke $r2.<org.apache.lucene.search.Weight: float getValueForNormalization()>();

        $r3 = virtualinvoke r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.similarities.Similarity getSimilarity()>();

        $f1 = virtualinvoke $r3.<org.apache.lucene.search.similarities.Similarity: float queryNorm(float)>($f0);

        f2 = $f1;

        $z0 = staticinvoke <java.lang.Float: boolean isInfinite(float)>($f1);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f1);

        if $z1 == 0 goto label2;

     label1:
        f2 = 1.0F;

     label2:
        virtualinvoke $r2.<org.apache.lucene.search.Weight: void normalize(float,float)>(f2, 1.0F);

        return $r2;
    }

    public org.apache.lucene.index.IndexReaderContext getTopReaderContext()
    {
        org.apache.lucene.search.IndexSearcher r0;
        org.apache.lucene.index.IndexReaderContext $r1;

        r0 := @this: org.apache.lucene.search.IndexSearcher;

        $r1 = r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.index.IndexReaderContext readerContext>;

        return $r1;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8;
        java.lang.String $r9;
        org.apache.lucene.index.IndexReader $r3;
        java.util.concurrent.ExecutorService $r6;
        org.apache.lucene.search.IndexSearcher r2;

        r2 := @this: org.apache.lucene.search.IndexSearcher;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IndexSearcher(");

        $r3 = r2.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.index.IndexReader reader>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; executor=");

        $r6 = r2.<org.apache.lucene.search.IndexSearcher: java.util.concurrent.ExecutorService executor>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public org.apache.lucene.search.TermStatistics termStatistics(org.apache.lucene.index.Term, org.apache.lucene.index.TermContext) throws java.io.IOException
    {
        org.apache.lucene.util.BytesRef $r2;
        org.apache.lucene.index.Term r1;
        long $l1, $l2;
        org.apache.lucene.index.TermContext r3;
        int $i0;
        org.apache.lucene.search.TermStatistics $r0;
        org.apache.lucene.search.IndexSearcher r4;

        r4 := @this: org.apache.lucene.search.IndexSearcher;

        r1 := @parameter0: org.apache.lucene.index.Term;

        r3 := @parameter1: org.apache.lucene.index.TermContext;

        $r0 = new org.apache.lucene.search.TermStatistics;

        $r2 = virtualinvoke r1.<org.apache.lucene.index.Term: org.apache.lucene.util.BytesRef bytes()>();

        $i0 = virtualinvoke r3.<org.apache.lucene.index.TermContext: int docFreq()>();

        $l1 = (long) $i0;

        $l2 = virtualinvoke r3.<org.apache.lucene.index.TermContext: long totalTermFreq()>();

        specialinvoke $r0.<org.apache.lucene.search.TermStatistics: void <init>(org.apache.lucene.util.BytesRef,long,long)>($r2, $l1, $l2);

        return $r0;
    }

    public org.apache.lucene.search.CollectionStatistics collectionStatistics(java.lang.String) throws java.io.IOException
    {
        org.apache.lucene.index.Terms $r3;
        long $l1, $l2, l4, l5;
        java.lang.AssertionError $r6;
        org.apache.lucene.search.CollectionStatistics $r4;
        int $i0, i3;
        java.lang.String r1;
        org.apache.lucene.index.IndexReader $r2, $r5;
        boolean $z0;
        org.apache.lucene.search.IndexSearcher r0;

        r0 := @this: org.apache.lucene.search.IndexSearcher;

        r1 := @parameter0: java.lang.String;

        $z0 = <org.apache.lucene.search.IndexSearcher: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r1 != null goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label1:
        $r2 = r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.index.IndexReader reader>;

        $r3 = staticinvoke <org.apache.lucene.index.MultiFields: org.apache.lucene.index.Terms getTerms(org.apache.lucene.index.IndexReader,java.lang.String)>($r2, r1);

        if $r3 != null goto label2;

        i3 = 0;

        l4 = 0L;

        l5 = 0L;

        goto label3;

     label2:
        i3 = virtualinvoke $r3.<org.apache.lucene.index.Terms: int getDocCount()>();

        l4 = virtualinvoke $r3.<org.apache.lucene.index.Terms: long getSumTotalTermFreq()>();

        l5 = virtualinvoke $r3.<org.apache.lucene.index.Terms: long getSumDocFreq()>();

     label3:
        $r4 = new org.apache.lucene.search.CollectionStatistics;

        $r5 = r0.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.index.IndexReader reader>;

        $i0 = virtualinvoke $r5.<org.apache.lucene.index.IndexReader: int maxDoc()>();

        $l2 = (long) $i0;

        $l1 = (long) i3;

        specialinvoke $r4.<org.apache.lucene.search.CollectionStatistics: void <init>(java.lang.String,long,long,long,long)>(r1, $l2, $l1, l4, l5);

        return $r4;
    }

    static void <clinit>()
    {
        org.apache.lucene.search.similarities.DefaultSimilarity $r1;
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/search/IndexSearcher;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.search.IndexSearcher: boolean $assertionsDisabled> = $z1;

        $r1 = new org.apache.lucene.search.similarities.DefaultSimilarity;

        specialinvoke $r1.<org.apache.lucene.search.similarities.DefaultSimilarity: void <init>()>();

        <org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.similarities.Similarity defaultSimilarity> = $r1;

        return;
    }
}
