public class com.google.gxp.compiler.base.AbbrExpression extends com.google.gxp.compiler.base.Expression
{
    private final com.google.gxp.compiler.base.Type type;
    private final java.lang.String name;
    private final com.google.gxp.compiler.base.Expression value;
    private final com.google.gxp.compiler.base.Expression content;

    public void <init>(com.google.gxp.compiler.base.Node, com.google.gxp.compiler.base.Type, java.lang.String, com.google.gxp.compiler.base.Expression, com.google.gxp.compiler.base.Expression)
    {
        com.google.gxp.compiler.base.Expression r2, r10, $r12, $r14;
        com.google.gxp.compiler.base.AbbrExpression r0;
        com.google.gxp.compiler.schema.Schema $r3;
        com.google.gxp.compiler.base.Type r4, $r6;
        com.google.gxp.compiler.base.Node r1;
        java.lang.Object $r5, $r8, $r11, $r13;
        java.lang.String r7, $r9;

        r0 := @this: com.google.gxp.compiler.base.AbbrExpression;

        r1 := @parameter0: com.google.gxp.compiler.base.Node;

        r4 := @parameter1: com.google.gxp.compiler.base.Type;

        r7 := @parameter2: java.lang.String;

        r10 := @parameter3: com.google.gxp.compiler.base.Expression;

        r2 := @parameter4: com.google.gxp.compiler.base.Expression;

        $r3 = virtualinvoke r2.<com.google.gxp.compiler.base.Expression: com.google.gxp.compiler.schema.Schema getSchema()>();

        specialinvoke r0.<com.google.gxp.compiler.base.Expression: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema)>(r1, $r3);

        $r5 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r4);

        $r6 = (com.google.gxp.compiler.base.Type) $r5;

        r0.<com.google.gxp.compiler.base.AbbrExpression: com.google.gxp.compiler.base.Type type> = $r6;

        $r8 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r7);

        $r9 = (java.lang.String) $r8;

        r0.<com.google.gxp.compiler.base.AbbrExpression: java.lang.String name> = $r9;

        $r11 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r10);

        $r12 = (com.google.gxp.compiler.base.Expression) $r11;

        r0.<com.google.gxp.compiler.base.AbbrExpression: com.google.gxp.compiler.base.Expression value> = $r12;

        $r13 = staticinvoke <com.google.gxp.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r14 = (com.google.gxp.compiler.base.Expression) $r13;

        r0.<com.google.gxp.compiler.base.AbbrExpression: com.google.gxp.compiler.base.Expression content> = $r14;

        return;
    }

    public com.google.gxp.compiler.base.Type getType()
    {
        com.google.gxp.compiler.base.Type $r1;
        com.google.gxp.compiler.base.AbbrExpression r0;

        r0 := @this: com.google.gxp.compiler.base.AbbrExpression;

        $r1 = r0.<com.google.gxp.compiler.base.AbbrExpression: com.google.gxp.compiler.base.Type type>;

        return $r1;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        com.google.gxp.compiler.base.AbbrExpression r0;

        r0 := @this: com.google.gxp.compiler.base.AbbrExpression;

        $r1 = r0.<com.google.gxp.compiler.base.AbbrExpression: java.lang.String name>;

        return $r1;
    }

    public com.google.gxp.compiler.base.Expression getValue()
    {
        com.google.gxp.compiler.base.Expression $r1;
        com.google.gxp.compiler.base.AbbrExpression r0;

        r0 := @this: com.google.gxp.compiler.base.AbbrExpression;

        $r1 = r0.<com.google.gxp.compiler.base.AbbrExpression: com.google.gxp.compiler.base.Expression value>;

        return $r1;
    }

    public com.google.gxp.compiler.base.Expression getContent()
    {
        com.google.gxp.compiler.base.Expression $r1;
        com.google.gxp.compiler.base.AbbrExpression r0;

        r0 := @this: com.google.gxp.compiler.base.AbbrExpression;

        $r1 = r0.<com.google.gxp.compiler.base.AbbrExpression: com.google.gxp.compiler.base.Expression content>;

        return $r1;
    }

    public com.google.gxp.compiler.base.AbbrExpression withValueAndContent(com.google.gxp.compiler.base.Expression, com.google.gxp.compiler.base.Expression)
    {
        com.google.gxp.compiler.base.Expression r1, $r2, r3, $r6;
        com.google.gxp.compiler.base.AbbrExpression r0, $r7;
        com.google.gxp.compiler.base.Type $r5;
        java.lang.String $r4;
        boolean $z0, $z1;

        r0 := @this: com.google.gxp.compiler.base.AbbrExpression;

        r1 := @parameter0: com.google.gxp.compiler.base.Expression;

        r3 := @parameter1: com.google.gxp.compiler.base.Expression;

        $r2 = r0.<com.google.gxp.compiler.base.AbbrExpression: com.google.gxp.compiler.base.Expression value>;

        $z0 = virtualinvoke $r2.<com.google.gxp.compiler.base.Expression: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r6 = r0.<com.google.gxp.compiler.base.AbbrExpression: com.google.gxp.compiler.base.Expression content>;

        $z1 = virtualinvoke $r6.<com.google.gxp.compiler.base.Expression: boolean equals(java.lang.Object)>(r3);

        if $z1 == 0 goto label1;

        $r7 = r0;

        goto label2;

     label1:
        $r7 = new com.google.gxp.compiler.base.AbbrExpression;

        $r5 = r0.<com.google.gxp.compiler.base.AbbrExpression: com.google.gxp.compiler.base.Type type>;

        $r4 = r0.<com.google.gxp.compiler.base.AbbrExpression: java.lang.String name>;

        specialinvoke $r7.<com.google.gxp.compiler.base.AbbrExpression: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.base.Type,java.lang.String,com.google.gxp.compiler.base.Expression,com.google.gxp.compiler.base.Expression)>(r0, $r5, $r4, r1, r3);

     label2:
        return $r7;
    }

    public java.lang.Object acceptVisitor(com.google.gxp.compiler.base.ExpressionVisitor)
    {
        java.lang.Object $r2;
        com.google.gxp.compiler.base.ExpressionVisitor r0;
        com.google.gxp.compiler.base.AbbrExpression r1;

        r1 := @this: com.google.gxp.compiler.base.AbbrExpression;

        r0 := @parameter0: com.google.gxp.compiler.base.ExpressionVisitor;

        $r2 = interfaceinvoke r0.<com.google.gxp.compiler.base.ExpressionVisitor: java.lang.Object visitAbbrExpression(com.google.gxp.compiler.base.AbbrExpression)>(r1);

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.gxp.compiler.base.AbbrExpression r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.google.gxp.compiler.base.AbbrExpression;

        r1 := @parameter0: java.lang.Object;

        if r0 == r1 goto label1;

        $z0 = r1 instanceof com.google.gxp.compiler.base.AbbrExpression;

        if $z0 == 0 goto label2;

        $r2 = (com.google.gxp.compiler.base.AbbrExpression) r1;

        $z1 = virtualinvoke r0.<com.google.gxp.compiler.base.AbbrExpression: boolean equals(com.google.gxp.compiler.base.AbbrExpression)>($r2);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean equals(com.google.gxp.compiler.base.AbbrExpression)
    {
        com.google.gxp.compiler.base.Expression $r6, $r7, $r8, $r9;
        java.lang.String $r4, $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.google.gxp.compiler.base.AbbrExpression r0, r1;
        com.google.gxp.compiler.base.Type $r2, $r3;

        r0 := @this: com.google.gxp.compiler.base.AbbrExpression;

        r1 := @parameter0: com.google.gxp.compiler.base.AbbrExpression;

        $z0 = virtualinvoke r0.<com.google.gxp.compiler.base.AbbrExpression: boolean equalsExpression(com.google.gxp.compiler.base.Expression)>(r1);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.google.gxp.compiler.base.AbbrExpression: com.google.gxp.compiler.base.Type getType()>();

        $r3 = virtualinvoke r1.<com.google.gxp.compiler.base.AbbrExpression: com.google.gxp.compiler.base.Type getType()>();

        $z1 = staticinvoke <com.google.gxp.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r2, $r3);

        if $z1 == 0 goto label1;

        $r4 = virtualinvoke r0.<com.google.gxp.compiler.base.AbbrExpression: java.lang.String getName()>();

        $r5 = virtualinvoke r1.<com.google.gxp.compiler.base.AbbrExpression: java.lang.String getName()>();

        $z2 = staticinvoke <com.google.gxp.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $z2 == 0 goto label1;

        $r6 = virtualinvoke r0.<com.google.gxp.compiler.base.AbbrExpression: com.google.gxp.compiler.base.Expression getValue()>();

        $r7 = virtualinvoke r1.<com.google.gxp.compiler.base.AbbrExpression: com.google.gxp.compiler.base.Expression getValue()>();

        $z3 = staticinvoke <com.google.gxp.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r6, $r7);

        if $z3 == 0 goto label1;

        $r8 = virtualinvoke r0.<com.google.gxp.compiler.base.AbbrExpression: com.google.gxp.compiler.base.Expression getContent()>();

        $r9 = virtualinvoke r1.<com.google.gxp.compiler.base.AbbrExpression: com.google.gxp.compiler.base.Expression getContent()>();

        $z4 = staticinvoke <com.google.gxp.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r8, $r9);

        if $z4 == 0 goto label1;

        $z5 = 1;

        goto label2;

     label1:
        $z5 = 0;

     label2:
        return $z5;
    }

    public int hashCode()
    {
        com.google.gxp.compiler.base.Expression $r5, $r6;
        java.lang.Object[] $r0;
        com.google.gxp.compiler.base.AbbrExpression r1;
        com.google.gxp.compiler.base.Type $r3;
        java.lang.Integer $r2;
        int $i0, $i1;
        java.lang.String $r4;

        r1 := @this: com.google.gxp.compiler.base.AbbrExpression;

        $r0 = newarray (java.lang.Object)[5];

        $i0 = virtualinvoke r1.<com.google.gxp.compiler.base.AbbrExpression: int expressionHashCode()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r0[0] = $r2;

        $r3 = virtualinvoke r1.<com.google.gxp.compiler.base.AbbrExpression: com.google.gxp.compiler.base.Type getType()>();

        $r0[1] = $r3;

        $r4 = virtualinvoke r1.<com.google.gxp.compiler.base.AbbrExpression: java.lang.String getName()>();

        $r0[2] = $r4;

        $r5 = virtualinvoke r1.<com.google.gxp.compiler.base.AbbrExpression: com.google.gxp.compiler.base.Expression getValue()>();

        $r0[3] = $r5;

        $r6 = virtualinvoke r1.<com.google.gxp.compiler.base.AbbrExpression: com.google.gxp.compiler.base.Expression getContent()>();

        $r0[4] = $r6;

        $i1 = staticinvoke <com.google.gxp.com.google.common.base.Objects: int hashCode(java.lang.Object[])>($r0);

        return $i1;
    }
}
