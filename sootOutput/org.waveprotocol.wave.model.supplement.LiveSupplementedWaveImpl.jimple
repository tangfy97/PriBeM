public final class org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl extends org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper implements org.waveprotocol.wave.model.supplement.ObservableSupplementedWave
{
    private final org.waveprotocol.wave.model.wave.opbased.ObservableWaveView wave;
    private final org.waveprotocol.wave.model.conversation.ObservableConversationView conversationView;
    private final org.waveprotocol.wave.model.util.CopyOnWriteSet listeners;
    private final org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener primitiveListener;
    private final org.waveprotocol.wave.model.wave.WaveletListener waveletListener;

    public void <init>(org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement, org.waveprotocol.wave.model.wave.opbased.ObservableWaveView, org.waveprotocol.wave.model.wave.ParticipantId, org.waveprotocol.wave.model.supplement.SupplementedWaveImpl$DefaultFollow, org.waveprotocol.wave.model.conversation.ObservableConversationView)
    {
        org.waveprotocol.wave.model.wave.ParticipantId r3;
        org.waveprotocol.wave.model.conversation.ObservableConversation r17;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener $r10;
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl r0;
        org.waveprotocol.wave.model.conversation.ObservableConversationView r2, $r12, $r13;
        boolean $z0;
        java.util.Iterator $r15;
        java.util.Collection $r14;
        org.waveprotocol.wave.model.wave.opbased.ObservableWaveView r9;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r6;
        org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement r1;
        org.waveprotocol.wave.model.supplement.SupplementedWaveImpl$DefaultFollow r4;
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl$3 $r11;
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl$2 $r8;
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl$1 $r7;
        org.waveprotocol.wave.model.supplement.SupplementedWave $r5;
        java.lang.Object $r16;

        r0 := @this: org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement;

        r9 := @parameter1: org.waveprotocol.wave.model.wave.opbased.ObservableWaveView;

        r3 := @parameter2: org.waveprotocol.wave.model.wave.ParticipantId;

        r4 := @parameter3: org.waveprotocol.wave.model.supplement.SupplementedWaveImpl$DefaultFollow;

        r2 := @parameter4: org.waveprotocol.wave.model.conversation.ObservableConversationView;

        $r5 = staticinvoke <org.waveprotocol.wave.model.supplement.SupplementedWaveImpl: org.waveprotocol.wave.model.supplement.SupplementedWave create(org.waveprotocol.wave.model.supplement.PrimitiveSupplement,org.waveprotocol.wave.model.conversation.ConversationView,org.waveprotocol.wave.model.wave.ParticipantId,org.waveprotocol.wave.model.supplement.SupplementedWaveImpl$DefaultFollow)>(r1, r2, r3, r4);

        specialinvoke r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveWrapper: void <init>(org.waveprotocol.wave.model.supplement.SupplementedWave)>($r5);

        $r6 = staticinvoke <org.waveprotocol.wave.model.util.CopyOnWriteSet: org.waveprotocol.wave.model.util.CopyOnWriteSet create()>();

        r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners> = $r6;

        $r7 = new org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl$1;

        specialinvoke $r7.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl$1: void <init>(org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl)>(r0);

        r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener primitiveListener> = $r7;

        $r8 = new org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl$2;

        specialinvoke $r8.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl$2: void <init>(org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl)>(r0);

        r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: org.waveprotocol.wave.model.wave.WaveletListener waveletListener> = $r8;

        r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: org.waveprotocol.wave.model.wave.opbased.ObservableWaveView wave> = r9;

        r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: org.waveprotocol.wave.model.conversation.ObservableConversationView conversationView> = r2;

        $r10 = r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement$Listener primitiveListener>;

        interfaceinvoke r1.<org.waveprotocol.wave.model.supplement.ObservablePrimitiveSupplement: void addListener(java.lang.Object)>($r10);

        $r11 = new org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl$3;

        specialinvoke $r11.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl$3: void <init>(org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl)>(r0);

        $r12 = r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: org.waveprotocol.wave.model.conversation.ObservableConversationView conversationView>;

        interfaceinvoke $r12.<org.waveprotocol.wave.model.conversation.ObservableConversationView: void addListener(java.lang.Object)>($r11);

        $r13 = r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: org.waveprotocol.wave.model.conversation.ObservableConversationView conversationView>;

        $r14 = interfaceinvoke $r13.<org.waveprotocol.wave.model.conversation.ObservableConversationView: java.util.Collection getConversations()>();

        $r15 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r17 = (org.waveprotocol.wave.model.conversation.ObservableConversation) $r16;

        interfaceinvoke $r11.<org.waveprotocol.wave.model.conversation.ObservableConversationView$Listener: void onConversationAdded(org.waveprotocol.wave.model.conversation.ObservableConversation)>(r17);

        goto label1;

     label2:
        return;
    }

    public void addListener(org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener)
    {
        org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener r1;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r2;
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners>;

        virtualinvoke $r2.<org.waveprotocol.wave.model.util.CopyOnWriteSet: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void removeListener(org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener)
    {
        org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener r1;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r2;
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners>;

        virtualinvoke $r2.<org.waveprotocol.wave.model.util.CopyOnWriteSet: boolean remove(java.lang.Object)>(r1);

        return;
    }

    private void triggerOnMaybeWaveletReadChanged()
    {
        org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener r4;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r1;
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl r0;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.util.CopyOnWriteSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener) $r3;

        interfaceinvoke r4.<org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener: void onMaybeWaveletReadChanged()>();

        goto label1;

     label2:
        return;
    }

    private void triggerOnMaybeBlipReadChanged(org.waveprotocol.wave.model.conversation.ObservableConversationBlip)
    {
        org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener r4;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r1;
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl r0;
        java.util.Iterator $r2;
        org.waveprotocol.wave.model.conversation.ObservableConversationBlip r5;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl;

        r5 := @parameter0: org.waveprotocol.wave.model.conversation.ObservableConversationBlip;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.util.CopyOnWriteSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener) $r3;

        interfaceinvoke r4.<org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener: void onMaybeBlipReadChanged(org.waveprotocol.wave.model.conversation.ObservableConversationBlip)>(r5);

        goto label1;

     label2:
        return;
    }

    private void triggerOnMaybeParticipantsReadChanged(org.waveprotocol.wave.model.wave.Wavelet)
    {
        org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener r4;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r1;
        org.waveprotocol.wave.model.wave.Wavelet r5;
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl r0;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl;

        r5 := @parameter0: org.waveprotocol.wave.model.wave.Wavelet;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.util.CopyOnWriteSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener) $r3;

        interfaceinvoke r4.<org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener: void onMaybeParticipantsReadChanged(org.waveprotocol.wave.model.wave.Wavelet)>(r5);

        goto label1;

     label2:
        return;
    }

    private void triggerOnMaybeTagsReadChanged(org.waveprotocol.wave.model.wave.Wavelet)
    {
        org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener r4;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r1;
        org.waveprotocol.wave.model.wave.Wavelet r5;
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl r0;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl;

        r5 := @parameter0: org.waveprotocol.wave.model.wave.Wavelet;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.util.CopyOnWriteSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener) $r3;

        interfaceinvoke r4.<org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener: void onMaybeTagsReadChanged(org.waveprotocol.wave.model.wave.Wavelet)>(r5);

        goto label1;

     label2:
        return;
    }

    private void triggerOnMaybeInboxStateChanged()
    {
        org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener r4;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r1;
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl r0;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.util.CopyOnWriteSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener) $r3;

        interfaceinvoke r4.<org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener: void onMaybeInboxStateChanged()>();

        goto label1;

     label2:
        return;
    }

    private void triggerOnMaybeFollowStateChanged()
    {
        org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener r4;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r1;
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl r0;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.util.CopyOnWriteSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener) $r3;

        interfaceinvoke r4.<org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener: void onMaybeFollowStateChanged()>();

        goto label1;

     label2:
        return;
    }

    private void triggerOnFolderAdded(int)
    {
        org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener r4;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r1;
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl r0;
        java.util.Iterator $r2;
        int i0;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl;

        i0 := @parameter0: int;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.util.CopyOnWriteSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener) $r3;

        interfaceinvoke r4.<org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener: void onFolderAdded(int)>(i0);

        goto label1;

     label2:
        return;
    }

    private void triggerOnFolderRemoved(int)
    {
        org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener r4;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r1;
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl r0;
        java.util.Iterator $r2;
        int i0;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl;

        i0 := @parameter0: int;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.util.CopyOnWriteSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener) $r3;

        interfaceinvoke r4.<org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener: void onFolderRemoved(int)>(i0);

        goto label1;

     label2:
        return;
    }

    private void triggerOnWantedEvaluationsChanged(org.waveprotocol.wave.model.id.WaveletId)
    {
        org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener r4;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r1;
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl r0;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        org.waveprotocol.wave.model.id.WaveletId r5;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl;

        r5 := @parameter0: org.waveprotocol.wave.model.id.WaveletId;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.util.CopyOnWriteSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener) $r3;

        interfaceinvoke r4.<org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener: void onWantedEvaluationsChanged(org.waveprotocol.wave.model.id.WaveletId)>(r5);

        goto label1;

     label2:
        return;
    }

    private void triggerOnThreadStateChanged(org.waveprotocol.wave.model.conversation.ObservableConversationThread)
    {
        org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener r4;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r1;
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl r0;
        java.util.Iterator $r2;
        org.waveprotocol.wave.model.conversation.ObservableConversationThread r5;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl;

        r5 := @parameter0: org.waveprotocol.wave.model.conversation.ObservableConversationThread;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.util.CopyOnWriteSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener) $r3;

        interfaceinvoke r4.<org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener: void onThreadStateChanged(org.waveprotocol.wave.model.conversation.ObservableConversationThread)>(r5);

        goto label1;

     label2:
        return;
    }

    private void triggerOnMaybeGadgetStateChanged(java.lang.String)
    {
        org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener r4;
        org.waveprotocol.wave.model.util.CopyOnWriteSet $r1;
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl r0;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        java.lang.String r5;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl;

        r5 := @parameter0: java.lang.String;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: org.waveprotocol.wave.model.util.CopyOnWriteSet listeners>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.util.CopyOnWriteSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener) $r3;

        interfaceinvoke r4.<org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener: void onMaybeGadgetStateChanged(java.lang.String)>(r5);

        goto label1;

     label2:
        return;
    }

    private org.waveprotocol.wave.model.conversation.ObservableConversationBlip getBlip(org.waveprotocol.wave.model.id.WaveletId, java.lang.String)
    {
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl r2;
        org.waveprotocol.wave.model.conversation.ObservableConversationBlip $r6;
        org.waveprotocol.wave.model.conversation.ObservableConversationView $r3;
        org.waveprotocol.wave.model.id.WaveletId r0;
        java.lang.String $r1, r5;
        org.waveprotocol.wave.model.conversation.ObservableConversation $r4;

        r2 := @this: org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl;

        r0 := @parameter0: org.waveprotocol.wave.model.id.WaveletId;

        r5 := @parameter1: java.lang.String;

        $r1 = staticinvoke <org.waveprotocol.wave.model.conversation.WaveletBasedConversation: java.lang.String idFor(org.waveprotocol.wave.model.id.WaveletId)>(r0);

        $r3 = r2.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: org.waveprotocol.wave.model.conversation.ObservableConversationView conversationView>;

        $r4 = interfaceinvoke $r3.<org.waveprotocol.wave.model.conversation.ObservableConversationView: org.waveprotocol.wave.model.conversation.ObservableConversation getConversation(java.lang.String)>($r1);

        if $r4 == null goto label1;

        $r6 = interfaceinvoke $r4.<org.waveprotocol.wave.model.conversation.ObservableConversation: org.waveprotocol.wave.model.conversation.ObservableConversationBlip getBlip(java.lang.String)>(r5);

        goto label2;

     label1:
        $r6 = null;

     label2:
        return $r6;
    }

    private void triggerOnMaybeBlipReadChanged(org.waveprotocol.wave.model.id.WaveletId, java.lang.String)
    {
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl r0;
        org.waveprotocol.wave.model.conversation.ObservableConversationBlip $r3;
        org.waveprotocol.wave.model.id.WaveletId r1;
        java.lang.String r2;

        r0 := @this: org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveletId;

        r2 := @parameter1: java.lang.String;

        $r3 = specialinvoke r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: org.waveprotocol.wave.model.conversation.ObservableConversationBlip getBlip(org.waveprotocol.wave.model.id.WaveletId,java.lang.String)>(r1, r2);

        if $r3 == null goto label1;

        specialinvoke r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: void triggerOnMaybeBlipReadChanged(org.waveprotocol.wave.model.conversation.ObservableConversationBlip)>($r3);

     label1:
        return;
    }

    public volatile void removeListener(java.lang.Object)
    {
        org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener $r2;
        java.lang.Object r1;
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener) r1;

        virtualinvoke r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: void removeListener(org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener)>($r2);

        return;
    }

    public volatile void addListener(java.lang.Object)
    {
        org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener $r2;
        java.lang.Object r1;
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener) r1;

        virtualinvoke r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: void addListener(org.waveprotocol.wave.model.supplement.ObservableSupplementedWave$Listener)>($r2);

        return;
    }

    static void access$000(org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl)
    {
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl r0;

        r0 := @parameter0: org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl;

        specialinvoke r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: void triggerOnMaybeInboxStateChanged()>();

        return;
    }

    static void access$100(org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl, int)
    {
        int i0;
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl r0;

        r0 := @parameter0: org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl;

        i0 := @parameter1: int;

        specialinvoke r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: void triggerOnFolderAdded(int)>(i0);

        return;
    }

    static void access$200(org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl, int)
    {
        int i0;
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl r0;

        r0 := @parameter0: org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl;

        i0 := @parameter1: int;

        specialinvoke r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: void triggerOnFolderRemoved(int)>(i0);

        return;
    }

    static void access$300(org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl, org.waveprotocol.wave.model.id.WaveletId, java.lang.String)
    {
        org.waveprotocol.wave.model.id.WaveletId r1;
        java.lang.String r2;
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl r0;

        r0 := @parameter0: org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl;

        r1 := @parameter1: org.waveprotocol.wave.model.id.WaveletId;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: void triggerOnMaybeBlipReadChanged(org.waveprotocol.wave.model.id.WaveletId,java.lang.String)>(r1, r2);

        return;
    }

    static org.waveprotocol.wave.model.wave.opbased.ObservableWaveView access$400(org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl)
    {
        org.waveprotocol.wave.model.wave.opbased.ObservableWaveView $r1;
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl r0;

        r0 := @parameter0: org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: org.waveprotocol.wave.model.wave.opbased.ObservableWaveView wave>;

        return $r1;
    }

    static void access$500(org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl, org.waveprotocol.wave.model.wave.Wavelet)
    {
        org.waveprotocol.wave.model.wave.Wavelet r1;
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl r0;

        r0 := @parameter0: org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl;

        r1 := @parameter1: org.waveprotocol.wave.model.wave.Wavelet;

        specialinvoke r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: void triggerOnMaybeParticipantsReadChanged(org.waveprotocol.wave.model.wave.Wavelet)>(r1);

        return;
    }

    static void access$600(org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl, org.waveprotocol.wave.model.wave.Wavelet)
    {
        org.waveprotocol.wave.model.wave.Wavelet r1;
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl r0;

        r0 := @parameter0: org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl;

        r1 := @parameter1: org.waveprotocol.wave.model.wave.Wavelet;

        specialinvoke r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: void triggerOnMaybeTagsReadChanged(org.waveprotocol.wave.model.wave.Wavelet)>(r1);

        return;
    }

    static void access$700(org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl)
    {
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl r0;

        r0 := @parameter0: org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl;

        specialinvoke r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: void triggerOnMaybeWaveletReadChanged()>();

        return;
    }

    static void access$800(org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl)
    {
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl r0;

        r0 := @parameter0: org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl;

        specialinvoke r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: void triggerOnMaybeFollowStateChanged()>();

        return;
    }

    static void access$900(org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl, org.waveprotocol.wave.model.id.WaveletId)
    {
        org.waveprotocol.wave.model.id.WaveletId r1;
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl r0;

        r0 := @parameter0: org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl;

        r1 := @parameter1: org.waveprotocol.wave.model.id.WaveletId;

        specialinvoke r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: void triggerOnWantedEvaluationsChanged(org.waveprotocol.wave.model.id.WaveletId)>(r1);

        return;
    }

    static org.waveprotocol.wave.model.conversation.ObservableConversationView access$1000(org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl)
    {
        org.waveprotocol.wave.model.conversation.ObservableConversationView $r1;
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl r0;

        r0 := @parameter0: org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: org.waveprotocol.wave.model.conversation.ObservableConversationView conversationView>;

        return $r1;
    }

    static void access$1100(org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl, org.waveprotocol.wave.model.conversation.ObservableConversationThread)
    {
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl r0;
        org.waveprotocol.wave.model.conversation.ObservableConversationThread r1;

        r0 := @parameter0: org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl;

        r1 := @parameter1: org.waveprotocol.wave.model.conversation.ObservableConversationThread;

        specialinvoke r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: void triggerOnThreadStateChanged(org.waveprotocol.wave.model.conversation.ObservableConversationThread)>(r1);

        return;
    }

    static void access$1200(org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl, java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl r0;

        r0 := @parameter0: org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: void triggerOnMaybeGadgetStateChanged(java.lang.String)>(r1);

        return;
    }

    static org.waveprotocol.wave.model.wave.WaveletListener access$1300(org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl)
    {
        org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl r0;
        org.waveprotocol.wave.model.wave.WaveletListener $r1;

        r0 := @parameter0: org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.LiveSupplementedWaveImpl: org.waveprotocol.wave.model.wave.WaveletListener waveletListener>;

        return $r1;
    }
}
