public class org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement extends org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement
{
    public org.eclipse.jdt.internal.compiler.ast.Expression expression;
    public org.eclipse.jdt.internal.compiler.ast.Block block;
    public org.eclipse.jdt.internal.compiler.lookup.BlockScope scope;
    public org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding synchroVariable;
    static final char[] SecretLocalDeclarationName;
    int preSynchronizedInitStateIndex;
    int mergedSynchronizedInitStateIndex;

    static void <clinit>()
    {
        char[] $r1;
        java.lang.String $r0;

        $r0 = " syncValue";

        $r1 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: char[] SecretLocalDeclarationName> = $r1;

        return;
    }

    public void <init>(org.eclipse.jdt.internal.compiler.ast.Expression, org.eclipse.jdt.internal.compiler.ast.Block, int, int)
    {
        org.eclipse.jdt.internal.compiler.ast.Expression r1;
        org.eclipse.jdt.internal.compiler.ast.Block r2;
        org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement r0;
        int i0, i1, $i3, $i5;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Expression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.ast.Block;

        i1 := @parameter2: int;

        i0 := @parameter3: int;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement: void <init>()>();

        $i3 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: int preSynchronizedInitStateIndex> = $i3;

        $i5 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: int mergedSynchronizedInitStateIndex> = $i5;

        r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression> = r1;

        r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.ast.Block block> = r2;

        r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: int sourceEnd> = i0;

        r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: int sourceStart> = i1;

        return;
    }

    public org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.flow.FlowContext, org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r1, $r7, $r8;
        org.eclipse.jdt.internal.compiler.ast.Block $r6;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding $r3;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo $r10, $r11, r13;
        org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext $r4;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r2, $r12;
        org.eclipse.jdt.internal.compiler.ast.Expression $r9;
        org.eclipse.jdt.internal.compiler.flow.FlowContext r5;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.flow.FlowContext;

        r13 := @parameter2: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        $r2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.MethodScope methodScope()>();

        $i0 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: int recordInitializationStates(org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r13);

        r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: int preSynchronizedInitStateIndex> = $i0;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding synchroVariable>;

        $r3.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: int useFlag> = 1;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.ast.Block block>;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        $r4 = new org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext;

        specialinvoke $r4.<org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext: void <init>(org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r5, r0);

        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        $r10 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r8, r5, r13);

        $r11 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.ast.Block: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r7, $r4, $r10);

        $r12 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.MethodScope methodScope()>();

        $i1 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: int recordInitializationStates(org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r11);

        r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: int mergedSynchronizedInitStateIndex> = $i1;

        $i2 = $r11.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: int tagBits>;

        $i3 = $i2 & 1;

        if $i3 == 0 goto label1;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: int bits>;

        $i5 = $i4 | 536870912;

        r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: int bits> = $i5;

     label1:
        return $r11;
    }

    public boolean isSubRoutineEscaping()
    {
        org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement;

        return 0;
    }

    public void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.codegen.CodeStream)
    {
        org.eclipse.jdt.internal.compiler.ast.Block $r4, $r8;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding $r5, $r6, $r14, $r16, $r17, $r18, $r20, $r25;
        org.eclipse.jdt.internal.compiler.ast.Expression $r3;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r22, $r27;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope $r2, $r7, r9, $r10, $r12, $r15, $r19, $r23, $r24;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel $r28;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i16;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r13;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r1;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r21, $r26;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement;

        r9 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: int bits>;

        $i1 = $i0 & -2147483648;

        if $i1 != 0 goto label01;

        return;

     label01:
        r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel anyExceptionLabel> = null;

        i2 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>($r2, r1, 1);

        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.ast.Block block>;

        $z0 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.ast.Block: boolean isEmptyBlock()>();

        if $z0 == 0 goto label05;

        $r20 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding synchroVariable>;

        $r22 = $r20.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $r21 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding LONG>;

        if $r22 == $r21 goto label02;

        $r25 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding synchroVariable>;

        $r27 = $r25.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $r26 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding DOUBLE>;

        if $r27 != $r26 goto label03;

     label02:
        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup2()>();

        goto label04;

     label03:
        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

     label04:
        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void monitorenter()>();

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void monitorexit()>();

        $r23 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        if $r23 == r9 goto label11;

        $r24 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void exitUserScope(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>($r24);

        goto label11;

     label05:
        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding synchroVariable>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void store(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding,boolean)>($r5, 1);

        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding synchroVariable>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void addVariable(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>($r6);

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void monitorenter()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel enterAnyExceptionHandler(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r1);

        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.ast.Block block>;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.ast.Block: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream)>($r7, r1);

        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        if $r10 == r9 goto label06;

        $r19 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        $r18 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding synchroVariable>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void exitUserScope(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>($r19, $r18);

     label06:
        $r28 = new org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        specialinvoke $r28.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void <init>(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r1);

        $i3 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: int bits>;

        $i4 = $i3 & 536870912;

        if $i4 != 0 goto label07;

        $r17 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding synchroVariable>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void load(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>($r17);

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void monitorexit()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: void exitAnyExceptionHandler()>();

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void goto_(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r28);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel enterAnyExceptionHandler(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r1);

     label07:
        $r12 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        $r13 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding getJavaLangThrowable()>();

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void pushExceptionOnStack(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r13);

        $i5 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: int preSynchronizedInitStateIndex>;

        $i14 = (int) -1;

        if $i5 == $i14 goto label08;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: int preSynchronizedInitStateIndex>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void removeNotDefinitelyAssignedVariables(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r9, $i11);

     label08:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: void placeAllAnyExceptionHandler()>();

        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding synchroVariable>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void load(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>($r14);

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void monitorexit()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: void exitAnyExceptionHandler()>();

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void athrow()>();

        $i6 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: int mergedSynchronizedInitStateIndex>;

        $i16 = (int) -1;

        if $i6 == $i16 goto label09;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: int mergedSynchronizedInitStateIndex>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void removeNotDefinitelyAssignedVariables(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r9, $i9);

        $i10 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: int mergedSynchronizedInitStateIndex>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void addDefinitelyAssignedVariables(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r9, $i10);

     label09:
        $r15 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        if $r15 == r9 goto label10;

        $r16 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding synchroVariable>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void removeVariable(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>($r16);

     label10:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: int bits>;

        $i8 = $i7 & 536870912;

        if $i8 != 0 goto label11;

        virtualinvoke $r28.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

     label11:
        $i12 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: int sourceStart>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i2, $i12);

        return;
    }

    public boolean generateSubRoutineInvocation(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.codegen.CodeStream, java.lang.Object, int, org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r3;
        org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement r1;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding $r2, r5;
        int i0;
        java.lang.Object r4;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r4 := @parameter2: java.lang.Object;

        i0 := @parameter3: int;

        r5 := @parameter4: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding synchroVariable>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void load(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>($r2);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void monitorexit()>();

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: void exitAnyExceptionHandler()>();

        return 0;
    }

    public void resolve(org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope $r1, r2, $r3, $r6, $r9, $r12, $r17, $r22, $r24;
        org.eclipse.jdt.internal.compiler.ast.Block $r23;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r7, $r10, $r13;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding $r15, $r18, $r19;
        org.eclipse.jdt.internal.compiler.ast.Expression $r4, $r8, $r11, $r14, $r21;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r5;
        int $i0;
        org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement r0;
        org.eclipse.jdt.internal.compiler.impl.Constant $r20;
        char[] $r16;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $r1 = new org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        specialinvoke $r1.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: void <init>(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r2);

        r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope> = $r1;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>($r3);

        if $r5 != null goto label1;

        return;

     label1:
        $i0 = $r5.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        tableswitch($i0)
        {
            case 2: goto label2;
            case 3: goto label2;
            case 4: goto label2;
            case 5: goto label2;
            case 6: goto label3;
            case 7: goto label2;
            case 8: goto label2;
            case 9: goto label2;
            case 10: goto label2;
            case 11: goto label5;
            case 12: goto label4;
            default: goto label5;
        };

     label2:
        $r12 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        $r13 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void invalidTypeToSynchronize(org.eclipse.jdt.internal.compiler.ast.Expression,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r14, $r5);

        goto label5;

     label3:
        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        $r10 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r11 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void illegalVoidExpression(org.eclipse.jdt.internal.compiler.ast.ASTNode)>($r11);

        goto label5;

     label4:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void invalidNullToSynchronize(org.eclipse.jdt.internal.compiler.ast.Expression)>($r8);

     label5:
        $r15 = new org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        $r16 = <org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: char[] SecretLocalDeclarationName>;

        specialinvoke $r15.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: void <init>(char[],org.eclipse.jdt.internal.compiler.lookup.TypeBinding,int,boolean)>($r16, $r5, 0, 0);

        r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding synchroVariable> = $r15;

        $r17 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        $r18 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding synchroVariable>;

        virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: void addLocalVariable(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>($r18);

        $r19 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding synchroVariable>;

        $r20 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: void setConstant(org.eclipse.jdt.internal.compiler.impl.Constant)>($r20);

        $r21 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r22 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.ast.Expression: void computeConversion(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r22, $r5, $r5);

        $r23 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.ast.Block block>;

        $r24 = r0.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        virtualinvoke $r23.<org.eclipse.jdt.internal.compiler.ast.Block: void resolveUsing(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>($r24);

        return;
    }

    public java.lang.StringBuffer printStatement(int, java.lang.StringBuffer)
    {
        org.eclipse.jdt.internal.compiler.ast.Block $r4;
        org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement r1;
        org.eclipse.jdt.internal.compiler.ast.Expression $r2;
        java.lang.StringBuffer r0, $r3, $r5;
        int i0, $i1;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.StringBuffer;

        staticinvoke <org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: java.lang.StringBuffer printIndent(int,java.lang.StringBuffer)>(i0, r0);

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("synchronized (");

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.ast.Expression: java.lang.StringBuffer printExpression(int,java.lang.StringBuffer)>(0, r0);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.ast.Block block>;

        $i1 = i0 + 1;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.ast.Block: java.lang.StringBuffer printStatement(int,java.lang.StringBuffer)>($i1, r0);

        return $r5;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2, $r3, $r5;
        org.eclipse.jdt.internal.compiler.ast.Block $r6;
        org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement r1;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.Expression $r4;
        boolean $z0;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        if $z0 == 0 goto label1;

        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.ast.Expression: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, $r3);

        $r6 = r1.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.ast.Block block>;

        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement: org.eclipse.jdt.internal.compiler.lookup.BlockScope scope>;

        virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.ast.Block: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, $r5);

     label1:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        return;
    }
}
