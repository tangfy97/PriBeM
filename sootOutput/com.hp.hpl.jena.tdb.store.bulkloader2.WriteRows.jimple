public class com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows extends java.lang.Object
{
    private java.io.OutputStream output;
    boolean atStartOfRow;
    private int itemsPerRow;
    private int rowBlock;
    private byte[] b;
    private int idx;
    private int rows;
    private int rowLength;

    void <init>(java.io.OutputStream, int, int)
    {
        java.io.OutputStream r1;
        byte[] $r2;
        int i0, $i1, $i2, i3, $i4, $i5;
        com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows r0;

        r0 := @this: com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows;

        r1 := @parameter0: java.io.OutputStream;

        i0 := @parameter1: int;

        i3 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: boolean atStartOfRow> = 1;

        r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: java.io.OutputStream output> = r1;

        r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: int itemsPerRow> = i0;

        $i1 = 16 * i0;

        $i2 = $i1 + i0;

        r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: int rowLength> = $i2;

        r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: int rowBlock> = i3;

        $i4 = r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: int rowLength>;

        $i5 = $i4 * i3;

        $r2 = newarray (byte)[$i5];

        r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: byte[] b> = $r2;

        r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: int idx> = 0;

        r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: int rows> = 0;

        return;
    }

    public void write(long)
    {
        byte[] $r1, $r2;
        long l0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows;

        l0 := @parameter0: long;

        $z0 = r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: boolean atStartOfRow>;

        if $z0 != 0 goto label1;

        $r2 = r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: byte[] b>;

        $i5 = r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: int idx>;

        $r2[$i5] = 32;

        $i6 = r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: int idx>;

        $i7 = $i6 + 1;

        r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: int idx> = $i7;

        goto label2;

     label1:
        r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: boolean atStartOfRow> = 0;

     label2:
        $i2 = r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: int idx>;

        $r1 = r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: byte[] b>;

        $i1 = r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: int idx>;

        $i3 = staticinvoke <org.apache.jena.atlas.lib.Hex: int formatUnsignedLongHex(byte[],int,long,int)>($r1, $i1, l0, 16);

        $i4 = $i2 + $i3;

        r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: int idx> = $i4;

        return;
    }

    public void endOfRow()
    {
        byte[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows r0;

        r0 := @this: com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows;

        $r1 = r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: byte[] b>;

        $i0 = r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: int idx>;

        $r1[$i0] = 10;

        $i1 = r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: int idx>;

        $i2 = $i1 + 1;

        r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: int idx> = $i2;

        r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: boolean atStartOfRow> = 1;

        $i3 = r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: int rows>;

        $i4 = $i3 + 1;

        r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: int rows> = $i4;

        $i6 = r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: int rows>;

        $i5 = r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: int rowBlock>;

        if $i6 != $i5 goto label1;

        virtualinvoke r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: void flush()>();

     label1:
        return;
    }

    public void flush()
    {
        java.io.OutputStream $r2;
        byte[] $r1;
        java.io.IOException $r3;
        org.apache.jena.atlas.AtlasException $r4;
        int $i0, $i1, $i2;
        com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows r0;

        r0 := @this: com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows;

     label1:
        $r2 = r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: java.io.OutputStream output>;

        $r1 = r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: byte[] b>;

        $i1 = r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: int rows>;

        $i0 = r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: int rowLength>;

        $i2 = $i1 * $i0;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.apache.jena.atlas.AtlasException;

        specialinvoke $r4.<org.apache.jena.atlas.AtlasException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

     label4:
        r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: int idx> = 0;

        r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: int rows> = 0;

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void close()
    {
        java.io.OutputStream $r1;
        org.apache.jena.atlas.AtlasException $r3;
        com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows r0;
        java.io.IOException $r2;

        r0 := @this: com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows;

        virtualinvoke r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: void flush()>();

     label1:
        $r1 = r0.<com.hp.hpl.jena.tdb.store.bulkloader2.WriteRows: java.io.OutputStream output>;

        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new org.apache.jena.atlas.AtlasException;

        specialinvoke $r3.<org.apache.jena.atlas.AtlasException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
