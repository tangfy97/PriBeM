public abstract class org.eclipse.jetty.server.session.AbstractSession extends java.lang.Object implements org.eclipse.jetty.server.session.AbstractSessionManager$SessionIf
{
    static final org.eclipse.jetty.util.log.Logger LOG;
    private final org.eclipse.jetty.server.session.AbstractSessionManager _manager;
    private final java.lang.String _clusterId;
    private final java.lang.String _nodeId;
    private final java.util.Map _attributes;
    private boolean _idChanged;
    private final long _created;
    private long _cookieSet;
    private long _accessed;
    private long _lastAccessed;
    private boolean _invalid;
    private boolean _doInvalidate;
    private long _maxIdleMs;
    private boolean _newSession;
    private int _requests;

    protected void <init>(org.eclipse.jetty.server.session.AbstractSessionManager, javax.servlet.http.HttpServletRequest)
    {
        boolean $z0;
        java.lang.StringBuilder $r13, $r15, $r17, $r18, $r20;
        java.lang.Object[] $r22;
        org.eclipse.jetty.server.SessionIdManager $r5, $r9;
        java.util.HashMap $r1;
        long $l0, $l1, $l2, $l3, $l6, $l7;
        javax.servlet.http.HttpServletRequest r4;
        int $i4, $i5;
        java.lang.String $r6, $r8, $r10, $r16, $r19, $r21;
        org.eclipse.jetty.server.session.AbstractSession r0;
        org.eclipse.jetty.util.log.Logger $r12, $r14;
        org.eclipse.jetty.server.session.AbstractSessionManager r2, $r3, $r7, $r11, $r23;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        r2 := @parameter0: org.eclipse.jetty.server.session.AbstractSessionManager;

        r4 := @parameter1: javax.servlet.http.HttpServletRequest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.eclipse.jetty.server.session.AbstractSession: java.util.Map _attributes> = $r1;

        r0.<org.eclipse.jetty.server.session.AbstractSession: org.eclipse.jetty.server.session.AbstractSessionManager _manager> = r2;

        r0.<org.eclipse.jetty.server.session.AbstractSession: boolean _newSession> = 1;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<org.eclipse.jetty.server.session.AbstractSession: long _created> = $l0;

        $r3 = r0.<org.eclipse.jetty.server.session.AbstractSession: org.eclipse.jetty.server.session.AbstractSessionManager _manager>;

        $r5 = $r3.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.SessionIdManager _sessionIdManager>;

        $l1 = r0.<org.eclipse.jetty.server.session.AbstractSession: long _created>;

        $r6 = interfaceinvoke $r5.<org.eclipse.jetty.server.SessionIdManager: java.lang.String newSessionId(javax.servlet.http.HttpServletRequest,long)>(r4, $l1);

        r0.<org.eclipse.jetty.server.session.AbstractSession: java.lang.String _clusterId> = $r6;

        $r7 = r0.<org.eclipse.jetty.server.session.AbstractSession: org.eclipse.jetty.server.session.AbstractSessionManager _manager>;

        $r9 = $r7.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.SessionIdManager _sessionIdManager>;

        $r8 = r0.<org.eclipse.jetty.server.session.AbstractSession: java.lang.String _clusterId>;

        $r10 = interfaceinvoke $r9.<org.eclipse.jetty.server.SessionIdManager: java.lang.String getNodeId(java.lang.String,javax.servlet.http.HttpServletRequest)>($r8, r4);

        r0.<org.eclipse.jetty.server.session.AbstractSession: java.lang.String _nodeId> = $r10;

        $l2 = r0.<org.eclipse.jetty.server.session.AbstractSession: long _created>;

        r0.<org.eclipse.jetty.server.session.AbstractSession: long _accessed> = $l2;

        $l3 = r0.<org.eclipse.jetty.server.session.AbstractSession: long _created>;

        r0.<org.eclipse.jetty.server.session.AbstractSession: long _lastAccessed> = $l3;

        r0.<org.eclipse.jetty.server.session.AbstractSession: int _requests> = 1;

        $r11 = r0.<org.eclipse.jetty.server.session.AbstractSession: org.eclipse.jetty.server.session.AbstractSessionManager _manager>;

        $i4 = $r11.<org.eclipse.jetty.server.session.AbstractSessionManager: int _dftMaxIdleSecs>;

        if $i4 <= 0 goto label1;

        $r23 = r0.<org.eclipse.jetty.server.session.AbstractSession: org.eclipse.jetty.server.session.AbstractSessionManager _manager>;

        $i5 = $r23.<org.eclipse.jetty.server.session.AbstractSessionManager: int _dftMaxIdleSecs>;

        $l6 = (long) $i5;

        $l7 = $l6 * 1000L;

        goto label2;

     label1:
        $l7 = -1L;

     label2:
        r0.<org.eclipse.jetty.server.session.AbstractSession: long _maxIdleMs> = $l7;

        $r12 = <org.eclipse.jetty.server.session.AbstractSession: org.eclipse.jetty.util.log.Logger LOG>;

        $z0 = interfaceinvoke $r12.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label3;

        $r14 = <org.eclipse.jetty.server.session.AbstractSession: org.eclipse.jetty.util.log.Logger LOG>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("new session & id ");

        $r16 = r0.<org.eclipse.jetty.server.session.AbstractSession: java.lang.String _nodeId>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r19 = r0.<org.eclipse.jetty.server.session.AbstractSession: java.lang.String _clusterId>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r22 = newarray (java.lang.Object)[0];

        interfaceinvoke $r14.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r21, $r22);

     label3:
        return;
    }

    protected void <init>(org.eclipse.jetty.server.session.AbstractSessionManager, long, long, java.lang.String)
    {
        java.lang.Object[] $r19;
        org.eclipse.jetty.server.SessionIdManager $r6;
        java.util.HashMap $r1;
        long l0, l1, $l4, $l5;
        int $i2, $i3;
        java.lang.String r3, $r5, $r7, $r13, $r16, $r18;
        boolean $z0;
        org.eclipse.jetty.server.session.AbstractSession r0;
        java.lang.StringBuilder $r10, $r12, $r14, $r15, $r17;
        org.eclipse.jetty.util.log.Logger $r9, $r11;
        org.eclipse.jetty.server.session.AbstractSessionManager r2, $r4, $r8, $r20;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        r2 := @parameter0: org.eclipse.jetty.server.session.AbstractSessionManager;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r3 := @parameter3: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.eclipse.jetty.server.session.AbstractSession: java.util.Map _attributes> = $r1;

        r0.<org.eclipse.jetty.server.session.AbstractSession: org.eclipse.jetty.server.session.AbstractSessionManager _manager> = r2;

        r0.<org.eclipse.jetty.server.session.AbstractSession: long _created> = l0;

        r0.<org.eclipse.jetty.server.session.AbstractSession: java.lang.String _clusterId> = r3;

        $r4 = r0.<org.eclipse.jetty.server.session.AbstractSession: org.eclipse.jetty.server.session.AbstractSessionManager _manager>;

        $r6 = $r4.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.SessionIdManager _sessionIdManager>;

        $r5 = r0.<org.eclipse.jetty.server.session.AbstractSession: java.lang.String _clusterId>;

        $r7 = interfaceinvoke $r6.<org.eclipse.jetty.server.SessionIdManager: java.lang.String getNodeId(java.lang.String,javax.servlet.http.HttpServletRequest)>($r5, null);

        r0.<org.eclipse.jetty.server.session.AbstractSession: java.lang.String _nodeId> = $r7;

        r0.<org.eclipse.jetty.server.session.AbstractSession: long _accessed> = l1;

        r0.<org.eclipse.jetty.server.session.AbstractSession: long _lastAccessed> = l1;

        r0.<org.eclipse.jetty.server.session.AbstractSession: int _requests> = 1;

        $r8 = r0.<org.eclipse.jetty.server.session.AbstractSession: org.eclipse.jetty.server.session.AbstractSessionManager _manager>;

        $i2 = $r8.<org.eclipse.jetty.server.session.AbstractSessionManager: int _dftMaxIdleSecs>;

        if $i2 <= 0 goto label1;

        $r20 = r0.<org.eclipse.jetty.server.session.AbstractSession: org.eclipse.jetty.server.session.AbstractSessionManager _manager>;

        $i3 = $r20.<org.eclipse.jetty.server.session.AbstractSessionManager: int _dftMaxIdleSecs>;

        $l4 = (long) $i3;

        $l5 = $l4 * 1000L;

        goto label2;

     label1:
        $l5 = -1L;

     label2:
        r0.<org.eclipse.jetty.server.session.AbstractSession: long _maxIdleMs> = $l5;

        $r9 = <org.eclipse.jetty.server.session.AbstractSession: org.eclipse.jetty.util.log.Logger LOG>;

        $z0 = interfaceinvoke $r9.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label3;

        $r11 = <org.eclipse.jetty.server.session.AbstractSession: org.eclipse.jetty.util.log.Logger LOG>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("new session ");

        $r13 = r0.<org.eclipse.jetty.server.session.AbstractSession: java.lang.String _nodeId>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r16 = r0.<org.eclipse.jetty.server.session.AbstractSession: java.lang.String _clusterId>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = newarray (java.lang.Object)[0];

        interfaceinvoke $r11.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r18, $r19);

     label3:
        return;
    }

    protected void checkValid() throws java.lang.IllegalStateException
    {
        java.lang.IllegalStateException $r1;
        org.eclipse.jetty.server.session.AbstractSession r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        $z0 = r0.<org.eclipse.jetty.server.session.AbstractSession: boolean _invalid>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();

        throw $r1;

     label1:
        return;
    }

    public org.eclipse.jetty.server.session.AbstractSession getSession()
    {
        org.eclipse.jetty.server.session.AbstractSession r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        return r0;
    }

    public long getAccessed()
    {
        java.lang.Throwable $r1;
        long $l0;
        org.eclipse.jetty.server.session.AbstractSession r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        entermonitor r0;

     label1:
        $l0 = r0.<org.eclipse.jetty.server.session.AbstractSession: long _accessed>;

        exitmonitor r0;

     label2:
        return $l0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.Object getAttribute(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        org.eclipse.jetty.server.session.AbstractSession r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        r1 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSession: void checkValid()>();

        $r2 = r0.<org.eclipse.jetty.server.session.AbstractSession: java.util.Map _attributes>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        exitmonitor r0;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getAttributes()
    {
        java.lang.Throwable $r2;
        java.util.Map $r1;
        int $i0;
        org.eclipse.jetty.server.session.AbstractSession r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        entermonitor r0;

     label1:
        virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSession: void checkValid()>();

        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSession: java.util.Map _attributes>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        exitmonitor r0;

     label2:
        return $i0;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.Enumeration getAttributeNames()
    {
        java.lang.Throwable $r5;
        java.util.Enumeration $r4;
        java.util.Set $r3;
        org.eclipse.jetty.server.session.AbstractSession r0;
        java.util.ArrayList $r7;
        java.util.List $r6;
        java.util.Map $r1, $r2;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        entermonitor r0;

     label1:
        virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSession: void checkValid()>();

        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSession: java.util.Map _attributes>;

        if $r1 != null goto label2;

        $r6 = <java.util.Collections: java.util.List EMPTY_LIST>;

        goto label3;

     label2:
        $r7 = new java.util.ArrayList;

        $r6 = $r7;

        $r2 = r0.<org.eclipse.jetty.server.session.AbstractSession: java.util.Map _attributes>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        specialinvoke $r7.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

     label3:
        $r4 = staticinvoke <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>($r6);

        exitmonitor r0;

     label4:
        return $r4;

     label5:
        $r5 := @caughtexception;

        exitmonitor r0;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.util.Set getNames()
    {
        java.util.HashSet $r1;
        java.lang.Throwable $r4;
        java.util.Map $r2;
        java.util.Set $r3;
        org.eclipse.jetty.server.session.AbstractSession r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        entermonitor r0;

     label1:
        $r1 = new java.util.HashSet;

        $r2 = r0.<org.eclipse.jetty.server.session.AbstractSession: java.util.Map _attributes>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>($r3);

        exitmonitor r0;

     label2:
        return $r1;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public long getCookieSetTime()
    {
        long $l0;
        org.eclipse.jetty.server.session.AbstractSession r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        $l0 = r0.<org.eclipse.jetty.server.session.AbstractSession: long _cookieSet>;

        return $l0;
    }

    public long getCreationTime() throws java.lang.IllegalStateException
    {
        long $l0;
        org.eclipse.jetty.server.session.AbstractSession r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        $l0 = r0.<org.eclipse.jetty.server.session.AbstractSession: long _created>;

        return $l0;
    }

    public java.lang.String getId() throws java.lang.IllegalStateException
    {
        java.lang.String $r2;
        org.eclipse.jetty.server.session.AbstractSession r0;
        org.eclipse.jetty.server.session.AbstractSessionManager $r1;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSession: org.eclipse.jetty.server.session.AbstractSessionManager _manager>;

        $z0 = $r1.<org.eclipse.jetty.server.session.AbstractSessionManager: boolean _nodeIdInSessionId>;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.eclipse.jetty.server.session.AbstractSession: java.lang.String _nodeId>;

        goto label2;

     label1:
        $r2 = r0.<org.eclipse.jetty.server.session.AbstractSession: java.lang.String _clusterId>;

     label2:
        return $r2;
    }

    public java.lang.String getNodeId()
    {
        java.lang.String $r1;
        org.eclipse.jetty.server.session.AbstractSession r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSession: java.lang.String _nodeId>;

        return $r1;
    }

    public java.lang.String getClusterId()
    {
        java.lang.String $r1;
        org.eclipse.jetty.server.session.AbstractSession r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSession: java.lang.String _clusterId>;

        return $r1;
    }

    public long getLastAccessedTime() throws java.lang.IllegalStateException
    {
        long $l0;
        org.eclipse.jetty.server.session.AbstractSession r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSession: void checkValid()>();

        $l0 = r0.<org.eclipse.jetty.server.session.AbstractSession: long _lastAccessed>;

        return $l0;
    }

    public void setLastAccessedTime(long)
    {
        long l0;
        org.eclipse.jetty.server.session.AbstractSession r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        l0 := @parameter0: long;

        r0.<org.eclipse.jetty.server.session.AbstractSession: long _lastAccessed> = l0;

        return;
    }

    public int getMaxInactiveInterval()
    {
        int $i2;
        long $l0, $l1;
        org.eclipse.jetty.server.session.AbstractSession r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSession: void checkValid()>();

        $l0 = r0.<org.eclipse.jetty.server.session.AbstractSession: long _maxIdleMs>;

        $l1 = $l0 / 1000L;

        $i2 = (int) $l1;

        return $i2;
    }

    public javax.servlet.ServletContext getServletContext()
    {
        org.eclipse.jetty.server.session.AbstractSession r0;
        org.eclipse.jetty.server.session.AbstractSessionManager $r1;
        org.eclipse.jetty.server.handler.ContextHandler$Context $r2;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSession: org.eclipse.jetty.server.session.AbstractSessionManager _manager>;

        $r2 = $r1.<org.eclipse.jetty.server.session.AbstractSessionManager: org.eclipse.jetty.server.handler.ContextHandler$Context _context>;

        return $r2;
    }

    public javax.servlet.http.HttpSessionContext getSessionContext() throws java.lang.IllegalStateException
    {
        org.eclipse.jetty.server.session.AbstractSession r0;
        javax.servlet.http.HttpSessionContext $r1;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSession: void checkValid()>();

        $r1 = <org.eclipse.jetty.server.session.AbstractSessionManager: javax.servlet.http.HttpSessionContext __nullSessionContext>;

        return $r1;
    }

    public java.lang.Object getValue(java.lang.String) throws java.lang.IllegalStateException
    {
        java.lang.Object $r2;
        java.lang.String r1;
        org.eclipse.jetty.server.session.AbstractSession r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSession: java.lang.Object getAttribute(java.lang.String)>(r1);

        return $r2;
    }

    public java.lang.String[] getValueNames() throws java.lang.IllegalStateException
    {
        java.lang.Throwable $r10;
        java.lang.Object[] $r6;
        java.util.Set $r5;
        java.lang.String[] r3, $r7, $r8, $r9;
        org.eclipse.jetty.server.session.AbstractSession r0;
        java.util.Map $r1, $r2, $r4;
        int $i0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        entermonitor r0;

     label1:
        virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSession: void checkValid()>();

        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSession: java.util.Map _attributes>;

        if $r1 != null goto label3;

        $r9 = newarray (java.lang.String)[0];

        exitmonitor r0;

     label2:
        return $r9;

     label3:
        $r2 = r0.<org.eclipse.jetty.server.session.AbstractSession: java.util.Map _attributes>;

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        r3 = newarray (java.lang.String)[$i0];

        $r4 = r0.<org.eclipse.jetty.server.session.AbstractSession: java.util.Map _attributes>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set keySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(r3);

        $r7 = (java.lang.String[]) $r6;

        $r8 = (java.lang.String[]) $r7;

        exitmonitor r0;

     label4:
        return $r8;

     label5:
        $r10 := @caughtexception;

        exitmonitor r0;

     label6:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    protected java.util.Map getAttributeMap()
    {
        org.eclipse.jetty.server.session.AbstractSession r0;
        java.util.Map $r1;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSession: java.util.Map _attributes>;

        return $r1;
    }

    protected void addAttributes(java.util.Map)
    {
        org.eclipse.jetty.server.session.AbstractSession r0;
        java.util.Map r1, $r2;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        r1 := @parameter0: java.util.Map;

        $r2 = r0.<org.eclipse.jetty.server.session.AbstractSession: java.util.Map _attributes>;

        interfaceinvoke $r2.<java.util.Map: void putAll(java.util.Map)>(r1);

        return;
    }

    protected boolean access(long)
    {
        java.lang.Throwable $r1;
        long $l0, l1, $l2, $l4, $l6, $l7, $l8;
        byte $b3, $b5, $b9;
        int $i10, $i11, $i12, $i13, $i14;
        boolean $z0;
        org.eclipse.jetty.server.session.AbstractSession r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        l1 := @parameter0: long;

        entermonitor r0;

     label1:
        $z0 = r0.<org.eclipse.jetty.server.session.AbstractSession: boolean _invalid>;

        if $z0 == 0 goto label3;

        exitmonitor r0;

     label2:
        return 0;

     label3:
        r0.<org.eclipse.jetty.server.session.AbstractSession: boolean _newSession> = 0;

        $l0 = r0.<org.eclipse.jetty.server.session.AbstractSession: long _accessed>;

        r0.<org.eclipse.jetty.server.session.AbstractSession: long _lastAccessed> = $l0;

        r0.<org.eclipse.jetty.server.session.AbstractSession: long _accessed> = l1;

        $l2 = r0.<org.eclipse.jetty.server.session.AbstractSession: long _maxIdleMs>;

        $b3 = $l2 cmp 0L;

        $i12 = (int) $b3;

        if $i12 <= 0 goto label5;

        $l4 = r0.<org.eclipse.jetty.server.session.AbstractSession: long _lastAccessed>;

        $b5 = $l4 cmp 0L;

        $i13 = (int) $b5;

        if $i13 <= 0 goto label5;

        $l7 = r0.<org.eclipse.jetty.server.session.AbstractSession: long _lastAccessed>;

        $l6 = r0.<org.eclipse.jetty.server.session.AbstractSession: long _maxIdleMs>;

        $l8 = $l7 + $l6;

        $b9 = $l8 cmp l1;

        $i14 = (int) $b9;

        if $i14 >= 0 goto label5;

        virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSession: void invalidate()>();

        exitmonitor r0;

     label4:
        return 0;

     label5:
        $i10 = r0.<org.eclipse.jetty.server.session.AbstractSession: int _requests>;

        $i11 = $i10 + 1;

        r0.<org.eclipse.jetty.server.session.AbstractSession: int _requests> = $i11;

        exitmonitor r0;

     label6:
        return 1;

     label7:
        $r1 := @caughtexception;

        exitmonitor r0;

     label8:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    protected void complete()
    {
        java.lang.Throwable $r1;
        int $i0, $i1, $i2;
        org.eclipse.jetty.server.session.AbstractSession r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        entermonitor r0;

     label1:
        $i0 = r0.<org.eclipse.jetty.server.session.AbstractSession: int _requests>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jetty.server.session.AbstractSession: int _requests> = $i1;

        $z0 = r0.<org.eclipse.jetty.server.session.AbstractSession: boolean _doInvalidate>;

        if $z0 == 0 goto label2;

        $i2 = r0.<org.eclipse.jetty.server.session.AbstractSession: int _requests>;

        if $i2 > 0 goto label2;

        virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSession: void doInvalidate()>();

     label2:
        exitmonitor r0;

     label3:
        goto label6;

     label4:
        $r1 := @caughtexception;

        exitmonitor r0;

     label5:
        throw $r1;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected void timeout() throws java.lang.IllegalStateException
    {
        java.lang.Throwable $r2;
        int $i0;
        org.eclipse.jetty.server.session.AbstractSession r0;
        org.eclipse.jetty.server.session.AbstractSessionManager $r1;
        boolean $z0, z1;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSession: org.eclipse.jetty.server.session.AbstractSessionManager _manager>;

        virtualinvoke $r1.<org.eclipse.jetty.server.session.AbstractSessionManager: void removeSession(org.eclipse.jetty.server.session.AbstractSession,boolean)>(r0, 1);

        z1 = 0;

        entermonitor r0;

     label1:
        $z0 = r0.<org.eclipse.jetty.server.session.AbstractSession: boolean _invalid>;

        if $z0 != 0 goto label3;

        $i0 = r0.<org.eclipse.jetty.server.session.AbstractSession: int _requests>;

        if $i0 > 0 goto label2;

        z1 = 1;

        goto label3;

     label2:
        r0.<org.eclipse.jetty.server.session.AbstractSession: boolean _doInvalidate> = 1;

     label3:
        exitmonitor r0;

     label4:
        goto label7;

     label5:
        $r2 := @caughtexception;

        exitmonitor r0;

     label6:
        throw $r2;

     label7:
        if z1 == 0 goto label8;

        virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSession: void doInvalidate()>();

     label8:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void invalidate() throws java.lang.IllegalStateException
    {
        org.eclipse.jetty.server.session.AbstractSession r0;
        org.eclipse.jetty.server.session.AbstractSessionManager $r1;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSession: org.eclipse.jetty.server.session.AbstractSessionManager _manager>;

        virtualinvoke $r1.<org.eclipse.jetty.server.session.AbstractSessionManager: void removeSession(org.eclipse.jetty.server.session.AbstractSession,boolean)>(r0, 1);

        virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSession: void doInvalidate()>();

        return;
    }

    protected void doInvalidate() throws java.lang.IllegalStateException
    {
        java.lang.Throwable $r4, $r5, $r6;
        java.lang.Object[] $r0;
        org.eclipse.jetty.server.session.AbstractSession r1;
        java.lang.String $r2;
        org.eclipse.jetty.util.log.Logger $r3;
        boolean $z0;

        r1 := @this: org.eclipse.jetty.server.session.AbstractSession;

     label01:
        $r3 = <org.eclipse.jetty.server.session.AbstractSession: org.eclipse.jetty.util.log.Logger LOG>;

        $r0 = newarray (java.lang.Object)[1];

        $r2 = r1.<org.eclipse.jetty.server.session.AbstractSession: java.lang.String _clusterId>;

        $r0[0] = $r2;

        interfaceinvoke $r3.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("invalidate {}", $r0);

        $z0 = virtualinvoke r1.<org.eclipse.jetty.server.session.AbstractSession: boolean isValid()>();

        if $z0 == 0 goto label02;

        virtualinvoke r1.<org.eclipse.jetty.server.session.AbstractSession: void clearAttributes()>();

     label02:
        entermonitor r1;

     label03:
        r1.<org.eclipse.jetty.server.session.AbstractSession: boolean _invalid> = 1;

        exitmonitor r1;

     label04:
        goto label07;

     label05:
        $r6 := @caughtexception;

        exitmonitor r1;

     label06:
        throw $r6;

     label07:
        goto label15;

     label08:
        $r5 := @caughtexception;

     label09:
        entermonitor r1;

     label10:
        r1.<org.eclipse.jetty.server.session.AbstractSession: boolean _invalid> = 1;

        exitmonitor r1;

     label11:
        goto label14;

     label12:
        $r4 := @caughtexception;

        exitmonitor r1;

     label13:
        throw $r4;

     label14:
        throw $r5;

     label15:
        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void clearAttributes()
    {
        java.lang.Throwable $r12, $r13;
        java.util.ArrayList $r5;
        java.util.Map $r1, $r2, $r3, $r4, $r6;
        int $i0;
        java.lang.String r14;
        boolean $z0;
        java.util.Iterator $r8;
        java.util.Set $r7;
        org.eclipse.jetty.server.session.AbstractSession r0;
        java.lang.Object $r9, $r10;
        org.eclipse.jetty.server.session.AbstractSessionManager $r11;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

     label01:
        $r1 = r0.<org.eclipse.jetty.server.session.AbstractSession: java.util.Map _attributes>;

        if $r1 == null goto label14;

        $r4 = r0.<org.eclipse.jetty.server.session.AbstractSession: java.util.Map _attributes>;

        $i0 = interfaceinvoke $r4.<java.util.Map: int size()>();

        if $i0 <= 0 goto label14;

        entermonitor r0;

     label02:
        $r5 = new java.util.ArrayList;

        $r6 = r0.<org.eclipse.jetty.server.session.AbstractSession: java.util.Map _attributes>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set keySet()>();

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r7);

        exitmonitor r0;

     label03:
        goto label06;

     label04:
        $r13 := @caughtexception;

        exitmonitor r0;

     label05:
        throw $r13;

     label06:
        $r8 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r14 = (java.lang.String) $r9;

        entermonitor r0;

     label08:
        $r10 = virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSession: java.lang.Object doPutOrRemove(java.lang.String,java.lang.Object)>(r14, null);

        exitmonitor r0;

     label09:
        goto label12;

     label10:
        $r12 := @caughtexception;

        exitmonitor r0;

     label11:
        throw $r12;

     label12:
        virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSession: void unbindValue(java.lang.String,java.lang.Object)>(r14, $r10);

        $r11 = r0.<org.eclipse.jetty.server.session.AbstractSession: org.eclipse.jetty.server.session.AbstractSessionManager _manager>;

        virtualinvoke $r11.<org.eclipse.jetty.server.session.AbstractSessionManager: void doSessionAttributeListeners(org.eclipse.jetty.server.session.AbstractSession,java.lang.String,java.lang.Object,java.lang.Object)>(r0, r14, $r10, null);

        goto label07;

     label13:
        goto label01;

     label14:
        $r2 = r0.<org.eclipse.jetty.server.session.AbstractSession: java.util.Map _attributes>;

        if $r2 == null goto label15;

        $r3 = r0.<org.eclipse.jetty.server.session.AbstractSession: java.util.Map _attributes>;

        interfaceinvoke $r3.<java.util.Map: void clear()>();

     label15:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public boolean isIdChanged()
    {
        org.eclipse.jetty.server.session.AbstractSession r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        $z0 = r0.<org.eclipse.jetty.server.session.AbstractSession: boolean _idChanged>;

        return $z0;
    }

    public boolean isNew() throws java.lang.IllegalStateException
    {
        org.eclipse.jetty.server.session.AbstractSession r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSession: void checkValid()>();

        $z0 = r0.<org.eclipse.jetty.server.session.AbstractSession: boolean _newSession>;

        return $z0;
    }

    public void putValue(java.lang.String, java.lang.Object) throws java.lang.IllegalStateException
    {
        java.lang.Object r2;
        java.lang.String r1;
        org.eclipse.jetty.server.session.AbstractSession r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSession: void setAttribute(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    public void removeAttribute(java.lang.String)
    {
        java.lang.String r1;
        org.eclipse.jetty.server.session.AbstractSession r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSession: void setAttribute(java.lang.String,java.lang.Object)>(r1, null);

        return;
    }

    public void removeValue(java.lang.String) throws java.lang.IllegalStateException
    {
        java.lang.String r1;
        org.eclipse.jetty.server.session.AbstractSession r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSession: void removeAttribute(java.lang.String)>(r1);

        return;
    }

    protected java.lang.Object doPutOrRemove(java.lang.String, java.lang.Object)
    {
        java.util.Map $r3, $r4;
        java.lang.Object r0, $r5;
        java.lang.String r2;
        org.eclipse.jetty.server.session.AbstractSession r1;

        r1 := @this: org.eclipse.jetty.server.session.AbstractSession;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        $r4 = r1.<org.eclipse.jetty.server.session.AbstractSession: java.util.Map _attributes>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);

        goto label2;

     label1:
        $r3 = r1.<org.eclipse.jetty.server.session.AbstractSession: java.util.Map _attributes>;

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r0);

     label2:
        return $r5;
    }

    protected java.lang.Object doGet(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        org.eclipse.jetty.server.session.AbstractSession r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.eclipse.jetty.server.session.AbstractSession: java.util.Map _attributes>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }

    public void setAttribute(java.lang.String, java.lang.Object)
    {
        java.lang.Throwable $r5;
        java.lang.Object r2, $r3;
        java.lang.String r1;
        org.eclipse.jetty.server.session.AbstractSession r0;
        org.eclipse.jetty.server.session.AbstractSessionManager $r4;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        entermonitor r0;

     label1:
        virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSession: void checkValid()>();

        $r3 = virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSession: java.lang.Object doPutOrRemove(java.lang.String,java.lang.Object)>(r1, r2);

        exitmonitor r0;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r5;

     label5:
        if r2 == null goto label6;

        $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label9;

     label6:
        if $r3 == null goto label7;

        virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSession: void unbindValue(java.lang.String,java.lang.Object)>(r1, $r3);

     label7:
        if r2 == null goto label8;

        virtualinvoke r0.<org.eclipse.jetty.server.session.AbstractSession: void bindValue(java.lang.String,java.lang.Object)>(r1, r2);

     label8:
        $r4 = r0.<org.eclipse.jetty.server.session.AbstractSession: org.eclipse.jetty.server.session.AbstractSessionManager _manager>;

        virtualinvoke $r4.<org.eclipse.jetty.server.session.AbstractSessionManager: void doSessionAttributeListeners(org.eclipse.jetty.server.session.AbstractSession,java.lang.String,java.lang.Object,java.lang.Object)>(r0, r1, $r3, r2);

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setIdChanged(boolean)
    {
        org.eclipse.jetty.server.session.AbstractSession r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        z0 := @parameter0: boolean;

        r0.<org.eclipse.jetty.server.session.AbstractSession: boolean _idChanged> = z0;

        return;
    }

    public void setMaxInactiveInterval(int)
    {
        int i0;
        long $l1, $l2;
        org.eclipse.jetty.server.session.AbstractSession r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        i0 := @parameter0: int;

        $l1 = (long) i0;

        $l2 = $l1 * 1000L;

        r0.<org.eclipse.jetty.server.session.AbstractSession: long _maxIdleMs> = $l2;

        return;
    }

    public java.lang.String toString()
    {
        org.eclipse.jetty.server.session.AbstractSession r1;
        int $i0;
        java.lang.StringBuilder $r0, $r4, $r5, $r7, $r8, $r9;
        java.lang.Class $r2;
        java.lang.String $r3, $r6, $r10;

        r1 := @this: org.eclipse.jetty.server.session.AbstractSession;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r6 = virtualinvoke r1.<org.eclipse.jetty.server.session.AbstractSession: java.lang.String getId()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public void bindValue(java.lang.String, java.lang.Object)
    {
        javax.servlet.http.HttpSessionBindingEvent $r1;
        java.lang.Object r0;
        java.lang.String r3;
        org.eclipse.jetty.server.session.AbstractSession r2;
        javax.servlet.http.HttpSessionBindingListener $r4;
        boolean $z0;

        r2 := @this: org.eclipse.jetty.server.session.AbstractSession;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        if r0 == null goto label1;

        $z0 = r0 instanceof javax.servlet.http.HttpSessionBindingListener;

        if $z0 == 0 goto label1;

        $r4 = (javax.servlet.http.HttpSessionBindingListener) r0;

        $r1 = new javax.servlet.http.HttpSessionBindingEvent;

        specialinvoke $r1.<javax.servlet.http.HttpSessionBindingEvent: void <init>(javax.servlet.http.HttpSession,java.lang.String)>(r2, r3);

        interfaceinvoke $r4.<javax.servlet.http.HttpSessionBindingListener: void valueBound(javax.servlet.http.HttpSessionBindingEvent)>($r1);

     label1:
        return;
    }

    public boolean isValid()
    {
        org.eclipse.jetty.server.session.AbstractSession r0;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        $z0 = r0.<org.eclipse.jetty.server.session.AbstractSession: boolean _invalid>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    protected void cookieSet()
    {
        java.lang.Throwable $r1;
        long $l0;
        org.eclipse.jetty.server.session.AbstractSession r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        entermonitor r0;

     label1:
        $l0 = r0.<org.eclipse.jetty.server.session.AbstractSession: long _accessed>;

        r0.<org.eclipse.jetty.server.session.AbstractSession: long _cookieSet> = $l0;

        exitmonitor r0;

     label2:
        goto label5;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getRequests()
    {
        int $i0;
        java.lang.Throwable $r1;
        org.eclipse.jetty.server.session.AbstractSession r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        entermonitor r0;

     label1:
        $i0 = r0.<org.eclipse.jetty.server.session.AbstractSession: int _requests>;

        exitmonitor r0;

     label2:
        return $i0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setRequests(int)
    {
        int i0;
        java.lang.Throwable $r1;
        org.eclipse.jetty.server.session.AbstractSession r0;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        r0.<org.eclipse.jetty.server.session.AbstractSession: int _requests> = i0;

        exitmonitor r0;

     label2:
        goto label5;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void unbindValue(java.lang.String, java.lang.Object)
    {
        javax.servlet.http.HttpSessionBindingEvent $r1;
        java.lang.Object r0;
        java.lang.String r3;
        org.eclipse.jetty.server.session.AbstractSession r2;
        javax.servlet.http.HttpSessionBindingListener $r4;
        boolean $z0;

        r2 := @this: org.eclipse.jetty.server.session.AbstractSession;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        if r0 == null goto label1;

        $z0 = r0 instanceof javax.servlet.http.HttpSessionBindingListener;

        if $z0 == 0 goto label1;

        $r4 = (javax.servlet.http.HttpSessionBindingListener) r0;

        $r1 = new javax.servlet.http.HttpSessionBindingEvent;

        specialinvoke $r1.<javax.servlet.http.HttpSessionBindingEvent: void <init>(javax.servlet.http.HttpSession,java.lang.String)>(r2, r3);

        interfaceinvoke $r4.<javax.servlet.http.HttpSessionBindingListener: void valueUnbound(javax.servlet.http.HttpSessionBindingEvent)>($r1);

     label1:
        return;
    }

    public void willPassivate()
    {
        java.lang.Throwable $r7;
        java.util.Iterator $r4;
        java.util.Collection $r3;
        javax.servlet.http.HttpSessionActivationListener r6;
        org.eclipse.jetty.server.session.AbstractSession r0;
        javax.servlet.http.HttpSessionEvent $r1;
        java.util.Map $r2;
        java.lang.Object $r5;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        entermonitor r0;

     label1:
        $r1 = new javax.servlet.http.HttpSessionEvent;

        specialinvoke $r1.<javax.servlet.http.HttpSessionEvent: void <init>(javax.servlet.http.HttpSession)>(r0);

        $r2 = r0.<org.eclipse.jetty.server.session.AbstractSession: java.util.Map _attributes>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $z1 = $r5 instanceof javax.servlet.http.HttpSessionActivationListener;

        if $z1 == 0 goto label3;

        r6 = (javax.servlet.http.HttpSessionActivationListener) $r5;

        interfaceinvoke r6.<javax.servlet.http.HttpSessionActivationListener: void sessionWillPassivate(javax.servlet.http.HttpSessionEvent)>($r1);

     label3:
        goto label2;

     label4:
        exitmonitor r0;

     label5:
        goto label8;

     label6:
        $r7 := @caughtexception;

        exitmonitor r0;

     label7:
        throw $r7;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void didActivate()
    {
        java.lang.Throwable $r7;
        java.util.Iterator $r4;
        java.util.Collection $r3;
        javax.servlet.http.HttpSessionActivationListener r6;
        org.eclipse.jetty.server.session.AbstractSession r0;
        javax.servlet.http.HttpSessionEvent $r1;
        java.util.Map $r2;
        java.lang.Object $r5;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.server.session.AbstractSession;

        entermonitor r0;

     label1:
        $r1 = new javax.servlet.http.HttpSessionEvent;

        specialinvoke $r1.<javax.servlet.http.HttpSessionEvent: void <init>(javax.servlet.http.HttpSession)>(r0);

        $r2 = r0.<org.eclipse.jetty.server.session.AbstractSession: java.util.Map _attributes>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $z1 = $r5 instanceof javax.servlet.http.HttpSessionActivationListener;

        if $z1 == 0 goto label3;

        r6 = (javax.servlet.http.HttpSessionActivationListener) $r5;

        interfaceinvoke r6.<javax.servlet.http.HttpSessionActivationListener: void sessionDidActivate(javax.servlet.http.HttpSessionEvent)>($r1);

     label3:
        goto label2;

     label4:
        exitmonitor r0;

     label5:
        goto label8;

     label6:
        $r7 := @caughtexception;

        exitmonitor r0;

     label7:
        throw $r7;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = <org.eclipse.jetty.server.session.SessionHandler: org.eclipse.jetty.util.log.Logger LOG>;

        <org.eclipse.jetty.server.session.AbstractSession: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
