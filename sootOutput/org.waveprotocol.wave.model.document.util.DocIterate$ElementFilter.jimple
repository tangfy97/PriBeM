class org.waveprotocol.wave.model.document.util.DocIterate$ElementFilter extends org.waveprotocol.wave.model.document.util.DocIterate$DeepIteratorFilter
{
    static final boolean $assertionsDisabled;

    public void <init>(boolean)
    {
        org.waveprotocol.wave.model.document.util.DocIterate$ElementFilter r0;
        boolean z0;

        r0 := @this: org.waveprotocol.wave.model.document.util.DocIterate$ElementFilter;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.waveprotocol.wave.model.document.util.DocIterate$DeepIteratorFilter: void <init>(boolean)>(z0);

        return;
    }

    public java.lang.Object next(org.waveprotocol.wave.model.document.ReadableDocument, java.lang.Object, java.lang.Object)
    {
        org.waveprotocol.wave.model.document.util.DocIterate$ElementFilter r0;
        org.waveprotocol.wave.model.document.ReadableDocument r1;
        java.lang.Object r2, r3, $r4, r5;

        r0 := @this: org.waveprotocol.wave.model.document.util.DocIterate$ElementFilter;

        r1 := @parameter0: org.waveprotocol.wave.model.document.ReadableDocument;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r5 = specialinvoke r0.<org.waveprotocol.wave.model.document.util.DocIterate$DeepIteratorFilter: java.lang.Object next(org.waveprotocol.wave.model.document.ReadableDocument,java.lang.Object,java.lang.Object)>(r1, r2, r3);

     label1:
        if r5 == null goto label2;

        $r4 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.ReadableDocument: java.lang.Object asElement(java.lang.Object)>(r5);

        if $r4 != null goto label2;

        r5 = specialinvoke r0.<org.waveprotocol.wave.model.document.util.DocIterate$DeepIteratorFilter: java.lang.Object next(org.waveprotocol.wave.model.document.ReadableDocument,java.lang.Object,java.lang.Object)>(r1, r5, r3);

        goto label1;

     label2:
        return r5;
    }

    public java.lang.Object value(org.waveprotocol.wave.model.document.ReadableDocument, java.lang.Object)
    {
        org.waveprotocol.wave.model.document.util.DocIterate$ElementFilter r1;
        org.waveprotocol.wave.model.document.ReadableDocument r0;
        java.lang.Object r2, $r3, $r4;
        java.lang.AssertionError $r5;
        boolean $z0;

        r1 := @this: org.waveprotocol.wave.model.document.util.DocIterate$ElementFilter;

        r0 := @parameter0: org.waveprotocol.wave.model.document.ReadableDocument;

        r2 := @parameter1: java.lang.Object;

        $r3 = specialinvoke r1.<org.waveprotocol.wave.model.document.util.DocIterate$DeepIteratorFilter: java.lang.Object value(org.waveprotocol.wave.model.document.ReadableDocument,java.lang.Object)>(r0, r2);

        $r4 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.ReadableDocument: java.lang.Object asElement(java.lang.Object)>($r3);

        $z0 = <org.waveprotocol.wave.model.document.util.DocIterate$ElementFilter: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if $r4 != null goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        return $r4;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/waveprotocol/wave/model/document/util/DocIterate;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.waveprotocol.wave.model.document.util.DocIterate$ElementFilter: boolean $assertionsDisabled> = $z1;

        return;
    }
}
