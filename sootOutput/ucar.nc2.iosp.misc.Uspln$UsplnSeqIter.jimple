class ucar.nc2.iosp.misc.Uspln$UsplnSeqIter extends java.lang.Object implements ucar.ma2.StructureDataIterator
{
    private ucar.ma2.ArrayStructureBB asbb;
    int numFlashes;
    final ucar.nc2.iosp.misc.Uspln this$0;

    void <init>(ucar.nc2.iosp.misc.Uspln) throws java.io.IOException
    {
        ucar.nc2.iosp.misc.Uspln r1;
        ucar.unidata.io.RandomAccessFile $r2;
        ucar.nc2.iosp.misc.Uspln$UsplnSeqIter r0;

        r0 := @this: ucar.nc2.iosp.misc.Uspln$UsplnSeqIter;

        r1 := @parameter0: ucar.nc2.iosp.misc.Uspln;

        r0.<ucar.nc2.iosp.misc.Uspln$UsplnSeqIter: ucar.nc2.iosp.misc.Uspln this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.misc.Uspln$UsplnSeqIter: ucar.ma2.ArrayStructureBB asbb> = null;

        r0.<ucar.nc2.iosp.misc.Uspln$UsplnSeqIter: int numFlashes> = 0;

        $r2 = staticinvoke <ucar.nc2.iosp.misc.Uspln: ucar.unidata.io.RandomAccessFile access$000(ucar.nc2.iosp.misc.Uspln)>(r1);

        virtualinvoke $r2.<ucar.unidata.io.RandomAccessFile: void seek(long)>(0L);

        return;
    }

    public ucar.ma2.StructureDataIterator reset()
    {
        ucar.unidata.io.RandomAccessFile $r2;
        ucar.nc2.iosp.misc.Uspln $r1;
        java.io.IOException $r3;
        ucar.nc2.iosp.misc.Uspln$UsplnSeqIter r0;
        java.lang.RuntimeException $r4;

        r0 := @this: ucar.nc2.iosp.misc.Uspln$UsplnSeqIter;

        r0.<ucar.nc2.iosp.misc.Uspln$UsplnSeqIter: int numFlashes> = 0;

     label1:
        $r1 = r0.<ucar.nc2.iosp.misc.Uspln$UsplnSeqIter: ucar.nc2.iosp.misc.Uspln this$0>;

        $r2 = staticinvoke <ucar.nc2.iosp.misc.Uspln: ucar.unidata.io.RandomAccessFile access$100(ucar.nc2.iosp.misc.Uspln)>($r1);

        virtualinvoke $r2.<ucar.unidata.io.RandomAccessFile: void seek(long)>(0L);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

     label4:
        return r0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public boolean hasNext() throws java.io.IOException
    {
        ucar.nc2.iosp.misc.Uspln$UsplnSeqIter r0;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.misc.Uspln$UsplnSeqIter;

        $z0 = specialinvoke r0.<ucar.nc2.iosp.misc.Uspln$UsplnSeqIter: boolean readStroke()>();

        return $z0;
    }

    public ucar.ma2.StructureData next() throws java.io.IOException
    {
        ucar.ma2.StructureData $r2;
        ucar.ma2.ArrayStructureBB $r1;
        int $i0, $i1;
        ucar.nc2.iosp.misc.Uspln$UsplnSeqIter r0;

        r0 := @this: ucar.nc2.iosp.misc.Uspln$UsplnSeqIter;

        $i0 = r0.<ucar.nc2.iosp.misc.Uspln$UsplnSeqIter: int numFlashes>;

        $i1 = $i0 + 1;

        r0.<ucar.nc2.iosp.misc.Uspln$UsplnSeqIter: int numFlashes> = $i1;

        $r1 = r0.<ucar.nc2.iosp.misc.Uspln$UsplnSeqIter: ucar.ma2.ArrayStructureBB asbb>;

        $r2 = virtualinvoke $r1.<ucar.ma2.ArrayStructureBB: ucar.ma2.StructureData getStructureData(int)>(0);

        return $r2;
    }

    private boolean readStroke() throws java.io.IOException
    {
        byte[] r36;
        ucar.nc2.iosp.misc.Uspln$Stroke r34, $r35;
        ucar.nc2.iosp.misc.Uspln$UsplnSeqIter r0;
        java.lang.Exception $r33;
        ucar.ma2.StructureMembers $r6, $r9, $r14;
        ucar.nc2.iosp.misc.Uspln $r1, $r5, $r8, $r13, $r17, $r24, $r26, $r27, $r28, $r32;
        java.text.SimpleDateFormat $r18;
        java.util.StringTokenizer $r4;
        java.lang.String $r3, $r19, $r21, $r22, $r23, $r25, $r29, $r30, $r31, r37;
        ucar.unidata.io.RandomAccessFile $r2;
        java.util.Date $r20;
        java.nio.ByteBuffer $r7;
        ucar.ma2.ArrayStructureBB $r12;
        int[] $r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        java.util.List $r10;
        float $f0, $f1, $f2;
        int $i0, $i1, $i2, $i3, i4, i5;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, d9, d10;
        java.util.Iterator $r11;
        java.lang.Object $r16;

        r0 := @this: ucar.nc2.iosp.misc.Uspln$UsplnSeqIter;

        $r1 = r0.<ucar.nc2.iosp.misc.Uspln$UsplnSeqIter: ucar.nc2.iosp.misc.Uspln this$0>;

        $r2 = staticinvoke <ucar.nc2.iosp.misc.Uspln: ucar.unidata.io.RandomAccessFile access$200(ucar.nc2.iosp.misc.Uspln)>($r1);

        $r3 = virtualinvoke $r2.<ucar.unidata.io.RandomAccessFile: java.lang.String readLine()>();

        if $r3 != null goto label01;

        $r32 = r0.<ucar.nc2.iosp.misc.Uspln$UsplnSeqIter: ucar.nc2.iosp.misc.Uspln this$0>;

        $i3 = r0.<ucar.nc2.iosp.misc.Uspln$UsplnSeqIter: int numFlashes>;

        staticinvoke <ucar.nc2.iosp.misc.Uspln: int access$302(ucar.nc2.iosp.misc.Uspln,int)>($r32, $i3);

        return 0;

     label01:
        $z0 = staticinvoke <ucar.unidata.util.StringUtil: boolean regexpMatch(java.lang.String,java.lang.String)>($r3, "LIGHTNING-..PLN1");

        if $z0 != 0 goto label02;

        $z2 = staticinvoke <ucar.unidata.util.StringUtil: boolean regexpMatch(java.lang.String,java.lang.String)>($r3, "..PLN-LIGHTNING");

        if $z2 == 0 goto label03;

     label02:
        $z1 = specialinvoke r0.<ucar.nc2.iosp.misc.Uspln$UsplnSeqIter: boolean readStroke()>();

        return $z1;

     label03:
        r34 = null;

        $r4 = new java.util.StringTokenizer;

        specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r3, ",\r\n");

     label04:
        $z3 = virtualinvoke $r4.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z3 == 0 goto label09;

        $r17 = r0.<ucar.nc2.iosp.misc.Uspln$UsplnSeqIter: ucar.nc2.iosp.misc.Uspln this$0>;

        $r18 = staticinvoke <ucar.nc2.iosp.misc.Uspln: java.text.SimpleDateFormat access$400(ucar.nc2.iosp.misc.Uspln)>($r17);

        $r19 = virtualinvoke $r4.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r20 = virtualinvoke $r18.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r19);

        $r21 = virtualinvoke $r4.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $d6 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r21);

        $r22 = virtualinvoke $r4.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $d7 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r22);

        $r23 = virtualinvoke $r4.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $d8 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r23);

        i4 = 1;

        d9 = #NaN;

        d10 = #NaN;

        i5 = 0;

        $r24 = r0.<ucar.nc2.iosp.misc.Uspln$UsplnSeqIter: ucar.nc2.iosp.misc.Uspln this$0>;

        $z13 = staticinvoke <ucar.nc2.iosp.misc.Uspln: boolean access$500(ucar.nc2.iosp.misc.Uspln)>($r24);

        if $z13 == 0 goto label05;

        $r29 = virtualinvoke $r4.<java.util.StringTokenizer: java.lang.String nextToken()>();

        d9 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r29);

        $r30 = virtualinvoke $r4.<java.util.StringTokenizer: java.lang.String nextToken()>();

        d10 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r30);

        $r31 = virtualinvoke $r4.<java.util.StringTokenizer: java.lang.String nextToken()>();

        i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r31);

        goto label06;

     label05:
        $r25 = virtualinvoke $r4.<java.util.StringTokenizer: java.lang.String nextToken()>();

        i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r25);

     label06:
        $r26 = r0.<ucar.nc2.iosp.misc.Uspln$UsplnSeqIter: ucar.nc2.iosp.misc.Uspln this$0>;

        $z14 = staticinvoke <ucar.nc2.iosp.misc.Uspln: boolean access$500(ucar.nc2.iosp.misc.Uspln)>($r26);

        if $z14 == 0 goto label07;

        $r35 = new ucar.nc2.iosp.misc.Uspln$Stroke;

        $r28 = r0.<ucar.nc2.iosp.misc.Uspln$UsplnSeqIter: ucar.nc2.iosp.misc.Uspln this$0>;

        specialinvoke $r35.<ucar.nc2.iosp.misc.Uspln$Stroke: void <init>(ucar.nc2.iosp.misc.Uspln,java.util.Date,double,double,double,double,double,int)>($r28, $r20, $d6, $d7, $d8, d9, d10, i5);

        goto label08;

     label07:
        $r35 = new ucar.nc2.iosp.misc.Uspln$Stroke;

        $r27 = r0.<ucar.nc2.iosp.misc.Uspln$UsplnSeqIter: ucar.nc2.iosp.misc.Uspln this$0>;

        specialinvoke $r35.<ucar.nc2.iosp.misc.Uspln$Stroke: void <init>(ucar.nc2.iosp.misc.Uspln,java.util.Date,double,double,double,int)>($r27, $r20, $d6, $d7, $d8, i4);

     label08:
        r34 = $r35;

        goto label04;

     label09:
        goto label11;

     label10:
        $r33 := @caughtexception;

        return 0;

     label11:
        $r5 = r0.<ucar.nc2.iosp.misc.Uspln$UsplnSeqIter: ucar.nc2.iosp.misc.Uspln this$0>;

        $r6 = staticinvoke <ucar.nc2.iosp.misc.Uspln: ucar.ma2.StructureMembers access$600(ucar.nc2.iosp.misc.Uspln)>($r5);

        $i0 = virtualinvoke $r6.<ucar.ma2.StructureMembers: int getStructureSize()>();

        r36 = newarray (byte)[$i0];

        $r7 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r36);

        $r8 = r0.<ucar.nc2.iosp.misc.Uspln$UsplnSeqIter: ucar.nc2.iosp.misc.Uspln this$0>;

        $r9 = staticinvoke <ucar.nc2.iosp.misc.Uspln: ucar.ma2.StructureMembers access$600(ucar.nc2.iosp.misc.Uspln)>($r8);

        $r10 = virtualinvoke $r9.<ucar.ma2.StructureMembers: java.util.List getMemberNames()>();

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z4 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label21;

        $r16 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r37 = (java.lang.String) $r16;

        $z5 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("time");

        if $z5 == 0 goto label13;

        $d5 = r34.<ucar.nc2.iosp.misc.Uspln$Stroke: double secs>;

        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.ByteBuffer putDouble(double)>($d5);

        goto label20;

     label13:
        $z6 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("lat");

        if $z6 == 0 goto label14;

        $d4 = r34.<ucar.nc2.iosp.misc.Uspln$Stroke: double lat>;

        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.ByteBuffer putDouble(double)>($d4);

        goto label20;

     label14:
        $z7 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("lon");

        if $z7 == 0 goto label15;

        $d3 = r34.<ucar.nc2.iosp.misc.Uspln$Stroke: double lon>;

        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.ByteBuffer putDouble(double)>($d3);

        goto label20;

     label15:
        $z8 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("sgnl");

        if $z8 == 0 goto label16;

        $d2 = r34.<ucar.nc2.iosp.misc.Uspln$Stroke: double amp>;

        $f2 = (float) $d2;

        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.ByteBuffer putFloat(float)>($f2);

        goto label20;

     label16:
        $z9 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("mult");

        if $z9 == 0 goto label17;

        $i2 = r34.<ucar.nc2.iosp.misc.Uspln$Stroke: int n>;

        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i2);

        goto label20;

     label17:
        $z10 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("majorAxis");

        if $z10 == 0 goto label18;

        $d1 = r34.<ucar.nc2.iosp.misc.Uspln$Stroke: double axisMajor>;

        $f1 = (float) $d1;

        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.ByteBuffer putFloat(float)>($f1);

        goto label20;

     label18:
        $z11 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("minorAxis");

        if $z11 == 0 goto label19;

        $d0 = r34.<ucar.nc2.iosp.misc.Uspln$Stroke: double axisMinor>;

        $f0 = (float) $d0;

        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.ByteBuffer putFloat(float)>($f0);

        goto label20;

     label19:
        $z12 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>("ellipseAngle");

        if $z12 == 0 goto label20;

        $i1 = r34.<ucar.nc2.iosp.misc.Uspln$Stroke: int axisOrient>;

        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i1);

     label20:
        goto label12;

     label21:
        $r12 = new ucar.ma2.ArrayStructureBB;

        $r13 = r0.<ucar.nc2.iosp.misc.Uspln$UsplnSeqIter: ucar.nc2.iosp.misc.Uspln this$0>;

        $r14 = staticinvoke <ucar.nc2.iosp.misc.Uspln: ucar.ma2.StructureMembers access$600(ucar.nc2.iosp.misc.Uspln)>($r13);

        $r15 = newarray (int)[1];

        $r15[0] = 1;

        specialinvoke $r12.<ucar.ma2.ArrayStructureBB: void <init>(ucar.ma2.StructureMembers,int[],java.nio.ByteBuffer,int)>($r14, $r15, $r7, 0);

        r0.<ucar.nc2.iosp.misc.Uspln$UsplnSeqIter: ucar.ma2.ArrayStructureBB asbb> = $r12;

        return 1;

        catch java.lang.Exception from label04 to label09 with label10;
    }

    public void setBufferSize(int)
    {
        int i0;
        ucar.nc2.iosp.misc.Uspln$UsplnSeqIter r0;

        r0 := @this: ucar.nc2.iosp.misc.Uspln$UsplnSeqIter;

        i0 := @parameter0: int;

        return;
    }

    public int getCurrentRecno()
    {
        int $i0, $i1;
        ucar.nc2.iosp.misc.Uspln$UsplnSeqIter r0;

        r0 := @this: ucar.nc2.iosp.misc.Uspln$UsplnSeqIter;

        $i0 = r0.<ucar.nc2.iosp.misc.Uspln$UsplnSeqIter: int numFlashes>;

        $i1 = $i0 - 1;

        return $i1;
    }
}
