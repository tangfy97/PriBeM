class com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ValueObjectHandler extends java.lang.Object implements com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$Handler
{
    final com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker this$0;

    private void <init>(com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker)
    {
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker r1;
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ValueObjectHandler r0;

        r0 := @this: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ValueObjectHandler;

        r1 := @parameter0: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker;

        r0.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ValueObjectHandler: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean isInlinable()
    {
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ValueObjectHandler r0;

        r0 := @this: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ValueObjectHandler;

        return 0;
    }

    public void handle(java.lang.String, java.lang.Object)
    {
        java.lang.reflect.Method[] $r3;
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker $r5;
        java.util.regex.Matcher $r11;
        java.lang.reflect.Method r8;
        boolean $z0;
        java.lang.IllegalAccessException $r29;
        java.lang.reflect.InvocationTargetException $r22;
        com.google.gxp.compiler.dot.GraphSink $r6;
        java.lang.StringBuilder $r13, $r16, $r18, $r23, $r24, $r27, $r30, $r31, $r34;
        java.util.regex.Pattern $r9;
        java.lang.Object[] $r20;
        java.util.LinkedHashMap $r0;
        int i0, $i1, i2;
        java.lang.String r7, $r10, $r14, $r15, $r17, $r19, $r26, $r28, $r33, $r35;
        java.lang.Class[] $r12;
        java.lang.Object r1, $r21;
        java.lang.Class $r2, $r25, $r32;
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ValueObjectHandler r4;

        r4 := @this: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ValueObjectHandler;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object;

        $r0 = staticinvoke <com.google.gxp.com.google.common.collect.Maps: java.util.LinkedHashMap newLinkedHashMap()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        i0 = lengthof $r3;

        i2 = 0;

     label1:
        if i2 >= i0 goto label7;

        r8 = $r3[i2];

        $r9 = staticinvoke <com.google.gxp.compiler.dot.ReflectiveGraphRenderer: java.util.regex.Pattern access$600()>();

        $r10 = virtualinvoke r8.<java.lang.reflect.Method: java.lang.String getName()>();

        $r11 = virtualinvoke $r9.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r10);

        $z0 = virtualinvoke $r11.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label6;

        $r12 = virtualinvoke r8.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i1 = lengthof $r12;

        if $i1 != 0 goto label6;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r11.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r15 = virtualinvoke $r14.<java.lang.String: java.lang.String toLowerCase()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r11.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r20 = newarray (java.lang.Object)[0];

        $r21 = virtualinvoke r8.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r20);

        specialinvoke r4.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ValueObjectHandler: void handleProperty(java.lang.String,java.util.Map,java.lang.String,java.lang.Object)>(r7, $r0, $r19, $r21);

     label3:
        goto label6;

     label4:
        $r29 := @caughtexception;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("->");

        $r32 = virtualinvoke $r29.<java.lang.Object: java.lang.Class getClass()>();

        $r33 = virtualinvoke $r32.<java.lang.Class: java.lang.String getSimpleName()>();

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r35);

        goto label6;

     label5:
        $r22 := @caughtexception;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("->");

        $r25 = virtualinvoke $r22.<java.lang.Object: java.lang.Class getClass()>();

        $r26 = virtualinvoke $r25.<java.lang.Class: java.lang.String getSimpleName()>();

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r28);

     label6:
        i2 = i2 + 1;

        goto label1;

     label7:
        $r5 = r4.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ValueObjectHandler: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker this$0>;

        $r6 = staticinvoke <com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker: com.google.gxp.compiler.dot.GraphSink access$200(com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker)>($r5);

        interfaceinvoke $r6.<com.google.gxp.compiler.dot.GraphSink: void recordNode(java.lang.String,java.util.Map)>(r7, $r0);

        return;

        catch java.lang.IllegalAccessException from label2 to label3 with label4;
        catch java.lang.reflect.InvocationTargetException from label2 to label3 with label5;
    }

    private void handleProperty(java.lang.String, java.util.Map, java.lang.String, java.lang.Object)
    {
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker $r2, $r4, $r8;
        java.util.Map r10;
        java.lang.String r6, r7, $r9, $r13, $r15;
        com.google.gxp.compiler.dot.GraphSink $r5;
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$Handler $r16;
        java.lang.Object r0;
        java.lang.Class $r3;
        java.lang.StringBuilder $r11, $r12, $r14;
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ValueObjectHandler r1;

        r1 := @this: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ValueObjectHandler;

        r6 := @parameter0: java.lang.String;

        r10 := @parameter1: java.util.Map;

        r7 := @parameter2: java.lang.String;

        r0 := @parameter3: java.lang.Object;

        if r0 != null goto label1;

        $r16 = null;

        goto label2;

     label1:
        $r2 = r1.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ValueObjectHandler: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker this$0>;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r16 = staticinvoke <com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$Handler access$700(com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker,java.lang.Class)>($r2, $r3);

     label2:
        if $r16 != null goto label3;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("= ");

        $r13 = staticinvoke <com.google.gxp.compiler.dot.ReflectiveGraphRenderer: java.lang.String access$100(java.lang.Object)>(r0);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r15);

        goto label4;

     label3:
        $r4 = r1.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ValueObjectHandler: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker this$0>;

        $r5 = staticinvoke <com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker: com.google.gxp.compiler.dot.GraphSink access$200(com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker)>($r4);

        $r8 = r1.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ValueObjectHandler: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker this$0>;

        $r9 = virtualinvoke $r8.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker: java.lang.String renderSubgraph(java.lang.Object)>(r0);

        interfaceinvoke $r5.<com.google.gxp.compiler.dot.GraphSink: void edge(java.lang.String,java.lang.String,java.lang.String)>(r6, r7, $r9);

     label4:
        return;
    }

    void <init>(com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker, com.google.gxp.compiler.dot.ReflectiveGraphRenderer$1)
    {
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$1 r2;
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker r1;
        com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ValueObjectHandler r0;

        r0 := @this: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ValueObjectHandler;

        r1 := @parameter0: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker;

        r2 := @parameter1: com.google.gxp.compiler.dot.ReflectiveGraphRenderer$1;

        specialinvoke r0.<com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker$ValueObjectHandler: void <init>(com.google.gxp.compiler.dot.ReflectiveGraphRenderer$Worker)>(r1);

        return;
    }
}
