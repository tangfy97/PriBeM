public class org.apache.batik.gvt.ImageNode extends org.apache.batik.gvt.CompositeGraphicsNode
{
    protected boolean hitCheckChildren;

    public void <init>()
    {
        org.apache.batik.gvt.ImageNode r0;

        r0 := @this: org.apache.batik.gvt.ImageNode;

        specialinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode: void <init>()>();

        r0.<org.apache.batik.gvt.ImageNode: boolean hitCheckChildren> = 0;

        return;
    }

    public void setVisible(boolean)
    {
        org.apache.batik.gvt.ImageNode r0;
        boolean z0;

        r0 := @this: org.apache.batik.gvt.ImageNode;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<org.apache.batik.gvt.AbstractGraphicsNode: void fireGraphicsNodeChangeStarted()>();

        r0.<org.apache.batik.gvt.AbstractGraphicsNode: boolean isVisible> = z0;

        virtualinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode: void invalidateGeometryCache()>();

        virtualinvoke r0.<org.apache.batik.gvt.AbstractGraphicsNode: void fireGraphicsNodeChangeCompleted()>();

        return;
    }

    public java.awt.geom.Rectangle2D getPrimitiveBounds()
    {
        org.apache.batik.gvt.ImageNode r0;
        boolean $z0;
        java.awt.geom.Rectangle2D $r1;

        r0 := @this: org.apache.batik.gvt.ImageNode;

        $z0 = r0.<org.apache.batik.gvt.AbstractGraphicsNode: boolean isVisible>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = specialinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D getPrimitiveBounds()>();

        return $r1;
    }

    public void setHitCheckChildren(boolean)
    {
        org.apache.batik.gvt.ImageNode r0;
        boolean z0;

        r0 := @this: org.apache.batik.gvt.ImageNode;

        z0 := @parameter0: boolean;

        r0.<org.apache.batik.gvt.ImageNode: boolean hitCheckChildren> = z0;

        return;
    }

    public boolean getHitCheckChildren()
    {
        org.apache.batik.gvt.ImageNode r0;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.ImageNode;

        $z0 = r0.<org.apache.batik.gvt.ImageNode: boolean hitCheckChildren>;

        return $z0;
    }

    public void paint(java.awt.Graphics2D)
    {
        org.apache.batik.gvt.ImageNode r0;
        java.awt.Graphics2D r1;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.ImageNode;

        r1 := @parameter0: java.awt.Graphics2D;

        $z0 = r0.<org.apache.batik.gvt.AbstractGraphicsNode: boolean isVisible>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.apache.batik.gvt.AbstractGraphicsNode: void paint(java.awt.Graphics2D)>(r1);

     label1:
        return;
    }

    public boolean contains(java.awt.geom.Point2D)
    {
        java.awt.geom.Point2D r1;
        org.apache.batik.gvt.ImageNode r0;
        int $i0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.batik.gvt.ImageNode;

        r1 := @parameter0: java.awt.geom.Point2D;

        $i0 = r0.<org.apache.batik.gvt.AbstractGraphicsNode: int pointerEventType>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label4;
            case 5: goto label4;
            case 6: goto label4;
            case 7: goto label4;
            case 8: goto label5;
            default: goto label6;
        };

     label1:
        $z1 = r0.<org.apache.batik.gvt.AbstractGraphicsNode: boolean isVisible>;

        if $z1 == 0 goto label2;

        $z2 = specialinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode: boolean contains(java.awt.geom.Point2D)>(r1);

        if $z2 == 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;

     label4:
        $z0 = specialinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode: boolean contains(java.awt.geom.Point2D)>(r1);

        return $z0;

     label5:
        return 0;

     label6:
        return 0;
    }

    public org.apache.batik.gvt.GraphicsNode nodeHitAt(java.awt.geom.Point2D)
    {
        java.awt.geom.Point2D r1;
        org.apache.batik.gvt.GraphicsNode $r2;
        org.apache.batik.gvt.ImageNode r0, $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.gvt.ImageNode;

        r1 := @parameter0: java.awt.geom.Point2D;

        $z0 = r0.<org.apache.batik.gvt.ImageNode: boolean hitCheckChildren>;

        if $z0 == 0 goto label1;

        $r2 = specialinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode nodeHitAt(java.awt.geom.Point2D)>(r1);

        return $r2;

     label1:
        $z1 = virtualinvoke r0.<org.apache.batik.gvt.ImageNode: boolean contains(java.awt.geom.Point2D)>(r1);

        if $z1 == 0 goto label2;

        $r3 = r0;

        goto label3;

     label2:
        $r3 = null;

     label3:
        return $r3;
    }

    public void setImage(org.apache.batik.gvt.GraphicsNode)
    {
        org.apache.batik.gvt.RootGraphicsNode $r5;
        org.apache.batik.gvt.GraphicsNode r1;
        org.apache.batik.gvt.GraphicsNode[] $r2;
        org.apache.batik.gvt.ImageNode r0;
        int $i0;
        org.apache.batik.gvt.AbstractGraphicsNode $r3, $r4;

        r0 := @this: org.apache.batik.gvt.ImageNode;

        r1 := @parameter0: org.apache.batik.gvt.GraphicsNode;

        virtualinvoke r0.<org.apache.batik.gvt.AbstractGraphicsNode: void fireGraphicsNodeChangeStarted()>();

        virtualinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode: void invalidateGeometryCache()>();

        $i0 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        if $i0 != 0 goto label1;

        virtualinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode: void ensureCapacity(int)>(1);

     label1:
        $r2 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $r2[0] = r1;

        $r3 = (org.apache.batik.gvt.AbstractGraphicsNode) r1;

        virtualinvoke $r3.<org.apache.batik.gvt.AbstractGraphicsNode: void setParent(org.apache.batik.gvt.CompositeGraphicsNode)>(r0);

        $r4 = (org.apache.batik.gvt.AbstractGraphicsNode) r1;

        $r5 = virtualinvoke r0.<org.apache.batik.gvt.AbstractGraphicsNode: org.apache.batik.gvt.RootGraphicsNode getRoot()>();

        virtualinvoke $r4.<org.apache.batik.gvt.AbstractGraphicsNode: void setRoot(org.apache.batik.gvt.RootGraphicsNode)>($r5);

        r0.<org.apache.batik.gvt.CompositeGraphicsNode: int count> = 1;

        virtualinvoke r0.<org.apache.batik.gvt.AbstractGraphicsNode: void fireGraphicsNodeChangeCompleted()>();

        return;
    }

    public org.apache.batik.gvt.GraphicsNode getImage()
    {
        org.apache.batik.gvt.GraphicsNode $r2;
        org.apache.batik.gvt.GraphicsNode[] $r1;
        org.apache.batik.gvt.ImageNode r0;
        int $i0;

        r0 := @this: org.apache.batik.gvt.ImageNode;

        $i0 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: int count>;

        if $i0 <= 0 goto label1;

        $r1 = r0.<org.apache.batik.gvt.CompositeGraphicsNode: org.apache.batik.gvt.GraphicsNode[] children>;

        $r2 = $r1[0];

        return $r2;

     label1:
        return null;
    }
}
