public class org.codehaus.groovy.syntax.RuntimeParserException extends groovy.lang.GroovyRuntimeException
{

    public void <init>(java.lang.String, org.codehaus.groovy.ast.ASTNode)
    {
        org.codehaus.groovy.ast.ASTNode r5;
        java.lang.StringBuffer $r1, $r3, $r4, $r8;
        org.codehaus.groovy.syntax.RuntimeParserException r0;
        java.lang.Class $r6;
        java.lang.String r2, $r7, $r9;

        r0 := @this: org.codehaus.groovy.syntax.RuntimeParserException;

        r2 := @parameter0: java.lang.String;

        r5 := @parameter1: org.codehaus.groovy.ast.ASTNode;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".\nNode: ");

        $r6 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String,org.codehaus.groovy.ast.ASTNode)>($r9, r5);

        return;
    }

    public void throwParserException() throws org.codehaus.groovy.syntax.SyntaxException
    {
        org.codehaus.groovy.ast.ASTNode $r3, $r4;
        org.codehaus.groovy.syntax.RuntimeParserException r1;
        int $i0, $i1;
        java.lang.String $r2;
        org.codehaus.groovy.syntax.SyntaxException $r0;

        r1 := @this: org.codehaus.groovy.syntax.RuntimeParserException;

        $r0 = new org.codehaus.groovy.syntax.SyntaxException;

        $r2 = virtualinvoke r1.<org.codehaus.groovy.syntax.RuntimeParserException: java.lang.String getMessage()>();

        $r3 = virtualinvoke r1.<org.codehaus.groovy.syntax.RuntimeParserException: org.codehaus.groovy.ast.ASTNode getNode()>();

        $i0 = virtualinvoke $r3.<org.codehaus.groovy.ast.ASTNode: int getLineNumber()>();

        $r4 = virtualinvoke r1.<org.codehaus.groovy.syntax.RuntimeParserException: org.codehaus.groovy.ast.ASTNode getNode()>();

        $i1 = virtualinvoke $r4.<org.codehaus.groovy.ast.ASTNode: int getColumnNumber()>();

        specialinvoke $r0.<org.codehaus.groovy.syntax.SyntaxException: void <init>(java.lang.String,int,int)>($r2, $i0, $i1);

        throw $r0;
    }
}
