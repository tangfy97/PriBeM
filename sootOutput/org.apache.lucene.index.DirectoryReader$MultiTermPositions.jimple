class org.apache.lucene.index.DirectoryReader$MultiTermPositions extends org.apache.lucene.index.DirectoryReader$MultiTermDocs implements org.apache.lucene.index.TermPositions
{

    public void <init>(org.apache.lucene.index.IndexReader, org.apache.lucene.index.IndexReader[], int[])
    {
        int[] r3;
        org.apache.lucene.index.IndexReader r1;
        org.apache.lucene.index.DirectoryReader$MultiTermPositions r0;
        org.apache.lucene.index.IndexReader[] r2;

        r0 := @this: org.apache.lucene.index.DirectoryReader$MultiTermPositions;

        r1 := @parameter0: org.apache.lucene.index.IndexReader;

        r2 := @parameter1: org.apache.lucene.index.IndexReader[];

        r3 := @parameter2: int[];

        specialinvoke r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: void <init>(org.apache.lucene.index.IndexReader,org.apache.lucene.index.IndexReader[],int[])>(r1, r2, r3);

        return;
    }

    protected org.apache.lucene.index.TermDocs termDocs(org.apache.lucene.index.IndexReader) throws java.io.IOException
    {
        org.apache.lucene.index.IndexReader r0;
        org.apache.lucene.index.TermPositions $r1;
        org.apache.lucene.index.DirectoryReader$MultiTermPositions r2;

        r2 := @this: org.apache.lucene.index.DirectoryReader$MultiTermPositions;

        r0 := @parameter0: org.apache.lucene.index.IndexReader;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.IndexReader: org.apache.lucene.index.TermPositions termPositions()>();

        return $r1;
    }

    public int nextPosition() throws java.io.IOException
    {
        org.apache.lucene.index.TermDocs $r1;
        org.apache.lucene.index.TermPositions $r2;
        int $i0;
        org.apache.lucene.index.DirectoryReader$MultiTermPositions r0;

        r0 := @this: org.apache.lucene.index.DirectoryReader$MultiTermPositions;

        $r1 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermPositions: org.apache.lucene.index.TermDocs current>;

        $r2 = (org.apache.lucene.index.TermPositions) $r1;

        $i0 = interfaceinvoke $r2.<org.apache.lucene.index.TermPositions: int nextPosition()>();

        return $i0;
    }

    public int getPayloadLength()
    {
        org.apache.lucene.index.TermDocs $r1;
        org.apache.lucene.index.TermPositions $r2;
        int $i0;
        org.apache.lucene.index.DirectoryReader$MultiTermPositions r0;

        r0 := @this: org.apache.lucene.index.DirectoryReader$MultiTermPositions;

        $r1 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermPositions: org.apache.lucene.index.TermDocs current>;

        $r2 = (org.apache.lucene.index.TermPositions) $r1;

        $i0 = interfaceinvoke $r2.<org.apache.lucene.index.TermPositions: int getPayloadLength()>();

        return $i0;
    }

    public byte[] getPayload(byte[], int) throws java.io.IOException
    {
        byte[] r2, $r4;
        org.apache.lucene.index.TermDocs $r1;
        org.apache.lucene.index.TermPositions $r3;
        int i0;
        org.apache.lucene.index.DirectoryReader$MultiTermPositions r0;

        r0 := @this: org.apache.lucene.index.DirectoryReader$MultiTermPositions;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        $r1 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermPositions: org.apache.lucene.index.TermDocs current>;

        $r3 = (org.apache.lucene.index.TermPositions) $r1;

        $r4 = interfaceinvoke $r3.<org.apache.lucene.index.TermPositions: byte[] getPayload(byte[],int)>(r2, i0);

        return $r4;
    }

    public boolean isPayloadAvailable()
    {
        org.apache.lucene.index.TermDocs $r1;
        org.apache.lucene.index.TermPositions $r2;
        org.apache.lucene.index.DirectoryReader$MultiTermPositions r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.DirectoryReader$MultiTermPositions;

        $r1 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermPositions: org.apache.lucene.index.TermDocs current>;

        $r2 = (org.apache.lucene.index.TermPositions) $r1;

        $z0 = interfaceinvoke $r2.<org.apache.lucene.index.TermPositions: boolean isPayloadAvailable()>();

        return $z0;
    }
}
