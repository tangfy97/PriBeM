public class org.codehaus.groovy.reflection.ParameterTypes extends java.lang.Object
{
    protected volatile java.lang.Class[] nativeParamTypes;
    protected volatile org.codehaus.groovy.reflection.CachedClass[] parameterTypes;
    protected boolean isVargsMethod;

    public void <init>()
    {
        org.codehaus.groovy.reflection.ParameterTypes r0;

        r0 := @this: org.codehaus.groovy.reflection.ParameterTypes;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(java.lang.Class[])
    {
        java.lang.Class[] r1;
        org.codehaus.groovy.reflection.ParameterTypes r0;

        r0 := @this: org.codehaus.groovy.reflection.ParameterTypes;

        r1 := @parameter0: java.lang.Class[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.groovy.reflection.ParameterTypes: java.lang.Class[] nativeParamTypes> = r1;

        return;
    }

    public void <init>(java.lang.String[])
    {
        java.lang.Class[] $r2, $r4;
        java.lang.String[] r1;
        int $i0, $i1, i2;
        java.lang.Class $r5;
        java.lang.ClassNotFoundException $r6;
        java.lang.String $r3;
        java.lang.NoClassDefFoundError $r7;
        org.codehaus.groovy.reflection.ParameterTypes r0;

        r0 := @this: org.codehaus.groovy.reflection.ParameterTypes;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = lengthof r1;

        $r2 = newarray (java.lang.Class)[$i0];

        r0.<org.codehaus.groovy.reflection.ParameterTypes: java.lang.Class[] nativeParamTypes> = $r2;

        i2 = 0;

     label1:
        $i1 = lengthof r1;

        if i2 == $i1 goto label6;

     label2:
        $r4 = r0.<org.codehaus.groovy.reflection.ParameterTypes: java.lang.Class[] nativeParamTypes>;

        $r3 = r1[i2];

        $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r3);

        $r4[i2] = $r5;

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        $r7 = new java.lang.NoClassDefFoundError;

        specialinvoke $r7.<java.lang.NoClassDefFoundError: void <init>()>();

        virtualinvoke $r7.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r6);

        throw $r7;

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        return;

        catch java.lang.ClassNotFoundException from label2 to label3 with label4;
    }

    public void <init>(org.codehaus.groovy.reflection.CachedClass[])
    {
        org.codehaus.groovy.reflection.CachedClass[] r1;
        org.codehaus.groovy.reflection.ParameterTypes r0;

        r0 := @this: org.codehaus.groovy.reflection.ParameterTypes;

        r1 := @parameter0: org.codehaus.groovy.reflection.CachedClass[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.codehaus.groovy.reflection.ParameterTypes: void setParametersTypes(org.codehaus.groovy.reflection.CachedClass[])>(r1);

        return;
    }

    protected final void setParametersTypes(org.codehaus.groovy.reflection.CachedClass[])
    {
        org.codehaus.groovy.reflection.CachedClass[] r1;
        org.codehaus.groovy.reflection.CachedClass $r2;
        int $i0, $i1, $i2;
        org.codehaus.groovy.reflection.ParameterTypes r0;
        boolean $z0, $z1;

        r0 := @this: org.codehaus.groovy.reflection.ParameterTypes;

        r1 := @parameter0: org.codehaus.groovy.reflection.CachedClass[];

        r0.<org.codehaus.groovy.reflection.ParameterTypes: org.codehaus.groovy.reflection.CachedClass[] parameterTypes> = r1;

        $i0 = lengthof r1;

        if $i0 <= 0 goto label1;

        $i1 = lengthof r1;

        $i2 = $i1 - 1;

        $r2 = r1[$i2];

        $z0 = $r2.<org.codehaus.groovy.reflection.CachedClass: boolean isArray>;

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<org.codehaus.groovy.reflection.ParameterTypes: boolean isVargsMethod> = $z1;

        return;
    }

    public org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()
    {
        org.codehaus.groovy.reflection.CachedClass[] $r1, $r2;
        org.codehaus.groovy.reflection.ParameterTypes r0;

        r0 := @this: org.codehaus.groovy.reflection.ParameterTypes;

        $r1 = r0.<org.codehaus.groovy.reflection.ParameterTypes: org.codehaus.groovy.reflection.CachedClass[] parameterTypes>;

        if $r1 != null goto label1;

        specialinvoke r0.<org.codehaus.groovy.reflection.ParameterTypes: void getParametersTypes0()>();

     label1:
        $r2 = r0.<org.codehaus.groovy.reflection.ParameterTypes: org.codehaus.groovy.reflection.CachedClass[] parameterTypes>;

        return $r2;
    }

    private synchronized void getParametersTypes0()
    {
        org.codehaus.groovy.reflection.CachedClass[] $r1, $r6;
        java.lang.Class[] $r2, r3, $r7;
        org.codehaus.groovy.reflection.CachedClass $r5;
        int $i0, i1, $i2;
        java.lang.Class $r4;
        org.codehaus.groovy.reflection.ParameterTypes r0;

        r0 := @this: org.codehaus.groovy.reflection.ParameterTypes;

        $r1 = r0.<org.codehaus.groovy.reflection.ParameterTypes: org.codehaus.groovy.reflection.CachedClass[] parameterTypes>;

        if $r1 == null goto label1;

        return;

     label1:
        $r2 = r0.<org.codehaus.groovy.reflection.ParameterTypes: java.lang.Class[] nativeParamTypes>;

        if $r2 != null goto label2;

        $r7 = virtualinvoke r0.<org.codehaus.groovy.reflection.ParameterTypes: java.lang.Class[] getPT()>();

        goto label3;

     label2:
        $r7 = r0.<org.codehaus.groovy.reflection.ParameterTypes: java.lang.Class[] nativeParamTypes>;

     label3:
        r3 = $r7;

        $i0 = lengthof $r7;

        $r6 = newarray (org.codehaus.groovy.reflection.CachedClass)[$i0];

        i1 = 0;

     label4:
        $i2 = lengthof r3;

        if i1 == $i2 goto label5;

        $r4 = r3[i1];

        $r5 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: org.codehaus.groovy.reflection.CachedClass getCachedClass(java.lang.Class)>($r4);

        $r6[i1] = $r5;

        i1 = i1 + 1;

        goto label4;

     label5:
        r0.<org.codehaus.groovy.reflection.ParameterTypes: java.lang.Class[] nativeParamTypes> = r3;

        virtualinvoke r0.<org.codehaus.groovy.reflection.ParameterTypes: void setParametersTypes(org.codehaus.groovy.reflection.CachedClass[])>($r6);

        return;
    }

    public java.lang.Class[] getNativeParameterTypes()
    {
        java.lang.Class[] $r1, $r2;
        org.codehaus.groovy.reflection.ParameterTypes r0;

        r0 := @this: org.codehaus.groovy.reflection.ParameterTypes;

        $r1 = r0.<org.codehaus.groovy.reflection.ParameterTypes: java.lang.Class[] nativeParamTypes>;

        if $r1 != null goto label1;

        specialinvoke r0.<org.codehaus.groovy.reflection.ParameterTypes: void getNativeParameterTypes0()>();

     label1:
        $r2 = r0.<org.codehaus.groovy.reflection.ParameterTypes: java.lang.Class[] nativeParamTypes>;

        return $r2;
    }

    private synchronized void getNativeParameterTypes0()
    {
        org.codehaus.groovy.reflection.CachedClass[] $r2, $r3, $r4, $r5;
        java.lang.Class[] $r1, r8;
        org.codehaus.groovy.reflection.CachedClass $r6;
        int $i0, $i1, i2;
        java.lang.Class $r7;
        org.codehaus.groovy.reflection.ParameterTypes r0;

        r0 := @this: org.codehaus.groovy.reflection.ParameterTypes;

        $r1 = r0.<org.codehaus.groovy.reflection.ParameterTypes: java.lang.Class[] nativeParamTypes>;

        if $r1 == null goto label1;

        return;

     label1:
        $r2 = r0.<org.codehaus.groovy.reflection.ParameterTypes: org.codehaus.groovy.reflection.CachedClass[] parameterTypes>;

        if $r2 == null goto label4;

        $r3 = r0.<org.codehaus.groovy.reflection.ParameterTypes: org.codehaus.groovy.reflection.CachedClass[] parameterTypes>;

        $i0 = lengthof $r3;

        r8 = newarray (java.lang.Class)[$i0];

        i2 = 0;

     label2:
        $r4 = r0.<org.codehaus.groovy.reflection.ParameterTypes: org.codehaus.groovy.reflection.CachedClass[] parameterTypes>;

        $i1 = lengthof $r4;

        if i2 == $i1 goto label3;

        $r5 = r0.<org.codehaus.groovy.reflection.ParameterTypes: org.codehaus.groovy.reflection.CachedClass[] parameterTypes>;

        $r6 = $r5[i2];

        $r7 = virtualinvoke $r6.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        r8[i2] = $r7;

        i2 = i2 + 1;

        goto label2;

     label3:
        goto label5;

     label4:
        r8 = virtualinvoke r0.<org.codehaus.groovy.reflection.ParameterTypes: java.lang.Class[] getPT()>();

     label5:
        r0.<org.codehaus.groovy.reflection.ParameterTypes: java.lang.Class[] nativeParamTypes> = r8;

        return;
    }

    protected java.lang.Class[] getPT()
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.Class $r2;
        java.lang.String $r3;
        org.codehaus.groovy.reflection.ParameterTypes r1;

        r1 := @this: org.codehaus.groovy.reflection.ParameterTypes;

        $r0 = new java.lang.UnsupportedOperationException;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r3);

        throw $r0;
    }

    public boolean isVargsMethod(java.lang.Object[])
    {
        java.lang.Object[] r2;
        org.codehaus.groovy.reflection.CachedClass[] $r1, $r3, $r6;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0, $z1, $z2;
        org.codehaus.groovy.reflection.CachedClass $r7;
        java.lang.Object r4;
        java.lang.Class $r5, $r8;
        org.codehaus.groovy.reflection.ParameterTypes r0;

        r0 := @this: org.codehaus.groovy.reflection.ParameterTypes;

        r2 := @parameter0: java.lang.Object[];

        $z0 = r0.<org.codehaus.groovy.reflection.ParameterTypes: boolean isVargsMethod>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<org.codehaus.groovy.reflection.ParameterTypes: org.codehaus.groovy.reflection.CachedClass[] parameterTypes>;

        $i0 = lengthof $r1;

        i1 = $i0 - 1;

        $i2 = lengthof r2;

        if i1 != $i2 goto label2;

        return 1;

     label2:
        $i3 = lengthof r2;

        if i1 <= $i3 goto label3;

        return 0;

     label3:
        $i5 = lengthof r2;

        $r3 = r0.<org.codehaus.groovy.reflection.ParameterTypes: org.codehaus.groovy.reflection.CachedClass[] parameterTypes>;

        $i4 = lengthof $r3;

        if $i5 <= $i4 goto label4;

        return 1;

     label4:
        $i6 = lengthof r2;

        $i7 = $i6 - 1;

        r4 = r2[$i7];

        if r4 != null goto label5;

        return 1;

     label5:
        $r5 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = r0.<org.codehaus.groovy.reflection.ParameterTypes: org.codehaus.groovy.reflection.CachedClass[] parameterTypes>;

        $r7 = $r6[i1];

        $r8 = virtualinvoke $r7.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $z1 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

        if $z1 != 0 goto label6;

        $z2 = 1;

        goto label7;

     label6:
        $z2 = 0;

     label7:
        return $z2;
    }

    public final java.lang.Object[] coerceArgumentsToClasses(java.lang.Object[])
    {
        java.lang.Object[] $r1, r6;
        org.codehaus.groovy.reflection.CachedClass[] r2;
        org.codehaus.groovy.reflection.CachedClass $r4;
        int i0, i1;
        java.lang.Object r3, $r5;
        org.codehaus.groovy.reflection.ParameterTypes r0;

        r0 := @this: org.codehaus.groovy.reflection.ParameterTypes;

        r6 := @parameter0: java.lang.Object[];

        $r1 = specialinvoke r0.<org.codehaus.groovy.reflection.ParameterTypes: java.lang.Object[] correctArguments(java.lang.Object[])>(r6);

        r2 = r0.<org.codehaus.groovy.reflection.ParameterTypes: org.codehaus.groovy.reflection.CachedClass[] parameterTypes>;

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = $r1[i1];

        if r3 == null goto label2;

        $r4 = r2[i1];

        $r5 = virtualinvoke $r4.<org.codehaus.groovy.reflection.CachedClass: java.lang.Object coerceArgument(java.lang.Object)>(r3);

        $r1[i1] = $r5;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return $r1;
    }

    private java.lang.Object[] correctArguments(java.lang.Object[])
    {
        java.lang.Object[] r0, $r3, $r4, $r5, $r10;
        org.codehaus.groovy.reflection.CachedClass[] r2;
        int $i0, $i1;
        boolean $z0, $z1, $z2;
        org.codehaus.groovy.reflection.CachedClass $r6;
        java.lang.Class $r7, $r8;
        java.lang.Object $r9;
        org.codehaus.groovy.reflection.ParameterTypes r1;

        r1 := @this: org.codehaus.groovy.reflection.ParameterTypes;

        r0 := @parameter0: java.lang.Object[];

        if r0 != null goto label1;

        $r10 = <org.codehaus.groovy.runtime.MetaClassHelper: java.lang.Object[] EMPTY_ARRAY>;

        return $r10;

     label1:
        r2 = r1.<org.codehaus.groovy.reflection.ParameterTypes: org.codehaus.groovy.reflection.CachedClass[] parameterTypes>;

        $i0 = lengthof r2;

        if $i0 != 1 goto label3;

        $i1 = lengthof r0;

        if $i1 != 0 goto label3;

        $z2 = r1.<org.codehaus.groovy.reflection.ParameterTypes: boolean isVargsMethod>;

        if $z2 == 0 goto label2;

        $r5 = newarray (java.lang.Object)[1];

        $r6 = r2[0];

        $r7 = virtualinvoke $r6.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.Class getComponentType()>();

        $r9 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r8, 0);

        $r5[0] = $r9;

        return $r5;

     label2:
        $r4 = <org.codehaus.groovy.runtime.MetaClassHelper: java.lang.Object[] ARRAY_WITH_NULL>;

        return $r4;

     label3:
        $z0 = r1.<org.codehaus.groovy.reflection.ParameterTypes: boolean isVargsMethod>;

        if $z0 == 0 goto label4;

        $z1 = virtualinvoke r1.<org.codehaus.groovy.reflection.ParameterTypes: boolean isVargsMethod(java.lang.Object[])>(r0);

        if $z1 == 0 goto label4;

        $r3 = staticinvoke <org.codehaus.groovy.reflection.ParameterTypes: java.lang.Object[] fitToVargs(java.lang.Object[],org.codehaus.groovy.reflection.CachedClass[])>(r0, r2);

        return $r3;

     label4:
        return r0;
    }

    private static java.lang.Object[] fitToVargs(java.lang.Object[], org.codehaus.groovy.reflection.CachedClass[])
    {
        org.codehaus.groovy.reflection.CachedClass[] r0;
        boolean $z0;
        org.codehaus.groovy.reflection.CachedClass $r1;
        org.codehaus.groovy.GroovyBugError $r6;
        java.lang.Object[] r5, r11, r13, r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30;
        java.lang.Class $r2, $r3, $r4, $r8;
        java.lang.Object $r7, $r9, $r10, r12;

        r5 := @parameter0: java.lang.Object[];

        r0 := @parameter1: org.codehaus.groovy.reflection.CachedClass[];

        $i0 = lengthof r0;

        $i1 = $i0 - 1;

        $r1 = r0[$i1];

        $r2 = virtualinvoke $r1.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Class getComponentType()>();

        $r4 = staticinvoke <org.codehaus.groovy.reflection.ReflectionCache: java.lang.Class autoboxType(java.lang.Class)>($r3);

        $i4 = lengthof r5;

        $i2 = lengthof r0;

        $i3 = $i2 - 1;

        if $i4 != $i3 goto label1;

        $i27 = lengthof r0;

        r11 = newarray (java.lang.Object)[$i27];

        $i28 = lengthof r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, 0, r11, 0, $i28);

        $r10 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: java.lang.Object makeArray(java.lang.Object,java.lang.Class,int)>(null, $r4, 0);

        $i29 = lengthof r11;

        $i30 = $i29 - 1;

        r11[$i30] = $r10;

        return r11;

     label1:
        $i6 = lengthof r5;

        $i5 = lengthof r0;

        if $i6 != $i5 goto label3;

        $i18 = lengthof r5;

        $i19 = $i18 - 1;

        r12 = r5[$i19];

        if r12 == null goto label2;

        $r8 = virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r8.<java.lang.Class: boolean isArray()>();

        if $z0 != 0 goto label2;

        $r9 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: java.lang.Object makeArray(java.lang.Object,java.lang.Class,int)>(r12, $r4, 1);

        $i20 = lengthof r5;

        $i21 = $i20 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, $i21, $r9, 0, 1);

        $i22 = lengthof r0;

        r13 = newarray (java.lang.Object)[$i22];

        $i23 = lengthof r0;

        $i24 = $i23 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, 0, r13, 0, $i24);

        $i25 = lengthof r13;

        $i26 = $i25 - 1;

        r13[$i26] = $r9;

        return r13;

     label2:
        return r5;

     label3:
        $i8 = lengthof r5;

        $i7 = lengthof r0;

        if $i8 <= $i7 goto label4;

        $i9 = lengthof r0;

        r14 = newarray (java.lang.Object)[$i9];

        $i10 = lengthof r0;

        $i11 = $i10 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, 0, r14, 0, $i11);

        $i13 = lengthof r5;

        $i12 = lengthof r0;

        $i14 = lengthof r0;

        $i15 = $i14 - 1;

        $r7 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: java.lang.Object makeCommonArray(java.lang.Object[],int,java.lang.Class)>(r5, $i15, $r4);

        $i16 = lengthof r14;

        $i17 = $i16 - 1;

        r14[$i17] = $r7;

        return r14;

     label4:
        $r6 = new org.codehaus.groovy.GroovyBugError;

        specialinvoke $r6.<org.codehaus.groovy.GroovyBugError: void <init>(java.lang.String)>("trying to call a vargs method without enough arguments");

        throw $r6;
    }

    public boolean isValidMethod(java.lang.Class[])
    {
        org.codehaus.groovy.reflection.CachedClass[] $r2;
        java.lang.Class[] r0;
        int i0, $i1, i2, $i3, $i4;
        org.codehaus.groovy.reflection.ParameterTypes r1;
        boolean $z0, $z1, $z2;

        r1 := @this: org.codehaus.groovy.reflection.ParameterTypes;

        r0 := @parameter0: java.lang.Class[];

        if r0 != null goto label1;

        return 1;

     label1:
        i0 = lengthof r0;

        $r2 = virtualinvoke r1.<org.codehaus.groovy.reflection.ParameterTypes: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $i1 = lengthof $r2;

        i2 = $i1 - 1;

        if i0 < i2 goto label2;

        $z1 = r1.<org.codehaus.groovy.reflection.ParameterTypes: boolean isVargsMethod>;

        if $z1 == 0 goto label2;

        $z2 = specialinvoke r1.<org.codehaus.groovy.reflection.ParameterTypes: boolean isValidVarargsMethod(java.lang.Class[],int,org.codehaus.groovy.reflection.CachedClass[],int)>(r0, i0, $r2, i2);

        return $z2;

     label2:
        $i3 = lengthof $r2;

        if $i3 != i0 goto label3;

        $z0 = specialinvoke r1.<org.codehaus.groovy.reflection.ParameterTypes: boolean isValidExactMethod(java.lang.Class[],int,org.codehaus.groovy.reflection.CachedClass[])>(r0, i0, $r2);

        return $z0;

     label3:
        $i4 = lengthof $r2;

        if $i4 != 1 goto label4;

        if i0 != 0 goto label4;

        return 1;

     label4:
        return 0;
    }

    private boolean isValidExactMethod(java.lang.Class[], int, org.codehaus.groovy.reflection.CachedClass[])
    {
        org.codehaus.groovy.reflection.CachedClass[] r0;
        java.lang.Class[] r1;
        org.codehaus.groovy.reflection.CachedClass $r3;
        int i0, i1;
        java.lang.Class $r2;
        org.codehaus.groovy.reflection.ParameterTypes r4;
        boolean $z0;

        r4 := @this: org.codehaus.groovy.reflection.ParameterTypes;

        r1 := @parameter0: java.lang.Class[];

        i0 := @parameter1: int;

        r0 := @parameter2: org.codehaus.groovy.reflection.CachedClass[];

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $r3 = r0[i1];

        $r2 = r1[i1];

        $z0 = virtualinvoke $r3.<org.codehaus.groovy.reflection.CachedClass: boolean isAssignableFrom(java.lang.Class)>($r2);

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        return 0;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return 1;
    }

    private boolean isValidVarargsMethod(java.lang.Class[], int, org.codehaus.groovy.reflection.CachedClass[], int)
    {
        org.codehaus.groovy.reflection.CachedClass[] r0;
        int i0, i1, $i2, i3, i4;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Class[] r3;
        org.codehaus.groovy.reflection.CachedClass $r8, r10;
        java.lang.Class $r1, $r2, $r4, $r5, $r6, $r7;
        org.codehaus.groovy.reflection.ParameterTypes r9;

        r9 := @this: org.codehaus.groovy.reflection.ParameterTypes;

        r3 := @parameter0: java.lang.Class[];

        i1 := @parameter1: int;

        r0 := @parameter2: org.codehaus.groovy.reflection.CachedClass[];

        i0 := @parameter3: int;

        i3 = 0;

     label01:
        if i3 >= i0 goto label04;

        $r8 = r0[i3];

        $r7 = r3[i3];

        $z3 = virtualinvoke $r8.<org.codehaus.groovy.reflection.CachedClass: boolean isAssignableFrom(java.lang.Class)>($r7);

        if $z3 == 0 goto label02;

        goto label03;

     label02:
        return 0;

     label03:
        i3 = i3 + 1;

        goto label01;

     label04:
        r10 = r0[i0];

        $r1 = virtualinvoke r10.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Class getComponentType()>();

        $i2 = lengthof r0;

        if i1 != $i2 goto label06;

        $r5 = r3[i0];

        $z1 = virtualinvoke r10.<org.codehaus.groovy.reflection.CachedClass: boolean isAssignableFrom(java.lang.Class)>($r5);

        if $z1 != 0 goto label05;

        $r6 = r3[i0];

        $z2 = staticinvoke <org.codehaus.groovy.reflection.ParameterTypes: boolean testComponentAssignable(java.lang.Class,java.lang.Class)>($r2, $r6);

        if $z2 == 0 goto label06;

     label05:
        return 1;

     label06:
        i4 = i0;

     label07:
        if i4 >= i1 goto label10;

        $r4 = r3[i4];

        $z0 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: boolean isAssignableFrom(java.lang.Class,java.lang.Class)>($r2, $r4);

        if $z0 == 0 goto label08;

        goto label09;

     label08:
        return 0;

     label09:
        i4 = i4 + 1;

        goto label07;

     label10:
        return 1;
    }

    private static final boolean testComponentAssignable(java.lang.Class, java.lang.Class)
    {
        java.lang.Class r0, $r1, r2;
        boolean $z0;

        r2 := @parameter0: java.lang.Class;

        r0 := @parameter1: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.Class getComponentType()>();

        if $r1 != null goto label1;

        return 0;

     label1:
        $z0 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: boolean isAssignableFrom(java.lang.Class,java.lang.Class)>(r2, $r1);

        return $z0;
    }

    public boolean isValidMethod(java.lang.Object[])
    {
        org.codehaus.groovy.reflection.CachedClass[] $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.codehaus.groovy.reflection.CachedClass $r4, $r6, $r16, r18;
        org.codehaus.groovy.reflection.ParameterTypes r1;
        java.lang.Object[] r0;
        int i0, $i1, i2, $i3, $i4, $i5, i6, i7, $i8, i9;
        java.lang.Object $r3, $r9, $r11, $r13, $r15;
        java.lang.Class $r5, $r7, $r8, $r10, $r12, $r14, $r17;

        r1 := @this: org.codehaus.groovy.reflection.ParameterTypes;

        r0 := @parameter0: java.lang.Object[];

        if r0 != null goto label01;

        return 1;

     label01:
        i0 = lengthof r0;

        $r2 = virtualinvoke r1.<org.codehaus.groovy.reflection.ParameterTypes: org.codehaus.groovy.reflection.CachedClass[] getParameterTypes()>();

        $i1 = lengthof $r2;

        i2 = $i1 - 1;

        if i0 < i2 goto label12;

        $i4 = lengthof $r2;

        if $i4 <= 0 goto label12;

        $r6 = $r2[i2];

        $z1 = $r6.<org.codehaus.groovy.reflection.CachedClass: boolean isArray>;

        if $z1 == 0 goto label12;

        i6 = 0;

     label02:
        if i6 >= i2 goto label05;

        $r16 = $r2[i6];

        $r15 = r0[i6];

        $r17 = specialinvoke r1.<org.codehaus.groovy.reflection.ParameterTypes: java.lang.Class getArgClass(java.lang.Object)>($r15);

        $z5 = virtualinvoke $r16.<org.codehaus.groovy.reflection.CachedClass: boolean isAssignableFrom(java.lang.Class)>($r17);

        if $z5 == 0 goto label03;

        goto label04;

     label03:
        return 0;

     label04:
        i6 = i6 + 1;

        goto label02;

     label05:
        r18 = $r2[i2];

        $r7 = virtualinvoke r18.<org.codehaus.groovy.reflection.CachedClass: java.lang.Class getTheClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.Class getComponentType()>();

        $i5 = lengthof $r2;

        if i0 != $i5 goto label07;

        $r11 = r0[i2];

        $r12 = specialinvoke r1.<org.codehaus.groovy.reflection.ParameterTypes: java.lang.Class getArgClass(java.lang.Object)>($r11);

        $z3 = virtualinvoke r18.<org.codehaus.groovy.reflection.CachedClass: boolean isAssignableFrom(java.lang.Class)>($r12);

        if $z3 != 0 goto label06;

        $r13 = r0[i2];

        $r14 = specialinvoke r1.<org.codehaus.groovy.reflection.ParameterTypes: java.lang.Class getArgClass(java.lang.Object)>($r13);

        $z4 = staticinvoke <org.codehaus.groovy.reflection.ParameterTypes: boolean testComponentAssignable(java.lang.Class,java.lang.Class)>($r8, $r14);

        if $z4 == 0 goto label07;

     label06:
        return 1;

     label07:
        i7 = i2;

     label08:
        if i7 >= i0 goto label11;

        $r9 = r0[i7];

        $r10 = specialinvoke r1.<org.codehaus.groovy.reflection.ParameterTypes: java.lang.Class getArgClass(java.lang.Object)>($r9);

        $z2 = staticinvoke <org.codehaus.groovy.runtime.MetaClassHelper: boolean isAssignableFrom(java.lang.Class,java.lang.Class)>($r8, $r10);

        if $z2 == 0 goto label09;

        goto label10;

     label09:
        return 0;

     label10:
        i7 = i7 + 1;

        goto label08;

     label11:
        return 1;

     label12:
        $i8 = lengthof $r2;

        if $i8 != i0 goto label17;

        i9 = 0;

     label13:
        if i9 >= i0 goto label16;

        $r4 = $r2[i9];

        $r3 = r0[i9];

        $r5 = specialinvoke r1.<org.codehaus.groovy.reflection.ParameterTypes: java.lang.Class getArgClass(java.lang.Object)>($r3);

        $z0 = virtualinvoke $r4.<org.codehaus.groovy.reflection.CachedClass: boolean isAssignableFrom(java.lang.Class)>($r5);

        if $z0 == 0 goto label14;

        goto label15;

     label14:
        return 0;

     label15:
        i9 = i9 + 1;

        goto label13;

     label16:
        return 1;

     label17:
        $i3 = lengthof $r2;

        if $i3 != 1 goto label18;

        if i0 != 0 goto label18;

        return 1;

     label18:
        return 0;
    }

    private java.lang.Class getArgClass(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.Class r3;
        org.codehaus.groovy.runtime.wrappers.Wrapper $r1;
        org.codehaus.groovy.reflection.ParameterTypes r2;
        boolean $z0;

        r2 := @this: org.codehaus.groovy.reflection.ParameterTypes;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        r3 = null;

        goto label3;

     label1:
        $z0 = r0 instanceof org.codehaus.groovy.runtime.wrappers.Wrapper;

        if $z0 == 0 goto label2;

        $r1 = (org.codehaus.groovy.runtime.wrappers.Wrapper) r0;

        r3 = virtualinvoke $r1.<org.codehaus.groovy.runtime.wrappers.Wrapper: java.lang.Class getType()>();

        goto label3;

     label2:
        r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

     label3:
        return r3;
    }
}
