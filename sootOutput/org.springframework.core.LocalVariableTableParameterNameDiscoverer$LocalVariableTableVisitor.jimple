class org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor extends org.springframework.asm.commons.EmptyVisitor
{
    private static final java.lang.String CONSTRUCTOR;
    private final java.lang.Class clazz;
    private final java.util.Map memberMap;
    private final java.lang.String name;
    private final org.springframework.asm.Type[] args;
    private final boolean isStatic;
    private java.lang.String[] parameterNames;
    private boolean hasLvtInfo;
    private final int[] lvtSlotIndex;

    public void <init>(java.lang.Class, java.util.Map, java.lang.String, java.lang.String, boolean)
    {
        org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor r0;
        java.lang.String[] $r7;
        org.springframework.asm.Type[] $r5, $r6, $r8;
        int[] $r9;
        java.util.Map r2;
        int $i0;
        java.lang.Class r1;
        java.lang.String r3, r4;
        boolean z0;

        r0 := @this: org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.util.Map;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        specialinvoke r0.<org.springframework.asm.commons.EmptyVisitor: void <init>()>();

        r0.<org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor: boolean hasLvtInfo> = 0;

        r0.<org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor: java.lang.Class clazz> = r1;

        r0.<org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor: java.util.Map memberMap> = r2;

        r0.<org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor: java.lang.String name> = r3;

        $r5 = staticinvoke <org.springframework.asm.Type: org.springframework.asm.Type[] getArgumentTypes(java.lang.String)>(r4);

        r0.<org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor: org.springframework.asm.Type[] args> = $r5;

        $r6 = r0.<org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor: org.springframework.asm.Type[] args>;

        $i0 = lengthof $r6;

        $r7 = newarray (java.lang.String)[$i0];

        r0.<org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor: java.lang.String[] parameterNames> = $r7;

        r0.<org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor: boolean isStatic> = z0;

        $r8 = r0.<org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor: org.springframework.asm.Type[] args>;

        $r9 = staticinvoke <org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor: int[] computeLvtSlotIndices(boolean,org.springframework.asm.Type[])>(z0, $r8);

        r0.<org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor: int[] lvtSlotIndex> = $r9;

        return;
    }

    public void visitLocalVariable(java.lang.String, java.lang.String, java.lang.String, org.springframework.asm.Label, org.springframework.asm.Label, int)
    {
        org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor r0;
        org.springframework.asm.Label r6, r7;
        java.lang.String[] $r3;
        int[] $r1, $r8;
        int i0, $i1, i2, $i3;
        java.lang.String r2, r4, r5;

        r0 := @this: org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor;

        r2 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        r6 := @parameter3: org.springframework.asm.Label;

        r7 := @parameter4: org.springframework.asm.Label;

        i0 := @parameter5: int;

        r0.<org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor: boolean hasLvtInfo> = 1;

        i2 = 0;

        goto label3;

     label1:
        $r1 = r0.<org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor: int[] lvtSlotIndex>;

        $i1 = $r1[i2];

        if $i1 != i0 goto label2;

        $r3 = r0.<org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor: java.lang.String[] parameterNames>;

        $r3[i2] = r2;

     label2:
        i2 = i2 + 1;

     label3:
        $r8 = r0.<org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor: int[] lvtSlotIndex>;

        $i3 = lengthof $r8;

        if i2 < $i3 goto label1;

        return;
    }

    public void visitEnd()
    {
        org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor r0;
        java.lang.reflect.Member $r2;
        java.lang.String[] $r3, $r4;
        java.util.Map $r1;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor;

        $z0 = r0.<org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor: boolean hasLvtInfo>;

        if $z0 != 0 goto label1;

        $z1 = r0.<org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor: boolean isStatic>;

        if $z1 == 0 goto label2;

        $r4 = r0.<org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor: java.lang.String[] parameterNames>;

        $i0 = lengthof $r4;

        if $i0 != 0 goto label2;

     label1:
        $r1 = r0.<org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor: java.util.Map memberMap>;

        $r2 = specialinvoke r0.<org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor: java.lang.reflect.Member resolveMember()>();

        $r3 = r0.<org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor: java.lang.String[] parameterNames>;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

     label2:
        return;
    }

    private java.lang.reflect.Member resolveMember()
    {
        org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor r0;
        java.lang.IllegalStateException $r19;
        java.lang.NoSuchMethodException $r18;
        org.springframework.asm.Type[] $r3, $r5, $r6;
        java.lang.reflect.Constructor $r16;
        int $i0, $i1, i2;
        java.lang.String $r8, $r10, $r11, $r12, $r21, $r24;
        java.lang.reflect.Method $r14;
        boolean $z0;
        java.lang.reflect.Member $r17;
        java.lang.Class[] r4;
        java.lang.Class $r1, $r9, $r13, $r15;
        java.lang.StringBuilder $r20, $r22, $r23;
        java.lang.ClassLoader $r2;
        org.springframework.asm.Type $r7;

        r0 := @this: org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor;

        $r1 = r0.<org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor: java.lang.Class clazz>;

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r3 = r0.<org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor: org.springframework.asm.Type[] args>;

        $i0 = lengthof $r3;

        r4 = newarray (java.lang.Class)[$i0];

        i2 = 0;

        goto label2;

     label1:
        $r6 = r0.<org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor: org.springframework.asm.Type[] args>;

        $r7 = $r6[i2];

        $r8 = virtualinvoke $r7.<org.springframework.asm.Type: java.lang.String getClassName()>();

        $r9 = staticinvoke <org.springframework.util.ClassUtils: java.lang.Class resolveClassName(java.lang.String,java.lang.ClassLoader)>($r8, $r2);

        r4[i2] = $r9;

        i2 = i2 + 1;

     label2:
        $r5 = r0.<org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor: org.springframework.asm.Type[] args>;

        $i1 = lengthof $r5;

        if i2 < $i1 goto label1;

     label3:
        $r11 = "<init>";

        $r10 = r0.<org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor: java.lang.String name>;

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z0 == 0 goto label5;

        $r15 = r0.<org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor: java.lang.Class clazz>;

        $r16 = virtualinvoke $r15.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(r4);

        $r17 = (java.lang.reflect.Member) $r16;

     label4:
        return $r17;

     label5:
        $r13 = r0.<org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor: java.lang.Class clazz>;

        $r12 = r0.<org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor: java.lang.String name>;

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>($r12, r4);

     label6:
        return $r14;

     label7:
        $r18 := @caughtexception;

        $r19 = new java.lang.IllegalStateException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("Method [");

        $r21 = r0.<org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor: java.lang.String name>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] was discovered in the .class file but cannot be resolved in the class object");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r24, $r18);

        throw $r19;

        catch java.lang.NoSuchMethodException from label3 to label4 with label7;
        catch java.lang.NoSuchMethodException from label5 to label6 with label7;
    }

    private static int[] computeLvtSlotIndices(boolean, org.springframework.asm.Type[])
    {
        org.springframework.asm.Type[] r0;
        byte $b1;
        int[] r1;
        int $i0, i2, i3, $i4;
        boolean z0, $z1;
        org.springframework.asm.Type $r2;

        z0 := @parameter0: boolean;

        r0 := @parameter1: org.springframework.asm.Type[];

        $i0 = lengthof r0;

        r1 = newarray (int)[$i0];

        if z0 == 0 goto label1;

        $b1 = 0;

        goto label2;

     label1:
        $b1 = 1;

     label2:
        i2 = $b1;

        i3 = 0;

        goto label6;

     label3:
        r1[i3] = i2;

        $r2 = r0[i3];

        $z1 = staticinvoke <org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor: boolean isWideType(org.springframework.asm.Type)>($r2);

        if $z1 == 0 goto label4;

        i2 = i2 + 2;

        goto label5;

     label4:
        i2 = i2 + 1;

     label5:
        i3 = i3 + 1;

     label6:
        $i4 = lengthof r0;

        if i3 < $i4 goto label3;

        return r1;
    }

    private static boolean isWideType(org.springframework.asm.Type)
    {
        org.springframework.asm.Type r0, $r1, $r2;

        r0 := @parameter0: org.springframework.asm.Type;

        $r1 = <org.springframework.asm.Type: org.springframework.asm.Type LONG_TYPE>;

        if r0 == $r1 goto label1;

        $r2 = <org.springframework.asm.Type: org.springframework.asm.Type DOUBLE_TYPE>;

        if r0 == $r2 goto label1;

        return 0;

     label1:
        return 1;
    }

    public static void <clinit>()
    {
        <org.springframework.core.LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor: java.lang.String CONSTRUCTOR> = "<init>";

        return;
    }
}
