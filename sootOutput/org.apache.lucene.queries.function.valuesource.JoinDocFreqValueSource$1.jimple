class org.apache.lucene.queries.function.valuesource.JoinDocFreqValueSource$1 extends org.apache.lucene.queries.function.docvalues.IntDocValues
{
    final org.apache.lucene.util.BytesRef ref;
    final org.apache.lucene.index.BinaryDocValues val$terms;
    final org.apache.lucene.index.TermsEnum val$termsEnum;
    final org.apache.lucene.queries.function.valuesource.JoinDocFreqValueSource this$0;

    void <init>(org.apache.lucene.queries.function.valuesource.JoinDocFreqValueSource, org.apache.lucene.queries.function.ValueSource, org.apache.lucene.index.BinaryDocValues, org.apache.lucene.index.TermsEnum)
    {
        org.apache.lucene.queries.function.ValueSource r4;
        org.apache.lucene.queries.function.valuesource.JoinDocFreqValueSource$1 r0;
        org.apache.lucene.queries.function.valuesource.JoinDocFreqValueSource r1;
        org.apache.lucene.index.TermsEnum r3;
        org.apache.lucene.util.BytesRef $r5;
        org.apache.lucene.index.BinaryDocValues r2;

        r0 := @this: org.apache.lucene.queries.function.valuesource.JoinDocFreqValueSource$1;

        r1 := @parameter0: org.apache.lucene.queries.function.valuesource.JoinDocFreqValueSource;

        r4 := @parameter1: org.apache.lucene.queries.function.ValueSource;

        r2 := @parameter2: org.apache.lucene.index.BinaryDocValues;

        r3 := @parameter3: org.apache.lucene.index.TermsEnum;

        r0.<org.apache.lucene.queries.function.valuesource.JoinDocFreqValueSource$1: org.apache.lucene.queries.function.valuesource.JoinDocFreqValueSource this$0> = r1;

        r0.<org.apache.lucene.queries.function.valuesource.JoinDocFreqValueSource$1: org.apache.lucene.index.BinaryDocValues val$terms> = r2;

        r0.<org.apache.lucene.queries.function.valuesource.JoinDocFreqValueSource$1: org.apache.lucene.index.TermsEnum val$termsEnum> = r3;

        specialinvoke r0.<org.apache.lucene.queries.function.docvalues.IntDocValues: void <init>(org.apache.lucene.queries.function.ValueSource)>(r4);

        $r5 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r5.<org.apache.lucene.util.BytesRef: void <init>()>();

        r0.<org.apache.lucene.queries.function.valuesource.JoinDocFreqValueSource$1: org.apache.lucene.util.BytesRef ref> = $r5;

        return;
    }

    public int intVal(int)
    {
        org.apache.lucene.queries.function.valuesource.JoinDocFreqValueSource$1 r0;
        org.apache.lucene.queries.function.valuesource.JoinDocFreqValueSource $r10;
        org.apache.lucene.index.TermsEnum $r4, $r5;
        int i0, $i1;
        java.lang.String $r11, $r15;
        boolean $z0;
        org.apache.lucene.util.BytesRef $r1, $r3;
        java.io.IOException $r6;
        java.lang.RuntimeException $r7;
        java.lang.StringBuilder $r8, $r9, $r12, $r13, $r14;
        org.apache.lucene.index.BinaryDocValues $r2;

        r0 := @this: org.apache.lucene.queries.function.valuesource.JoinDocFreqValueSource$1;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<org.apache.lucene.queries.function.valuesource.JoinDocFreqValueSource$1: org.apache.lucene.index.BinaryDocValues val$terms>;

        $r1 = r0.<org.apache.lucene.queries.function.valuesource.JoinDocFreqValueSource$1: org.apache.lucene.util.BytesRef ref>;

        virtualinvoke $r2.<org.apache.lucene.index.BinaryDocValues: void get(int,org.apache.lucene.util.BytesRef)>(i0, $r1);

        $r4 = r0.<org.apache.lucene.queries.function.valuesource.JoinDocFreqValueSource$1: org.apache.lucene.index.TermsEnum val$termsEnum>;

        $r3 = r0.<org.apache.lucene.queries.function.valuesource.JoinDocFreqValueSource$1: org.apache.lucene.util.BytesRef ref>;

        $z0 = virtualinvoke $r4.<org.apache.lucene.index.TermsEnum: boolean seekExact(org.apache.lucene.util.BytesRef,boolean)>($r3, 1);

        if $z0 == 0 goto label3;

        $r5 = r0.<org.apache.lucene.queries.function.valuesource.JoinDocFreqValueSource$1: org.apache.lucene.index.TermsEnum val$termsEnum>;

        $i1 = virtualinvoke $r5.<org.apache.lucene.index.TermsEnum: int docFreq()>();

     label2:
        return $i1;

     label3:
        return 0;

     label4:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("caught exception in function ");

        $r10 = r0.<org.apache.lucene.queries.function.valuesource.JoinDocFreqValueSource$1: org.apache.lucene.queries.function.valuesource.JoinDocFreqValueSource this$0>;

        $r11 = virtualinvoke $r10.<org.apache.lucene.queries.function.valuesource.JoinDocFreqValueSource: java.lang.String description()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : doc=");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r15, $r6);

        throw $r7;

        catch java.io.IOException from label1 to label2 with label4;
    }
}
