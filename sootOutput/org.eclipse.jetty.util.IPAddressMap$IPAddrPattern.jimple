class org.eclipse.jetty.util.IPAddressMap$IPAddrPattern extends java.lang.Object
{
    private final org.eclipse.jetty.util.IPAddressMap$OctetPattern[] _octets;

    public void <init>(java.lang.String) throws java.lang.IllegalArgumentException
    {
        boolean $z0, $z1;
        java.lang.StringBuilder $r4, $r5, $r6, $r14, $r15, $r16, $r21, $r22, $r23;
        java.util.StringTokenizer $r9;
        int $i0, $i1, $i2, i3;
        java.lang.String r2, $r7, $r8, r10, $r17, $r18, $r24, $r25, $r26;
        org.eclipse.jetty.util.IPAddressMap$OctetPattern[] $r1, $r12;
        org.eclipse.jetty.util.IPAddressMap$IPAddrPattern r0;
        java.lang.IllegalArgumentException $r3, $r13, $r19, $r20;
        org.eclipse.jetty.util.IPAddressMap$OctetPattern $r11;

        r0 := @this: org.eclipse.jetty.util.IPAddressMap$IPAddrPattern;

        r2 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (org.eclipse.jetty.util.IPAddressMap$OctetPattern)[4];

        r0.<org.eclipse.jetty.util.IPAddressMap$IPAddrPattern: org.eclipse.jetty.util.IPAddressMap$OctetPattern[] _octets> = $r1;

        if r2 == null goto label01;

        $r8 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i0 != 0 goto label02;

     label01:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid IP address pattern: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label02:
        $r9 = new java.util.StringTokenizer;

        specialinvoke $r9.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r2, ".");

        i3 = 0;

     label03:
        if i3 >= 4 goto label09;

        $z0 = virtualinvoke $r9.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label04;

        $r18 = virtualinvoke $r9.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r25 = virtualinvoke $r18.<java.lang.String: java.lang.String trim()>();

        goto label05;

     label04:
        $r25 = "0-255";

     label05:
        r10 = $r25;

        $i1 = virtualinvoke $r25.<java.lang.String: int length()>();

        if $i1 != 0 goto label06;

        $z1 = virtualinvoke $r9.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label06;

        $r13 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid IP address pattern: ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r13;

     label06:
        $r12 = r0.<org.eclipse.jetty.util.IPAddressMap$IPAddrPattern: org.eclipse.jetty.util.IPAddressMap$OctetPattern[] _octets>;

        $i2 = i3;

        $r11 = new org.eclipse.jetty.util.IPAddressMap$OctetPattern;

        if $i1 != 0 goto label07;

        $r26 = "0-255";

        goto label08;

     label07:
        $r26 = r10;

     label08:
        specialinvoke $r11.<org.eclipse.jetty.util.IPAddressMap$OctetPattern: void <init>(java.lang.String)>($r26);

        $r12[$i2] = $r11;

        i3 = i3 + 1;

        goto label03;

     label09:
        goto label11;

     label10:
        $r19 := @caughtexception;

        $r20 = new java.lang.IllegalArgumentException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid IP address pattern: ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r24, $r19);

        throw $r20;

     label11:
        return;

        catch java.lang.IllegalArgumentException from label02 to label09 with label10;
    }

    public boolean match(java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.util.StringTokenizer $r7;
        int $i0, i1;
        java.lang.String r0, $r5, $r6, $r11, $r16, $r22;
        boolean $z0, $z1, $z2, z3;
        org.eclipse.jetty.util.IPAddressMap$OctetPattern[] $r9;
        org.eclipse.jetty.util.IPAddressMap$IPAddrPattern r8;
        java.lang.IllegalArgumentException $r1, $r12, $r17, $r18;
        org.eclipse.jetty.util.IPAddressMap$OctetPattern $r10;
        java.lang.StringBuilder $r2, $r3, $r4, $r13, $r14, $r15, $r19, $r20, $r21;

        r8 := @this: org.eclipse.jetty.util.IPAddressMap$IPAddrPattern;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid IP address: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label2:
        $r7 = new java.util.StringTokenizer;

        specialinvoke $r7.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r0, ".");

        z3 = 1;

        i1 = 0;

     label3:
        if i1 >= 4 goto label6;

        $z0 = virtualinvoke $r7.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 != 0 goto label4;

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid IP address: ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r12;

     label4:
        $r9 = r8.<org.eclipse.jetty.util.IPAddressMap$IPAddrPattern: org.eclipse.jetty.util.IPAddressMap$OctetPattern[] _octets>;

        $r10 = $r9[i1];

        $r11 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $z1 = virtualinvoke $r10.<org.eclipse.jetty.util.IPAddressMap$OctetPattern: boolean match(java.lang.String)>($r11);

        $z2 = z3 & $z1;

        z3 = $z2;

        if $z2 != 0 goto label5;

        goto label6;

     label5:
        i1 = i1 + 1;

        goto label3;

     label6:
        return z3;

     label7:
        $r17 := @caughtexception;

        $r18 = new java.lang.IllegalArgumentException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid IP address: ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r22, $r17);

        throw $r18;

        catch java.lang.IllegalArgumentException from label2 to label6 with label7;
    }
}
