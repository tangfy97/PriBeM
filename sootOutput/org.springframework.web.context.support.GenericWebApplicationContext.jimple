public class org.springframework.web.context.support.GenericWebApplicationContext extends org.springframework.context.support.GenericApplicationContext implements org.springframework.web.context.WebApplicationContext, org.springframework.ui.context.ThemeSource
{
    private javax.servlet.ServletContext servletContext;
    private org.springframework.ui.context.ThemeSource themeSource;

    public void <init>()
    {
        org.springframework.web.context.support.GenericWebApplicationContext r0;

        r0 := @this: org.springframework.web.context.support.GenericWebApplicationContext;

        specialinvoke r0.<org.springframework.context.support.GenericApplicationContext: void <init>()>();

        return;
    }

    public void <init>(javax.servlet.ServletContext)
    {
        org.springframework.web.context.support.GenericWebApplicationContext r0;
        javax.servlet.ServletContext r1;

        r0 := @this: org.springframework.web.context.support.GenericWebApplicationContext;

        r1 := @parameter0: javax.servlet.ServletContext;

        specialinvoke r0.<org.springframework.context.support.GenericApplicationContext: void <init>()>();

        r0.<org.springframework.web.context.support.GenericWebApplicationContext: javax.servlet.ServletContext servletContext> = r1;

        return;
    }

    public void <init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)
    {
        org.springframework.web.context.support.GenericWebApplicationContext r0;
        org.springframework.beans.factory.support.DefaultListableBeanFactory r1;

        r0 := @this: org.springframework.web.context.support.GenericWebApplicationContext;

        r1 := @parameter0: org.springframework.beans.factory.support.DefaultListableBeanFactory;

        specialinvoke r0.<org.springframework.context.support.GenericApplicationContext: void <init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)>(r1);

        return;
    }

    public void <init>(org.springframework.beans.factory.support.DefaultListableBeanFactory, javax.servlet.ServletContext)
    {
        org.springframework.web.context.support.GenericWebApplicationContext r0;
        javax.servlet.ServletContext r2;
        org.springframework.beans.factory.support.DefaultListableBeanFactory r1;

        r0 := @this: org.springframework.web.context.support.GenericWebApplicationContext;

        r1 := @parameter0: org.springframework.beans.factory.support.DefaultListableBeanFactory;

        r2 := @parameter1: javax.servlet.ServletContext;

        specialinvoke r0.<org.springframework.context.support.GenericApplicationContext: void <init>(org.springframework.beans.factory.support.DefaultListableBeanFactory)>(r1);

        r0.<org.springframework.web.context.support.GenericWebApplicationContext: javax.servlet.ServletContext servletContext> = r2;

        return;
    }

    public void setServletContext(javax.servlet.ServletContext)
    {
        org.springframework.web.context.support.GenericWebApplicationContext r0;
        javax.servlet.ServletContext r1;

        r0 := @this: org.springframework.web.context.support.GenericWebApplicationContext;

        r1 := @parameter0: javax.servlet.ServletContext;

        r0.<org.springframework.web.context.support.GenericWebApplicationContext: javax.servlet.ServletContext servletContext> = r1;

        return;
    }

    public javax.servlet.ServletContext getServletContext()
    {
        org.springframework.web.context.support.GenericWebApplicationContext r0;
        javax.servlet.ServletContext $r1;

        r0 := @this: org.springframework.web.context.support.GenericWebApplicationContext;

        $r1 = r0.<org.springframework.web.context.support.GenericWebApplicationContext: javax.servlet.ServletContext servletContext>;

        return $r1;
    }

    protected void postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)
    {
        org.springframework.web.context.support.ServletContextAwareProcessor $r1;
        org.springframework.web.context.support.GenericWebApplicationContext r2;
        javax.servlet.ServletContext $r3, $r4, $r5;
        org.springframework.beans.factory.config.ConfigurableListableBeanFactory r0;

        r2 := @this: org.springframework.web.context.support.GenericWebApplicationContext;

        r0 := @parameter0: org.springframework.beans.factory.config.ConfigurableListableBeanFactory;

        $r1 = new org.springframework.web.context.support.ServletContextAwareProcessor;

        $r3 = r2.<org.springframework.web.context.support.GenericWebApplicationContext: javax.servlet.ServletContext servletContext>;

        specialinvoke $r1.<org.springframework.web.context.support.ServletContextAwareProcessor: void <init>(javax.servlet.ServletContext)>($r3);

        interfaceinvoke r0.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: void addBeanPostProcessor(org.springframework.beans.factory.config.BeanPostProcessor)>($r1);

        interfaceinvoke r0.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: void ignoreDependencyInterface(java.lang.Class)>(class "Lorg/springframework/web/context/ServletContextAware;");

        $r4 = r2.<org.springframework.web.context.support.GenericWebApplicationContext: javax.servlet.ServletContext servletContext>;

        staticinvoke <org.springframework.web.context.support.WebApplicationContextUtils: void registerWebApplicationScopes(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,javax.servlet.ServletContext)>(r0, $r4);

        $r5 = r2.<org.springframework.web.context.support.GenericWebApplicationContext: javax.servlet.ServletContext servletContext>;

        staticinvoke <org.springframework.web.context.support.WebApplicationContextUtils: void registerEnvironmentBeans(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,javax.servlet.ServletContext)>(r0, $r5);

        return;
    }

    protected org.springframework.core.io.Resource getResourceByPath(java.lang.String)
    {
        org.springframework.web.context.support.GenericWebApplicationContext r1;
        org.springframework.web.context.support.ServletContextResource $r0;
        javax.servlet.ServletContext $r3;
        java.lang.String r2;

        r1 := @this: org.springframework.web.context.support.GenericWebApplicationContext;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.springframework.web.context.support.ServletContextResource;

        $r3 = r1.<org.springframework.web.context.support.GenericWebApplicationContext: javax.servlet.ServletContext servletContext>;

        specialinvoke $r0.<org.springframework.web.context.support.ServletContextResource: void <init>(javax.servlet.ServletContext,java.lang.String)>($r3, r2);

        return $r0;
    }

    protected org.springframework.core.io.support.ResourcePatternResolver getResourcePatternResolver()
    {
        org.springframework.web.context.support.GenericWebApplicationContext r1;
        org.springframework.web.context.support.ServletContextResourcePatternResolver $r0;

        r1 := @this: org.springframework.web.context.support.GenericWebApplicationContext;

        $r0 = new org.springframework.web.context.support.ServletContextResourcePatternResolver;

        specialinvoke $r0.<org.springframework.web.context.support.ServletContextResourcePatternResolver: void <init>(org.springframework.core.io.ResourceLoader)>(r1);

        return $r0;
    }

    protected void onRefresh()
    {
        org.springframework.web.context.support.GenericWebApplicationContext r0;
        org.springframework.ui.context.ThemeSource $r1;

        r0 := @this: org.springframework.web.context.support.GenericWebApplicationContext;

        $r1 = staticinvoke <org.springframework.ui.context.support.UiApplicationContextUtils: org.springframework.ui.context.ThemeSource initThemeSource(org.springframework.context.ApplicationContext)>(r0);

        r0.<org.springframework.web.context.support.GenericWebApplicationContext: org.springframework.ui.context.ThemeSource themeSource> = $r1;

        return;
    }

    public org.springframework.ui.context.Theme getTheme(java.lang.String)
    {
        org.springframework.ui.context.ThemeSource $r2;
        org.springframework.web.context.support.GenericWebApplicationContext r0;
        org.springframework.ui.context.Theme $r3;
        java.lang.String r1;

        r0 := @this: org.springframework.web.context.support.GenericWebApplicationContext;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.web.context.support.GenericWebApplicationContext: org.springframework.ui.context.ThemeSource themeSource>;

        $r3 = interfaceinvoke $r2.<org.springframework.ui.context.ThemeSource: org.springframework.ui.context.Theme getTheme(java.lang.String)>(r1);

        return $r3;
    }
}
