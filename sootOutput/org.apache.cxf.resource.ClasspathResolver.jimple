public class org.apache.cxf.resource.ClasspathResolver extends java.lang.Object implements org.apache.cxf.resource.ResourceResolver
{

    public void <init>()
    {
        org.apache.cxf.resource.ClasspathResolver r0;

        r0 := @this: org.apache.cxf.resource.ClasspathResolver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object resolve(java.lang.String, java.lang.Class)
    {
        org.apache.cxf.resource.ClasspathResolver r4;
        java.net.URL $r1;
        java.lang.Class r2;
        java.lang.Object $r3;
        java.lang.String r0;
        boolean $z0;

        r4 := @this: org.apache.cxf.resource.ClasspathResolver;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = staticinvoke <java.lang.ClassLoader: java.net.URL getSystemResource(java.lang.String)>(r0);

        $z0 = virtualinvoke r2.<java.lang.Class: boolean isInstance(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke r2.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r1);

        return $r3;

     label2:
        return null;
    }

    public java.io.InputStream getAsStream(java.lang.String)
    {
        java.lang.String r0;
        org.apache.cxf.resource.ClasspathResolver r2;
        java.io.InputStream $r1;

        r2 := @this: org.apache.cxf.resource.ClasspathResolver;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>(r0);

        return $r1;
    }
}
