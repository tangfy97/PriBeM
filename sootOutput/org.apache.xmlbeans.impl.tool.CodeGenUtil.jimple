public class org.apache.xmlbeans.impl.tool.CodeGenUtil extends java.lang.Object
{
    public static java.lang.String DEFAULT_MEM_START;
    public static java.lang.String DEFAULT_MEM_MAX;
    public static java.lang.String DEFAULT_COMPILER;
    public static java.lang.String DEFAULT_JAR;
    static final boolean $assertionsDisabled;
    static java.lang.Class class$org$apache$xmlbeans$impl$tool$CodeGenUtil;

    public void <init>()
    {
        org.apache.xmlbeans.impl.tool.CodeGenUtil r0;

        r0 := @this: org.apache.xmlbeans.impl.tool.CodeGenUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.net.URI resolve(java.net.URI, java.net.URI)
    {
        java.net.URISyntaxException $r13;
        java.net.URI r0, r1, $r2, $r10, r14;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.net.URI;

        r1 := @parameter1: java.net.URI;

        $r2 = virtualinvoke r0.<java.net.URI: java.net.URI resolve(java.net.URI)>(r1);

        r14 = $r2;

        $r3 = "file";

        $r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label4;

        $z1 = virtualinvoke r1.<java.net.URI: boolean equals(java.lang.Object)>($r2);

        if $z1 != 0 goto label4;

        $r5 = virtualinvoke r0.<java.net.URI: java.lang.String getPath()>();

        $z2 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("//");

        if $z2 == 0 goto label4;

        $r6 = virtualinvoke $r2.<java.net.URI: java.lang.String getPath()>();

        $z3 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("//");

        if $z3 != 0 goto label4;

        $r7 = "///";

        $r8 = virtualinvoke $r2.<java.net.URI: java.lang.String getPath()>();

        $r9 = virtualinvoke $r7.<java.lang.String: java.lang.String concat(java.lang.String)>($r8);

     label1:
        $r10 = new java.net.URI;

        $r11 = virtualinvoke $r2.<java.net.URI: java.lang.String getQuery()>();

        $r12 = virtualinvoke $r2.<java.net.URI: java.lang.String getFragment()>();

        specialinvoke $r10.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("file", null, $r9, $r11, $r12);

        r14 = $r10;

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

     label4:
        return r14;

        catch java.net.URISyntaxException from label1 to label2 with label3;
    }

    static void addAllJavaFiles(java.util.List, java.util.List)
    {
        java.util.Iterator $r1;
        java.io.File r3;
        java.util.List r0, $r6, r7;
        java.lang.Object $r2;
        java.lang.String $r8, $r9;
        java.io.File[] $r5;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.tool.CodeGenUtil$1 $r4;

        r0 := @parameter0: java.util.List;

        r7 := @parameter1: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.io.File) $r2;

        $z1 = virtualinvoke r3.<java.io.File: boolean isDirectory()>();

        if $z1 != 0 goto label2;

        $r8 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>();

        $r9 = staticinvoke <org.apache.xmlbeans.impl.tool.CodeGenUtil: java.lang.String quoteAndEscapeFilename(java.lang.String)>($r8);

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r9);

        goto label3;

     label2:
        $r4 = new org.apache.xmlbeans.impl.tool.CodeGenUtil$1;

        specialinvoke $r4.<org.apache.xmlbeans.impl.tool.CodeGenUtil$1: void <init>()>();

        $r5 = virtualinvoke r3.<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>($r4);

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5);

        staticinvoke <org.apache.xmlbeans.impl.tool.CodeGenUtil: void addAllJavaFiles(java.util.List,java.util.List)>($r6, r7);

     label3:
        goto label1;

     label4:
        return;
    }

    private static java.lang.String quoteAndEscapeFilename(java.lang.String)
    {
        java.lang.StringBuffer $r1, $r2, $r4, $r5;
        int $i0;
        java.lang.String r0, $r3, $r6;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(" ");

        if $i0 >= 0 goto label1;

        return r0;

     label1:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\", "\\\\\\\\");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    private static java.lang.String quoteNoEscapeFilename(java.lang.String)
    {
        char $c1;
        java.lang.StringBuffer $r2, $r3, $r4, $r6;
        int $i0, $i2;
        java.lang.String r0, $r5;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(" ");

        if $i0 < 0 goto label1;

        $c1 = <java.io.File: char separatorChar>;

        $i2 = (int) $c1;

        if $i2 != 47 goto label2;

     label1:
        return r0;

     label2:
        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public static boolean externalCompile(java.util.List, java.io.File, java.io.File[], boolean)
    {
        java.io.File r1;
        java.util.List r0;
        java.lang.String $r3, $r4, $r5;
        java.io.File[] r2;
        boolean z0, $z1;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.io.File;

        r2 := @parameter2: java.io.File[];

        z0 := @parameter3: boolean;

        $r5 = <org.apache.xmlbeans.impl.tool.CodeGenUtil: java.lang.String DEFAULT_COMPILER>;

        $r4 = <org.apache.xmlbeans.impl.tool.CodeGenUtil: java.lang.String DEFAULT_MEM_START>;

        $r3 = <org.apache.xmlbeans.impl.tool.CodeGenUtil: java.lang.String DEFAULT_MEM_MAX>;

        $z1 = staticinvoke <org.apache.xmlbeans.impl.tool.CodeGenUtil: boolean externalCompile(java.util.List,java.io.File,java.io.File[],boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>(r0, r1, r2, z0, $r5, null, $r4, $r3, 0, 0);

        return $z1;
    }

    public static boolean externalCompile(java.util.List, java.io.File, java.io.File[], boolean, java.lang.String, java.lang.String, java.lang.String, boolean, boolean)
    {
        java.io.File r1;
        java.util.List r0;
        java.lang.String r3, r4, r5;
        java.io.File[] r2;
        boolean z0, z1, z2, $z3;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.io.File;

        r2 := @parameter2: java.io.File[];

        z0 := @parameter3: boolean;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: java.lang.String;

        r5 := @parameter6: java.lang.String;

        z1 := @parameter7: boolean;

        z2 := @parameter8: boolean;

        $z3 = staticinvoke <org.apache.xmlbeans.impl.tool.CodeGenUtil: boolean externalCompile(java.util.List,java.io.File,java.io.File[],boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>(r0, r1, r2, z0, r3, null, r4, r5, z1, z2);

        return $z3;
    }

    public static boolean externalCompile(java.util.List, java.io.File, java.io.File[], boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean, boolean)
    {
        org.apache.xmlbeans.impl.tool.CodeGenUtil$ThreadedReader $r21, $r23;
        java.lang.Runtime $r17;
        java.lang.Exception $r67;
        java.lang.Throwable $r61, $r65;
        java.lang.Object[] $r15;
        java.lang.AssertionError $r56;
        java.util.ArrayList $r0, $r10, r73;
        java.lang.StringBuffer $r19, $r20, $r33, $r35, $r37, $r39, $r40, $r41, $r43, $r44, $r45, $r48, $r57, $r58, $r59, $r78, $r79, $r81;
        java.lang.String r1, $r3, $r4, $r5, r12, r13, $r26, $r29, $r36, $r38, $r42, $r46, $r49, $r50, $r51, $r52, $r54, $r60, $r63, r72, $r74, $r75, r77, $r80, $r82;
        java.io.File $r2, $r7, $r53, $r55, r70, r76;
        boolean $z0, z1, z2, $z3, z4, $z5;
        java.lang.Process $r18;
        java.util.List r6;
        java.lang.String[] $r14, $r16, $r69;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11;
        java.io.PrintStream $r25, $r27, $r28, $r30, $r31, $r32, $r34, $r62, $r64, $r66, $r68;
        java.util.Iterator $r9;
        java.io.FileWriter $r8;
        java.lang.Object $r11, $r47;
        java.io.File[] r71;
        java.io.InputStream $r22, $r24;

        r6 := @parameter0: java.util.List;

        r70 := @parameter1: java.io.File;

        r71 := @parameter2: java.io.File[];

        z1 := @parameter3: boolean;

        r1 := @parameter4: java.lang.String;

        r72 := @parameter5: java.lang.String;

        r12 := @parameter6: java.lang.String;

        r13 := @parameter7: java.lang.String;

        z4 := @parameter8: boolean;

        z2 := @parameter9: boolean;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        r73 = $r0;

        if r1 != null goto label01;

        $r74 = <org.apache.xmlbeans.impl.tool.CodeGenUtil: java.lang.String DEFAULT_COMPILER>;

        goto label02;

     label01:
        $r74 = r1;

     label02:
        $r2 = staticinvoke <org.apache.xmlbeans.impl.tool.CodeGenUtil: java.io.File findJavaTool(java.lang.String)>($r74);

        $z0 = <org.apache.xmlbeans.impl.tool.CodeGenUtil: boolean $assertionsDisabled>;

        if $z0 != 0 goto label03;

        $z3 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z3 != 0 goto label03;

        $r56 = new java.lang.AssertionError;

        $r57 = new java.lang.StringBuffer;

        specialinvoke $r57.<java.lang.StringBuffer: void <init>()>();

        $r58 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("compiler not found ");

        $r59 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);

        $r60 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r56.<java.lang.AssertionError: void <init>(java.lang.Object)>($r60);

        throw $r56;

     label03:
        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r3);

        if r70 != null goto label04;

        $r55 = new java.io.File;

        specialinvoke $r55.<java.io.File: void <init>(java.lang.String)>(".");

        r70 = $r55;

        goto label05;

     label04:
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>("-d");

        $r4 = virtualinvoke r70.<java.io.File: java.lang.String getAbsolutePath()>();

        $r5 = staticinvoke <org.apache.xmlbeans.impl.tool.CodeGenUtil: java.lang.String quoteAndEscapeFilename(java.lang.String)>($r4);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r5);

     label05:
        if r71 != null goto label06;

        r71 = staticinvoke <org.apache.xmlbeans.impl.tool.CodeGenUtil: java.io.File[] systemClasspath()>();

     label06:
        $i0 = lengthof r71;

        if $i0 <= 0 goto label09;

        $r48 = new java.lang.StringBuffer;

        specialinvoke $r48.<java.lang.StringBuffer: void <init>()>();

        $r49 = virtualinvoke r70.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r49);

        i10 = 0;

     label07:
        $i9 = lengthof r71;

        if i10 >= $i9 goto label08;

        $r52 = <java.io.File: java.lang.String pathSeparator>;

        virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r52);

        $r53 = r71[i10];

        $r54 = virtualinvoke $r53.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r54);

        i10 = i10 + 1;

        goto label07;

     label08:
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>("-classpath");

        $r50 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.String toString()>();

        $r51 = staticinvoke <org.apache.xmlbeans.impl.tool.CodeGenUtil: java.lang.String quoteAndEscapeFilename(java.lang.String)>($r50);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r51);

     label09:
        if r72 != null goto label10;

        r72 = "1.4";

     label10:
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>("-source");

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r72);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>("-target");

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r72);

        if z1 == 0 goto label11;

        $r75 = "-g";

        goto label12;

     label11:
        $r75 = "-g:none";

     label12:
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r75);

        if z2 == 0 goto label13;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>("-verbose");

     label13:
        staticinvoke <org.apache.xmlbeans.impl.tool.CodeGenUtil: void addAllJavaFiles(java.util.List,java.util.List)>(r6, $r0);

        r76 = null;

     label14:
        $r7 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>("javac", "");

        r76 = $r7;

        $r8 = new java.io.FileWriter;

        specialinvoke $r8.<java.io.FileWriter: void <init>(java.io.File)>($r7);

        $r9 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

        interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

     label15:
        $z5 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label16;

        $r47 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r77 = (java.lang.String) $r47;

        virtualinvoke $r8.<java.io.FileWriter: void write(java.lang.String)>(r77);

        virtualinvoke $r8.<java.io.FileWriter: void write(int)>(10);

        goto label15;

     label16:
        virtualinvoke $r8.<java.io.FileWriter: void close()>();

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        $r11 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(0);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r11);

        if r12 == null goto label17;

        $i8 = virtualinvoke r12.<java.lang.String: int length()>();

        if $i8 == 0 goto label17;

        $r43 = new java.lang.StringBuffer;

        specialinvoke $r43.<java.lang.StringBuffer: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-J-Xms");

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r12);

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r46);

     label17:
        if r13 == null goto label18;

        $i7 = virtualinvoke r13.<java.lang.String: int length()>();

        if $i7 == 0 goto label18;

        $r39 = new java.lang.StringBuffer;

        specialinvoke $r39.<java.lang.StringBuffer: void <init>()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-J-Xmx");

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r13);

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r42);

     label18:
        $r78 = new java.lang.StringBuffer;

        specialinvoke $r78.<java.lang.StringBuffer: void <init>()>();

        $r79 = virtualinvoke $r78.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("@");

        $r80 = virtualinvoke $r7.<java.io.File: java.lang.String getAbsolutePath()>();

        $r81 = virtualinvoke $r79.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r80);

        $r82 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r82);

        r73 = $r10;

     label19:
        goto label21;

     label20:
        $r67 := @caughtexception;

        $r68 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r68.<java.io.PrintStream: void println(java.lang.String)>("Could not create command-line file for javac");

     label21:
        $i1 = interfaceinvoke r73.<java.util.List: int size()>();

        $r14 = newarray (java.lang.String)[$i1];

        $r15 = interfaceinvoke r73.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r14);

        $r16 = (java.lang.String[]) $r15;

        $r69 = (java.lang.String[]) $r16;

        if z2 == 0 goto label24;

        $r31 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r31.<java.io.PrintStream: void print(java.lang.String)>("compile command:");

        i11 = 0;

     label22:
        $i6 = lengthof $r69;

        if i11 >= $i6 goto label23;

        $r34 = <java.lang.System: java.io.PrintStream out>;

        $r33 = new java.lang.StringBuffer;

        specialinvoke $r33.<java.lang.StringBuffer: void <init>()>();

        $r35 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r36 = $r69[i11];

        $r37 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r34.<java.io.PrintStream: void print(java.lang.String)>($r38);

        i11 = i11 + 1;

        goto label22;

     label23:
        $r32 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r32.<java.io.PrintStream: void println()>();

     label24:
        $r17 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $r18 = virtualinvoke $r17.<java.lang.Runtime: java.lang.Process exec(java.lang.String[])>($r69);

        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = new org.apache.xmlbeans.impl.tool.CodeGenUtil$ThreadedReader;

        $r22 = virtualinvoke $r18.<java.lang.Process: java.io.InputStream getInputStream()>();

        specialinvoke $r21.<org.apache.xmlbeans.impl.tool.CodeGenUtil$ThreadedReader: void <init>(java.io.InputStream,java.lang.StringBuffer)>($r22, $r20);

        $r23 = new org.apache.xmlbeans.impl.tool.CodeGenUtil$ThreadedReader;

        $r24 = virtualinvoke $r18.<java.lang.Process: java.io.InputStream getErrorStream()>();

        specialinvoke $r23.<org.apache.xmlbeans.impl.tool.CodeGenUtil$ThreadedReader: void <init>(java.io.InputStream,java.lang.StringBuffer)>($r24, $r19);

        virtualinvoke $r18.<java.lang.Process: int waitFor()>();

        if z2 != 0 goto label25;

        $i5 = virtualinvoke $r18.<java.lang.Process: int exitValue()>();

        if $i5 == 0 goto label29;

     label25:
        $i2 = virtualinvoke $r20.<java.lang.StringBuffer: int length()>();

        if $i2 <= 0 goto label26;

        $r28 = <java.lang.System: java.io.PrintStream out>;

        $r29 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>($r29);

        $r30 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r30.<java.io.PrintStream: void flush()>();

     label26:
        $i3 = virtualinvoke $r19.<java.lang.StringBuffer: int length()>();

        if $i3 <= 0 goto label27;

        $r25 = <java.lang.System: java.io.PrintStream err>;

        $r26 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>($r26);

        $r27 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r27.<java.io.PrintStream: void flush()>();

     label27:
        $i4 = virtualinvoke $r18.<java.lang.Process: int exitValue()>();

        if $i4 == 0 goto label29;

     label28:
        return 0;

     label29:
        goto label31;

     label30:
        $r61 := @caughtexception;

        $r62 = <java.lang.System: java.io.PrintStream err>;

        $r63 = virtualinvoke $r61.<java.lang.Throwable: java.lang.String toString()>();

        virtualinvoke $r62.<java.io.PrintStream: void println(java.lang.String)>($r63);

        $r64 = <java.lang.System: java.io.PrintStream err>;

        $r65 = virtualinvoke $r61.<java.lang.Throwable: java.lang.Throwable getCause()>();

        virtualinvoke $r64.<java.io.PrintStream: void println(java.lang.Object)>($r65);

        $r66 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r61.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>($r66);

        return 0;

     label31:
        if r76 == null goto label32;

        virtualinvoke r76.<java.io.File: boolean delete()>();

     label32:
        return 1;

        catch java.lang.Exception from label14 to label19 with label20;
        catch java.lang.Throwable from label21 to label28 with label30;
    }

    public static java.io.File[] systemClasspath()
    {
        java.lang.Object[] $r5;
        java.lang.String[] $r3;
        java.io.File $r8;
        java.util.ArrayList $r0;
        int $i0, $i1, i2;
        java.lang.String $r1, $r2, $r9;
        java.io.File[] $r4, $r6, $r7;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = staticinvoke <org.apache.xmlbeans.SystemProperties: java.lang.String getProperty(java.lang.String)>("java.class.path");

        $r2 = <java.io.File: java.lang.String pathSeparator>;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>($r2);

        i2 = 0;

     label1:
        $i0 = lengthof $r3;

        if i2 >= $i0 goto label2;

        $r8 = new java.io.File;

        $r9 = $r3[i2];

        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>($r9);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r8);

        i2 = i2 + 1;

        goto label1;

     label2:
        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        $r4 = newarray (java.io.File)[$i1];

        $r5 = interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (java.io.File[]) $r5;

        $r7 = (java.io.File[]) $r6;

        return $r7;
    }

    public static boolean externalJar(java.io.File, java.io.File)
    {
        java.lang.String $r2;
        java.io.File r0, r1;
        boolean $z0;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.io.File;

        $r2 = <org.apache.xmlbeans.impl.tool.CodeGenUtil: java.lang.String DEFAULT_JAR>;

        $z0 = staticinvoke <org.apache.xmlbeans.impl.tool.CodeGenUtil: boolean externalJar(java.io.File,java.io.File,java.lang.String,boolean,boolean)>(r0, r1, $r2, 0, 0);

        return $z0;
    }

    public static boolean externalJar(java.io.File, java.io.File, java.lang.String, boolean, boolean)
    {
        org.apache.xmlbeans.impl.tool.CodeGenUtil$ThreadedReader $r17, $r19;
        boolean $z0, z1, $z2, z3;
        java.lang.Process $r14;
        java.lang.Runtime $r13;
        java.lang.Throwable $r41;
        java.lang.Object[] $r11;
        java.lang.String[] $r10, $r12, $r35;
        java.lang.AssertionError $r36;
        java.util.ArrayList $r0;
        java.lang.StringBuffer $r15, $r16, $r29, $r31, $r33, $r37, $r38, $r39;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.String r1, $r3, $r5, $r6, $r8, $r9, $r22, $r25, $r32, $r34, $r40, $r43;
        java.io.PrintStream $r21, $r23, $r24, $r26, $r27, $r28, $r30, $r42;
        java.io.File $r2, r4, r7;
        java.io.InputStream $r18, $r20;

        r7 := @parameter0: java.io.File;

        r4 := @parameter1: java.io.File;

        r1 := @parameter2: java.lang.String;

        z3 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        if r1 != null goto label01;

        $r43 = <org.apache.xmlbeans.impl.tool.CodeGenUtil: java.lang.String DEFAULT_JAR>;

        goto label02;

     label01:
        $r43 = r1;

     label02:
        $r2 = staticinvoke <org.apache.xmlbeans.impl.tool.CodeGenUtil: java.io.File findJavaTool(java.lang.String)>($r43);

        $z0 = <org.apache.xmlbeans.impl.tool.CodeGenUtil: boolean $assertionsDisabled>;

        if $z0 != 0 goto label03;

        $z2 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z2 != 0 goto label03;

        $r36 = new java.lang.AssertionError;

        $r37 = new java.lang.StringBuffer;

        specialinvoke $r37.<java.lang.StringBuffer: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("jar not found ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r36.<java.lang.AssertionError: void <init>(java.lang.Object)>($r40);

        throw $r36;

     label03:
        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r3);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>("cf");

        $r5 = virtualinvoke r4.<java.io.File: java.lang.String getAbsolutePath()>();

        $r6 = staticinvoke <org.apache.xmlbeans.impl.tool.CodeGenUtil: java.lang.String quoteNoEscapeFilename(java.lang.String)>($r5);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>("-C");

        $r8 = virtualinvoke r7.<java.io.File: java.lang.String getAbsolutePath()>();

        $r9 = staticinvoke <org.apache.xmlbeans.impl.tool.CodeGenUtil: java.lang.String quoteNoEscapeFilename(java.lang.String)>($r8);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r9);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(".");

     label04:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $r10 = newarray (java.lang.String)[$i0];

        $r11 = interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10);

        $r12 = (java.lang.String[]) $r11;

        $r35 = (java.lang.String[]) $r12;

        if z1 == 0 goto label07;

        $r27 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r27.<java.io.PrintStream: void print(java.lang.String)>("jar command:");

        i6 = 0;

     label05:
        $i5 = lengthof $r35;

        if i6 >= $i5 goto label06;

        $r30 = <java.lang.System: java.io.PrintStream out>;

        $r29 = new java.lang.StringBuffer;

        specialinvoke $r29.<java.lang.StringBuffer: void <init>()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r32 = $r35[i6];

        $r33 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r30.<java.io.PrintStream: void print(java.lang.String)>($r34);

        i6 = i6 + 1;

        goto label05;

     label06:
        $r28 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r28.<java.io.PrintStream: void println()>();

     label07:
        $r13 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $r14 = virtualinvoke $r13.<java.lang.Runtime: java.lang.Process exec(java.lang.String[])>($r35);

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = new org.apache.xmlbeans.impl.tool.CodeGenUtil$ThreadedReader;

        $r18 = virtualinvoke $r14.<java.lang.Process: java.io.InputStream getInputStream()>();

        specialinvoke $r17.<org.apache.xmlbeans.impl.tool.CodeGenUtil$ThreadedReader: void <init>(java.io.InputStream,java.lang.StringBuffer)>($r18, $r16);

        $r19 = new org.apache.xmlbeans.impl.tool.CodeGenUtil$ThreadedReader;

        $r20 = virtualinvoke $r14.<java.lang.Process: java.io.InputStream getErrorStream()>();

        specialinvoke $r19.<org.apache.xmlbeans.impl.tool.CodeGenUtil$ThreadedReader: void <init>(java.io.InputStream,java.lang.StringBuffer)>($r20, $r15);

        virtualinvoke $r14.<java.lang.Process: int waitFor()>();

        if z1 != 0 goto label08;

        $i4 = virtualinvoke $r14.<java.lang.Process: int exitValue()>();

        if $i4 == 0 goto label12;

     label08:
        $i1 = virtualinvoke $r16.<java.lang.StringBuffer: int length()>();

        if $i1 <= 0 goto label09;

        $r24 = <java.lang.System: java.io.PrintStream out>;

        $r25 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r25);

        $r26 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r26.<java.io.PrintStream: void flush()>();

     label09:
        $i2 = virtualinvoke $r15.<java.lang.StringBuffer: int length()>();

        if $i2 <= 0 goto label10;

        $r21 = <java.lang.System: java.io.PrintStream err>;

        $r22 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r22);

        $r23 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r23.<java.io.PrintStream: void flush()>();

     label10:
        $i3 = virtualinvoke $r14.<java.lang.Process: int exitValue()>();

        if $i3 == 0 goto label12;

     label11:
        return 0;

     label12:
        goto label14;

     label13:
        $r41 := @caughtexception;

        $r42 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r41.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>($r42);

        return 0;

     label14:
        return 1;

        catch java.lang.Throwable from label04 to label11 with label13;
    }

    private static java.io.File findJavaTool(java.lang.String)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuffer $r3, $r4, $r5, $r10, $r11, $r12, $r13, $r14, $r15, $r18, $r20, $r21, $r24, $r25, $r26, $r27, $r30, $r32, $r33;
        java.lang.String r1, $r6, $r7, r8, $r16, $r19, $r22, $r28, $r31, $r34;
        java.io.File $r0, $r2, $r9, $r17, $r23, $r29;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r1);

        $z0 = virtualinvoke $r0.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label1;

        return $r0;

     label1:
        $r2 = new java.io.File;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".exe");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r6);

        $z1 = virtualinvoke $r2.<java.io.File: boolean isFile()>();

        if $z1 == 0 goto label2;

        return $r2;

     label2:
        $r7 = staticinvoke <org.apache.xmlbeans.SystemProperties: java.lang.String getProperty(java.lang.String)>("java.home");

        r8 = <java.io.File: java.lang.String separator>;

        $r9 = new java.io.File;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r8);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("..");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r8);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("bin");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r9.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r16, r1);

        $z2 = virtualinvoke $r9.<java.io.File: boolean isFile()>();

        if $z2 == 0 goto label3;

        return $r9;

     label3:
        $r17 = new java.io.File;

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r19 = virtualinvoke $r9.<java.io.File: java.lang.String getPath()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".exe");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r17.<java.io.File: void <init>(java.lang.String)>($r22);

        $z3 = virtualinvoke $r17.<java.io.File: boolean isFile()>();

        if $z3 == 0 goto label4;

        return $r17;

     label4:
        $r23 = new java.io.File;

        $r24 = new java.lang.StringBuffer;

        specialinvoke $r24.<java.lang.StringBuffer: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r8);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("bin");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r23.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r28, r1);

        $z4 = virtualinvoke $r23.<java.io.File: boolean isFile()>();

        if $z4 == 0 goto label5;

        return $r23;

     label5:
        $r29 = new java.io.File;

        $r30 = new java.lang.StringBuffer;

        specialinvoke $r30.<java.lang.StringBuffer: void <init>()>();

        $r31 = virtualinvoke $r23.<java.io.File: java.lang.String getPath()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".exe");

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r29.<java.io.File: void <init>(java.lang.String)>($r34);

        $z5 = virtualinvoke $r29.<java.io.File: boolean isFile()>();

        if $z5 == 0 goto label6;

        return $r29;

     label6:
        return $r0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        boolean $z0, $z1;

        $r0 = <org.apache.xmlbeans.impl.tool.CodeGenUtil: java.lang.Class class$org$apache$xmlbeans$impl$tool$CodeGenUtil>;

        if $r0 != null goto label1;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.tool.CodeGenUtil: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.tool.CodeGenUtil");

        <org.apache.xmlbeans.impl.tool.CodeGenUtil: java.lang.Class class$org$apache$xmlbeans$impl$tool$CodeGenUtil> = $r1;

        goto label2;

     label1:
        $r1 = <org.apache.xmlbeans.impl.tool.CodeGenUtil: java.lang.Class class$org$apache$xmlbeans$impl$tool$CodeGenUtil>;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.impl.tool.CodeGenUtil: boolean $assertionsDisabled> = $z1;

        <org.apache.xmlbeans.impl.tool.CodeGenUtil: java.lang.String DEFAULT_MEM_START> = "8m";

        <org.apache.xmlbeans.impl.tool.CodeGenUtil: java.lang.String DEFAULT_MEM_MAX> = "256m";

        <org.apache.xmlbeans.impl.tool.CodeGenUtil: java.lang.String DEFAULT_COMPILER> = "javac";

        <org.apache.xmlbeans.impl.tool.CodeGenUtil: java.lang.String DEFAULT_JAR> = "jar";

        return;
    }
}
