public final class org.apache.poi.openxml4j.opc.internal.marshallers.ZipPartMarshaller extends java.lang.Object implements org.apache.poi.openxml4j.opc.internal.PartMarshaller
{
    private static org.apache.poi.util.POILogger logger;

    public void <init>()
    {
        org.apache.poi.openxml4j.opc.internal.marshallers.ZipPartMarshaller r0;

        r0 := @this: org.apache.poi.openxml4j.opc.internal.marshallers.ZipPartMarshaller;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean marshall(org.apache.poi.openxml4j.opc.PackagePart, java.io.OutputStream) throws org.apache.poi.openxml4j.exceptions.OpenXML4JException
    {
        byte[] r9;
        org.apache.poi.openxml4j.opc.PackagePart r3;
        java.net.URI $r5;
        java.util.zip.ZipEntry $r32;
        boolean $z0, $z1;
        org.apache.poi.openxml4j.opc.PackagePartName $r4, $r10, $r11, $r25;
        org.apache.poi.openxml4j.exceptions.OpenXML4JException $r31;
        org.apache.poi.util.POILogger $r14, $r23;
        org.apache.poi.openxml4j.opc.internal.marshallers.ZipPartMarshaller r29;
        java.lang.StringBuilder $r15, $r18, $r24, $r26, $r27, $r30, $r33;
        java.util.zip.ZipOutputStream r1;
        org.apache.poi.openxml4j.opc.PackageRelationshipCollection $r12;
        int $i0, $i1, $i3;
        java.lang.String $r6, $r7, $r17, $r19, $r28;
        java.io.OutputStream r0;
        java.io.IOException $r21;
        java.lang.Class $r16;
        java.io.InputStream $r8;

        r29 := @this: org.apache.poi.openxml4j.opc.internal.marshallers.ZipPartMarshaller;

        r3 := @parameter0: org.apache.poi.openxml4j.opc.PackagePart;

        r0 := @parameter1: java.io.OutputStream;

        $z0 = r0 instanceof java.util.zip.ZipOutputStream;

        if $z0 != 0 goto label1;

        $r14 = <org.apache.poi.openxml4j.opc.internal.marshallers.ZipPartMarshaller: org.apache.poi.util.POILogger logger>;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected class ");

        $r16 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(7, $r19);

        $r31 = new org.apache.poi.openxml4j.exceptions.OpenXML4JException;

        specialinvoke $r31.<org.apache.poi.openxml4j.exceptions.OpenXML4JException: void <init>(java.lang.String)>("ZipOutputStream expected !");

        throw $r31;

     label1:
        r1 = (java.util.zip.ZipOutputStream) r0;

        $r32 = new java.util.zip.ZipEntry;

        $r4 = virtualinvoke r3.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackagePartName getPartName()>();

        $r5 = virtualinvoke $r4.<org.apache.poi.openxml4j.opc.PackagePartName: java.net.URI getURI()>();

        $r6 = virtualinvoke $r5.<java.net.URI: java.lang.String getPath()>();

        $r7 = staticinvoke <org.apache.poi.openxml4j.opc.internal.ZipHelper: java.lang.String getZipItemNameFromOPCName(java.lang.String)>($r6);

        specialinvoke $r32.<java.util.zip.ZipEntry: void <init>(java.lang.String)>($r7);

     label2:
        virtualinvoke r1.<java.util.zip.ZipOutputStream: void putNextEntry(java.util.zip.ZipEntry)>($r32);

        $r8 = virtualinvoke r3.<org.apache.poi.openxml4j.opc.PackagePart: java.io.InputStream getInputStream()>();

        r9 = newarray (byte)[8192];

     label3:
        $i0 = virtualinvoke $r8.<java.io.InputStream: int available()>();

        if $i0 <= 0 goto label5;

        $i1 = virtualinvoke $r8.<java.io.InputStream: int read(byte[])>(r9);

        $i3 = (int) -1;

        if $i1 != $i3 goto label4;

        goto label5;

     label4:
        virtualinvoke r1.<java.util.zip.ZipOutputStream: void write(byte[],int,int)>(r9, 0, $i1);

        goto label3;

     label5:
        virtualinvoke r1.<java.util.zip.ZipOutputStream: void closeEntry()>();

     label6:
        goto label8;

     label7:
        $r21 := @caughtexception;

        $r23 = <org.apache.poi.openxml4j.opc.internal.marshallers.ZipPartMarshaller: org.apache.poi.util.POILogger logger>;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot write: ");

        $r25 = virtualinvoke r3.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackagePartName getPartName()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": in ZIP");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Throwable)>(7, $r28, $r21);

        return 0;

     label8:
        $z1 = virtualinvoke r3.<org.apache.poi.openxml4j.opc.PackagePart: boolean hasRelationships()>();

        if $z1 == 0 goto label9;

        $r10 = virtualinvoke r3.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackagePartName getPartName()>();

        $r11 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: org.apache.poi.openxml4j.opc.PackagePartName getRelationshipPartName(org.apache.poi.openxml4j.opc.PackagePartName)>($r10);

        $r12 = virtualinvoke r3.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection getRelationships()>();

        staticinvoke <org.apache.poi.openxml4j.opc.internal.marshallers.ZipPartMarshaller: boolean marshallRelationshipPart(org.apache.poi.openxml4j.opc.PackageRelationshipCollection,org.apache.poi.openxml4j.opc.PackagePartName,java.util.zip.ZipOutputStream)>($r12, $r11, r1);

     label9:
        return 1;

        catch java.io.IOException from label2 to label6 with label7;
    }

    public static boolean marshallRelationshipPart(org.apache.poi.openxml4j.opc.PackageRelationshipCollection, org.apache.poi.openxml4j.opc.PackagePartName, java.util.zip.ZipOutputStream)
    {
        org.w3c.dom.Document $r0;
        java.net.URI $r3, $r4, $r8, $r10, $r17, $r20, $r21;
        java.util.zip.ZipEntry $r7;
        boolean $z0, $z1;
        org.apache.poi.openxml4j.opc.PackagePartName r2;
        org.apache.poi.util.POILogger $r24;
        java.lang.StringBuilder $r23, $r25, $r26;
        java.util.zip.ZipOutputStream r12;
        org.apache.poi.openxml4j.opc.PackageRelationship r28;
        org.apache.poi.openxml4j.opc.PackageRelationshipCollection r5;
        java.lang.String $r9, $r11, $r15, $r16, $r27, r29;
        java.util.Iterator $r6;
        java.io.IOException $r22;
        org.w3c.dom.Element $r1, $r14;
        org.apache.poi.openxml4j.opc.TargetMode $r18, $r19;
        java.lang.Object $r13;

        r5 := @parameter0: org.apache.poi.openxml4j.opc.PackageRelationshipCollection;

        r2 := @parameter1: org.apache.poi.openxml4j.opc.PackagePartName;

        r12 := @parameter2: java.util.zip.ZipOutputStream;

        $r0 = staticinvoke <org.apache.poi.util.DocumentHelper: org.w3c.dom.Document createDocument()>();

        $r1 = interfaceinvoke $r0.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>("http://schemas.openxmlformats.org/package/2006/relationships", "Relationships");

        interfaceinvoke $r0.<org.w3c.dom.Document: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r1);

        $r3 = virtualinvoke r2.<org.apache.poi.openxml4j.opc.PackagePartName: java.net.URI getURI()>();

        $r4 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.net.URI getSourcePartUriFromRelationshipPartUri(java.net.URI)>($r3);

        $r6 = virtualinvoke r5.<org.apache.poi.openxml4j.opc.PackageRelationshipCollection: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r13 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r28 = (org.apache.poi.openxml4j.opc.PackageRelationship) $r13;

        $r14 = interfaceinvoke $r0.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("Relationship");

        interfaceinvoke $r1.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r14);

        $r15 = virtualinvoke r28.<org.apache.poi.openxml4j.opc.PackageRelationship: java.lang.String getId()>();

        interfaceinvoke $r14.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("Id", $r15);

        $r16 = virtualinvoke r28.<org.apache.poi.openxml4j.opc.PackageRelationship: java.lang.String getRelationshipType()>();

        interfaceinvoke $r14.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("Type", $r16);

        $r17 = virtualinvoke r28.<org.apache.poi.openxml4j.opc.PackageRelationship: java.net.URI getTargetURI()>();

        $r18 = virtualinvoke r28.<org.apache.poi.openxml4j.opc.PackageRelationship: org.apache.poi.openxml4j.opc.TargetMode getTargetMode()>();

        $r19 = <org.apache.poi.openxml4j.opc.TargetMode: org.apache.poi.openxml4j.opc.TargetMode EXTERNAL>;

        if $r18 != $r19 goto label02;

        r29 = virtualinvoke $r17.<java.net.URI: java.lang.String toString()>();

        interfaceinvoke $r14.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("TargetMode", "External");

        goto label03;

     label02:
        $r20 = virtualinvoke r28.<org.apache.poi.openxml4j.opc.PackageRelationship: java.net.URI getTargetURI()>();

        $r21 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: java.net.URI relativizeURI(java.net.URI,java.net.URI,boolean)>($r4, $r20, 1);

        r29 = virtualinvoke $r21.<java.net.URI: java.lang.String toString()>();

     label03:
        interfaceinvoke $r14.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("Target", r29);

        goto label01;

     label04:
        interfaceinvoke $r0.<org.w3c.dom.Document: void normalize()>();

        $r7 = new java.util.zip.ZipEntry;

        $r8 = virtualinvoke r2.<org.apache.poi.openxml4j.opc.PackagePartName: java.net.URI getURI()>();

        $r9 = virtualinvoke $r8.<java.net.URI: java.lang.String toASCIIString()>();

        $r10 = staticinvoke <org.apache.poi.openxml4j.opc.internal.ZipHelper: java.net.URI getZipURIFromOPCName(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.net.URI: java.lang.String getPath()>();

        specialinvoke $r7.<java.util.zip.ZipEntry: void <init>(java.lang.String)>($r11);

     label05:
        virtualinvoke r12.<java.util.zip.ZipOutputStream: void putNextEntry(java.util.zip.ZipEntry)>($r7);

        $z1 = staticinvoke <org.apache.poi.openxml4j.opc.StreamHelper: boolean saveXmlInStream(org.w3c.dom.Document,java.io.OutputStream)>($r0, r12);

        if $z1 != 0 goto label07;

     label06:
        return 0;

     label07:
        virtualinvoke r12.<java.util.zip.ZipOutputStream: void closeEntry()>();

     label08:
        goto label10;

     label09:
        $r22 := @caughtexception;

        $r24 = <org.apache.poi.openxml4j.opc.internal.marshallers.ZipPartMarshaller: org.apache.poi.util.POILogger logger>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create zip entry ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Throwable)>(7, $r27, $r22);

        return 0;

     label10:
        return 1;

        catch java.io.IOException from label05 to label06 with label09;
        catch java.io.IOException from label07 to label08 with label09;
    }

    static void <clinit>()
    {
        org.apache.poi.util.POILogger $r0;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/openxml4j/opc/internal/marshallers/ZipPartMarshaller;");

        <org.apache.poi.openxml4j.opc.internal.marshallers.ZipPartMarshaller: org.apache.poi.util.POILogger logger> = $r0;

        return;
    }
}
