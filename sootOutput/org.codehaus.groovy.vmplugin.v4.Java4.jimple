public class org.codehaus.groovy.vmplugin.v4.Java4 extends java.lang.Object implements org.codehaus.groovy.vmplugin.VMPlugin
{
    private static java.lang.Class[] EMPTY_CLASS_ARRAY;

    public void <init>()
    {
        org.codehaus.groovy.vmplugin.v4.Java4 r0;

        r0 := @this: org.codehaus.groovy.vmplugin.v4.Java4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void setGenericsTypes(org.codehaus.groovy.ast.ClassNode)
    {
        org.codehaus.groovy.vmplugin.v4.Java4 r0;
        org.codehaus.groovy.ast.ClassNode r1;

        r0 := @this: org.codehaus.groovy.vmplugin.v4.Java4;

        r1 := @parameter0: org.codehaus.groovy.ast.ClassNode;

        return;
    }

    public java.lang.Class[] getPluginDefaultGroovyMethods()
    {
        org.codehaus.groovy.vmplugin.v4.Java4 r1;
        java.lang.Class[] $r0;

        r1 := @this: org.codehaus.groovy.vmplugin.v4.Java4;

        $r0 = <org.codehaus.groovy.vmplugin.v4.Java4: java.lang.Class[] EMPTY_CLASS_ARRAY>;

        return $r0;
    }

    public void configureClassNode(org.codehaus.groovy.ast.CompileUnit, org.codehaus.groovy.ast.ClassNode)
    {
        java.lang.reflect.Method[] $r3;
        java.lang.reflect.Method r24;
        java.lang.reflect.Constructor r25;
        java.lang.reflect.Constructor[] $r4;
        org.codehaus.groovy.ast.MethodNode $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;
        org.codehaus.groovy.ast.ClassNode[] $r12, $r20;
        java.lang.String $r14, $r22;
        org.codehaus.groovy.vmplugin.v4.Java4 r6;
        org.codehaus.groovy.ast.ClassNode r0, $r8, $r16;
        java.lang.Class[] $r9, $r11, $r17, $r19;
        java.lang.reflect.Field $r21, $r23;
        java.lang.reflect.Field[] $r2;
        org.codehaus.groovy.ast.Parameter[] $r10, $r18;
        java.lang.Class $r1, $r5, $r15;
        org.codehaus.groovy.ast.CompileUnit r7;

        r6 := @this: org.codehaus.groovy.vmplugin.v4.Java4;

        r7 := @parameter0: org.codehaus.groovy.ast.CompileUnit;

        r0 := @parameter1: org.codehaus.groovy.ast.ClassNode;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.ast.ClassNode: java.lang.Class getTypeClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        i6 = 0;

     label1:
        $i0 = lengthof $r2;

        if i6 >= $i0 goto label2;

        $r21 = $r2[i6];

        $r22 = virtualinvoke $r21.<java.lang.reflect.Field: java.lang.String getName()>();

        $r23 = $r2[i6];

        $i5 = virtualinvoke $r23.<java.lang.reflect.Field: int getModifiers()>();

        virtualinvoke r0.<org.codehaus.groovy.ast.ClassNode: org.codehaus.groovy.ast.FieldNode addField(java.lang.String,int,org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.expr.Expression)>($r22, $i5, r0, null);

        i6 = i6 + 1;

        goto label1;

     label2:
        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

        i7 = 0;

     label3:
        $i1 = lengthof $r3;

        if i7 >= $i1 goto label4;

        r24 = $r3[i7];

        $r13 = new org.codehaus.groovy.ast.MethodNode;

        $r14 = virtualinvoke r24.<java.lang.reflect.Method: java.lang.String getName()>();

        $i4 = virtualinvoke r24.<java.lang.reflect.Method: int getModifiers()>();

        $r15 = virtualinvoke r24.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r16 = staticinvoke <org.codehaus.groovy.ast.ClassHelper: org.codehaus.groovy.ast.ClassNode make(java.lang.Class)>($r15);

        $r17 = virtualinvoke r24.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r18 = specialinvoke r6.<org.codehaus.groovy.vmplugin.v4.Java4: org.codehaus.groovy.ast.Parameter[] createParameters(java.lang.Class[])>($r17);

        $r19 = virtualinvoke r24.<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()>();

        $r20 = staticinvoke <org.codehaus.groovy.ast.ClassHelper: org.codehaus.groovy.ast.ClassNode[] make(java.lang.Class[])>($r19);

        specialinvoke $r13.<org.codehaus.groovy.ast.MethodNode: void <init>(java.lang.String,int,org.codehaus.groovy.ast.ClassNode,org.codehaus.groovy.ast.Parameter[],org.codehaus.groovy.ast.ClassNode[],org.codehaus.groovy.ast.stmt.Statement)>($r14, $i4, $r16, $r18, $r20, null);

        virtualinvoke r0.<org.codehaus.groovy.ast.ClassNode: void addMethod(org.codehaus.groovy.ast.MethodNode)>($r13);

        i7 = i7 + 1;

        goto label3;

     label4:
        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()>();

        i8 = 0;

     label5:
        $i2 = lengthof $r4;

        if i8 >= $i2 goto label6;

        r25 = $r4[i8];

        $i3 = virtualinvoke r25.<java.lang.reflect.Constructor: int getModifiers()>();

        $r9 = virtualinvoke r25.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        $r10 = specialinvoke r6.<org.codehaus.groovy.vmplugin.v4.Java4: org.codehaus.groovy.ast.Parameter[] createParameters(java.lang.Class[])>($r9);

        $r11 = virtualinvoke r25.<java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()>();

        $r12 = staticinvoke <org.codehaus.groovy.ast.ClassHelper: org.codehaus.groovy.ast.ClassNode[] make(java.lang.Class[])>($r11);

        virtualinvoke r0.<org.codehaus.groovy.ast.ClassNode: org.codehaus.groovy.ast.ConstructorNode addConstructor(int,org.codehaus.groovy.ast.Parameter[],org.codehaus.groovy.ast.ClassNode[],org.codehaus.groovy.ast.stmt.Statement)>($i3, $r10, $r12, null);

        i8 = i8 + 1;

        goto label5;

     label6:
        $r5 = virtualinvoke $r1.<java.lang.Class: java.lang.Class getSuperclass()>();

        if $r5 == null goto label7;

        $r8 = specialinvoke r6.<org.codehaus.groovy.vmplugin.v4.Java4: org.codehaus.groovy.ast.ClassNode getPrimaryClassNode(org.codehaus.groovy.ast.CompileUnit,java.lang.Class)>(r7, $r5);

        virtualinvoke r0.<org.codehaus.groovy.ast.ClassNode: void setUnresolvedSuperClass(org.codehaus.groovy.ast.ClassNode)>($r8);

     label7:
        specialinvoke r6.<org.codehaus.groovy.vmplugin.v4.Java4: void buildInterfaceTypes(org.codehaus.groovy.ast.CompileUnit,org.codehaus.groovy.ast.ClassNode,java.lang.Class)>(r7, r0, $r1);

        return;
    }

    private org.codehaus.groovy.ast.ClassNode getPrimaryClassNode(org.codehaus.groovy.ast.CompileUnit, java.lang.Class)
    {
        org.codehaus.groovy.vmplugin.v4.Java4 r3;
        org.codehaus.groovy.ast.ClassNode r4;
        org.codehaus.groovy.ast.CompileUnit r0;
        java.lang.Class r1;
        java.lang.String $r2;

        r3 := @this: org.codehaus.groovy.vmplugin.v4.Java4;

        r0 := @parameter0: org.codehaus.groovy.ast.CompileUnit;

        r1 := @parameter1: java.lang.Class;

        r4 = null;

        if r0 == null goto label1;

        $r2 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        r4 = virtualinvoke r0.<org.codehaus.groovy.ast.CompileUnit: org.codehaus.groovy.ast.ClassNode getClass(java.lang.String)>($r2);

     label1:
        if r4 != null goto label2;

        r4 = staticinvoke <org.codehaus.groovy.ast.ClassHelper: org.codehaus.groovy.ast.ClassNode make(java.lang.Class)>(r1);

     label2:
        return r4;
    }

    private void buildInterfaceTypes(org.codehaus.groovy.ast.CompileUnit, org.codehaus.groovy.ast.ClassNode, java.lang.Class)
    {
        org.codehaus.groovy.vmplugin.v4.Java4 r4;
        org.codehaus.groovy.ast.ClassNode r3, $r7;
        java.lang.Class[] $r1;
        int $i0, $i1, i2;
        org.codehaus.groovy.ast.ClassNode[] r2;
        java.lang.Class r0, $r6;
        org.codehaus.groovy.ast.CompileUnit r5;

        r4 := @this: org.codehaus.groovy.vmplugin.v4.Java4;

        r5 := @parameter0: org.codehaus.groovy.ast.CompileUnit;

        r3 := @parameter1: org.codehaus.groovy.ast.ClassNode;

        r0 := @parameter2: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        $i0 = lengthof $r1;

        r2 = newarray (org.codehaus.groovy.ast.ClassNode)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof $r1;

        if i2 >= $i1 goto label2;

        $r6 = $r1[i2];

        $r7 = specialinvoke r4.<org.codehaus.groovy.vmplugin.v4.Java4: org.codehaus.groovy.ast.ClassNode getPrimaryClassNode(org.codehaus.groovy.ast.CompileUnit,java.lang.Class)>(r5, $r6);

        r2[i2] = $r7;

        i2 = i2 + 1;

        goto label1;

     label2:
        virtualinvoke r3.<org.codehaus.groovy.ast.ClassNode: void setInterfaces(org.codehaus.groovy.ast.ClassNode[])>(r2);

        return;
    }

    private org.codehaus.groovy.ast.Parameter[] createParameters(java.lang.Class[])
    {
        org.codehaus.groovy.vmplugin.v4.Java4 r1;
        org.codehaus.groovy.ast.Parameter[] r4;
        org.codehaus.groovy.ast.Parameter $r3;
        int i0, i1;
        java.lang.Class[] r0;
        java.lang.Class $r2;

        r1 := @this: org.codehaus.groovy.vmplugin.v4.Java4;

        r0 := @parameter0: java.lang.Class[];

        r4 = <org.codehaus.groovy.ast.Parameter: org.codehaus.groovy.ast.Parameter[] EMPTY_ARRAY>;

        i0 = lengthof r0;

        if i0 <= 0 goto label2;

        r4 = newarray (org.codehaus.groovy.ast.Parameter)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = r0[i1];

        $r3 = specialinvoke r1.<org.codehaus.groovy.vmplugin.v4.Java4: org.codehaus.groovy.ast.Parameter createParameter(java.lang.Class,int)>($r2, i1);

        r4[i1] = $r3;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r4;
    }

    private org.codehaus.groovy.ast.Parameter createParameter(java.lang.Class, int)
    {
        org.codehaus.groovy.vmplugin.v4.Java4 r7;
        org.codehaus.groovy.ast.Parameter $r0;
        org.codehaus.groovy.ast.ClassNode $r2;
        java.lang.StringBuffer $r3, $r4, $r5;
        int i0;
        java.lang.Class r1;
        java.lang.String $r6;

        r7 := @this: org.codehaus.groovy.vmplugin.v4.Java4;

        r1 := @parameter0: java.lang.Class;

        i0 := @parameter1: int;

        $r0 = new org.codehaus.groovy.ast.Parameter;

        $r2 = staticinvoke <org.codehaus.groovy.ast.ClassHelper: org.codehaus.groovy.ast.ClassNode make(java.lang.Class)>(r1);

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("param");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<org.codehaus.groovy.ast.Parameter: void <init>(org.codehaus.groovy.ast.ClassNode,java.lang.String)>($r2, $r6);

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Class[] $r0;

        $r0 = newarray (java.lang.Class)[0];

        <org.codehaus.groovy.vmplugin.v4.Java4: java.lang.Class[] EMPTY_CLASS_ARRAY> = $r0;

        return;
    }
}
