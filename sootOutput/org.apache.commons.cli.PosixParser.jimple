public class org.apache.commons.cli.PosixParser extends org.apache.commons.cli.Parser
{
    private java.util.List tokens;
    private boolean eatTheRest;
    private org.apache.commons.cli.Option currentOption;
    private org.apache.commons.cli.Options options;

    public void <init>()
    {
        org.apache.commons.cli.PosixParser r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.commons.cli.PosixParser;

        specialinvoke r0.<org.apache.commons.cli.Parser: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.commons.cli.PosixParser: java.util.List tokens> = $r1;

        return;
    }

    private void init()
    {
        java.util.List $r1;
        org.apache.commons.cli.PosixParser r0;

        r0 := @this: org.apache.commons.cli.PosixParser;

        r0.<org.apache.commons.cli.PosixParser: boolean eatTheRest> = 0;

        $r1 = r0.<org.apache.commons.cli.PosixParser: java.util.List tokens>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }

    protected java.lang.String[] flatten(org.apache.commons.cli.Options, java.lang.String[], boolean)
    {
        boolean $z0, $z1, $z2, $z3, z4, $z5, $z6;
        java.util.List $r3, $r5, $r6, $r14, $r16, $r17;
        java.lang.Object[] $r8;
        org.apache.commons.cli.Options r1;
        java.lang.String[] r2, $r7, $r9, $r10;
        int $i0, $i1, $i2, $i3, $i5, $i7;
        java.lang.String r12, $r13, $r18, $r19;
        org.apache.commons.cli.PosixParser r0;
        org.apache.commons.cli.Option $r15;
        java.util.Iterator $r4;
        java.lang.Object $r11;

        r0 := @this: org.apache.commons.cli.PosixParser;

        r1 := @parameter0: org.apache.commons.cli.Options;

        r2 := @parameter1: java.lang.String[];

        z4 := @parameter2: boolean;

        specialinvoke r0.<org.apache.commons.cli.PosixParser: void init()>();

        r0.<org.apache.commons.cli.PosixParser: org.apache.commons.cli.Options options> = r1;

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2);

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r11 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r12 = (java.lang.String) $r11;

        $z1 = virtualinvoke r12.<java.lang.String: boolean startsWith(java.lang.String)>("--");

        if $z1 == 0 goto label06;

        $i2 = virtualinvoke r12.<java.lang.String: int indexOf(int)>(61);

        $i5 = (int) -1;

        if $i2 != $i5 goto label02;

        $r19 = r12;

        goto label03;

     label02:
        $r19 = virtualinvoke r12.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

     label03:
        $z6 = virtualinvoke r1.<org.apache.commons.cli.Options: boolean hasOption(java.lang.String)>($r19);

        if $z6 != 0 goto label04;

        specialinvoke r0.<org.apache.commons.cli.PosixParser: void processNonOptionToken(java.lang.String,boolean)>(r12, z4);

        goto label05;

     label04:
        $r15 = virtualinvoke r1.<org.apache.commons.cli.Options: org.apache.commons.cli.Option getOption(java.lang.String)>($r19);

        r0.<org.apache.commons.cli.PosixParser: org.apache.commons.cli.Option currentOption> = $r15;

        $r16 = r0.<org.apache.commons.cli.PosixParser: java.util.List tokens>;

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r19);

        $i7 = (int) -1;

        if $i2 == $i7 goto label05;

        $r17 = r0.<org.apache.commons.cli.PosixParser: java.util.List tokens>;

        $i3 = $i2 + 1;

        $r18 = virtualinvoke r12.<java.lang.String: java.lang.String substring(int)>($i3);

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r18);

     label05:
        goto label11;

     label06:
        $r13 = "-";

        $z2 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r12);

        if $z2 == 0 goto label07;

        $r14 = r0.<org.apache.commons.cli.PosixParser: java.util.List tokens>;

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>(r12);

        goto label11;

     label07:
        $z3 = virtualinvoke r12.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z3 == 0 goto label10;

        $i1 = virtualinvoke r12.<java.lang.String: int length()>();

        if $i1 == 2 goto label08;

        $z5 = virtualinvoke r1.<org.apache.commons.cli.Options: boolean hasOption(java.lang.String)>(r12);

        if $z5 == 0 goto label09;

     label08:
        specialinvoke r0.<org.apache.commons.cli.PosixParser: void processOptionToken(java.lang.String,boolean)>(r12, z4);

        goto label11;

     label09:
        virtualinvoke r0.<org.apache.commons.cli.PosixParser: void burstToken(java.lang.String,boolean)>(r12, z4);

        goto label11;

     label10:
        specialinvoke r0.<org.apache.commons.cli.PosixParser: void processNonOptionToken(java.lang.String,boolean)>(r12, z4);

     label11:
        specialinvoke r0.<org.apache.commons.cli.PosixParser: void gobble(java.util.Iterator)>($r4);

        goto label01;

     label12:
        $r6 = r0.<org.apache.commons.cli.PosixParser: java.util.List tokens>;

        $r5 = r0.<org.apache.commons.cli.PosixParser: java.util.List tokens>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $r7 = newarray (java.lang.String)[$i0];

        $r8 = interfaceinvoke $r6.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r9 = (java.lang.String[]) $r8;

        $r10 = (java.lang.String[]) $r9;

        return $r10;
    }

    private void gobble(java.util.Iterator)
    {
        java.util.List $r2;
        java.util.Iterator r1;
        java.lang.Object $r3;
        org.apache.commons.cli.PosixParser r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.cli.PosixParser;

        r1 := @parameter0: java.util.Iterator;

        $z0 = r0.<org.apache.commons.cli.PosixParser: boolean eatTheRest>;

        if $z0 == 0 goto label2;

     label1:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r2 = r0.<org.apache.commons.cli.PosixParser: java.util.List tokens>;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        goto label1;

     label2:
        return;
    }

    private void processNonOptionToken(java.lang.String, boolean)
    {
        java.util.List $r3, $r5;
        java.lang.String r1;
        org.apache.commons.cli.PosixParser r0;
        org.apache.commons.cli.Option $r2, $r4;
        boolean z0, $z1;

        r0 := @this: org.apache.commons.cli.PosixParser;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label2;

        $r2 = r0.<org.apache.commons.cli.PosixParser: org.apache.commons.cli.Option currentOption>;

        if $r2 == null goto label1;

        $r4 = r0.<org.apache.commons.cli.PosixParser: org.apache.commons.cli.Option currentOption>;

        $z1 = virtualinvoke $r4.<org.apache.commons.cli.Option: boolean hasArg()>();

        if $z1 != 0 goto label2;

     label1:
        r0.<org.apache.commons.cli.PosixParser: boolean eatTheRest> = 1;

        $r3 = r0.<org.apache.commons.cli.PosixParser: java.util.List tokens>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>("--");

     label2:
        $r5 = r0.<org.apache.commons.cli.PosixParser: java.util.List tokens>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    private void processOptionToken(java.lang.String, boolean)
    {
        org.apache.commons.cli.Options $r3, $r5, $r6;
        java.util.List $r2;
        java.lang.String r1;
        org.apache.commons.cli.PosixParser r0;
        org.apache.commons.cli.Option $r4;
        boolean z0, $z1, $z2;

        r0 := @this: org.apache.commons.cli.PosixParser;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r5 = r0.<org.apache.commons.cli.PosixParser: org.apache.commons.cli.Options options>;

        $z1 = virtualinvoke $r5.<org.apache.commons.cli.Options: boolean hasOption(java.lang.String)>(r1);

        if $z1 != 0 goto label1;

        r0.<org.apache.commons.cli.PosixParser: boolean eatTheRest> = 1;

     label1:
        $r6 = r0.<org.apache.commons.cli.PosixParser: org.apache.commons.cli.Options options>;

        $z2 = virtualinvoke $r6.<org.apache.commons.cli.Options: boolean hasOption(java.lang.String)>(r1);

        if $z2 == 0 goto label2;

        $r3 = r0.<org.apache.commons.cli.PosixParser: org.apache.commons.cli.Options options>;

        $r4 = virtualinvoke $r3.<org.apache.commons.cli.Options: org.apache.commons.cli.Option getOption(java.lang.String)>(r1);

        r0.<org.apache.commons.cli.PosixParser: org.apache.commons.cli.Option currentOption> = $r4;

     label2:
        $r2 = r0.<org.apache.commons.cli.PosixParser: java.util.List tokens>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    protected void burstToken(java.lang.String, boolean)
    {
        org.apache.commons.cli.Options $r3, $r11;
        java.lang.StringBuffer $r6, $r8, $r9;
        int $i0, $i2, $i3, $i4, i5;
        java.lang.String r0, $r1, $r5, $r10, $r15;
        org.apache.commons.cli.PosixParser r2;
        org.apache.commons.cli.Option $r12, $r13;
        boolean $z0, z1, $z2;
        char $c1;
        java.util.List $r4, $r7, $r14;

        r2 := @this: org.apache.commons.cli.PosixParser;

        r0 := @parameter0: java.lang.String;

        z1 := @parameter1: boolean;

        i5 = 1;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i5 >= $i0 goto label5;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i5);

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c1);

        $r3 = r2.<org.apache.commons.cli.PosixParser: org.apache.commons.cli.Options options>;

        $z0 = virtualinvoke $r3.<org.apache.commons.cli.Options: boolean hasOption(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

        $r7 = r2.<org.apache.commons.cli.PosixParser: java.util.List tokens>;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r11 = r2.<org.apache.commons.cli.PosixParser: org.apache.commons.cli.Options options>;

        $r12 = virtualinvoke $r11.<org.apache.commons.cli.Options: org.apache.commons.cli.Option getOption(java.lang.String)>($r1);

        r2.<org.apache.commons.cli.PosixParser: org.apache.commons.cli.Option currentOption> = $r12;

        $r13 = r2.<org.apache.commons.cli.PosixParser: org.apache.commons.cli.Option currentOption>;

        $z2 = virtualinvoke $r13.<org.apache.commons.cli.Option: boolean hasArg()>();

        if $z2 == 0 goto label4;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        $i3 = i5 + 1;

        if $i2 == $i3 goto label4;

        $r14 = r2.<org.apache.commons.cli.PosixParser: java.util.List tokens>;

        $i4 = i5 + 1;

        $r15 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i4);

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r15);

        goto label5;

     label2:
        if z1 == 0 goto label3;

        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i5);

        specialinvoke r2.<org.apache.commons.cli.PosixParser: void processNonOptionToken(java.lang.String,boolean)>($r5, 1);

        goto label5;

     label3:
        $r4 = r2.<org.apache.commons.cli.PosixParser: java.util.List tokens>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r0);

        goto label5;

     label4:
        i5 = i5 + 1;

        goto label1;

     label5:
        return;
    }
}
