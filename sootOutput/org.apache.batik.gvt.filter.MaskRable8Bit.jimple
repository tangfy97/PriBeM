public class org.apache.batik.gvt.filter.MaskRable8Bit extends org.apache.batik.ext.awt.image.renderable.AbstractRable implements org.apache.batik.gvt.filter.Mask
{
    protected org.apache.batik.gvt.GraphicsNode mask;
    protected java.awt.geom.Rectangle2D filterRegion;

    public void <init>(org.apache.batik.ext.awt.image.renderable.Filter, org.apache.batik.gvt.GraphicsNode, java.awt.geom.Rectangle2D)
    {
        org.apache.batik.gvt.filter.MaskRable8Bit r0;
        org.apache.batik.gvt.GraphicsNode r2;
        java.awt.geom.Rectangle2D r3;
        org.apache.batik.ext.awt.image.renderable.Filter r1;

        r0 := @this: org.apache.batik.gvt.filter.MaskRable8Bit;

        r1 := @parameter0: org.apache.batik.ext.awt.image.renderable.Filter;

        r2 := @parameter1: org.apache.batik.gvt.GraphicsNode;

        r3 := @parameter2: java.awt.geom.Rectangle2D;

        specialinvoke r0.<org.apache.batik.ext.awt.image.renderable.AbstractRable: void <init>(org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map)>(r1, null);

        virtualinvoke r0.<org.apache.batik.gvt.filter.MaskRable8Bit: void setMaskNode(org.apache.batik.gvt.GraphicsNode)>(r2);

        virtualinvoke r0.<org.apache.batik.gvt.filter.MaskRable8Bit: void setFilterRegion(java.awt.geom.Rectangle2D)>(r3);

        return;
    }

    public void setSource(org.apache.batik.ext.awt.image.renderable.Filter)
    {
        org.apache.batik.gvt.filter.MaskRable8Bit r0;
        org.apache.batik.ext.awt.image.renderable.Filter r1;

        r0 := @this: org.apache.batik.gvt.filter.MaskRable8Bit;

        r1 := @parameter0: org.apache.batik.ext.awt.image.renderable.Filter;

        virtualinvoke r0.<org.apache.batik.ext.awt.image.renderable.AbstractRable: void init(org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map)>(r1, null);

        return;
    }

    public org.apache.batik.ext.awt.image.renderable.Filter getSource()
    {
        org.apache.batik.gvt.filter.MaskRable8Bit r0;
        java.util.Vector $r1;
        java.lang.Object $r2;
        org.apache.batik.ext.awt.image.renderable.Filter $r3;

        r0 := @this: org.apache.batik.gvt.filter.MaskRable8Bit;

        $r1 = virtualinvoke r0.<org.apache.batik.ext.awt.image.renderable.AbstractRable: java.util.Vector getSources()>();

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object get(int)>(0);

        $r3 = (org.apache.batik.ext.awt.image.renderable.Filter) $r2;

        return $r3;
    }

    public java.awt.geom.Rectangle2D getFilterRegion()
    {
        org.apache.batik.gvt.filter.MaskRable8Bit r0;
        java.awt.geom.Rectangle2D $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: org.apache.batik.gvt.filter.MaskRable8Bit;

        $r1 = r0.<org.apache.batik.gvt.filter.MaskRable8Bit: java.awt.geom.Rectangle2D filterRegion>;

        $r2 = virtualinvoke $r1.<java.awt.geom.RectangularShape: java.lang.Object clone()>();

        $r3 = (java.awt.geom.Rectangle2D) $r2;

        return $r3;
    }

    public void setFilterRegion(java.awt.geom.Rectangle2D)
    {
        org.apache.batik.gvt.filter.MaskRable8Bit r1;
        java.lang.IllegalArgumentException $r2;
        java.awt.geom.Rectangle2D r0;

        r1 := @this: org.apache.batik.gvt.filter.MaskRable8Bit;

        r0 := @parameter0: java.awt.geom.Rectangle2D;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        r1.<org.apache.batik.gvt.filter.MaskRable8Bit: java.awt.geom.Rectangle2D filterRegion> = r0;

        return;
    }

    public void setMaskNode(org.apache.batik.gvt.GraphicsNode)
    {
        org.apache.batik.gvt.filter.MaskRable8Bit r0;
        org.apache.batik.gvt.GraphicsNode r1;

        r0 := @this: org.apache.batik.gvt.filter.MaskRable8Bit;

        r1 := @parameter0: org.apache.batik.gvt.GraphicsNode;

        virtualinvoke r0.<org.apache.batik.ext.awt.image.renderable.AbstractRable: void touch()>();

        r0.<org.apache.batik.gvt.filter.MaskRable8Bit: org.apache.batik.gvt.GraphicsNode mask> = r1;

        return;
    }

    public org.apache.batik.gvt.GraphicsNode getMaskNode()
    {
        org.apache.batik.gvt.filter.MaskRable8Bit r0;
        org.apache.batik.gvt.GraphicsNode $r1;

        r0 := @this: org.apache.batik.gvt.filter.MaskRable8Bit;

        $r1 = r0.<org.apache.batik.gvt.filter.MaskRable8Bit: org.apache.batik.gvt.GraphicsNode mask>;

        return $r1;
    }

    public java.awt.geom.Rectangle2D getBounds2D()
    {
        org.apache.batik.gvt.filter.MaskRable8Bit r0;
        java.awt.geom.Rectangle2D $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: org.apache.batik.gvt.filter.MaskRable8Bit;

        $r1 = r0.<org.apache.batik.gvt.filter.MaskRable8Bit: java.awt.geom.Rectangle2D filterRegion>;

        $r2 = virtualinvoke $r1.<java.awt.geom.RectangularShape: java.lang.Object clone()>();

        $r3 = (java.awt.geom.Rectangle2D) $r2;

        return $r3;
    }

    public java.awt.image.RenderedImage createRendering(java.awt.image.renderable.RenderContext)
    {
        org.apache.batik.ext.awt.image.rendered.MultiplyAlphaRed $r17;
        java.awt.geom.Rectangle2D $r4, $r12;
        org.apache.batik.ext.awt.image.PadMode $r5, $r13;
        org.apache.batik.ext.awt.image.renderable.FilterAsAlphaRable $r6;
        org.apache.batik.gvt.filter.MaskRable8Bit r0;
        org.apache.batik.gvt.GraphicsNode $r1;
        java.awt.image.RenderedImage $r8, $r14;
        org.apache.batik.ext.awt.image.renderable.Filter $r2, $r11;
        java.awt.image.renderable.RenderContext r7;
        org.apache.batik.ext.awt.image.renderable.PadRable8Bit $r3, $r10;
        org.apache.batik.ext.awt.image.rendered.CachableRed $r9, $r15, $r16;

        r0 := @this: org.apache.batik.gvt.filter.MaskRable8Bit;

        r7 := @parameter0: java.awt.image.renderable.RenderContext;

        $r1 = virtualinvoke r0.<org.apache.batik.gvt.filter.MaskRable8Bit: org.apache.batik.gvt.GraphicsNode getMaskNode()>();

        $r2 = interfaceinvoke $r1.<org.apache.batik.gvt.GraphicsNode: org.apache.batik.ext.awt.image.renderable.Filter getGraphicsNodeRable(boolean)>(1);

        $r3 = new org.apache.batik.ext.awt.image.renderable.PadRable8Bit;

        $r4 = virtualinvoke r0.<org.apache.batik.gvt.filter.MaskRable8Bit: java.awt.geom.Rectangle2D getBounds2D()>();

        $r5 = <org.apache.batik.ext.awt.image.PadMode: org.apache.batik.ext.awt.image.PadMode ZERO_PAD>;

        specialinvoke $r3.<org.apache.batik.ext.awt.image.renderable.PadRable8Bit: void <init>(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,org.apache.batik.ext.awt.image.PadMode)>($r2, $r4, $r5);

        $r6 = new org.apache.batik.ext.awt.image.renderable.FilterAsAlphaRable;

        specialinvoke $r6.<org.apache.batik.ext.awt.image.renderable.FilterAsAlphaRable: void <init>(org.apache.batik.ext.awt.image.renderable.Filter)>($r3);

        $r8 = interfaceinvoke $r6.<java.awt.image.renderable.RenderableImage: java.awt.image.RenderedImage createRendering(java.awt.image.renderable.RenderContext)>(r7);

        if $r8 != null goto label1;

        return null;

     label1:
        $r9 = staticinvoke <org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed: org.apache.batik.ext.awt.image.rendered.CachableRed wrap(java.awt.image.RenderedImage)>($r8);

        $r10 = new org.apache.batik.ext.awt.image.renderable.PadRable8Bit;

        $r11 = virtualinvoke r0.<org.apache.batik.gvt.filter.MaskRable8Bit: org.apache.batik.ext.awt.image.renderable.Filter getSource()>();

        $r12 = virtualinvoke r0.<org.apache.batik.gvt.filter.MaskRable8Bit: java.awt.geom.Rectangle2D getBounds2D()>();

        $r13 = <org.apache.batik.ext.awt.image.PadMode: org.apache.batik.ext.awt.image.PadMode ZERO_PAD>;

        specialinvoke $r10.<org.apache.batik.ext.awt.image.renderable.PadRable8Bit: void <init>(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,org.apache.batik.ext.awt.image.PadMode)>($r11, $r12, $r13);

        $r14 = interfaceinvoke $r10.<java.awt.image.renderable.RenderableImage: java.awt.image.RenderedImage createRendering(java.awt.image.renderable.RenderContext)>(r7);

        if $r14 != null goto label2;

        return null;

     label2:
        $r15 = staticinvoke <org.apache.batik.ext.awt.image.GraphicsUtil: org.apache.batik.ext.awt.image.rendered.CachableRed wrap(java.awt.image.RenderedImage)>($r14);

        $r16 = staticinvoke <org.apache.batik.ext.awt.image.GraphicsUtil: org.apache.batik.ext.awt.image.rendered.CachableRed convertToLsRGB(org.apache.batik.ext.awt.image.rendered.CachableRed)>($r15);

        $r17 = new org.apache.batik.ext.awt.image.rendered.MultiplyAlphaRed;

        specialinvoke $r17.<org.apache.batik.ext.awt.image.rendered.MultiplyAlphaRed: void <init>(org.apache.batik.ext.awt.image.rendered.CachableRed,org.apache.batik.ext.awt.image.rendered.CachableRed)>($r16, $r9);

        return $r17;
    }
}
