public class org.apache.cxf.jaxrs.client.ClientConfiguration extends java.lang.Object implements org.apache.cxf.interceptor.InterceptorProvider, org.apache.cxf.endpoint.ConduitSelectorHolder
{
    private static final java.util.logging.Logger LOG;
    private java.util.List inInterceptors;
    private java.util.List outInterceptors;
    private java.util.List outFault;
    private java.util.List inFault;
    private org.apache.cxf.endpoint.ConduitSelector conduitSelector;
    private org.apache.cxf.Bus bus;
    private java.util.Map requestContext;
    private java.util.Map responseContext;
    private long synchronousTimeout;

    public void <init>()
    {
        org.apache.cxf.common.util.ModCountCopyOnWriteArrayList $r1, $r2, $r3, $r4;
        java.util.HashMap $r5, $r6;
        org.apache.cxf.jaxrs.client.ClientConfiguration r0;

        r0 := @this: org.apache.cxf.jaxrs.client.ClientConfiguration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.cxf.common.util.ModCountCopyOnWriteArrayList;

        specialinvoke $r1.<org.apache.cxf.common.util.ModCountCopyOnWriteArrayList: void <init>()>();

        r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: java.util.List inInterceptors> = $r1;

        $r2 = new org.apache.cxf.common.util.ModCountCopyOnWriteArrayList;

        specialinvoke $r2.<org.apache.cxf.common.util.ModCountCopyOnWriteArrayList: void <init>()>();

        r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: java.util.List outInterceptors> = $r2;

        $r3 = new org.apache.cxf.common.util.ModCountCopyOnWriteArrayList;

        specialinvoke $r3.<org.apache.cxf.common.util.ModCountCopyOnWriteArrayList: void <init>()>();

        r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: java.util.List outFault> = $r3;

        $r4 = new org.apache.cxf.common.util.ModCountCopyOnWriteArrayList;

        specialinvoke $r4.<org.apache.cxf.common.util.ModCountCopyOnWriteArrayList: void <init>()>();

        r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: java.util.List inFault> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: java.util.Map requestContext> = $r5;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: java.util.Map responseContext> = $r6;

        r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: long synchronousTimeout> = 60000L;

        return;
    }

    public long getSynchronousTimeout()
    {
        org.apache.cxf.transport.Conduit $r1;
        org.apache.cxf.transport.http.HTTPConduit $r2;
        long $l0, $l1;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy $r3;
        org.apache.cxf.jaxrs.client.ClientConfiguration r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.client.ClientConfiguration;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.transport.Conduit getConduit()>();

        $z0 = $r1 instanceof org.apache.cxf.transport.http.HTTPConduit;

        if $z0 == 0 goto label1;

        $r2 = (org.apache.cxf.transport.http.HTTPConduit) $r1;

        $r3 = virtualinvoke $r2.<org.apache.cxf.transport.http.HTTPConduit: org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient()>();

        $l1 = virtualinvoke $r3.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: long getReceiveTimeout()>();

        return $l1;

     label1:
        $l0 = r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: long synchronousTimeout>;

        return $l0;
    }

    public void setSynchronousTimeout(long)
    {
        long l0;
        org.apache.cxf.jaxrs.client.ClientConfiguration r0;

        r0 := @this: org.apache.cxf.jaxrs.client.ClientConfiguration;

        l0 := @parameter0: long;

        r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: long synchronousTimeout> = l0;

        return;
    }

    public boolean isResponseExpectedForOneway()
    {
        org.apache.cxf.transport.Conduit $r1;
        org.apache.cxf.jaxrs.client.ClientConfiguration r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.jaxrs.client.ClientConfiguration;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.transport.Conduit getConduit()>();

        $z0 = $r1 instanceof org.apache.cxf.transport.http.HTTPConduit;

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void setConduitSelector(org.apache.cxf.endpoint.ConduitSelector)
    {
        org.apache.cxf.endpoint.ConduitSelector r1;
        org.apache.cxf.jaxrs.client.ClientConfiguration r0;

        r0 := @this: org.apache.cxf.jaxrs.client.ClientConfiguration;

        r1 := @parameter0: org.apache.cxf.endpoint.ConduitSelector;

        r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.endpoint.ConduitSelector conduitSelector> = r1;

        return;
    }

    public org.apache.cxf.endpoint.ConduitSelector getConduitSelector()
    {
        org.apache.cxf.endpoint.ConduitSelector $r1;
        org.apache.cxf.jaxrs.client.ClientConfiguration r0;

        r0 := @this: org.apache.cxf.jaxrs.client.ClientConfiguration;

        $r1 = r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.endpoint.ConduitSelector conduitSelector>;

        return $r1;
    }

    void prepareConduitSelector(org.apache.cxf.message.Message)
    {
        org.apache.cxf.interceptor.Fault $r3;
        org.apache.cxf.message.Message r2;
        org.apache.cxf.endpoint.ConduitSelector $r1;
        java.util.logging.Logger $r4;
        org.apache.cxf.jaxrs.client.ClientConfiguration r0;

        r0 := @this: org.apache.cxf.jaxrs.client.ClientConfiguration;

        r2 := @parameter0: org.apache.cxf.message.Message;

     label1:
        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.endpoint.ConduitSelector getConduitSelector()>();

        interfaceinvoke $r1.<org.apache.cxf.endpoint.ConduitSelector: void prepare(org.apache.cxf.message.Message)>(r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = <org.apache.cxf.jaxrs.client.ClientConfiguration: java.util.logging.Logger LOG>;

        virtualinvoke $r4.<java.util.logging.Logger: void fine(java.lang.String)>("Failure to prepare a message from conduit selector");

     label4:
        return;

        catch org.apache.cxf.interceptor.Fault from label1 to label2 with label3;
    }

    public void setBus(org.apache.cxf.Bus)
    {
        org.apache.cxf.Bus r1;
        org.apache.cxf.jaxrs.client.ClientConfiguration r0;

        r0 := @this: org.apache.cxf.jaxrs.client.ClientConfiguration;

        r1 := @parameter0: org.apache.cxf.Bus;

        r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.Bus bus> = r1;

        return;
    }

    public org.apache.cxf.Bus getBus()
    {
        org.apache.cxf.Bus $r1;
        org.apache.cxf.jaxrs.client.ClientConfiguration r0;

        r0 := @this: org.apache.cxf.jaxrs.client.ClientConfiguration;

        $r1 = r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.Bus bus>;

        return $r1;
    }

    public java.util.List getInFaultInterceptors()
    {
        java.util.List $r1;
        org.apache.cxf.jaxrs.client.ClientConfiguration r0;

        r0 := @this: org.apache.cxf.jaxrs.client.ClientConfiguration;

        $r1 = r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: java.util.List inFault>;

        return $r1;
    }

    public java.util.List getInInterceptors()
    {
        java.util.List $r1;
        org.apache.cxf.jaxrs.client.ClientConfiguration r0;

        r0 := @this: org.apache.cxf.jaxrs.client.ClientConfiguration;

        $r1 = r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: java.util.List inInterceptors>;

        return $r1;
    }

    public java.util.List getOutFaultInterceptors()
    {
        java.util.List $r1;
        org.apache.cxf.jaxrs.client.ClientConfiguration r0;

        r0 := @this: org.apache.cxf.jaxrs.client.ClientConfiguration;

        $r1 = r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: java.util.List outFault>;

        return $r1;
    }

    public java.util.List getOutInterceptors()
    {
        java.util.List $r1;
        org.apache.cxf.jaxrs.client.ClientConfiguration r0;

        r0 := @this: org.apache.cxf.jaxrs.client.ClientConfiguration;

        $r1 = r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: java.util.List outInterceptors>;

        return $r1;
    }

    public void setInInterceptors(java.util.List)
    {
        java.util.List r1;
        org.apache.cxf.jaxrs.client.ClientConfiguration r0;

        r0 := @this: org.apache.cxf.jaxrs.client.ClientConfiguration;

        r1 := @parameter0: java.util.List;

        r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: java.util.List inInterceptors> = r1;

        return;
    }

    public void setOutInterceptors(java.util.List)
    {
        java.util.List r1;
        org.apache.cxf.jaxrs.client.ClientConfiguration r0;

        r0 := @this: org.apache.cxf.jaxrs.client.ClientConfiguration;

        r1 := @parameter0: java.util.List;

        r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: java.util.List outInterceptors> = r1;

        return;
    }

    public void setInFaultInterceptors(java.util.List)
    {
        java.util.List r1;
        org.apache.cxf.jaxrs.client.ClientConfiguration r0;

        r0 := @this: org.apache.cxf.jaxrs.client.ClientConfiguration;

        r1 := @parameter0: java.util.List;

        r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: java.util.List inFault> = r1;

        return;
    }

    public void setOutFaultInterceptors(java.util.List)
    {
        java.util.List r1;
        org.apache.cxf.jaxrs.client.ClientConfiguration r0;

        r0 := @this: org.apache.cxf.jaxrs.client.ClientConfiguration;

        r1 := @parameter0: java.util.List;

        r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: java.util.List outFault> = r1;

        return;
    }

    public org.apache.cxf.transport.Conduit getConduit()
    {
        org.apache.cxf.message.MessageImpl $r0;
        org.apache.cxf.jaxrs.client.ClientMessageObserver $r2;
        org.apache.cxf.Bus $r5;
        org.apache.cxf.transport.Conduit $r7;
        org.apache.cxf.message.ExchangeImpl $r1;
        org.apache.cxf.endpoint.ConduitSelector $r4, $r6, $r8;
        org.apache.cxf.jaxrs.client.ClientConfiguration r3;
        org.apache.cxf.endpoint.Endpoint $r9;

        r3 := @this: org.apache.cxf.jaxrs.client.ClientConfiguration;

        $r0 = new org.apache.cxf.message.MessageImpl;

        specialinvoke $r0.<org.apache.cxf.message.MessageImpl: void <init>()>();

        $r1 = new org.apache.cxf.message.ExchangeImpl;

        specialinvoke $r1.<org.apache.cxf.message.ExchangeImpl: void <init>()>();

        interfaceinvoke $r0.<org.apache.cxf.message.Message: void setExchange(org.apache.cxf.message.Exchange)>($r1);

        $r2 = new org.apache.cxf.jaxrs.client.ClientMessageObserver;

        specialinvoke $r2.<org.apache.cxf.jaxrs.client.ClientMessageObserver: void <init>(org.apache.cxf.jaxrs.client.ClientConfiguration)>(r3);

        interfaceinvoke $r1.<org.apache.cxf.message.Exchange: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/transport/MessageObserver;", $r2);

        $r4 = r3.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.endpoint.ConduitSelector conduitSelector>;

        if $r4 == null goto label1;

        $r8 = r3.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.endpoint.ConduitSelector conduitSelector>;

        $r9 = interfaceinvoke $r8.<org.apache.cxf.endpoint.ConduitSelector: org.apache.cxf.endpoint.Endpoint getEndpoint()>();

        interfaceinvoke $r1.<org.apache.cxf.message.Exchange: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/endpoint/Endpoint;", $r9);

     label1:
        $r5 = r3.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.Bus bus>;

        interfaceinvoke $r1.<org.apache.cxf.message.Exchange: void put(java.lang.Class,java.lang.Object)>(class "Lorg/apache/cxf/Bus;", $r5);

        virtualinvoke r3.<org.apache.cxf.jaxrs.client.ClientConfiguration: void prepareConduitSelector(org.apache.cxf.message.Message)>($r0);

        $r6 = virtualinvoke r3.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.endpoint.ConduitSelector getConduitSelector()>();

        $r7 = interfaceinvoke $r6.<org.apache.cxf.endpoint.ConduitSelector: org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)>($r0);

        return $r7;
    }

    public org.apache.cxf.transport.http.HTTPConduit getHttpConduit()
    {
        org.apache.cxf.transport.Conduit $r1;
        org.apache.cxf.transport.http.HTTPConduit $r2;
        org.apache.cxf.jaxrs.client.ClientConfiguration r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.client.ClientConfiguration;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.transport.Conduit getConduit()>();

        $z0 = $r1 instanceof org.apache.cxf.transport.http.HTTPConduit;

        if $z0 == 0 goto label1;

        $r2 = (org.apache.cxf.transport.http.HTTPConduit) $r1;

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public java.util.Map getResponseContext()
    {
        org.apache.cxf.jaxrs.client.ClientConfiguration r0;
        java.util.Map $r1;

        r0 := @this: org.apache.cxf.jaxrs.client.ClientConfiguration;

        $r1 = r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: java.util.Map responseContext>;

        return $r1;
    }

    public java.util.Map getRequestContext()
    {
        org.apache.cxf.jaxrs.client.ClientConfiguration r0;
        java.util.Map $r1;

        r0 := @this: org.apache.cxf.jaxrs.client.ClientConfiguration;

        $r1 = r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: java.util.Map requestContext>;

        return $r1;
    }

    public org.apache.cxf.endpoint.Endpoint getEndpoint()
    {
        org.apache.cxf.endpoint.Endpoint $r3;
        org.apache.cxf.endpoint.ConduitSelector $r1, $r2;
        org.apache.cxf.jaxrs.client.ClientConfiguration r0;

        r0 := @this: org.apache.cxf.jaxrs.client.ClientConfiguration;

        $r1 = r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.endpoint.ConduitSelector conduitSelector>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.cxf.jaxrs.client.ClientConfiguration: org.apache.cxf.endpoint.ConduitSelector conduitSelector>;

        $r3 = interfaceinvoke $r2.<org.apache.cxf.endpoint.ConduitSelector: org.apache.cxf.endpoint.Endpoint getEndpoint()>();

     label2:
        return $r3;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/client/ClientConfiguration;");

        <org.apache.cxf.jaxrs.client.ClientConfiguration: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
