public class org.apache.commons.compress.archivers.zip.UnrecognizedExtraField extends java.lang.Object implements org.apache.commons.compress.archivers.zip.ZipExtraField
{
    private org.apache.commons.compress.archivers.zip.ZipShort headerId;
    private byte[] localData;
    private byte[] centralData;

    public void <init>()
    {
        org.apache.commons.compress.archivers.zip.UnrecognizedExtraField r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.UnrecognizedExtraField;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void setHeaderId(org.apache.commons.compress.archivers.zip.ZipShort)
    {
        org.apache.commons.compress.archivers.zip.ZipShort r1;
        org.apache.commons.compress.archivers.zip.UnrecognizedExtraField r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.UnrecognizedExtraField;

        r1 := @parameter0: org.apache.commons.compress.archivers.zip.ZipShort;

        r0.<org.apache.commons.compress.archivers.zip.UnrecognizedExtraField: org.apache.commons.compress.archivers.zip.ZipShort headerId> = r1;

        return;
    }

    public org.apache.commons.compress.archivers.zip.ZipShort getHeaderId()
    {
        org.apache.commons.compress.archivers.zip.ZipShort $r1;
        org.apache.commons.compress.archivers.zip.UnrecognizedExtraField r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.UnrecognizedExtraField;

        $r1 = r0.<org.apache.commons.compress.archivers.zip.UnrecognizedExtraField: org.apache.commons.compress.archivers.zip.ZipShort headerId>;

        return $r1;
    }

    public void setLocalFileDataData(byte[])
    {
        byte[] r1, $r2;
        org.apache.commons.compress.archivers.zip.UnrecognizedExtraField r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.UnrecognizedExtraField;

        r1 := @parameter0: byte[];

        $r2 = staticinvoke <org.apache.commons.compress.archivers.zip.ZipUtil: byte[] copy(byte[])>(r1);

        r0.<org.apache.commons.compress.archivers.zip.UnrecognizedExtraField: byte[] localData> = $r2;

        return;
    }

    public org.apache.commons.compress.archivers.zip.ZipShort getLocalFileDataLength()
    {
        byte[] $r2, $r3;
        org.apache.commons.compress.archivers.zip.ZipShort $r0;
        int $i0;
        org.apache.commons.compress.archivers.zip.UnrecognizedExtraField r1;

        r1 := @this: org.apache.commons.compress.archivers.zip.UnrecognizedExtraField;

        $r0 = new org.apache.commons.compress.archivers.zip.ZipShort;

        $r2 = r1.<org.apache.commons.compress.archivers.zip.UnrecognizedExtraField: byte[] localData>;

        if $r2 == null goto label1;

        $r3 = r1.<org.apache.commons.compress.archivers.zip.UnrecognizedExtraField: byte[] localData>;

        $i0 = lengthof $r3;

        goto label2;

     label1:
        $i0 = 0;

     label2:
        specialinvoke $r0.<org.apache.commons.compress.archivers.zip.ZipShort: void <init>(int)>($i0);

        return $r0;
    }

    public byte[] getLocalFileDataData()
    {
        byte[] $r1, $r2;
        org.apache.commons.compress.archivers.zip.UnrecognizedExtraField r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.UnrecognizedExtraField;

        $r1 = r0.<org.apache.commons.compress.archivers.zip.UnrecognizedExtraField: byte[] localData>;

        $r2 = staticinvoke <org.apache.commons.compress.archivers.zip.ZipUtil: byte[] copy(byte[])>($r1);

        return $r2;
    }

    public void setCentralDirectoryData(byte[])
    {
        byte[] r1, $r2;
        org.apache.commons.compress.archivers.zip.UnrecognizedExtraField r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.UnrecognizedExtraField;

        r1 := @parameter0: byte[];

        $r2 = staticinvoke <org.apache.commons.compress.archivers.zip.ZipUtil: byte[] copy(byte[])>(r1);

        r0.<org.apache.commons.compress.archivers.zip.UnrecognizedExtraField: byte[] centralData> = $r2;

        return;
    }

    public org.apache.commons.compress.archivers.zip.ZipShort getCentralDirectoryLength()
    {
        byte[] $r1, $r4;
        org.apache.commons.compress.archivers.zip.ZipShort $r2, $r3;
        int $i0;
        org.apache.commons.compress.archivers.zip.UnrecognizedExtraField r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.UnrecognizedExtraField;

        $r1 = r0.<org.apache.commons.compress.archivers.zip.UnrecognizedExtraField: byte[] centralData>;

        if $r1 == null goto label1;

        $r3 = new org.apache.commons.compress.archivers.zip.ZipShort;

        $r4 = r0.<org.apache.commons.compress.archivers.zip.UnrecognizedExtraField: byte[] centralData>;

        $i0 = lengthof $r4;

        specialinvoke $r3.<org.apache.commons.compress.archivers.zip.ZipShort: void <init>(int)>($i0);

        return $r3;

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.UnrecognizedExtraField: org.apache.commons.compress.archivers.zip.ZipShort getLocalFileDataLength()>();

        return $r2;
    }

    public byte[] getCentralDirectoryData()
    {
        byte[] $r1, $r2, $r3, $r4;
        org.apache.commons.compress.archivers.zip.UnrecognizedExtraField r0;

        r0 := @this: org.apache.commons.compress.archivers.zip.UnrecognizedExtraField;

        $r1 = r0.<org.apache.commons.compress.archivers.zip.UnrecognizedExtraField: byte[] centralData>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.commons.compress.archivers.zip.UnrecognizedExtraField: byte[] centralData>;

        $r4 = staticinvoke <org.apache.commons.compress.archivers.zip.ZipUtil: byte[] copy(byte[])>($r3);

        return $r4;

     label1:
        $r2 = virtualinvoke r0.<org.apache.commons.compress.archivers.zip.UnrecognizedExtraField: byte[] getLocalFileDataData()>();

        return $r2;
    }

    public void parseFromLocalFileData(byte[], int, int)
    {
        byte[] r0, r1;
        int i0, i1;
        org.apache.commons.compress.archivers.zip.UnrecognizedExtraField r2;

        r2 := @this: org.apache.commons.compress.archivers.zip.UnrecognizedExtraField;

        r1 := @parameter0: byte[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        r0 = newarray (byte)[i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i1, r0, 0, i0);

        virtualinvoke r2.<org.apache.commons.compress.archivers.zip.UnrecognizedExtraField: void setLocalFileDataData(byte[])>(r0);

        return;
    }

    public void parseFromCentralDirectoryData(byte[], int, int)
    {
        byte[] r0, r1, $r3;
        int i0, i1;
        org.apache.commons.compress.archivers.zip.UnrecognizedExtraField r2;

        r2 := @this: org.apache.commons.compress.archivers.zip.UnrecognizedExtraField;

        r1 := @parameter0: byte[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        r0 = newarray (byte)[i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i1, r0, 0, i0);

        virtualinvoke r2.<org.apache.commons.compress.archivers.zip.UnrecognizedExtraField: void setCentralDirectoryData(byte[])>(r0);

        $r3 = r2.<org.apache.commons.compress.archivers.zip.UnrecognizedExtraField: byte[] localData>;

        if $r3 != null goto label1;

        virtualinvoke r2.<org.apache.commons.compress.archivers.zip.UnrecognizedExtraField: void setLocalFileDataData(byte[])>(r0);

     label1:
        return;
    }
}
