class org.mortbay.jetty.nio.BlockingChannelConnector$Connection extends org.mortbay.io.nio.ChannelEndPoint implements java.lang.Runnable
{
    boolean _dispatched;
    org.mortbay.jetty.HttpConnection _connection;
    int _sotimeout;
    private final org.mortbay.jetty.nio.BlockingChannelConnector this$0;

    void <init>(org.mortbay.jetty.nio.BlockingChannelConnector, java.nio.channels.ByteChannel)
    {
        org.mortbay.jetty.Server $r4;
        org.mortbay.jetty.nio.BlockingChannelConnector$Connection r0;
        org.mortbay.jetty.nio.BlockingChannelConnector r1;
        org.mortbay.jetty.HttpConnection $r3;
        java.nio.channels.ByteChannel r2;

        r0 := @this: org.mortbay.jetty.nio.BlockingChannelConnector$Connection;

        r1 := @parameter0: org.mortbay.jetty.nio.BlockingChannelConnector;

        r2 := @parameter1: java.nio.channels.ByteChannel;

        r0.<org.mortbay.jetty.nio.BlockingChannelConnector$Connection: org.mortbay.jetty.nio.BlockingChannelConnector this$0> = r1;

        specialinvoke r0.<org.mortbay.io.nio.ChannelEndPoint: void <init>(java.nio.channels.ByteChannel)>(r2);

        r0.<org.mortbay.jetty.nio.BlockingChannelConnector$Connection: boolean _dispatched> = 0;

        $r3 = new org.mortbay.jetty.HttpConnection;

        $r4 = virtualinvoke r1.<org.mortbay.jetty.nio.BlockingChannelConnector: org.mortbay.jetty.Server getServer()>();

        specialinvoke $r3.<org.mortbay.jetty.HttpConnection: void <init>(org.mortbay.jetty.Connector,org.mortbay.io.EndPoint,org.mortbay.jetty.Server)>(r1, r0, $r4);

        r0.<org.mortbay.jetty.nio.BlockingChannelConnector$Connection: org.mortbay.jetty.HttpConnection _connection> = $r3;

        return;
    }

    void dispatch() throws java.io.IOException
    {
        org.mortbay.jetty.nio.BlockingChannelConnector$Connection r0;
        org.mortbay.jetty.nio.BlockingChannelConnector $r1;
        org.mortbay.jetty.HttpConnection $r3;
        org.mortbay.thread.ThreadPool $r2;
        boolean $z0;

        r0 := @this: org.mortbay.jetty.nio.BlockingChannelConnector$Connection;

        $r1 = r0.<org.mortbay.jetty.nio.BlockingChannelConnector$Connection: org.mortbay.jetty.nio.BlockingChannelConnector this$0>;

        $r2 = virtualinvoke $r1.<org.mortbay.jetty.nio.BlockingChannelConnector: org.mortbay.thread.ThreadPool getThreadPool()>();

        $z0 = interfaceinvoke $r2.<org.mortbay.thread.ThreadPool: boolean dispatch(java.lang.Runnable)>(r0);

        if $z0 != 0 goto label1;

        $r3 = r0.<org.mortbay.jetty.nio.BlockingChannelConnector$Connection: org.mortbay.jetty.HttpConnection _connection>;

        staticinvoke <org.mortbay.log.Log: void warn(java.lang.String,java.lang.Object)>("dispatch failed for  {}", $r3);

        virtualinvoke r0.<org.mortbay.jetty.nio.BlockingChannelConnector$Connection: void close()>();

     label1:
        return;
    }

    public void run()
    {
        org.mortbay.jetty.nio.BlockingChannelConnector$Connection r0;
        org.mortbay.jetty.EofException $r27;
        org.mortbay.jetty.Server $r7;
        java.nio.channels.SocketChannel $r11;
        boolean $z0, $z1, $z2;
        org.mortbay.jetty.HttpException $r23;
        org.mortbay.thread.ThreadPool $r8;
        java.lang.Throwable $r13, $r19;
        java.net.Socket $r12;
        int $i0, $i1, $i2;
        org.mortbay.jetty.HttpConnection $r1, $r3, $r5, $r14, $r17, $r21, $r25, $r28;
        java.io.IOException $r16, $r20, $r24;
        org.mortbay.jetty.nio.BlockingChannelConnector $r2, $r4, $r6, $r9, $r15, $r18, $r22, $r26;
        java.lang.Object $r10;

        r0 := @this: org.mortbay.jetty.nio.BlockingChannelConnector$Connection;

     label01:
        $r2 = r0.<org.mortbay.jetty.nio.BlockingChannelConnector$Connection: org.mortbay.jetty.nio.BlockingChannelConnector this$0>;

        $r1 = r0.<org.mortbay.jetty.nio.BlockingChannelConnector$Connection: org.mortbay.jetty.HttpConnection _connection>;

        staticinvoke <org.mortbay.jetty.nio.BlockingChannelConnector: void access$000(org.mortbay.jetty.nio.BlockingChannelConnector,org.mortbay.jetty.HttpConnection)>($r2, $r1);

     label02:
        $z0 = virtualinvoke r0.<org.mortbay.jetty.nio.BlockingChannelConnector$Connection: boolean isOpen()>();

        if $z0 == 0 goto label04;

        $r5 = r0.<org.mortbay.jetty.nio.BlockingChannelConnector$Connection: org.mortbay.jetty.HttpConnection _connection>;

        $z1 = virtualinvoke $r5.<org.mortbay.jetty.HttpConnection: boolean isIdle()>();

        if $z1 == 0 goto label03;

        $r6 = r0.<org.mortbay.jetty.nio.BlockingChannelConnector$Connection: org.mortbay.jetty.nio.BlockingChannelConnector this$0>;

        $r7 = virtualinvoke $r6.<org.mortbay.jetty.nio.BlockingChannelConnector: org.mortbay.jetty.Server getServer()>();

        $r8 = virtualinvoke $r7.<org.mortbay.jetty.Server: org.mortbay.thread.ThreadPool getThreadPool()>();

        $z2 = interfaceinvoke $r8.<org.mortbay.thread.ThreadPool: boolean isLowOnThreads()>();

        if $z2 == 0 goto label03;

        $r9 = r0.<org.mortbay.jetty.nio.BlockingChannelConnector$Connection: org.mortbay.jetty.nio.BlockingChannelConnector this$0>;

        $i0 = virtualinvoke $r9.<org.mortbay.jetty.nio.BlockingChannelConnector: int getLowResourceMaxIdleTime()>();

        if $i0 < 0 goto label03;

        $i1 = r0.<org.mortbay.jetty.nio.BlockingChannelConnector$Connection: int _sotimeout>;

        if $i1 == $i0 goto label03;

        r0.<org.mortbay.jetty.nio.BlockingChannelConnector$Connection: int _sotimeout> = $i0;

        $r10 = virtualinvoke r0.<org.mortbay.jetty.nio.BlockingChannelConnector$Connection: java.lang.Object getTransport()>();

        $r11 = (java.nio.channels.SocketChannel) $r10;

        $r12 = virtualinvoke $r11.<java.nio.channels.SocketChannel: java.net.Socket socket()>();

        $i2 = r0.<org.mortbay.jetty.nio.BlockingChannelConnector$Connection: int _sotimeout>;

        virtualinvoke $r12.<java.net.Socket: void setSoTimeout(int)>($i2);

     label03:
        $r28 = r0.<org.mortbay.jetty.nio.BlockingChannelConnector$Connection: org.mortbay.jetty.HttpConnection _connection>;

        virtualinvoke $r28.<org.mortbay.jetty.HttpConnection: void handle()>();

        goto label02;

     label04:
        goto label27;

     label05:
        goto label26;

     label06:
        $r27 := @caughtexception;

        staticinvoke <org.mortbay.log.Log: void debug(java.lang.String,java.lang.Object)>("EOF", $r27);

     label07:
        virtualinvoke r0.<org.mortbay.jetty.nio.BlockingChannelConnector$Connection: void close()>();

     label08:
        goto label10;

     label09:
        $r24 := @caughtexception;

        staticinvoke <org.mortbay.log.Log: void ignore(java.lang.Throwable)>($r24);

     label10:
        goto label28;

     label11:
        goto label26;

     label12:
        $r23 := @caughtexception;

        staticinvoke <org.mortbay.log.Log: void debug(java.lang.String,java.lang.Object)>("BAD", $r23);

     label13:
        virtualinvoke r0.<org.mortbay.jetty.nio.BlockingChannelConnector$Connection: void close()>();

     label14:
        goto label16;

     label15:
        $r20 := @caughtexception;

        staticinvoke <org.mortbay.log.Log: void ignore(java.lang.Throwable)>($r20);

     label16:
        goto label29;

     label17:
        goto label26;

     label18:
        $r19 := @caughtexception;

        staticinvoke <org.mortbay.log.Log: void warn(java.lang.String,java.lang.Throwable)>("handle failed", $r19);

     label19:
        virtualinvoke r0.<org.mortbay.jetty.nio.BlockingChannelConnector$Connection: void close()>();

     label20:
        goto label22;

     label21:
        $r16 := @caughtexception;

        staticinvoke <org.mortbay.log.Log: void ignore(java.lang.Throwable)>($r16);

     label22:
        goto label30;

     label23:
        goto label26;

     label24:
        $r13 := @caughtexception;

        goto label31;

     label25:
        throw $r13;

     label26:
        return;

     label27:
        $r4 = r0.<org.mortbay.jetty.nio.BlockingChannelConnector$Connection: org.mortbay.jetty.nio.BlockingChannelConnector this$0>;

        $r3 = r0.<org.mortbay.jetty.nio.BlockingChannelConnector$Connection: org.mortbay.jetty.HttpConnection _connection>;

        staticinvoke <org.mortbay.jetty.nio.BlockingChannelConnector: void access$100(org.mortbay.jetty.nio.BlockingChannelConnector,org.mortbay.jetty.HttpConnection)>($r4, $r3);

        goto label05;

     label28:
        $r26 = r0.<org.mortbay.jetty.nio.BlockingChannelConnector$Connection: org.mortbay.jetty.nio.BlockingChannelConnector this$0>;

        $r25 = r0.<org.mortbay.jetty.nio.BlockingChannelConnector$Connection: org.mortbay.jetty.HttpConnection _connection>;

        staticinvoke <org.mortbay.jetty.nio.BlockingChannelConnector: void access$100(org.mortbay.jetty.nio.BlockingChannelConnector,org.mortbay.jetty.HttpConnection)>($r26, $r25);

        goto label11;

     label29:
        $r22 = r0.<org.mortbay.jetty.nio.BlockingChannelConnector$Connection: org.mortbay.jetty.nio.BlockingChannelConnector this$0>;

        $r21 = r0.<org.mortbay.jetty.nio.BlockingChannelConnector$Connection: org.mortbay.jetty.HttpConnection _connection>;

        staticinvoke <org.mortbay.jetty.nio.BlockingChannelConnector: void access$100(org.mortbay.jetty.nio.BlockingChannelConnector,org.mortbay.jetty.HttpConnection)>($r22, $r21);

        goto label17;

     label30:
        $r18 = r0.<org.mortbay.jetty.nio.BlockingChannelConnector$Connection: org.mortbay.jetty.nio.BlockingChannelConnector this$0>;

        $r17 = r0.<org.mortbay.jetty.nio.BlockingChannelConnector$Connection: org.mortbay.jetty.HttpConnection _connection>;

        staticinvoke <org.mortbay.jetty.nio.BlockingChannelConnector: void access$100(org.mortbay.jetty.nio.BlockingChannelConnector,org.mortbay.jetty.HttpConnection)>($r18, $r17);

        goto label23;

     label31:
        $r15 = r0.<org.mortbay.jetty.nio.BlockingChannelConnector$Connection: org.mortbay.jetty.nio.BlockingChannelConnector this$0>;

        $r14 = r0.<org.mortbay.jetty.nio.BlockingChannelConnector$Connection: org.mortbay.jetty.HttpConnection _connection>;

        staticinvoke <org.mortbay.jetty.nio.BlockingChannelConnector: void access$100(org.mortbay.jetty.nio.BlockingChannelConnector,org.mortbay.jetty.HttpConnection)>($r15, $r14);

        goto label25;

        catch org.mortbay.jetty.EofException from label01 to label04 with label06;
        catch java.io.IOException from label07 to label08 with label09;
        catch org.mortbay.jetty.HttpException from label01 to label04 with label12;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.lang.Throwable from label01 to label04 with label18;
        catch java.io.IOException from label19 to label20 with label21;
        catch java.lang.Throwable from label01 to label05 with label24;
        catch java.lang.Throwable from label06 to label11 with label24;
        catch java.lang.Throwable from label12 to label17 with label24;
        catch java.lang.Throwable from label18 to label23 with label24;
        catch java.lang.Throwable from label24 to label25 with label24;
    }
}
