public class org.apache.xalan.templates.ElemExtensionCall extends org.apache.xalan.templates.ElemLiteralResult
{
    java.lang.String m_extns;
    java.lang.String m_lang;
    java.lang.String m_srcURL;
    java.lang.String m_scriptSrc;
    org.apache.xalan.templates.ElemExtensionDecl m_decl;

    public void <init>()
    {
        org.apache.xalan.templates.ElemExtensionCall r0;

        r0 := @this: org.apache.xalan.templates.ElemExtensionCall;

        specialinvoke r0.<org.apache.xalan.templates.ElemLiteralResult: void <init>()>();

        r0.<org.apache.xalan.templates.ElemExtensionCall: org.apache.xalan.templates.ElemExtensionDecl m_decl> = null;

        return;
    }

    public int getXSLToken()
    {
        org.apache.xalan.templates.ElemExtensionCall r0;

        r0 := @this: org.apache.xalan.templates.ElemExtensionCall;

        return 79;
    }

    public void compose(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemExtensionCall r0;
        org.apache.xalan.extensions.ExtensionNamespacesManager $r6;
        org.apache.xalan.templates.StylesheetRoot r1;
        org.apache.xalan.templates.ElemExtensionDecl $r4, $r5;
        java.lang.String $r2, $r3, $r7;

        r0 := @this: org.apache.xalan.templates.ElemExtensionCall;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        specialinvoke r0.<org.apache.xalan.templates.ElemLiteralResult: void compose(org.apache.xalan.templates.StylesheetRoot)>(r1);

        $r2 = virtualinvoke r0.<org.apache.xalan.templates.ElemLiteralResult: java.lang.String getNamespace()>();

        r0.<org.apache.xalan.templates.ElemExtensionCall: java.lang.String m_extns> = $r2;

        $r3 = r0.<org.apache.xalan.templates.ElemExtensionCall: java.lang.String m_extns>;

        $r4 = specialinvoke r0.<org.apache.xalan.templates.ElemExtensionCall: org.apache.xalan.templates.ElemExtensionDecl getElemExtensionDecl(org.apache.xalan.templates.StylesheetRoot,java.lang.String)>(r1, $r3);

        r0.<org.apache.xalan.templates.ElemExtensionCall: org.apache.xalan.templates.ElemExtensionDecl m_decl> = $r4;

        $r5 = r0.<org.apache.xalan.templates.ElemExtensionCall: org.apache.xalan.templates.ElemExtensionDecl m_decl>;

        if $r5 != null goto label1;

        $r6 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.extensions.ExtensionNamespacesManager getExtensionNamespacesManager()>();

        $r7 = r0.<org.apache.xalan.templates.ElemExtensionCall: java.lang.String m_extns>;

        virtualinvoke $r6.<org.apache.xalan.extensions.ExtensionNamespacesManager: void registerExtension(java.lang.String)>($r7);

     label1:
        return;
    }

    private org.apache.xalan.templates.ElemExtensionDecl getElemExtensionDecl(org.apache.xalan.templates.StylesheetRoot, java.lang.String)
    {
        org.apache.xalan.templates.ElemExtensionCall r5;
        org.apache.xalan.templates.ElemTemplateElement r6;
        org.apache.xalan.templates.StylesheetComposed $r1;
        org.apache.xalan.templates.StylesheetRoot r0;
        org.apache.xalan.templates.ElemExtensionDecl r7;
        int $i0, $i1, i2;
        java.lang.String $r2, $r3, r4;
        boolean $z0;

        r5 := @this: org.apache.xalan.templates.ElemExtensionCall;

        r0 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        r4 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<org.apache.xalan.templates.StylesheetRoot: int getGlobalImportCount()>();

        i2 = 0;

        goto label5;

     label1:
        $r1 = virtualinvoke r0.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetComposed getGlobalImport(int)>(i2);

        r6 = virtualinvoke $r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getFirstChildElem()>();

        goto label4;

     label2:
        $i1 = virtualinvoke r6.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        if 85 != $i1 goto label3;

        r7 = (org.apache.xalan.templates.ElemExtensionDecl) r6;

        $r2 = virtualinvoke r7.<org.apache.xalan.templates.ElemExtensionDecl: java.lang.String getPrefix()>();

        $r3 = virtualinvoke r6.<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getNamespaceForPrefix(java.lang.String)>($r2);

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

        return r7;

     label3:
        r6 = virtualinvoke r6.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getNextSiblingElem()>();

     label4:
        if r6 != null goto label2;

        i2 = i2 + 1;

     label5:
        if i2 < $i0 goto label1;

        return null;
    }

    private void executeFallbacks(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemExtensionCall r0;
        java.lang.Throwable $r3;
        org.apache.xalan.templates.ElemFallback $r2;
        org.apache.xalan.templates.ElemTemplateElement r4;
        int $i0;
        org.apache.xalan.transformer.TransformerImpl r1;

        r0 := @this: org.apache.xalan.templates.ElemExtensionCall;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        r4 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

        goto label7;

     label1:
        $i0 = virtualinvoke r4.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        if $i0 != 57 goto label6;

     label2:
        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void pushElemTemplateElement(org.apache.xalan.templates.ElemTemplateElement)>(r4);

        $r2 = (org.apache.xalan.templates.ElemFallback) r4;

        virtualinvoke $r2.<org.apache.xalan.templates.ElemFallback: void executeFallback(org.apache.xalan.transformer.TransformerImpl)>(r1);

        goto label8;

     label3:
        goto label6;

     label4:
        $r3 := @caughtexception;

        goto label9;

     label5:
        throw $r3;

     label6:
        r4 = r4.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling>;

     label7:
        if r4 != null goto label1;

        return;

     label8:
        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void popElemTemplateElement()>();

        goto label3;

     label9:
        virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: void popElemTemplateElement()>();

        goto label5;

        catch java.lang.Throwable from label2 to label4 with label4;
    }

    private boolean hasFallbackChildren()
    {
        org.apache.xalan.templates.ElemExtensionCall r0;
        int $i0;
        org.apache.xalan.templates.ElemTemplateElement r1;

        r0 := @this: org.apache.xalan.templates.ElemExtensionCall;

        r1 = r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_firstChild>;

        goto label3;

     label1:
        $i0 = virtualinvoke r1.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        if $i0 != 57 goto label2;

        return 1;

     label2:
        r1 = r1.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement m_nextSibling>;

     label3:
        if r1 != null goto label1;

        return 0;
    }

    public void execute(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xml.serializer.SerializationHandler $r1;
        org.apache.xalan.trace.TraceManager $r8, $r14;
        org.apache.xalan.extensions.ExtensionsTable $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        javax.xml.transform.SourceLocator $r25;
        java.lang.Exception $r19;
        org.xml.sax.SAXException $r15;
        java.lang.Object[] $r10;
        javax.xml.transform.TransformerException $r9, $r16, $r17, $r21, $r23, r24;
        org.apache.xalan.extensions.ExtensionHandler $r5;
        javax.xml.transform.ErrorListener $r13, $r18, $r20, $r22, $r26;
        org.apache.xalan.templates.Stylesheet $r7;
        java.lang.String $r4, $r6, $r11, $r12;
        org.apache.xalan.templates.ElemExtensionCall r3;
        org.apache.xalan.transformer.TransformerImpl r0;

        r3 := @this: org.apache.xalan.templates.ElemExtensionCall;

        r0 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        $z0 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z0 == 0 goto label01;

        $r14 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        virtualinvoke $r14.<org.apache.xalan.trace.TraceManager: void fireTraceEvent(org.apache.xalan.templates.ElemTemplateElement)>(r3);

     label01:
        $r1 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler getResultTreeHandler()>();

        interfaceinvoke $r1.<org.apache.xml.serializer.SerializationHandler: void flushPending()>();

        $r2 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.extensions.ExtensionsTable getExtensionsTable()>();

        $r4 = r3.<org.apache.xalan.templates.ElemExtensionCall: java.lang.String m_extns>;

        $r5 = virtualinvoke $r2.<org.apache.xalan.extensions.ExtensionsTable: org.apache.xalan.extensions.ExtensionHandler get(java.lang.String)>($r4);

        if null != $r5 goto label04;

        $z2 = specialinvoke r3.<org.apache.xalan.templates.ElemExtensionCall: boolean hasFallbackChildren()>();

        if $z2 == 0 goto label02;

        specialinvoke r3.<org.apache.xalan.templates.ElemExtensionCall: void executeFallbacks(org.apache.xalan.transformer.TransformerImpl)>(r0);

        goto label03;

     label02:
        $r9 = new javax.xml.transform.TransformerException;

        $r10 = newarray (java.lang.Object)[1];

        $r11 = virtualinvoke r3.<org.apache.xalan.templates.ElemLiteralResult: java.lang.String getNodeName()>();

        $r10[0] = $r11;

        $r12 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_CALL_TO_EXT_FAILED", $r10);

        specialinvoke $r9.<javax.xml.transform.TransformerException: void <init>(java.lang.String)>($r12);

        $r13 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.ErrorListener getErrorListener()>();

        interfaceinvoke $r13.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r9);

     label03:
        return;

     label04:
        $r6 = virtualinvoke r3.<org.apache.xalan.templates.ElemLiteralResult: java.lang.String getLocalName()>();

        $r7 = virtualinvoke r3.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.Stylesheet getStylesheet()>();

        virtualinvoke $r5.<org.apache.xalan.extensions.ExtensionHandler: void processElement(java.lang.String,org.apache.xalan.templates.ElemTemplateElement,org.apache.xalan.transformer.TransformerImpl,org.apache.xalan.templates.Stylesheet,java.lang.Object)>($r6, r3, r0, $r7, r3);

     label05:
        goto label11;

     label06:
        $r19 := @caughtexception;

        $z3 = specialinvoke r3.<org.apache.xalan.templates.ElemExtensionCall: boolean hasFallbackChildren()>();

        if $z3 == 0 goto label07;

        specialinvoke r3.<org.apache.xalan.templates.ElemExtensionCall: void executeFallbacks(org.apache.xalan.transformer.TransformerImpl)>(r0);

        goto label11;

     label07:
        $z4 = $r19 instanceof javax.xml.transform.TransformerException;

        if $z4 == 0 goto label09;

        r24 = (javax.xml.transform.TransformerException) $r19;

        $r25 = virtualinvoke r24.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator getLocator()>();

        if null != $r25 goto label08;

        virtualinvoke r24.<javax.xml.transform.TransformerException: void setLocator(javax.xml.transform.SourceLocator)>(r3);

     label08:
        $r26 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.ErrorListener getErrorListener()>();

        interfaceinvoke $r26.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>(r24);

        goto label11;

     label09:
        $z5 = $r19 instanceof java.lang.RuntimeException;

        if $z5 == 0 goto label10;

        $r22 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.ErrorListener getErrorListener()>();

        $r23 = new javax.xml.transform.TransformerException;

        specialinvoke $r23.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>($r19);

        interfaceinvoke $r22.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r23);

        goto label11;

     label10:
        $r20 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.ErrorListener getErrorListener()>();

        $r21 = new javax.xml.transform.TransformerException;

        specialinvoke $r21.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>($r19);

        interfaceinvoke $r20.<javax.xml.transform.ErrorListener: void warning(javax.xml.transform.TransformerException)>($r21);

     label11:
        goto label14;

     label12:
        $r17 := @caughtexception;

        $r18 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.ErrorListener getErrorListener()>();

        interfaceinvoke $r18.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r17);

        goto label14;

     label13:
        $r15 := @caughtexception;

        $r16 = new javax.xml.transform.TransformerException;

        specialinvoke $r16.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>($r15);

        throw $r16;

     label14:
        $z1 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z1 == 0 goto label15;

        $r8 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        virtualinvoke $r8.<org.apache.xalan.trace.TraceManager: void fireTraceEndEvent(org.apache.xalan.templates.ElemTemplateElement)>(r3);

     label15:
        return;

        catch java.lang.Exception from label04 to label05 with label06;
        catch javax.xml.transform.TransformerException from label01 to label11 with label12;
        catch org.xml.sax.SAXException from label01 to label11 with label13;
    }

    public java.lang.String getAttribute(java.lang.String)
    {
        org.apache.xalan.templates.ElemExtensionCall r0;
        org.apache.xalan.templates.AVT $r2;
        java.lang.String r1, $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemExtensionCall;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.xalan.templates.ElemLiteralResult: org.apache.xalan.templates.AVT getLiteralResultAttribute(java.lang.String)>(r1);

        if null == $r2 goto label1;

        $r3 = virtualinvoke $r2.<org.apache.xalan.templates.AVT: java.lang.String getRawName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke $r2.<org.apache.xalan.templates.AVT: java.lang.String getSimpleString()>();

        return $r4;

     label1:
        return null;
    }

    public java.lang.String getAttribute(java.lang.String, org.w3c.dom.Node, org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemExtensionCall r0;
        org.apache.xalan.templates.AVT $r2;
        org.apache.xpath.XPathContext $r5;
        org.w3c.dom.Node r6;
        int $i0;
        java.lang.String r1, $r3, $r7;
        boolean $z0;
        org.apache.xalan.transformer.TransformerImpl r4;

        r0 := @this: org.apache.xalan.templates.ElemExtensionCall;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: org.w3c.dom.Node;

        r4 := @parameter2: org.apache.xalan.transformer.TransformerImpl;

        $r2 = virtualinvoke r0.<org.apache.xalan.templates.ElemLiteralResult: org.apache.xalan.templates.AVT getLiteralResultAttribute(java.lang.String)>(r1);

        if null == $r2 goto label1;

        $r3 = virtualinvoke $r2.<org.apache.xalan.templates.AVT: java.lang.String getRawName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r4.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        $i0 = virtualinvoke $r5.<org.apache.xpath.XPathContext: int getDTMHandleFromNode(org.w3c.dom.Node)>(r6);

        $r7 = virtualinvoke $r2.<org.apache.xalan.templates.AVT: java.lang.String evaluate(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>($r5, $i0, r0);

        return $r7;

     label1:
        return null;
    }

    protected boolean accept(org.apache.xalan.templates.XSLTVisitor)
    {
        org.apache.xalan.templates.ElemExtensionCall r1;
        org.apache.xalan.templates.XSLTVisitor r0;
        boolean $z0;

        r1 := @this: org.apache.xalan.templates.ElemExtensionCall;

        r0 := @parameter0: org.apache.xalan.templates.XSLTVisitor;

        $z0 = virtualinvoke r0.<org.apache.xalan.templates.XSLTVisitor: boolean visitExtensionElement(org.apache.xalan.templates.ElemExtensionCall)>(r1);

        return $z0;
    }
}
