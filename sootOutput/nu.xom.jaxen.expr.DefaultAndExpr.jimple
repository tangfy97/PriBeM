class nu.xom.jaxen.expr.DefaultAndExpr extends nu.xom.jaxen.expr.DefaultLogicalExpr
{
    private static final long serialVersionUID;

    void <init>(nu.xom.jaxen.expr.Expr, nu.xom.jaxen.expr.Expr)
    {
        nu.xom.jaxen.expr.DefaultAndExpr r0;
        nu.xom.jaxen.expr.Expr r1, r2;

        r0 := @this: nu.xom.jaxen.expr.DefaultAndExpr;

        r1 := @parameter0: nu.xom.jaxen.expr.Expr;

        r2 := @parameter1: nu.xom.jaxen.expr.Expr;

        specialinvoke r0.<nu.xom.jaxen.expr.DefaultLogicalExpr: void <init>(nu.xom.jaxen.expr.Expr,nu.xom.jaxen.expr.Expr)>(r1, r2);

        return;
    }

    public java.lang.String getOperator()
    {
        nu.xom.jaxen.expr.DefaultAndExpr r0;

        r0 := @this: nu.xom.jaxen.expr.DefaultAndExpr;

        return "and";
    }

    public java.lang.String toString()
    {
        nu.xom.jaxen.expr.Expr $r3, $r6;
        nu.xom.jaxen.expr.DefaultAndExpr r2;
        java.lang.StringBuffer $r0, $r1, $r4, $r5, $r7, $r8;
        java.lang.String $r9;

        r2 := @this: nu.xom.jaxen.expr.DefaultAndExpr;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[(DefaultAndExpr): ");

        $r3 = virtualinvoke r2.<nu.xom.jaxen.expr.DefaultAndExpr: nu.xom.jaxen.expr.Expr getLHS()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r6 = virtualinvoke r2.<nu.xom.jaxen.expr.DefaultAndExpr: nu.xom.jaxen.expr.Expr getRHS()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }

    public java.lang.Object evaluate(nu.xom.jaxen.Context) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.Expr $r3, $r6;
        nu.xom.jaxen.expr.DefaultAndExpr r2;
        java.lang.Boolean $r5, $r8, $r9, $r10, $r11;
        java.lang.Object $r4, $r7;
        nu.xom.jaxen.Context r0;
        nu.xom.jaxen.Navigator $r1;
        boolean $z0, $z1;

        r2 := @this: nu.xom.jaxen.expr.DefaultAndExpr;

        r0 := @parameter0: nu.xom.jaxen.Context;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.Context: nu.xom.jaxen.Navigator getNavigator()>();

        $r3 = virtualinvoke r2.<nu.xom.jaxen.expr.DefaultAndExpr: nu.xom.jaxen.expr.Expr getLHS()>();

        $r4 = interfaceinvoke $r3.<nu.xom.jaxen.expr.Expr: java.lang.Object evaluate(nu.xom.jaxen.Context)>(r0);

        $r5 = staticinvoke <nu.xom.jaxen.function.BooleanFunction: java.lang.Boolean evaluate(java.lang.Object,nu.xom.jaxen.Navigator)>($r4, $r1);

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label1;

        $r11 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r11;

     label1:
        $r6 = virtualinvoke r2.<nu.xom.jaxen.expr.DefaultAndExpr: nu.xom.jaxen.expr.Expr getRHS()>();

        $r7 = interfaceinvoke $r6.<nu.xom.jaxen.expr.Expr: java.lang.Object evaluate(nu.xom.jaxen.Context)>(r0);

        $r8 = staticinvoke <nu.xom.jaxen.function.BooleanFunction: java.lang.Boolean evaluate(java.lang.Object,nu.xom.jaxen.Navigator)>($r7, $r1);

        $z1 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 != 0 goto label2;

        $r10 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r10;

     label2:
        $r9 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r9;
    }

    public static void <clinit>()
    {
        <nu.xom.jaxen.expr.DefaultAndExpr: long serialVersionUID> = -5237984010263103742L;

        return;
    }
}
