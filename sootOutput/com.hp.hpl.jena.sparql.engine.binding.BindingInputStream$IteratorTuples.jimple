class com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples extends org.apache.jena.atlas.iterator.IteratorSlotted
{
    private com.hp.hpl.jena.sparql.engine.binding.Binding lastLine;
    java.util.List vars;
    final com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0;

    public void <init>(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream)
    {
        com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples r0;
        com.hp.hpl.jena.sparql.engine.binding.BindingInputStream r1;
        java.util.ArrayList $r2;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples;

        r1 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream;

        r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0> = r1;

        specialinvoke r0.<org.apache.jena.atlas.iterator.IteratorSlotted: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: java.util.List vars> = $r2;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: void directives()>();

        return;
    }

    private void directives()
    {
        org.apache.jena.riot.tokens.Token $r2;
        org.apache.jena.riot.tokens.TokenType $r6;
        com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples r0;
        com.hp.hpl.jena.sparql.engine.binding.BindingInputStream $r1, $r5;
        java.lang.String $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples;

     label1:
        $r5 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $r6 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType KEYWORD>;

        $z2 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: boolean access$000(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream,org.apache.jena.riot.tokens.TokenType)>($r5, $r6);

        if $z2 == 0 goto label4;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $r2 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: org.apache.jena.riot.tokens.Token access$100(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream)>($r1);

        $r3 = virtualinvoke $r2.<org.apache.jena.riot.tokens.Token: java.lang.String getImage()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("VARS");

        if $z0 == 0 goto label2;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: void directiveVars()>();

        goto label1;

     label2:
        $r4 = virtualinvoke $r2.<org.apache.jena.riot.tokens.Token: java.lang.String getImage()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("PREFIX");

        if $z1 == 0 goto label3;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: void directivePrefix()>();

        goto label1;

     label3:
        goto label1;

     label4:
        return;
    }

    protected com.hp.hpl.jena.sparql.engine.binding.Binding moveToNext()
    {
        com.hp.hpl.jena.graph.Node r46;
        com.hp.hpl.jena.rdf.model.AnonId $r49;
        com.hp.hpl.jena.sparql.engine.binding.BindingMap $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.jena.riot.system.ParserProfile $r32;
        java.util.List $r7, $r8, $r9, $r14, $r22, $r23, $r41;
        com.hp.hpl.jena.sparql.engine.binding.Binding $r29;
        com.hp.hpl.jena.sparql.engine.binding.BindingInputStream $r3, $r4, $r5, $r12, $r18, $r19, $r25, $r31, $r36, $r37;
        java.lang.StringBuilder $r13, $r15, $r40, $r42, $r48, $r50;
        java.lang.Object[] $r17, $r21, $r44;
        org.apache.jena.riot.tokens.Token $r6, $r20, $r26, $r38;
        com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i9;
        java.lang.String $r16, $r34, $r35, $r43;
        com.hp.hpl.jena.sparql.core.Var $r45, r47;
        org.apache.jena.riot.tokens.TokenType $r2, $r27, $r28, $r30;
        java.lang.Object $r10, $r24;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: void directives()>();

        $r1 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingFactory: com.hp.hpl.jena.sparql.engine.binding.BindingMap create()>();

        i7 = 0;

     label01:
        $r3 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $r2 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType DOT>;

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: boolean access$200(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream,org.apache.jena.riot.tokens.TokenType)>($r3, $r2);

        if $z0 != 0 goto label08;

        $r22 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: java.util.List vars>;

        $i4 = interfaceinvoke $r22.<java.util.List: int size()>();

        if i7 < $i4 goto label02;

        $r37 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $r36 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $r38 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: org.apache.jena.riot.tokens.Token access$300(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream)>($r36);

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Too many items in a line.  Expected ");

        $r41 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: java.util.List vars>;

        $i6 = interfaceinvoke $r41.<java.util.List: int size()>();

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        $r44 = newarray (java.lang.Object)[0];

        staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: void access$400(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream,org.apache.jena.riot.tokens.Token,java.lang.String,java.lang.Object[])>($r37, $r38, $r43, $r44);

     label02:
        $r23 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: java.util.List vars>;

        $r24 = interfaceinvoke $r23.<java.util.List: java.lang.Object get(int)>(i7);

        $r45 = (com.hp.hpl.jena.sparql.core.Var) $r24;

        $r25 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $r26 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: org.apache.jena.riot.tokens.Token access$500(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream)>($r25);

        $r27 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType MINUS>;

        $z2 = virtualinvoke $r26.<org.apache.jena.riot.tokens.Token: boolean hasType(org.apache.jena.riot.tokens.TokenType)>($r27);

        if $z2 != 0 goto label07;

        $r28 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType STAR>;

        $z3 = virtualinvoke $r26.<org.apache.jena.riot.tokens.Token: boolean hasType(org.apache.jena.riot.tokens.TokenType)>($r28);

        if $z3 != 0 goto label03;

        $z4 = virtualinvoke $r26.<org.apache.jena.riot.tokens.Token: boolean isCtlCode()>();

        if $z4 == 0 goto label04;

        $i5 = virtualinvoke $r26.<org.apache.jena.riot.tokens.Token: int getCntrlCode()>();

        $i9 = (int) -1;

        if $i5 != $i9 goto label04;

     label03:
        $r29 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.Binding lastLine>;

        r46 = interfaceinvoke $r29.<com.hp.hpl.jena.sparql.engine.binding.Binding: com.hp.hpl.jena.graph.Node get(com.hp.hpl.jena.sparql.core.Var)>($r45);

        goto label06;

     label04:
        $r30 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType BNODE>;

        $z5 = virtualinvoke $r26.<org.apache.jena.riot.tokens.Token: boolean hasType(org.apache.jena.riot.tokens.TokenType)>($r30);

        if $z5 == 0 goto label05;

        $r49 = new com.hp.hpl.jena.rdf.model.AnonId;

        $r34 = virtualinvoke $r26.<org.apache.jena.riot.tokens.Token: java.lang.String getImage()>();

        $r35 = staticinvoke <org.apache.jena.riot.out.NodeFmtLib: java.lang.String decodeBNodeLabel(java.lang.String)>($r34);

        specialinvoke $r49.<com.hp.hpl.jena.rdf.model.AnonId: void <init>(java.lang.String)>($r35);

        r46 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createAnon(com.hp.hpl.jena.rdf.model.AnonId)>($r49);

        goto label06;

     label05:
        $r31 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $r32 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: org.apache.jena.riot.system.ParserProfile access$600(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream)>($r31);

        r46 = interfaceinvoke $r32.<org.apache.jena.riot.system.ParserProfile: com.hp.hpl.jena.graph.Node create(com.hp.hpl.jena.graph.Node,org.apache.jena.riot.tokens.Token)>(null, $r26);

     label06:
        interfaceinvoke $r1.<com.hp.hpl.jena.sparql.engine.binding.BindingMap: void add(com.hp.hpl.jena.sparql.core.Var,com.hp.hpl.jena.graph.Node)>($r45, r46);

     label07:
        i7 = i7 + 1;

        goto label01;

     label08:
        $r4 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $z1 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: boolean access$700(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream)>($r4);

        if $z1 == 0 goto label09;

        $r19 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $r18 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $r20 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: org.apache.jena.riot.tokens.Token access$800(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream)>($r18);

        $r21 = newarray (java.lang.Object)[0];

        staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: void access$900(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream,org.apache.jena.riot.tokens.Token,java.lang.String,java.lang.Object[])>($r19, $r20, "Line does not end with a DOT", $r21);

     label09:
        $r5 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $r6 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: org.apache.jena.riot.tokens.Token access$1000(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream)>($r5);

        $r7 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: java.util.List vars>;

        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        if i7 == $i0 goto label10;

        $r9 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: java.util.List vars>;

        $r8 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: java.util.List vars>;

        $i1 = interfaceinvoke $r8.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i2);

        r47 = (com.hp.hpl.jena.sparql.core.Var) $r10;

        $r12 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Too many items in a line.  Expected ");

        $r14 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: java.util.List vars>;

        $i3 = interfaceinvoke $r14.<java.util.List: int size()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = newarray (java.lang.Object)[0];

        staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: void access$1100(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream,org.apache.jena.riot.tokens.Token,java.lang.String,java.lang.Object[])>($r12, $r6, $r16, $r17);

     label10:
        r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.Binding lastLine> = $r1;

        return $r1;
    }

    protected boolean hasMore()
    {
        com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples r0;
        com.hp.hpl.jena.sparql.engine.binding.BindingInputStream $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: boolean access$1200(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream)>($r1);

        return $z0;
    }

    private void directiveVars()
    {
        java.lang.Object[] $r18;
        org.apache.jena.riot.tokens.Token $r7;
        com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples r0;
        java.lang.String $r9, $r17;
        boolean $z0, $z1, $z2;
        com.hp.hpl.jena.sparql.core.Var $r10;
        java.util.List $r1, $r11;
        org.apache.jena.riot.tokens.TokenType $r4, $r8;
        com.hp.hpl.jena.sparql.engine.binding.BindingInputStream $r2, $r3, $r5, $r6, $r13;
        java.lang.StringBuilder $r12, $r14, $r15, $r16;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: java.util.List vars>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

     label1:
        $r2 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: boolean access$1300(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream)>($r2);

        if $z0 != 0 goto label3;

        $r5 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $r4 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType DOT>;

        $z1 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: boolean access$1400(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream,org.apache.jena.riot.tokens.TokenType)>($r5, $r4);

        if $z1 != 0 goto label3;

        $r6 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $r7 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: org.apache.jena.riot.tokens.Token access$1500(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream)>($r6);

        $r8 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType VAR>;

        $z2 = virtualinvoke $r7.<org.apache.jena.riot.tokens.Token: boolean hasType(org.apache.jena.riot.tokens.TokenType)>($r8);

        if $z2 != 0 goto label2;

        $r13 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("VARS requires a list of variables (found \'");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\')");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = newarray (java.lang.Object)[0];

        staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: void access$1600(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream,org.apache.jena.riot.tokens.Token,java.lang.String,java.lang.Object[])>($r13, $r7, $r17, $r18);

     label2:
        $r9 = virtualinvoke $r7.<org.apache.jena.riot.tokens.Token: java.lang.String getImage()>();

        $r10 = staticinvoke <com.hp.hpl.jena.sparql.core.Var: com.hp.hpl.jena.sparql.core.Var alloc(java.lang.String)>($r9);

        $r11 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: java.util.List vars>;

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label1;

     label3:
        $r3 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: org.apache.jena.riot.tokens.Token access$1700(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream)>($r3);

        return;
    }

    private void directivePrefix()
    {
        org.apache.jena.iri.IRI $r19;
        com.hp.hpl.jena.sparql.engine.binding.BindingInputStream $r2, $r3, $r6, $r9, $r11, $r12, $r15, $r17, $r18, $r20, $r24, $r26, $r27, $r28, $r32, $r38, $r39, $r43, $r49, $r50, $r54;
        java.lang.StringBuilder $r30, $r31, $r34, $r35, $r41, $r42, $r45, $r46, $r52, $r53, $r56, $r57;
        java.lang.Object[] $r37, $r48, $r59;
        long $l1, $l2;
        java.lang.String $r5, $r8, $r14, $r36, $r47, $r58;
        org.apache.jena.riot.tokens.TokenType $r1, $r10, $r25;
        boolean $z0, $z1;
        org.apache.jena.riot.system.ParserProfile $r16, $r21;
        org.apache.jena.riot.system.Prologue $r22;
        org.apache.jena.riot.tokens.Token $r4, $r7, $r13, $r29, $r33, $r40, $r44, $r51, $r55;
        org.apache.jena.riot.system.PrefixMap $r23;
        com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples r0;
        int $i0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples;

        $r2 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $r1 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType PREFIXED_NAME>;

        $z0 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: boolean access$1800(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream,org.apache.jena.riot.tokens.TokenType)>($r2, $r1);

        if $z0 != 0 goto label1;

        $r50 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $r49 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $r51 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: org.apache.jena.riot.tokens.Token access$1900(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream)>($r49);

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PREFIX requires a prefix (found \'");

        $r54 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $r55 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: org.apache.jena.riot.tokens.Token access$2000(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream)>($r54);

        $r56 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r55);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\')");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        $r59 = newarray (java.lang.Object)[0];

        staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: void access$2100(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream,org.apache.jena.riot.tokens.Token,java.lang.String,java.lang.Object[])>($r50, $r51, $r58, $r59);

     label1:
        $r3 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $r4 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: org.apache.jena.riot.tokens.Token access$2200(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream)>($r3);

        $r5 = virtualinvoke $r4.<org.apache.jena.riot.tokens.Token: java.lang.String getImage2()>();

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 == 0 goto label2;

        $r39 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $r38 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $r40 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: org.apache.jena.riot.tokens.Token access$2300(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream)>($r38);

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PREFIX requires a prefix and no suffix (found \'");

        $r43 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $r44 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: org.apache.jena.riot.tokens.Token access$2400(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream)>($r43);

        $r45 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\')");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        $r48 = newarray (java.lang.Object)[0];

        staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: void access$2500(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream,org.apache.jena.riot.tokens.Token,java.lang.String,java.lang.Object[])>($r39, $r40, $r47, $r48);

     label2:
        $r6 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $r7 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: org.apache.jena.riot.tokens.Token access$2600(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream)>($r6);

        $r8 = virtualinvoke $r7.<org.apache.jena.riot.tokens.Token: java.lang.String getImage()>();

        $r9 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: org.apache.jena.riot.tokens.Token access$2700(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream)>($r9);

        $r11 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $r10 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType IRI>;

        $z1 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: boolean access$2800(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream,org.apache.jena.riot.tokens.TokenType)>($r11, $r10);

        if $z1 != 0 goto label3;

        $r28 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $r27 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $r29 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: org.apache.jena.riot.tokens.Token access$2900(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream)>($r27);

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@prefix requires an IRI (found \'");

        $r32 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $r33 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: org.apache.jena.riot.tokens.Token access$3000(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream)>($r32);

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\')");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        $r37 = newarray (java.lang.Object)[0];

        staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: void access$3100(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream,org.apache.jena.riot.tokens.Token,java.lang.String,java.lang.Object[])>($r28, $r29, $r36, $r37);

     label3:
        $r12 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $r13 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: org.apache.jena.riot.tokens.Token access$3200(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream)>($r12);

        $r14 = virtualinvoke $r13.<org.apache.jena.riot.tokens.Token: java.lang.String getImage()>();

        $r15 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $r16 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: org.apache.jena.riot.system.ParserProfile access$3500(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream)>($r15);

        $r17 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $l1 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: long access$3300(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream)>($r17);

        $r18 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $l2 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: long access$3400(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream)>($r18);

        $r19 = interfaceinvoke $r16.<org.apache.jena.riot.system.ParserProfile: org.apache.jena.iri.IRI makeIRI(java.lang.String,long,long)>($r14, $l1, $l2);

        $r20 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $r21 = staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: org.apache.jena.riot.system.ParserProfile access$3600(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream)>($r20);

        $r22 = interfaceinvoke $r21.<org.apache.jena.riot.system.ParserProfile: org.apache.jena.riot.system.Prologue getPrologue()>();

        $r23 = virtualinvoke $r22.<org.apache.jena.riot.system.Prologue: org.apache.jena.riot.system.PrefixMap getPrefixMap()>();

        interfaceinvoke $r23.<org.apache.jena.riot.system.PrefixMap: void add(java.lang.String,org.apache.jena.iri.IRI)>($r8, $r19);

        $r24 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: org.apache.jena.riot.tokens.Token access$3700(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream)>($r24);

        $r26 = r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream this$0>;

        $r25 = <org.apache.jena.riot.tokens.TokenType: org.apache.jena.riot.tokens.TokenType DOT>;

        staticinvoke <com.hp.hpl.jena.sparql.engine.binding.BindingInputStream: void access$3800(com.hp.hpl.jena.sparql.engine.binding.BindingInputStream,java.lang.String,org.apache.jena.riot.tokens.TokenType)>($r26, "PREFIX directive not terminated by a dot", $r25);

        return;
    }

    protected volatile java.lang.Object moveToNext()
    {
        com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples r0;
        com.hp.hpl.jena.sparql.engine.binding.Binding $r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.binding.BindingInputStream$IteratorTuples: com.hp.hpl.jena.sparql.engine.binding.Binding moveToNext()>();

        return $r1;
    }
}
