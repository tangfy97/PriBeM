class com.hp.hpl.jena.sparql.sse.ItemTransformer$TransformerApply extends java.lang.Object implements com.hp.hpl.jena.sparql.sse.ItemVisitor
{
    java.util.Deque stack;
    private com.hp.hpl.jena.sparql.sse.ItemTransform transform;

    private void push(com.hp.hpl.jena.sparql.sse.Item)
    {
        com.hp.hpl.jena.sparql.sse.Item r1;
        java.util.Deque $r2;
        com.hp.hpl.jena.sparql.sse.ItemTransformer$TransformerApply r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.ItemTransformer$TransformerApply;

        r1 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        $r2 = r0.<com.hp.hpl.jena.sparql.sse.ItemTransformer$TransformerApply: java.util.Deque stack>;

        interfaceinvoke $r2.<java.util.Deque: void push(java.lang.Object)>(r1);

        return;
    }

    private com.hp.hpl.jena.sparql.sse.Item pop()
    {
        com.hp.hpl.jena.sparql.sse.ItemTransformer$TransformerApply r0;
        java.lang.Object $r2;
        com.hp.hpl.jena.sparql.sse.Item $r3;
        java.util.Deque $r1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.ItemTransformer$TransformerApply;

        $r1 = r0.<com.hp.hpl.jena.sparql.sse.ItemTransformer$TransformerApply: java.util.Deque stack>;

        $r2 = interfaceinvoke $r1.<java.util.Deque: java.lang.Object pop()>();

        $r3 = (com.hp.hpl.jena.sparql.sse.Item) $r2;

        return $r3;
    }

    public void <init>(com.hp.hpl.jena.sparql.sse.ItemTransform)
    {
        com.hp.hpl.jena.sparql.sse.ItemTransform r2;
        java.util.ArrayDeque $r1;
        com.hp.hpl.jena.sparql.sse.ItemTransformer$TransformerApply r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.ItemTransformer$TransformerApply;

        r2 := @parameter0: com.hp.hpl.jena.sparql.sse.ItemTransform;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayDeque;

        specialinvoke $r1.<java.util.ArrayDeque: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.sse.ItemTransformer$TransformerApply: java.util.Deque stack> = $r1;

        r0.<com.hp.hpl.jena.sparql.sse.ItemTransformer$TransformerApply: com.hp.hpl.jena.sparql.sse.ItemTransform transform> = r2;

        return;
    }

    public com.hp.hpl.jena.sparql.sse.Item result()
    {
        com.hp.hpl.jena.sparql.sse.ItemTransformer$TransformerApply r0;
        java.lang.Object $r2;
        com.hp.hpl.jena.sparql.sse.Item $r3;
        java.util.Deque $r1;

        r0 := @this: com.hp.hpl.jena.sparql.sse.ItemTransformer$TransformerApply;

        $r1 = r0.<com.hp.hpl.jena.sparql.sse.ItemTransformer$TransformerApply: java.util.Deque stack>;

        $r2 = interfaceinvoke $r1.<java.util.Deque: java.lang.Object peek()>();

        $r3 = (com.hp.hpl.jena.sparql.sse.Item) $r2;

        return $r3;
    }

    public void visit(com.hp.hpl.jena.sparql.sse.Item, com.hp.hpl.jena.sparql.sse.ItemList)
    {
        com.hp.hpl.jena.sparql.sse.ItemList $r0, r2;
        java.util.Iterator $r3;
        com.hp.hpl.jena.sparql.sse.Item r1, $r4, r7, $r8;
        com.hp.hpl.jena.sparql.sse.ItemTransformer$TransformerApply r5;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r6;
        boolean $z0;

        r5 := @this: com.hp.hpl.jena.sparql.sse.ItemTransformer$TransformerApply;

        r1 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        r2 := @parameter1: com.hp.hpl.jena.sparql.sse.ItemList;

        $r0 = new com.hp.hpl.jena.sparql.sse.ItemList;

        $i0 = virtualinvoke r1.<com.hp.hpl.jena.sparql.sse.Item: int getLine()>();

        $i1 = virtualinvoke r1.<com.hp.hpl.jena.sparql.sse.Item: int getColumn()>();

        specialinvoke $r0.<com.hp.hpl.jena.sparql.sse.ItemList: void <init>(int,int)>($i0, $i1);

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.sparql.sse.ItemList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.hp.hpl.jena.sparql.sse.Item) $r6;

        virtualinvoke r7.<com.hp.hpl.jena.sparql.sse.Item: void visit(com.hp.hpl.jena.sparql.sse.ItemVisitor)>(r5);

        $r8 = specialinvoke r5.<com.hp.hpl.jena.sparql.sse.ItemTransformer$TransformerApply: com.hp.hpl.jena.sparql.sse.Item pop()>();

        virtualinvoke $r0.<com.hp.hpl.jena.sparql.sse.ItemList: void add(com.hp.hpl.jena.sparql.sse.Item)>($r8);

        goto label1;

     label2:
        $i2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.sse.Item: int getLine()>();

        $i3 = virtualinvoke r1.<com.hp.hpl.jena.sparql.sse.Item: int getColumn()>();

        $r4 = staticinvoke <com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.sparql.sse.Item createList(com.hp.hpl.jena.sparql.sse.ItemList,int,int)>($r0, $i2, $i3);

        specialinvoke r5.<com.hp.hpl.jena.sparql.sse.ItemTransformer$TransformerApply: void push(com.hp.hpl.jena.sparql.sse.Item)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.sse.Item, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.sse.ItemTransformer$TransformerApply r0;
        com.hp.hpl.jena.sparql.sse.Item r1, $r4;
        com.hp.hpl.jena.graph.Node r2;
        com.hp.hpl.jena.sparql.sse.ItemTransform $r3;

        r0 := @this: com.hp.hpl.jena.sparql.sse.ItemTransformer$TransformerApply;

        r1 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        $r3 = r0.<com.hp.hpl.jena.sparql.sse.ItemTransformer$TransformerApply: com.hp.hpl.jena.sparql.sse.ItemTransform transform>;

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.sparql.sse.ItemTransform: com.hp.hpl.jena.sparql.sse.Item transform(com.hp.hpl.jena.sparql.sse.Item,com.hp.hpl.jena.graph.Node)>(r1, r2);

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemTransformer$TransformerApply: void push(com.hp.hpl.jena.sparql.sse.Item)>($r4);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.sse.Item, java.lang.String)
    {
        com.hp.hpl.jena.sparql.sse.ItemTransformer$TransformerApply r0;
        com.hp.hpl.jena.sparql.sse.Item r1, $r4;
        java.lang.String r2;
        com.hp.hpl.jena.sparql.sse.ItemTransform $r3;

        r0 := @this: com.hp.hpl.jena.sparql.sse.ItemTransformer$TransformerApply;

        r1 := @parameter0: com.hp.hpl.jena.sparql.sse.Item;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.hp.hpl.jena.sparql.sse.ItemTransformer$TransformerApply: com.hp.hpl.jena.sparql.sse.ItemTransform transform>;

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.sparql.sse.ItemTransform: com.hp.hpl.jena.sparql.sse.Item transform(com.hp.hpl.jena.sparql.sse.Item,java.lang.String)>(r1, r2);

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemTransformer$TransformerApply: void push(com.hp.hpl.jena.sparql.sse.Item)>($r4);

        return;
    }

    public void visitNil()
    {
        com.hp.hpl.jena.sparql.sse.Item $r1;
        com.hp.hpl.jena.sparql.sse.ItemTransformer$TransformerApply r0;

        r0 := @this: com.hp.hpl.jena.sparql.sse.ItemTransformer$TransformerApply;

        $r1 = <com.hp.hpl.jena.sparql.sse.Item: com.hp.hpl.jena.sparql.sse.Item nil>;

        specialinvoke r0.<com.hp.hpl.jena.sparql.sse.ItemTransformer$TransformerApply: void push(com.hp.hpl.jena.sparql.sse.Item)>($r1);

        return;
    }
}
