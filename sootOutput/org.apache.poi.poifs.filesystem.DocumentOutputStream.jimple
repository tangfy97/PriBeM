public final class org.apache.poi.poifs.filesystem.DocumentOutputStream extends java.io.OutputStream
{
    private final java.io.OutputStream _stream;
    private final int _limit;
    private int _written;

    void <init>(java.io.OutputStream, int)
    {
        java.io.OutputStream r1;
        int i0;
        org.apache.poi.poifs.filesystem.DocumentOutputStream r0;

        r0 := @this: org.apache.poi.poifs.filesystem.DocumentOutputStream;

        r1 := @parameter0: java.io.OutputStream;

        i0 := @parameter1: int;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        r0.<org.apache.poi.poifs.filesystem.DocumentOutputStream: java.io.OutputStream _stream> = r1;

        r0.<org.apache.poi.poifs.filesystem.DocumentOutputStream: int _limit> = i0;

        r0.<org.apache.poi.poifs.filesystem.DocumentOutputStream: int _written> = 0;

        return;
    }

    public void write(int) throws java.io.IOException
    {
        int i0;
        java.io.OutputStream $r1;
        org.apache.poi.poifs.filesystem.DocumentOutputStream r0;

        r0 := @this: org.apache.poi.poifs.filesystem.DocumentOutputStream;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.poi.poifs.filesystem.DocumentOutputStream: void limitCheck(int)>(1);

        $r1 = r0.<org.apache.poi.poifs.filesystem.DocumentOutputStream: java.io.OutputStream _stream>;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(i0);

        return;
    }

    public void write(byte[]) throws java.io.IOException
    {
        int $i0;
        byte[] r1;
        org.apache.poi.poifs.filesystem.DocumentOutputStream r0;

        r0 := @this: org.apache.poi.poifs.filesystem.DocumentOutputStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<org.apache.poi.poifs.filesystem.DocumentOutputStream: void write(byte[],int,int)>(r1, 0, $i0);

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        java.io.OutputStream $r2;
        byte[] r1;
        org.apache.poi.poifs.filesystem.DocumentOutputStream r0;
        int i0, i1;

        r0 := @this: org.apache.poi.poifs.filesystem.DocumentOutputStream;

        r1 := @parameter0: byte[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        specialinvoke r0.<org.apache.poi.poifs.filesystem.DocumentOutputStream: void limitCheck(int)>(i0);

        $r2 = r0.<org.apache.poi.poifs.filesystem.DocumentOutputStream: java.io.OutputStream _stream>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>(r1, i1, i0);

        return;
    }

    public void flush() throws java.io.IOException
    {
        java.io.OutputStream $r1;
        org.apache.poi.poifs.filesystem.DocumentOutputStream r0;

        r0 := @this: org.apache.poi.poifs.filesystem.DocumentOutputStream;

        $r1 = r0.<org.apache.poi.poifs.filesystem.DocumentOutputStream: java.io.OutputStream _stream>;

        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

        return;
    }

    public void close()
    {
        org.apache.poi.poifs.filesystem.DocumentOutputStream r0;

        r0 := @this: org.apache.poi.poifs.filesystem.DocumentOutputStream;

        return;
    }

    void writeFiller(int, byte) throws java.io.IOException
    {
        java.io.OutputStream $r2;
        byte[] r1;
        org.apache.poi.poifs.filesystem.DocumentOutputStream r0;
        byte b4;
        int i0, $i1, $i2, $i3;

        r0 := @this: org.apache.poi.poifs.filesystem.DocumentOutputStream;

        i0 := @parameter0: int;

        b4 := @parameter1: byte;

        $i1 = r0.<org.apache.poi.poifs.filesystem.DocumentOutputStream: int _written>;

        if i0 <= $i1 goto label1;

        $i2 = r0.<org.apache.poi.poifs.filesystem.DocumentOutputStream: int _written>;

        $i3 = i0 - $i2;

        r1 = newarray (byte)[$i3];

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>(r1, b4);

        $r2 = r0.<org.apache.poi.poifs.filesystem.DocumentOutputStream: java.io.OutputStream _stream>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>(r1);

     label1:
        return;
    }

    private void limitCheck(int) throws java.io.IOException
    {
        org.apache.poi.poifs.filesystem.DocumentOutputStream r0;
        java.io.IOException $r1;
        int i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.apache.poi.poifs.filesystem.DocumentOutputStream;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.poi.poifs.filesystem.DocumentOutputStream: int _written>;

        $i3 = $i1 + i0;

        $i2 = r0.<org.apache.poi.poifs.filesystem.DocumentOutputStream: int _limit>;

        if $i3 <= $i2 goto label1;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("tried to write too much data");

        throw $r1;

     label1:
        $i4 = r0.<org.apache.poi.poifs.filesystem.DocumentOutputStream: int _written>;

        $i5 = $i4 + i0;

        r0.<org.apache.poi.poifs.filesystem.DocumentOutputStream: int _written> = $i5;

        return;
    }
}
