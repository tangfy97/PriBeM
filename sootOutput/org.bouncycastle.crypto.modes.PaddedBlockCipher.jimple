public class org.bouncycastle.crypto.modes.PaddedBlockCipher extends org.bouncycastle.crypto.BufferedBlockCipher
{

    public void <init>(org.bouncycastle.crypto.BlockCipher)
    {
        byte[] $r2;
        int $i0;
        org.bouncycastle.crypto.BlockCipher r1;
        org.bouncycastle.crypto.modes.PaddedBlockCipher r0;

        r0 := @this: org.bouncycastle.crypto.modes.PaddedBlockCipher;

        r1 := @parameter0: org.bouncycastle.crypto.BlockCipher;

        specialinvoke r0.<org.bouncycastle.crypto.BufferedBlockCipher: void <init>()>();

        r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: org.bouncycastle.crypto.BlockCipher cipher> = r1;

        $i0 = interfaceinvoke r1.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $r2 = newarray (byte)[$i0];

        r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: byte[] buf> = $r2;

        r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: int bufOff> = 0;

        return;
    }

    public int getOutputSize(int)
    {
        byte[] $r1, $r2, $r3;
        int i0, $i1, i2, $i3, i4, $i5, $i6, $i7, $i8, $i9;
        org.bouncycastle.crypto.modes.PaddedBlockCipher r0;
        boolean $z0;

        r0 := @this: org.bouncycastle.crypto.modes.PaddedBlockCipher;

        i0 := @parameter0: int;

        $i1 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: int bufOff>;

        i2 = i0 + $i1;

        $r1 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: byte[] buf>;

        $i3 = lengthof $r1;

        i4 = i2 % $i3;

        if i4 != 0 goto label2;

        $z0 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: boolean forEncryption>;

        if $z0 == 0 goto label1;

        $r3 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: byte[] buf>;

        $i8 = lengthof $r3;

        $i9 = i2 + $i8;

        return $i9;

     label1:
        return i2;

     label2:
        $i6 = i2 - i4;

        $r2 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: byte[] buf>;

        $i5 = lengthof $r2;

        $i7 = $i6 + $i5;

        return $i7;
    }

    public int getUpdateOutputSize(int)
    {
        byte[] $r1, $r2;
        int i0, $i1, i2, $i3, i4, $i5, $i6, $i7;
        org.bouncycastle.crypto.modes.PaddedBlockCipher r0;

        r0 := @this: org.bouncycastle.crypto.modes.PaddedBlockCipher;

        i0 := @parameter0: int;

        $i1 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: int bufOff>;

        i2 = i0 + $i1;

        $r1 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: byte[] buf>;

        $i3 = lengthof $r1;

        i4 = i2 % $i3;

        if i4 != 0 goto label1;

        $r2 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: byte[] buf>;

        $i6 = lengthof $r2;

        $i7 = i2 - $i6;

        return $i7;

     label1:
        $i5 = i2 - i4;

        return $i5;
    }

    public int processByte(byte, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        byte[] $r1, $r2, r3, $r4;
        org.bouncycastle.crypto.BlockCipher $r5;
        byte b4;
        int $i0, $i1, $i2, $i3, i5, i6;
        org.bouncycastle.crypto.modes.PaddedBlockCipher r0;

        r0 := @this: org.bouncycastle.crypto.modes.PaddedBlockCipher;

        b4 := @parameter0: byte;

        r3 := @parameter1: byte[];

        i5 := @parameter2: int;

        i6 = 0;

        $i1 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: int bufOff>;

        $r1 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: byte[] buf>;

        $i0 = lengthof $r1;

        if $i1 != $i0 goto label1;

        $r5 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r4 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: byte[] buf>;

        i6 = interfaceinvoke $r5.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r4, 0, r3, i5);

        r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: int bufOff> = 0;

     label1:
        $r2 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: byte[] buf>;

        $i2 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: int bufOff>;

        $i3 = $i2 + 1;

        r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: int bufOff> = $i3;

        $r2[$i2] = b4;

        return i6;
    }

    public int processBytes(byte[], int, int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        byte[] $r1, r2, $r3, $r4, r5, $r6, $r8;
        org.bouncycastle.crypto.DataLengthException $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18;
        org.bouncycastle.crypto.modes.PaddedBlockCipher r0;
        java.lang.IllegalArgumentException $r11;
        org.bouncycastle.crypto.BlockCipher $r7, $r9;

        r0 := @this: org.bouncycastle.crypto.modes.PaddedBlockCipher;

        r2 := @parameter0: byte[];

        i16 := @parameter1: int;

        i17 := @parameter2: int;

        r5 := @parameter3: byte[];

        i8 := @parameter4: int;

        if i17 >= 0 goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t have a negative input length!");

        throw $r11;

     label1:
        $i0 = virtualinvoke r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: int getBlockSize()>();

        $i1 = virtualinvoke r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: int getUpdateOutputSize(int)>(i17);

        if $i1 <= 0 goto label2;

        $i14 = i8 + $i1;

        $i13 = lengthof r5;

        if $i14 <= $i13 goto label2;

        $r10 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r10.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("output buffer too short");

        throw $r10;

     label2:
        i18 = 0;

        $r1 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: byte[] buf>;

        $i3 = lengthof $r1;

        $i2 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: int bufOff>;

        $i15 = $i3 - $i2;

        if i17 <= $i15 goto label4;

        $r4 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: byte[] buf>;

        $i7 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: int bufOff>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i16, $r4, $i7, $i15);

        $r7 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r6 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: byte[] buf>;

        $i9 = interfaceinvoke $r7.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r6, 0, r5, i8);

        i18 = 0 + $i9;

        r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: int bufOff> = 0;

        i17 = i17 - $i15;

        i16 = i16 + $i15;

     label3:
        $r8 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: byte[] buf>;

        $i10 = lengthof $r8;

        if i17 <= $i10 goto label4;

        $r9 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $i11 = i8 + i18;

        $i12 = interfaceinvoke $r9.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>(r2, i16, r5, $i11);

        i18 = i18 + $i12;

        i17 = i17 - $i0;

        i16 = i16 + $i0;

        goto label3;

     label4:
        $r3 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: byte[] buf>;

        $i4 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: int bufOff>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i16, $r3, $i4, i17);

        $i5 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: int bufOff>;

        $i6 = $i5 + i17;

        r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: int bufOff> = $i6;

        return i18;
    }

    public int doFinal(byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException, org.bouncycastle.crypto.InvalidCipherTextException
    {
        byte[] $r3, $r4, $r6, r8, $r9, $r10, $r12, $r13;
        org.bouncycastle.crypto.DataLengthException $r16, $r17;
        byte $b4, $b17;
        boolean $z0;
        org.bouncycastle.crypto.BlockCipher $r1, $r5, $r11, $r14;
        org.bouncycastle.crypto.InvalidCipherTextException $r18;
        short s21, $s22;
        int $i0, $i1, $i2, $i3, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i18, $i19, i20, $i23, $i24, $i25;
        org.bouncycastle.crypto.modes.PaddedBlockCipher r0;

        r0 := @this: org.bouncycastle.crypto.modes.PaddedBlockCipher;

        r8 := @parameter0: byte[];

        i5 := @parameter1: int;

        $r1 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $i0 = interfaceinvoke $r1.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        i18 = 0;

        $z0 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: boolean forEncryption>;

        if $z0 == 0 goto label05;

        $i6 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: int bufOff>;

        if $i6 != $i0 goto label02;

        $i14 = 2 * $i0;

        $i16 = i5 + $i14;

        $i15 = lengthof r8;

        if $i16 <= $i15 goto label01;

        $r16 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r16.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("output buffer too short");

        throw $r16;

     label01:
        $r14 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r13 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: byte[] buf>;

        i18 = interfaceinvoke $r14.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r13, 0, r8, i5);

        r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: int bufOff> = 0;

     label02:
        $i7 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: int bufOff>;

        $i8 = $i0 - $i7;

        $b17 = (byte) $i8;

     label03:
        $i19 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: int bufOff>;

        if $i19 >= $i0 goto label04;

        $r12 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: byte[] buf>;

        $i11 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: int bufOff>;

        $r12[$i11] = $b17;

        $i12 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: int bufOff>;

        $i13 = $i12 + 1;

        r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: int bufOff> = $i13;

        goto label03;

     label04:
        $r11 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r10 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: byte[] buf>;

        $i9 = i5 + i18;

        $i10 = interfaceinvoke $r11.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r10, 0, r8, $i9);

        i20 = i18 + $i10;

        goto label10;

     label05:
        $i1 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: int bufOff>;

        if $i1 != $i0 goto label06;

        $r5 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r4 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: byte[] buf>;

        $r3 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: byte[] buf>;

        $i2 = interfaceinvoke $r5.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r4, 0, $r3, 0);

        r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: int bufOff> = 0;

        goto label07;

     label06:
        $r17 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r17.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("last block incomplete in decryption");

        throw $r17;

     label07:
        $r6 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: byte[] buf>;

        $i3 = $i0 - 1;

        $b4 = $r6[$i3];

        $s22 = (short) $b4;

        s21 = $s22 & 255;

        $i23 = (int) s21;

        if $i23 < 0 goto label08;

        $i24 = (int) s21;

        if $i24 <= $i0 goto label09;

     label08:
        $r18 = new org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r18.<org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("pad block corrupted");

        throw $r18;

     label09:
        $i25 = (int) s21;

        i20 = $i2 - $i25;

        $r9 = r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: byte[] buf>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r8, i5, i20);

     label10:
        virtualinvoke r0.<org.bouncycastle.crypto.modes.PaddedBlockCipher: void reset()>();

        return i20;
    }
}
