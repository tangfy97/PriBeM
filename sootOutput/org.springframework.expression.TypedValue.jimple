public class org.springframework.expression.TypedValue extends java.lang.Object
{
    public static final org.springframework.expression.TypedValue NULL;
    private final java.lang.Object value;
    private org.springframework.core.convert.TypeDescriptor typeDescriptor;

    static void <clinit>()
    {
        org.springframework.expression.TypedValue $r0;
        org.springframework.core.convert.TypeDescriptor $r1;

        $r0 = new org.springframework.expression.TypedValue;

        $r1 = <org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor NULL>;

        specialinvoke $r0.<org.springframework.expression.TypedValue: void <init>(java.lang.Object,org.springframework.core.convert.TypeDescriptor)>(null, $r1);

        <org.springframework.expression.TypedValue: org.springframework.expression.TypedValue NULL> = $r0;

        return;
    }

    public void <init>(java.lang.Object)
    {
        java.lang.Object r1;
        org.springframework.expression.TypedValue r0;

        r0 := @this: org.springframework.expression.TypedValue;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.expression.TypedValue: java.lang.Object value> = r1;

        r0.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor typeDescriptor> = null;

        return;
    }

    public void <init>(java.lang.Object, org.springframework.core.convert.TypeDescriptor)
    {
        java.lang.Object r1;
        org.springframework.expression.TypedValue r0;
        org.springframework.core.convert.TypeDescriptor r2;

        r0 := @this: org.springframework.expression.TypedValue;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.springframework.core.convert.TypeDescriptor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.expression.TypedValue: java.lang.Object value> = r1;

        r0.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor typeDescriptor> = r2;

        return;
    }

    public java.lang.Object getValue()
    {
        java.lang.Object $r1;
        org.springframework.expression.TypedValue r0;

        r0 := @this: org.springframework.expression.TypedValue;

        $r1 = r0.<org.springframework.expression.TypedValue: java.lang.Object value>;

        return $r1;
    }

    public org.springframework.core.convert.TypeDescriptor getTypeDescriptor()
    {
        org.springframework.core.convert.TypeDescriptor $r1, $r2, $r4;
        java.lang.Object $r3;
        org.springframework.expression.TypedValue r0;

        r0 := @this: org.springframework.expression.TypedValue;

        $r1 = r0.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor typeDescriptor>;

        if $r1 != null goto label1;

        $r3 = r0.<org.springframework.expression.TypedValue: java.lang.Object value>;

        $r4 = staticinvoke <org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor forObject(java.lang.Object)>($r3);

        r0.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor typeDescriptor> = $r4;

     label1:
        $r2 = r0.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor typeDescriptor>;

        return $r2;
    }

    public java.lang.String toString()
    {
        org.springframework.core.convert.TypeDescriptor $r7;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r6, $r8, $r9;
        java.lang.Object $r3;
        java.lang.String $r10, $r11;
        org.springframework.expression.TypedValue r2;

        r2 := @this: org.springframework.expression.TypedValue;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TypedValue: \'");

        $r3 = r2.<org.springframework.expression.TypedValue: java.lang.Object value>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' of [");

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r2.<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r11 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }
}
