final class org.springframework.aop.framework.Cglib2AopProxy extends java.lang.Object implements org.springframework.aop.framework.AopProxy, java.io.Serializable
{
    private static final int AOP_PROXY;
    private static final int INVOKE_TARGET;
    private static final int NO_OVERRIDE;
    private static final int DISPATCH_TARGET;
    private static final int DISPATCH_ADVISED;
    private static final int INVOKE_EQUALS;
    private static final int INVOKE_HASHCODE;
    protected static final org.apache.commons.logging.Log logger;
    private static final java.util.Map validatedClasses;
    protected final org.springframework.aop.framework.AdvisedSupport advised;
    private java.lang.Object[] constructorArgs;
    private java.lang.Class[] constructorArgTypes;
    private final transient org.springframework.aop.framework.Cglib2AopProxy$AdvisedDispatcher advisedDispatcher;
    private transient java.util.Map fixedInterceptorMap;
    private transient int fixedInterceptorOffset;

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;
        java.util.WeakHashMap $r1;

        <org.springframework.aop.framework.Cglib2AopProxy: int INVOKE_HASHCODE> = 6;

        <org.springframework.aop.framework.Cglib2AopProxy: int INVOKE_EQUALS> = 5;

        <org.springframework.aop.framework.Cglib2AopProxy: int DISPATCH_ADVISED> = 4;

        <org.springframework.aop.framework.Cglib2AopProxy: int DISPATCH_TARGET> = 3;

        <org.springframework.aop.framework.Cglib2AopProxy: int NO_OVERRIDE> = 2;

        <org.springframework.aop.framework.Cglib2AopProxy: int INVOKE_TARGET> = 1;

        <org.springframework.aop.framework.Cglib2AopProxy: int AOP_PROXY> = 0;

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/springframework/aop/framework/Cglib2AopProxy;");

        <org.springframework.aop.framework.Cglib2AopProxy: org.apache.commons.logging.Log logger> = $r0;

        $r1 = new java.util.WeakHashMap;

        specialinvoke $r1.<java.util.WeakHashMap: void <init>()>();

        <org.springframework.aop.framework.Cglib2AopProxy: java.util.Map validatedClasses> = $r1;

        return;
    }

    public void <init>(org.springframework.aop.framework.AdvisedSupport) throws org.springframework.aop.framework.AopConfigException
    {
        org.springframework.aop.TargetSource $r5, $r6;
        org.springframework.aop.Advisor[] $r2;
        org.springframework.aop.framework.AopConfigException $r7;
        org.springframework.aop.framework.Cglib2AopProxy r0;
        org.springframework.aop.framework.Cglib2AopProxy$AdvisedDispatcher $r3;
        int $i0;
        org.springframework.aop.framework.AdvisedSupport r1, $r4;

        r0 := @this: org.springframework.aop.framework.Cglib2AopProxy;

        r1 := @parameter0: org.springframework.aop.framework.AdvisedSupport;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "AdvisedSupport must not be null");

        $r2 = virtualinvoke r1.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.Advisor[] getAdvisors()>();

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $r5 = virtualinvoke r1.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.TargetSource getTargetSource()>();

        $r6 = <org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.TargetSource EMPTY_TARGET_SOURCE>;

        if $r5 != $r6 goto label1;

        $r7 = new org.springframework.aop.framework.AopConfigException;

        specialinvoke $r7.<org.springframework.aop.framework.AopConfigException: void <init>(java.lang.String)>("No advisors and no TargetSource specified");

        throw $r7;

     label1:
        r0.<org.springframework.aop.framework.Cglib2AopProxy: org.springframework.aop.framework.AdvisedSupport advised> = r1;

        $r3 = new org.springframework.aop.framework.Cglib2AopProxy$AdvisedDispatcher;

        $r4 = r0.<org.springframework.aop.framework.Cglib2AopProxy: org.springframework.aop.framework.AdvisedSupport advised>;

        specialinvoke $r3.<org.springframework.aop.framework.Cglib2AopProxy$AdvisedDispatcher: void <init>(org.springframework.aop.framework.AdvisedSupport)>($r4);

        r0.<org.springframework.aop.framework.Cglib2AopProxy: org.springframework.aop.framework.Cglib2AopProxy$AdvisedDispatcher advisedDispatcher> = $r3;

        return;
    }

    public void setConstructorArguments(java.lang.Object[], java.lang.Class[])
    {
        java.lang.Object[] r0;
        java.lang.Class[] r2;
        java.lang.IllegalArgumentException $r1, $r4;
        org.springframework.aop.framework.Cglib2AopProxy r3;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;
        java.lang.String $r10;

        r3 := @this: org.springframework.aop.framework.Cglib2AopProxy;

        r0 := @parameter0: java.lang.Object[];

        r2 := @parameter1: java.lang.Class[];

        if r0 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Both \'constructorArgs\' and \'constructorArgTypes\' need to be specified");

        throw $r1;

     label2:
        $i1 = lengthof r0;

        $i0 = lengthof r2;

        if $i1 == $i0 goto label3;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Number of \'constructorArgs\' (");

        $i2 = lengthof r0;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") must match number of \'constructorArgTypes\' (");

        $i3 = lengthof r2;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r4;

     label3:
        r3.<org.springframework.aop.framework.Cglib2AopProxy: java.lang.Object[] constructorArgs> = r0;

        r3.<org.springframework.aop.framework.Cglib2AopProxy: java.lang.Class[] constructorArgTypes> = r2;

        return;
    }

    public java.lang.Object getProxy()
    {
        java.lang.Object $r1;
        org.springframework.aop.framework.Cglib2AopProxy r0;

        r0 := @this: org.springframework.aop.framework.Cglib2AopProxy;

        $r1 = virtualinvoke r0.<org.springframework.aop.framework.Cglib2AopProxy: java.lang.Object getProxy(java.lang.ClassLoader)>(null);

        return $r1;
    }

    public java.lang.Object getProxy(java.lang.ClassLoader)
    {
        java.util.Map $r49;
        java.lang.Exception $r20;
        java.lang.StringBuilder $r18, $r27, $r28, $r29, $r36, $r37, $r38, $r52, $r55, $r57;
        java.lang.ClassLoader r5;
        java.lang.Throwable $r31;
        java.lang.Object[] $r8, $r9;
        net.sf.cglib.core.GeneratorStrategy $r60;
        java.lang.String $r19, $r30, $r39;
        net.sf.cglib.transform.impl.UndeclaredThrowableStrategy $r53;
        java.lang.Class[] $r10, $r12, $r44, $r50;
        org.springframework.aop.framework.Cglib2AopProxy r1;
        org.springframework.aop.TargetSource $r17;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.springframework.aop.framework.AdvisedSupport $r2, $r13, $r16, $r25, $r34, $r43, $r47, $r48;
        net.sf.cglib.proxy.Callback $r6;
        org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter $r54;
        org.springframework.core.SmartClassLoader $r11;
        net.sf.cglib.proxy.Callback[] $r45;
        org.springframework.aop.framework.AopConfigException $r56, $r58, $r59;
        int $i0, i1, i2, $i3, $i4, i5;
        net.sf.cglib.proxy.Enhancer $r4;
        java.lang.IllegalArgumentException $r22;
        org.apache.commons.logging.Log $r0, $r15;
        java.lang.Class $r3, $r7, $r26, $r35, r40, r41;
        java.lang.Object r51;

        r1 := @this: org.springframework.aop.framework.Cglib2AopProxy;

        r5 := @parameter0: java.lang.ClassLoader;

        $r0 = <org.springframework.aop.framework.Cglib2AopProxy: org.apache.commons.logging.Log logger>;

        $z0 = interfaceinvoke $r0.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label01;

        $r15 = <org.springframework.aop.framework.Cglib2AopProxy: org.apache.commons.logging.Log logger>;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>(java.lang.String)>("Creating CGLIB2 proxy: target source is ");

        $r16 = r1.<org.springframework.aop.framework.Cglib2AopProxy: org.springframework.aop.framework.AdvisedSupport advised>;

        $r17 = virtualinvoke $r16.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.TargetSource getTargetSource()>();

        $r18 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r19);

     label01:
        $r2 = r1.<org.springframework.aop.framework.Cglib2AopProxy: org.springframework.aop.framework.AdvisedSupport advised>;

        $r3 = virtualinvoke $r2.<org.springframework.aop.framework.AdvisedSupport: java.lang.Class getTargetClass()>();

        if $r3 == null goto label02;

        $z4 = 1;

        goto label03;

     label02:
        $z4 = 0;

     label03:
        staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z4, "Target class must be available for creating a CGLIB proxy");

        r40 = $r3;

        $z1 = staticinvoke <org.springframework.aop.support.AopUtils: boolean isCglibProxyClass(java.lang.Class)>($r3);

        if $z1 == 0 goto label06;

        r40 = virtualinvoke $r3.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r12 = virtualinvoke $r3.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        i1 = lengthof $r12;

        i2 = 0;

        goto label05;

     label04:
        r41 = $r12[i2];

        $r13 = r1.<org.springframework.aop.framework.Cglib2AopProxy: org.springframework.aop.framework.AdvisedSupport advised>;

        virtualinvoke $r13.<org.springframework.aop.framework.AdvisedSupport: void addInterface(java.lang.Class)>(r41);

        i2 = i2 + 1;

     label05:
        if i2 < i1 goto label04;

     label06:
        specialinvoke r1.<org.springframework.aop.framework.Cglib2AopProxy: void validateClassIfNecessary(java.lang.Class)>(r40);

        $r4 = virtualinvoke r1.<org.springframework.aop.framework.Cglib2AopProxy: net.sf.cglib.proxy.Enhancer createEnhancer()>();

        if r5 == null goto label07;

        virtualinvoke $r4.<net.sf.cglib.proxy.Enhancer: void setClassLoader(java.lang.ClassLoader)>(r5);

        $z2 = r5 instanceof org.springframework.core.SmartClassLoader;

        if $z2 == 0 goto label07;

        $r11 = (org.springframework.core.SmartClassLoader) r5;

        $z3 = interfaceinvoke $r11.<org.springframework.core.SmartClassLoader: boolean isClassReloadable(java.lang.Class)>(r40);

        if $z3 == 0 goto label07;

        virtualinvoke $r4.<net.sf.cglib.proxy.Enhancer: void setUseCache(boolean)>(0);

     label07:
        virtualinvoke $r4.<net.sf.cglib.proxy.Enhancer: void setSuperclass(java.lang.Class)>(r40);

        $r53 = new net.sf.cglib.transform.impl.UndeclaredThrowableStrategy;

        specialinvoke $r53.<net.sf.cglib.transform.impl.UndeclaredThrowableStrategy: void <init>(java.lang.Class)>(class "Ljava/lang/reflect/UndeclaredThrowableException;");

        $r60 = (net.sf.cglib.core.GeneratorStrategy) $r53;

        virtualinvoke $r4.<net.sf.cglib.proxy.Enhancer: void setStrategy(net.sf.cglib.core.GeneratorStrategy)>($r60);

        $r43 = r1.<org.springframework.aop.framework.Cglib2AopProxy: org.springframework.aop.framework.AdvisedSupport advised>;

        $r44 = staticinvoke <org.springframework.aop.framework.AopProxyUtils: java.lang.Class[] completeProxiedInterfaces(org.springframework.aop.framework.AdvisedSupport)>($r43);

        virtualinvoke $r4.<net.sf.cglib.proxy.Enhancer: void setInterfaces(java.lang.Class[])>($r44);

        virtualinvoke $r4.<net.sf.cglib.proxy.Enhancer: void setInterceptDuringConstruction(boolean)>(0);

        $r45 = specialinvoke r1.<org.springframework.aop.framework.Cglib2AopProxy: net.sf.cglib.proxy.Callback[] getCallbacks(java.lang.Class)>($r3);

        virtualinvoke $r4.<net.sf.cglib.proxy.Enhancer: void setCallbacks(net.sf.cglib.proxy.Callback[])>($r45);

        $r54 = new org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter;

        $r47 = r1.<org.springframework.aop.framework.Cglib2AopProxy: org.springframework.aop.framework.AdvisedSupport advised>;

        $r48 = virtualinvoke $r47.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.framework.AdvisedSupport getConfigurationOnlyCopy()>();

        $r49 = r1.<org.springframework.aop.framework.Cglib2AopProxy: java.util.Map fixedInterceptorMap>;

        $i3 = r1.<org.springframework.aop.framework.Cglib2AopProxy: int fixedInterceptorOffset>;

        specialinvoke $r54.<org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter: void <init>(org.springframework.aop.framework.AdvisedSupport,java.util.Map,int)>($r48, $r49, $i3);

        virtualinvoke $r4.<net.sf.cglib.proxy.Enhancer: void setCallbackFilter(net.sf.cglib.proxy.CallbackFilter)>($r54);

        $i4 = lengthof $r45;

        $r50 = newarray (java.lang.Class)[$i4];

        i5 = 0;

        goto label09;

     label08:
        $r6 = $r45[i5];

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $r50[i5] = $r7;

        i5 = i5 + 1;

     label09:
        $i0 = lengthof $r50;

        if i5 < $i0 goto label08;

        virtualinvoke $r4.<net.sf.cglib.proxy.Enhancer: void setCallbackTypes(java.lang.Class[])>($r50);

        $r8 = r1.<org.springframework.aop.framework.Cglib2AopProxy: java.lang.Object[] constructorArgs>;

        if $r8 == null goto label10;

        $r10 = r1.<org.springframework.aop.framework.Cglib2AopProxy: java.lang.Class[] constructorArgTypes>;

        $r9 = r1.<org.springframework.aop.framework.Cglib2AopProxy: java.lang.Object[] constructorArgs>;

        r51 = virtualinvoke $r4.<net.sf.cglib.proxy.Enhancer: java.lang.Object create(java.lang.Class[],java.lang.Object[])>($r10, $r9);

        goto label11;

     label10:
        r51 = virtualinvoke $r4.<net.sf.cglib.proxy.Enhancer: java.lang.Object create()>();

     label11:
        return r51;

     label12:
        $r31 := @caughtexception;

        $r56 = new org.springframework.aop.framework.AopConfigException;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not generate CGLIB subclass of class [");

        $r34 = r1.<org.springframework.aop.framework.Cglib2AopProxy: org.springframework.aop.framework.AdvisedSupport advised>;

        $r35 = virtualinvoke $r34.<org.springframework.aop.framework.AdvisedSupport: java.lang.Class getTargetClass()>();

        $r36 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Common causes of this problem include using a final class or a non-visible class");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r56.<org.springframework.aop.framework.AopConfigException: void <init>(java.lang.String,java.lang.Throwable)>($r39, $r31);

        throw $r56;

     label13:
        $r22 := @caughtexception;

        $r58 = new org.springframework.aop.framework.AopConfigException;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not generate CGLIB subclass of class [");

        $r25 = r1.<org.springframework.aop.framework.Cglib2AopProxy: org.springframework.aop.framework.AdvisedSupport advised>;

        $r26 = virtualinvoke $r25.<org.springframework.aop.framework.AdvisedSupport: java.lang.Class getTargetClass()>();

        $r27 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Common causes of this problem include using a final class or a non-visible class");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r58.<org.springframework.aop.framework.AopConfigException: void <init>(java.lang.String,java.lang.Throwable)>($r30, $r22);

        throw $r58;

     label14:
        $r20 := @caughtexception;

        $r59 = new org.springframework.aop.framework.AopConfigException;

        specialinvoke $r59.<org.springframework.aop.framework.AopConfigException: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected AOP exception", $r20);

        throw $r59;

        catch net.sf.cglib.core.CodeGenerationException from label01 to label11 with label12;
        catch java.lang.IllegalArgumentException from label01 to label11 with label13;
        catch java.lang.Exception from label01 to label11 with label14;
    }

    protected net.sf.cglib.proxy.Enhancer createEnhancer()
    {
        net.sf.cglib.proxy.Enhancer $r0;
        org.springframework.aop.framework.Cglib2AopProxy r1;

        r1 := @this: org.springframework.aop.framework.Cglib2AopProxy;

        $r0 = new net.sf.cglib.proxy.Enhancer;

        specialinvoke $r0.<net.sf.cglib.proxy.Enhancer: void <init>()>();

        return $r0;
    }

    private void validateClassIfNecessary(java.lang.Class)
    {
        java.lang.Throwable $r7;
        org.springframework.aop.framework.Cglib2AopProxy r4;
        java.util.Map $r1, $r3, $r6;
        java.lang.Boolean $r5;
        org.apache.commons.logging.Log $r0;
        java.lang.Class r2;
        boolean $z0, $z1;

        r4 := @this: org.springframework.aop.framework.Cglib2AopProxy;

        r2 := @parameter0: java.lang.Class;

        $r0 = <org.springframework.aop.framework.Cglib2AopProxy: org.apache.commons.logging.Log logger>;

        $z0 = interfaceinvoke $r0.<org.apache.commons.logging.Log: boolean isWarnEnabled()>();

        if $z0 == 0 goto label6;

        $r1 = <org.springframework.aop.framework.Cglib2AopProxy: java.util.Map validatedClasses>;

        entermonitor $r1;

     label1:
        $r3 = <org.springframework.aop.framework.Cglib2AopProxy: java.util.Map validatedClasses>;

        $z1 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);

        if $z1 != 0 goto label2;

        specialinvoke r4.<org.springframework.aop.framework.Cglib2AopProxy: void doValidateClass(java.lang.Class)>(r2);

        $r6 = <org.springframework.aop.framework.Cglib2AopProxy: java.util.Map validatedClasses>;

        $r5 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r5);

     label2:
        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void doValidateClass(java.lang.Class)
    {
        java.lang.reflect.Method[] $r1;
        int i0, $i1, i2;
        java.lang.String $r10;
        java.lang.reflect.Method r2;
        boolean $z0, $z1;
        org.springframework.aop.framework.Cglib2AopProxy r11;
        java.lang.Class r0, $r3, $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r9;
        org.apache.commons.logging.Log $r6;

        r11 := @this: org.springframework.aop.framework.Cglib2AopProxy;

        r0 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        i0 = lengthof $r1;

        i2 = 0;

        goto label3;

     label1:
        r2 = $r1[i2];

        $r3 = class "Ljava/lang/Object;";

        $r4 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label2;

        $i1 = virtualinvoke r2.<java.lang.reflect.Method: int getModifiers()>();

        $z1 = staticinvoke <java.lang.reflect.Modifier: boolean isFinal(int)>($i1);

        if $z1 == 0 goto label2;

        $r6 = <org.springframework.aop.framework.Cglib2AopProxy: org.apache.commons.logging.Log logger>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unable to proxy method [");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] because it is final: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("All calls to this method via a proxy will be routed directly to the proxy.");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r10);

     label2:
        i2 = i2 + 1;

     label3:
        if i2 < i0 goto label1;

        return;
    }

    private net.sf.cglib.proxy.Callback[] getCallbacks(java.lang.Class) throws java.lang.Exception
    {
        org.springframework.aop.framework.Cglib2AopProxy$FixedChainStaticTargetInterceptor $r60;
        java.lang.Integer $r32;
        org.springframework.aop.framework.Cglib2AopProxy$StaticDispatcher $r54;
        java.util.Map $r30;
        java.io.Serializable $r44, r45, $r46, $r47;
        org.springframework.aop.framework.Cglib2AopProxy$StaticUnadvisedInterceptor $r52;
        java.lang.Object[] $r9, r18, r48;
        java.lang.String $r31;
        org.springframework.aop.framework.Cglib2AopProxy r0;
        org.springframework.aop.framework.Cglib2AopProxy$AdvisedDispatcher $r11;
        org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor $r49;
        org.springframework.aop.TargetSource $r4, $r8, $r25, $r34, $r37, $r40, $r42;
        org.springframework.aop.framework.Cglib2AopProxy$EqualsInterceptor $r57;
        java.lang.reflect.Method[] $r17;
        java.lang.reflect.Method $r20, $r29;
        org.springframework.aop.framework.AdvisedSupport $r1, $r2, $r3, $r6, $r7, $r13, $r15, $r21, $r24, $r27, $r33, $r36, $r39, $r41;
        boolean $z0, $z1, $z2;
        org.springframework.aop.framework.Cglib2AopProxy$HashCodeInterceptor $r58;
        java.util.List $r22;
        net.sf.cglib.proxy.Callback[] $r61;
        org.springframework.aop.framework.Cglib2AopProxy$DynamicUnadvisedInterceptor $r53;
        java.util.HashMap $r59;
        org.springframework.aop.framework.Cglib2AopProxy$StaticUnadvisedExposedInterceptor $r50;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        org.springframework.aop.framework.Cglib2AopProxy$DynamicUnadvisedExposedInterceptor $r51;
        org.springframework.aop.framework.Cglib2AopProxy$SerializableNoOp $r55, $r56;
        java.lang.Class r16, $r28;
        java.lang.Object $r26, $r35, $r38, $r43;

        r0 := @this: org.springframework.aop.framework.Cglib2AopProxy;

        r16 := @parameter0: java.lang.Class;

        $r1 = r0.<org.springframework.aop.framework.Cglib2AopProxy: org.springframework.aop.framework.AdvisedSupport advised>;

        $z0 = virtualinvoke $r1.<org.springframework.aop.framework.AdvisedSupport: boolean isExposeProxy()>();

        $r2 = r0.<org.springframework.aop.framework.Cglib2AopProxy: org.springframework.aop.framework.AdvisedSupport advised>;

        $z1 = virtualinvoke $r2.<org.springframework.aop.framework.AdvisedSupport: boolean isFrozen()>();

        $r3 = r0.<org.springframework.aop.framework.Cglib2AopProxy: org.springframework.aop.framework.AdvisedSupport advised>;

        $r4 = virtualinvoke $r3.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.TargetSource getTargetSource()>();

        $z2 = interfaceinvoke $r4.<org.springframework.aop.TargetSource: boolean isStatic()>();

        $r49 = new org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor;

        $r6 = r0.<org.springframework.aop.framework.Cglib2AopProxy: org.springframework.aop.framework.AdvisedSupport advised>;

        specialinvoke $r49.<org.springframework.aop.framework.Cglib2AopProxy$DynamicAdvisedInterceptor: void <init>(org.springframework.aop.framework.AdvisedSupport)>($r6);

        if $z0 == 0 goto label03;

        if $z2 == 0 goto label01;

        $r50 = new org.springframework.aop.framework.Cglib2AopProxy$StaticUnadvisedExposedInterceptor;

        $r44 = $r50;

        $r41 = r0.<org.springframework.aop.framework.Cglib2AopProxy: org.springframework.aop.framework.AdvisedSupport advised>;

        $r42 = virtualinvoke $r41.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.TargetSource getTargetSource()>();

        $r43 = interfaceinvoke $r42.<org.springframework.aop.TargetSource: java.lang.Object getTarget()>();

        specialinvoke $r50.<org.springframework.aop.framework.Cglib2AopProxy$StaticUnadvisedExposedInterceptor: void <init>(java.lang.Object)>($r43);

        goto label02;

     label01:
        $r51 = new org.springframework.aop.framework.Cglib2AopProxy$DynamicUnadvisedExposedInterceptor;

        $r44 = $r51;

        $r39 = r0.<org.springframework.aop.framework.Cglib2AopProxy: org.springframework.aop.framework.AdvisedSupport advised>;

        $r40 = virtualinvoke $r39.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.TargetSource getTargetSource()>();

        specialinvoke $r51.<org.springframework.aop.framework.Cglib2AopProxy$DynamicUnadvisedExposedInterceptor: void <init>(org.springframework.aop.TargetSource)>($r40);

     label02:
        r45 = $r44;

        goto label06;

     label03:
        if $z2 == 0 goto label04;

        $r52 = new org.springframework.aop.framework.Cglib2AopProxy$StaticUnadvisedInterceptor;

        $r46 = $r52;

        $r36 = r0.<org.springframework.aop.framework.Cglib2AopProxy: org.springframework.aop.framework.AdvisedSupport advised>;

        $r37 = virtualinvoke $r36.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.TargetSource getTargetSource()>();

        $r38 = interfaceinvoke $r37.<org.springframework.aop.TargetSource: java.lang.Object getTarget()>();

        specialinvoke $r52.<org.springframework.aop.framework.Cglib2AopProxy$StaticUnadvisedInterceptor: void <init>(java.lang.Object)>($r38);

        goto label05;

     label04:
        $r53 = new org.springframework.aop.framework.Cglib2AopProxy$DynamicUnadvisedInterceptor;

        $r46 = $r53;

        $r7 = r0.<org.springframework.aop.framework.Cglib2AopProxy: org.springframework.aop.framework.AdvisedSupport advised>;

        $r8 = virtualinvoke $r7.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.TargetSource getTargetSource()>();

        specialinvoke $r53.<org.springframework.aop.framework.Cglib2AopProxy$DynamicUnadvisedInterceptor: void <init>(org.springframework.aop.TargetSource)>($r8);

     label05:
        r45 = $r46;

     label06:
        if $z2 == 0 goto label07;

        $r54 = new org.springframework.aop.framework.Cglib2AopProxy$StaticDispatcher;

        $r47 = $r54;

        $r33 = r0.<org.springframework.aop.framework.Cglib2AopProxy: org.springframework.aop.framework.AdvisedSupport advised>;

        $r34 = virtualinvoke $r33.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.TargetSource getTargetSource()>();

        $r35 = interfaceinvoke $r34.<org.springframework.aop.TargetSource: java.lang.Object getTarget()>();

        specialinvoke $r54.<org.springframework.aop.framework.Cglib2AopProxy$StaticDispatcher: void <init>(java.lang.Object)>($r35);

        goto label08;

     label07:
        $r55 = new org.springframework.aop.framework.Cglib2AopProxy$SerializableNoOp;

        $r47 = $r55;

        specialinvoke $r55.<org.springframework.aop.framework.Cglib2AopProxy$SerializableNoOp: void <init>()>();

     label08:
        $r9 = newarray (net.sf.cglib.proxy.Callback)[7];

        $r9[0] = $r49;

        $r9[1] = r45;

        $r56 = new org.springframework.aop.framework.Cglib2AopProxy$SerializableNoOp;

        specialinvoke $r56.<org.springframework.aop.framework.Cglib2AopProxy$SerializableNoOp: void <init>()>();

        $r9[2] = $r56;

        $r9[3] = $r47;

        $r11 = r0.<org.springframework.aop.framework.Cglib2AopProxy: org.springframework.aop.framework.Cglib2AopProxy$AdvisedDispatcher advisedDispatcher>;

        $r9[4] = $r11;

        $r57 = new org.springframework.aop.framework.Cglib2AopProxy$EqualsInterceptor;

        $r13 = r0.<org.springframework.aop.framework.Cglib2AopProxy: org.springframework.aop.framework.AdvisedSupport advised>;

        specialinvoke $r57.<org.springframework.aop.framework.Cglib2AopProxy$EqualsInterceptor: void <init>(org.springframework.aop.framework.AdvisedSupport)>($r13);

        $r9[5] = $r57;

        $r58 = new org.springframework.aop.framework.Cglib2AopProxy$HashCodeInterceptor;

        $r15 = r0.<org.springframework.aop.framework.Cglib2AopProxy: org.springframework.aop.framework.AdvisedSupport advised>;

        specialinvoke $r58.<org.springframework.aop.framework.Cglib2AopProxy$HashCodeInterceptor: void <init>(org.springframework.aop.framework.AdvisedSupport)>($r15);

        $r9[6] = $r58;

        if $z2 == 0 goto label11;

        if $z1 == 0 goto label11;

        $r17 = virtualinvoke r16.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        $i0 = lengthof $r17;

        r18 = newarray (net.sf.cglib.proxy.Callback)[$i0];

        $r59 = new java.util.HashMap;

        $i1 = lengthof $r17;

        specialinvoke $r59.<java.util.HashMap: void <init>(int)>($i1);

        r0.<org.springframework.aop.framework.Cglib2AopProxy: java.util.Map fixedInterceptorMap> = $r59;

        i10 = 0;

        goto label10;

     label09:
        $r21 = r0.<org.springframework.aop.framework.Cglib2AopProxy: org.springframework.aop.framework.AdvisedSupport advised>;

        $r20 = $r17[i10];

        $r22 = virtualinvoke $r21.<org.springframework.aop.framework.AdvisedSupport: java.util.List getInterceptorsAndDynamicInterceptionAdvice(java.lang.reflect.Method,java.lang.Class)>($r20, r16);

        $r60 = new org.springframework.aop.framework.Cglib2AopProxy$FixedChainStaticTargetInterceptor;

        $r24 = r0.<org.springframework.aop.framework.Cglib2AopProxy: org.springframework.aop.framework.AdvisedSupport advised>;

        $r25 = virtualinvoke $r24.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.TargetSource getTargetSource()>();

        $r26 = interfaceinvoke $r25.<org.springframework.aop.TargetSource: java.lang.Object getTarget()>();

        $r27 = r0.<org.springframework.aop.framework.Cglib2AopProxy: org.springframework.aop.framework.AdvisedSupport advised>;

        $r28 = virtualinvoke $r27.<org.springframework.aop.framework.AdvisedSupport: java.lang.Class getTargetClass()>();

        specialinvoke $r60.<org.springframework.aop.framework.Cglib2AopProxy$FixedChainStaticTargetInterceptor: void <init>(java.util.List,java.lang.Object,java.lang.Class)>($r22, $r26, $r28);

        r18[i10] = $r60;

        $r30 = r0.<org.springframework.aop.framework.Cglib2AopProxy: java.util.Map fixedInterceptorMap>;

        $r29 = $r17[i10];

        $r31 = virtualinvoke $r29.<java.lang.reflect.Method: java.lang.String toString()>();

        $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i10);

        interfaceinvoke $r30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r31, $r32);

        i10 = i10 + 1;

     label10:
        $i2 = lengthof $r17;

        if i10 < $i2 goto label09;

        $i4 = lengthof $r9;

        $i3 = lengthof r18;

        $i5 = $i4 + $i3;

        r48 = newarray (net.sf.cglib.proxy.Callback)[$i5];

        $i6 = lengthof $r9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r48, 0, $i6);

        $i8 = lengthof $r9;

        $i7 = lengthof r18;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r18, 0, r48, $i8, $i7);

        $i9 = lengthof $r9;

        r0.<org.springframework.aop.framework.Cglib2AopProxy: int fixedInterceptorOffset> = $i9;

        goto label12;

     label11:
        r48 = $r9;

     label12:
        $r61 = (net.sf.cglib.proxy.Callback[]) r48;

        return $r61;
    }

    private static java.lang.Object massageReturnTypeIfNecessary(java.lang.Object, java.lang.Object, java.lang.reflect.Method, java.lang.Object)
    {
        java.lang.Object r0, r4, r5;
        java.lang.Class $r2, $r3;
        java.lang.reflect.Method r1;
        boolean $z0;

        r4 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.Object;

        r1 := @parameter2: java.lang.reflect.Method;

        r5 := @parameter3: java.lang.Object;

        if r5 == null goto label1;

        if r5 != r0 goto label1;

        $r2 = class "Lorg/springframework/aop/RawTargetAccess;";

        $r3 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r3);

        if $z0 != 0 goto label1;

        r5 = r4;

     label1:
        return r5;
    }

    public boolean equals(java.lang.Object)
    {
        org.springframework.aop.framework.Cglib2AopProxy r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        org.springframework.aop.framework.AdvisedSupport $r3, $r4;

        r0 := @this: org.springframework.aop.framework.Cglib2AopProxy;

        r1 := @parameter0: java.lang.Object;

        if r0 == r1 goto label2;

        $z0 = r1 instanceof org.springframework.aop.framework.Cglib2AopProxy;

        if $z0 == 0 goto label1;

        $r4 = r0.<org.springframework.aop.framework.Cglib2AopProxy: org.springframework.aop.framework.AdvisedSupport advised>;

        $r2 = (org.springframework.aop.framework.Cglib2AopProxy) r1;

        $r3 = $r2.<org.springframework.aop.framework.Cglib2AopProxy: org.springframework.aop.framework.AdvisedSupport advised>;

        $z1 = staticinvoke <org.springframework.aop.framework.AopProxyUtils: boolean equalsInProxy(org.springframework.aop.framework.AdvisedSupport,org.springframework.aop.framework.AdvisedSupport)>($r4, $r3);

        if $z1 != 0 goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public int hashCode()
    {
        org.springframework.aop.TargetSource $r3;
        org.springframework.aop.framework.Cglib2AopProxy r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Class $r0;
        org.springframework.aop.framework.AdvisedSupport $r2;

        r1 := @this: org.springframework.aop.framework.Cglib2AopProxy;

        $r0 = class "Lorg/springframework/aop/framework/Cglib2AopProxy;";

        $i0 = virtualinvoke $r0.<java.lang.Object: int hashCode()>();

        $i1 = $i0 * 13;

        $r2 = r1.<org.springframework.aop.framework.Cglib2AopProxy: org.springframework.aop.framework.AdvisedSupport advised>;

        $r3 = virtualinvoke $r2.<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.TargetSource getTargetSource()>();

        $i2 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

        $i3 = $i1 + $i2;

        return $i3;
    }

    static java.lang.Object access$0(java.lang.Object, java.lang.Object, java.lang.reflect.Method, java.lang.Object)
    {
        java.lang.Object r0, r1, r3, $r4;
        java.lang.reflect.Method r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.reflect.Method;

        r3 := @parameter3: java.lang.Object;

        $r4 = staticinvoke <org.springframework.aop.framework.Cglib2AopProxy: java.lang.Object massageReturnTypeIfNecessary(java.lang.Object,java.lang.Object,java.lang.reflect.Method,java.lang.Object)>(r0, r1, r2, r3);

        return $r4;
    }
}
