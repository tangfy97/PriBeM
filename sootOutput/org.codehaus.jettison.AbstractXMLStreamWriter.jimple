public abstract class org.codehaus.jettison.AbstractXMLStreamWriter extends java.lang.Object implements javax.xml.stream.XMLStreamWriter
{
    java.util.ArrayList serializedAsArrays;

    public void <init>()
    {
        org.codehaus.jettison.AbstractXMLStreamWriter r0;
        java.util.ArrayList $r1;

        r0 := @this: org.codehaus.jettison.AbstractXMLStreamWriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.codehaus.jettison.AbstractXMLStreamWriter: java.util.ArrayList serializedAsArrays> = $r1;

        return;
    }

    public void writeCData(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        java.lang.String r1;
        org.codehaus.jettison.AbstractXMLStreamWriter r0;

        r0 := @this: org.codehaus.jettison.AbstractXMLStreamWriter;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.codehaus.jettison.AbstractXMLStreamWriter: void writeCharacters(java.lang.String)>(r1);

        return;
    }

    public void writeCharacters(char[], int, int) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.jettison.AbstractXMLStreamWriter r0;
        int i0, i1;
        char[] r2;
        java.lang.String $r1;

        r0 := @this: org.codehaus.jettison.AbstractXMLStreamWriter;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(r2, i0, i1);

        virtualinvoke r0.<org.codehaus.jettison.AbstractXMLStreamWriter: void writeCharacters(java.lang.String)>($r1);

        return;
    }

    public void writeEmptyElement(java.lang.String, java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.jettison.AbstractXMLStreamWriter r0;
        java.lang.String r1, r2, r3;

        r0 := @this: org.codehaus.jettison.AbstractXMLStreamWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        virtualinvoke r0.<org.codehaus.jettison.AbstractXMLStreamWriter: void writeStartElement(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        virtualinvoke r0.<org.codehaus.jettison.AbstractXMLStreamWriter: void writeEndElement()>();

        return;
    }

    public void writeEmptyElement(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        java.lang.String r1, r2;
        org.codehaus.jettison.AbstractXMLStreamWriter r0;

        r0 := @this: org.codehaus.jettison.AbstractXMLStreamWriter;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.codehaus.jettison.AbstractXMLStreamWriter: void writeStartElement(java.lang.String,java.lang.String)>(r1, r2);

        virtualinvoke r0.<org.codehaus.jettison.AbstractXMLStreamWriter: void writeEndElement()>();

        return;
    }

    public void writeEmptyElement(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        java.lang.String r1;
        org.codehaus.jettison.AbstractXMLStreamWriter r0;

        r0 := @this: org.codehaus.jettison.AbstractXMLStreamWriter;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.codehaus.jettison.AbstractXMLStreamWriter: void writeStartElement(java.lang.String)>(r1);

        virtualinvoke r0.<org.codehaus.jettison.AbstractXMLStreamWriter: void writeEndElement()>();

        return;
    }

    public void writeStartDocument(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        java.lang.String r1, r2;
        org.codehaus.jettison.AbstractXMLStreamWriter r0;

        r0 := @this: org.codehaus.jettison.AbstractXMLStreamWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.codehaus.jettison.AbstractXMLStreamWriter: void writeStartDocument()>();

        return;
    }

    public void writeStartDocument(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        java.lang.String r1;
        org.codehaus.jettison.AbstractXMLStreamWriter r0;

        r0 := @this: org.codehaus.jettison.AbstractXMLStreamWriter;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.codehaus.jettison.AbstractXMLStreamWriter: void writeStartDocument()>();

        return;
    }

    public void writeStartElement(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        java.lang.String r1, r2;
        org.codehaus.jettison.AbstractXMLStreamWriter r0;

        r0 := @this: org.codehaus.jettison.AbstractXMLStreamWriter;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.codehaus.jettison.AbstractXMLStreamWriter: void writeStartElement(java.lang.String,java.lang.String,java.lang.String)>("", r1, r2);

        return;
    }

    public void writeStartElement(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        java.lang.String r1;
        org.codehaus.jettison.AbstractXMLStreamWriter r0;

        r0 := @this: org.codehaus.jettison.AbstractXMLStreamWriter;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.codehaus.jettison.AbstractXMLStreamWriter: void writeStartElement(java.lang.String,java.lang.String,java.lang.String)>("", r1, "");

        return;
    }

    public void writeComment(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        java.lang.String r1;
        org.codehaus.jettison.AbstractXMLStreamWriter r0;

        r0 := @this: org.codehaus.jettison.AbstractXMLStreamWriter;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void writeDTD(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        java.lang.String r1;
        org.codehaus.jettison.AbstractXMLStreamWriter r0;

        r0 := @this: org.codehaus.jettison.AbstractXMLStreamWriter;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void writeEndDocument() throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.jettison.AbstractXMLStreamWriter r0;

        r0 := @this: org.codehaus.jettison.AbstractXMLStreamWriter;

        return;
    }

    public void serializeAsArray(java.lang.String)
    {
        java.lang.String r1;
        org.codehaus.jettison.AbstractXMLStreamWriter r0;
        java.util.ArrayList $r2;

        r0 := @this: org.codehaus.jettison.AbstractXMLStreamWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.jettison.AbstractXMLStreamWriter: java.util.ArrayList serializedAsArrays>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void seriliazeAsArray(java.lang.String)
    {
        java.lang.String r1;
        org.codehaus.jettison.AbstractXMLStreamWriter r0;
        java.util.ArrayList $r2;

        r0 := @this: org.codehaus.jettison.AbstractXMLStreamWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.jettison.AbstractXMLStreamWriter: java.util.ArrayList serializedAsArrays>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public java.util.ArrayList getSerializedAsArrays()
    {
        org.codehaus.jettison.AbstractXMLStreamWriter r0;
        java.util.ArrayList $r1;

        r0 := @this: org.codehaus.jettison.AbstractXMLStreamWriter;

        $r1 = r0.<org.codehaus.jettison.AbstractXMLStreamWriter: java.util.ArrayList serializedAsArrays>;

        return $r1;
    }
}
