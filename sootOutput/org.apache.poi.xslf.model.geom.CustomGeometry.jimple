public class org.apache.poi.xslf.model.geom.CustomGeometry extends java.lang.Object implements java.lang.Iterable
{
    java.util.List adjusts;
    java.util.List guides;
    java.util.List paths;
    org.apache.poi.xslf.model.geom.Path textBounds;

    public void <init>(org.openxmlformats.schemas.drawingml.x2006.main.CTCustomGeometry2D)
    {
        org.apache.poi.xslf.model.geom.CustomGeometry r0;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DList $r7;
        org.apache.poi.xslf.model.geom.LineToCommand $r16, $r22, $r28;
        org.openxmlformats.schemas.drawingml.x2006.main.CTGeomGuide r52, r53;
        org.apache.poi.xslf.model.geom.ClosePathCommand $r34;
        boolean $z0, $z1, $z2, $z3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTGeomRect $r8;
        org.apache.poi.xslf.model.geom.Path $r9, $r11, $r17, $r23, $r29, $r35, $r40;
        org.openxmlformats.schemas.drawingml.x2006.main.CTGeomGuideList $r5, $r6;
        java.util.List $r36, $r41, $r42, $r46, $r47, $r51;
        org.apache.poi.xslf.model.geom.AdjustValue $r50;
        org.apache.poi.xslf.model.geom.Guide $r45;
        java.util.ArrayList $r1, $r2, $r3;
        org.openxmlformats.schemas.drawingml.x2006.main.CTCustomGeometry2D r4;
        java.lang.String $r13, $r15, $r19, $r21, $r25, $r27, $r31, $r33;
        org.apache.poi.xslf.model.geom.MoveToCommand $r10;
        java.util.Iterator $r37, $r43, $r48;
        org.openxmlformats.schemas.drawingml.x2006.main.CTPath2D r39;
        java.lang.Object $r12, $r14, $r18, $r20, $r24, $r26, $r30, $r32, $r38, $r44, $r49;

        r0 := @this: org.apache.poi.xslf.model.geom.CustomGeometry;

        r4 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.main.CTCustomGeometry2D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xslf.model.geom.CustomGeometry: java.util.List adjusts> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xslf.model.geom.CustomGeometry: java.util.List guides> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.poi.xslf.model.geom.CustomGeometry: java.util.List paths> = $r3;

        $r5 = interfaceinvoke r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTCustomGeometry2D: org.openxmlformats.schemas.drawingml.x2006.main.CTGeomGuideList getAvLst()>();

        if $r5 == null goto label2;

        $r47 = interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.main.CTGeomGuideList: java.util.List getGdList()>();

        $r48 = interfaceinvoke $r47.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke $r48.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        $r49 = interfaceinvoke $r48.<java.util.Iterator: java.lang.Object next()>();

        r52 = (org.openxmlformats.schemas.drawingml.x2006.main.CTGeomGuide) $r49;

        $r51 = r0.<org.apache.poi.xslf.model.geom.CustomGeometry: java.util.List adjusts>;

        $r50 = new org.apache.poi.xslf.model.geom.AdjustValue;

        specialinvoke $r50.<org.apache.poi.xslf.model.geom.AdjustValue: void <init>(org.openxmlformats.schemas.drawingml.x2006.main.CTGeomGuide)>(r52);

        interfaceinvoke $r51.<java.util.List: boolean add(java.lang.Object)>($r50);

        goto label1;

     label2:
        $r6 = interfaceinvoke r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTCustomGeometry2D: org.openxmlformats.schemas.drawingml.x2006.main.CTGeomGuideList getGdLst()>();

        if $r6 == null goto label4;

        $r42 = interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.main.CTGeomGuideList: java.util.List getGdList()>();

        $r43 = interfaceinvoke $r42.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke $r43.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r44 = interfaceinvoke $r43.<java.util.Iterator: java.lang.Object next()>();

        r53 = (org.openxmlformats.schemas.drawingml.x2006.main.CTGeomGuide) $r44;

        $r46 = r0.<org.apache.poi.xslf.model.geom.CustomGeometry: java.util.List guides>;

        $r45 = new org.apache.poi.xslf.model.geom.Guide;

        specialinvoke $r45.<org.apache.poi.xslf.model.geom.Guide: void <init>(org.openxmlformats.schemas.drawingml.x2006.main.CTGeomGuide)>(r53);

        interfaceinvoke $r46.<java.util.List: boolean add(java.lang.Object)>($r45);

        goto label3;

     label4:
        $r7 = interfaceinvoke r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTCustomGeometry2D: org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DList getPathLst()>();

        if $r7 == null goto label6;

        $r36 = interfaceinvoke $r7.<org.openxmlformats.schemas.drawingml.x2006.main.CTPath2DList: java.util.List getPathList()>();

        $r37 = interfaceinvoke $r36.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke $r37.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r38 = interfaceinvoke $r37.<java.util.Iterator: java.lang.Object next()>();

        r39 = (org.openxmlformats.schemas.drawingml.x2006.main.CTPath2D) $r38;

        $r41 = r0.<org.apache.poi.xslf.model.geom.CustomGeometry: java.util.List paths>;

        $r40 = new org.apache.poi.xslf.model.geom.Path;

        specialinvoke $r40.<org.apache.poi.xslf.model.geom.Path: void <init>(org.openxmlformats.schemas.drawingml.x2006.main.CTPath2D)>(r39);

        interfaceinvoke $r41.<java.util.List: boolean add(java.lang.Object)>($r40);

        goto label5;

     label6:
        $z0 = interfaceinvoke r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTCustomGeometry2D: boolean isSetRect()>();

        if $z0 == 0 goto label7;

        $r8 = interfaceinvoke r4.<org.openxmlformats.schemas.drawingml.x2006.main.CTCustomGeometry2D: org.openxmlformats.schemas.drawingml.x2006.main.CTGeomRect getRect()>();

        $r9 = new org.apache.poi.xslf.model.geom.Path;

        specialinvoke $r9.<org.apache.poi.xslf.model.geom.Path: void <init>()>();

        r0.<org.apache.poi.xslf.model.geom.CustomGeometry: org.apache.poi.xslf.model.geom.Path textBounds> = $r9;

        $r11 = r0.<org.apache.poi.xslf.model.geom.CustomGeometry: org.apache.poi.xslf.model.geom.Path textBounds>;

        $r10 = new org.apache.poi.xslf.model.geom.MoveToCommand;

        $r12 = interfaceinvoke $r8.<org.openxmlformats.schemas.drawingml.x2006.main.CTGeomRect: java.lang.Object getL()>();

        $r13 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>();

        $r14 = interfaceinvoke $r8.<org.openxmlformats.schemas.drawingml.x2006.main.CTGeomRect: java.lang.Object getT()>();

        $r15 = virtualinvoke $r14.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r10.<org.apache.poi.xslf.model.geom.MoveToCommand: void <init>(java.lang.String,java.lang.String)>($r13, $r15);

        virtualinvoke $r11.<org.apache.poi.xslf.model.geom.Path: void addCommand(org.apache.poi.xslf.model.geom.PathCommand)>($r10);

        $r17 = r0.<org.apache.poi.xslf.model.geom.CustomGeometry: org.apache.poi.xslf.model.geom.Path textBounds>;

        $r16 = new org.apache.poi.xslf.model.geom.LineToCommand;

        $r18 = interfaceinvoke $r8.<org.openxmlformats.schemas.drawingml.x2006.main.CTGeomRect: java.lang.Object getR()>();

        $r19 = virtualinvoke $r18.<java.lang.Object: java.lang.String toString()>();

        $r20 = interfaceinvoke $r8.<org.openxmlformats.schemas.drawingml.x2006.main.CTGeomRect: java.lang.Object getT()>();

        $r21 = virtualinvoke $r20.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r16.<org.apache.poi.xslf.model.geom.LineToCommand: void <init>(java.lang.String,java.lang.String)>($r19, $r21);

        virtualinvoke $r17.<org.apache.poi.xslf.model.geom.Path: void addCommand(org.apache.poi.xslf.model.geom.PathCommand)>($r16);

        $r23 = r0.<org.apache.poi.xslf.model.geom.CustomGeometry: org.apache.poi.xslf.model.geom.Path textBounds>;

        $r22 = new org.apache.poi.xslf.model.geom.LineToCommand;

        $r24 = interfaceinvoke $r8.<org.openxmlformats.schemas.drawingml.x2006.main.CTGeomRect: java.lang.Object getR()>();

        $r25 = virtualinvoke $r24.<java.lang.Object: java.lang.String toString()>();

        $r26 = interfaceinvoke $r8.<org.openxmlformats.schemas.drawingml.x2006.main.CTGeomRect: java.lang.Object getB()>();

        $r27 = virtualinvoke $r26.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r22.<org.apache.poi.xslf.model.geom.LineToCommand: void <init>(java.lang.String,java.lang.String)>($r25, $r27);

        virtualinvoke $r23.<org.apache.poi.xslf.model.geom.Path: void addCommand(org.apache.poi.xslf.model.geom.PathCommand)>($r22);

        $r29 = r0.<org.apache.poi.xslf.model.geom.CustomGeometry: org.apache.poi.xslf.model.geom.Path textBounds>;

        $r28 = new org.apache.poi.xslf.model.geom.LineToCommand;

        $r30 = interfaceinvoke $r8.<org.openxmlformats.schemas.drawingml.x2006.main.CTGeomRect: java.lang.Object getL()>();

        $r31 = virtualinvoke $r30.<java.lang.Object: java.lang.String toString()>();

        $r32 = interfaceinvoke $r8.<org.openxmlformats.schemas.drawingml.x2006.main.CTGeomRect: java.lang.Object getB()>();

        $r33 = virtualinvoke $r32.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r28.<org.apache.poi.xslf.model.geom.LineToCommand: void <init>(java.lang.String,java.lang.String)>($r31, $r33);

        virtualinvoke $r29.<org.apache.poi.xslf.model.geom.Path: void addCommand(org.apache.poi.xslf.model.geom.PathCommand)>($r28);

        $r35 = r0.<org.apache.poi.xslf.model.geom.CustomGeometry: org.apache.poi.xslf.model.geom.Path textBounds>;

        $r34 = new org.apache.poi.xslf.model.geom.ClosePathCommand;

        specialinvoke $r34.<org.apache.poi.xslf.model.geom.ClosePathCommand: void <init>()>();

        virtualinvoke $r35.<org.apache.poi.xslf.model.geom.Path: void addCommand(org.apache.poi.xslf.model.geom.PathCommand)>($r34);

     label7:
        return;
    }

    public java.util.Iterator iterator()
    {
        java.util.List $r1;
        java.util.Iterator $r2;
        org.apache.poi.xslf.model.geom.CustomGeometry r0;

        r0 := @this: org.apache.poi.xslf.model.geom.CustomGeometry;

        $r1 = r0.<org.apache.poi.xslf.model.geom.CustomGeometry: java.util.List paths>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        return $r2;
    }

    public org.apache.poi.xslf.model.geom.Path getTextBounds()
    {
        org.apache.poi.xslf.model.geom.Path $r1;
        org.apache.poi.xslf.model.geom.CustomGeometry r0;

        r0 := @this: org.apache.poi.xslf.model.geom.CustomGeometry;

        $r1 = r0.<org.apache.poi.xslf.model.geom.CustomGeometry: org.apache.poi.xslf.model.geom.Path textBounds>;

        return $r1;
    }
}
