public class org.eclipse.jetty.websocket.WebSocketConnectionD00 extends org.eclipse.jetty.io.AbstractConnection implements org.eclipse.jetty.websocket.WebSocketConnection, org.eclipse.jetty.websocket.WebSocket$FrameConnection
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    public static final byte LENGTH_FRAME;
    public static final byte SENTINEL_FRAME;
    private final org.eclipse.jetty.websocket.WebSocketParser _parser;
    private final org.eclipse.jetty.websocket.WebSocketGenerator _generator;
    private final org.eclipse.jetty.websocket.WebSocket _websocket;
    private final java.lang.String _protocol;
    private java.lang.String _key1;
    private java.lang.String _key2;
    private org.eclipse.jetty.io.ByteArrayBuffer _hixieBytes;

    public void <init>(org.eclipse.jetty.websocket.WebSocket, org.eclipse.jetty.io.EndPoint, org.eclipse.jetty.websocket.WebSocketBuffers, long, int, java.lang.String) throws java.io.IOException
    {
        org.eclipse.jetty.websocket.WebSocketBuffers r6;
        org.eclipse.jetty.io.EndPoint r1, $r2, $r7;
        long l0;
        org.eclipse.jetty.websocket.WebSocketConnectionD00$FrameHandlerD00 $r9;
        org.eclipse.jetty.websocket.WebSocketParserD00 $r8;
        int i1;
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;
        java.lang.String r4;
        org.eclipse.jetty.websocket.WebSocket r3, $r10;
        org.eclipse.jetty.websocket.WebSocketGeneratorD00 $r5;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        r3 := @parameter0: org.eclipse.jetty.websocket.WebSocket;

        r1 := @parameter1: org.eclipse.jetty.io.EndPoint;

        r6 := @parameter2: org.eclipse.jetty.websocket.WebSocketBuffers;

        l0 := @parameter3: long;

        i1 := @parameter4: int;

        r4 := @parameter5: java.lang.String;

        specialinvoke r0.<org.eclipse.jetty.io.AbstractConnection: void <init>(org.eclipse.jetty.io.EndPoint,long)>(r1, l0);

        $r2 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.EndPoint _endp>;

        interfaceinvoke $r2.<org.eclipse.jetty.io.EndPoint: void setMaxIdleTime(int)>(i1);

        r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.websocket.WebSocket _websocket> = r3;

        r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: java.lang.String _protocol> = r4;

        $r5 = new org.eclipse.jetty.websocket.WebSocketGeneratorD00;

        $r7 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.EndPoint _endp>;

        specialinvoke $r5.<org.eclipse.jetty.websocket.WebSocketGeneratorD00: void <init>(org.eclipse.jetty.websocket.WebSocketBuffers,org.eclipse.jetty.io.EndPoint)>(r6, $r7);

        r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.websocket.WebSocketGenerator _generator> = $r5;

        $r8 = new org.eclipse.jetty.websocket.WebSocketParserD00;

        $r9 = new org.eclipse.jetty.websocket.WebSocketConnectionD00$FrameHandlerD00;

        $r10 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.websocket.WebSocket _websocket>;

        specialinvoke $r9.<org.eclipse.jetty.websocket.WebSocketConnectionD00$FrameHandlerD00: void <init>(org.eclipse.jetty.websocket.WebSocket)>($r10);

        specialinvoke $r8.<org.eclipse.jetty.websocket.WebSocketParserD00: void <init>(org.eclipse.jetty.websocket.WebSocketBuffers,org.eclipse.jetty.io.EndPoint,org.eclipse.jetty.websocket.WebSocketParser$FrameHandler)>(r6, r1, $r9);

        r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.websocket.WebSocketParser _parser> = $r8;

        return;
    }

    public org.eclipse.jetty.websocket.WebSocket$Connection getConnection()
    {
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        return r0;
    }

    public void setHixieKeys(java.lang.String, java.lang.String)
    {
        org.eclipse.jetty.io.nio.IndirectNIOBuffer $r3;
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;
        java.lang.String r1, r2;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: java.lang.String _key1> = r1;

        r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: java.lang.String _key2> = r2;

        $r3 = new org.eclipse.jetty.io.nio.IndirectNIOBuffer;

        specialinvoke $r3.<org.eclipse.jetty.io.nio.IndirectNIOBuffer: void <init>(int)>(16);

        r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.ByteArrayBuffer _hixieBytes> = $r3;

        return;
    }

    public org.eclipse.jetty.io.Connection handle() throws java.io.IOException
    {
        org.eclipse.jetty.websocket.WebSocket$OnFrame $r20;
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;
        java.lang.Throwable $r33;
        org.eclipse.jetty.io.ByteArrayBuffer $r1, $r21, $r22, $r26, $r29, $r30, $r32;
        java.io.IOException $r38, $r40;
        org.eclipse.jetty.io.AsyncEndPoint $r11;
        org.eclipse.jetty.websocket.WebSocket $r14, $r19, $r45;
        org.eclipse.jetty.io.EndPoint $r2, $r3, $r5, $r8, $r9, $r10, $r15, $r16, $r18, $r23, $r24, $r25, $r27, $r28, $r34, $r35, $r37, $r42, $r43, $r44;
        org.eclipse.jetty.io.Buffer $r13, $r31;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, z14, $z15;
        org.eclipse.jetty.websocket.WebSocketGenerator $r4, $r6, $r17, $r36;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        org.eclipse.jetty.websocket.WebSocketParser $r7, $r12;
        org.eclipse.jetty.util.log.Logger $r39, $r41;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

     label01:
        $r1 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.ByteArrayBuffer _hixieBytes>;

        if $r1 == null goto label12;

        $r12 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.websocket.WebSocketParser _parser>;

        $r13 = interfaceinvoke $r12.<org.eclipse.jetty.websocket.WebSocketParser: org.eclipse.jetty.io.Buffer getBuffer()>();

        if $r13 == null goto label03;

        $i4 = interfaceinvoke $r13.<org.eclipse.jetty.io.Buffer: int length()>();

        if $i4 <= 0 goto label03;

        $i5 = interfaceinvoke $r13.<org.eclipse.jetty.io.Buffer: int length()>();

        i10 = $i5;

        $r29 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.ByteArrayBuffer _hixieBytes>;

        $i6 = virtualinvoke $r29.<org.eclipse.jetty.io.ByteArrayBuffer: int length()>();

        $i7 = 8 - $i6;

        if $i5 <= $i7 goto label02;

        $r32 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.ByteArrayBuffer _hixieBytes>;

        $i9 = virtualinvoke $r32.<org.eclipse.jetty.io.ByteArrayBuffer: int length()>();

        i10 = 8 - $i9;

     label02:
        $r30 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.ByteArrayBuffer _hixieBytes>;

        $i8 = interfaceinvoke $r13.<org.eclipse.jetty.io.Buffer: int getIndex()>();

        $r31 = interfaceinvoke $r13.<org.eclipse.jetty.io.Buffer: org.eclipse.jetty.io.Buffer peek(int,int)>($i8, i10);

        virtualinvoke $r30.<org.eclipse.jetty.io.ByteArrayBuffer: int put(org.eclipse.jetty.io.Buffer)>($r31);

        interfaceinvoke $r13.<org.eclipse.jetty.io.Buffer: int skip(int)>(i10);

     label03:
        $r44 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.EndPoint _endp>;

        $z12 = interfaceinvoke $r44.<org.eclipse.jetty.io.EndPoint: boolean isOpen()>();

        if $z12 == 0 goto label06;

        $r21 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.ByteArrayBuffer _hixieBytes>;

        $i2 = virtualinvoke $r21.<org.eclipse.jetty.io.ByteArrayBuffer: int length()>();

        if $i2 != 8 goto label04;

        specialinvoke r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: void doTheHixieHixieShake()>();

        $r27 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.EndPoint _endp>;

        $r26 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.ByteArrayBuffer _hixieBytes>;

        interfaceinvoke $r27.<org.eclipse.jetty.io.EndPoint: int flush(org.eclipse.jetty.io.Buffer)>($r26);

        r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.ByteArrayBuffer _hixieBytes> = null;

        $r28 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.EndPoint _endp>;

        interfaceinvoke $r28.<org.eclipse.jetty.io.EndPoint: void flush()>();

        goto label06;

     label04:
        $r23 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.EndPoint _endp>;

        $r22 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.ByteArrayBuffer _hixieBytes>;

        $i3 = interfaceinvoke $r23.<org.eclipse.jetty.io.EndPoint: int fill(org.eclipse.jetty.io.Buffer)>($r22);

        if $i3 >= 0 goto label05;

        $r24 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.EndPoint _endp>;

        interfaceinvoke $r24.<org.eclipse.jetty.io.EndPoint: void flush()>();

        $r25 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.EndPoint _endp>;

        interfaceinvoke $r25.<org.eclipse.jetty.io.EndPoint: void close()>();

        goto label06;

     label05:
        goto label03;

     label06:
        $r45 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.websocket.WebSocket _websocket>;

        $z13 = $r45 instanceof org.eclipse.jetty.websocket.WebSocket$OnFrame;

        if $z13 == 0 goto label07;

        $r19 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.websocket.WebSocket _websocket>;

        $r20 = (org.eclipse.jetty.websocket.WebSocket$OnFrame) $r19;

        interfaceinvoke $r20.<org.eclipse.jetty.websocket.WebSocket$OnFrame: void onHandshake(org.eclipse.jetty.websocket.WebSocket$FrameConnection)>(r0);

     label07:
        $r14 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.websocket.WebSocket _websocket>;

        interfaceinvoke $r14.<org.eclipse.jetty.websocket.WebSocket: void onOpen(org.eclipse.jetty.websocket.WebSocket$Connection)>(r0);

     label08:
        $r15 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.EndPoint _endp>;

        $z5 = interfaceinvoke $r15.<org.eclipse.jetty.io.EndPoint: boolean isOpen()>();

        if $z5 == 0 goto label11;

        $r16 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.EndPoint _endp>;

        $z6 = interfaceinvoke $r16.<org.eclipse.jetty.io.EndPoint: boolean isInputShutdown()>();

        if $z6 == 0 goto label09;

        $r17 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.websocket.WebSocketGenerator _generator>;

        $z7 = interfaceinvoke $r17.<org.eclipse.jetty.websocket.WebSocketGenerator: boolean isBufferEmpty()>();

        if $z7 == 0 goto label09;

        $r18 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.EndPoint _endp>;

        interfaceinvoke $r18.<org.eclipse.jetty.io.EndPoint: void close()>();

        goto label10;

     label09:
        specialinvoke r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: void checkWriteable()>();

     label10:
        specialinvoke r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: void checkWriteable()>();

     label11:
        return r0;

     label12:
        z14 = 1;

     label13:
        if z14 == 0 goto label18;

        $r6 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.websocket.WebSocketGenerator _generator>;

        $i0 = interfaceinvoke $r6.<org.eclipse.jetty.websocket.WebSocketGenerator: int flush()>();

        $r7 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.websocket.WebSocketParser _parser>;

        $i1 = interfaceinvoke $r7.<org.eclipse.jetty.websocket.WebSocketParser: int parseNext()>();

        if $i0 > 0 goto label14;

        if $i1 <= 0 goto label15;

     label14:
        $z15 = 1;

        goto label16;

     label15:
        $z15 = 0;

     label16:
        z14 = $z15;

        $r8 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.EndPoint _endp>;

        interfaceinvoke $r8.<org.eclipse.jetty.io.EndPoint: void flush()>();

        $r9 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.EndPoint _endp>;

        $z3 = $r9 instanceof org.eclipse.jetty.io.AsyncEndPoint;

        if $z3 == 0 goto label17;

        $r10 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.EndPoint _endp>;

        $r11 = (org.eclipse.jetty.io.AsyncEndPoint) $r10;

        $z4 = interfaceinvoke $r11.<org.eclipse.jetty.io.AsyncEndPoint: boolean hasProgressed()>();

        if $z4 == 0 goto label17;

        z14 = 1;

     label17:
        goto label13;

     label18:
        $r2 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.EndPoint _endp>;

        $z0 = interfaceinvoke $r2.<org.eclipse.jetty.io.EndPoint: boolean isOpen()>();

        if $z0 == 0 goto label31;

        $r3 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.EndPoint _endp>;

        $z1 = interfaceinvoke $r3.<org.eclipse.jetty.io.EndPoint: boolean isInputShutdown()>();

        if $z1 == 0 goto label19;

        $r4 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.websocket.WebSocketGenerator _generator>;

        $z2 = interfaceinvoke $r4.<org.eclipse.jetty.websocket.WebSocketGenerator: boolean isBufferEmpty()>();

        if $z2 == 0 goto label19;

        $r5 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.EndPoint _endp>;

        interfaceinvoke $r5.<org.eclipse.jetty.io.EndPoint: void close()>();

        goto label20;

     label19:
        specialinvoke r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: void checkWriteable()>();

     label20:
        specialinvoke r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: void checkWriteable()>();

        goto label31;

     label21:
        $r40 := @caughtexception;

        $r41 = <org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r41.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.Throwable)>($r40);

     label22:
        $r42 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.EndPoint _endp>;

        $z11 = interfaceinvoke $r42.<org.eclipse.jetty.io.EndPoint: boolean isOpen()>();

        if $z11 == 0 goto label23;

        $r43 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.EndPoint _endp>;

        interfaceinvoke $r43.<org.eclipse.jetty.io.EndPoint: void close()>();

     label23:
        goto label25;

     label24:
        $r38 := @caughtexception;

        $r39 = <org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r39.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r38);

     label25:
        throw $r40;

     label26:
        $r33 := @caughtexception;

     label27:
        $r34 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.EndPoint _endp>;

        $z8 = interfaceinvoke $r34.<org.eclipse.jetty.io.EndPoint: boolean isOpen()>();

        if $z8 == 0 goto label30;

        $r35 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.EndPoint _endp>;

        $z9 = interfaceinvoke $r35.<org.eclipse.jetty.io.EndPoint: boolean isInputShutdown()>();

        if $z9 == 0 goto label28;

        $r36 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.websocket.WebSocketGenerator _generator>;

        $z10 = interfaceinvoke $r36.<org.eclipse.jetty.websocket.WebSocketGenerator: boolean isBufferEmpty()>();

        if $z10 == 0 goto label28;

        $r37 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.EndPoint _endp>;

        interfaceinvoke $r37.<org.eclipse.jetty.io.EndPoint: void close()>();

        goto label29;

     label28:
        specialinvoke r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: void checkWriteable()>();

     label29:
        specialinvoke r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: void checkWriteable()>();

     label30:
        throw $r33;

     label31:
        return r0;

        catch java.io.IOException from label01 to label08 with label21;
        catch java.io.IOException from label12 to label18 with label21;
        catch java.io.IOException from label22 to label23 with label24;
        catch java.lang.Throwable from label01 to label08 with label26;
        catch java.lang.Throwable from label12 to label18 with label26;
        catch java.lang.Throwable from label21 to label27 with label26;
    }

    public void onInputShutdown() throws java.io.IOException
    {
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        return;
    }

    private void doTheHixieHixieShake()
    {
        byte[] $r4, $r5;
        long $l0, $l1;
        org.eclipse.jetty.io.ByteArrayBuffer $r3, $r6, $r7;
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        $r1 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: java.lang.String _key1>;

        $l0 = staticinvoke <org.eclipse.jetty.websocket.WebSocketConnectionD00: long hixieCrypt(java.lang.String)>($r1);

        $r2 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: java.lang.String _key2>;

        $l1 = staticinvoke <org.eclipse.jetty.websocket.WebSocketConnectionD00: long hixieCrypt(java.lang.String)>($r2);

        $r3 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.ByteArrayBuffer _hixieBytes>;

        $r4 = virtualinvoke $r3.<org.eclipse.jetty.io.ByteArrayBuffer: byte[] asArray()>();

        $r5 = staticinvoke <org.eclipse.jetty.websocket.WebSocketConnectionD00: byte[] doTheHixieHixieShake(long,long,byte[])>($l0, $l1, $r4);

        $r6 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.ByteArrayBuffer _hixieBytes>;

        virtualinvoke $r6.<org.eclipse.jetty.io.ByteArrayBuffer: void clear()>();

        $r7 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.ByteArrayBuffer _hixieBytes>;

        virtualinvoke $r7.<org.eclipse.jetty.io.ByteArrayBuffer: int put(byte[])>($r5);

        return;
    }

    public boolean isOpen()
    {
        org.eclipse.jetty.io.EndPoint $r1, $r2;
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        $r1 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.EndPoint _endp>;

        if $r1 == null goto label1;

        $r2 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.EndPoint _endp>;

        $z0 = interfaceinvoke $r2.<org.eclipse.jetty.io.EndPoint: boolean isOpen()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean isIdle()
    {
        org.eclipse.jetty.websocket.WebSocketGenerator $r2;
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;
        org.eclipse.jetty.websocket.WebSocketParser $r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        $r1 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.websocket.WebSocketParser _parser>;

        $z0 = interfaceinvoke $r1.<org.eclipse.jetty.websocket.WebSocketParser: boolean isBufferEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.websocket.WebSocketGenerator _generator>;

        $z1 = interfaceinvoke $r2.<org.eclipse.jetty.websocket.WebSocketGenerator: boolean isBufferEmpty()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean isSuspended()
    {
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        return 0;
    }

    public void onClose()
    {
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;
        org.eclipse.jetty.websocket.WebSocket $r1;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        $r1 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.websocket.WebSocket _websocket>;

        interfaceinvoke $r1.<org.eclipse.jetty.websocket.WebSocket: void onClose(int,java.lang.String)>(1000, "");

        return;
    }

    public void sendMessage(java.lang.String) throws java.io.IOException
    {
        byte[] $r1;
        org.eclipse.jetty.websocket.WebSocketGenerator $r3, $r4;
        int $i0;
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r2;
        java.lang.String r0;

        r2 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $r3 = r2.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.websocket.WebSocketGenerator _generator>;

        $i0 = lengthof $r1;

        interfaceinvoke $r3.<org.eclipse.jetty.websocket.WebSocketGenerator: void addFrame(byte,byte,byte[],int,int)>(0, 0, $r1, 0, $i0);

        $r4 = r2.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.websocket.WebSocketGenerator _generator>;

        interfaceinvoke $r4.<org.eclipse.jetty.websocket.WebSocketGenerator: int flush()>();

        specialinvoke r2.<org.eclipse.jetty.websocket.WebSocketConnectionD00: void checkWriteable()>();

        return;
    }

    public void sendMessage(byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        org.eclipse.jetty.websocket.WebSocketGenerator $r2, $r3;
        int i0, i1;
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.websocket.WebSocketGenerator _generator>;

        interfaceinvoke $r2.<org.eclipse.jetty.websocket.WebSocketGenerator: void addFrame(byte,byte,byte[],int,int)>(0, -128, r1, i0, i1);

        $r3 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.websocket.WebSocketGenerator _generator>;

        interfaceinvoke $r3.<org.eclipse.jetty.websocket.WebSocketGenerator: int flush()>();

        specialinvoke r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: void checkWriteable()>();

        return;
    }

    public boolean isMore(byte)
    {
        byte b0, $b1;
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        b0 := @parameter0: byte;

        $b1 = b0 & 8;

        if $b1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void sendControl(byte, byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        byte b0;
        int i1, i2;
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        b0 := @parameter0: byte;

        r1 := @parameter1: byte[];

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        return;
    }

    public void sendFrame(byte, byte, byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        byte b0, b3;
        org.eclipse.jetty.websocket.WebSocketGenerator $r2, $r3;
        int i1, i2;
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        b3 := @parameter0: byte;

        b0 := @parameter1: byte;

        r1 := @parameter2: byte[];

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $r2 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.websocket.WebSocketGenerator _generator>;

        interfaceinvoke $r2.<org.eclipse.jetty.websocket.WebSocketGenerator: void addFrame(byte,byte,byte[],int,int)>(0, b0, r1, i1, i2);

        $r3 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.websocket.WebSocketGenerator _generator>;

        interfaceinvoke $r3.<org.eclipse.jetty.websocket.WebSocketGenerator: int flush()>();

        specialinvoke r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: void checkWriteable()>();

        return;
    }

    public void close(int, java.lang.String)
    {
        java.lang.UnsupportedOperationException $r0;
        int i0;
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r1;
        java.lang.String r2;

        r1 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void disconnect()
    {
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        virtualinvoke r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: void close()>();

        return;
    }

    public void close()
    {
        org.eclipse.jetty.io.EndPoint $r2;
        org.eclipse.jetty.websocket.WebSocketGenerator $r1;
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;
        java.io.IOException $r3;
        org.eclipse.jetty.util.log.Logger $r4;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

     label1:
        $r1 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.websocket.WebSocketGenerator _generator>;

        interfaceinvoke $r1.<org.eclipse.jetty.websocket.WebSocketGenerator: int flush()>();

        $r2 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.EndPoint _endp>;

        interfaceinvoke $r2.<org.eclipse.jetty.io.EndPoint: void close()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = <org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r4.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r3);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void shutdown()
    {
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        virtualinvoke r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: void close()>();

        return;
    }

    public void fillBuffersFrom(org.eclipse.jetty.io.Buffer)
    {
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;
        org.eclipse.jetty.websocket.WebSocketParser $r2;
        org.eclipse.jetty.io.Buffer r1;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        r1 := @parameter0: org.eclipse.jetty.io.Buffer;

        $r2 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.websocket.WebSocketParser _parser>;

        interfaceinvoke $r2.<org.eclipse.jetty.websocket.WebSocketParser: void fill(org.eclipse.jetty.io.Buffer)>(r1);

        return;
    }

    private void checkWriteable()
    {
        org.eclipse.jetty.io.EndPoint $r2, $r3;
        org.eclipse.jetty.websocket.WebSocketGenerator $r1;
        org.eclipse.jetty.io.AsyncEndPoint $r4;
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        $r1 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.websocket.WebSocketGenerator _generator>;

        $z0 = interfaceinvoke $r1.<org.eclipse.jetty.websocket.WebSocketGenerator: boolean isBufferEmpty()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.EndPoint _endp>;

        $z1 = $r2 instanceof org.eclipse.jetty.io.AsyncEndPoint;

        if $z1 == 0 goto label1;

        $r3 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.EndPoint _endp>;

        $r4 = (org.eclipse.jetty.io.AsyncEndPoint) $r3;

        interfaceinvoke $r4.<org.eclipse.jetty.io.AsyncEndPoint: void scheduleWrite()>();

     label1:
        return;
    }

    static long hixieCrypt(java.lang.String)
    {
        long $l1, $l2, $l5, $l6, l7;
        char c3;
        int i0, $i4, i8, i9, $i10, $i11;
        char[] $r1;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        l7 = 0L;

        i8 = 0;

        $r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        i0 = lengthof $r1;

        i9 = 0;

     label1:
        if i9 >= i0 goto label4;

        c3 = $r1[i9];

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c3);

        if $z0 == 0 goto label2;

        $l6 = l7 * 10L;

        $i10 = (int) c3;

        $i4 = $i10 - 48;

        $l5 = (long) $i4;

        l7 = $l6 + $l5;

        goto label3;

     label2:
        $i11 = (int) c3;

        if $i11 != 32 goto label3;

        i8 = i8 + 1;

     label3:
        i9 = i9 + 1;

        goto label1;

     label4:
        $l1 = (long) i8;

        $l2 = l7 / $l1;

        return $l2;
    }

    public static byte[] doTheHixieHixieShake(long, long, byte[])
    {
        byte[] r1, r2, $r3;
        java.lang.IllegalStateException $r5;
        byte $b4, $b8, $b12, $b15, $b20, $b24, $b28, $b31;
        java.security.NoSuchAlgorithmException $r4;
        java.security.MessageDigest $r0;
        long l0, $l1, $l2, $l5, $l6, $l9, $l10, $l13, l16, $l17, $l18, $l21, $l22, $l25, $l26, $l29;
        int $i3, $i7, $i11, $i14, $i19, $i23, $i27, $i30;

        l0 := @parameter0: long;

        l16 := @parameter1: long;

        r2 := @parameter2: byte[];

     label1:
        $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        r1 = newarray (byte)[16];

        $l1 = l0 >> 24;

        $l2 = 255L & $l1;

        $i3 = (int) $l2;

        $b4 = (byte) $i3;

        r1[0] = $b4;

        $l5 = l0 >> 16;

        $l6 = 255L & $l5;

        $i7 = (int) $l6;

        $b8 = (byte) $i7;

        r1[1] = $b8;

        $l9 = l0 >> 8;

        $l10 = 255L & $l9;

        $i11 = (int) $l10;

        $b12 = (byte) $i11;

        r1[2] = $b12;

        $l13 = 255L & l0;

        $i14 = (int) $l13;

        $b15 = (byte) $i14;

        r1[3] = $b15;

        $l17 = l16 >> 24;

        $l18 = 255L & $l17;

        $i19 = (int) $l18;

        $b20 = (byte) $i19;

        r1[4] = $b20;

        $l21 = l16 >> 16;

        $l22 = 255L & $l21;

        $i23 = (int) $l22;

        $b24 = (byte) $i23;

        r1[5] = $b24;

        $l25 = l16 >> 8;

        $l26 = 255L & $l25;

        $i27 = (int) $l26;

        $b28 = (byte) $i27;

        r1[6] = $b28;

        $l29 = 255L & l16;

        $i30 = (int) $l29;

        $b31 = (byte) $i30;

        r1[7] = $b31;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r1, 8, 8);

        virtualinvoke $r0.<java.security.MessageDigest: void update(byte[])>(r1);

        $r3 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public void setMaxTextMessageSize(int)
    {
        int i0;
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        i0 := @parameter0: int;

        return;
    }

    public void setMaxIdleTime(int)
    {
        org.eclipse.jetty.io.EndPoint $r1;
        int i0;
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;
        java.io.IOException $r2;
        org.eclipse.jetty.util.log.Logger $r3;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        i0 := @parameter0: int;

     label1:
        $r1 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.EndPoint _endp>;

        interfaceinvoke $r1.<org.eclipse.jetty.io.EndPoint: void setMaxIdleTime(int)>(i0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = <org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r3.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>($r2);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void setMaxBinaryMessageSize(int)
    {
        int i0;
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        i0 := @parameter0: int;

        return;
    }

    public int getMaxTextMessageSize()
    {
        int $i1;
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        $i1 = (int) -1;

        return $i1;
    }

    public int getMaxIdleTime()
    {
        int $i0;
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;
        org.eclipse.jetty.io.EndPoint $r1;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        $r1 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.io.EndPoint _endp>;

        $i0 = interfaceinvoke $r1.<org.eclipse.jetty.io.EndPoint: int getMaxIdleTime()>();

        return $i0;
    }

    public int getMaxBinaryMessageSize()
    {
        int $i1;
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        $i1 = (int) -1;

        return $i1;
    }

    public java.lang.String getProtocol()
    {
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;
        java.lang.String $r1;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        $r1 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: java.lang.String _protocol>;

        return $r1;
    }

    protected void onFrameHandshake()
    {
        org.eclipse.jetty.websocket.WebSocket$OnFrame $r3;
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;
        org.eclipse.jetty.websocket.WebSocket $r1, $r2;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        $r1 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.websocket.WebSocket _websocket>;

        $z0 = $r1 instanceof org.eclipse.jetty.websocket.WebSocket$OnFrame;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.websocket.WebSocket _websocket>;

        $r3 = (org.eclipse.jetty.websocket.WebSocket$OnFrame) $r2;

        interfaceinvoke $r3.<org.eclipse.jetty.websocket.WebSocket$OnFrame: void onHandshake(org.eclipse.jetty.websocket.WebSocket$FrameConnection)>(r0);

     label1:
        return;
    }

    protected void onWebsocketOpen()
    {
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;
        org.eclipse.jetty.websocket.WebSocket $r1;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        $r1 = r0.<org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.websocket.WebSocket _websocket>;

        interfaceinvoke $r1.<org.eclipse.jetty.websocket.WebSocket: void onOpen(org.eclipse.jetty.websocket.WebSocket$Connection)>(r0);

        return;
    }

    public boolean isMessageComplete(byte)
    {
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;
        byte b0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        b0 := @parameter0: byte;

        return 1;
    }

    public byte binaryOpcode()
    {
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        return -128;
    }

    public byte textOpcode()
    {
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        return 0;
    }

    public boolean isControl(byte)
    {
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;
        byte b0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        b0 := @parameter0: byte;

        return 0;
    }

    public boolean isText(byte)
    {
        byte b0, $b1;
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        b0 := @parameter0: byte;

        $b1 = b0 & -128;

        if $b1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isBinary(byte)
    {
        byte b0, $b1;
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        b0 := @parameter0: byte;

        $b1 = b0 & -128;

        if $b1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isContinuation(byte)
    {
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;
        byte b0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        b0 := @parameter0: byte;

        return 0;
    }

    public boolean isClose(byte)
    {
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;
        byte b0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        b0 := @parameter0: byte;

        return 0;
    }

    public boolean isPing(byte)
    {
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;
        byte b0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        b0 := @parameter0: byte;

        return 0;
    }

    public boolean isPong(byte)
    {
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;
        byte b0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        b0 := @parameter0: byte;

        return 0;
    }

    public java.util.List getExtensions()
    {
        java.util.List $r0;
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r1;

        r1 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        $r0 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r0;
    }

    public byte continuationOpcode()
    {
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        return 0;
    }

    public byte finMask()
    {
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        return 0;
    }

    public void setAllowFrameFragmentation(boolean)
    {
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        z0 := @parameter0: boolean;

        return;
    }

    public boolean isAllowFrameFragmentation()
    {
        org.eclipse.jetty.websocket.WebSocketConnectionD00 r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketConnectionD00;

        return 0;
    }

    static org.eclipse.jetty.util.log.Logger access$000()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = <org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.util.log.Logger LOG>;

        return $r0;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        <org.eclipse.jetty.websocket.WebSocketConnectionD00: byte SENTINEL_FRAME> = 0;

        <org.eclipse.jetty.websocket.WebSocketConnectionD00: byte LENGTH_FRAME> = -128;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/websocket/WebSocketConnectionD00;");

        <org.eclipse.jetty.websocket.WebSocketConnectionD00: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
