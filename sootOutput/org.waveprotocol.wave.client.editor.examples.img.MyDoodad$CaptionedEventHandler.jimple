class org.waveprotocol.wave.client.editor.examples.img.MyDoodad$CaptionedEventHandler extends org.waveprotocol.wave.client.editor.examples.img.MyDoodad$GwtEventHandler
{

    void <init>(org.waveprotocol.wave.client.editor.examples.img.MyDoodad$CaptionedRenderer)
    {
        org.waveprotocol.wave.client.editor.examples.img.MyDoodad$CaptionedEventHandler r0;
        org.waveprotocol.wave.client.editor.examples.img.MyDoodad$CaptionedRenderer r1;

        r0 := @this: org.waveprotocol.wave.client.editor.examples.img.MyDoodad$CaptionedEventHandler;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.examples.img.MyDoodad$CaptionedRenderer;

        specialinvoke r0.<org.waveprotocol.wave.client.editor.examples.img.MyDoodad$GwtEventHandler: void <init>(org.waveprotocol.wave.client.editor.examples.img.MyDoodad$CaptionedRenderer)>(r1);

        return;
    }

    public boolean handleLeftAfterNode(org.waveprotocol.wave.client.editor.content.ContentElement, org.waveprotocol.wave.client.editor.event.EditorEvent)
    {
        org.waveprotocol.wave.client.editor.examples.img.MyDoodad$CaptionedEventHandler r0;
        org.waveprotocol.wave.model.document.util.Point$El $r6;
        org.waveprotocol.wave.client.editor.content.ContentElement r1, $r2, $r5;
        org.waveprotocol.wave.client.editor.selection.content.SelectionHelper $r4;
        org.waveprotocol.wave.client.editor.event.EditorEvent r3;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.editor.examples.img.MyDoodad$CaptionedEventHandler;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        r3 := @parameter1: org.waveprotocol.wave.client.editor.event.EditorEvent;

        $r2 = specialinvoke r0.<org.waveprotocol.wave.client.editor.examples.img.MyDoodad$CaptionedEventHandler: org.waveprotocol.wave.client.editor.content.ContentElement getCaption(org.waveprotocol.wave.client.editor.content.ContentElement)>(r1);

        if $r2 == null goto label1;

        $r4 = virtualinvoke r1.<org.waveprotocol.wave.client.editor.content.ContentElement: org.waveprotocol.wave.client.editor.selection.content.SelectionHelper getSelectionHelper()>();

        $r5 = specialinvoke r0.<org.waveprotocol.wave.client.editor.examples.img.MyDoodad$CaptionedEventHandler: org.waveprotocol.wave.client.editor.content.ContentElement getCaption(org.waveprotocol.wave.client.editor.content.ContentElement)>(r1);

        $r6 = staticinvoke <org.waveprotocol.wave.model.document.util.Point: org.waveprotocol.wave.model.document.util.Point$El end(java.lang.Object)>($r5);

        interfaceinvoke $r4.<org.waveprotocol.wave.client.editor.selection.content.SelectionHelper: void setCaret(org.waveprotocol.wave.model.document.util.Point)>($r6);

        return 1;

     label1:
        $z0 = specialinvoke r0.<org.waveprotocol.wave.client.editor.examples.img.MyDoodad$GwtEventHandler: boolean handleLeftAfterNode(org.waveprotocol.wave.client.editor.content.ContentElement,org.waveprotocol.wave.client.editor.event.EditorEvent)>(r1, r3);

        return $z0;
    }

    public boolean handleRightBeforeNode(org.waveprotocol.wave.client.editor.content.ContentElement, org.waveprotocol.wave.client.editor.event.EditorEvent)
    {
        org.waveprotocol.wave.client.editor.content.ContentView $r5;
        org.waveprotocol.wave.client.editor.examples.img.MyDoodad$CaptionedEventHandler r0;
        org.waveprotocol.wave.model.document.util.Point$El $r6;
        org.waveprotocol.wave.client.editor.content.ContentElement r1, $r2;
        org.waveprotocol.wave.client.editor.selection.content.SelectionHelper $r4;
        org.waveprotocol.wave.client.editor.event.EditorEvent r3;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.editor.examples.img.MyDoodad$CaptionedEventHandler;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        r3 := @parameter1: org.waveprotocol.wave.client.editor.event.EditorEvent;

        $r2 = specialinvoke r0.<org.waveprotocol.wave.client.editor.examples.img.MyDoodad$CaptionedEventHandler: org.waveprotocol.wave.client.editor.content.ContentElement getCaption(org.waveprotocol.wave.client.editor.content.ContentElement)>(r1);

        if $r2 == null goto label1;

        $r4 = virtualinvoke r1.<org.waveprotocol.wave.client.editor.content.ContentElement: org.waveprotocol.wave.client.editor.selection.content.SelectionHelper getSelectionHelper()>();

        $r5 = virtualinvoke r1.<org.waveprotocol.wave.client.editor.content.ContentElement: org.waveprotocol.wave.client.editor.content.ContentView getRenderedContentView()>();

        $r6 = staticinvoke <org.waveprotocol.wave.model.document.util.Point: org.waveprotocol.wave.model.document.util.Point$El start(org.waveprotocol.wave.model.document.ReadableDocument,java.lang.Object)>($r5, $r2);

        interfaceinvoke $r4.<org.waveprotocol.wave.client.editor.selection.content.SelectionHelper: void setCaret(org.waveprotocol.wave.model.document.util.Point)>($r6);

        return 1;

     label1:
        $z0 = specialinvoke r0.<org.waveprotocol.wave.client.editor.examples.img.MyDoodad$GwtEventHandler: boolean handleRightBeforeNode(org.waveprotocol.wave.client.editor.content.ContentElement,org.waveprotocol.wave.client.editor.event.EditorEvent)>(r1, r3);

        return $z0;
    }

    public boolean handleLeftAtBeginning(org.waveprotocol.wave.client.editor.content.ContentElement, org.waveprotocol.wave.client.editor.event.EditorEvent)
    {
        org.waveprotocol.wave.client.editor.content.ContentView $r3;
        org.waveprotocol.wave.client.editor.examples.img.MyDoodad$CaptionedEventHandler r5;
        org.waveprotocol.wave.model.document.util.Point$El $r4;
        org.waveprotocol.wave.model.document.indexed.LocationMapper $r2;
        int $i0;
        org.waveprotocol.wave.client.editor.content.ContentElement r0;
        org.waveprotocol.wave.client.editor.selection.content.SelectionHelper $r1;
        org.waveprotocol.wave.client.editor.event.EditorEvent r6;

        r5 := @this: org.waveprotocol.wave.client.editor.examples.img.MyDoodad$CaptionedEventHandler;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        r6 := @parameter1: org.waveprotocol.wave.client.editor.event.EditorEvent;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentElement: org.waveprotocol.wave.client.editor.selection.content.SelectionHelper getSelectionHelper()>();

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentElement: org.waveprotocol.wave.model.document.indexed.LocationMapper getLocationMapper()>();

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentElement: org.waveprotocol.wave.client.editor.content.ContentView getRenderedContentView()>();

        $r4 = staticinvoke <org.waveprotocol.wave.model.document.util.Point: org.waveprotocol.wave.model.document.util.Point$El before(org.waveprotocol.wave.model.document.ReadableDocument,java.lang.Object)>($r3, r0);

        $i0 = interfaceinvoke $r2.<org.waveprotocol.wave.model.document.indexed.LocationMapper: int getLocation(org.waveprotocol.wave.model.document.util.Point)>($r4);

        interfaceinvoke $r1.<org.waveprotocol.wave.client.editor.selection.content.SelectionHelper: void setCaret(int)>($i0);

        return 1;
    }

    public boolean handleRightAtEnd(org.waveprotocol.wave.client.editor.content.ContentElement, org.waveprotocol.wave.client.editor.event.EditorEvent)
    {
        org.waveprotocol.wave.client.editor.content.ContentView $r3;
        org.waveprotocol.wave.client.editor.examples.img.MyDoodad$CaptionedEventHandler r5;
        org.waveprotocol.wave.model.document.util.Point$El $r4;
        org.waveprotocol.wave.model.document.indexed.LocationMapper $r2;
        int $i0;
        org.waveprotocol.wave.client.editor.content.ContentElement r0;
        org.waveprotocol.wave.client.editor.selection.content.SelectionHelper $r1;
        org.waveprotocol.wave.client.editor.event.EditorEvent r6;

        r5 := @this: org.waveprotocol.wave.client.editor.examples.img.MyDoodad$CaptionedEventHandler;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        r6 := @parameter1: org.waveprotocol.wave.client.editor.event.EditorEvent;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentElement: org.waveprotocol.wave.client.editor.selection.content.SelectionHelper getSelectionHelper()>();

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentElement: org.waveprotocol.wave.model.document.indexed.LocationMapper getLocationMapper()>();

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentElement: org.waveprotocol.wave.client.editor.content.ContentView getRenderedContentView()>();

        $r4 = staticinvoke <org.waveprotocol.wave.model.document.util.Point: org.waveprotocol.wave.model.document.util.Point$El after(org.waveprotocol.wave.model.document.ReadableDocument,java.lang.Object)>($r3, r0);

        $i0 = interfaceinvoke $r2.<org.waveprotocol.wave.model.document.indexed.LocationMapper: int getLocation(org.waveprotocol.wave.model.document.util.Point)>($r4);

        interfaceinvoke $r1.<org.waveprotocol.wave.client.editor.selection.content.SelectionHelper: void setCaret(int)>($i0);

        return 1;
    }

    private org.waveprotocol.wave.client.editor.content.ContentElement getCaption(org.waveprotocol.wave.client.editor.content.ContentElement)
    {
        org.waveprotocol.wave.client.editor.content.ContentNode $r1;
        org.waveprotocol.wave.client.editor.examples.img.MyDoodad$CaptionedEventHandler r3;
        org.waveprotocol.wave.client.editor.content.ContentElement r0, $r2;

        r3 := @this: org.waveprotocol.wave.client.editor.examples.img.MyDoodad$CaptionedEventHandler;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentElement: org.waveprotocol.wave.client.editor.content.ContentNode getFirstChild()>();

        $r2 = (org.waveprotocol.wave.client.editor.content.ContentElement) $r1;

        return $r2;
    }
}
