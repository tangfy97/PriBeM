final class org.apache.poi.ss.formula.functions.AggregateFunction$1 extends org.apache.poi.ss.formula.functions.AggregateFunction
{
    final org.apache.poi.ss.formula.functions.AggregateFunction val$arg;

    void <init>(org.apache.poi.ss.formula.functions.AggregateFunction)
    {
        org.apache.poi.ss.formula.functions.AggregateFunction r1;
        org.apache.poi.ss.formula.functions.AggregateFunction$1 r0;

        r0 := @this: org.apache.poi.ss.formula.functions.AggregateFunction$1;

        r1 := @parameter0: org.apache.poi.ss.formula.functions.AggregateFunction;

        r0.<org.apache.poi.ss.formula.functions.AggregateFunction$1: org.apache.poi.ss.formula.functions.AggregateFunction val$arg> = r1;

        specialinvoke r0.<org.apache.poi.ss.formula.functions.AggregateFunction: void <init>()>();

        return;
    }

    protected double evaluate(double[]) throws org.apache.poi.ss.formula.eval.EvaluationException
    {
        org.apache.poi.ss.formula.functions.AggregateFunction $r2;
        org.apache.poi.ss.formula.functions.AggregateFunction$1 r0;
        double[] r1;
        double $d0;

        r0 := @this: org.apache.poi.ss.formula.functions.AggregateFunction$1;

        r1 := @parameter0: double[];

        $r2 = r0.<org.apache.poi.ss.formula.functions.AggregateFunction$1: org.apache.poi.ss.formula.functions.AggregateFunction val$arg>;

        $d0 = virtualinvoke $r2.<org.apache.poi.ss.formula.functions.AggregateFunction: double evaluate(double[])>(r1);

        return $d0;
    }

    public boolean isSubtotalCounted()
    {
        org.apache.poi.ss.formula.functions.AggregateFunction$1 r0;

        r0 := @this: org.apache.poi.ss.formula.functions.AggregateFunction$1;

        return 0;
    }
}
