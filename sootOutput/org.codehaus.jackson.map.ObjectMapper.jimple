public class org.codehaus.jackson.map.ObjectMapper extends org.codehaus.jackson.ObjectCodec implements org.codehaus.jackson.Versioned
{
    private static final org.codehaus.jackson.type.JavaType JSON_NODE_TYPE;
    protected static final org.codehaus.jackson.map.ClassIntrospector DEFAULT_INTROSPECTOR;
    protected static final org.codehaus.jackson.map.AnnotationIntrospector DEFAULT_ANNOTATION_INTROSPECTOR;
    protected static final org.codehaus.jackson.map.introspect.VisibilityChecker STD_VISIBILITY_CHECKER;
    protected final org.codehaus.jackson.JsonFactory _jsonFactory;
    protected org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver;
    protected org.codehaus.jackson.map.type.TypeFactory _typeFactory;
    protected org.codehaus.jackson.map.InjectableValues _injectableValues;
    protected org.codehaus.jackson.map.SerializationConfig _serializationConfig;
    protected org.codehaus.jackson.map.SerializerProvider _serializerProvider;
    protected org.codehaus.jackson.map.SerializerFactory _serializerFactory;
    protected org.codehaus.jackson.map.DeserializationConfig _deserializationConfig;
    protected org.codehaus.jackson.map.DeserializerProvider _deserializerProvider;
    protected final java.util.concurrent.ConcurrentHashMap _rootDeserializers;

    public void <init>()
    {
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        specialinvoke r0.<org.codehaus.jackson.map.ObjectMapper: void <init>(org.codehaus.jackson.JsonFactory,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.DeserializerProvider)>(null, null, null);

        return;
    }

    public void <init>(org.codehaus.jackson.JsonFactory)
    {
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonFactory r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.JsonFactory;

        specialinvoke r0.<org.codehaus.jackson.map.ObjectMapper: void <init>(org.codehaus.jackson.JsonFactory,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.DeserializerProvider)>(r1, null, null);

        return;
    }

    public void <init>(org.codehaus.jackson.map.SerializerFactory)
    {
        org.codehaus.jackson.map.SerializerFactory r1;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.map.SerializerFactory;

        specialinvoke r0.<org.codehaus.jackson.map.ObjectMapper: void <init>(org.codehaus.jackson.JsonFactory,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.DeserializerProvider)>(null, null, null);

        virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper setSerializerFactory(org.codehaus.jackson.map.SerializerFactory)>(r1);

        return;
    }

    public void <init>(org.codehaus.jackson.JsonFactory, org.codehaus.jackson.map.SerializerProvider, org.codehaus.jackson.map.DeserializerProvider)
    {
        org.codehaus.jackson.map.DeserializerProvider r3;
        org.codehaus.jackson.map.SerializerProvider r2;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonFactory r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.JsonFactory;

        r2 := @parameter1: org.codehaus.jackson.map.SerializerProvider;

        r3 := @parameter2: org.codehaus.jackson.map.DeserializerProvider;

        specialinvoke r0.<org.codehaus.jackson.map.ObjectMapper: void <init>(org.codehaus.jackson.JsonFactory,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.DeserializationConfig)>(r1, r2, r3, null, null);

        return;
    }

    public void <init>(org.codehaus.jackson.JsonFactory, org.codehaus.jackson.map.SerializerProvider, org.codehaus.jackson.map.DeserializerProvider, org.codehaus.jackson.map.SerializationConfig, org.codehaus.jackson.map.DeserializationConfig)
    {
        org.codehaus.jackson.map.deser.StdDeserializerProvider $r29;
        org.codehaus.jackson.map.SerializerProvider r14, $r22;
        org.codehaus.jackson.map.SerializationConfig r4, $r20, $r26;
        org.codehaus.jackson.map.DeserializationConfig r9, $r21, $r27;
        org.codehaus.jackson.map.type.TypeFactory $r5, $r10, $r19;
        org.codehaus.jackson.ObjectCodec $r3;
        org.codehaus.jackson.map.DeserializerProvider r15, $r23;
        java.util.concurrent.ConcurrentHashMap $r24;
        org.codehaus.jackson.map.ser.BeanSerializerFactory $r16;
        org.codehaus.jackson.map.AnnotationIntrospector $r7, $r12;
        org.codehaus.jackson.map.MappingJsonFactory $r25;
        org.codehaus.jackson.JsonFactory r2, $r17;
        org.codehaus.jackson.map.ser.StdSerializerProvider $r28;
        org.codehaus.jackson.map.introspect.VisibilityChecker $r6, $r11;
        org.codehaus.jackson.map.ClassIntrospector $r8, $r13;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r2 := @parameter0: org.codehaus.jackson.JsonFactory;

        r14 := @parameter1: org.codehaus.jackson.map.SerializerProvider;

        r15 := @parameter2: org.codehaus.jackson.map.DeserializerProvider;

        r4 := @parameter3: org.codehaus.jackson.map.SerializationConfig;

        r9 := @parameter4: org.codehaus.jackson.map.DeserializationConfig;

        specialinvoke r0.<org.codehaus.jackson.ObjectCodec: void <init>()>();

        $r24 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r24.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(64, 0.6F, 2);

        r0.<org.codehaus.jackson.map.ObjectMapper: java.util.concurrent.ConcurrentHashMap _rootDeserializers> = $r24;

        if r2 != null goto label01;

        $r25 = new org.codehaus.jackson.map.MappingJsonFactory;

        specialinvoke $r25.<org.codehaus.jackson.map.MappingJsonFactory: void <init>(org.codehaus.jackson.map.ObjectMapper)>(r0);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory> = $r25;

        goto label02;

     label01:
        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory> = r2;

        $r3 = virtualinvoke r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.ObjectCodec getCodec()>();

        if $r3 != null goto label02;

        $r17 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        virtualinvoke $r17.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonFactory setCodec(org.codehaus.jackson.ObjectCodec)>(r0);

     label02:
        $r19 = staticinvoke <org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.map.type.TypeFactory defaultInstance()>();

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory> = $r19;

        if r4 == null goto label03;

        $r20 = r4;

        goto label04;

     label03:
        $r26 = new org.codehaus.jackson.map.SerializationConfig;

        $r20 = $r26;

        $r8 = <org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ClassIntrospector DEFAULT_INTROSPECTOR>;

        $r7 = <org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.AnnotationIntrospector DEFAULT_ANNOTATION_INTROSPECTOR>;

        $r6 = <org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.introspect.VisibilityChecker STD_VISIBILITY_CHECKER>;

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        specialinvoke $r26.<org.codehaus.jackson.map.SerializationConfig: void <init>(org.codehaus.jackson.map.ClassIntrospector,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.jsontype.SubtypeResolver,org.codehaus.jackson.map.PropertyNamingStrategy,org.codehaus.jackson.map.type.TypeFactory,org.codehaus.jackson.map.HandlerInstantiator)>($r8, $r7, $r6, null, null, $r5, null);

     label04:
        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig> = $r20;

        if r9 == null goto label05;

        $r21 = r9;

        goto label06;

     label05:
        $r27 = new org.codehaus.jackson.map.DeserializationConfig;

        $r21 = $r27;

        $r13 = <org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ClassIntrospector DEFAULT_INTROSPECTOR>;

        $r12 = <org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.AnnotationIntrospector DEFAULT_ANNOTATION_INTROSPECTOR>;

        $r11 = <org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.introspect.VisibilityChecker STD_VISIBILITY_CHECKER>;

        $r10 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        specialinvoke $r27.<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.ClassIntrospector,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.jsontype.SubtypeResolver,org.codehaus.jackson.map.PropertyNamingStrategy,org.codehaus.jackson.map.type.TypeFactory,org.codehaus.jackson.map.HandlerInstantiator)>($r13, $r12, $r11, null, null, $r10, null);

     label06:
        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig> = $r21;

        if r14 != null goto label07;

        $r28 = new org.codehaus.jackson.map.ser.StdSerializerProvider;

        $r22 = $r28;

        specialinvoke $r28.<org.codehaus.jackson.map.ser.StdSerializerProvider: void <init>()>();

        goto label08;

     label07:
        $r22 = r14;

     label08:
        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerProvider _serializerProvider> = $r22;

        if r15 != null goto label09;

        $r29 = new org.codehaus.jackson.map.deser.StdDeserializerProvider;

        $r23 = $r29;

        specialinvoke $r29.<org.codehaus.jackson.map.deser.StdDeserializerProvider: void <init>()>();

        goto label10;

     label09:
        $r23 = r15;

     label10:
        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializerProvider _deserializerProvider> = $r23;

        $r16 = <org.codehaus.jackson.map.ser.BeanSerializerFactory: org.codehaus.jackson.map.ser.BeanSerializerFactory instance>;

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerFactory _serializerFactory> = $r16;

        return;
    }

    public org.codehaus.jackson.Version version()
    {
        java.lang.Class $r1;
        org.codehaus.jackson.Version $r2;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.codehaus.jackson.util.VersionUtil: org.codehaus.jackson.Version versionFor(java.lang.Class)>($r1);

        return $r2;
    }

    public void registerModule(org.codehaus.jackson.map.Module)
    {
        org.codehaus.jackson.map.Module r0;
        org.codehaus.jackson.Version $r2;
        java.lang.String $r1;
        org.codehaus.jackson.map.ObjectMapper$1 $r4;
        java.lang.IllegalArgumentException $r5, $r6;
        org.codehaus.jackson.map.ObjectMapper r3;

        r3 := @this: org.codehaus.jackson.map.ObjectMapper;

        r0 := @parameter0: org.codehaus.jackson.map.Module;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.Module: java.lang.String getModuleName()>();

        if $r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Module without defined name");

        throw $r6;

     label1:
        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.Module: org.codehaus.jackson.Version version()>();

        if $r2 != null goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Module without defined version");

        throw $r5;

     label2:
        $r4 = new org.codehaus.jackson.map.ObjectMapper$1;

        specialinvoke $r4.<org.codehaus.jackson.map.ObjectMapper$1: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.ObjectMapper)>(r3, r3);

        virtualinvoke r0.<org.codehaus.jackson.map.Module: void setupModule(org.codehaus.jackson.map.Module$SetupContext)>($r4);

        return;
    }

    public org.codehaus.jackson.map.ObjectMapper withModule(org.codehaus.jackson.map.Module)
    {
        org.codehaus.jackson.map.Module r1;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.map.Module;

        virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: void registerModule(org.codehaus.jackson.map.Module)>(r1);

        return r0;
    }

    public org.codehaus.jackson.map.SerializationConfig getSerializationConfig()
    {
        org.codehaus.jackson.map.SerializationConfig $r1;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig>;

        return $r1;
    }

    public org.codehaus.jackson.map.SerializationConfig copySerializationConfig()
    {
        org.codehaus.jackson.map.jsontype.SubtypeResolver $r1;
        org.codehaus.jackson.map.SerializationConfig $r2, $r3;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig>;

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver)>($r1);

        return $r3;
    }

    public org.codehaus.jackson.map.ObjectMapper setSerializationConfig(org.codehaus.jackson.map.SerializationConfig)
    {
        org.codehaus.jackson.map.SerializationConfig r1;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.map.SerializationConfig;

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig> = r1;

        return r0;
    }

    public org.codehaus.jackson.map.DeserializationConfig getDeserializationConfig()
    {
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig>;

        return $r1;
    }

    public org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig()
    {
        org.codehaus.jackson.map.jsontype.SubtypeResolver $r1;
        int $i0;
        org.codehaus.jackson.map.SerializationConfig $r4;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r2, $r3, $r5;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig>;

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver)>($r1);

        $r4 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig>;

        $i0 = $r4.<org.codehaus.jackson.map.SerializationConfig: int _featureFlags>;

        $r5 = virtualinvoke $r3.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig passSerializationFeatures(int)>($i0);

        return $r5;
    }

    public org.codehaus.jackson.map.ObjectMapper setDeserializationConfig(org.codehaus.jackson.map.DeserializationConfig)
    {
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig> = r1;

        return r0;
    }

    public org.codehaus.jackson.map.ObjectMapper setSerializerFactory(org.codehaus.jackson.map.SerializerFactory)
    {
        org.codehaus.jackson.map.SerializerFactory r1;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.map.SerializerFactory;

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerFactory _serializerFactory> = r1;

        return r0;
    }

    public org.codehaus.jackson.map.ObjectMapper setSerializerProvider(org.codehaus.jackson.map.SerializerProvider)
    {
        org.codehaus.jackson.map.SerializerProvider r1;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.map.SerializerProvider;

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerProvider _serializerProvider> = r1;

        return r0;
    }

    public org.codehaus.jackson.map.SerializerProvider getSerializerProvider()
    {
        org.codehaus.jackson.map.SerializerProvider $r1;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerProvider _serializerProvider>;

        return $r1;
    }

    public org.codehaus.jackson.map.ObjectMapper setDeserializerProvider(org.codehaus.jackson.map.DeserializerProvider)
    {
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializerProvider r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.map.DeserializerProvider;

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializerProvider _deserializerProvider> = r1;

        return r0;
    }

    public org.codehaus.jackson.map.DeserializerProvider getDeserializerProvider()
    {
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializerProvider $r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializerProvider _deserializerProvider>;

        return $r1;
    }

    public org.codehaus.jackson.map.introspect.VisibilityChecker getVisibilityChecker()
    {
        org.codehaus.jackson.map.SerializationConfig $r1;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.introspect.VisibilityChecker $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.introspect.VisibilityChecker getDefaultVisibilityChecker()>();

        return $r2;
    }

    public void setVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker)
    {
        org.codehaus.jackson.map.introspect.VisibilityChecker r1;
        org.codehaus.jackson.map.SerializationConfig $r4, $r5;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r2, $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.map.introspect.VisibilityChecker;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker)>(r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig> = $r3;

        $r4 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker)>(r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig> = $r5;

        return;
    }

    public org.codehaus.jackson.map.ObjectMapper setVisibility(org.codehaus.jackson.annotate.JsonMethod, org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)
    {
        org.codehaus.jackson.annotate.JsonAutoDetect$Visibility r2;
        org.codehaus.jackson.map.SerializationConfig $r5, $r6;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r3, $r4;
        org.codehaus.jackson.annotate.JsonMethod r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.annotate.JsonMethod;

        r2 := @parameter1: org.codehaus.jackson.annotate.JsonAutoDetect$Visibility;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)>(r1, r2);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig> = $r4;

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)>(r1, r2);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig> = $r6;

        return r0;
    }

    public org.codehaus.jackson.map.jsontype.SubtypeResolver getSubtypeResolver()
    {
        org.codehaus.jackson.map.jsontype.SubtypeResolver $r1, $r2;
        org.codehaus.jackson.map.jsontype.impl.StdSubtypeResolver $r3;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver>;

        if $r1 != null goto label1;

        $r3 = new org.codehaus.jackson.map.jsontype.impl.StdSubtypeResolver;

        specialinvoke $r3.<org.codehaus.jackson.map.jsontype.impl.StdSubtypeResolver: void <init>()>();

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver> = $r3;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver>;

        return $r2;
    }

    public void setSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver)
    {
        org.codehaus.jackson.map.jsontype.SubtypeResolver r1;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.map.jsontype.SubtypeResolver;

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver> = r1;

        return;
    }

    public org.codehaus.jackson.map.ObjectMapper setAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    {
        org.codehaus.jackson.map.SerializationConfig $r2, $r3;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r4, $r5;
        org.codehaus.jackson.map.AnnotationIntrospector r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.map.AnnotationIntrospector;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)>(r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig> = $r3;

        $r4 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)>(r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig> = $r5;

        return r0;
    }

    public org.codehaus.jackson.map.ObjectMapper setPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy)
    {
        org.codehaus.jackson.map.PropertyNamingStrategy r1;
        org.codehaus.jackson.map.SerializationConfig $r2, $r3;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r4, $r5;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.map.PropertyNamingStrategy;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy)>(r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig> = $r3;

        $r4 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy)>(r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig> = $r5;

        return r0;
    }

    public org.codehaus.jackson.map.ObjectMapper setSerializationInclusion(org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion)
    {
        org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion r1;
        org.codehaus.jackson.map.SerializationConfig $r2, $r3;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withSerializationInclusion(org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion)>(r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig> = $r3;

        return r0;
    }

    public org.codehaus.jackson.map.ObjectMapper enableDefaultTyping()
    {
        org.codehaus.jackson.map.ObjectMapper$DefaultTyping $r1;
        org.codehaus.jackson.map.ObjectMapper r0, $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 = <org.codehaus.jackson.map.ObjectMapper$DefaultTyping: org.codehaus.jackson.map.ObjectMapper$DefaultTyping OBJECT_AND_NON_CONCRETE>;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper enableDefaultTyping(org.codehaus.jackson.map.ObjectMapper$DefaultTyping)>($r1);

        return $r2;
    }

    public org.codehaus.jackson.map.ObjectMapper enableDefaultTyping(org.codehaus.jackson.map.ObjectMapper$DefaultTyping)
    {
        org.codehaus.jackson.map.ObjectMapper$DefaultTyping r1;
        org.codehaus.jackson.annotate.JsonTypeInfo$As $r2;
        org.codehaus.jackson.map.ObjectMapper r0, $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.map.ObjectMapper$DefaultTyping;

        $r2 = <org.codehaus.jackson.annotate.JsonTypeInfo$As: org.codehaus.jackson.annotate.JsonTypeInfo$As WRAPPER_ARRAY>;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper enableDefaultTyping(org.codehaus.jackson.map.ObjectMapper$DefaultTyping,org.codehaus.jackson.annotate.JsonTypeInfo$As)>(r1, $r2);

        return $r3;
    }

    public org.codehaus.jackson.map.ObjectMapper enableDefaultTyping(org.codehaus.jackson.map.ObjectMapper$DefaultTyping, org.codehaus.jackson.annotate.JsonTypeInfo$As)
    {
        org.codehaus.jackson.annotate.JsonTypeInfo$Id $r2;
        org.codehaus.jackson.map.ObjectMapper$DefaultTyping r1;
        org.codehaus.jackson.map.jsontype.TypeResolverBuilder $r3, $r5;
        org.codehaus.jackson.annotate.JsonTypeInfo$As r4;
        org.codehaus.jackson.map.ObjectMapper r6, $r7;
        org.codehaus.jackson.map.ObjectMapper$DefaultTypeResolverBuilder $r0;

        r6 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.map.ObjectMapper$DefaultTyping;

        r4 := @parameter1: org.codehaus.jackson.annotate.JsonTypeInfo$As;

        $r0 = new org.codehaus.jackson.map.ObjectMapper$DefaultTypeResolverBuilder;

        specialinvoke $r0.<org.codehaus.jackson.map.ObjectMapper$DefaultTypeResolverBuilder: void <init>(org.codehaus.jackson.map.ObjectMapper$DefaultTyping)>(r1);

        $r2 = <org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id CLASS>;

        $r3 = interfaceinvoke $r0.<org.codehaus.jackson.map.jsontype.TypeResolverBuilder: org.codehaus.jackson.map.jsontype.TypeResolverBuilder init(org.codehaus.jackson.annotate.JsonTypeInfo$Id,org.codehaus.jackson.map.jsontype.TypeIdResolver)>($r2, null);

        $r5 = interfaceinvoke $r3.<org.codehaus.jackson.map.jsontype.TypeResolverBuilder: org.codehaus.jackson.map.jsontype.TypeResolverBuilder inclusion(org.codehaus.jackson.annotate.JsonTypeInfo$As)>(r4);

        $r7 = virtualinvoke r6.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper setDefaultTyping(org.codehaus.jackson.map.jsontype.TypeResolverBuilder)>($r5);

        return $r7;
    }

    public org.codehaus.jackson.map.ObjectMapper enableDefaultTypingAsProperty(org.codehaus.jackson.map.ObjectMapper$DefaultTyping, java.lang.String)
    {
        org.codehaus.jackson.annotate.JsonTypeInfo$Id $r2;
        org.codehaus.jackson.map.ObjectMapper$DefaultTyping r1;
        org.codehaus.jackson.map.jsontype.TypeResolverBuilder $r3, $r5, $r7;
        java.lang.String r6;
        org.codehaus.jackson.annotate.JsonTypeInfo$As $r4;
        org.codehaus.jackson.map.ObjectMapper r8, $r9;
        org.codehaus.jackson.map.ObjectMapper$DefaultTypeResolverBuilder $r0;

        r8 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.map.ObjectMapper$DefaultTyping;

        r6 := @parameter1: java.lang.String;

        $r0 = new org.codehaus.jackson.map.ObjectMapper$DefaultTypeResolverBuilder;

        specialinvoke $r0.<org.codehaus.jackson.map.ObjectMapper$DefaultTypeResolverBuilder: void <init>(org.codehaus.jackson.map.ObjectMapper$DefaultTyping)>(r1);

        $r2 = <org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id CLASS>;

        $r3 = interfaceinvoke $r0.<org.codehaus.jackson.map.jsontype.TypeResolverBuilder: org.codehaus.jackson.map.jsontype.TypeResolverBuilder init(org.codehaus.jackson.annotate.JsonTypeInfo$Id,org.codehaus.jackson.map.jsontype.TypeIdResolver)>($r2, null);

        $r4 = <org.codehaus.jackson.annotate.JsonTypeInfo$As: org.codehaus.jackson.annotate.JsonTypeInfo$As PROPERTY>;

        $r5 = interfaceinvoke $r3.<org.codehaus.jackson.map.jsontype.TypeResolverBuilder: org.codehaus.jackson.map.jsontype.TypeResolverBuilder inclusion(org.codehaus.jackson.annotate.JsonTypeInfo$As)>($r4);

        $r7 = interfaceinvoke $r5.<org.codehaus.jackson.map.jsontype.TypeResolverBuilder: org.codehaus.jackson.map.jsontype.TypeResolverBuilder typeProperty(java.lang.String)>(r6);

        $r9 = virtualinvoke r8.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper setDefaultTyping(org.codehaus.jackson.map.jsontype.TypeResolverBuilder)>($r7);

        return $r9;
    }

    public org.codehaus.jackson.map.ObjectMapper disableDefaultTyping()
    {
        org.codehaus.jackson.map.ObjectMapper r0, $r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper setDefaultTyping(org.codehaus.jackson.map.jsontype.TypeResolverBuilder)>(null);

        return $r1;
    }

    public org.codehaus.jackson.map.ObjectMapper setDefaultTyping(org.codehaus.jackson.map.jsontype.TypeResolverBuilder)
    {
        org.codehaus.jackson.map.jsontype.TypeResolverBuilder r1;
        org.codehaus.jackson.map.SerializationConfig $r4, $r5;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r2, $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.map.jsontype.TypeResolverBuilder;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder)>(r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig> = $r3;

        $r4 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder)>(r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig> = $r5;

        return r0;
    }

    public transient void registerSubtypes(java.lang.Class[])
    {
        java.lang.Class[] r2;
        org.codehaus.jackson.map.jsontype.SubtypeResolver $r1;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r2 := @parameter0: java.lang.Class[];

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.jsontype.SubtypeResolver getSubtypeResolver()>();

        virtualinvoke $r1.<org.codehaus.jackson.map.jsontype.SubtypeResolver: void registerSubtypes(java.lang.Class[])>(r2);

        return;
    }

    public transient void registerSubtypes(org.codehaus.jackson.map.jsontype.NamedType[])
    {
        org.codehaus.jackson.map.jsontype.NamedType[] r2;
        org.codehaus.jackson.map.jsontype.SubtypeResolver $r1;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r2 := @parameter0: org.codehaus.jackson.map.jsontype.NamedType[];

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.jsontype.SubtypeResolver getSubtypeResolver()>();

        virtualinvoke $r1.<org.codehaus.jackson.map.jsontype.SubtypeResolver: void registerSubtypes(org.codehaus.jackson.map.jsontype.NamedType[])>(r2);

        return;
    }

    public org.codehaus.jackson.map.type.TypeFactory getTypeFactory()
    {
        org.codehaus.jackson.map.type.TypeFactory $r1;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        return $r1;
    }

    public org.codehaus.jackson.map.ObjectMapper setTypeFactory(org.codehaus.jackson.map.type.TypeFactory)
    {
        org.codehaus.jackson.map.type.TypeFactory r1;
        org.codehaus.jackson.map.SerializationConfig $r4, $r5;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r2, $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.map.type.TypeFactory;

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory> = r1;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withTypeFactory(org.codehaus.jackson.map.type.TypeFactory)>(r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig> = $r3;

        $r4 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withTypeFactory(org.codehaus.jackson.map.type.TypeFactory)>(r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig> = $r5;

        return r0;
    }

    public org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)
    {
        org.codehaus.jackson.map.type.TypeFactory $r2;
        java.lang.reflect.Type r1;
        org.codehaus.jackson.type.JavaType $r3;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.lang.reflect.Type;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>(r1);

        return $r3;
    }

    public org.codehaus.jackson.map.ObjectMapper setNodeFactory(org.codehaus.jackson.node.JsonNodeFactory)
    {
        org.codehaus.jackson.node.JsonNodeFactory r1;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r2, $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.node.JsonNodeFactory;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withNodeFactory(org.codehaus.jackson.node.JsonNodeFactory)>(r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig> = $r3;

        return r0;
    }

    public void setFilters(org.codehaus.jackson.map.ser.FilterProvider)
    {
        org.codehaus.jackson.map.ser.FilterProvider r1;
        org.codehaus.jackson.map.SerializationConfig $r2, $r3;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.map.ser.FilterProvider;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withFilters(org.codehaus.jackson.map.ser.FilterProvider)>(r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig> = $r3;

        return;
    }

    public org.codehaus.jackson.JsonFactory getJsonFactory()
    {
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonFactory $r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        return $r1;
    }

    public void setDateFormat(java.text.DateFormat)
    {
        org.codehaus.jackson.map.SerializationConfig $r4, $r5;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r2, $r3;
        java.text.DateFormat r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.text.DateFormat;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withDateFormat(java.text.DateFormat)>(r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig> = $r3;

        $r4 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withDateFormat(java.text.DateFormat)>(r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig> = $r5;

        return;
    }

    public void setHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator)
    {
        org.codehaus.jackson.map.HandlerInstantiator r1;
        org.codehaus.jackson.map.SerializationConfig $r4, $r5;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r2, $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.map.HandlerInstantiator;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator)>(r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig> = $r3;

        $r4 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator)>(r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig> = $r5;

        return;
    }

    public org.codehaus.jackson.map.ObjectMapper setInjectableValues(org.codehaus.jackson.map.InjectableValues)
    {
        org.codehaus.jackson.map.InjectableValues r1;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.map.InjectableValues;

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.InjectableValues _injectableValues> = r1;

        return r0;
    }

    public org.codehaus.jackson.map.ObjectMapper configure(org.codehaus.jackson.map.SerializationConfig$Feature, boolean)
    {
        org.codehaus.jackson.map.SerializationConfig $r2;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.SerializationConfig$Feature r1;
        boolean z0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.map.SerializationConfig$Feature;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig>;

        virtualinvoke $r2.<org.codehaus.jackson.map.SerializationConfig: void set(org.codehaus.jackson.map.SerializationConfig$Feature,boolean)>(r1, z0);

        return r0;
    }

    public org.codehaus.jackson.map.ObjectMapper configure(org.codehaus.jackson.map.DeserializationConfig$Feature, boolean)
    {
        org.codehaus.jackson.map.DeserializationConfig$Feature r1;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r2;
        boolean z0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig$Feature;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig>;

        virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationConfig: void set(org.codehaus.jackson.map.DeserializationConfig$Feature,boolean)>(r1, z0);

        return r0;
    }

    public org.codehaus.jackson.map.ObjectMapper configure(org.codehaus.jackson.JsonParser$Feature, boolean)
    {
        org.codehaus.jackson.JsonParser$Feature r1;
        org.codehaus.jackson.map.ObjectMapper r0;
        boolean z0;
        org.codehaus.jackson.JsonFactory $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.JsonParser$Feature;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonFactory configure(org.codehaus.jackson.JsonParser$Feature,boolean)>(r1, z0);

        return r0;
    }

    public org.codehaus.jackson.map.ObjectMapper configure(org.codehaus.jackson.JsonGenerator$Feature, boolean)
    {
        org.codehaus.jackson.JsonGenerator$Feature r1;
        org.codehaus.jackson.map.ObjectMapper r0;
        boolean z0;
        org.codehaus.jackson.JsonFactory $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.JsonGenerator$Feature;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonFactory configure(org.codehaus.jackson.JsonGenerator$Feature,boolean)>(r1, z0);

        return r0;
    }

    public transient org.codehaus.jackson.map.ObjectMapper enable(org.codehaus.jackson.map.DeserializationConfig$Feature[])
    {
        org.codehaus.jackson.map.DeserializationConfig$Feature[] r1;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r2, $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig$Feature[];

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig 'with'(org.codehaus.jackson.map.DeserializationConfig$Feature[])>(r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig> = $r3;

        return r0;
    }

    public transient org.codehaus.jackson.map.ObjectMapper disable(org.codehaus.jackson.map.DeserializationConfig$Feature[])
    {
        org.codehaus.jackson.map.DeserializationConfig$Feature[] r1;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r2, $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig$Feature[];

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig without(org.codehaus.jackson.map.DeserializationConfig$Feature[])>(r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig> = $r3;

        return r0;
    }

    public transient org.codehaus.jackson.map.ObjectMapper enable(org.codehaus.jackson.map.SerializationConfig$Feature[])
    {
        org.codehaus.jackson.map.SerializationConfig $r2, $r3;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.SerializationConfig$Feature[] r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.map.SerializationConfig$Feature[];

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig 'with'(org.codehaus.jackson.map.SerializationConfig$Feature[])>(r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig> = $r3;

        return r0;
    }

    public transient org.codehaus.jackson.map.ObjectMapper disable(org.codehaus.jackson.map.SerializationConfig$Feature[])
    {
        org.codehaus.jackson.map.SerializationConfig $r2, $r3;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.SerializationConfig$Feature[] r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.map.SerializationConfig$Feature[];

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig without(org.codehaus.jackson.map.SerializationConfig$Feature[])>(r1);

        r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig> = $r3;

        return r0;
    }

    public boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)
    {
        org.codehaus.jackson.map.SerializationConfig $r2;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.SerializationConfig$Feature r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.map.SerializationConfig$Feature;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig>;

        $z0 = virtualinvoke $r2.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>(r1);

        return $z0;
    }

    public boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)
    {
        org.codehaus.jackson.map.DeserializationConfig$Feature r1;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig$Feature;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig>;

        $z0 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>(r1);

        return $z0;
    }

    public boolean isEnabled(org.codehaus.jackson.JsonParser$Feature)
    {
        org.codehaus.jackson.JsonParser$Feature r1;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonFactory $r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.JsonParser$Feature;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $z0 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: boolean isEnabled(org.codehaus.jackson.JsonParser$Feature)>(r1);

        return $z0;
    }

    public boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature)
    {
        org.codehaus.jackson.JsonGenerator$Feature r1;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonFactory $r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.JsonGenerator$Feature;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $z0 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature)>(r1);

        return $z0;
    }

    public org.codehaus.jackson.node.JsonNodeFactory getNodeFactory()
    {
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.node.JsonNodeFactory $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.node.JsonNodeFactory getNodeFactory()>();

        return $r2;
    }

    public java.lang.Object readValue(org.codehaus.jackson.JsonParser, java.lang.Class) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.type.TypeFactory $r4;
        org.codehaus.jackson.type.JavaType $r5;
        java.lang.Class r3;
        java.lang.Object $r6;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.JsonParser r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r2 := @parameter0: org.codehaus.jackson.JsonParser;

        r3 := @parameter1: java.lang.Class;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig()>();

        $r4 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>(r3);

        $r6 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readValue(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r1, r2, $r5);

        return $r6;
    }

    public java.lang.Object readValue(org.codehaus.jackson.JsonParser, org.codehaus.jackson.type.TypeReference) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.type.TypeFactory $r4;
        org.codehaus.jackson.type.TypeReference r3;
        org.codehaus.jackson.type.JavaType $r5;
        java.lang.Object $r6;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.JsonParser r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r2 := @parameter0: org.codehaus.jackson.JsonParser;

        r3 := @parameter1: org.codehaus.jackson.type.TypeReference;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig()>();

        $r4 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference)>(r3);

        $r6 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readValue(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r1, r2, $r5);

        return $r6;
    }

    public java.lang.Object readValue(org.codehaus.jackson.JsonParser, org.codehaus.jackson.type.JavaType) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.type.JavaType r3;
        java.lang.Object $r4;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.JsonParser r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r2 := @parameter0: org.codehaus.jackson.JsonParser;

        r3 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig()>();

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readValue(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r1, r2, r3);

        return $r4;
    }

    public org.codehaus.jackson.JsonNode readTree(org.codehaus.jackson.JsonParser) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.JsonToken $r3, $r7;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.JsonNode $r8, $r9;
        org.codehaus.jackson.node.JsonNodeFactory $r6;
        org.codehaus.jackson.type.JavaType $r4;
        java.lang.Object $r5;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r2 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig()>();

        $r3 = virtualinvoke r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        if $r3 != null goto label1;

        $r7 = virtualinvoke r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        if $r7 != null goto label1;

        return null;

     label1:
        $r4 = <org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.type.JavaType JSON_NODE_TYPE>;

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readValue(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r1, r2, $r4);

        $r8 = (org.codehaus.jackson.JsonNode) $r5;

        if $r8 != null goto label2;

        $r6 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.node.JsonNodeFactory getNodeFactory()>();

        $r9 = virtualinvoke $r6.<org.codehaus.jackson.node.JsonNodeFactory: org.codehaus.jackson.node.NullNode nullNode()>();

        goto label3;

     label2:
        $r9 = $r8;

     label3:
        return $r9;
    }

    public org.codehaus.jackson.map.MappingIterator readValues(org.codehaus.jackson.JsonParser, org.codehaus.jackson.type.JavaType) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.type.JavaType r4;
        org.codehaus.jackson.map.JsonDeserializer $r5;
        org.codehaus.jackson.map.MappingIterator $r6;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.JsonParser r2;
        org.codehaus.jackson.map.DeserializationContext $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r2 := @parameter0: org.codehaus.jackson.JsonParser;

        r4 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig()>();

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationContext _createDeserializationContext(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationConfig)>(r2, $r1);

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.JsonDeserializer _findRootDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>($r1, r4);

        $r6 = new org.codehaus.jackson.map.MappingIterator;

        specialinvoke $r6.<org.codehaus.jackson.map.MappingIterator: void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.JsonDeserializer,boolean,java.lang.Object)>(r4, r2, $r3, $r5, 0, null);

        return $r6;
    }

    public org.codehaus.jackson.map.MappingIterator readValues(org.codehaus.jackson.JsonParser, java.lang.Class) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.type.TypeFactory $r3;
        org.codehaus.jackson.type.JavaType $r4;
        java.lang.Class r2;
        org.codehaus.jackson.map.MappingIterator $r5;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.JsonParser;

        r2 := @parameter1: java.lang.Class;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>(r2);

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.MappingIterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>(r1, $r4);

        return $r5;
    }

    public org.codehaus.jackson.map.MappingIterator readValues(org.codehaus.jackson.JsonParser, org.codehaus.jackson.type.TypeReference) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.type.TypeFactory $r3;
        org.codehaus.jackson.type.TypeReference r2;
        org.codehaus.jackson.type.JavaType $r4;
        org.codehaus.jackson.map.MappingIterator $r5;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.JsonParser;

        r2 := @parameter1: org.codehaus.jackson.type.TypeReference;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference)>(r2);

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.MappingIterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>(r1, $r4);

        return $r5;
    }

    public java.lang.Object readValue(org.codehaus.jackson.JsonParser, java.lang.Class, org.codehaus.jackson.map.DeserializationConfig) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.type.TypeFactory $r4;
        org.codehaus.jackson.type.JavaType $r5;
        java.lang.Class r3;
        java.lang.Object $r6;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig r1;
        org.codehaus.jackson.JsonParser r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r2 := @parameter0: org.codehaus.jackson.JsonParser;

        r3 := @parameter1: java.lang.Class;

        r1 := @parameter2: org.codehaus.jackson.map.DeserializationConfig;

        $r4 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>(r3);

        $r6 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readValue(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>(r1, r2, $r5);

        return $r6;
    }

    public java.lang.Object readValue(org.codehaus.jackson.JsonParser, org.codehaus.jackson.type.TypeReference, org.codehaus.jackson.map.DeserializationConfig) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.type.TypeFactory $r4;
        org.codehaus.jackson.type.TypeReference r3;
        org.codehaus.jackson.type.JavaType $r5;
        java.lang.Object $r6;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig r1;
        org.codehaus.jackson.JsonParser r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r2 := @parameter0: org.codehaus.jackson.JsonParser;

        r3 := @parameter1: org.codehaus.jackson.type.TypeReference;

        r1 := @parameter2: org.codehaus.jackson.map.DeserializationConfig;

        $r4 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference)>(r3);

        $r6 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readValue(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>(r1, r2, $r5);

        return $r6;
    }

    public java.lang.Object readValue(org.codehaus.jackson.JsonParser, org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.DeserializationConfig) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.type.JavaType r3;
        java.lang.Object $r4;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig r1;
        org.codehaus.jackson.JsonParser r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r2 := @parameter0: org.codehaus.jackson.JsonParser;

        r3 := @parameter1: org.codehaus.jackson.type.JavaType;

        r1 := @parameter2: org.codehaus.jackson.map.DeserializationConfig;

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readValue(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>(r1, r2, r3);

        return $r4;
    }

    public org.codehaus.jackson.JsonNode readTree(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationConfig) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.type.JavaType $r3;
        java.lang.Object $r4;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig r1;
        org.codehaus.jackson.JsonNode r5, $r6;
        org.codehaus.jackson.JsonParser r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r2 := @parameter0: org.codehaus.jackson.JsonParser;

        r1 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        $r3 = <org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.type.JavaType JSON_NODE_TYPE>;

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readValue(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>(r1, r2, $r3);

        r5 = (org.codehaus.jackson.JsonNode) $r4;

        if r5 != null goto label1;

        $r6 = <org.codehaus.jackson.node.NullNode: org.codehaus.jackson.node.NullNode instance>;

        goto label2;

     label1:
        $r6 = r5;

     label2:
        return $r6;
    }

    public org.codehaus.jackson.JsonNode readTree(java.io.InputStream) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.JsonNode r6, $r7;
        org.codehaus.jackson.JsonFactory $r2;
        org.codehaus.jackson.type.JavaType $r4;
        java.lang.Object $r5;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r3;
        java.io.InputStream r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.io.InputStream;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.InputStream)>(r1);

        $r4 = <org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.type.JavaType JSON_NODE_TYPE>;

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r3, $r4);

        r6 = (org.codehaus.jackson.JsonNode) $r5;

        if r6 != null goto label1;

        $r7 = <org.codehaus.jackson.node.NullNode: org.codehaus.jackson.node.NullNode instance>;

        goto label2;

     label1:
        $r7 = r6;

     label2:
        return $r7;
    }

    public org.codehaus.jackson.JsonNode readTree(java.io.Reader) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        java.io.Reader r1;
        org.codehaus.jackson.JsonNode r6, $r7;
        org.codehaus.jackson.JsonFactory $r2;
        org.codehaus.jackson.type.JavaType $r4;
        java.lang.Object $r5;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.io.Reader;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.Reader)>(r1);

        $r4 = <org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.type.JavaType JSON_NODE_TYPE>;

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r3, $r4);

        r6 = (org.codehaus.jackson.JsonNode) $r5;

        if r6 != null goto label1;

        $r7 = <org.codehaus.jackson.node.NullNode: org.codehaus.jackson.node.NullNode instance>;

        goto label2;

     label1:
        $r7 = r6;

     label2:
        return $r7;
    }

    public org.codehaus.jackson.JsonNode readTree(java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.JsonNode r6, $r7;
        org.codehaus.jackson.JsonFactory $r2;
        org.codehaus.jackson.type.JavaType $r4;
        java.lang.Object $r5;
        java.lang.String r1;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.lang.String)>(r1);

        $r4 = <org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.type.JavaType JSON_NODE_TYPE>;

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r3, $r4);

        r6 = (org.codehaus.jackson.JsonNode) $r5;

        if r6 != null goto label1;

        $r7 = <org.codehaus.jackson.node.NullNode: org.codehaus.jackson.node.NullNode instance>;

        goto label2;

     label1:
        $r7 = r6;

     label2:
        return $r7;
    }

    public org.codehaus.jackson.JsonNode readTree(byte[]) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        byte[] r1;
        org.codehaus.jackson.JsonNode r6, $r7;
        org.codehaus.jackson.JsonFactory $r2;
        org.codehaus.jackson.type.JavaType $r4;
        java.lang.Object $r5;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: byte[];

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(byte[])>(r1);

        $r4 = <org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.type.JavaType JSON_NODE_TYPE>;

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r3, $r4);

        r6 = (org.codehaus.jackson.JsonNode) $r5;

        if r6 != null goto label1;

        $r7 = <org.codehaus.jackson.node.NullNode: org.codehaus.jackson.node.NullNode instance>;

        goto label2;

     label1:
        $r7 = r6;

     label2:
        return $r7;
    }

    public org.codehaus.jackson.JsonNode readTree(java.io.File) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.JsonNode r6, $r7;
        java.io.File r1;
        org.codehaus.jackson.JsonFactory $r2;
        org.codehaus.jackson.type.JavaType $r4;
        java.lang.Object $r5;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.io.File;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.File)>(r1);

        $r4 = <org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.type.JavaType JSON_NODE_TYPE>;

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r3, $r4);

        r6 = (org.codehaus.jackson.JsonNode) $r5;

        if r6 != null goto label1;

        $r7 = <org.codehaus.jackson.node.NullNode: org.codehaus.jackson.node.NullNode instance>;

        goto label2;

     label1:
        $r7 = r6;

     label2:
        return $r7;
    }

    public org.codehaus.jackson.JsonNode readTree(java.net.URL) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        java.net.URL r1;
        org.codehaus.jackson.JsonNode r6, $r7;
        org.codehaus.jackson.JsonFactory $r2;
        org.codehaus.jackson.type.JavaType $r4;
        java.lang.Object $r5;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.net.URL;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.net.URL)>(r1);

        $r4 = <org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.type.JavaType JSON_NODE_TYPE>;

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r3, $r4);

        r6 = (org.codehaus.jackson.JsonNode) $r5;

        if r6 != null goto label1;

        $r7 = <org.codehaus.jackson.node.NullNode: org.codehaus.jackson.node.NullNode instance>;

        goto label2;

     label1:
        $r7 = r6;

     label2:
        return $r7;
    }

    public void writeValue(org.codehaus.jackson.JsonGenerator, java.lang.Object) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.SerializerFactory $r5;
        org.codehaus.jackson.map.SerializerProvider $r6;
        org.codehaus.jackson.map.SerializationConfig $r1;
        org.codehaus.jackson.JsonGenerator r3;
        java.lang.Object r4;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.SerializationConfig$Feature $r2, $r7;
        boolean $z0, $z1, $z2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r3 := @parameter0: org.codehaus.jackson.JsonGenerator;

        r4 := @parameter1: java.lang.Object;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig copySerializationConfig()>();

        $r2 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature CLOSE_CLOSEABLE>;

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r2);

        if $z0 == 0 goto label1;

        $z2 = r4 instanceof java.io.Closeable;

        if $z2 == 0 goto label1;

        specialinvoke r0.<org.codehaus.jackson.map.ObjectMapper: void _writeCloseableValue(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig)>(r3, r4, $r1);

        goto label2;

     label1:
        $r6 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerProvider _serializerProvider>;

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerFactory _serializerFactory>;

        virtualinvoke $r6.<org.codehaus.jackson.map.SerializerProvider: void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory)>($r1, r3, r4, $r5);

        $r7 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature FLUSH_AFTER_WRITE_VALUE>;

        $z1 = virtualinvoke $r1.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r7);

        if $z1 == 0 goto label2;

        virtualinvoke r3.<org.codehaus.jackson.JsonGenerator: void flush()>();

     label2:
        return;
    }

    public void writeValue(org.codehaus.jackson.JsonGenerator, java.lang.Object, org.codehaus.jackson.map.SerializationConfig) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.SerializerFactory $r5;
        org.codehaus.jackson.map.SerializerProvider $r6;
        org.codehaus.jackson.map.SerializationConfig r0;
        org.codehaus.jackson.JsonGenerator r3;
        java.lang.Object r4;
        org.codehaus.jackson.map.ObjectMapper r2;
        org.codehaus.jackson.map.SerializationConfig$Feature $r1, $r7;
        boolean $z0, $z1, $z2;

        r2 := @this: org.codehaus.jackson.map.ObjectMapper;

        r3 := @parameter0: org.codehaus.jackson.JsonGenerator;

        r4 := @parameter1: java.lang.Object;

        r0 := @parameter2: org.codehaus.jackson.map.SerializationConfig;

        $r1 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature CLOSE_CLOSEABLE>;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r1);

        if $z0 == 0 goto label1;

        $z2 = r4 instanceof java.io.Closeable;

        if $z2 == 0 goto label1;

        specialinvoke r2.<org.codehaus.jackson.map.ObjectMapper: void _writeCloseableValue(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig)>(r3, r4, r0);

        goto label2;

     label1:
        $r6 = r2.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerProvider _serializerProvider>;

        $r5 = r2.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerFactory _serializerFactory>;

        virtualinvoke $r6.<org.codehaus.jackson.map.SerializerProvider: void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory)>(r0, r3, r4, $r5);

        $r7 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature FLUSH_AFTER_WRITE_VALUE>;

        $z1 = virtualinvoke r0.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r7);

        if $z1 == 0 goto label2;

        virtualinvoke r3.<org.codehaus.jackson.JsonGenerator: void flush()>();

     label2:
        return;
    }

    public void writeTree(org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.JsonNode) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.SerializerFactory $r4;
        org.codehaus.jackson.map.SerializerProvider $r5;
        org.codehaus.jackson.map.SerializationConfig $r1;
        org.codehaus.jackson.JsonNode r3;
        org.codehaus.jackson.JsonGenerator r2;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.SerializationConfig$Feature $r6;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r2 := @parameter0: org.codehaus.jackson.JsonGenerator;

        r3 := @parameter1: org.codehaus.jackson.JsonNode;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig copySerializationConfig()>();

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerProvider _serializerProvider>;

        $r4 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerFactory _serializerFactory>;

        virtualinvoke $r5.<org.codehaus.jackson.map.SerializerProvider: void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory)>($r1, r2, r3, $r4);

        $r6 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature FLUSH_AFTER_WRITE_VALUE>;

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r6);

        if $z0 == 0 goto label1;

        virtualinvoke r2.<org.codehaus.jackson.JsonGenerator: void flush()>();

     label1:
        return;
    }

    public void writeTree(org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.JsonNode, org.codehaus.jackson.map.SerializationConfig) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.SerializerFactory $r4;
        org.codehaus.jackson.map.SerializerProvider $r5;
        org.codehaus.jackson.map.SerializationConfig r1;
        org.codehaus.jackson.JsonNode r3;
        org.codehaus.jackson.JsonGenerator r2;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.SerializationConfig$Feature $r6;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r2 := @parameter0: org.codehaus.jackson.JsonGenerator;

        r3 := @parameter1: org.codehaus.jackson.JsonNode;

        r1 := @parameter2: org.codehaus.jackson.map.SerializationConfig;

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerProvider _serializerProvider>;

        $r4 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerFactory _serializerFactory>;

        virtualinvoke $r5.<org.codehaus.jackson.map.SerializerProvider: void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory)>(r1, r2, r3, $r4);

        $r6 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature FLUSH_AFTER_WRITE_VALUE>;

        $z0 = virtualinvoke r1.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r6);

        if $z0 == 0 goto label1;

        virtualinvoke r2.<org.codehaus.jackson.JsonGenerator: void flush()>();

     label1:
        return;
    }

    public org.codehaus.jackson.node.ObjectNode createObjectNode()
    {
        org.codehaus.jackson.node.JsonNodeFactory $r2;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.node.ObjectNode $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.node.JsonNodeFactory getNodeFactory()>();

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.node.JsonNodeFactory: org.codehaus.jackson.node.ObjectNode objectNode()>();

        return $r3;
    }

    public org.codehaus.jackson.node.ArrayNode createArrayNode()
    {
        org.codehaus.jackson.node.ArrayNode $r3;
        org.codehaus.jackson.node.JsonNodeFactory $r2;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.node.JsonNodeFactory getNodeFactory()>();

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.node.JsonNodeFactory: org.codehaus.jackson.node.ArrayNode arrayNode()>();

        return $r3;
    }

    public org.codehaus.jackson.JsonParser treeAsTokens(org.codehaus.jackson.JsonNode)
    {
        org.codehaus.jackson.node.TreeTraversingParser $r0;
        org.codehaus.jackson.JsonNode r1;
        org.codehaus.jackson.map.ObjectMapper r2;

        r2 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.JsonNode;

        $r0 = new org.codehaus.jackson.node.TreeTraversingParser;

        specialinvoke $r0.<org.codehaus.jackson.node.TreeTraversingParser: void <init>(org.codehaus.jackson.JsonNode,org.codehaus.jackson.ObjectCodec)>(r1, r2);

        return $r0;
    }

    public java.lang.Object treeToValue(org.codehaus.jackson.JsonNode, java.lang.Class) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        java.lang.Class r3;
        java.lang.Object $r4;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonNode r1;
        org.codehaus.jackson.JsonParser $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.JsonNode;

        r3 := @parameter1: java.lang.Class;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonParser treeAsTokens(org.codehaus.jackson.JsonNode)>(r1);

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(org.codehaus.jackson.JsonParser,java.lang.Class)>($r2, r3);

        return $r4;
    }

    public org.codehaus.jackson.JsonNode valueToTree(java.lang.Object) throws java.lang.IllegalArgumentException
    {
        org.codehaus.jackson.util.TokenBuffer $r1;
        java.io.IOException $r5;
        java.lang.IllegalArgumentException $r6;
        org.codehaus.jackson.JsonNode $r4;
        java.lang.Object r0;
        java.lang.String $r7;
        org.codehaus.jackson.map.ObjectMapper r2;
        org.codehaus.jackson.JsonParser $r3;

        r2 := @this: org.codehaus.jackson.map.ObjectMapper;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new org.codehaus.jackson.util.TokenBuffer;

        specialinvoke $r1.<org.codehaus.jackson.util.TokenBuffer: void <init>(org.codehaus.jackson.ObjectCodec)>(r2);

     label2:
        virtualinvoke r2.<org.codehaus.jackson.map.ObjectMapper: void writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)>($r1, r0);

        $r3 = virtualinvoke $r1.<org.codehaus.jackson.util.TokenBuffer: org.codehaus.jackson.JsonParser asParser()>();

        $r4 = virtualinvoke r2.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonNode readTree(org.codehaus.jackson.JsonParser)>($r3);

        virtualinvoke $r3.<org.codehaus.jackson.JsonParser: void close()>();

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = virtualinvoke $r5.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r5);

        throw $r6;

     label5:
        return $r4;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public boolean canSerialize(java.lang.Class)
    {
        org.codehaus.jackson.map.SerializerFactory $r4;
        org.codehaus.jackson.map.SerializerProvider $r1;
        java.lang.Class r3;
        org.codehaus.jackson.map.SerializationConfig $r2;
        org.codehaus.jackson.map.ObjectMapper r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r3 := @parameter0: java.lang.Class;

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerProvider _serializerProvider>;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig copySerializationConfig()>();

        $r4 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerFactory _serializerFactory>;

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.map.SerializerProvider: boolean hasSerializerFor(org.codehaus.jackson.map.SerializationConfig,java.lang.Class,org.codehaus.jackson.map.SerializerFactory)>($r2, r3, $r4);

        return $z0;
    }

    public boolean canDeserialize(org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.DeserializerProvider $r1;
        org.codehaus.jackson.type.JavaType r3;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r3 := @parameter0: org.codehaus.jackson.type.JavaType;

        $r1 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializerProvider _deserializerProvider>;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig()>();

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializerProvider: boolean hasValueDeserializerFor(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>($r2, r3);

        return $z0;
    }

    public java.lang.Object readValue(java.io.File, java.lang.Class) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        java.io.File r1;
        org.codehaus.jackson.JsonFactory $r2;
        org.codehaus.jackson.map.type.TypeFactory $r5;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.Class r4;
        java.lang.Object $r7;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.io.File;

        r4 := @parameter1: java.lang.Class;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.File)>(r1);

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>(r4);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r3, $r6);

        return $r7;
    }

    public java.lang.Object readValue(java.io.File, org.codehaus.jackson.type.TypeReference) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        java.io.File r1;
        org.codehaus.jackson.JsonFactory $r2;
        org.codehaus.jackson.map.type.TypeFactory $r5;
        org.codehaus.jackson.type.TypeReference r4;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.Object $r7;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.io.File;

        r4 := @parameter1: org.codehaus.jackson.type.TypeReference;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.File)>(r1);

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference)>(r4);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r3, $r6);

        return $r7;
    }

    public java.lang.Object readValue(java.io.File, org.codehaus.jackson.type.JavaType) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.type.JavaType r4;
        java.lang.Object $r5;
        org.codehaus.jackson.map.ObjectMapper r0;
        java.io.File r1;
        org.codehaus.jackson.JsonParser $r3;
        org.codehaus.jackson.JsonFactory $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.io.File;

        r4 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.File)>(r1);

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r3, r4);

        return $r5;
    }

    public java.lang.Object readValue(java.net.URL, java.lang.Class) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        java.net.URL r1;
        org.codehaus.jackson.JsonFactory $r2;
        org.codehaus.jackson.map.type.TypeFactory $r5;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.Class r4;
        java.lang.Object $r7;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.net.URL;

        r4 := @parameter1: java.lang.Class;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.net.URL)>(r1);

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>(r4);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r3, $r6);

        return $r7;
    }

    public java.lang.Object readValue(java.net.URL, org.codehaus.jackson.type.TypeReference) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        java.net.URL r1;
        org.codehaus.jackson.JsonFactory $r2;
        org.codehaus.jackson.map.type.TypeFactory $r5;
        org.codehaus.jackson.type.TypeReference r4;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.Object $r7;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.net.URL;

        r4 := @parameter1: org.codehaus.jackson.type.TypeReference;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.net.URL)>(r1);

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference)>(r4);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r3, $r6);

        return $r7;
    }

    public java.lang.Object readValue(java.net.URL, org.codehaus.jackson.type.JavaType) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        java.net.URL r1;
        org.codehaus.jackson.type.JavaType r4;
        java.lang.Object $r5;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r3;
        org.codehaus.jackson.JsonFactory $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.net.URL;

        r4 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.net.URL)>(r1);

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r3, r4);

        return $r5;
    }

    public java.lang.Object readValue(java.lang.String, java.lang.Class) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.JsonFactory $r2;
        org.codehaus.jackson.map.type.TypeFactory $r5;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.Class r4;
        java.lang.Object $r7;
        java.lang.String r1;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Class;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.lang.String)>(r1);

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>(r4);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r3, $r6);

        return $r7;
    }

    public java.lang.Object readValue(java.lang.String, org.codehaus.jackson.type.TypeReference) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.JsonFactory $r2;
        org.codehaus.jackson.map.type.TypeFactory $r5;
        org.codehaus.jackson.type.TypeReference r4;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.Object $r7;
        java.lang.String r1;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: org.codehaus.jackson.type.TypeReference;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.lang.String)>(r1);

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference)>(r4);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r3, $r6);

        return $r7;
    }

    public java.lang.Object readValue(java.lang.String, org.codehaus.jackson.type.JavaType) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.type.JavaType r4;
        java.lang.Object $r5;
        java.lang.String r1;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r3;
        org.codehaus.jackson.JsonFactory $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.lang.String)>(r1);

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r3, r4);

        return $r5;
    }

    public java.lang.Object readValue(java.io.Reader, java.lang.Class) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        java.io.Reader r1;
        org.codehaus.jackson.JsonFactory $r2;
        org.codehaus.jackson.map.type.TypeFactory $r5;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.Class r4;
        java.lang.Object $r7;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.io.Reader;

        r4 := @parameter1: java.lang.Class;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.Reader)>(r1);

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>(r4);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r3, $r6);

        return $r7;
    }

    public java.lang.Object readValue(java.io.Reader, org.codehaus.jackson.type.TypeReference) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        java.io.Reader r1;
        org.codehaus.jackson.JsonFactory $r2;
        org.codehaus.jackson.map.type.TypeFactory $r5;
        org.codehaus.jackson.type.TypeReference r4;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.Object $r7;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.io.Reader;

        r4 := @parameter1: org.codehaus.jackson.type.TypeReference;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.Reader)>(r1);

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference)>(r4);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r3, $r6);

        return $r7;
    }

    public java.lang.Object readValue(java.io.Reader, org.codehaus.jackson.type.JavaType) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.type.JavaType r4;
        java.lang.Object $r5;
        java.io.Reader r1;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r3;
        org.codehaus.jackson.JsonFactory $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.io.Reader;

        r4 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.Reader)>(r1);

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r3, r4);

        return $r5;
    }

    public java.lang.Object readValue(java.io.InputStream, java.lang.Class) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.JsonFactory $r2;
        org.codehaus.jackson.map.type.TypeFactory $r5;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.Class r4;
        java.lang.Object $r7;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r3;
        java.io.InputStream r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.io.InputStream;

        r4 := @parameter1: java.lang.Class;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.InputStream)>(r1);

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>(r4);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r3, $r6);

        return $r7;
    }

    public java.lang.Object readValue(java.io.InputStream, org.codehaus.jackson.type.TypeReference) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.JsonFactory $r2;
        org.codehaus.jackson.map.type.TypeFactory $r5;
        org.codehaus.jackson.type.TypeReference r4;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.Object $r7;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r3;
        java.io.InputStream r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.io.InputStream;

        r4 := @parameter1: org.codehaus.jackson.type.TypeReference;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.InputStream)>(r1);

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference)>(r4);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r3, $r6);

        return $r7;
    }

    public java.lang.Object readValue(java.io.InputStream, org.codehaus.jackson.type.JavaType) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.type.JavaType r4;
        java.lang.Object $r5;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r3;
        java.io.InputStream r1;
        org.codehaus.jackson.JsonFactory $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.io.InputStream;

        r4 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.InputStream)>(r1);

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r3, r4);

        return $r5;
    }

    public java.lang.Object readValue(byte[], java.lang.Class) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        byte[] r1;
        org.codehaus.jackson.JsonFactory $r2;
        org.codehaus.jackson.map.type.TypeFactory $r5;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.Class r4;
        java.lang.Object $r7;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: byte[];

        r4 := @parameter1: java.lang.Class;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(byte[])>(r1);

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>(r4);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r3, $r6);

        return $r7;
    }

    public java.lang.Object readValue(byte[], int, int, java.lang.Class) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        byte[] r1;
        org.codehaus.jackson.JsonFactory $r2;
        org.codehaus.jackson.map.type.TypeFactory $r5;
        int i0, i1;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.Class r4;
        java.lang.Object $r7;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r4 := @parameter3: java.lang.Class;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(byte[],int,int)>(r1, i0, i1);

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>(r4);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r3, $r6);

        return $r7;
    }

    public java.lang.Object readValue(byte[], org.codehaus.jackson.type.TypeReference) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        byte[] r1;
        org.codehaus.jackson.JsonFactory $r2;
        org.codehaus.jackson.map.type.TypeFactory $r5;
        org.codehaus.jackson.type.TypeReference r4;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.Object $r7;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: byte[];

        r4 := @parameter1: org.codehaus.jackson.type.TypeReference;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(byte[])>(r1);

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference)>(r4);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r3, $r6);

        return $r7;
    }

    public java.lang.Object readValue(byte[], int, int, org.codehaus.jackson.type.TypeReference) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        byte[] r1;
        org.codehaus.jackson.JsonFactory $r2;
        org.codehaus.jackson.map.type.TypeFactory $r5;
        org.codehaus.jackson.type.TypeReference r4;
        int i0, i1;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.Object $r7;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r4 := @parameter3: org.codehaus.jackson.type.TypeReference;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(byte[],int,int)>(r1, i0, i1);

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference)>(r4);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r3, $r6);

        return $r7;
    }

    public java.lang.Object readValue(byte[], org.codehaus.jackson.type.JavaType) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        byte[] r1;
        org.codehaus.jackson.type.JavaType r4;
        java.lang.Object $r5;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r3;
        org.codehaus.jackson.JsonFactory $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: byte[];

        r4 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(byte[])>(r1);

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r3, r4);

        return $r5;
    }

    public java.lang.Object readValue(byte[], int, int, org.codehaus.jackson.type.JavaType) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        byte[] r1;
        org.codehaus.jackson.JsonFactory $r2;
        int i0, i1;
        org.codehaus.jackson.type.JavaType r4;
        java.lang.Object $r5;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r4 := @parameter3: org.codehaus.jackson.type.JavaType;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(byte[],int,int)>(r1, i0, i1);

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r3, r4);

        return $r5;
    }

    public java.lang.Object readValue(org.codehaus.jackson.JsonNode, java.lang.Class) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.JsonNode r2;
        org.codehaus.jackson.map.type.TypeFactory $r5;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.Class r4;
        java.lang.Object $r7;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r2 := @parameter0: org.codehaus.jackson.JsonNode;

        r4 := @parameter1: java.lang.Class;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig()>();

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonParser treeAsTokens(org.codehaus.jackson.JsonNode)>(r2);

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>(r4);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readValue(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r1, $r3, $r6);

        return $r7;
    }

    public java.lang.Object readValue(org.codehaus.jackson.JsonNode, org.codehaus.jackson.type.TypeReference) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.JsonNode r2;
        org.codehaus.jackson.map.type.TypeFactory $r5;
        org.codehaus.jackson.type.TypeReference r4;
        org.codehaus.jackson.type.JavaType $r6;
        java.lang.Object $r7;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r2 := @parameter0: org.codehaus.jackson.JsonNode;

        r4 := @parameter1: org.codehaus.jackson.type.TypeReference;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig()>();

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonParser treeAsTokens(org.codehaus.jackson.JsonNode)>(r2);

        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference)>(r4);

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readValue(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r1, $r3, $r6);

        return $r7;
    }

    public java.lang.Object readValue(org.codehaus.jackson.JsonNode, org.codehaus.jackson.type.JavaType) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.type.JavaType r4;
        java.lang.Object $r5;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.JsonNode r2;
        org.codehaus.jackson.JsonParser $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r2 := @parameter0: org.codehaus.jackson.JsonNode;

        r4 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig()>();

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonParser treeAsTokens(org.codehaus.jackson.JsonNode)>(r2);

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readValue(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r1, $r3, r4);

        return $r5;
    }

    public void writeValue(java.io.File, java.lang.Object) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.JsonEncoding $r2;
        org.codehaus.jackson.JsonGenerator $r4;
        java.lang.Object r5;
        org.codehaus.jackson.map.ObjectMapper r0;
        java.io.File r1;
        org.codehaus.jackson.JsonFactory $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.io.File;

        r5 := @parameter1: java.lang.Object;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r2 = <org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding UTF8>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.File,org.codehaus.jackson.JsonEncoding)>(r1, $r2);

        virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: void _configAndWriteValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)>($r4, r5);

        return;
    }

    public void writeValue(java.io.OutputStream, java.lang.Object) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException, org.codehaus.jackson.map.JsonMappingException
    {
        java.io.OutputStream r1;
        org.codehaus.jackson.JsonEncoding $r2;
        org.codehaus.jackson.JsonGenerator $r4;
        java.lang.Object r5;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonFactory $r3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.io.OutputStream;

        r5 := @parameter1: java.lang.Object;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r2 = <org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding UTF8>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.OutputStream,org.codehaus.jackson.JsonEncoding)>(r1, $r2);

        virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: void _configAndWriteValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)>($r4, r5);

        return;
    }

    public void writeValue(java.io.Writer, java.lang.Object) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.JsonGenerator $r3;
        java.io.Writer r1;
        java.lang.Object r4;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonFactory $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.io.Writer;

        r4 := @parameter1: java.lang.Object;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.Writer)>(r1);

        virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: void _configAndWriteValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)>($r3, r4);

        return;
    }

    public java.lang.String writeValueAsString(java.lang.Object) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.JsonFactory $r2, $r4;
        org.codehaus.jackson.util.BufferRecycler $r3;
        org.codehaus.jackson.io.SegmentedStringWriter $r0;
        org.codehaus.jackson.JsonGenerator $r5;
        java.lang.Object r6;
        java.lang.String $r7;
        org.codehaus.jackson.map.ObjectMapper r1;

        r1 := @this: org.codehaus.jackson.map.ObjectMapper;

        r6 := @parameter0: java.lang.Object;

        $r0 = new org.codehaus.jackson.io.SegmentedStringWriter;

        $r2 = r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.util.BufferRecycler _getBufferRecycler()>();

        specialinvoke $r0.<org.codehaus.jackson.io.SegmentedStringWriter: void <init>(org.codehaus.jackson.util.BufferRecycler)>($r3);

        $r4 = r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.Writer)>($r0);

        virtualinvoke r1.<org.codehaus.jackson.map.ObjectMapper: void _configAndWriteValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)>($r5, r6);

        $r7 = virtualinvoke $r0.<org.codehaus.jackson.io.SegmentedStringWriter: java.lang.String getAndClear()>();

        return $r7;
    }

    public byte[] writeValueAsBytes(java.lang.Object) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException, org.codehaus.jackson.map.JsonMappingException
    {
        byte[] $r8;
        org.codehaus.jackson.JsonFactory $r2, $r5;
        org.codehaus.jackson.util.BufferRecycler $r3;
        org.codehaus.jackson.JsonEncoding $r4;
        org.codehaus.jackson.JsonGenerator $r6;
        java.lang.Object r7;
        org.codehaus.jackson.util.ByteArrayBuilder $r0;
        org.codehaus.jackson.map.ObjectMapper r1;

        r1 := @this: org.codehaus.jackson.map.ObjectMapper;

        r7 := @parameter0: java.lang.Object;

        $r0 = new org.codehaus.jackson.util.ByteArrayBuilder;

        $r2 = r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.util.BufferRecycler _getBufferRecycler()>();

        specialinvoke $r0.<org.codehaus.jackson.util.ByteArrayBuilder: void <init>(org.codehaus.jackson.util.BufferRecycler)>($r3);

        $r5 = r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r4 = <org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding UTF8>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.OutputStream,org.codehaus.jackson.JsonEncoding)>($r0, $r4);

        virtualinvoke r1.<org.codehaus.jackson.map.ObjectMapper: void _configAndWriteValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)>($r6, r7);

        $r8 = virtualinvoke $r0.<org.codehaus.jackson.util.ByteArrayBuilder: byte[] toByteArray()>();

        virtualinvoke $r0.<org.codehaus.jackson.util.ByteArrayBuilder: void release()>();

        return $r8;
    }

    public org.codehaus.jackson.map.ObjectWriter writer()
    {
        org.codehaus.jackson.map.ObjectWriter $r0;
        org.codehaus.jackson.map.SerializationConfig $r2;
        org.codehaus.jackson.map.ObjectMapper r1;

        r1 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r0 = new org.codehaus.jackson.map.ObjectWriter;

        $r2 = virtualinvoke r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig copySerializationConfig()>();

        specialinvoke $r0.<org.codehaus.jackson.map.ObjectWriter: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.SerializationConfig)>(r1, $r2);

        return $r0;
    }

    public org.codehaus.jackson.map.ObjectWriter writer(java.text.DateFormat)
    {
        org.codehaus.jackson.map.ObjectWriter $r0;
        org.codehaus.jackson.map.SerializationConfig $r2, $r4;
        org.codehaus.jackson.map.ObjectMapper r1;
        java.text.DateFormat r3;

        r1 := @this: org.codehaus.jackson.map.ObjectMapper;

        r3 := @parameter0: java.text.DateFormat;

        $r0 = new org.codehaus.jackson.map.ObjectWriter;

        $r2 = virtualinvoke r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig copySerializationConfig()>();

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withDateFormat(java.text.DateFormat)>(r3);

        specialinvoke $r0.<org.codehaus.jackson.map.ObjectWriter: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.SerializationConfig)>(r1, $r4);

        return $r0;
    }

    public org.codehaus.jackson.map.ObjectWriter writerWithView(java.lang.Class)
    {
        org.codehaus.jackson.map.ObjectWriter $r0;
        java.lang.Class r3;
        org.codehaus.jackson.map.SerializationConfig $r2, $r4;
        org.codehaus.jackson.map.ObjectMapper r1;

        r1 := @this: org.codehaus.jackson.map.ObjectMapper;

        r3 := @parameter0: java.lang.Class;

        $r0 = new org.codehaus.jackson.map.ObjectWriter;

        $r2 = virtualinvoke r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig copySerializationConfig()>();

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withView(java.lang.Class)>(r3);

        specialinvoke $r0.<org.codehaus.jackson.map.ObjectWriter: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.SerializationConfig)>(r1, $r4);

        return $r0;
    }

    public org.codehaus.jackson.map.ObjectWriter writerWithType(java.lang.Class)
    {
        org.codehaus.jackson.map.type.TypeFactory $r2;
        org.codehaus.jackson.map.ObjectWriter $r3;
        org.codehaus.jackson.type.JavaType $r5;
        java.lang.Class r0;
        org.codehaus.jackson.map.SerializationConfig $r4;
        org.codehaus.jackson.map.ObjectMapper r1;

        r1 := @this: org.codehaus.jackson.map.ObjectMapper;

        r0 := @parameter0: java.lang.Class;

        if r0 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r2 = r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r5 = virtualinvoke $r2.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>(r0);

     label2:
        $r3 = new org.codehaus.jackson.map.ObjectWriter;

        $r4 = virtualinvoke r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig copySerializationConfig()>();

        specialinvoke $r3.<org.codehaus.jackson.map.ObjectWriter: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.PrettyPrinter)>(r1, $r4, $r5, null);

        return $r3;
    }

    public org.codehaus.jackson.map.ObjectWriter writerWithType(org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.ObjectWriter $r0;
        org.codehaus.jackson.type.JavaType r3;
        org.codehaus.jackson.map.SerializationConfig $r2;
        org.codehaus.jackson.map.ObjectMapper r1;

        r1 := @this: org.codehaus.jackson.map.ObjectMapper;

        r3 := @parameter0: org.codehaus.jackson.type.JavaType;

        $r0 = new org.codehaus.jackson.map.ObjectWriter;

        $r2 = virtualinvoke r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig copySerializationConfig()>();

        specialinvoke $r0.<org.codehaus.jackson.map.ObjectWriter: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.PrettyPrinter)>(r1, $r2, r3, null);

        return $r0;
    }

    public org.codehaus.jackson.map.ObjectWriter writerWithType(org.codehaus.jackson.type.TypeReference)
    {
        org.codehaus.jackson.map.type.TypeFactory $r2;
        org.codehaus.jackson.map.ObjectWriter $r3;
        org.codehaus.jackson.type.TypeReference r0;
        org.codehaus.jackson.type.JavaType $r5;
        org.codehaus.jackson.map.SerializationConfig $r4;
        org.codehaus.jackson.map.ObjectMapper r1;

        r1 := @this: org.codehaus.jackson.map.ObjectMapper;

        r0 := @parameter0: org.codehaus.jackson.type.TypeReference;

        if r0 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r2 = r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r5 = virtualinvoke $r2.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference)>(r0);

     label2:
        $r3 = new org.codehaus.jackson.map.ObjectWriter;

        $r4 = virtualinvoke r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig copySerializationConfig()>();

        specialinvoke $r3.<org.codehaus.jackson.map.ObjectWriter: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.PrettyPrinter)>(r1, $r4, $r5, null);

        return $r3;
    }

    public org.codehaus.jackson.map.ObjectWriter writer(org.codehaus.jackson.PrettyPrinter)
    {
        org.codehaus.jackson.map.ObjectWriter $r0;
        org.codehaus.jackson.PrettyPrinter r3;
        org.codehaus.jackson.map.SerializationConfig $r2;
        org.codehaus.jackson.map.ObjectMapper r1;

        r1 := @this: org.codehaus.jackson.map.ObjectMapper;

        r3 := @parameter0: org.codehaus.jackson.PrettyPrinter;

        if r3 != null goto label1;

        r3 = <org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.PrettyPrinter NULL_PRETTY_PRINTER>;

     label1:
        $r0 = new org.codehaus.jackson.map.ObjectWriter;

        $r2 = virtualinvoke r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig copySerializationConfig()>();

        specialinvoke $r0.<org.codehaus.jackson.map.ObjectWriter: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.PrettyPrinter)>(r1, $r2, null, r3);

        return $r0;
    }

    public org.codehaus.jackson.map.ObjectWriter writerWithDefaultPrettyPrinter()
    {
        org.codehaus.jackson.map.ObjectWriter $r0;
        org.codehaus.jackson.PrettyPrinter $r3;
        org.codehaus.jackson.map.SerializationConfig $r2;
        org.codehaus.jackson.map.ObjectMapper r1;

        r1 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r0 = new org.codehaus.jackson.map.ObjectWriter;

        $r2 = virtualinvoke r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig copySerializationConfig()>();

        $r3 = virtualinvoke r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.PrettyPrinter _defaultPrettyPrinter()>();

        specialinvoke $r0.<org.codehaus.jackson.map.ObjectWriter: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.PrettyPrinter)>(r1, $r2, null, $r3);

        return $r0;
    }

    public org.codehaus.jackson.map.ObjectWriter writer(org.codehaus.jackson.map.ser.FilterProvider)
    {
        org.codehaus.jackson.map.ObjectWriter $r0;
        org.codehaus.jackson.map.ser.FilterProvider r3;
        org.codehaus.jackson.map.SerializationConfig $r2, $r4;
        org.codehaus.jackson.map.ObjectMapper r1;

        r1 := @this: org.codehaus.jackson.map.ObjectMapper;

        r3 := @parameter0: org.codehaus.jackson.map.ser.FilterProvider;

        $r0 = new org.codehaus.jackson.map.ObjectWriter;

        $r2 = virtualinvoke r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig copySerializationConfig()>();

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withFilters(org.codehaus.jackson.map.ser.FilterProvider)>(r3);

        specialinvoke $r0.<org.codehaus.jackson.map.ObjectWriter: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.SerializationConfig)>(r1, $r4);

        return $r0;
    }

    public org.codehaus.jackson.map.ObjectWriter writer(org.codehaus.jackson.FormatSchema)
    {
        org.codehaus.jackson.FormatSchema r3;
        org.codehaus.jackson.map.ObjectWriter $r0;
        org.codehaus.jackson.map.SerializationConfig $r2;
        org.codehaus.jackson.map.ObjectMapper r1;

        r1 := @this: org.codehaus.jackson.map.ObjectMapper;

        r3 := @parameter0: org.codehaus.jackson.FormatSchema;

        $r0 = new org.codehaus.jackson.map.ObjectWriter;

        $r2 = virtualinvoke r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig copySerializationConfig()>();

        specialinvoke $r0.<org.codehaus.jackson.map.ObjectWriter: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.FormatSchema)>(r1, $r2, r3);

        return $r0;
    }

    public org.codehaus.jackson.map.ObjectWriter typedWriter(java.lang.Class)
    {
        java.lang.Class r1;
        org.codehaus.jackson.map.ObjectWriter $r2;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectWriter writerWithType(java.lang.Class)>(r1);

        return $r2;
    }

    public org.codehaus.jackson.map.ObjectWriter typedWriter(org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.type.JavaType r1;
        org.codehaus.jackson.map.ObjectWriter $r2;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectWriter writerWithType(org.codehaus.jackson.type.JavaType)>(r1);

        return $r2;
    }

    public org.codehaus.jackson.map.ObjectWriter typedWriter(org.codehaus.jackson.type.TypeReference)
    {
        org.codehaus.jackson.map.ObjectWriter $r2;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.type.TypeReference r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.type.TypeReference;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectWriter writerWithType(org.codehaus.jackson.type.TypeReference)>(r1);

        return $r2;
    }

    public org.codehaus.jackson.map.ObjectWriter viewWriter(java.lang.Class)
    {
        java.lang.Class r1;
        org.codehaus.jackson.map.ObjectWriter $r2;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectWriter writerWithView(java.lang.Class)>(r1);

        return $r2;
    }

    public org.codehaus.jackson.map.ObjectWriter prettyPrintingWriter(org.codehaus.jackson.PrettyPrinter)
    {
        org.codehaus.jackson.map.ObjectWriter $r2;
        org.codehaus.jackson.PrettyPrinter r1;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.PrettyPrinter;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectWriter writer(org.codehaus.jackson.PrettyPrinter)>(r1);

        return $r2;
    }

    public org.codehaus.jackson.map.ObjectWriter defaultPrettyPrintingWriter()
    {
        org.codehaus.jackson.map.ObjectWriter $r1;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectWriter writerWithDefaultPrettyPrinter()>();

        return $r1;
    }

    public org.codehaus.jackson.map.ObjectWriter filteredWriter(org.codehaus.jackson.map.ser.FilterProvider)
    {
        org.codehaus.jackson.map.ObjectWriter $r2;
        org.codehaus.jackson.map.ser.FilterProvider r1;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.map.ser.FilterProvider;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectWriter writer(org.codehaus.jackson.map.ser.FilterProvider)>(r1);

        return $r2;
    }

    public org.codehaus.jackson.map.ObjectWriter schemaBasedWriter(org.codehaus.jackson.FormatSchema)
    {
        org.codehaus.jackson.FormatSchema r1;
        org.codehaus.jackson.map.ObjectWriter $r2;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.FormatSchema;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectWriter writer(org.codehaus.jackson.FormatSchema)>(r1);

        return $r2;
    }

    public org.codehaus.jackson.map.ObjectReader reader()
    {
        org.codehaus.jackson.map.InjectableValues $r3;
        org.codehaus.jackson.map.ObjectReader $r0, $r4;
        org.codehaus.jackson.map.ObjectMapper r1;
        org.codehaus.jackson.map.DeserializationConfig $r2;

        r1 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r0 = new org.codehaus.jackson.map.ObjectReader;

        $r2 = virtualinvoke r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig()>();

        specialinvoke $r0.<org.codehaus.jackson.map.ObjectReader: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.DeserializationConfig)>(r1, $r2);

        $r3 = r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.InjectableValues _injectableValues>;

        $r4 = virtualinvoke $r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.ObjectReader withInjectableValues(org.codehaus.jackson.map.InjectableValues)>($r3);

        return $r4;
    }

    public org.codehaus.jackson.map.ObjectReader readerForUpdating(java.lang.Object)
    {
        org.codehaus.jackson.map.InjectableValues $r7;
        org.codehaus.jackson.map.ObjectReader $r5;
        org.codehaus.jackson.map.DeserializationConfig $r6;
        org.codehaus.jackson.map.type.TypeFactory $r2;
        org.codehaus.jackson.type.JavaType $r4;
        java.lang.Object r1;
        java.lang.Class $r3;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>($r3);

        $r5 = new org.codehaus.jackson.map.ObjectReader;

        $r6 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig()>();

        $r7 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.InjectableValues _injectableValues>;

        specialinvoke $r5.<org.codehaus.jackson.map.ObjectReader: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,java.lang.Object,org.codehaus.jackson.FormatSchema,org.codehaus.jackson.map.InjectableValues)>(r0, $r6, $r4, r1, null, $r7);

        return $r5;
    }

    public org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.InjectableValues $r4;
        org.codehaus.jackson.map.ObjectReader $r0;
        org.codehaus.jackson.type.JavaType r3;
        org.codehaus.jackson.map.ObjectMapper r1;
        org.codehaus.jackson.map.DeserializationConfig $r2;

        r1 := @this: org.codehaus.jackson.map.ObjectMapper;

        r3 := @parameter0: org.codehaus.jackson.type.JavaType;

        $r0 = new org.codehaus.jackson.map.ObjectReader;

        $r2 = virtualinvoke r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig()>();

        $r4 = r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.InjectableValues _injectableValues>;

        specialinvoke $r0.<org.codehaus.jackson.map.ObjectReader: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,java.lang.Object,org.codehaus.jackson.FormatSchema,org.codehaus.jackson.map.InjectableValues)>(r1, $r2, r3, null, null, $r4);

        return $r0;
    }

    public org.codehaus.jackson.map.ObjectReader reader(java.lang.Class)
    {
        org.codehaus.jackson.map.type.TypeFactory $r2;
        org.codehaus.jackson.map.ObjectReader $r4;
        org.codehaus.jackson.type.JavaType $r3;
        java.lang.Class r1;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>(r1);

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.type.JavaType)>($r3);

        return $r4;
    }

    public org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.type.TypeReference)
    {
        org.codehaus.jackson.map.type.TypeFactory $r2;
        org.codehaus.jackson.map.ObjectReader $r4;
        org.codehaus.jackson.type.TypeReference r1;
        org.codehaus.jackson.type.JavaType $r3;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.type.TypeReference;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference)>(r1);

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.type.JavaType)>($r3);

        return $r4;
    }

    public org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.node.JsonNodeFactory)
    {
        org.codehaus.jackson.map.ObjectReader $r0, $r4;
        org.codehaus.jackson.node.JsonNodeFactory r3;
        org.codehaus.jackson.map.ObjectMapper r1;
        org.codehaus.jackson.map.DeserializationConfig $r2;

        r1 := @this: org.codehaus.jackson.map.ObjectMapper;

        r3 := @parameter0: org.codehaus.jackson.node.JsonNodeFactory;

        $r0 = new org.codehaus.jackson.map.ObjectReader;

        $r2 = virtualinvoke r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig()>();

        specialinvoke $r0.<org.codehaus.jackson.map.ObjectReader: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.DeserializationConfig)>(r1, $r2);

        $r4 = virtualinvoke $r0.<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.ObjectReader withNodeFactory(org.codehaus.jackson.node.JsonNodeFactory)>(r3);

        return $r4;
    }

    public org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.FormatSchema)
    {
        org.codehaus.jackson.FormatSchema r3;
        org.codehaus.jackson.map.InjectableValues $r4;
        org.codehaus.jackson.map.ObjectReader $r0;
        org.codehaus.jackson.map.ObjectMapper r1;
        org.codehaus.jackson.map.DeserializationConfig $r2;

        r1 := @this: org.codehaus.jackson.map.ObjectMapper;

        r3 := @parameter0: org.codehaus.jackson.FormatSchema;

        $r0 = new org.codehaus.jackson.map.ObjectReader;

        $r2 = virtualinvoke r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig()>();

        $r4 = r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.InjectableValues _injectableValues>;

        specialinvoke $r0.<org.codehaus.jackson.map.ObjectReader: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,java.lang.Object,org.codehaus.jackson.FormatSchema,org.codehaus.jackson.map.InjectableValues)>(r1, $r2, null, null, r3, $r4);

        return $r0;
    }

    public org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.map.InjectableValues)
    {
        org.codehaus.jackson.map.InjectableValues r3;
        org.codehaus.jackson.map.ObjectReader $r0;
        org.codehaus.jackson.map.ObjectMapper r1;
        org.codehaus.jackson.map.DeserializationConfig $r2;

        r1 := @this: org.codehaus.jackson.map.ObjectMapper;

        r3 := @parameter0: org.codehaus.jackson.map.InjectableValues;

        $r0 = new org.codehaus.jackson.map.ObjectReader;

        $r2 = virtualinvoke r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig()>();

        specialinvoke $r0.<org.codehaus.jackson.map.ObjectReader: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,java.lang.Object,org.codehaus.jackson.FormatSchema,org.codehaus.jackson.map.InjectableValues)>(r1, $r2, null, null, null, r3);

        return $r0;
    }

    public org.codehaus.jackson.map.ObjectReader updatingReader(java.lang.Object)
    {
        java.lang.Object r1;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.ObjectReader $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectReader readerForUpdating(java.lang.Object)>(r1);

        return $r2;
    }

    public org.codehaus.jackson.map.ObjectReader schemaBasedReader(org.codehaus.jackson.FormatSchema)
    {
        org.codehaus.jackson.FormatSchema r1;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.ObjectReader $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.FormatSchema;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.FormatSchema)>(r1);

        return $r2;
    }

    public java.lang.Object convertValue(java.lang.Object, java.lang.Class) throws java.lang.IllegalArgumentException
    {
        org.codehaus.jackson.map.type.TypeFactory $r3;
        org.codehaus.jackson.type.JavaType $r4;
        java.lang.Object r1, $r5;
        java.lang.Class r2;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)>(r2);

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _convert(java.lang.Object,org.codehaus.jackson.type.JavaType)>(r1, $r4);

        return $r5;
    }

    public java.lang.Object convertValue(java.lang.Object, org.codehaus.jackson.type.TypeReference) throws java.lang.IllegalArgumentException
    {
        org.codehaus.jackson.map.type.TypeFactory $r3;
        org.codehaus.jackson.type.TypeReference r2;
        org.codehaus.jackson.type.JavaType $r4;
        java.lang.Object r1, $r5;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.codehaus.jackson.type.TypeReference;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.type.TypeFactory _typeFactory>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference)>(r2);

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _convert(java.lang.Object,org.codehaus.jackson.type.JavaType)>(r1, $r4);

        return $r5;
    }

    public java.lang.Object convertValue(java.lang.Object, org.codehaus.jackson.type.JavaType) throws java.lang.IllegalArgumentException
    {
        org.codehaus.jackson.type.JavaType r2;
        java.lang.Object r1, $r3;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _convert(java.lang.Object,org.codehaus.jackson.type.JavaType)>(r1, r2);

        return $r3;
    }

    protected java.lang.Object _convert(java.lang.Object, org.codehaus.jackson.type.JavaType) throws java.lang.IllegalArgumentException
    {
        org.codehaus.jackson.util.TokenBuffer $r1;
        java.io.IOException $r6;
        java.lang.IllegalArgumentException $r7;
        org.codehaus.jackson.type.JavaType r4;
        java.lang.Object r0, $r5;
        java.lang.String $r8;
        org.codehaus.jackson.map.ObjectMapper r2;
        org.codehaus.jackson.JsonParser $r3;

        r2 := @this: org.codehaus.jackson.map.ObjectMapper;

        r0 := @parameter0: java.lang.Object;

        r4 := @parameter1: org.codehaus.jackson.type.JavaType;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new org.codehaus.jackson.util.TokenBuffer;

        specialinvoke $r1.<org.codehaus.jackson.util.TokenBuffer: void <init>(org.codehaus.jackson.ObjectCodec)>(r2);

     label2:
        virtualinvoke r2.<org.codehaus.jackson.map.ObjectMapper: void writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)>($r1, r0);

        $r3 = virtualinvoke $r1.<org.codehaus.jackson.util.TokenBuffer: org.codehaus.jackson.JsonParser asParser()>();

        $r5 = virtualinvoke r2.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>($r3, r4);

        virtualinvoke $r3.<org.codehaus.jackson.JsonParser: void close()>();

     label3:
        return $r5;

     label4:
        $r6 := @caughtexception;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r6.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r8, $r6);

        throw $r7;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public org.codehaus.jackson.schema.JsonSchema generateJsonSchema(java.lang.Class) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.schema.JsonSchema $r3;
        java.lang.Class r1;
        org.codehaus.jackson.map.SerializationConfig $r2;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig copySerializationConfig()>();

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.schema.JsonSchema generateJsonSchema(java.lang.Class,org.codehaus.jackson.map.SerializationConfig)>(r1, $r2);

        return $r3;
    }

    public org.codehaus.jackson.schema.JsonSchema generateJsonSchema(java.lang.Class, org.codehaus.jackson.map.SerializationConfig) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.SerializerFactory $r3;
        org.codehaus.jackson.schema.JsonSchema $r5;
        org.codehaus.jackson.map.SerializerProvider $r4;
        java.lang.Class r1;
        org.codehaus.jackson.map.SerializationConfig r2;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.codehaus.jackson.map.SerializationConfig;

        $r4 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerProvider _serializerProvider>;

        $r3 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerFactory _serializerFactory>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.schema.JsonSchema generateJsonSchema(java.lang.Class,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.SerializerFactory)>(r1, r2, $r3);

        return $r5;
    }

    protected org.codehaus.jackson.PrettyPrinter _defaultPrettyPrinter()
    {
        org.codehaus.jackson.util.DefaultPrettyPrinter $r0;
        org.codehaus.jackson.map.ObjectMapper r1;

        r1 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r0 = new org.codehaus.jackson.util.DefaultPrettyPrinter;

        specialinvoke $r0.<org.codehaus.jackson.util.DefaultPrettyPrinter: void <init>()>();

        return $r0;
    }

    protected final void _configAndWriteValue(org.codehaus.jackson.JsonGenerator, java.lang.Object) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException, org.codehaus.jackson.map.JsonMappingException
    {
        java.lang.Throwable $r9;
        org.codehaus.jackson.map.SerializerFactory $r6;
        org.codehaus.jackson.map.SerializerProvider $r7;
        java.io.IOException $r8, $r10;
        org.codehaus.jackson.map.SerializationConfig $r1;
        org.codehaus.jackson.JsonGenerator r4;
        java.lang.Object r5;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.SerializationConfig$Feature $r2, $r3;
        boolean $z0, $z1, $z2, z3;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r4 := @parameter0: org.codehaus.jackson.JsonGenerator;

        r5 := @parameter1: java.lang.Object;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig copySerializationConfig()>();

        $r2 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature INDENT_OUTPUT>;

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r2);

        if $z0 == 0 goto label01;

        virtualinvoke r4.<org.codehaus.jackson.JsonGenerator: org.codehaus.jackson.JsonGenerator useDefaultPrettyPrinter()>();

     label01:
        $r3 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature CLOSE_CLOSEABLE>;

        $z1 = virtualinvoke $r1.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r3);

        if $z1 == 0 goto label02;

        $z2 = r5 instanceof java.io.Closeable;

        if $z2 == 0 goto label02;

        specialinvoke r0.<org.codehaus.jackson.map.ObjectMapper: void _configAndWriteCloseable(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig)>(r4, r5, $r1);

        return;

     label02:
        z3 = 0;

     label03:
        $r7 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerProvider _serializerProvider>;

        $r6 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerFactory _serializerFactory>;

        virtualinvoke $r7.<org.codehaus.jackson.map.SerializerProvider: void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory)>($r1, r4, r5, $r6);

        z3 = 1;

        virtualinvoke r4.<org.codehaus.jackson.JsonGenerator: void close()>();

     label04:
        if 1 != 0 goto label14;

     label05:
        virtualinvoke r4.<org.codehaus.jackson.JsonGenerator: void close()>();

     label06:
        goto label14;

     label07:
        $r10 := @caughtexception;

        goto label14;

     label08:
        $r9 := @caughtexception;

     label09:
        if z3 != 0 goto label13;

     label10:
        virtualinvoke r4.<org.codehaus.jackson.JsonGenerator: void close()>();

     label11:
        goto label13;

     label12:
        $r8 := @caughtexception;

     label13:
        throw $r9;

     label14:
        return;

        catch java.io.IOException from label05 to label06 with label07;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    protected final void _configAndWriteValue(org.codehaus.jackson.JsonGenerator, java.lang.Object, java.lang.Class) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException, org.codehaus.jackson.map.JsonMappingException
    {
        java.lang.Throwable $r11;
        org.codehaus.jackson.map.SerializerFactory $r8;
        org.codehaus.jackson.map.SerializerProvider $r9;
        org.codehaus.jackson.map.SerializationConfig $r1, $r3;
        org.codehaus.jackson.JsonGenerator r6;
        boolean $z0, $z1, $z2, z3;
        java.io.IOException $r10, $r12;
        java.lang.Class r2;
        java.lang.Object r7;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.map.SerializationConfig$Feature $r4, $r5;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r6 := @parameter0: org.codehaus.jackson.JsonGenerator;

        r7 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Class;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig copySerializationConfig()>();

        $r3 = virtualinvoke $r1.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withView(java.lang.Class)>(r2);

        $r4 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature INDENT_OUTPUT>;

        $z0 = virtualinvoke $r3.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r4);

        if $z0 == 0 goto label01;

        virtualinvoke r6.<org.codehaus.jackson.JsonGenerator: org.codehaus.jackson.JsonGenerator useDefaultPrettyPrinter()>();

     label01:
        $r5 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature CLOSE_CLOSEABLE>;

        $z1 = virtualinvoke $r3.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r5);

        if $z1 == 0 goto label02;

        $z2 = r7 instanceof java.io.Closeable;

        if $z2 == 0 goto label02;

        specialinvoke r0.<org.codehaus.jackson.map.ObjectMapper: void _configAndWriteCloseable(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig)>(r6, r7, $r3);

        return;

     label02:
        z3 = 0;

     label03:
        $r9 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerProvider _serializerProvider>;

        $r8 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerFactory _serializerFactory>;

        virtualinvoke $r9.<org.codehaus.jackson.map.SerializerProvider: void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory)>($r3, r6, r7, $r8);

        z3 = 1;

        virtualinvoke r6.<org.codehaus.jackson.JsonGenerator: void close()>();

     label04:
        if 1 != 0 goto label14;

     label05:
        virtualinvoke r6.<org.codehaus.jackson.JsonGenerator: void close()>();

     label06:
        goto label14;

     label07:
        $r12 := @caughtexception;

        goto label14;

     label08:
        $r11 := @caughtexception;

     label09:
        if z3 != 0 goto label13;

     label10:
        virtualinvoke r6.<org.codehaus.jackson.JsonGenerator: void close()>();

     label11:
        goto label13;

     label12:
        $r10 := @caughtexception;

     label13:
        throw $r11;

     label14:
        return;

        catch java.io.IOException from label05 to label06 with label07;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private final void _configAndWriteCloseable(org.codehaus.jackson.JsonGenerator, java.lang.Object, org.codehaus.jackson.map.SerializationConfig) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException, org.codehaus.jackson.map.JsonMappingException
    {
        java.lang.Throwable $r8;
        org.codehaus.jackson.map.SerializerFactory $r3;
        org.codehaus.jackson.map.SerializerProvider $r4;
        java.io.IOException $r6, $r7, $r9, $r10;
        org.codehaus.jackson.map.SerializationConfig r2;
        org.codehaus.jackson.JsonGenerator r11, r13;
        java.io.Closeable r5, r12;
        java.lang.Object r0;
        org.codehaus.jackson.map.ObjectMapper r1;

        r1 := @this: org.codehaus.jackson.map.ObjectMapper;

        r11 := @parameter0: org.codehaus.jackson.JsonGenerator;

        r0 := @parameter1: java.lang.Object;

        r2 := @parameter2: org.codehaus.jackson.map.SerializationConfig;

        r12 = (java.io.Closeable) r0;

     label01:
        $r4 = r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerProvider _serializerProvider>;

        $r3 = r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerFactory _serializerFactory>;

        virtualinvoke $r4.<org.codehaus.jackson.map.SerializerProvider: void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory)>(r2, r11, r0, $r3);

        r13 = r11;

        r11 = null;

        virtualinvoke r13.<org.codehaus.jackson.JsonGenerator: void close()>();

        r5 = r12;

        r12 = null;

        interfaceinvoke r5.<java.io.Closeable: void close()>();

     label02:
        if null == null goto label06;

     label03:
        virtualinvoke r11.<org.codehaus.jackson.JsonGenerator: void close()>();

     label04:
        goto label06;

     label05:
        $r10 := @caughtexception;

     label06:
        if null == null goto label20;

     label07:
        interfaceinvoke r12.<java.io.Closeable: void close()>();

     label08:
        goto label20;

     label09:
        $r9 := @caughtexception;

        goto label20;

     label10:
        $r8 := @caughtexception;

     label11:
        if r11 == null goto label15;

     label12:
        virtualinvoke r11.<org.codehaus.jackson.JsonGenerator: void close()>();

     label13:
        goto label15;

     label14:
        $r7 := @caughtexception;

     label15:
        if r12 == null goto label19;

     label16:
        interfaceinvoke r12.<java.io.Closeable: void close()>();

     label17:
        goto label19;

     label18:
        $r6 := @caughtexception;

     label19:
        throw $r8;

     label20:
        return;

        catch java.io.IOException from label03 to label04 with label05;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private final void _writeCloseableValue(org.codehaus.jackson.JsonGenerator, java.lang.Object, org.codehaus.jackson.map.SerializationConfig) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException, org.codehaus.jackson.map.JsonMappingException
    {
        java.lang.Throwable $r8;
        org.codehaus.jackson.map.SerializerFactory $r4;
        org.codehaus.jackson.map.SerializerProvider $r5;
        java.io.IOException $r7, $r9;
        org.codehaus.jackson.map.SerializationConfig r2;
        org.codehaus.jackson.JsonGenerator r3;
        java.io.Closeable r10, r11;
        java.lang.Object r0;
        org.codehaus.jackson.map.ObjectMapper r1;
        org.codehaus.jackson.map.SerializationConfig$Feature $r6;
        boolean $z0;

        r1 := @this: org.codehaus.jackson.map.ObjectMapper;

        r3 := @parameter0: org.codehaus.jackson.JsonGenerator;

        r0 := @parameter1: java.lang.Object;

        r2 := @parameter2: org.codehaus.jackson.map.SerializationConfig;

        r10 = (java.io.Closeable) r0;

     label01:
        $r5 = r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerProvider _serializerProvider>;

        $r4 = r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerFactory _serializerFactory>;

        virtualinvoke $r5.<org.codehaus.jackson.map.SerializerProvider: void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory)>(r2, r3, r0, $r4);

        $r6 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature FLUSH_AFTER_WRITE_VALUE>;

        $z0 = virtualinvoke r2.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r6);

        if $z0 == 0 goto label02;

        virtualinvoke r3.<org.codehaus.jackson.JsonGenerator: void flush()>();

     label02:
        r11 = r10;

        r10 = null;

        interfaceinvoke r11.<java.io.Closeable: void close()>();

     label03:
        if null == null goto label13;

     label04:
        interfaceinvoke r10.<java.io.Closeable: void close()>();

     label05:
        goto label13;

     label06:
        $r9 := @caughtexception;

        goto label13;

     label07:
        $r8 := @caughtexception;

     label08:
        if r10 == null goto label12;

     label09:
        interfaceinvoke r10.<java.io.Closeable: void close()>();

     label10:
        goto label12;

     label11:
        $r7 := @caughtexception;

     label12:
        throw $r8;

     label13:
        return;

        catch java.io.IOException from label04 to label05 with label06;
        catch java.lang.Throwable from label01 to label03 with label07;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    protected java.lang.Object _readValue(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.JsonParser, org.codehaus.jackson.type.JavaType) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.JsonToken $r2, $r3, $r4, $r5;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r10;
        org.codehaus.jackson.map.DeserializationConfig r6;
        org.codehaus.jackson.map.DeserializationContext $r7;
        org.codehaus.jackson.type.JavaType r8;
        org.codehaus.jackson.map.JsonDeserializer $r9, $r11;
        java.lang.Object r12;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r6 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter1: org.codehaus.jackson.JsonParser;

        r8 := @parameter2: org.codehaus.jackson.type.JavaType;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonToken _initForReading(org.codehaus.jackson.JsonParser)>(r1);

        $r3 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_NULL>;

        if $r2 != $r3 goto label1;

        $r11 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.JsonDeserializer _findRootDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>(r6, r8);

        r12 = virtualinvoke $r11.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object getNullValue()>();

        goto label5;

     label1:
        $r4 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_ARRAY>;

        if $r2 == $r4 goto label2;

        $r5 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_OBJECT>;

        if $r2 != $r5 goto label3;

     label2:
        r12 = null;

        goto label5;

     label3:
        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationContext _createDeserializationContext(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationConfig)>(r1, r6);

        $r9 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.JsonDeserializer _findRootDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>(r6, r8);

        $r10 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature UNWRAP_ROOT_VALUE>;

        $z0 = virtualinvoke r6.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r10);

        if $z0 == 0 goto label4;

        r12 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _unwrapAndDeserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.JsonDeserializer)>(r1, r8, $r7, $r9);

        goto label5;

     label4:
        r12 = virtualinvoke $r9.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r1, $r7);

     label5:
        virtualinvoke r1.<org.codehaus.jackson.JsonParser: void clearCurrentToken()>();

        return r12;
    }

    protected java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser, org.codehaus.jackson.type.JavaType) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        java.lang.Throwable $r14;
        org.codehaus.jackson.JsonToken $r2, $r3, $r4, $r5;
        org.codehaus.jackson.map.DeserializationConfig $r6, $r11;
        org.codehaus.jackson.map.DeserializationContext $r7;
        org.codehaus.jackson.type.JavaType r8;
        org.codehaus.jackson.map.JsonDeserializer $r9, $r12;
        org.codehaus.jackson.JsonParser r1;
        boolean $z0;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r10;
        java.io.IOException $r13, $r15;
        java.lang.Object r16, r17;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.JsonParser;

        r8 := @parameter1: org.codehaus.jackson.type.JavaType;

     label01:
        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonToken _initForReading(org.codehaus.jackson.JsonParser)>(r1);

        $r3 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_NULL>;

        if $r2 != $r3 goto label02;

        $r11 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig _deserializationConfig>;

        $r12 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.JsonDeserializer _findRootDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>($r11, r8);

        r16 = virtualinvoke $r12.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object getNullValue()>();

        goto label06;

     label02:
        $r4 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_ARRAY>;

        if $r2 == $r4 goto label03;

        $r5 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_OBJECT>;

        if $r2 != $r5 goto label04;

     label03:
        r16 = null;

        goto label06;

     label04:
        $r6 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig()>();

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationContext _createDeserializationContext(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationConfig)>(r1, $r6);

        $r9 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.JsonDeserializer _findRootDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>($r6, r8);

        $r10 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature UNWRAP_ROOT_VALUE>;

        $z0 = virtualinvoke $r6.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r10);

        if $z0 == 0 goto label05;

        r16 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _unwrapAndDeserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.JsonDeserializer)>(r1, r8, $r7, $r9);

        goto label06;

     label05:
        r16 = virtualinvoke $r9.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r1, $r7);

     label06:
        virtualinvoke r1.<org.codehaus.jackson.JsonParser: void clearCurrentToken()>();

        r17 = r16;

     label07:
        virtualinvoke r1.<org.codehaus.jackson.JsonParser: void close()>();

     label08:
        goto label10;

     label09:
        $r15 := @caughtexception;

     label10:
        return r17;

     label11:
        $r14 := @caughtexception;

     label12:
        virtualinvoke r1.<org.codehaus.jackson.JsonParser: void close()>();

     label13:
        goto label15;

     label14:
        $r13 := @caughtexception;

     label15:
        throw $r14;

        catch java.io.IOException from label07 to label08 with label09;
        catch java.lang.Throwable from label01 to label07 with label11;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    protected org.codehaus.jackson.JsonToken _initForReading(org.codehaus.jackson.JsonParser) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.JsonToken $r1, $r2, r5;
        java.io.EOFException $r3;
        org.codehaus.jackson.map.ObjectMapper r4;
        org.codehaus.jackson.JsonParser r0;

        r4 := @this: org.codehaus.jackson.map.ObjectMapper;

        r0 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        r5 = $r1;

        if $r1 != null goto label1;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        r5 = $r2;

        if $r2 != null goto label1;

        $r3 = new java.io.EOFException;

        specialinvoke $r3.<java.io.EOFException: void <init>(java.lang.String)>("No content to map to Object due to end of input");

        throw $r3;

     label1:
        return r5;
    }

    protected java.lang.Object _unwrapAndDeserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.DeserializationContext, org.codehaus.jackson.map.JsonDeserializer) throws java.io.IOException, org.codehaus.jackson.JsonParseException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.JsonToken $r7, $r8, $r9, $r10, $r15, $r16, $r21, $r38, $r46;
        boolean $z0;
        org.codehaus.jackson.map.DeserializerProvider $r2;
        java.lang.StringBuilder $r17, $r18, $r19, $r20, $r22, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r34, $r35, $r36, $r37, $r39, $r42, $r43, $r44, $r45, $r47;
        org.codehaus.jackson.map.DeserializationConfig $r3;
        org.codehaus.jackson.map.DeserializationContext r1;
        org.codehaus.jackson.map.JsonMappingException $r24, $r33, $r41, $r49;
        org.codehaus.jackson.type.JavaType r4;
        org.codehaus.jackson.map.JsonDeserializer r13;
        java.lang.String $r11, $r12, $r23, $r32, $r40, $r48;
        org.codehaus.jackson.JsonParser r6;
        org.codehaus.jackson.io.SerializedString $r5;
        java.lang.Object $r14;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r6 := @parameter0: org.codehaus.jackson.JsonParser;

        r4 := @parameter1: org.codehaus.jackson.type.JavaType;

        r1 := @parameter2: org.codehaus.jackson.map.DeserializationContext;

        r13 := @parameter3: org.codehaus.jackson.map.JsonDeserializer;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializerProvider _deserializerProvider>;

        $r3 = virtualinvoke r1.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.DeserializationConfig getConfig()>();

        $r5 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializerProvider: org.codehaus.jackson.io.SerializedString findExpectedRootName(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>($r3, r4);

        $r7 = virtualinvoke r6.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r8 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken START_OBJECT>;

        if $r7 == $r8 goto label1;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current token not START_OBJECT (needed to unwrap root name \'");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'), but ");

        $r46 = virtualinvoke r6.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        $r49 = staticinvoke <org.codehaus.jackson.map.JsonMappingException: org.codehaus.jackson.map.JsonMappingException 'from'(org.codehaus.jackson.JsonParser,java.lang.String)>(r6, $r48);

        throw $r49;

     label1:
        $r9 = virtualinvoke r6.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r10 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken FIELD_NAME>;

        if $r9 == $r10 goto label2;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current token not FIELD_NAME (to contain expected root name \'");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'), but ");

        $r38 = virtualinvoke r6.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        $r41 = staticinvoke <org.codehaus.jackson.map.JsonMappingException: org.codehaus.jackson.map.JsonMappingException 'from'(org.codehaus.jackson.JsonParser,java.lang.String)>(r6, $r40);

        throw $r41;

     label2:
        $r11 = virtualinvoke r6.<org.codehaus.jackson.JsonParser: java.lang.String getCurrentName()>();

        $r12 = virtualinvoke $r5.<org.codehaus.jackson.io.SerializedString: java.lang.String getValue()>();

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z0 != 0 goto label3;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Root name \'");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' does not match expected (\'");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\') for type ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        $r33 = staticinvoke <org.codehaus.jackson.map.JsonMappingException: org.codehaus.jackson.map.JsonMappingException 'from'(org.codehaus.jackson.JsonParser,java.lang.String)>(r6, $r32);

        throw $r33;

     label3:
        virtualinvoke r6.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r14 = virtualinvoke r13.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r6, r1);

        $r15 = virtualinvoke r6.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r16 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_OBJECT>;

        if $r15 == $r16 goto label4;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current token not END_OBJECT (to match wrapper object with root name \'");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'), but ");

        $r21 = virtualinvoke r6.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        $r24 = staticinvoke <org.codehaus.jackson.map.JsonMappingException: org.codehaus.jackson.map.JsonMappingException 'from'(org.codehaus.jackson.JsonParser,java.lang.String)>(r6, $r23);

        throw $r24;

     label4:
        return $r14;
    }

    protected org.codehaus.jackson.map.JsonDeserializer _findRootDeserializer(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.type.JavaType) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.DeserializerProvider $r5;
        java.util.concurrent.ConcurrentHashMap $r2, $r7;
        org.codehaus.jackson.map.DeserializationConfig r4;
        org.codehaus.jackson.map.JsonMappingException $r8;
        org.codehaus.jackson.type.JavaType r1;
        java.lang.Object $r3;
        org.codehaus.jackson.map.JsonDeserializer $r6, r13;
        java.lang.StringBuilder $r9, $r10, $r11;
        java.lang.String $r12;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r4 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        r1 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r2 = r0.<org.codehaus.jackson.map.ObjectMapper: java.util.concurrent.ConcurrentHashMap _rootDeserializers>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r1);

        r13 = (org.codehaus.jackson.map.JsonDeserializer) $r3;

        if r13 == null goto label1;

        return r13;

     label1:
        $r5 = r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializerProvider _deserializerProvider>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.DeserializerProvider: org.codehaus.jackson.map.JsonDeserializer findTypedValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>(r4, r1, null);

        if $r6 != null goto label2;

        $r8 = new org.codehaus.jackson.map.JsonMappingException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not find a deserializer for type ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label2:
        $r7 = r0.<org.codehaus.jackson.map.ObjectMapper: java.util.concurrent.ConcurrentHashMap _rootDeserializers>;

        virtualinvoke $r7.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

        return $r6;
    }

    protected org.codehaus.jackson.map.DeserializationContext _createDeserializationContext(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationConfig)
    {
        org.codehaus.jackson.map.InjectableValues $r4;
        org.codehaus.jackson.map.deser.StdDeserializationContext $r0;
        org.codehaus.jackson.map.DeserializerProvider $r5;
        org.codehaus.jackson.map.DeserializationConfig r1;
        org.codehaus.jackson.map.ObjectMapper r3;
        org.codehaus.jackson.JsonParser r2;

        r3 := @this: org.codehaus.jackson.map.ObjectMapper;

        r2 := @parameter0: org.codehaus.jackson.JsonParser;

        r1 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        $r0 = new org.codehaus.jackson.map.deser.StdDeserializationContext;

        $r5 = r3.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializerProvider _deserializerProvider>;

        $r4 = r3.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.InjectableValues _injectableValues>;

        specialinvoke $r0.<org.codehaus.jackson.map.deser.StdDeserializationContext: void <init>(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.InjectableValues)>(r1, r2, $r5, $r4);

        return $r0;
    }

    public volatile org.codehaus.jackson.JsonNode createArrayNode()
    {
        org.codehaus.jackson.node.ArrayNode $r1;
        org.codehaus.jackson.map.ObjectMapper r0;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.node.ArrayNode createArrayNode()>();

        return $r1;
    }

    public volatile org.codehaus.jackson.JsonNode createObjectNode()
    {
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.node.ObjectNode $r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.node.ObjectNode createObjectNode()>();

        return $r1;
    }

    public volatile java.util.Iterator readValues(org.codehaus.jackson.JsonParser, org.codehaus.jackson.type.JavaType) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.type.JavaType r2;
        org.codehaus.jackson.map.MappingIterator $r3;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.JsonParser;

        r2 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.MappingIterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>(r1, r2);

        return $r3;
    }

    public volatile java.util.Iterator readValues(org.codehaus.jackson.JsonParser, org.codehaus.jackson.type.TypeReference) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.type.TypeReference r2;
        org.codehaus.jackson.map.MappingIterator $r3;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.JsonParser;

        r2 := @parameter1: org.codehaus.jackson.type.TypeReference;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.MappingIterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.TypeReference)>(r1, r2);

        return $r3;
    }

    public volatile java.util.Iterator readValues(org.codehaus.jackson.JsonParser, java.lang.Class) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        java.lang.Class r2;
        org.codehaus.jackson.map.MappingIterator $r3;
        org.codehaus.jackson.map.ObjectMapper r0;
        org.codehaus.jackson.JsonParser r1;

        r0 := @this: org.codehaus.jackson.map.ObjectMapper;

        r1 := @parameter0: org.codehaus.jackson.JsonParser;

        r2 := @parameter1: java.lang.Class;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.MappingIterator readValues(org.codehaus.jackson.JsonParser,java.lang.Class)>(r1, r2);

        return $r3;
    }

    static void <clinit>()
    {
        org.codehaus.jackson.map.type.SimpleType $r0;
        org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector $r2;
        org.codehaus.jackson.map.introspect.VisibilityChecker$Std $r3;
        org.codehaus.jackson.map.introspect.BasicClassIntrospector $r1;

        $r0 = staticinvoke <org.codehaus.jackson.map.type.SimpleType: org.codehaus.jackson.map.type.SimpleType constructUnsafe(java.lang.Class)>(class "Lorg/codehaus/jackson/JsonNode;");

        <org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.type.JavaType JSON_NODE_TYPE> = $r0;

        $r1 = <org.codehaus.jackson.map.introspect.BasicClassIntrospector: org.codehaus.jackson.map.introspect.BasicClassIntrospector instance>;

        <org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ClassIntrospector DEFAULT_INTROSPECTOR> = $r1;

        $r2 = new org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector;

        specialinvoke $r2.<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: void <init>()>();

        <org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.AnnotationIntrospector DEFAULT_ANNOTATION_INTROSPECTOR> = $r2;

        $r3 = staticinvoke <org.codehaus.jackson.map.introspect.VisibilityChecker$Std: org.codehaus.jackson.map.introspect.VisibilityChecker$Std defaultInstance()>();

        <org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.introspect.VisibilityChecker STD_VISIBILITY_CHECKER> = $r3;

        return;
    }
}
