public abstract class org.waveprotocol.wave.common.logging.LogSink extends java.lang.Object
{

    public void <init>()
    {
        org.waveprotocol.wave.common.logging.LogSink r0;

        r0 := @this: org.waveprotocol.wave.common.logging.LogSink;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract void log(org.waveprotocol.wave.common.logging.AbstractLogger$Level, java.lang.String);

    public abstract transient void lazyLog(org.waveprotocol.wave.common.logging.AbstractLogger$Level, java.lang.Object[]);

    public void lazyLog(org.waveprotocol.wave.common.logging.AbstractLogger$Level, java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r5;
        java.lang.Object[] $r2;
        org.waveprotocol.wave.common.logging.LogSink$1 $r4;
        org.waveprotocol.wave.common.logging.LogSink r0;
        org.waveprotocol.wave.common.logging.AbstractLogger$Level r1;
        java.lang.String r3;

        r0 := @this: org.waveprotocol.wave.common.logging.LogSink;

        r1 := @parameter0: org.waveprotocol.wave.common.logging.AbstractLogger$Level;

        r3 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.Throwable;

        $r2 = newarray (java.lang.Object)[3];

        $r2[0] = r3;

        $r2[1] = ": ";

        $r4 = new org.waveprotocol.wave.common.logging.LogSink$1;

        specialinvoke $r4.<org.waveprotocol.wave.common.logging.LogSink$1: void <init>(org.waveprotocol.wave.common.logging.LogSink,java.lang.Throwable)>(r0, r5);

        $r2[2] = $r4;

        virtualinvoke r0.<org.waveprotocol.wave.common.logging.LogSink: void lazyLog(org.waveprotocol.wave.common.logging.AbstractLogger$Level,java.lang.Object[])>(r1, $r2);

        return;
    }
}
