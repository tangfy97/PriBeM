class org.apache.james.mime4j.dom.ServiceLoader extends java.lang.Object
{

    private void <init>()
    {
        org.apache.james.mime4j.dom.ServiceLoader r0;

        r0 := @this: org.apache.james.mime4j.dom.ServiceLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.Object load(java.lang.Class)
    {
        java.util.Enumeration $r7;
        java.net.URL r9;
        java.lang.InstantiationException $r18;
        boolean $z0, $z1;
        java.lang.IllegalAccessException $r26;
        java.lang.StringBuilder $r1, $r4, $r21, $r23, $r24, $r30, $r32, $r33, $r40, $r44, $r46;
        java.lang.ClassLoader $r6;
        java.lang.Throwable $r37;
        int $i0, $i1, $i3;
        java.lang.String $r3, $r5, $r13, $r17, $r22, $r25, $r31, $r34, $r38, r39;
        org.apache.james.mime4j.dom.ServiceLoaderException $r43, $r45, $r47;
        java.io.IOException $r35;
        java.io.InputStreamReader $r41;
        java.lang.Class r2, $r14;
        java.lang.Object $r8, $r15, $r16;
        java.lang.ClassNotFoundException $r27;
        java.io.BufferedReader $r42;
        java.io.InputStream $r10;

        r2 := @parameter0: java.lang.Class;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("META-INF/services/");

        $r3 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label01:
        $r7 = virtualinvoke $r6.<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>($r5);

     label02:
        $z0 = interfaceinvoke $r7.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label15;

        $r8 = interfaceinvoke $r7.<java.util.Enumeration: java.lang.Object nextElement()>();

        r9 = (java.net.URL) $r8;

        $r10 = virtualinvoke r9.<java.net.URL: java.io.InputStream openStream()>();

     label03:
        $r42 = new java.io.BufferedReader;

        $r41 = new java.io.InputStreamReader;

        specialinvoke $r41.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r10);

        specialinvoke $r42.<java.io.BufferedReader: void <init>(java.io.Reader)>($r41);

     label04:
        $r38 = virtualinvoke $r42.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r38 == null goto label10;

        $r13 = virtualinvoke $r38.<java.lang.String: java.lang.String trim()>();

        r39 = $r13;

        $i0 = virtualinvoke $r13.<java.lang.String: int indexOf(int)>(35);

        $i3 = (int) -1;

        if $i0 == $i3 goto label05;

        $r17 = virtualinvoke $r13.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        r39 = virtualinvoke $r17.<java.lang.String: java.lang.String trim()>();

     label05:
        $i1 = virtualinvoke r39.<java.lang.String: int length()>();

        if $i1 != 0 goto label06;

        goto label04;

     label06:
        $r14 = virtualinvoke $r6.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r39);

        $z1 = virtualinvoke r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r14);

        if $z1 == 0 goto label09;

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.Object newInstance()>();

        $r16 = virtualinvoke r2.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r15);

     label07:
        virtualinvoke $r10.<java.io.InputStream: void close()>();

     label08:
        return $r16;

     label09:
        goto label04;

     label10:
        virtualinvoke $r42.<java.io.BufferedReader: void close()>();

     label11:
        virtualinvoke $r10.<java.io.InputStream: void close()>();

        goto label14;

     label12:
        $r37 := @caughtexception;

     label13:
        virtualinvoke $r10.<java.io.InputStream: void close()>();

        throw $r37;

     label14:
        goto label02;

     label15:
        return null;

     label16:
        $r35 := @caughtexception;

        $r43 = new org.apache.james.mime4j.dom.ServiceLoaderException;

        specialinvoke $r43.<org.apache.james.mime4j.dom.ServiceLoaderException: void <init>(java.lang.Throwable)>($r35);

        throw $r43;

     label17:
        $r27 := @caughtexception;

        $r45 = new org.apache.james.mime4j.dom.ServiceLoaderException;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown SPI class \'");

        $r31 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r45.<org.apache.james.mime4j.dom.ServiceLoaderException: void <init>(java.lang.String,java.lang.Throwable)>($r34, $r27);

        throw $r45;

     label18:
        $r26 := @caughtexception;

        return null;

     label19:
        $r18 := @caughtexception;

        $r47 = new org.apache.james.mime4j.dom.ServiceLoaderException;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SPI class \'");

        $r22 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' cannot be instantiated");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r47.<org.apache.james.mime4j.dom.ServiceLoaderException: void <init>(java.lang.String,java.lang.Throwable)>($r25, $r18);

        throw $r47;

        catch java.lang.Throwable from label03 to label07 with label12;
        catch java.lang.Throwable from label09 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.io.IOException from label01 to label08 with label16;
        catch java.io.IOException from label09 to label15 with label16;
        catch java.lang.ClassNotFoundException from label01 to label08 with label17;
        catch java.lang.ClassNotFoundException from label09 to label15 with label17;
        catch java.lang.IllegalAccessException from label01 to label08 with label18;
        catch java.lang.IllegalAccessException from label09 to label15 with label18;
        catch java.lang.InstantiationException from label01 to label08 with label19;
        catch java.lang.InstantiationException from label09 to label15 with label19;
    }
}
