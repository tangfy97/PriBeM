public class org.codehaus.groovy.ast.stmt.ExpressionStatement extends org.codehaus.groovy.ast.stmt.Statement
{
    private org.codehaus.groovy.ast.expr.Expression expression;

    public void <init>(org.codehaus.groovy.ast.expr.Expression)
    {
        org.codehaus.groovy.ast.expr.Expression r1;
        org.codehaus.groovy.ast.stmt.ExpressionStatement r0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.codehaus.groovy.ast.stmt.ExpressionStatement;

        r1 := @parameter0: org.codehaus.groovy.ast.expr.Expression;

        specialinvoke r0.<org.codehaus.groovy.ast.stmt.Statement: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("expression cannot be null");

        throw $r2;

     label1:
        r0.<org.codehaus.groovy.ast.stmt.ExpressionStatement: org.codehaus.groovy.ast.expr.Expression expression> = r1;

        return;
    }

    public void visit(org.codehaus.groovy.ast.GroovyCodeVisitor)
    {
        org.codehaus.groovy.ast.stmt.ExpressionStatement r1;
        org.codehaus.groovy.ast.GroovyCodeVisitor r0;

        r1 := @this: org.codehaus.groovy.ast.stmt.ExpressionStatement;

        r0 := @parameter0: org.codehaus.groovy.ast.GroovyCodeVisitor;

        interfaceinvoke r0.<org.codehaus.groovy.ast.GroovyCodeVisitor: void visitExpressionStatement(org.codehaus.groovy.ast.stmt.ExpressionStatement)>(r1);

        return;
    }

    public org.codehaus.groovy.ast.expr.Expression getExpression()
    {
        org.codehaus.groovy.ast.expr.Expression $r1;
        org.codehaus.groovy.ast.stmt.ExpressionStatement r0;

        r0 := @this: org.codehaus.groovy.ast.stmt.ExpressionStatement;

        $r1 = r0.<org.codehaus.groovy.ast.stmt.ExpressionStatement: org.codehaus.groovy.ast.expr.Expression expression>;

        return $r1;
    }

    public void setExpression(org.codehaus.groovy.ast.expr.Expression)
    {
        org.codehaus.groovy.ast.expr.Expression r1;
        org.codehaus.groovy.ast.stmt.ExpressionStatement r0;

        r0 := @this: org.codehaus.groovy.ast.stmt.ExpressionStatement;

        r1 := @parameter0: org.codehaus.groovy.ast.expr.Expression;

        r0.<org.codehaus.groovy.ast.stmt.ExpressionStatement: org.codehaus.groovy.ast.expr.Expression expression> = r1;

        return;
    }

    public java.lang.String getText()
    {
        java.lang.String $r1;
        org.codehaus.groovy.ast.stmt.ExpressionStatement r0;

        r0 := @this: org.codehaus.groovy.ast.stmt.ExpressionStatement;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.ast.stmt.ExpressionStatement: java.lang.String toString()>();

        return $r1;
    }

    public java.lang.String toString()
    {
        org.codehaus.groovy.ast.stmt.ExpressionStatement r1;
        java.lang.StringBuffer $r0, $r3, $r4, $r6, $r7;
        java.lang.String $r2, $r8;
        org.codehaus.groovy.ast.expr.Expression $r5;

        r1 := @this: org.codehaus.groovy.ast.stmt.ExpressionStatement;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = specialinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[expression:");

        $r5 = r1.<org.codehaus.groovy.ast.stmt.ExpressionStatement: org.codehaus.groovy.ast.expr.Expression expression>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }
}
