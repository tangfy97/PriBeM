public class org.apache.solr.common.SolrInputDocument extends java.lang.Object implements java.util.Map, java.lang.Iterable, java.io.Serializable
{
    private final java.util.Map _fields;
    private float _documentBoost;

    public void <init>()
    {
        java.util.LinkedHashMap $r1;
        org.apache.solr.common.SolrInputDocument r0;

        r0 := @this: org.apache.solr.common.SolrInputDocument;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.solr.common.SolrInputDocument: float _documentBoost> = 1.0F;

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.solr.common.SolrInputDocument: java.util.Map _fields> = $r1;

        return;
    }

    public void <init>(java.util.Map)
    {
        org.apache.solr.common.SolrInputDocument r0;
        java.util.Map r1;

        r0 := @this: org.apache.solr.common.SolrInputDocument;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.solr.common.SolrInputDocument: float _documentBoost> = 1.0F;

        r0.<org.apache.solr.common.SolrInputDocument: java.util.Map _fields> = r1;

        return;
    }

    public void clear()
    {
        org.apache.solr.common.SolrInputDocument r0;
        java.util.Map $r1, $r2;

        r0 := @this: org.apache.solr.common.SolrInputDocument;

        $r1 = r0.<org.apache.solr.common.SolrInputDocument: java.util.Map _fields>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.solr.common.SolrInputDocument: java.util.Map _fields>;

        interfaceinvoke $r2.<java.util.Map: void clear()>();

     label1:
        return;
    }

    public void addField(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2;
        java.lang.String r1;
        org.apache.solr.common.SolrInputDocument r0;

        r0 := @this: org.apache.solr.common.SolrInputDocument;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        virtualinvoke r0.<org.apache.solr.common.SolrInputDocument: void addField(java.lang.String,java.lang.Object,float)>(r1, r2, 1.0F);

        return;
    }

    public java.lang.Object getFieldValue(java.lang.String)
    {
        java.lang.Object r3;
        java.lang.String r1;
        org.apache.solr.common.SolrInputField $r2;
        org.apache.solr.common.SolrInputDocument r0;

        r0 := @this: org.apache.solr.common.SolrInputDocument;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.solr.common.SolrInputDocument: org.apache.solr.common.SolrInputField getField(java.lang.String)>(r1);

        r3 = null;

        if $r2 == null goto label1;

        r3 = virtualinvoke $r2.<org.apache.solr.common.SolrInputField: java.lang.Object getFirstValue()>();

     label1:
        return r3;
    }

    public java.util.Collection getFieldValues(java.lang.String)
    {
        java.util.Collection $r3;
        java.lang.String r1;
        org.apache.solr.common.SolrInputField $r2;
        org.apache.solr.common.SolrInputDocument r0;

        r0 := @this: org.apache.solr.common.SolrInputDocument;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.solr.common.SolrInputDocument: org.apache.solr.common.SolrInputField getField(java.lang.String)>(r1);

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<org.apache.solr.common.SolrInputField: java.util.Collection getValues()>();

        return $r3;

     label1:
        return null;
    }

    public java.util.Collection getFieldNames()
    {
        java.util.Set $r2;
        org.apache.solr.common.SolrInputDocument r0;
        java.util.Map $r1;

        r0 := @this: org.apache.solr.common.SolrInputDocument;

        $r1 = r0.<org.apache.solr.common.SolrInputDocument: java.util.Map _fields>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        return $r2;
    }

    public void setField(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2;
        java.lang.String r1;
        org.apache.solr.common.SolrInputDocument r0;

        r0 := @this: org.apache.solr.common.SolrInputDocument;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        virtualinvoke r0.<org.apache.solr.common.SolrInputDocument: void setField(java.lang.String,java.lang.Object,float)>(r1, r2, 1.0F);

        return;
    }

    public void setField(java.lang.String, java.lang.Object, float)
    {
        java.util.Map $r3;
        float f0;
        java.lang.Object r4;
        java.lang.String r1;
        org.apache.solr.common.SolrInputField $r0;
        org.apache.solr.common.SolrInputDocument r2;

        r2 := @this: org.apache.solr.common.SolrInputDocument;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Object;

        f0 := @parameter2: float;

        $r0 = new org.apache.solr.common.SolrInputField;

        specialinvoke $r0.<org.apache.solr.common.SolrInputField: void <init>(java.lang.String)>(r1);

        $r3 = r2.<org.apache.solr.common.SolrInputDocument: java.util.Map _fields>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r0);

        virtualinvoke $r0.<org.apache.solr.common.SolrInputField: void setValue(java.lang.Object,float)>(r4, f0);

        return;
    }

    public void addField(java.lang.String, java.lang.Object, float)
    {
        org.apache.solr.common.SolrInputField r4;
        java.util.Map $r2;
        float f0;
        java.lang.Object $r3, r5, $r6;
        java.lang.String r1;
        org.apache.solr.common.SolrInputDocument r0;

        r0 := @this: org.apache.solr.common.SolrInputDocument;

        r1 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Object;

        f0 := @parameter2: float;

        $r2 = r0.<org.apache.solr.common.SolrInputDocument: java.util.Map _fields>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.apache.solr.common.SolrInputField) $r3;

        if r4 == null goto label1;

        $r6 = r4.<org.apache.solr.common.SolrInputField: java.lang.Object value>;

        if $r6 != null goto label2;

     label1:
        virtualinvoke r0.<org.apache.solr.common.SolrInputDocument: void setField(java.lang.String,java.lang.Object,float)>(r1, r5, f0);

        goto label3;

     label2:
        virtualinvoke r4.<org.apache.solr.common.SolrInputField: void addValue(java.lang.Object,float)>(r5, f0);

     label3:
        return;
    }

    public org.apache.solr.common.SolrInputField removeField(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        org.apache.solr.common.SolrInputField $r4;
        org.apache.solr.common.SolrInputDocument r0;

        r0 := @this: org.apache.solr.common.SolrInputDocument;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.solr.common.SolrInputDocument: java.util.Map _fields>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $r4 = (org.apache.solr.common.SolrInputField) $r3;

        return $r4;
    }

    public org.apache.solr.common.SolrInputField getField(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        org.apache.solr.common.SolrInputField $r4;
        org.apache.solr.common.SolrInputDocument r0;

        r0 := @this: org.apache.solr.common.SolrInputDocument;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.solr.common.SolrInputDocument: java.util.Map _fields>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.solr.common.SolrInputField) $r3;

        return $r4;
    }

    public java.util.Iterator iterator()
    {
        java.util.Iterator $r3;
        java.util.Map $r1;
        java.util.Collection $r2;
        org.apache.solr.common.SolrInputDocument r0;

        r0 := @this: org.apache.solr.common.SolrInputDocument;

        $r1 = r0.<org.apache.solr.common.SolrInputDocument: java.util.Map _fields>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

        return $r3;
    }

    public float getDocumentBoost()
    {
        float $f0;
        org.apache.solr.common.SolrInputDocument r0;

        r0 := @this: org.apache.solr.common.SolrInputDocument;

        $f0 = r0.<org.apache.solr.common.SolrInputDocument: float _documentBoost>;

        return $f0;
    }

    public void setDocumentBoost(float)
    {
        float f0;
        org.apache.solr.common.SolrInputDocument r0;

        r0 := @this: org.apache.solr.common.SolrInputDocument;

        f0 := @parameter0: float;

        r0.<org.apache.solr.common.SolrInputDocument: float _documentBoost> = f0;

        return;
    }

    public java.lang.String toString()
    {
        java.util.Map $r3;
        java.util.Collection $r4;
        java.lang.StringBuilder $r0, $r1, $r5;
        java.lang.String $r6;
        org.apache.solr.common.SolrInputDocument r2;

        r2 := @this: org.apache.solr.common.SolrInputDocument;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SolrInputDocument");

        $r3 = r2.<org.apache.solr.common.SolrInputDocument: java.util.Map _fields>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public org.apache.solr.common.SolrInputDocument deepCopy()
    {
        java.util.Map$Entry r6;
        java.util.Iterator $r4;
        java.util.Set $r3;
        org.apache.solr.common.SolrInputField $r10, $r11;
        java.util.Map $r2, $r7;
        float $f0;
        java.lang.Object $r5, $r8, $r9;
        org.apache.solr.common.SolrInputDocument $r0, r1;
        boolean $z0;

        r1 := @this: org.apache.solr.common.SolrInputDocument;

        $r0 = new org.apache.solr.common.SolrInputDocument;

        specialinvoke $r0.<org.apache.solr.common.SolrInputDocument: void <init>()>();

        $r2 = r1.<org.apache.solr.common.SolrInputDocument: java.util.Map _fields>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r7 = $r0.<org.apache.solr.common.SolrInputDocument: java.util.Map _fields>;

        $r8 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (org.apache.solr.common.SolrInputField) $r9;

        $r11 = virtualinvoke $r10.<org.apache.solr.common.SolrInputField: org.apache.solr.common.SolrInputField deepCopy()>();

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r11);

        goto label1;

     label2:
        $f0 = r1.<org.apache.solr.common.SolrInputDocument: float _documentBoost>;

        $r0.<org.apache.solr.common.SolrInputDocument: float _documentBoost> = $f0;

        return $r0;
    }

    public boolean containsKey(java.lang.Object)
    {
        java.util.Map $r2;
        java.lang.Object r1;
        org.apache.solr.common.SolrInputDocument r0;
        boolean $z0;

        r0 := @this: org.apache.solr.common.SolrInputDocument;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.solr.common.SolrInputDocument: java.util.Map _fields>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        java.util.Map $r2;
        java.lang.Object r1;
        org.apache.solr.common.SolrInputDocument r0;
        boolean $z0;

        r0 := @this: org.apache.solr.common.SolrInputDocument;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.solr.common.SolrInputDocument: java.util.Map _fields>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsValue(java.lang.Object)>(r1);

        return $z0;
    }

    public java.util.Set entrySet()
    {
        java.util.Set $r2;
        org.apache.solr.common.SolrInputDocument r0;
        java.util.Map $r1;

        r0 := @this: org.apache.solr.common.SolrInputDocument;

        $r1 = r0.<org.apache.solr.common.SolrInputDocument: java.util.Map _fields>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        return $r2;
    }

    public org.apache.solr.common.SolrInputField get(java.lang.Object)
    {
        java.util.Map $r2;
        java.lang.Object r1, $r3;
        org.apache.solr.common.SolrInputField $r4;
        org.apache.solr.common.SolrInputDocument r0;

        r0 := @this: org.apache.solr.common.SolrInputDocument;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.solr.common.SolrInputDocument: java.util.Map _fields>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.solr.common.SolrInputField) $r3;

        return $r4;
    }

    public boolean isEmpty()
    {
        org.apache.solr.common.SolrInputDocument r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @this: org.apache.solr.common.SolrInputDocument;

        $r1 = r0.<org.apache.solr.common.SolrInputDocument: java.util.Map _fields>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        return $z0;
    }

    public java.util.Set keySet()
    {
        java.util.Set $r2;
        org.apache.solr.common.SolrInputDocument r0;
        java.util.Map $r1;

        r0 := @this: org.apache.solr.common.SolrInputDocument;

        $r1 = r0.<org.apache.solr.common.SolrInputDocument: java.util.Map _fields>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        return $r2;
    }

    public org.apache.solr.common.SolrInputField put(java.lang.String, org.apache.solr.common.SolrInputField)
    {
        java.util.Map $r3;
        java.lang.Object $r4;
        java.lang.String r1;
        org.apache.solr.common.SolrInputField r2, $r5;
        org.apache.solr.common.SolrInputDocument r0;

        r0 := @this: org.apache.solr.common.SolrInputDocument;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.solr.common.SolrInputField;

        $r3 = r0.<org.apache.solr.common.SolrInputDocument: java.util.Map _fields>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r5 = (org.apache.solr.common.SolrInputField) $r4;

        return $r5;
    }

    public void putAll(java.util.Map)
    {
        org.apache.solr.common.SolrInputDocument r0;
        java.util.Map r1, $r2;

        r0 := @this: org.apache.solr.common.SolrInputDocument;

        r1 := @parameter0: java.util.Map;

        $r2 = r0.<org.apache.solr.common.SolrInputDocument: java.util.Map _fields>;

        interfaceinvoke $r2.<java.util.Map: void putAll(java.util.Map)>(r1);

        return;
    }

    public org.apache.solr.common.SolrInputField remove(java.lang.Object)
    {
        java.util.Map $r2;
        java.lang.Object r1, $r3;
        org.apache.solr.common.SolrInputField $r4;
        org.apache.solr.common.SolrInputDocument r0;

        r0 := @this: org.apache.solr.common.SolrInputDocument;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.solr.common.SolrInputDocument: java.util.Map _fields>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $r4 = (org.apache.solr.common.SolrInputField) $r3;

        return $r4;
    }

    public int size()
    {
        int $i0;
        org.apache.solr.common.SolrInputDocument r0;
        java.util.Map $r1;

        r0 := @this: org.apache.solr.common.SolrInputDocument;

        $r1 = r0.<org.apache.solr.common.SolrInputDocument: java.util.Map _fields>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    public java.util.Collection values()
    {
        org.apache.solr.common.SolrInputDocument r0;
        java.util.Map $r1;
        java.util.Collection $r2;

        r0 := @this: org.apache.solr.common.SolrInputDocument;

        $r1 = r0.<org.apache.solr.common.SolrInputDocument: java.util.Map _fields>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        return $r2;
    }

    public volatile java.lang.Object remove(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.solr.common.SolrInputField $r2;
        org.apache.solr.common.SolrInputDocument r0;

        r0 := @this: org.apache.solr.common.SolrInputDocument;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.solr.common.SolrInputDocument: org.apache.solr.common.SolrInputField remove(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r1, r2;
        java.lang.String $r4;
        org.apache.solr.common.SolrInputField $r3, $r5;
        org.apache.solr.common.SolrInputDocument r0;

        r0 := @this: org.apache.solr.common.SolrInputDocument;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.String) r1;

        $r3 = (org.apache.solr.common.SolrInputField) r2;

        $r5 = virtualinvoke r0.<org.apache.solr.common.SolrInputDocument: org.apache.solr.common.SolrInputField put(java.lang.String,org.apache.solr.common.SolrInputField)>($r4, $r3);

        return $r5;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.solr.common.SolrInputField $r2;
        org.apache.solr.common.SolrInputDocument r0;

        r0 := @this: org.apache.solr.common.SolrInputDocument;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.solr.common.SolrInputDocument: org.apache.solr.common.SolrInputField get(java.lang.Object)>(r1);

        return $r2;
    }
}
