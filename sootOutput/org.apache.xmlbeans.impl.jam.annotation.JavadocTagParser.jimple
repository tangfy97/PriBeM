public abstract class org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser extends java.lang.Object
{
    private org.apache.xmlbeans.impl.jam.provider.JamServiceContext mContext;
    private boolean mAddSingleValueMembers;

    public void <init>()
    {
        org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser: org.apache.xmlbeans.impl.jam.provider.JamServiceContext mContext> = null;

        r0.<org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser: boolean mAddSingleValueMembers> = 0;

        return;
    }

    public void setAddSingleValueMembers(boolean)
    {
        org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser r0;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser;

        z0 := @parameter0: boolean;

        r0.<org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser: boolean mAddSingleValueMembers> = z0;

        return;
    }

    public void init(org.apache.xmlbeans.impl.jam.provider.JamServiceContext)
    {
        java.lang.IllegalStateException $r3;
        org.apache.xmlbeans.impl.jam.provider.JamServiceContext r0, $r2;
        java.lang.IllegalArgumentException $r4;
        org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser r1;

        r1 := @this: org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.provider.JamServiceContext;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null logger");

        throw $r4;

     label1:
        $r2 = r1.<org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser: org.apache.xmlbeans.impl.jam.provider.JamServiceContext mContext>;

        if $r2 == null goto label2;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("JavadocTagParser.init() called twice");

        throw $r3;

     label2:
        r1.<org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser: org.apache.xmlbeans.impl.jam.provider.JamServiceContext mContext> = r0;

        return;
    }

    public abstract void parse(org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement, com.sun.javadoc.Tag);

    protected org.apache.xmlbeans.impl.jam.mutable.MAnnotation[] createAnnotations(org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement, com.sun.javadoc.Tag)
    {
        org.apache.xmlbeans.impl.jam.mutable.MAnnotation $r5, $r6, $r9, r10;
        com.sun.javadoc.Tag r0;
        org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement r4;
        org.apache.xmlbeans.impl.jam.mutable.MAnnotation[] $r8;
        java.lang.String $r1, $r2, $r3;
        org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser r7;
        boolean $z0;

        r7 := @this: org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser;

        r4 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement;

        r0 := @parameter1: com.sun.javadoc.Tag;

        $r1 = interfaceinvoke r0.<com.sun.javadoc.Tag: java.lang.String name()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>(1);

        $r5 = interfaceinvoke r4.<org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement: org.apache.xmlbeans.impl.jam.mutable.MAnnotation getMutableAnnotation(java.lang.String)>($r3);

        r10 = $r5;

        if $r5 != null goto label1;

        $r9 = interfaceinvoke r4.<org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement: org.apache.xmlbeans.impl.jam.mutable.MAnnotation findOrCreateAnnotation(java.lang.String)>($r3);

        r10 = $r9;

        specialinvoke r7.<org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser: void setPosition(org.apache.xmlbeans.impl.jam.mutable.MAnnotation,com.sun.javadoc.Tag)>($r9, r0);

     label1:
        $r6 = interfaceinvoke r4.<org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement: org.apache.xmlbeans.impl.jam.mutable.MAnnotation addLiteralAnnotation(java.lang.String)>($r3);

        specialinvoke r7.<org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser: void setPosition(org.apache.xmlbeans.impl.jam.mutable.MAnnotation,com.sun.javadoc.Tag)>($r6, r0);

        $r8 = newarray (org.apache.xmlbeans.impl.jam.mutable.MAnnotation)[2];

        $r8[0] = $r6;

        $r8[1] = r10;

        $z0 = r7.<org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser: boolean mAddSingleValueMembers>;

        if $z0 == 0 goto label2;

        virtualinvoke r7.<org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser: void setSingleValueText(org.apache.xmlbeans.impl.jam.mutable.MAnnotation[],com.sun.javadoc.Tag)>($r8, r0);

     label2:
        return $r8;
    }

    protected void setValue(org.apache.xmlbeans.impl.jam.mutable.MAnnotation[], java.lang.String, java.lang.String)
    {
        org.apache.xmlbeans.impl.jam.mutable.MAnnotation $r3, $r6;
        org.apache.xmlbeans.impl.jam.JAnnotationValue $r4;
        org.apache.xmlbeans.impl.jam.JClass $r7;
        org.apache.xmlbeans.impl.jam.mutable.MAnnotation[] r2;
        int $i0, i1;
        java.lang.String $r0, $r1, r8, r9;
        org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser r5;

        r5 := @this: org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser;

        r2 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MAnnotation[];

        r8 := @parameter1: java.lang.String;

        r9 := @parameter2: java.lang.String;

        $r0 = virtualinvoke r9.<java.lang.String: java.lang.String trim()>();

        $r1 = virtualinvoke r8.<java.lang.String: java.lang.String trim()>();

        i1 = 0;

     label1:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label3;

        $r3 = r2[i1];

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.impl.jam.mutable.MAnnotation: org.apache.xmlbeans.impl.jam.JAnnotationValue getValue(java.lang.String)>($r1);

        if $r4 != null goto label2;

        $r6 = r2[i1];

        $r7 = virtualinvoke r5.<org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser: org.apache.xmlbeans.impl.jam.JClass getStringType()>();

        interfaceinvoke $r6.<org.apache.xmlbeans.impl.jam.mutable.MAnnotation: void setSimpleValue(java.lang.String,java.lang.Object,org.apache.xmlbeans.impl.jam.JClass)>($r1, $r0, $r7);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    protected org.apache.xmlbeans.impl.jam.provider.JamLogger getLogger()
    {
        org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser r0;
        org.apache.xmlbeans.impl.jam.provider.JamServiceContext $r1;
        org.apache.xmlbeans.impl.jam.provider.JamLogger $r2;

        r0 := @this: org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser: org.apache.xmlbeans.impl.jam.provider.JamServiceContext mContext>;

        $r2 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.jam.provider.JamServiceContext: org.apache.xmlbeans.impl.jam.provider.JamLogger getLogger()>();

        return $r2;
    }

    protected org.apache.xmlbeans.impl.jam.JClass getStringType()
    {
        org.apache.xmlbeans.impl.jam.provider.JamServiceContext $r1;
        org.apache.xmlbeans.impl.jam.JamClassLoader $r3;
        org.apache.xmlbeans.impl.jam.JClass $r4;
        org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser r0;
        org.apache.xmlbeans.impl.jam.internal.elements.ElementContext $r2;

        r0 := @this: org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser: org.apache.xmlbeans.impl.jam.provider.JamServiceContext mContext>;

        $r2 = (org.apache.xmlbeans.impl.jam.internal.elements.ElementContext) $r1;

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.jam.internal.elements.ElementContext: org.apache.xmlbeans.impl.jam.JamClassLoader getClassLoader()>();

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.impl.jam.JamClassLoader: org.apache.xmlbeans.impl.jam.JClass loadClass(java.lang.String)>("java.lang.String");

        return $r4;
    }

    protected void setSingleValueText(org.apache.xmlbeans.impl.jam.mutable.MAnnotation[], com.sun.javadoc.Tag)
    {
        org.apache.xmlbeans.impl.jam.mutable.MAnnotation $r4;
        com.sun.javadoc.Tag r0;
        org.apache.xmlbeans.impl.jam.JClass $r5;
        org.apache.xmlbeans.impl.jam.mutable.MAnnotation[] r2;
        int $i0, i1;
        java.lang.String $r1;
        org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser r3;

        r3 := @this: org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser;

        r2 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MAnnotation[];

        r0 := @parameter1: com.sun.javadoc.Tag;

        $r1 = interfaceinvoke r0.<com.sun.javadoc.Tag: java.lang.String text()>();

        i1 = 0;

     label1:
        $i0 = lengthof r2;

        if i1 >= $i0 goto label2;

        $r4 = r2[i1];

        $r5 = virtualinvoke r3.<org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser: org.apache.xmlbeans.impl.jam.JClass getStringType()>();

        interfaceinvoke $r4.<org.apache.xmlbeans.impl.jam.mutable.MAnnotation: void setSimpleValue(java.lang.String,java.lang.Object,org.apache.xmlbeans.impl.jam.JClass)>("value", $r1, $r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void setPosition(org.apache.xmlbeans.impl.jam.mutable.MAnnotation, com.sun.javadoc.Tag)
    {
        org.apache.xmlbeans.impl.jam.mutable.MSourcePosition $r3;
        com.sun.javadoc.SourcePosition $r1;
        org.apache.xmlbeans.impl.jam.mutable.MAnnotation r2;
        com.sun.javadoc.Tag r0;
        java.io.File $r4, $r5;
        int $i0, $i1;
        java.net.URI $r6;
        org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser r7;

        r7 := @this: org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser;

        r2 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MAnnotation;

        r0 := @parameter1: com.sun.javadoc.Tag;

        $r1 = interfaceinvoke r0.<com.sun.javadoc.Tag: com.sun.javadoc.SourcePosition position()>();

        if $r1 == null goto label1;

        $r3 = interfaceinvoke r2.<org.apache.xmlbeans.impl.jam.mutable.MAnnotation: org.apache.xmlbeans.impl.jam.mutable.MSourcePosition createSourcePosition()>();

        $i0 = interfaceinvoke $r1.<com.sun.javadoc.SourcePosition: int line()>();

        interfaceinvoke $r3.<org.apache.xmlbeans.impl.jam.mutable.MSourcePosition: void setLine(int)>($i0);

        $i1 = interfaceinvoke $r1.<com.sun.javadoc.SourcePosition: int column()>();

        interfaceinvoke $r3.<org.apache.xmlbeans.impl.jam.mutable.MSourcePosition: void setColumn(int)>($i1);

        $r4 = interfaceinvoke $r1.<com.sun.javadoc.SourcePosition: java.io.File file()>();

        if $r4 == null goto label1;

        $r5 = interfaceinvoke $r1.<com.sun.javadoc.SourcePosition: java.io.File file()>();

        $r6 = virtualinvoke $r5.<java.io.File: java.net.URI toURI()>();

        interfaceinvoke $r3.<org.apache.xmlbeans.impl.jam.mutable.MSourcePosition: void setSourceURI(java.net.URI)>($r6);

     label1:
        return;
    }
}
