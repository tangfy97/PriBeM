class org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite$1 extends org.apache.lucene.search.TopTermsRewrite
{
    final org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite this$0;

    void <init>(org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite, int)
    {
        int i0;
        org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite r1;
        org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite$1 r0;

        r0 := @this: org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite$1;

        r1 := @parameter0: org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite;

        i0 := @parameter1: int;

        r0.<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite$1: org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite this$0> = r1;

        specialinvoke r0.<org.apache.lucene.search.TopTermsRewrite: void <init>(int)>(i0);

        return;
    }

    protected int getMaxSize()
    {
        org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite$1 r0;

        r0 := @this: org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite$1;

        return 2147483647;
    }

    protected org.apache.lucene.search.spans.SpanOrQuery getTopLevelQuery()
    {
        org.apache.lucene.search.spans.SpanQuery[] $r1;
        org.apache.lucene.search.spans.SpanOrQuery $r0;
        org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite$1 r2;

        r2 := @this: org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite$1;

        $r0 = new org.apache.lucene.search.spans.SpanOrQuery;

        $r1 = newarray (org.apache.lucene.search.spans.SpanQuery)[0];

        specialinvoke $r0.<org.apache.lucene.search.spans.SpanOrQuery: void <init>(org.apache.lucene.search.spans.SpanQuery[])>($r1);

        return $r0;
    }

    protected void addClause(org.apache.lucene.search.spans.SpanOrQuery, org.apache.lucene.index.Term, int, float, org.apache.lucene.index.TermContext)
    {
        org.apache.lucene.search.spans.SpanTermQuery $r0;
        org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite$1 r3;
        org.apache.lucene.index.Term r1;
        int i0;
        float f0;
        org.apache.lucene.search.spans.SpanOrQuery r2;
        org.apache.lucene.index.TermContext r4;

        r3 := @this: org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite$1;

        r2 := @parameter0: org.apache.lucene.search.spans.SpanOrQuery;

        r1 := @parameter1: org.apache.lucene.index.Term;

        i0 := @parameter2: int;

        f0 := @parameter3: float;

        r4 := @parameter4: org.apache.lucene.index.TermContext;

        $r0 = new org.apache.lucene.search.spans.SpanTermQuery;

        specialinvoke $r0.<org.apache.lucene.search.spans.SpanTermQuery: void <init>(org.apache.lucene.index.Term)>(r1);

        virtualinvoke $r0.<org.apache.lucene.search.spans.SpanTermQuery: void setBoost(float)>(f0);

        virtualinvoke r2.<org.apache.lucene.search.spans.SpanOrQuery: void addClause(org.apache.lucene.search.spans.SpanQuery)>($r0);

        return;
    }

    protected volatile void addClause(org.apache.lucene.search.Query, org.apache.lucene.index.Term, int, float, org.apache.lucene.index.TermContext) throws java.io.IOException
    {
        org.apache.lucene.search.Query r1;
        org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite$1 r0;
        org.apache.lucene.index.Term r2;
        int i0;
        float f0;
        org.apache.lucene.search.spans.SpanOrQuery $r4;
        org.apache.lucene.index.TermContext r3;

        r0 := @this: org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite$1;

        r1 := @parameter0: org.apache.lucene.search.Query;

        r2 := @parameter1: org.apache.lucene.index.Term;

        i0 := @parameter2: int;

        f0 := @parameter3: float;

        r3 := @parameter4: org.apache.lucene.index.TermContext;

        $r4 = (org.apache.lucene.search.spans.SpanOrQuery) r1;

        virtualinvoke r0.<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite$1: void addClause(org.apache.lucene.search.spans.SpanOrQuery,org.apache.lucene.index.Term,int,float,org.apache.lucene.index.TermContext)>($r4, r2, i0, f0, r3);

        return;
    }

    protected volatile org.apache.lucene.search.Query getTopLevelQuery() throws java.io.IOException
    {
        org.apache.lucene.search.spans.SpanOrQuery $r1;
        org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite$1 r0;

        r0 := @this: org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite$1;

        $r1 = virtualinvoke r0.<org.apache.lucene.search.spans.SpanMultiTermQueryWrapper$TopTermsSpanBooleanQueryRewrite$1: org.apache.lucene.search.spans.SpanOrQuery getTopLevelQuery()>();

        return $r1;
    }
}
