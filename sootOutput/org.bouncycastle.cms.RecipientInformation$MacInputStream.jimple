class org.bouncycastle.cms.RecipientInformation$MacInputStream extends java.io.InputStream
{
    private final java.io.InputStream inStream;
    private final javax.crypto.Mac mac;

    void <init>(javax.crypto.Mac, java.io.InputStream)
    {
        org.bouncycastle.cms.RecipientInformation$MacInputStream r0;
        javax.crypto.Mac r2;
        java.io.InputStream r1;

        r0 := @this: org.bouncycastle.cms.RecipientInformation$MacInputStream;

        r2 := @parameter0: javax.crypto.Mac;

        r1 := @parameter1: java.io.InputStream;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        r0.<org.bouncycastle.cms.RecipientInformation$MacInputStream: java.io.InputStream inStream> = r1;

        r0.<org.bouncycastle.cms.RecipientInformation$MacInputStream: javax.crypto.Mac mac> = r2;

        return;
    }

    public int read(byte[]) throws java.io.IOException
    {
        byte[] r1;
        int $i0, $i1;
        org.bouncycastle.cms.RecipientInformation$MacInputStream r0;

        r0 := @this: org.bouncycastle.cms.RecipientInformation$MacInputStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        $i1 = virtualinvoke r0.<org.bouncycastle.cms.RecipientInformation$MacInputStream: int read(byte[],int,int)>(r1, 0, $i0);

        return $i1;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        int i0, i1, $i2;
        org.bouncycastle.cms.RecipientInformation$MacInputStream r0;
        javax.crypto.Mac $r3;
        java.io.InputStream $r2;

        r0 := @this: org.bouncycastle.cms.RecipientInformation$MacInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.bouncycastle.cms.RecipientInformation$MacInputStream: java.io.InputStream inStream>;

        $i2 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>(r1, i0, i1);

        if $i2 <= 0 goto label1;

        $r3 = r0.<org.bouncycastle.cms.RecipientInformation$MacInputStream: javax.crypto.Mac mac>;

        virtualinvoke $r3.<javax.crypto.Mac: void update(byte[],int,int)>(r1, i0, $i2);

     label1:
        return $i2;
    }

    public int read() throws java.io.IOException
    {
        byte $b1;
        int $i0;
        org.bouncycastle.cms.RecipientInformation$MacInputStream r0;
        javax.crypto.Mac $r2;
        java.io.InputStream $r1;

        r0 := @this: org.bouncycastle.cms.RecipientInformation$MacInputStream;

        $r1 = r0.<org.bouncycastle.cms.RecipientInformation$MacInputStream: java.io.InputStream inStream>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        if $i0 <= 0 goto label1;

        $r2 = r0.<org.bouncycastle.cms.RecipientInformation$MacInputStream: javax.crypto.Mac mac>;

        $b1 = (byte) $i0;

        virtualinvoke $r2.<javax.crypto.Mac: void update(byte)>($b1);

     label1:
        return $i0;
    }

    public byte[] getMac()
    {
        org.bouncycastle.cms.RecipientInformation$MacInputStream r0;
        javax.crypto.Mac $r1;
        byte[] $r2;

        r0 := @this: org.bouncycastle.cms.RecipientInformation$MacInputStream;

        $r1 = r0.<org.bouncycastle.cms.RecipientInformation$MacInputStream: javax.crypto.Mac mac>;

        $r2 = virtualinvoke $r1.<javax.crypto.Mac: byte[] doFinal()>();

        return $r2;
    }
}
