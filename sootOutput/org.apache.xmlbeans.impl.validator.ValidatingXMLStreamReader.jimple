public class org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader extends javax.xml.stream.util.StreamReaderDelegate implements javax.xml.stream.XMLStreamReader
{
    public static final java.lang.String OPTION_ATTTRIBUTE_VALIDATION_COMPAT_MODE;
    private static final java.lang.String URI_XSI;
    private static final javax.xml.namespace.QName XSI_TYPE;
    private static final javax.xml.namespace.QName XSI_NIL;
    private static final javax.xml.namespace.QName XSI_SL;
    private static final javax.xml.namespace.QName XSI_NSL;
    private org.apache.xmlbeans.SchemaType _contentType;
    private org.apache.xmlbeans.SchemaTypeLoader _stl;
    private org.apache.xmlbeans.XmlOptions _options;
    private java.util.Collection _errorListener;
    protected org.apache.xmlbeans.impl.validator.Validator _validator;
    private final org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl _elemEvent;
    private final org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$AttributeEventImpl _attEvent;
    private final org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$SimpleEventImpl _simpleEvent;
    private org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$PackTextXmlStreamReader _packTextXmlStreamReader;
    private int _state;
    private final int STATE_FIRSTEVENT;
    private final int STATE_VALIDATING;
    private final int STATE_ATTBUFFERING;
    private final int STATE_ERROR;
    private java.util.List _attNamesList;
    private java.util.List _attValuesList;
    private org.apache.xmlbeans.SchemaType _xsiType;
    private int _depth;
    static java.lang.Class class$org$apache$xmlbeans$impl$validator$ValidatingXMLStreamReader;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl $r1;
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$PackTextXmlStreamReader $r4;
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader r0;
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$SimpleEventImpl $r3;
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$AttributeEventImpl $r2;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader;

        specialinvoke r0.<javax.xml.stream.util.StreamReaderDelegate: void <init>()>();

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int STATE_ERROR> = 3;

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int STATE_ATTBUFFERING> = 2;

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int STATE_VALIDATING> = 1;

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int STATE_FIRSTEVENT> = 0;

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int STATE_FIRSTEVENT> = 0;

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int STATE_VALIDATING> = 1;

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int STATE_ATTBUFFERING> = 2;

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int STATE_ERROR> = 3;

        $r1 = new org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl;

        specialinvoke $r1.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: void <init>(org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$1)>(null);

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl _elemEvent> = $r1;

        $r2 = new org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$AttributeEventImpl;

        specialinvoke $r2.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$AttributeEventImpl: void <init>(org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$1)>(null);

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$AttributeEventImpl _attEvent> = $r2;

        $r3 = new org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$SimpleEventImpl;

        specialinvoke $r3.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$SimpleEventImpl: void <init>(org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$1)>(null);

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$SimpleEventImpl _simpleEvent> = $r3;

        $r4 = new org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$PackTextXmlStreamReader;

        specialinvoke $r4.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$PackTextXmlStreamReader: void <init>(org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$1)>(null);

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$PackTextXmlStreamReader _packTextXmlStreamReader> = $r4;

        return;
    }

    public void init(javax.xml.stream.XMLStreamReader, boolean, org.apache.xmlbeans.SchemaType, org.apache.xmlbeans.SchemaTypeLoader, org.apache.xmlbeans.XmlOptions, java.util.Collection)
    {
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$PackTextXmlStreamReader $r2, $r3, $r8, $r10, $r12;
        javax.xml.stream.XMLStreamReader r1;
        int $i0;
        org.apache.xmlbeans.SchemaType r4;
        boolean z0;
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl $r9;
        org.apache.xmlbeans.SchemaTypeLoader r5;
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader r0;
        java.util.Collection r7;
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$SimpleEventImpl $r13;
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$AttributeEventImpl $r11;
        java.util.List $r14, $r15, $r16;
        org.apache.xmlbeans.XmlOptions r6;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader;

        r1 := @parameter0: javax.xml.stream.XMLStreamReader;

        z0 := @parameter1: boolean;

        r4 := @parameter2: org.apache.xmlbeans.SchemaType;

        r5 := @parameter3: org.apache.xmlbeans.SchemaTypeLoader;

        r6 := @parameter4: org.apache.xmlbeans.XmlOptions;

        r7 := @parameter5: java.util.Collection;

        $r2 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$PackTextXmlStreamReader _packTextXmlStreamReader>;

        virtualinvoke $r2.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$PackTextXmlStreamReader: void init(javax.xml.stream.XMLStreamReader)>(r1);

        $r3 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$PackTextXmlStreamReader _packTextXmlStreamReader>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: void setParent(javax.xml.stream.XMLStreamReader)>($r3);

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.SchemaType _contentType> = r4;

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.SchemaTypeLoader _stl> = r5;

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.XmlOptions _options> = r6;

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: java.util.Collection _errorListener> = r7;

        $r9 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl _elemEvent>;

        $r8 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$PackTextXmlStreamReader _packTextXmlStreamReader>;

        staticinvoke <org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl: void access$400(org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl,javax.xml.stream.XMLStreamReader)>($r9, $r8);

        $r11 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$AttributeEventImpl _attEvent>;

        $r10 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$PackTextXmlStreamReader _packTextXmlStreamReader>;

        staticinvoke <org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$AttributeEventImpl: void access$500(org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$AttributeEventImpl,javax.xml.stream.XMLStreamReader)>($r11, $r10);

        $r13 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$SimpleEventImpl _simpleEvent>;

        $r12 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$PackTextXmlStreamReader _packTextXmlStreamReader>;

        staticinvoke <org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$SimpleEventImpl: void access$600(org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$SimpleEventImpl,javax.xml.stream.XMLStreamReader)>($r13, $r12);

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.Validator _validator> = null;

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int _state> = 0;

        $r14 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: java.util.List _attNamesList>;

        if $r14 == null goto label1;

        $r15 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: java.util.List _attNamesList>;

        interfaceinvoke $r15.<java.util.List: void clear()>();

        $r16 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: java.util.List _attValuesList>;

        interfaceinvoke $r16.<java.util.List: void clear()>();

     label1:
        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.SchemaType _xsiType> = null;

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int _depth> = 0;

        if z0 == 0 goto label2;

        $i0 = virtualinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int getEventType()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: void validate_event(int)>($i0);

     label2:
        return;
    }

    public java.lang.Object getProperty(java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.lang.Object $r2;
        java.lang.String r1;
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader r0;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<javax.xml.stream.util.StreamReaderDelegate: java.lang.Object getProperty(java.lang.String)>(r1);

        return $r2;
    }

    public int next() throws javax.xml.stream.XMLStreamException
    {
        int $i0;
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader r0;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader;

        $i0 = specialinvoke r0.<javax.xml.stream.util.StreamReaderDelegate: int next()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: void validate_event(int)>($i0);

        return $i0;
    }

    private void validate_event(int)
    {
        java.lang.IllegalStateException $r18, $r39;
        org.apache.xmlbeans.impl.validator.Validator $r19, $r21, $r25, $r27, $r28, $r30, $r37;
        org.apache.xmlbeans.SchemaType $r17, $r22, $r23, $r34, $r35, $r38;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$SimpleEventImpl $r24;
        java.util.List $r5, $r6, $r7;
        javax.xml.namespace.QName $r1, $r4, $r14, $r31;
        java.util.ArrayList $r9, $r10;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, $i18;
        java.lang.String $r2, $r3, $r8, $r11, $r12, $r13, $r15, $r32, $r33;
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl $r20, $r26, $r29, $r36;
        org.apache.xmlbeans.SchemaTypeLoader $r16;
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader r0;
        java.lang.IllegalArgumentException $r40;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader;

        i2 := @parameter0: int;

        $i0 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int _state>;

        if $i0 != 3 goto label01;

        return;

     label01:
        $i1 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int _depth>;

        if $i1 >= 0 goto label02;

        $r40 = new java.lang.IllegalArgumentException;

        specialinvoke $r40.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ValidatingXMLStreamReader cannot go further than the subtree is was initialized on.");

        throw $r40;

     label02:
        tableswitch(i2)
        {
            case 1: goto label03;
            case 2: goto label18;
            case 3: goto label26;
            case 4: goto label20;
            case 5: goto label26;
            case 6: goto label26;
            case 7: goto label25;
            case 8: goto label18;
            case 9: goto label26;
            case 10: goto label08;
            case 11: goto label26;
            case 12: goto label20;
            case 13: goto label26;
            case 14: goto label26;
            case 15: goto label26;
            default: goto label27;
        };

     label03:
        $i12 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int _depth>;

        $i13 = $i12 + 1;

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int _depth> = $i13;

        $i14 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int _state>;

        if $i14 != 2 goto label04;

        specialinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: void pushBufferedAttributes()>();

     label04:
        $r28 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.Validator _validator>;

        if $r28 != null goto label07;

        $r31 = new javax.xml.namespace.QName;

        $r32 = virtualinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: java.lang.String getNamespaceURI()>();

        $r33 = virtualinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: java.lang.String getLocalName()>();

        specialinvoke $r31.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r32, $r33);

        $r34 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.SchemaType _contentType>;

        if $r34 != null goto label05;

        $r38 = specialinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.SchemaType typeForGlobalElement(javax.xml.namespace.QName)>($r31);

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.SchemaType _contentType> = $r38;

     label05:
        $i16 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int _state>;

        if $i16 != 3 goto label06;

        goto label28;

     label06:
        $r35 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.SchemaType _contentType>;

        specialinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: void initValidator(org.apache.xmlbeans.SchemaType)>($r35);

        $r37 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.Validator _validator>;

        $r36 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl _elemEvent>;

        virtualinvoke $r37.<org.apache.xmlbeans.impl.validator.Validator: void nextEvent(int,org.apache.xmlbeans.impl.common.ValidatorListener$Event)>(1, $r36);

     label07:
        $r30 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.Validator _validator>;

        $r29 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl _elemEvent>;

        virtualinvoke $r30.<org.apache.xmlbeans.impl.validator.Validator: void nextEvent(int,org.apache.xmlbeans.impl.common.ValidatorListener$Event)>(1, $r29);

        $i15 = virtualinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int getAttributeCount()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: void validate_attributes(int)>($i15);

        goto label28;

     label08:
        $i3 = virtualinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int getAttributeCount()>();

        if $i3 != 0 goto label09;

        goto label28;

     label09:
        $i4 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int _state>;

        if $i4 == 0 goto label10;

        $i5 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int _state>;

        if $i5 != 2 goto label17;

     label10:
        i17 = 0;

     label11:
        $i18 = virtualinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int getAttributeCount()>();

        if i17 >= $i18 goto label16;

        $r1 = new javax.xml.namespace.QName;

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: java.lang.String getAttributeNamespace(int)>(i17);

        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: java.lang.String getAttributeLocalName(int)>(i17);

        specialinvoke $r1.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r2, $r3);

        $r4 = <org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: javax.xml.namespace.QName XSI_TYPE>;

        $z0 = virtualinvoke $r1.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label12;

        $r11 = virtualinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: java.lang.String getAttributeValue(int)>(i17);

        $r12 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String getPrefixPart(java.lang.String)>($r11);

        $r13 = specialinvoke r0.<javax.xml.stream.util.StreamReaderDelegate: java.lang.String getNamespaceURI(java.lang.String)>($r12);

        $r14 = new javax.xml.namespace.QName;

        $r15 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String getLocalPart(java.lang.String)>($r11);

        specialinvoke $r14.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r13, $r15);

        $r16 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.SchemaTypeLoader _stl>;

        $r17 = interfaceinvoke $r16.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaType findType(javax.xml.namespace.QName)>($r14);

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.SchemaType _xsiType> = $r17;

     label12:
        $r5 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: java.util.List _attNamesList>;

        if $r5 != null goto label13;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: java.util.List _attNamesList> = $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: java.util.List _attValuesList> = $r10;

     label13:
        $z1 = specialinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: boolean isSpecialAttribute(javax.xml.namespace.QName)>($r1);

        if $z1 == 0 goto label14;

        goto label15;

     label14:
        $r6 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: java.util.List _attNamesList>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r7 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: java.util.List _attValuesList>;

        $r8 = virtualinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: java.lang.String getAttributeValue(int)>(i17);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r8);

     label15:
        i17 = i17 + 1;

        goto label11;

     label16:
        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int _state> = 2;

        goto label28;

     label17:
        $r18 = new java.lang.IllegalStateException;

        specialinvoke $r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ATT event must be only at the beggining of the stream.");

        throw $r18;

     label18:
        $i9 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int _depth>;

        $i10 = $i9 - 1;

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int _depth> = $i10;

        $i11 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int _state>;

        if $i11 != 2 goto label19;

        specialinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: void pushBufferedAttributes()>();

     label19:
        $r27 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.Validator _validator>;

        $r26 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl _elemEvent>;

        virtualinvoke $r27.<org.apache.xmlbeans.impl.validator.Validator: void nextEvent(int,org.apache.xmlbeans.impl.common.ValidatorListener$Event)>(2, $r26);

        goto label28;

     label20:
        $i8 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int _state>;

        if $i8 != 2 goto label21;

        specialinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: void pushBufferedAttributes()>();

     label21:
        $r19 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.Validator _validator>;

        if $r19 != null goto label24;

        $r22 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.SchemaType _contentType>;

        if $r22 != null goto label23;

        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: boolean isWhiteSpace()>();

        if $z2 == 0 goto label22;

        goto label28;

     label22:
        specialinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: void addError(java.lang.String)>("No content type provided for validation of a content model.");

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int _state> = 3;

        goto label28;

     label23:
        $r23 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.SchemaType _contentType>;

        specialinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: void initValidator(org.apache.xmlbeans.SchemaType)>($r23);

        $r25 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.Validator _validator>;

        $r24 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$SimpleEventImpl _simpleEvent>;

        virtualinvoke $r25.<org.apache.xmlbeans.impl.validator.Validator: void nextEvent(int,org.apache.xmlbeans.impl.common.ValidatorListener$Event)>(1, $r24);

     label24:
        $r21 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.Validator _validator>;

        $r20 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$ElementEventImpl _elemEvent>;

        virtualinvoke $r21.<org.apache.xmlbeans.impl.validator.Validator: void nextEvent(int,org.apache.xmlbeans.impl.common.ValidatorListener$Event)>(3, $r20);

        goto label28;

     label25:
        $i6 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int _depth>;

        $i7 = $i6 + 1;

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int _depth> = $i7;

        goto label28;

     label26:
        goto label28;

     label27:
        $r39 = new java.lang.IllegalStateException;

        specialinvoke $r39.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unknown event type.");

        throw $r39;

     label28:
        return;
    }

    private void pushBufferedAttributes()
    {
        org.apache.xmlbeans.impl.validator.Validator $r29;
        org.apache.xmlbeans.SchemaType $r1, $r2, $r8, $r16, $r17, $r18, $r21, $r24, r28;
        boolean $z0;
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$SimpleEventImpl $r30;
        java.util.List $r3, $r4, $r11, $r31;
        javax.xml.namespace.QName $r7;
        java.lang.StringBuffer $r9, $r10, $r13, $r14, $r19, $r20, $r22, $r23, $r25, $r26;
        int $i0;
        java.lang.String $r15, $r27;
        org.apache.xmlbeans.SchemaTypeLoader $r5;
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader r0;
        java.lang.Object $r6, $r12;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader;

        $r1 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.SchemaType _xsiType>;

        if $r1 == null goto label3;

        $r16 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.SchemaType _contentType>;

        if $r16 != null goto label1;

        r28 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.SchemaType _xsiType>;

        goto label6;

     label1:
        $r18 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.SchemaType _contentType>;

        $r17 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.SchemaType _xsiType>;

        $z0 = interfaceinvoke $r18.<org.apache.xmlbeans.SchemaType: boolean isAssignableFrom(org.apache.xmlbeans.SchemaType)>($r17);

        if $z0 == 0 goto label2;

        r28 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.SchemaType _xsiType>;

        goto label6;

     label2:
        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Specified type \'");

        $r21 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.SchemaType _contentType>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' not compatible with found xsi:type \'");

        $r24 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.SchemaType _xsiType>;

        $r25 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'.");

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: void addError(java.lang.String)>($r27);

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int _state> = 3;

        return;

     label3:
        $r2 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.SchemaType _contentType>;

        if $r2 == null goto label4;

        r28 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.SchemaType _contentType>;

        goto label6;

     label4:
        $r3 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: java.util.List _attNamesList>;

        if $r3 == null goto label5;

        $r5 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.SchemaTypeLoader _stl>;

        $r4 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: java.util.List _attNamesList>;

        $r6 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (javax.xml.namespace.QName) $r6;

        $r8 = interfaceinvoke $r5.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaType findAttributeType(javax.xml.namespace.QName)>($r7);

        r28 = $r8;

        if $r8 != null goto label6;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("A schema global attribute with name \'");

        $r11 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: java.util.List _attNamesList>;

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(0);

        $r13 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' could not be found in the current schema type loader.");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: void addError(java.lang.String)>($r15);

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int _state> = 3;

        return;

     label5:
        specialinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: void addError(java.lang.String)>("No content type provided for validation of a content model.");

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int _state> = 3;

        return;

     label6:
        specialinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: void initValidator(org.apache.xmlbeans.SchemaType)>(r28);

        $r29 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.Validator _validator>;

        $r30 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$SimpleEventImpl _simpleEvent>;

        virtualinvoke $r29.<org.apache.xmlbeans.impl.validator.Validator: void nextEvent(int,org.apache.xmlbeans.impl.common.ValidatorListener$Event)>(1, $r30);

        $r31 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: java.util.List _attNamesList>;

        $i0 = interfaceinvoke $r31.<java.util.List: int size()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: void validate_attributes(int)>($i0);

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: java.util.List _attNamesList> = null;

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: java.util.List _attValuesList> = null;

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int _state> = 1;

        return;
    }

    private boolean isSpecialAttribute(javax.xml.namespace.QName)
    {
        java.lang.String $r1, $r2, $r4, $r5, $r7, $r8, $r10, $r11, $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader r14;
        javax.xml.namespace.QName r0, $r3, $r6, $r9, $r12;

        r14 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader;

        r0 := @parameter0: javax.xml.namespace.QName;

        $r1 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/2001/XMLSchema-instance");

        if $z0 == 0 goto label4;

        $r2 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r3 = <org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: javax.xml.namespace.QName XSI_TYPE>;

        $r4 = virtualinvoke $r3.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label1;

        $r5 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r6 = <org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: javax.xml.namespace.QName XSI_NIL>;

        $r7 = virtualinvoke $r6.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z2 != 0 goto label1;

        $r8 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r9 = <org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: javax.xml.namespace.QName XSI_SL>;

        $r10 = virtualinvoke $r9.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z3 != 0 goto label1;

        $r11 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r12 = <org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: javax.xml.namespace.QName XSI_NSL>;

        $r13 = virtualinvoke $r12.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $z4 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z4 == 0 goto label2;

     label1:
        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        return $z5;

     label4:
        return 0;
    }

    private void initValidator(org.apache.xmlbeans.SchemaType)
    {
        org.apache.xmlbeans.SchemaTypeLoader $r5;
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader r0;
        java.util.Collection $r3;
        java.lang.AssertionError $r6;
        org.apache.xmlbeans.XmlOptions $r4;
        org.apache.xmlbeans.impl.validator.Validator $r1;
        org.apache.xmlbeans.SchemaType r2;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader;

        r2 := @parameter0: org.apache.xmlbeans.SchemaType;

        $z0 = <org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r2 != null goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label1:
        $r1 = new org.apache.xmlbeans.impl.validator.Validator;

        $r5 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.SchemaTypeLoader _stl>;

        $r4 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.XmlOptions _options>;

        $r3 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: java.util.Collection _errorListener>;

        specialinvoke $r1.<org.apache.xmlbeans.impl.validator.Validator: void <init>(org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.SchemaField,org.apache.xmlbeans.SchemaTypeLoader,org.apache.xmlbeans.XmlOptions,java.util.Collection)>(r2, null, $r5, $r4, $r3);

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.Validator _validator> = $r1;

        return;
    }

    private org.apache.xmlbeans.SchemaType typeForGlobalElement(javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.SchemaTypeLoader $r2;
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader r0;
        java.lang.AssertionError $r9;
        java.lang.StringBuffer $r4, $r5, $r6, $r7;
        javax.xml.namespace.QName r1;
        java.lang.String $r8;
        org.apache.xmlbeans.SchemaType $r3;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader;

        r1 := @parameter0: javax.xml.namespace.QName;

        $z0 = <org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r1 != null goto label1;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.SchemaTypeLoader _stl>;

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaType findDocumentType(javax.xml.namespace.QName)>(r1);

        if $r3 != null goto label2;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Schema document type not found for element \'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: void addError(java.lang.String)>($r8);

        r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int _state> = 3;

     label2:
        return $r3;
    }

    private void addError(java.lang.String)
    {
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader r0;
        java.util.Collection $r3, $r6;
        javax.xml.stream.Location $r1;
        org.apache.xmlbeans.XmlError $r4, $r7;
        java.lang.String r2, $r5, r8;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: javax.xml.stream.Location getLocation()>();

        if $r1 == null goto label2;

        $r5 = interfaceinvoke $r1.<javax.xml.stream.Location: java.lang.String getPublicId()>();

        r8 = $r5;

        if $r5 != null goto label1;

        r8 = interfaceinvoke $r1.<javax.xml.stream.Location: java.lang.String getSystemId()>();

     label1:
        $r6 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: java.util.Collection _errorListener>;

        $r7 = staticinvoke <org.apache.xmlbeans.XmlError: org.apache.xmlbeans.XmlError forLocation(java.lang.String,java.lang.String,javax.xml.stream.Location)>(r2, r8, $r1);

        interfaceinvoke $r6.<java.util.Collection: boolean add(java.lang.Object)>($r7);

        goto label3;

     label2:
        $r3 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: java.util.Collection _errorListener>;

        $r4 = staticinvoke <org.apache.xmlbeans.XmlError: org.apache.xmlbeans.XmlError forMessage(java.lang.String)>(r2);

        interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>($r4);

     label3:
        return;
    }

    protected void validate_attributes(int)
    {
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader r0;
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$SimpleEventImpl $r2;
        org.apache.xmlbeans.XmlOptions $r1, $r4;
        org.apache.xmlbeans.impl.validator.Validator $r3;
        int i0, i1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader;

        i0 := @parameter0: int;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        virtualinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: void validate_attribute(int)>(i1);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r1 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.XmlOptions _options>;

        if $r1 == null goto label3;

        $r4 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.XmlOptions _options>;

        $z0 = virtualinvoke $r4.<org.apache.xmlbeans.XmlOptions: boolean hasOption(java.lang.Object)>("OPTION_ATTTRIBUTE_VALIDATION_COMPAT_MODE");

        if $z0 == 0 goto label3;

        goto label4;

     label3:
        $r3 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.Validator _validator>;

        $r2 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$SimpleEventImpl _simpleEvent>;

        virtualinvoke $r3.<org.apache.xmlbeans.impl.validator.Validator: void nextEvent(int,org.apache.xmlbeans.impl.common.ValidatorListener$Event)>(5, $r2);

     label4:
        return;
    }

    protected void validate_attribute(int)
    {
        org.apache.xmlbeans.impl.validator.Validator $r10;
        int i0;
        java.lang.String $r9;
        boolean $z0;
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader r0;
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$SimpleEventImpl $r3, $r7;
        org.apache.xmlbeans.impl.common.ValidatorListener$Event r14;
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$AttributeEventImpl $r11, $r12;
        java.util.List $r1, $r2, $r6;
        java.lang.Object $r4, $r8;
        javax.xml.namespace.QName $r5, $r13;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: java.util.List _attNamesList>;

        if $r1 != null goto label2;

        $r11 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$AttributeEventImpl _attEvent>;

        staticinvoke <org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$AttributeEventImpl: void access$700(org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$AttributeEventImpl,int)>($r11, i0);

        $r12 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$AttributeEventImpl _attEvent>;

        $r13 = virtualinvoke $r12.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$AttributeEventImpl: javax.xml.namespace.QName getName()>();

        $z0 = specialinvoke r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: boolean isSpecialAttribute(javax.xml.namespace.QName)>($r13);

        if $z0 == 0 goto label1;

        return;

     label1:
        r14 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$AttributeEventImpl _attEvent>;

        goto label3;

     label2:
        $r3 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$SimpleEventImpl _simpleEvent>;

        $r2 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: java.util.List _attNamesList>;

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r5 = (javax.xml.namespace.QName) $r4;

        staticinvoke <org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$SimpleEventImpl: javax.xml.namespace.QName access$802(org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$SimpleEventImpl,javax.xml.namespace.QName)>($r3, $r5);

        $r7 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$SimpleEventImpl _simpleEvent>;

        $r6 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: java.util.List _attValuesList>;

        $r8 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i0);

        $r9 = (java.lang.String) $r8;

        staticinvoke <org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$SimpleEventImpl: java.lang.String access$902(org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$SimpleEventImpl,java.lang.String)>($r7, $r9);

        r14 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader$SimpleEventImpl _simpleEvent>;

     label3:
        $r10 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.Validator _validator>;

        virtualinvoke $r10.<org.apache.xmlbeans.impl.validator.Validator: void nextEvent(int,org.apache.xmlbeans.impl.common.ValidatorListener$Event)>(4, r14);

        return;
    }

    public boolean isValid()
    {
        org.apache.xmlbeans.impl.validator.Validator $r1, $r2;
        org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader;

        $i0 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: int _state>;

        if $i0 == 3 goto label1;

        $r1 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.Validator _validator>;

        if $r1 != null goto label2;

     label1:
        return 0;

     label2:
        $r2 = r0.<org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: org.apache.xmlbeans.impl.validator.Validator _validator>;

        $z0 = virtualinvoke $r2.<org.apache.xmlbeans.impl.validator.Validator: boolean isValid()>();

        return $z0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r5;
        javax.xml.namespace.QName $r1, $r2, $r3, $r4;
        boolean $z0, $z1;

        <org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: java.lang.String URI_XSI> = "http://www.w3.org/2001/XMLSchema-instance";

        <org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: java.lang.String OPTION_ATTTRIBUTE_VALIDATION_COMPAT_MODE> = "OPTION_ATTTRIBUTE_VALIDATION_COMPAT_MODE";

        $r0 = <org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: java.lang.Class class$org$apache$xmlbeans$impl$validator$ValidatingXMLStreamReader>;

        if $r0 != null goto label1;

        $r5 = staticinvoke <org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader");

        <org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: java.lang.Class class$org$apache$xmlbeans$impl$validator$ValidatingXMLStreamReader> = $r5;

        goto label2;

     label1:
        $r5 = <org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: java.lang.Class class$org$apache$xmlbeans$impl$validator$ValidatingXMLStreamReader>;

     label2:
        $z0 = virtualinvoke $r5.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: boolean $assertionsDisabled> = $z1;

        $r1 = new javax.xml.namespace.QName;

        specialinvoke $r1.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema-instance", "type");

        <org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: javax.xml.namespace.QName XSI_TYPE> = $r1;

        $r2 = new javax.xml.namespace.QName;

        specialinvoke $r2.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema-instance", "nil");

        <org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: javax.xml.namespace.QName XSI_NIL> = $r2;

        $r3 = new javax.xml.namespace.QName;

        specialinvoke $r3.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema-instance", "schemaLocation");

        <org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: javax.xml.namespace.QName XSI_SL> = $r3;

        $r4 = new javax.xml.namespace.QName;

        specialinvoke $r4.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema-instance", "noNamespaceSchemaLocation");

        <org.apache.xmlbeans.impl.validator.ValidatingXMLStreamReader: javax.xml.namespace.QName XSI_NSL> = $r4;

        return;
    }
}
