public class org.bouncycastle.crypto.BufferedBlockCipher extends java.lang.Object
{
    protected byte[] buf;
    protected int bufOff;
    protected boolean forEncryption;
    protected org.bouncycastle.crypto.BlockCipher cipher;
    protected boolean partialBlockOkay;
    protected boolean pgpCFB;

    protected void <init>()
    {
        org.bouncycastle.crypto.BufferedBlockCipher r0;

        r0 := @this: org.bouncycastle.crypto.BufferedBlockCipher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(org.bouncycastle.crypto.BlockCipher)
    {
        byte[] $r2;
        int $i0, $i1, i2;
        java.lang.String $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.bouncycastle.crypto.BufferedBlockCipher r0;
        org.bouncycastle.crypto.BlockCipher r1;

        r0 := @this: org.bouncycastle.crypto.BufferedBlockCipher;

        r1 := @parameter0: org.bouncycastle.crypto.BlockCipher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher cipher> = r1;

        $i0 = interfaceinvoke r1.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $r2 = newarray (byte)[$i0];

        r0.<org.bouncycastle.crypto.BufferedBlockCipher: byte[] buf> = $r2;

        r0.<org.bouncycastle.crypto.BufferedBlockCipher: int bufOff> = 0;

        $r3 = interfaceinvoke r1.<org.bouncycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        $i1 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>(47);

        i2 = $i1 + 1;

        if i2 <= 0 goto label1;

        $z5 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String,int)>("PGP", i2);

        if $z5 == 0 goto label1;

        $z6 = 1;

        goto label2;

     label1:
        $z6 = 0;

     label2:
        r0.<org.bouncycastle.crypto.BufferedBlockCipher: boolean pgpCFB> = $z6;

        $z7 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: boolean pgpCFB>;

        if $z7 == 0 goto label3;

        r0.<org.bouncycastle.crypto.BufferedBlockCipher: boolean partialBlockOkay> = 1;

        goto label7;

     label3:
        if i2 <= 0 goto label5;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String,int)>("CFB", i2);

        if $z0 != 0 goto label4;

        $z1 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String,int)>("OFB", i2);

        if $z1 != 0 goto label4;

        $z2 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String,int)>("OpenPGP", i2);

        if $z2 != 0 goto label4;

        $z3 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String,int)>("SIC", i2);

        if $z3 != 0 goto label4;

        $z4 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String,int)>("GCTR", i2);

        if $z4 == 0 goto label5;

     label4:
        $z8 = 1;

        goto label6;

     label5:
        $z8 = 0;

     label6:
        r0.<org.bouncycastle.crypto.BufferedBlockCipher: boolean partialBlockOkay> = $z8;

     label7:
        return;
    }

    public org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()
    {
        org.bouncycastle.crypto.BufferedBlockCipher r0;
        org.bouncycastle.crypto.BlockCipher $r1;

        r0 := @this: org.bouncycastle.crypto.BufferedBlockCipher;

        $r1 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        return $r1;
    }

    public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException
    {
        org.bouncycastle.crypto.BufferedBlockCipher r0;
        org.bouncycastle.crypto.BlockCipher $r2;
        boolean z0;
        org.bouncycastle.crypto.CipherParameters r1;

        r0 := @this: org.bouncycastle.crypto.BufferedBlockCipher;

        z0 := @parameter0: boolean;

        r1 := @parameter1: org.bouncycastle.crypto.CipherParameters;

        r0.<org.bouncycastle.crypto.BufferedBlockCipher: boolean forEncryption> = z0;

        virtualinvoke r0.<org.bouncycastle.crypto.BufferedBlockCipher: void reset()>();

        $r2 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        interfaceinvoke $r2.<org.bouncycastle.crypto.BlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(z0, r1);

        return;
    }

    public int getBlockSize()
    {
        int $i0;
        org.bouncycastle.crypto.BufferedBlockCipher r0;
        org.bouncycastle.crypto.BlockCipher $r1;

        r0 := @this: org.bouncycastle.crypto.BufferedBlockCipher;

        $r1 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $i0 = interfaceinvoke $r1.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        return $i0;
    }

    public int getUpdateOutputSize(int)
    {
        byte[] $r1, $r2;
        org.bouncycastle.crypto.BufferedBlockCipher r0;
        org.bouncycastle.crypto.BlockCipher $r3;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        boolean $z0;

        r0 := @this: org.bouncycastle.crypto.BufferedBlockCipher;

        i0 := @parameter0: int;

        $i1 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: int bufOff>;

        i2 = i0 + $i1;

        $z0 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: boolean pgpCFB>;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: byte[] buf>;

        $i5 = lengthof $r2;

        $i6 = i2 % $i5;

        $r3 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $i7 = interfaceinvoke $r3.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $i8 = $i7 + 2;

        i9 = $i6 - $i8;

        goto label2;

     label1:
        $r1 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: byte[] buf>;

        $i3 = lengthof $r1;

        i9 = i2 % $i3;

     label2:
        $i4 = i2 - i9;

        return $i4;
    }

    public int getOutputSize(int)
    {
        int i0, $i1, $i2;
        org.bouncycastle.crypto.BufferedBlockCipher r0;

        r0 := @this: org.bouncycastle.crypto.BufferedBlockCipher;

        i0 := @parameter0: int;

        $i1 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: int bufOff>;

        $i2 = i0 + $i1;

        return $i2;
    }

    public int processByte(byte, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        byte[] $r1, $r2, r3, $r4;
        org.bouncycastle.crypto.BufferedBlockCipher r0;
        org.bouncycastle.crypto.BlockCipher $r5;
        byte b2;
        int $i0, $i1, $i3, $i4, i5, i6;

        r0 := @this: org.bouncycastle.crypto.BufferedBlockCipher;

        b2 := @parameter0: byte;

        r3 := @parameter1: byte[];

        i5 := @parameter2: int;

        i6 = 0;

        $r1 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: byte[] buf>;

        $i0 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: int bufOff>;

        $i1 = $i0 + 1;

        r0.<org.bouncycastle.crypto.BufferedBlockCipher: int bufOff> = $i1;

        $r1[$i0] = b2;

        $i4 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: int bufOff>;

        $r2 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: byte[] buf>;

        $i3 = lengthof $r2;

        if $i4 != $i3 goto label1;

        $r5 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r4 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: byte[] buf>;

        i6 = interfaceinvoke $r5.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r4, 0, r3, i5);

        r0.<org.bouncycastle.crypto.BufferedBlockCipher: int bufOff> = 0;

     label1:
        return i6;
    }

    public int processBytes(byte[], int, int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        byte[] $r1, r2, $r3, $r4, r5, $r6, $r8, $r9, $r11;
        org.bouncycastle.crypto.DataLengthException $r13;
        org.bouncycastle.crypto.BufferedBlockCipher r0;
        org.bouncycastle.crypto.BlockCipher $r7, $r10, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, i21, i22;
        java.lang.IllegalArgumentException $r14;

        r0 := @this: org.bouncycastle.crypto.BufferedBlockCipher;

        r2 := @parameter0: byte[];

        i20 := @parameter1: int;

        i21 := @parameter2: int;

        r5 := @parameter3: byte[];

        i9 := @parameter4: int;

        if i21 >= 0 goto label1;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t have a negative input length!");

        throw $r14;

     label1:
        $i0 = virtualinvoke r0.<org.bouncycastle.crypto.BufferedBlockCipher: int getBlockSize()>();

        $i1 = virtualinvoke r0.<org.bouncycastle.crypto.BufferedBlockCipher: int getUpdateOutputSize(int)>(i21);

        if $i1 <= 0 goto label2;

        $i18 = i9 + $i1;

        $i17 = lengthof r5;

        if $i18 <= $i17 goto label2;

        $r13 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r13.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("output buffer too short");

        throw $r13;

     label2:
        i22 = 0;

        $r1 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: byte[] buf>;

        $i3 = lengthof $r1;

        $i2 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: int bufOff>;

        $i19 = $i3 - $i2;

        if i21 <= $i19 goto label4;

        $r8 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: byte[] buf>;

        $i12 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: int bufOff>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i20, $r8, $i12, $i19);

        $r10 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r9 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: byte[] buf>;

        $i13 = interfaceinvoke $r10.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r9, 0, r5, i9);

        i22 = 0 + $i13;

        r0.<org.bouncycastle.crypto.BufferedBlockCipher: int bufOff> = 0;

        i21 = i21 - $i19;

        i20 = i20 + $i19;

     label3:
        $r11 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: byte[] buf>;

        $i14 = lengthof $r11;

        if i21 <= $i14 goto label4;

        $r12 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $i15 = i9 + i22;

        $i16 = interfaceinvoke $r12.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>(r2, i20, r5, $i15);

        i22 = i22 + $i16;

        i21 = i21 - $i0;

        i20 = i20 + $i0;

        goto label3;

     label4:
        $r3 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: byte[] buf>;

        $i4 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: int bufOff>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i20, $r3, $i4, i21);

        $i5 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: int bufOff>;

        $i6 = $i5 + i21;

        r0.<org.bouncycastle.crypto.BufferedBlockCipher: int bufOff> = $i6;

        $i8 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: int bufOff>;

        $r4 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: byte[] buf>;

        $i7 = lengthof $r4;

        if $i8 != $i7 goto label5;

        $r7 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r6 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: byte[] buf>;

        $i10 = i9 + i22;

        $i11 = interfaceinvoke $r7.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r6, 0, r5, $i10);

        i22 = i22 + $i11;

        r0.<org.bouncycastle.crypto.BufferedBlockCipher: int bufOff> = 0;

     label5:
        return i22;
    }

    public int doFinal(byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException, org.bouncycastle.crypto.InvalidCipherTextException
    {
        byte[] r1, $r3, $r4, $r6;
        org.bouncycastle.crypto.DataLengthException $r2, $r7;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        boolean $z0;
        org.bouncycastle.crypto.BufferedBlockCipher r0;
        org.bouncycastle.crypto.BlockCipher $r5;

        r0 := @this: org.bouncycastle.crypto.BufferedBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i6 = 0;

        $i1 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: int bufOff>;

        $i3 = i0 + $i1;

        $i2 = lengthof r1;

        if $i3 <= $i2 goto label1;

        $r7 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r7.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("output buffer too short for doFinal()");

        throw $r7;

     label1:
        $i4 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: int bufOff>;

        if $i4 == 0 goto label2;

        $z0 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: boolean partialBlockOkay>;

        if $z0 == 0 goto label2;

        $r5 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        $r4 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: byte[] buf>;

        $r3 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: byte[] buf>;

        interfaceinvoke $r5.<org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r4, 0, $r3, 0);

        i6 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: int bufOff>;

        r0.<org.bouncycastle.crypto.BufferedBlockCipher: int bufOff> = 0;

        $r6 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: byte[] buf>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r1, i0, i6);

        goto label3;

     label2:
        $i5 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: int bufOff>;

        if $i5 == 0 goto label3;

        $r2 = new org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r2.<org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("data not block size aligned");

        throw $r2;

     label3:
        virtualinvoke r0.<org.bouncycastle.crypto.BufferedBlockCipher: void reset()>();

        return i6;
    }

    public void reset()
    {
        byte[] $r1, $r3;
        int $i0, i1;
        org.bouncycastle.crypto.BufferedBlockCipher r0;
        org.bouncycastle.crypto.BlockCipher $r2;

        r0 := @this: org.bouncycastle.crypto.BufferedBlockCipher;

        i1 = 0;

     label1:
        $r1 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: byte[] buf>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label2;

        $r3 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: byte[] buf>;

        $r3[i1] = 0;

        i1 = i1 + 1;

        goto label1;

     label2:
        r0.<org.bouncycastle.crypto.BufferedBlockCipher: int bufOff> = 0;

        $r2 = r0.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher cipher>;

        interfaceinvoke $r2.<org.bouncycastle.crypto.BlockCipher: void reset()>();

        return;
    }
}
