public class org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer extends org.codehaus.jackson.map.jsontype.impl.TypeSerializerBase
{

    public void <init>(org.codehaus.jackson.map.jsontype.TypeIdResolver, org.codehaus.jackson.map.BeanProperty)
    {
        org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer r0;
        org.codehaus.jackson.map.jsontype.TypeIdResolver r1;
        org.codehaus.jackson.map.BeanProperty r2;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer;

        r1 := @parameter0: org.codehaus.jackson.map.jsontype.TypeIdResolver;

        r2 := @parameter1: org.codehaus.jackson.map.BeanProperty;

        specialinvoke r0.<org.codehaus.jackson.map.jsontype.impl.TypeSerializerBase: void <init>(org.codehaus.jackson.map.jsontype.TypeIdResolver,org.codehaus.jackson.map.BeanProperty)>(r1, r2);

        return;
    }

    public org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion()
    {
        org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer r1;
        org.codehaus.jackson.annotate.JsonTypeInfo$As $r0;

        r1 := @this: org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer;

        $r0 = <org.codehaus.jackson.annotate.JsonTypeInfo$As: org.codehaus.jackson.annotate.JsonTypeInfo$As WRAPPER_OBJECT>;

        return $r0;
    }

    public void writeTypePrefixForObject(java.lang.Object, org.codehaus.jackson.JsonGenerator) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.jsontype.TypeIdResolver $r3;
        org.codehaus.jackson.JsonGenerator r0;
        org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer r1;
        java.lang.Object r2;
        java.lang.String $r4;

        r1 := @this: org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer;

        r2 := @parameter0: java.lang.Object;

        r0 := @parameter1: org.codehaus.jackson.JsonGenerator;

        virtualinvoke r0.<org.codehaus.jackson.JsonGenerator: void writeStartObject()>();

        $r3 = r1.<org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer: org.codehaus.jackson.map.jsontype.TypeIdResolver _idResolver>;

        $r4 = interfaceinvoke $r3.<org.codehaus.jackson.map.jsontype.TypeIdResolver: java.lang.String idFromValue(java.lang.Object)>(r2);

        virtualinvoke r0.<org.codehaus.jackson.JsonGenerator: void writeObjectFieldStart(java.lang.String)>($r4);

        return;
    }

    public void writeTypePrefixForObject(java.lang.Object, org.codehaus.jackson.JsonGenerator, java.lang.Class) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.jsontype.TypeIdResolver $r4;
        org.codehaus.jackson.JsonGenerator r0;
        org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer r1;
        java.lang.Object r2;
        java.lang.Class r3;
        java.lang.String $r5;

        r1 := @this: org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer;

        r2 := @parameter0: java.lang.Object;

        r0 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r3 := @parameter2: java.lang.Class;

        virtualinvoke r0.<org.codehaus.jackson.JsonGenerator: void writeStartObject()>();

        $r4 = r1.<org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer: org.codehaus.jackson.map.jsontype.TypeIdResolver _idResolver>;

        $r5 = interfaceinvoke $r4.<org.codehaus.jackson.map.jsontype.TypeIdResolver: java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class)>(r2, r3);

        virtualinvoke r0.<org.codehaus.jackson.JsonGenerator: void writeObjectFieldStart(java.lang.String)>($r5);

        return;
    }

    public void writeTypePrefixForArray(java.lang.Object, org.codehaus.jackson.JsonGenerator) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.jsontype.TypeIdResolver $r3;
        org.codehaus.jackson.JsonGenerator r0;
        org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer r1;
        java.lang.Object r2;
        java.lang.String $r4;

        r1 := @this: org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer;

        r2 := @parameter0: java.lang.Object;

        r0 := @parameter1: org.codehaus.jackson.JsonGenerator;

        virtualinvoke r0.<org.codehaus.jackson.JsonGenerator: void writeStartObject()>();

        $r3 = r1.<org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer: org.codehaus.jackson.map.jsontype.TypeIdResolver _idResolver>;

        $r4 = interfaceinvoke $r3.<org.codehaus.jackson.map.jsontype.TypeIdResolver: java.lang.String idFromValue(java.lang.Object)>(r2);

        virtualinvoke r0.<org.codehaus.jackson.JsonGenerator: void writeArrayFieldStart(java.lang.String)>($r4);

        return;
    }

    public void writeTypePrefixForArray(java.lang.Object, org.codehaus.jackson.JsonGenerator, java.lang.Class) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.jsontype.TypeIdResolver $r4;
        org.codehaus.jackson.JsonGenerator r0;
        org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer r1;
        java.lang.Object r2;
        java.lang.Class r3;
        java.lang.String $r5;

        r1 := @this: org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer;

        r2 := @parameter0: java.lang.Object;

        r0 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r3 := @parameter2: java.lang.Class;

        virtualinvoke r0.<org.codehaus.jackson.JsonGenerator: void writeStartObject()>();

        $r4 = r1.<org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer: org.codehaus.jackson.map.jsontype.TypeIdResolver _idResolver>;

        $r5 = interfaceinvoke $r4.<org.codehaus.jackson.map.jsontype.TypeIdResolver: java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class)>(r2, r3);

        virtualinvoke r0.<org.codehaus.jackson.JsonGenerator: void writeArrayFieldStart(java.lang.String)>($r5);

        return;
    }

    public void writeTypePrefixForScalar(java.lang.Object, org.codehaus.jackson.JsonGenerator) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.jsontype.TypeIdResolver $r3;
        org.codehaus.jackson.JsonGenerator r0;
        org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer r1;
        java.lang.Object r2;
        java.lang.String $r4;

        r1 := @this: org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer;

        r2 := @parameter0: java.lang.Object;

        r0 := @parameter1: org.codehaus.jackson.JsonGenerator;

        virtualinvoke r0.<org.codehaus.jackson.JsonGenerator: void writeStartObject()>();

        $r3 = r1.<org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer: org.codehaus.jackson.map.jsontype.TypeIdResolver _idResolver>;

        $r4 = interfaceinvoke $r3.<org.codehaus.jackson.map.jsontype.TypeIdResolver: java.lang.String idFromValue(java.lang.Object)>(r2);

        virtualinvoke r0.<org.codehaus.jackson.JsonGenerator: void writeFieldName(java.lang.String)>($r4);

        return;
    }

    public void writeTypePrefixForScalar(java.lang.Object, org.codehaus.jackson.JsonGenerator, java.lang.Class) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.jsontype.TypeIdResolver $r4;
        org.codehaus.jackson.JsonGenerator r0;
        org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer r1;
        java.lang.Object r2;
        java.lang.Class r3;
        java.lang.String $r5;

        r1 := @this: org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer;

        r2 := @parameter0: java.lang.Object;

        r0 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r3 := @parameter2: java.lang.Class;

        virtualinvoke r0.<org.codehaus.jackson.JsonGenerator: void writeStartObject()>();

        $r4 = r1.<org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer: org.codehaus.jackson.map.jsontype.TypeIdResolver _idResolver>;

        $r5 = interfaceinvoke $r4.<org.codehaus.jackson.map.jsontype.TypeIdResolver: java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class)>(r2, r3);

        virtualinvoke r0.<org.codehaus.jackson.JsonGenerator: void writeFieldName(java.lang.String)>($r5);

        return;
    }

    public void writeTypeSuffixForObject(java.lang.Object, org.codehaus.jackson.JsonGenerator) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer r1;
        java.lang.Object r2;
        org.codehaus.jackson.JsonGenerator r0;

        r1 := @this: org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer;

        r2 := @parameter0: java.lang.Object;

        r0 := @parameter1: org.codehaus.jackson.JsonGenerator;

        virtualinvoke r0.<org.codehaus.jackson.JsonGenerator: void writeEndObject()>();

        virtualinvoke r0.<org.codehaus.jackson.JsonGenerator: void writeEndObject()>();

        return;
    }

    public void writeTypeSuffixForArray(java.lang.Object, org.codehaus.jackson.JsonGenerator) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer r1;
        java.lang.Object r2;
        org.codehaus.jackson.JsonGenerator r0;

        r1 := @this: org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer;

        r2 := @parameter0: java.lang.Object;

        r0 := @parameter1: org.codehaus.jackson.JsonGenerator;

        virtualinvoke r0.<org.codehaus.jackson.JsonGenerator: void writeEndArray()>();

        virtualinvoke r0.<org.codehaus.jackson.JsonGenerator: void writeEndObject()>();

        return;
    }

    public void writeTypeSuffixForScalar(java.lang.Object, org.codehaus.jackson.JsonGenerator) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer r1;
        java.lang.Object r2;
        org.codehaus.jackson.JsonGenerator r0;

        r1 := @this: org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer;

        r2 := @parameter0: java.lang.Object;

        r0 := @parameter1: org.codehaus.jackson.JsonGenerator;

        virtualinvoke r0.<org.codehaus.jackson.JsonGenerator: void writeEndObject()>();

        return;
    }
}
