class org.waveprotocol.wave.client.editor.extract.PasteExtractor$2 extends java.lang.Object implements com.google.gwt.user.client.Command
{
    final boolean val$isCut;
    final org.waveprotocol.wave.model.document.util.FocusedRange val$selection;
    final org.waveprotocol.wave.client.editor.extract.PasteExtractor this$0;

    void <init>(org.waveprotocol.wave.client.editor.extract.PasteExtractor, boolean, org.waveprotocol.wave.model.document.util.FocusedRange)
    {
        org.waveprotocol.wave.client.editor.extract.PasteExtractor$2 r0;
        org.waveprotocol.wave.model.document.util.FocusedRange r2;
        org.waveprotocol.wave.client.editor.extract.PasteExtractor r1;
        boolean z0;

        r0 := @this: org.waveprotocol.wave.client.editor.extract.PasteExtractor$2;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.extract.PasteExtractor;

        z0 := @parameter1: boolean;

        r2 := @parameter2: org.waveprotocol.wave.model.document.util.FocusedRange;

        r0.<org.waveprotocol.wave.client.editor.extract.PasteExtractor$2: org.waveprotocol.wave.client.editor.extract.PasteExtractor this$0> = r1;

        r0.<org.waveprotocol.wave.client.editor.extract.PasteExtractor$2: boolean val$isCut> = z0;

        r0.<org.waveprotocol.wave.client.editor.extract.PasteExtractor$2: org.waveprotocol.wave.model.document.util.FocusedRange val$selection> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void execute()
    {
        org.waveprotocol.wave.client.editor.extract.PasteExtractor$2 r0;
        org.waveprotocol.wave.client.editor.extract.PasteExtractor $r1, $r4, $r5;
        org.waveprotocol.wave.model.document.util.FocusedRange $r3, $r7;
        int $i0;
        org.waveprotocol.wave.model.document.util.Range $r8;
        org.waveprotocol.wave.client.editor.selection.content.SelectionHelper $r2, $r6;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.editor.extract.PasteExtractor$2;

        $z0 = r0.<org.waveprotocol.wave.client.editor.extract.PasteExtractor$2: boolean val$isCut>;

        if $z0 == 0 goto label1;

        $r5 = r0.<org.waveprotocol.wave.client.editor.extract.PasteExtractor$2: org.waveprotocol.wave.client.editor.extract.PasteExtractor this$0>;

        $r6 = staticinvoke <org.waveprotocol.wave.client.editor.extract.PasteExtractor: org.waveprotocol.wave.client.editor.selection.content.SelectionHelper access$200(org.waveprotocol.wave.client.editor.extract.PasteExtractor)>($r5);

        $r7 = r0.<org.waveprotocol.wave.client.editor.extract.PasteExtractor$2: org.waveprotocol.wave.model.document.util.FocusedRange val$selection>;

        $r8 = virtualinvoke $r7.<org.waveprotocol.wave.model.document.util.FocusedRange: org.waveprotocol.wave.model.document.util.Range asRange()>();

        $i0 = virtualinvoke $r8.<org.waveprotocol.wave.model.document.util.Range: int getStart()>();

        interfaceinvoke $r6.<org.waveprotocol.wave.client.editor.selection.content.SelectionHelper: void setCaret(int)>($i0);

        goto label2;

     label1:
        $r1 = r0.<org.waveprotocol.wave.client.editor.extract.PasteExtractor$2: org.waveprotocol.wave.client.editor.extract.PasteExtractor this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.client.editor.extract.PasteExtractor: org.waveprotocol.wave.client.editor.selection.content.SelectionHelper access$200(org.waveprotocol.wave.client.editor.extract.PasteExtractor)>($r1);

        $r3 = r0.<org.waveprotocol.wave.client.editor.extract.PasteExtractor$2: org.waveprotocol.wave.model.document.util.FocusedRange val$selection>;

        interfaceinvoke $r2.<org.waveprotocol.wave.client.editor.selection.content.SelectionHelper: void setSelectionRange(org.waveprotocol.wave.model.document.util.FocusedRange)>($r3);

     label2:
        $r4 = r0.<org.waveprotocol.wave.client.editor.extract.PasteExtractor$2: org.waveprotocol.wave.client.editor.extract.PasteExtractor this$0>;

        staticinvoke <org.waveprotocol.wave.client.editor.extract.PasteExtractor: boolean access$102(org.waveprotocol.wave.client.editor.extract.PasteExtractor,boolean)>($r4, 0);

        return;
    }
}
