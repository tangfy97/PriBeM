public class org.xmlpull.v1.builder.xpath.jaxen.pattern.NameTest extends org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest
{
    private java.lang.String name;
    private short nodeType;

    public void <init>(java.lang.String, short)
    {
        short s0;
        java.lang.String r1;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.NameTest r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.NameTest;

        r1 := @parameter0: java.lang.String;

        s0 := @parameter1: short;

        specialinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.NodeTest: void <init>()>();

        r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.NameTest: java.lang.String name> = r1;

        r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.NameTest: short nodeType> = s0;

        return;
    }

    public boolean matches(java.lang.Object, org.xmlpull.v1.builder.xpath.jaxen.Context)
    {
        short $s0, $s1;
        int $i2;
        java.lang.String $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        org.xmlpull.v1.builder.xpath.jaxen.Context r0;
        java.lang.Object r3;
        org.xmlpull.v1.builder.xpath.jaxen.Navigator $r1;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.NameTest r2;

        r2 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.NameTest;

        r3 := @parameter0: java.lang.Object;

        r0 := @parameter1: org.xmlpull.v1.builder.xpath.jaxen.Context;

        $r1 = virtualinvoke r0.<org.xmlpull.v1.builder.xpath.jaxen.Context: org.xmlpull.v1.builder.xpath.jaxen.Navigator getNavigator()>();

        $s0 = r2.<org.xmlpull.v1.builder.xpath.jaxen.pattern.NameTest: short nodeType>;

        if $s0 != 1 goto label3;

        $z6 = interfaceinvoke $r1.<org.xmlpull.v1.builder.xpath.jaxen.Navigator: boolean isElement(java.lang.Object)>(r3);

        if $z6 == 0 goto label1;

        $r10 = r2.<org.xmlpull.v1.builder.xpath.jaxen.pattern.NameTest: java.lang.String name>;

        $r11 = interfaceinvoke $r1.<org.xmlpull.v1.builder.xpath.jaxen.Navigator: java.lang.String getElementName(java.lang.Object)>(r3);

        $z7 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z7 == 0 goto label1;

        $z8 = 1;

        goto label2;

     label1:
        $z8 = 0;

     label2:
        return $z8;

     label3:
        $s1 = r2.<org.xmlpull.v1.builder.xpath.jaxen.pattern.NameTest: short nodeType>;

        $i2 = (int) $s1;

        if $i2 != 2 goto label6;

        $z4 = interfaceinvoke $r1.<org.xmlpull.v1.builder.xpath.jaxen.Navigator: boolean isAttribute(java.lang.Object)>(r3);

        if $z4 == 0 goto label4;

        $r8 = r2.<org.xmlpull.v1.builder.xpath.jaxen.pattern.NameTest: java.lang.String name>;

        $r9 = interfaceinvoke $r1.<org.xmlpull.v1.builder.xpath.jaxen.Navigator: java.lang.String getAttributeName(java.lang.Object)>(r3);

        $z5 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z5 == 0 goto label4;

        $z9 = 1;

        goto label5;

     label4:
        $z9 = 0;

     label5:
        return $z9;

     label6:
        $z0 = interfaceinvoke $r1.<org.xmlpull.v1.builder.xpath.jaxen.Navigator: boolean isElement(java.lang.Object)>(r3);

        if $z0 == 0 goto label7;

        $r6 = r2.<org.xmlpull.v1.builder.xpath.jaxen.pattern.NameTest: java.lang.String name>;

        $r7 = interfaceinvoke $r1.<org.xmlpull.v1.builder.xpath.jaxen.Navigator: java.lang.String getElementName(java.lang.Object)>(r3);

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        return $z3;

     label7:
        $z1 = interfaceinvoke $r1.<org.xmlpull.v1.builder.xpath.jaxen.Navigator: boolean isAttribute(java.lang.Object)>(r3);

        if $z1 == 0 goto label8;

        $r4 = r2.<org.xmlpull.v1.builder.xpath.jaxen.pattern.NameTest: java.lang.String name>;

        $r5 = interfaceinvoke $r1.<org.xmlpull.v1.builder.xpath.jaxen.Navigator: java.lang.String getAttributeName(java.lang.Object)>(r3);

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        return $z2;

     label8:
        return 0;
    }

    public double getPriority()
    {
        org.xmlpull.v1.builder.xpath.jaxen.pattern.NameTest r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.NameTest;

        return 0.0;
    }

    public short getMatchType()
    {
        short $s0;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.NameTest r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.NameTest;

        $s0 = r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.NameTest: short nodeType>;

        return $s0;
    }

    public java.lang.String getText()
    {
        short $s0;
        java.lang.StringBuffer $r3, $r5, $r7;
        int $i1;
        java.lang.String $r1, $r4, $r6;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.NameTest r0;

        r0 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.NameTest;

        $s0 = r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.NameTest: short nodeType>;

        $i1 = (int) $s0;

        if $i1 != 2 goto label1;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("@");

        $r4 = r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.NameTest: java.lang.String name>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;

     label1:
        $r1 = r0.<org.xmlpull.v1.builder.xpath.jaxen.pattern.NameTest: java.lang.String name>;

        return $r1;
    }

    public java.lang.String toString()
    {
        short $s0;
        java.lang.StringBuffer $r3, $r4, $r6, $r7, $r8, $r9, $r11;
        int $i1;
        java.lang.String $r2, $r5, $r10;
        org.xmlpull.v1.builder.xpath.jaxen.pattern.NameTest r1;

        r1 := @this: org.xmlpull.v1.builder.xpath.jaxen.pattern.NameTest;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r2 = specialinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[ name: ");

        $r5 = r1.<org.xmlpull.v1.builder.xpath.jaxen.pattern.NameTest: java.lang.String name>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" type: ");

        $s0 = r1.<org.xmlpull.v1.builder.xpath.jaxen.pattern.NameTest: short nodeType>;

        $i1 = (int) $s0;

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ]");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r10;
    }
}
