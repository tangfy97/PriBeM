public abstract class org.apache.lucene.index.DirectoryReader extends org.apache.lucene.index.BaseCompositeReader
{
    public static final int DEFAULT_TERMS_INDEX_DIVISOR;
    protected final org.apache.lucene.store.Directory directory;
    static final boolean $assertionsDisabled;

    public static org.apache.lucene.index.DirectoryReader open(org.apache.lucene.store.Directory) throws java.io.IOException
    {
        org.apache.lucene.store.Directory r0;
        org.apache.lucene.index.DirectoryReader $r1;

        r0 := @parameter0: org.apache.lucene.store.Directory;

        $r1 = staticinvoke <org.apache.lucene.index.StandardDirectoryReader: org.apache.lucene.index.DirectoryReader open(org.apache.lucene.store.Directory,org.apache.lucene.index.IndexCommit,int)>(r0, null, 1);

        return $r1;
    }

    public static org.apache.lucene.index.DirectoryReader open(org.apache.lucene.store.Directory, int) throws java.io.IOException
    {
        int i0;
        org.apache.lucene.store.Directory r0;
        org.apache.lucene.index.DirectoryReader $r1;

        r0 := @parameter0: org.apache.lucene.store.Directory;

        i0 := @parameter1: int;

        $r1 = staticinvoke <org.apache.lucene.index.StandardDirectoryReader: org.apache.lucene.index.DirectoryReader open(org.apache.lucene.store.Directory,org.apache.lucene.index.IndexCommit,int)>(r0, null, i0);

        return $r1;
    }

    public static org.apache.lucene.index.DirectoryReader open(org.apache.lucene.index.IndexWriter, boolean) throws java.io.IOException
    {
        org.apache.lucene.index.IndexWriter r0;
        boolean z0;
        org.apache.lucene.index.DirectoryReader $r1;

        r0 := @parameter0: org.apache.lucene.index.IndexWriter;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.IndexWriter: org.apache.lucene.index.DirectoryReader getReader(boolean)>(z0);

        return $r1;
    }

    public static org.apache.lucene.index.DirectoryReader open(org.apache.lucene.index.IndexCommit) throws java.io.IOException
    {
        org.apache.lucene.index.IndexCommit r0;
        org.apache.lucene.store.Directory $r1;
        org.apache.lucene.index.DirectoryReader $r2;

        r0 := @parameter0: org.apache.lucene.index.IndexCommit;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.IndexCommit: org.apache.lucene.store.Directory getDirectory()>();

        $r2 = staticinvoke <org.apache.lucene.index.StandardDirectoryReader: org.apache.lucene.index.DirectoryReader open(org.apache.lucene.store.Directory,org.apache.lucene.index.IndexCommit,int)>($r1, r0, 1);

        return $r2;
    }

    public static org.apache.lucene.index.DirectoryReader open(org.apache.lucene.index.IndexCommit, int) throws java.io.IOException
    {
        org.apache.lucene.index.IndexCommit r0;
        org.apache.lucene.store.Directory $r1;
        org.apache.lucene.index.DirectoryReader $r2;
        int i0;

        r0 := @parameter0: org.apache.lucene.index.IndexCommit;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.IndexCommit: org.apache.lucene.store.Directory getDirectory()>();

        $r2 = staticinvoke <org.apache.lucene.index.StandardDirectoryReader: org.apache.lucene.index.DirectoryReader open(org.apache.lucene.store.Directory,org.apache.lucene.index.IndexCommit,int)>($r1, r0, i0);

        return $r2;
    }

    public static org.apache.lucene.index.DirectoryReader openIfChanged(org.apache.lucene.index.DirectoryReader) throws java.io.IOException
    {
        org.apache.lucene.index.DirectoryReader r0, $r1;
        java.lang.AssertionError $r2;
        boolean $z0;

        r0 := @parameter0: org.apache.lucene.index.DirectoryReader;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.DirectoryReader: org.apache.lucene.index.DirectoryReader doOpenIfChanged()>();

        $z0 = <org.apache.lucene.index.DirectoryReader: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if $r1 != r0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        return $r1;
    }

    public static org.apache.lucene.index.DirectoryReader openIfChanged(org.apache.lucene.index.DirectoryReader, org.apache.lucene.index.IndexCommit) throws java.io.IOException
    {
        org.apache.lucene.index.IndexCommit r1;
        org.apache.lucene.index.DirectoryReader r0, $r2;
        java.lang.AssertionError $r3;
        boolean $z0;

        r0 := @parameter0: org.apache.lucene.index.DirectoryReader;

        r1 := @parameter1: org.apache.lucene.index.IndexCommit;

        $r2 = virtualinvoke r0.<org.apache.lucene.index.DirectoryReader: org.apache.lucene.index.DirectoryReader doOpenIfChanged(org.apache.lucene.index.IndexCommit)>(r1);

        $z0 = <org.apache.lucene.index.DirectoryReader: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if $r2 != r0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        return $r2;
    }

    public static org.apache.lucene.index.DirectoryReader openIfChanged(org.apache.lucene.index.DirectoryReader, org.apache.lucene.index.IndexWriter, boolean) throws java.io.IOException
    {
        org.apache.lucene.index.IndexWriter r1;
        org.apache.lucene.index.DirectoryReader r0, $r2;
        java.lang.AssertionError $r3;
        boolean z0, $z1;

        r0 := @parameter0: org.apache.lucene.index.DirectoryReader;

        r1 := @parameter1: org.apache.lucene.index.IndexWriter;

        z0 := @parameter2: boolean;

        $r2 = virtualinvoke r0.<org.apache.lucene.index.DirectoryReader: org.apache.lucene.index.DirectoryReader doOpenIfChanged(org.apache.lucene.index.IndexWriter,boolean)>(r1, z0);

        $z1 = <org.apache.lucene.index.DirectoryReader: boolean $assertionsDisabled>;

        if $z1 != 0 goto label1;

        if $r2 != r0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        return $r2;
    }

    public static java.util.List listCommits(org.apache.lucene.store.Directory) throws java.io.IOException
    {
        java.lang.String[] $r1;
        long $l0, $l2;
        java.util.ArrayList $r10;
        org.apache.lucene.index.StandardDirectoryReader$ReaderCommit $r12, $r14;
        byte $b3;
        org.apache.lucene.store.Directory r0;
        int $i1, i4, $i5;
        java.lang.String r5;
        boolean $z0, $z1;
        java.io.FileNotFoundException $r8;
        org.apache.lucene.index.SegmentInfos r9, $r11, $r13;

        r0 := @parameter0: org.apache.lucene.store.Directory;

        $r1 = virtualinvoke r0.<org.apache.lucene.store.Directory: java.lang.String[] listAll()>();

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        $r11 = new org.apache.lucene.index.SegmentInfos;

        specialinvoke $r11.<org.apache.lucene.index.SegmentInfos: void <init>()>();

        virtualinvoke $r11.<org.apache.lucene.index.SegmentInfos: void read(org.apache.lucene.store.Directory)>(r0);

        $l0 = virtualinvoke $r11.<org.apache.lucene.index.SegmentInfos: long getGeneration()>();

        $r12 = new org.apache.lucene.index.StandardDirectoryReader$ReaderCommit;

        specialinvoke $r12.<org.apache.lucene.index.StandardDirectoryReader$ReaderCommit: void <init>(org.apache.lucene.index.SegmentInfos,org.apache.lucene.store.Directory)>($r11, r0);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r12);

        i4 = 0;

     label1:
        $i1 = lengthof $r1;

        if i4 >= $i1 goto label7;

        r5 = $r1[i4];

        $z0 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("segments");

        if $z0 == 0 goto label6;

        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("segments.gen");

        if $z1 != 0 goto label6;

        $l2 = staticinvoke <org.apache.lucene.index.SegmentInfos: long generationFromSegmentsFileName(java.lang.String)>(r5);

        $b3 = $l2 cmp $l0;

        $i5 = (int) $b3;

        if $i5 >= 0 goto label6;

        $r13 = new org.apache.lucene.index.SegmentInfos;

        specialinvoke $r13.<org.apache.lucene.index.SegmentInfos: void <init>()>();

        r9 = $r13;

     label2:
        virtualinvoke $r13.<org.apache.lucene.index.SegmentInfos: void read(org.apache.lucene.store.Directory,java.lang.String)>(r0, r5);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        r9 = null;

     label5:
        if r9 == null goto label6;

        $r14 = new org.apache.lucene.index.StandardDirectoryReader$ReaderCommit;

        specialinvoke $r14.<org.apache.lucene.index.StandardDirectoryReader$ReaderCommit: void <init>(org.apache.lucene.index.SegmentInfos,org.apache.lucene.store.Directory)>(r9, r0);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r14);

     label6:
        i4 = i4 + 1;

        goto label1;

     label7:
        staticinvoke <java.util.Collections: void sort(java.util.List)>($r10);

        return $r10;

        catch java.io.FileNotFoundException from label2 to label3 with label4;
    }

    public static boolean indexExists(org.apache.lucene.store.Directory) throws java.io.IOException
    {
        java.lang.String[] $r1;
        org.apache.lucene.store.NoSuchDirectoryException $r3;
        org.apache.lucene.store.Directory r0;
        int i0, i1;
        java.lang.String r2;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.lucene.store.Directory;

     label1:
        $r1 = virtualinvoke r0.<org.apache.lucene.store.Directory: java.lang.String[] listAll()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        return 0;

     label4:
        if $r1 == null goto label8;

        i0 = lengthof $r1;

        i1 = 0;

     label5:
        if i1 >= i0 goto label8;

        r2 = $r1[i1];

        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("segments_");

        if $z0 != 0 goto label6;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("segments.gen");

        if $z1 == 0 goto label7;

     label6:
        return 1;

     label7:
        i1 = i1 + 1;

        goto label5;

     label8:
        return 0;

        catch org.apache.lucene.store.NoSuchDirectoryException from label1 to label2 with label3;
    }

    protected void <init>(org.apache.lucene.store.Directory, org.apache.lucene.index.AtomicReader[])
    {
        org.apache.lucene.index.AtomicReader[] r1;
        org.apache.lucene.index.DirectoryReader r0;
        org.apache.lucene.store.Directory r2;

        r0 := @this: org.apache.lucene.index.DirectoryReader;

        r2 := @parameter0: org.apache.lucene.store.Directory;

        r1 := @parameter1: org.apache.lucene.index.AtomicReader[];

        specialinvoke r0.<org.apache.lucene.index.BaseCompositeReader: void <init>(org.apache.lucene.index.IndexReader[])>(r1);

        r0.<org.apache.lucene.index.DirectoryReader: org.apache.lucene.store.Directory directory> = r2;

        return;
    }

    public final org.apache.lucene.store.Directory directory()
    {
        org.apache.lucene.index.DirectoryReader r0;
        org.apache.lucene.store.Directory $r1;

        r0 := @this: org.apache.lucene.index.DirectoryReader;

        $r1 = r0.<org.apache.lucene.index.DirectoryReader: org.apache.lucene.store.Directory directory>;

        return $r1;
    }

    protected abstract org.apache.lucene.index.DirectoryReader doOpenIfChanged() throws java.io.IOException;

    protected abstract org.apache.lucene.index.DirectoryReader doOpenIfChanged(org.apache.lucene.index.IndexCommit) throws java.io.IOException;

    protected abstract org.apache.lucene.index.DirectoryReader doOpenIfChanged(org.apache.lucene.index.IndexWriter, boolean) throws java.io.IOException;

    public abstract long getVersion();

    public abstract boolean isCurrent() throws java.io.IOException;

    public abstract org.apache.lucene.index.IndexCommit getIndexCommit() throws java.io.IOException;

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.apache.lucene.index.DirectoryReader: int DEFAULT_TERMS_INDEX_DIVISOR> = 1;

        $r0 = class "Lorg/apache/lucene/index/DirectoryReader;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.DirectoryReader: boolean $assertionsDisabled> = $z1;

        return;
    }
}
