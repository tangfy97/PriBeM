public abstract class org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl extends org.apache.xmlbeans.impl.jam.internal.elements.ElementImpl implements org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement
{
    private java.util.Map mName2Annotation;
    private org.apache.xmlbeans.impl.jam.mutable.MComment mComment;
    private java.util.List mAllAnnotations;

    protected void <init>(org.apache.xmlbeans.impl.jam.internal.elements.ElementContext)
    {
        org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl r0;
        org.apache.xmlbeans.impl.jam.internal.elements.ElementContext r1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.internal.elements.ElementContext;

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ElementImpl: void <init>(org.apache.xmlbeans.impl.jam.internal.elements.ElementContext)>(r1);

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.Map mName2Annotation> = null;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: org.apache.xmlbeans.impl.jam.mutable.MComment mComment> = null;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.List mAllAnnotations> = null;

        return;
    }

    protected void <init>(org.apache.xmlbeans.impl.jam.internal.elements.ElementImpl)
    {
        org.apache.xmlbeans.impl.jam.internal.elements.ElementImpl r1;
        org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.internal.elements.ElementImpl;

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.ElementImpl: void <init>(org.apache.xmlbeans.impl.jam.internal.elements.ElementImpl)>(r1);

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.Map mName2Annotation> = null;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: org.apache.xmlbeans.impl.jam.mutable.MComment mComment> = null;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.List mAllAnnotations> = null;

        return;
    }

    public org.apache.xmlbeans.impl.jam.JAnnotation[] getAnnotations()
    {
        org.apache.xmlbeans.impl.jam.mutable.MAnnotation[] $r1;
        org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: org.apache.xmlbeans.impl.jam.mutable.MAnnotation[] getMutableAnnotations()>();

        return $r1;
    }

    public org.apache.xmlbeans.impl.jam.JAnnotation getAnnotation(java.lang.Class)
    {
        org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl r0;
        org.apache.xmlbeans.impl.jam.mutable.MAnnotation $r3;
        java.lang.Class r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: org.apache.xmlbeans.impl.jam.mutable.MAnnotation getMutableAnnotation(java.lang.String)>($r2);

        return $r3;
    }

    public org.apache.xmlbeans.impl.jam.JAnnotation getAnnotation(java.lang.String)
    {
        org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl r0;
        java.lang.String r1;
        org.apache.xmlbeans.impl.jam.mutable.MAnnotation $r2;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: org.apache.xmlbeans.impl.jam.mutable.MAnnotation getMutableAnnotation(java.lang.String)>(r1);

        return $r2;
    }

    public org.apache.xmlbeans.impl.jam.JAnnotationValue getAnnotationValue(java.lang.String)
    {
        org.apache.xmlbeans.impl.jam.JAnnotation $r3, $r6;
        org.apache.xmlbeans.impl.jam.JAnnotationValue $r4, $r8;
        org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl r0;
        java.util.Map $r1;
        int $i0, $i1, $i2, $i3, $i5;
        java.lang.String $r2, $r5, $r7, r9;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl;

        r9 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.Map mName2Annotation>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r9.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(64);

        $i5 = (int) -1;

        if $i0 == $i5 goto label2;

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        if $i0 != $i2 goto label4;

     label2:
        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: org.apache.xmlbeans.impl.jam.JAnnotation getAnnotation(java.lang.String)>($r2);

        if $r3 != null goto label3;

        return null;

     label3:
        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.impl.jam.JAnnotation: org.apache.xmlbeans.impl.jam.JAnnotationValue getValue(java.lang.String)>("value");

        return $r4;

     label4:
        $r5 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: org.apache.xmlbeans.impl.jam.JAnnotation getAnnotation(java.lang.String)>($r5);

        if $r6 != null goto label5;

        return null;

     label5:
        $i3 = $i0 + 1;

        $r7 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i3);

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.jam.JAnnotation: org.apache.xmlbeans.impl.jam.JAnnotationValue getValue(java.lang.String)>($r7);

        return $r8;
    }

    public java.lang.Object getAnnotationProxy(java.lang.Class)
    {
        java.lang.Class r1;
        org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl r0;
        org.apache.xmlbeans.impl.jam.'annotation'.AnnotationProxy $r2;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: org.apache.xmlbeans.impl.jam.'annotation'.AnnotationProxy getEditableProxy(java.lang.Class)>(r1);

        return $r2;
    }

    public org.apache.xmlbeans.impl.jam.JComment getComment()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl r0;
        org.apache.xmlbeans.impl.jam.mutable.MComment $r1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: org.apache.xmlbeans.impl.jam.mutable.MComment getMutableComment()>();

        return $r1;
    }

    public org.apache.xmlbeans.impl.jam.JAnnotation[] getAllJavadocTags()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.AnnotationImpl[] $r5;
        java.util.List $r1, $r2, $r4;
        org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl r0;
        org.apache.xmlbeans.impl.jam.JAnnotation[] r3;
        int $i0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.List mAllAnnotations>;

        if $r1 != null goto label1;

        $r5 = <org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: org.apache.xmlbeans.impl.jam.internal.elements.AnnotationImpl[] NO_ANNOTATION>;

        return $r5;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.List mAllAnnotations>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        r3 = newarray (org.apache.xmlbeans.impl.jam.JAnnotation)[$i0];

        $r4 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.List mAllAnnotations>;

        interfaceinvoke $r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r3);

        return r3;
    }

    public org.apache.xmlbeans.impl.jam.'annotation'.AnnotationProxy getEditableProxy(java.lang.Class)
    {
        org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl r0;
        org.apache.xmlbeans.impl.jam.mutable.MAnnotation $r4;
        java.util.Map $r1;
        java.lang.Class r2;
        java.lang.Object $r5;
        java.lang.String $r3;
        org.apache.xmlbeans.impl.jam.'annotation'.AnnotationProxy $r6;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl;

        r2 := @parameter0: java.lang.Class;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.Map mName2Annotation>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: org.apache.xmlbeans.impl.jam.mutable.MAnnotation getMutableAnnotation(java.lang.String)>($r3);

        if $r4 != null goto label2;

        $r6 = null;

        goto label3;

     label2:
        $r5 = interfaceinvoke $r4.<org.apache.xmlbeans.impl.jam.mutable.MAnnotation: java.lang.Object getProxy()>();

        $r6 = (org.apache.xmlbeans.impl.jam.'annotation'.AnnotationProxy) $r5;

     label3:
        return $r6;
    }

    public void removeAnnotation(org.apache.xmlbeans.impl.jam.mutable.MAnnotation)
    {
        org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl r0;
        org.apache.xmlbeans.impl.jam.mutable.MAnnotation r4;
        java.util.Map $r1, $r2;
        java.util.Collection $r3;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl;

        r4 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MAnnotation;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.Map mName2Annotation>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.Map mName2Annotation>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        interfaceinvoke $r3.<java.util.Collection: boolean remove(java.lang.Object)>(r4);

     label1:
        return;
    }

    public org.apache.xmlbeans.impl.jam.mutable.MAnnotation[] getMutableAnnotations()
    {
        java.util.Collection $r3, $r6;
        org.apache.xmlbeans.impl.jam.mutable.MAnnotation[] r4, $r7;
        org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl r0;
        java.util.Map $r1, $r2, $r5;
        int $i0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.Map mName2Annotation>;

        if $r1 != null goto label1;

        $r7 = newarray (org.apache.xmlbeans.impl.jam.mutable.MAnnotation)[0];

        return $r7;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.Map mName2Annotation>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $i0 = interfaceinvoke $r3.<java.util.Collection: int size()>();

        r4 = newarray (org.apache.xmlbeans.impl.jam.mutable.MAnnotation)[$i0];

        $r5 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.Map mName2Annotation>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Collection values()>();

        interfaceinvoke $r6.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>(r4);

        return r4;
    }

    public org.apache.xmlbeans.impl.jam.mutable.MAnnotation getMutableAnnotation(java.lang.String)
    {
        org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl r0;
        org.apache.xmlbeans.impl.jam.mutable.MAnnotation $r5;
        java.util.Map $r1, $r3;
        java.lang.Object $r4;
        java.lang.String $r2, r6;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl;

        r6 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.Map mName2Annotation>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r6.<java.lang.String: java.lang.String trim()>();

        $r3 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.Map mName2Annotation>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r5 = (org.apache.xmlbeans.impl.jam.mutable.MAnnotation) $r4;

        return $r5;
    }

    public org.apache.xmlbeans.impl.jam.mutable.MAnnotation findOrCreateAnnotation(java.lang.String)
    {
        org.apache.xmlbeans.impl.jam.mutable.MAnnotation $r2;
        java.util.HashMap $r10;
        org.apache.xmlbeans.impl.jam.'annotation'.AnnotationProxy $r4;
        org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl r0;
        java.util.Map $r7, $r8;
        java.lang.String r1, $r9;
        org.apache.xmlbeans.impl.jam.internal.elements.AnnotationImpl $r5;
        org.apache.xmlbeans.impl.jam.internal.elements.ElementContext $r3, $r6;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: org.apache.xmlbeans.impl.jam.mutable.MAnnotation getMutableAnnotation(java.lang.String)>(r1);

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: org.apache.xmlbeans.impl.jam.internal.elements.ElementContext getContext()>();

        $r4 = interfaceinvoke $r3.<org.apache.xmlbeans.impl.jam.internal.elements.ElementContext: org.apache.xmlbeans.impl.jam.'annotation'.AnnotationProxy createAnnotationProxy(java.lang.String)>(r1);

        $r5 = new org.apache.xmlbeans.impl.jam.internal.elements.AnnotationImpl;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: org.apache.xmlbeans.impl.jam.internal.elements.ElementContext getContext()>();

        specialinvoke $r5.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotationImpl: void <init>(org.apache.xmlbeans.impl.jam.internal.elements.ElementContext,org.apache.xmlbeans.impl.jam.'annotation'.AnnotationProxy,java.lang.String)>($r6, $r4, r1);

        $r7 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.Map mName2Annotation>;

        if $r7 != null goto label2;

        $r10 = new java.util.HashMap;

        specialinvoke $r10.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.Map mName2Annotation> = $r10;

     label2:
        $r8 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.Map mName2Annotation>;

        $r9 = interfaceinvoke $r5.<org.apache.xmlbeans.impl.jam.mutable.MAnnotation: java.lang.String getQualifiedName()>();

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r5);

        return $r5;
    }

    public org.apache.xmlbeans.impl.jam.mutable.MAnnotation addLiteralAnnotation(java.lang.String)
    {
        org.apache.xmlbeans.impl.jam.mutable.MAnnotation $r8;
        java.util.HashMap $r11;
        java.lang.IllegalArgumentException $r13;
        org.apache.xmlbeans.impl.jam.'annotation'.AnnotationProxy $r3;
        java.util.ArrayList $r12;
        java.util.List $r6, $r7;
        org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl r1;
        java.util.Map $r9, $r10;
        java.lang.String $r0, r14;
        org.apache.xmlbeans.impl.jam.internal.elements.AnnotationImpl $r4;
        org.apache.xmlbeans.impl.jam.internal.elements.ElementContext $r2, $r5;

        r1 := @this: org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl;

        r14 := @parameter0: java.lang.String;

        if r14 != null goto label1;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null tagname");

        throw $r13;

     label1:
        $r0 = virtualinvoke r14.<java.lang.String: java.lang.String trim()>();

        $r2 = virtualinvoke r1.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: org.apache.xmlbeans.impl.jam.internal.elements.ElementContext getContext()>();

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.jam.internal.elements.ElementContext: org.apache.xmlbeans.impl.jam.'annotation'.AnnotationProxy createAnnotationProxy(java.lang.String)>($r0);

        $r4 = new org.apache.xmlbeans.impl.jam.internal.elements.AnnotationImpl;

        $r5 = virtualinvoke r1.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: org.apache.xmlbeans.impl.jam.internal.elements.ElementContext getContext()>();

        specialinvoke $r4.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotationImpl: void <init>(org.apache.xmlbeans.impl.jam.internal.elements.ElementContext,org.apache.xmlbeans.impl.jam.'annotation'.AnnotationProxy,java.lang.String)>($r5, $r3, $r0);

        $r6 = r1.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.List mAllAnnotations>;

        if $r6 != null goto label2;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r1.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.List mAllAnnotations> = $r12;

     label2:
        $r7 = r1.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.List mAllAnnotations>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r8 = virtualinvoke r1.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: org.apache.xmlbeans.impl.jam.mutable.MAnnotation getMutableAnnotation(java.lang.String)>($r0);

        if $r8 != null goto label4;

        $r9 = r1.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.Map mName2Annotation>;

        if $r9 != null goto label3;

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        r1.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.Map mName2Annotation> = $r11;

     label3:
        $r10 = r1.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.Map mName2Annotation>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r4);

     label4:
        return $r4;
    }

    public org.apache.xmlbeans.impl.jam.mutable.MComment getMutableComment()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl r0;
        org.apache.xmlbeans.impl.jam.mutable.MComment $r1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: org.apache.xmlbeans.impl.jam.mutable.MComment mComment>;

        return $r1;
    }

    public org.apache.xmlbeans.impl.jam.mutable.MComment createComment()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl r0;
        org.apache.xmlbeans.impl.jam.internal.elements.CommentImpl $r1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl;

        $r1 = new org.apache.xmlbeans.impl.jam.internal.elements.CommentImpl;

        specialinvoke $r1.<org.apache.xmlbeans.impl.jam.internal.elements.CommentImpl: void <init>(org.apache.xmlbeans.impl.jam.internal.elements.ElementImpl)>(r0);

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: org.apache.xmlbeans.impl.jam.mutable.MComment mComment> = $r1;

        return $r1;
    }

    public void removeComment()
    {
        org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl;

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: org.apache.xmlbeans.impl.jam.mutable.MComment mComment> = null;

        return;
    }

    protected void addAnnotation(org.apache.xmlbeans.impl.jam.JAnnotation)
    {
        org.apache.xmlbeans.impl.jam.JAnnotation r2;
        java.util.HashMap $r10;
        java.util.ArrayList $r7;
        java.util.List $r6, $r13;
        org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl r0;
        java.util.Map $r1, $r3, $r8, $r11;
        java.lang.Object $r5;
        java.lang.String $r4, $r9, $r12;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl;

        r2 := @parameter0: org.apache.xmlbeans.impl.jam.JAnnotation;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.Map mName2Annotation>;

        if $r1 != null goto label1;

        $r10 = new java.util.HashMap;

        specialinvoke $r10.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.Map mName2Annotation> = $r10;

        $r11 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.Map mName2Annotation>;

        $r12 = interfaceinvoke r2.<org.apache.xmlbeans.impl.jam.JAnnotation: java.lang.String getQualifiedName()>();

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, r2);

        goto label2;

     label1:
        $r3 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.Map mName2Annotation>;

        $r4 = interfaceinvoke r2.<org.apache.xmlbeans.impl.jam.JAnnotation: java.lang.String getQualifiedName()>();

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        if $r5 != null goto label2;

        $r8 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.Map mName2Annotation>;

        $r9 = interfaceinvoke r2.<org.apache.xmlbeans.impl.jam.JAnnotation: java.lang.String getQualifiedName()>();

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r2);

     label2:
        $r13 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.List mAllAnnotations>;

        if $r13 != null goto label3;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.List mAllAnnotations> = $r7;

     label3:
        $r6 = r0.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.List mAllAnnotations>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    public org.apache.xmlbeans.impl.jam.mutable.MAnnotation addAnnotationForProxy(java.lang.Class, org.apache.xmlbeans.impl.jam.'annotation'.AnnotationProxy)
    {
        org.apache.xmlbeans.impl.jam.mutable.MAnnotation $r3;
        java.util.HashMap $r10;
        org.apache.xmlbeans.impl.jam.'annotation'.AnnotationProxy r6;
        org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl r2;
        java.util.Map $r7, $r8;
        java.lang.Class r0;
        java.lang.String $r1, $r9;
        org.apache.xmlbeans.impl.jam.internal.elements.AnnotationImpl $r4;
        org.apache.xmlbeans.impl.jam.internal.elements.ElementContext $r5;

        r2 := @this: org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl;

        r0 := @parameter0: java.lang.Class;

        r6 := @parameter1: org.apache.xmlbeans.impl.jam.'annotation'.AnnotationProxy;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke r2.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: org.apache.xmlbeans.impl.jam.mutable.MAnnotation getMutableAnnotation(java.lang.String)>($r1);

        if $r3 == null goto label1;

        return $r3;

     label1:
        $r4 = new org.apache.xmlbeans.impl.jam.internal.elements.AnnotationImpl;

        $r5 = virtualinvoke r2.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: org.apache.xmlbeans.impl.jam.internal.elements.ElementContext getContext()>();

        specialinvoke $r4.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotationImpl: void <init>(org.apache.xmlbeans.impl.jam.internal.elements.ElementContext,org.apache.xmlbeans.impl.jam.'annotation'.AnnotationProxy,java.lang.String)>($r5, r6, $r1);

        $r7 = r2.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.Map mName2Annotation>;

        if $r7 != null goto label2;

        $r10 = new java.util.HashMap;

        specialinvoke $r10.<java.util.HashMap: void <init>()>();

        r2.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.Map mName2Annotation> = $r10;

     label2:
        $r8 = r2.<org.apache.xmlbeans.impl.jam.internal.elements.AnnotatedElementImpl: java.util.Map mName2Annotation>;

        $r9 = interfaceinvoke $r4.<org.apache.xmlbeans.impl.jam.mutable.MAnnotation: java.lang.String getQualifiedName()>();

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r4);

        return $r4;
    }
}
