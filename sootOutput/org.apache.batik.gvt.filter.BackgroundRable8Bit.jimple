public class org.apache.batik.gvt.filter.BackgroundRable8Bit extends org.apache.batik.ext.awt.image.renderable.AbstractRable
{
    private org.apache.batik.gvt.GraphicsNode node;

    public org.apache.batik.gvt.GraphicsNode getGraphicsNode()
    {
        org.apache.batik.gvt.filter.BackgroundRable8Bit r0;
        org.apache.batik.gvt.GraphicsNode $r1;

        r0 := @this: org.apache.batik.gvt.filter.BackgroundRable8Bit;

        $r1 = r0.<org.apache.batik.gvt.filter.BackgroundRable8Bit: org.apache.batik.gvt.GraphicsNode node>;

        return $r1;
    }

    public void setGraphicsNode(org.apache.batik.gvt.GraphicsNode)
    {
        org.apache.batik.gvt.filter.BackgroundRable8Bit r1;
        java.lang.IllegalArgumentException $r2;
        org.apache.batik.gvt.GraphicsNode r0;

        r1 := @this: org.apache.batik.gvt.filter.BackgroundRable8Bit;

        r0 := @parameter0: org.apache.batik.gvt.GraphicsNode;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        r1.<org.apache.batik.gvt.filter.BackgroundRable8Bit: org.apache.batik.gvt.GraphicsNode node> = r0;

        return;
    }

    public void <init>(org.apache.batik.gvt.GraphicsNode)
    {
        org.apache.batik.gvt.filter.BackgroundRable8Bit r0;
        java.lang.IllegalArgumentException $r2;
        org.apache.batik.gvt.GraphicsNode r1;

        r0 := @this: org.apache.batik.gvt.filter.BackgroundRable8Bit;

        r1 := @parameter0: org.apache.batik.gvt.GraphicsNode;

        specialinvoke r0.<org.apache.batik.ext.awt.image.renderable.AbstractRable: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        r0.<org.apache.batik.gvt.filter.BackgroundRable8Bit: org.apache.batik.gvt.GraphicsNode node> = r1;

        return;
    }

    static java.awt.geom.Rectangle2D addBounds(org.apache.batik.gvt.CompositeGraphicsNode, org.apache.batik.gvt.GraphicsNode, java.awt.geom.Rectangle2D)
    {
        java.awt.Shape $r9;
        java.util.Iterator $r2;
        org.apache.batik.gvt.GraphicsNode r4, r5;
        java.awt.geom.Rectangle2D $r6, r10, $r11, r12, r13;
        java.awt.geom.AffineTransform $r7;
        org.apache.batik.gvt.CompositeGraphicsNode r0;
        java.util.List $r1;
        java.lang.Object $r3, $r8;
        boolean $z0;

        r0 := @parameter0: org.apache.batik.gvt.CompositeGraphicsNode;

        r5 := @parameter1: org.apache.batik.gvt.GraphicsNode;

        r10 := @parameter2: java.awt.geom.Rectangle2D;

        $r1 = virtualinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode: java.util.List getChildren()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        r12 = null;

        goto label5;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.batik.gvt.GraphicsNode) $r3;

        if r4 != r5 goto label2;

        goto label6;

     label2:
        $r6 = interfaceinvoke r4.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.Rectangle2D getBounds()>();

        r13 = $r6;

        $r7 = interfaceinvoke r4.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.AffineTransform getTransform()>();

        if $r7 == null goto label3;

        $r9 = virtualinvoke $r7.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>($r6);

        r13 = interfaceinvoke $r9.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>();

     label3:
        if r12 != null goto label4;

        $r8 = virtualinvoke r13.<java.awt.geom.RectangularShape: java.lang.Object clone()>();

        r12 = (java.awt.geom.Rectangle2D) $r8;

        goto label5;

     label4:
        virtualinvoke r12.<java.awt.geom.Rectangle2D: void add(java.awt.geom.Rectangle2D)>(r13);

     label5:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

     label6:
        if r12 != null goto label8;

        if r10 != null goto label7;

        $r11 = <org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D VIEWPORT>;

        return $r11;

     label7:
        return r10;

     label8:
        if r10 != null goto label9;

        return r12;

     label9:
        virtualinvoke r10.<java.awt.geom.Rectangle2D: void add(java.awt.geom.Rectangle2D)>(r12);

        return r10;
    }

    static java.awt.geom.Rectangle2D getViewportBounds(org.apache.batik.gvt.GraphicsNode, org.apache.batik.gvt.GraphicsNode)
    {
        java.awt.geom.Rectangle2D $r1, $r4, $r7, $r8, $r10, r13;
        org.apache.batik.gvt.CompositeGraphicsNode $r11, r14, r15, r16;
        java.awt.geom.NoninvertibleTransformException $r12;
        boolean $z0;
        java.awt.Shape $r6;
        org.apache.batik.gvt.GraphicsNode r0, r3;
        java.awt.geom.AffineTransform $r2, $r5;
        java.lang.Object $r9;

        r0 := @parameter0: org.apache.batik.gvt.GraphicsNode;

        r3 := @parameter1: org.apache.batik.gvt.GraphicsNode;

        r13 = null;

        $z0 = r0 instanceof org.apache.batik.gvt.CompositeGraphicsNode;

        if $z0 == 0 goto label01;

        r14 = (org.apache.batik.gvt.CompositeGraphicsNode) r0;

        r13 = virtualinvoke r14.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D getBackgroundEnable()>();

     label01:
        if r13 != null goto label02;

        $r11 = interfaceinvoke r0.<org.apache.batik.gvt.GraphicsNode: org.apache.batik.gvt.CompositeGraphicsNode getParent()>();

        r13 = staticinvoke <org.apache.batik.gvt.filter.BackgroundRable8Bit: java.awt.geom.Rectangle2D getViewportBounds(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode)>($r11, r0);

     label02:
        if r13 != null goto label03;

        return null;

     label03:
        $r1 = <org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D VIEWPORT>;

        if r13 != $r1 goto label05;

        if r3 != null goto label04;

        $r8 = interfaceinvoke r0.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.Rectangle2D getPrimitiveBounds()>();

        $r9 = virtualinvoke $r8.<java.awt.geom.RectangularShape: java.lang.Object clone()>();

        $r10 = (java.awt.geom.Rectangle2D) $r9;

        return $r10;

     label04:
        r15 = (org.apache.batik.gvt.CompositeGraphicsNode) r0;

        $r7 = staticinvoke <org.apache.batik.gvt.filter.BackgroundRable8Bit: java.awt.geom.Rectangle2D addBounds(org.apache.batik.gvt.CompositeGraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D)>(r15, r3, null);

        return $r7;

     label05:
        $r2 = interfaceinvoke r0.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.AffineTransform getTransform()>();

        if $r2 == null goto label09;

     label06:
        $r5 = virtualinvoke $r2.<java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>();

        $r6 = virtualinvoke $r5.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>(r13);

        r13 = interfaceinvoke $r6.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>();

     label07:
        goto label09;

     label08:
        $r12 := @caughtexception;

        r13 = null;

     label09:
        if r3 == null goto label10;

        r16 = (org.apache.batik.gvt.CompositeGraphicsNode) r0;

        r13 = staticinvoke <org.apache.batik.gvt.filter.BackgroundRable8Bit: java.awt.geom.Rectangle2D addBounds(org.apache.batik.gvt.CompositeGraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D)>(r16, r3, r13);

        goto label11;

     label10:
        $r4 = interfaceinvoke r0.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.Rectangle2D getPrimitiveBounds()>();

        if $r4 == null goto label11;

        virtualinvoke r13.<java.awt.geom.Rectangle2D: void add(java.awt.geom.Rectangle2D)>($r4);

     label11:
        return r13;

        catch java.awt.geom.NoninvertibleTransformException from label06 to label07 with label08;
    }

    static java.awt.geom.Rectangle2D getBoundsRecursive(org.apache.batik.gvt.GraphicsNode, org.apache.batik.gvt.GraphicsNode)
    {
        java.awt.Shape $r6;
        org.apache.batik.gvt.GraphicsNode r0, r9;
        java.awt.geom.Rectangle2D $r2, $r3, r10, r12;
        java.awt.geom.AffineTransform $r4, $r5;
        java.awt.geom.Rectangle2D$Float $r7;
        org.apache.batik.gvt.CompositeGraphicsNode $r1, r11;
        java.awt.geom.NoninvertibleTransformException $r8;
        boolean $z0;

        r0 := @parameter0: org.apache.batik.gvt.GraphicsNode;

        r9 := @parameter1: org.apache.batik.gvt.GraphicsNode;

        r10 = null;

        if r0 != null goto label1;

        return null;

     label1:
        $z0 = r0 instanceof org.apache.batik.gvt.CompositeGraphicsNode;

        if $z0 == 0 goto label2;

        r11 = (org.apache.batik.gvt.CompositeGraphicsNode) r0;

        r10 = virtualinvoke r11.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D getBackgroundEnable()>();

     label2:
        if r10 == null goto label3;

        return r10;

     label3:
        $r1 = interfaceinvoke r0.<org.apache.batik.gvt.GraphicsNode: org.apache.batik.gvt.CompositeGraphicsNode getParent()>();

        $r2 = staticinvoke <org.apache.batik.gvt.filter.BackgroundRable8Bit: java.awt.geom.Rectangle2D getBoundsRecursive(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode)>($r1, r0);

        r12 = $r2;

        if $r2 != null goto label4;

        $r7 = new java.awt.geom.Rectangle2D$Float;

        specialinvoke $r7.<java.awt.geom.Rectangle2D$Float: void <init>(float,float,float,float)>(0.0F, 0.0F, 0.0F, 0.0F);

        return $r7;

     label4:
        $r3 = <org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D VIEWPORT>;

        if $r2 != $r3 goto label5;

        return $r2;

     label5:
        $r4 = interfaceinvoke r0.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.AffineTransform getTransform()>();

        if $r4 == null goto label9;

     label6:
        $r5 = virtualinvoke $r4.<java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>();

        $r6 = virtualinvoke $r5.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>($r2);

        r12 = interfaceinvoke $r6.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>();

     label7:
        goto label9;

     label8:
        $r8 := @caughtexception;

        r12 = null;

     label9:
        return r12;

        catch java.awt.geom.NoninvertibleTransformException from label6 to label7 with label8;
    }

    public java.awt.geom.Rectangle2D getBounds2D()
    {
        org.apache.batik.gvt.filter.BackgroundRable8Bit r0;
        org.apache.batik.gvt.GraphicsNode $r1, $r4;
        java.awt.geom.Rectangle2D $r2, $r3, r5;

        r0 := @this: org.apache.batik.gvt.filter.BackgroundRable8Bit;

        $r1 = r0.<org.apache.batik.gvt.filter.BackgroundRable8Bit: org.apache.batik.gvt.GraphicsNode node>;

        $r2 = staticinvoke <org.apache.batik.gvt.filter.BackgroundRable8Bit: java.awt.geom.Rectangle2D getBoundsRecursive(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode)>($r1, null);

        r5 = $r2;

        $r3 = <org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D VIEWPORT>;

        if $r2 != $r3 goto label1;

        $r4 = r0.<org.apache.batik.gvt.filter.BackgroundRable8Bit: org.apache.batik.gvt.GraphicsNode node>;

        r5 = staticinvoke <org.apache.batik.gvt.filter.BackgroundRable8Bit: java.awt.geom.Rectangle2D getViewportBounds(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode)>($r4, null);

     label1:
        return r5;
    }

    public org.apache.batik.ext.awt.image.renderable.Filter getBackground(org.apache.batik.gvt.GraphicsNode, org.apache.batik.gvt.GraphicsNode, java.awt.geom.Rectangle2D)
    {
        java.awt.geom.Rectangle2D $r13, r15, $r22, r26, r28, r30;
        org.apache.batik.gvt.CompositeGraphicsNode $r20, r27, r29;
        org.apache.batik.ext.awt.image.CompositeRule $r4;
        org.apache.batik.ext.awt.image.renderable.CompositeRable8Bit $r3;
        java.awt.geom.NoninvertibleTransformException $r25;
        org.apache.batik.ext.awt.image.renderable.AffineRable8Bit $r7;
        boolean $z0, $z1, $z2, $z3;
        java.awt.Shape $r17, $r23;
        org.apache.batik.gvt.filter.BackgroundRable8Bit r19;
        org.apache.batik.gvt.GraphicsNode r0, r2, r12;
        java.awt.geom.AffineTransform $r5, $r6, $r14, $r18;
        org.apache.batik.ext.awt.image.renderable.Filter $r16, $r21, r31;
        java.util.List $r9;
        java.util.ArrayList $r1;
        int $i0, $i1;
        java.util.Iterator $r10;
        java.lang.IllegalArgumentException $r24;
        java.lang.Object $r8, $r11;

        r19 := @this: org.apache.batik.gvt.filter.BackgroundRable8Bit;

        r0 := @parameter0: org.apache.batik.gvt.GraphicsNode;

        r2 := @parameter1: org.apache.batik.gvt.GraphicsNode;

        r15 := @parameter2: java.awt.geom.Rectangle2D;

        if r0 != null goto label01;

        $r24 = new java.lang.IllegalArgumentException;

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("BackgroundImage requested yet no parent has \'enable-background:new\'");

        throw $r24;

     label01:
        r26 = null;

        $z0 = r0 instanceof org.apache.batik.gvt.CompositeGraphicsNode;

        if $z0 == 0 goto label02;

        r27 = (org.apache.batik.gvt.CompositeGraphicsNode) r0;

        r26 = virtualinvoke r27.<org.apache.batik.gvt.CompositeGraphicsNode: java.awt.geom.Rectangle2D getBackgroundEnable()>();

     label02:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        if r26 != null goto label04;

        r28 = r15;

        $r18 = interfaceinvoke r0.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.AffineTransform getTransform()>();

        if $r18 == null goto label03;

        $r23 = virtualinvoke $r18.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>(r15);

        r28 = interfaceinvoke $r23.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>();

     label03:
        $r20 = interfaceinvoke r0.<org.apache.batik.gvt.GraphicsNode: org.apache.batik.gvt.CompositeGraphicsNode getParent()>();

        $r21 = virtualinvoke r19.<org.apache.batik.gvt.filter.BackgroundRable8Bit: org.apache.batik.ext.awt.image.renderable.Filter getBackground(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D)>($r20, r0, r28);

        if $r21 == null goto label04;

        $r22 = interfaceinvoke $r21.<org.apache.batik.ext.awt.image.renderable.Filter: java.awt.geom.Rectangle2D getBounds2D()>();

        $z2 = virtualinvoke $r22.<java.awt.geom.RectangularShape: boolean intersects(java.awt.geom.Rectangle2D)>(r15);

        if $z2 == 0 goto label04;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r21);

     label04:
        if r2 == null goto label09;

        r29 = (org.apache.batik.gvt.CompositeGraphicsNode) r0;

        $r9 = virtualinvoke r29.<org.apache.batik.gvt.CompositeGraphicsNode: java.util.List getChildren()>();

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

        goto label08;

     label05:
        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.apache.batik.gvt.GraphicsNode) $r11;

        if r12 != r2 goto label06;

        goto label09;

     label06:
        $r13 = interfaceinvoke r12.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.Rectangle2D getBounds()>();

        r30 = $r13;

        $r14 = interfaceinvoke r12.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.AffineTransform getTransform()>();

        if $r14 == null goto label07;

        $r17 = virtualinvoke $r14.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>($r13);

        r30 = interfaceinvoke $r17.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>();

     label07:
        $z1 = virtualinvoke r15.<java.awt.geom.RectangularShape: boolean intersects(java.awt.geom.Rectangle2D)>(r30);

        if $z1 == 0 goto label08;

        $r16 = interfaceinvoke r12.<org.apache.batik.gvt.GraphicsNode: org.apache.batik.ext.awt.image.renderable.Filter getEnableBackgroundGraphicsNodeRable(boolean)>(1);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r16);

     label08:
        $z3 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label05;

     label09:
        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 != 0 goto label10;

        return null;

     label10:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 1 goto label11;

        $r8 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        r31 = (org.apache.batik.ext.awt.image.renderable.Filter) $r8;

        goto label12;

     label11:
        $r3 = new org.apache.batik.ext.awt.image.renderable.CompositeRable8Bit;

        $r4 = <org.apache.batik.ext.awt.image.CompositeRule: org.apache.batik.ext.awt.image.CompositeRule OVER>;

        specialinvoke $r3.<org.apache.batik.ext.awt.image.renderable.CompositeRable8Bit: void <init>(java.util.List,org.apache.batik.ext.awt.image.CompositeRule,boolean)>($r1, $r4, 0);

        r31 = $r3;

     label12:
        if r2 == null goto label16;

        $r5 = interfaceinvoke r2.<org.apache.batik.gvt.GraphicsNode: java.awt.geom.AffineTransform getTransform()>();

        if $r5 == null goto label16;

     label13:
        $r6 = virtualinvoke $r5.<java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>();

        $r7 = new org.apache.batik.ext.awt.image.renderable.AffineRable8Bit;

        specialinvoke $r7.<org.apache.batik.ext.awt.image.renderable.AffineRable8Bit: void <init>(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.AffineTransform)>(r31, $r6);

        r31 = $r7;

     label14:
        goto label16;

     label15:
        $r25 := @caughtexception;

        r31 = null;

     label16:
        return r31;

        catch java.awt.geom.NoninvertibleTransformException from label13 to label14 with label15;
    }

    public boolean isDynamic()
    {
        org.apache.batik.gvt.filter.BackgroundRable8Bit r0;

        r0 := @this: org.apache.batik.gvt.filter.BackgroundRable8Bit;

        return 0;
    }

    public java.awt.image.RenderedImage createRendering(java.awt.image.renderable.RenderContext)
    {
        java.awt.Shape $r3;
        org.apache.batik.gvt.filter.BackgroundRable8Bit r0;
        org.apache.batik.gvt.GraphicsNode $r4;
        java.awt.geom.Rectangle2D $r1, $r12;
        java.awt.image.RenderedImage $r11;
        java.awt.RenderingHints $r10;
        java.awt.geom.AffineTransform $r9;
        org.apache.batik.ext.awt.image.renderable.Filter $r5;
        java.awt.image.renderable.RenderContext r2, $r8;
        org.apache.batik.ext.awt.image.PadMode $r7;
        org.apache.batik.ext.awt.image.renderable.PadRable8Bit $r6;
        boolean $z0;

        r0 := @this: org.apache.batik.gvt.filter.BackgroundRable8Bit;

        r2 := @parameter0: java.awt.image.renderable.RenderContext;

        $r1 = virtualinvoke r0.<org.apache.batik.gvt.filter.BackgroundRable8Bit: java.awt.geom.Rectangle2D getBounds2D()>();

        $r3 = virtualinvoke r2.<java.awt.image.renderable.RenderContext: java.awt.Shape getAreaOfInterest()>();

        if $r3 == null goto label2;

        $r12 = interfaceinvoke $r3.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>();

        $z0 = virtualinvoke $r1.<java.awt.geom.RectangularShape: boolean intersects(java.awt.geom.Rectangle2D)>($r12);

        if $z0 != 0 goto label1;

        return null;

     label1:
        staticinvoke <java.awt.geom.Rectangle2D: void intersect(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)>($r1, $r12, $r1);

     label2:
        $r4 = r0.<org.apache.batik.gvt.filter.BackgroundRable8Bit: org.apache.batik.gvt.GraphicsNode node>;

        $r5 = virtualinvoke r0.<org.apache.batik.gvt.filter.BackgroundRable8Bit: org.apache.batik.ext.awt.image.renderable.Filter getBackground(org.apache.batik.gvt.GraphicsNode,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D)>($r4, null, $r1);

        if $r5 != null goto label3;

        return null;

     label3:
        $r6 = new org.apache.batik.ext.awt.image.renderable.PadRable8Bit;

        $r7 = <org.apache.batik.ext.awt.image.PadMode: org.apache.batik.ext.awt.image.PadMode ZERO_PAD>;

        specialinvoke $r6.<org.apache.batik.ext.awt.image.renderable.PadRable8Bit: void <init>(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,org.apache.batik.ext.awt.image.PadMode)>($r5, $r1, $r7);

        $r8 = new java.awt.image.renderable.RenderContext;

        $r9 = virtualinvoke r2.<java.awt.image.renderable.RenderContext: java.awt.geom.AffineTransform getTransform()>();

        $r10 = virtualinvoke r2.<java.awt.image.renderable.RenderContext: java.awt.RenderingHints getRenderingHints()>();

        specialinvoke $r8.<java.awt.image.renderable.RenderContext: void <init>(java.awt.geom.AffineTransform,java.awt.Shape,java.awt.RenderingHints)>($r9, $r1, $r10);

        $r11 = interfaceinvoke $r6.<java.awt.image.renderable.RenderableImage: java.awt.image.RenderedImage createRendering(java.awt.image.renderable.RenderContext)>($r8);

        return $r11;
    }
}
