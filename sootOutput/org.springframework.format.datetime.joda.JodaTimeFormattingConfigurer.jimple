public class org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer extends java.lang.Object
{
    private java.lang.String dateStyle;
    private java.lang.String timeStyle;
    private java.lang.String dateTimeStyle;
    private boolean useIsoFormat;

    public void <init>()
    {
        org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer r0;

        r0 := @this: org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void setDateStyle(java.lang.String)
    {
        java.lang.String r1;
        org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer r0;

        r0 := @this: org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer;

        r1 := @parameter0: java.lang.String;

        r0.<org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer: java.lang.String dateStyle> = r1;

        return;
    }

    public void setTimeStyle(java.lang.String)
    {
        java.lang.String r1;
        org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer r0;

        r0 := @this: org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer;

        r1 := @parameter0: java.lang.String;

        r0.<org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer: java.lang.String timeStyle> = r1;

        return;
    }

    public void setDateTimeStyle(java.lang.String)
    {
        java.lang.String r1;
        org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer r0;

        r0 := @this: org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer;

        r1 := @parameter0: java.lang.String;

        r0.<org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer: java.lang.String dateTimeStyle> = r1;

        return;
    }

    public void setUseIsoFormat(boolean)
    {
        org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer r0;
        boolean z0;

        r0 := @this: org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer;

        z0 := @parameter0: boolean;

        r0.<org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer: boolean useIsoFormat> = z0;

        return;
    }

    public void installJodaTimeFormatting(org.springframework.format.FormatterRegistry)
    {
        org.springframework.format.datetime.joda.DateTimeParser $r4, $r7, $r9;
        org.springframework.format.FormatterRegistry r0;
        org.joda.time.format.DateTimeFormatter $r2, $r5, $r8;
        org.springframework.format.datetime.joda.JodaDateTimeFormatAnnotationFormatterFactory $r12;
        org.springframework.format.datetime.joda.ReadablePartialPrinter $r3, $r6, $r10;
        org.springframework.format.datetime.joda.ReadableInstantPrinter $r11;
        org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer r1;

        r1 := @this: org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer;

        r0 := @parameter0: org.springframework.format.FormatterRegistry;

        staticinvoke <org.springframework.format.datetime.joda.JodaTimeConverters: void registerConverters(org.springframework.core.convert.converter.ConverterRegistry)>(r0);

        $r2 = specialinvoke r1.<org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer: org.joda.time.format.DateTimeFormatter getJodaDateFormatter()>();

        $r3 = new org.springframework.format.datetime.joda.ReadablePartialPrinter;

        specialinvoke $r3.<org.springframework.format.datetime.joda.ReadablePartialPrinter: void <init>(org.joda.time.format.DateTimeFormatter)>($r2);

        $r4 = new org.springframework.format.datetime.joda.DateTimeParser;

        specialinvoke $r4.<org.springframework.format.datetime.joda.DateTimeParser: void <init>(org.joda.time.format.DateTimeFormatter)>($r2);

        interfaceinvoke r0.<org.springframework.format.FormatterRegistry: void addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser)>(class "Lorg/joda/time/LocalDate;", $r3, $r4);

        $r5 = specialinvoke r1.<org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer: org.joda.time.format.DateTimeFormatter getJodaTimeFormatter()>();

        $r6 = new org.springframework.format.datetime.joda.ReadablePartialPrinter;

        specialinvoke $r6.<org.springframework.format.datetime.joda.ReadablePartialPrinter: void <init>(org.joda.time.format.DateTimeFormatter)>($r5);

        $r7 = new org.springframework.format.datetime.joda.DateTimeParser;

        specialinvoke $r7.<org.springframework.format.datetime.joda.DateTimeParser: void <init>(org.joda.time.format.DateTimeFormatter)>($r5);

        interfaceinvoke r0.<org.springframework.format.FormatterRegistry: void addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser)>(class "Lorg/joda/time/LocalTime;", $r6, $r7);

        $r8 = specialinvoke r1.<org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer: org.joda.time.format.DateTimeFormatter getJodaDateTimeFormatter()>();

        $r9 = new org.springframework.format.datetime.joda.DateTimeParser;

        specialinvoke $r9.<org.springframework.format.datetime.joda.DateTimeParser: void <init>(org.joda.time.format.DateTimeFormatter)>($r8);

        $r10 = new org.springframework.format.datetime.joda.ReadablePartialPrinter;

        specialinvoke $r10.<org.springframework.format.datetime.joda.ReadablePartialPrinter: void <init>(org.joda.time.format.DateTimeFormatter)>($r8);

        interfaceinvoke r0.<org.springframework.format.FormatterRegistry: void addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser)>(class "Lorg/joda/time/LocalDateTime;", $r10, $r9);

        $r11 = new org.springframework.format.datetime.joda.ReadableInstantPrinter;

        specialinvoke $r11.<org.springframework.format.datetime.joda.ReadableInstantPrinter: void <init>(org.joda.time.format.DateTimeFormatter)>($r8);

        interfaceinvoke r0.<org.springframework.format.FormatterRegistry: void addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser)>(class "Lorg/joda/time/ReadableInstant;", $r11, $r9);

        $r12 = new org.springframework.format.datetime.joda.JodaDateTimeFormatAnnotationFormatterFactory;

        specialinvoke $r12.<org.springframework.format.datetime.joda.JodaDateTimeFormatAnnotationFormatterFactory: void <init>()>();

        interfaceinvoke r0.<org.springframework.format.FormatterRegistry: void addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory)>($r12);

        return;
    }

    private org.joda.time.format.DateTimeFormatter getJodaDateFormatter()
    {
        org.joda.time.format.DateTimeFormatter $r2, $r8, $r9;
        java.lang.StringBuilder $r3, $r6;
        java.lang.String $r1, $r4, $r5, $r7;
        org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer r0;
        boolean $z0;

        r0 := @this: org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer;

        $z0 = r0.<org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer: boolean useIsoFormat>;

        if $z0 == 0 goto label1;

        $r9 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter date()>();

        return $r9;

     label1:
        $r1 = r0.<org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer: java.lang.String dateStyle>;

        if $r1 == null goto label2;

        $r3 = new java.lang.StringBuilder;

        $r4 = r0.<org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer: java.lang.String dateStyle>;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = staticinvoke <org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter forStyle(java.lang.String)>($r7);

        return $r8;

     label2:
        $r2 = staticinvoke <org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter shortDate()>();

        return $r2;
    }

    private org.joda.time.format.DateTimeFormatter getJodaTimeFormatter()
    {
        org.joda.time.format.DateTimeFormatter $r2, $r7, $r8;
        java.lang.StringBuilder $r3, $r5;
        java.lang.String $r1, $r4, $r6;
        org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer r0;
        boolean $z0;

        r0 := @this: org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer;

        $z0 = r0.<org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer: boolean useIsoFormat>;

        if $z0 == 0 goto label1;

        $r8 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter time()>();

        return $r8;

     label1:
        $r1 = r0.<org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer: java.lang.String timeStyle>;

        if $r1 == null goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("-");

        $r4 = r0.<org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer: java.lang.String timeStyle>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = staticinvoke <org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter forStyle(java.lang.String)>($r6);

        return $r7;

     label2:
        $r2 = staticinvoke <org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter shortTime()>();

        return $r2;
    }

    private org.joda.time.format.DateTimeFormatter getJodaDateTimeFormatter()
    {
        org.joda.time.format.DateTimeFormatter $r2, $r4, $r5;
        java.lang.String $r1, $r3;
        org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer r0;
        boolean $z0;

        r0 := @this: org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer;

        $z0 = r0.<org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer: boolean useIsoFormat>;

        if $z0 == 0 goto label1;

        $r5 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dateTime()>();

        return $r5;

     label1:
        $r1 = r0.<org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer: java.lang.String dateTimeStyle>;

        if $r1 == null goto label2;

        $r3 = r0.<org.springframework.format.datetime.joda.JodaTimeFormattingConfigurer: java.lang.String dateTimeStyle>;

        $r4 = staticinvoke <org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter forStyle(java.lang.String)>($r3);

        return $r4;

     label2:
        $r2 = staticinvoke <org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter shortDateTime()>();

        return $r2;
    }
}
