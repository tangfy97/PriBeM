public class org.apache.batik.dom.svg12.XBLOMShadowTreeElement extends org.apache.batik.dom.svg12.XBLOMElement implements org.apache.batik.dom.xbl.XBLShadowTreeElement, org.apache.batik.dom.svg.IdContainer
{

    protected void <init>()
    {
        org.apache.batik.dom.svg12.XBLOMShadowTreeElement r0;

        r0 := @this: org.apache.batik.dom.svg12.XBLOMShadowTreeElement;

        specialinvoke r0.<org.apache.batik.dom.svg12.XBLOMElement: void <init>()>();

        return;
    }

    public void <init>(java.lang.String, org.apache.batik.dom.AbstractDocument)
    {
        org.apache.batik.dom.AbstractDocument r2;
        org.apache.batik.dom.svg12.XBLOMShadowTreeElement r0;
        java.lang.String r1;

        r0 := @this: org.apache.batik.dom.svg12.XBLOMShadowTreeElement;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.batik.dom.AbstractDocument;

        specialinvoke r0.<org.apache.batik.dom.svg12.XBLOMElement: void <init>(java.lang.String,org.apache.batik.dom.AbstractDocument)>(r1, r2);

        return;
    }

    public java.lang.String getLocalName()
    {
        org.apache.batik.dom.svg12.XBLOMShadowTreeElement r0;

        r0 := @this: org.apache.batik.dom.svg12.XBLOMShadowTreeElement;

        return "shadowTree";
    }

    protected org.w3c.dom.Node newNode()
    {
        org.apache.batik.dom.svg12.XBLOMShadowTreeElement $r0, r1;

        r1 := @this: org.apache.batik.dom.svg12.XBLOMShadowTreeElement;

        $r0 = new org.apache.batik.dom.svg12.XBLOMShadowTreeElement;

        specialinvoke $r0.<org.apache.batik.dom.svg12.XBLOMShadowTreeElement: void <init>()>();

        return $r0;
    }

    public org.w3c.dom.Element getElementById(java.lang.String)
    {
        org.apache.batik.dom.svg12.XBLOMShadowTreeElement r0;
        java.lang.String r1;
        org.w3c.dom.Element $r2;

        r0 := @this: org.apache.batik.dom.svg12.XBLOMShadowTreeElement;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.batik.dom.svg12.XBLOMShadowTreeElement: org.w3c.dom.Element getElementById(java.lang.String,org.w3c.dom.Node)>(r1, r0);

        return $r2;
    }

    protected org.w3c.dom.Element getElementById(java.lang.String, org.w3c.dom.Node)
    {
        short $s0;
        org.apache.batik.dom.svg12.XBLOMShadowTreeElement r1;
        org.w3c.dom.Element $r3, $r5, r6;
        org.w3c.dom.Node r0, r7;
        java.lang.String r2, $r4;
        boolean $z0;

        r1 := @this: org.apache.batik.dom.svg12.XBLOMShadowTreeElement;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: org.w3c.dom.Node;

        $s0 = interfaceinvoke r0.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 != 1 goto label1;

        r6 = (org.w3c.dom.Element) r0;

        $r4 = interfaceinvoke r6.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "id");

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        $r5 = (org.w3c.dom.Element) r0;

        return $r5;

     label1:
        r7 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        goto label4;

     label2:
        $r3 = virtualinvoke r1.<org.apache.batik.dom.svg12.XBLOMShadowTreeElement: org.w3c.dom.Element getElementById(java.lang.String,org.w3c.dom.Node)>(r2, r7);

        if $r3 == null goto label3;

        return $r3;

     label3:
        r7 = interfaceinvoke r7.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

     label4:
        if r7 != null goto label2;

        return null;
    }

    public org.w3c.dom.Node getCSSParentNode()
    {
        org.apache.batik.dom.svg12.XBLOMShadowTreeElement r0;
        org.w3c.dom.Element $r3;
        org.apache.batik.dom.AbstractDocument $r1;
        org.apache.batik.dom.xbl.XBLManager $r2;

        r0 := @this: org.apache.batik.dom.svg12.XBLOMShadowTreeElement;

        $r1 = r0.<org.apache.batik.dom.AbstractNode: org.apache.batik.dom.AbstractDocument ownerDocument>;

        $r2 = virtualinvoke $r1.<org.apache.batik.dom.AbstractDocument: org.apache.batik.dom.xbl.XBLManager getXBLManager()>();

        $r3 = interfaceinvoke $r2.<org.apache.batik.dom.xbl.XBLManager: org.w3c.dom.Element getXblBoundElement(org.w3c.dom.Node)>(r0);

        return $r3;
    }
}
