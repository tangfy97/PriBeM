public class org.bouncycastle.asn1.x9.X9IntegerConverter extends java.lang.Object
{

    public void <init>()
    {
        org.bouncycastle.asn1.x9.X9IntegerConverter r0;

        r0 := @this: org.bouncycastle.asn1.x9.X9IntegerConverter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int getByteLength(org.bouncycastle.math.ec.ECCurve)
    {
        org.bouncycastle.math.ec.ECCurve r0;
        int $i0, $i1, $i2;
        org.bouncycastle.asn1.x9.X9IntegerConverter r1;

        r1 := @this: org.bouncycastle.asn1.x9.X9IntegerConverter;

        r0 := @parameter0: org.bouncycastle.math.ec.ECCurve;

        $i0 = virtualinvoke r0.<org.bouncycastle.math.ec.ECCurve: int getFieldSize()>();

        $i1 = $i0 + 7;

        $i2 = $i1 / 8;

        return $i2;
    }

    public int getByteLength(org.bouncycastle.math.ec.ECFieldElement)
    {
        org.bouncycastle.math.ec.ECFieldElement r0;
        int $i0, $i1, $i2;
        org.bouncycastle.asn1.x9.X9IntegerConverter r1;

        r1 := @this: org.bouncycastle.asn1.x9.X9IntegerConverter;

        r0 := @parameter0: org.bouncycastle.math.ec.ECFieldElement;

        $i0 = virtualinvoke r0.<org.bouncycastle.math.ec.ECFieldElement: int getFieldSize()>();

        $i1 = $i0 + 7;

        $i2 = $i1 / 8;

        return $i2;
    }

    public byte[] integerToBytes(java.math.BigInteger, int)
    {
        byte[] $r1, r3, r4;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.math.BigInteger r0;
        org.bouncycastle.asn1.x9.X9IntegerConverter r2;

        r2 := @this: org.bouncycastle.asn1.x9.X9IntegerConverter;

        r0 := @parameter0: java.math.BigInteger;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<java.math.BigInteger: byte[] toByteArray()>();

        $i1 = lengthof $r1;

        if i0 >= $i1 goto label1;

        r3 = newarray (byte)[i0];

        $i8 = lengthof $r1;

        $i7 = lengthof r3;

        $i10 = $i8 - $i7;

        $i9 = lengthof r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i10, r3, 0, $i9);

        return r3;

     label1:
        $i2 = lengthof $r1;

        if i0 <= $i2 goto label2;

        r4 = newarray (byte)[i0];

        $i4 = lengthof r4;

        $i3 = lengthof $r1;

        $i6 = $i4 - $i3;

        $i5 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, r4, $i6, $i5);

        return r4;

     label2:
        return $r1;
    }
}
