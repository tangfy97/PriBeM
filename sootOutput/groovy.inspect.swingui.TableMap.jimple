public class groovy.inspect.swingui.TableMap extends javax.swing.table.AbstractTableModel implements javax.swing.event.TableModelListener
{
    protected javax.swing.table.TableModel model;

    public void <init>()
    {
        groovy.inspect.swingui.TableMap r0;

        r0 := @this: groovy.inspect.swingui.TableMap;

        specialinvoke r0.<javax.swing.table.AbstractTableModel: void <init>()>();

        return;
    }

    public javax.swing.table.TableModel getModel()
    {
        groovy.inspect.swingui.TableMap r0;
        javax.swing.table.TableModel $r1;

        r0 := @this: groovy.inspect.swingui.TableMap;

        $r1 = r0.<groovy.inspect.swingui.TableMap: javax.swing.table.TableModel model>;

        return $r1;
    }

    public void setModel(javax.swing.table.TableModel)
    {
        groovy.inspect.swingui.TableMap r0;
        javax.swing.table.TableModel r1;

        r0 := @this: groovy.inspect.swingui.TableMap;

        r1 := @parameter0: javax.swing.table.TableModel;

        r0.<groovy.inspect.swingui.TableMap: javax.swing.table.TableModel model> = r1;

        interfaceinvoke r1.<javax.swing.table.TableModel: void addTableModelListener(javax.swing.event.TableModelListener)>(r0);

        return;
    }

    public java.lang.Object getValueAt(int, int)
    {
        groovy.inspect.swingui.TableMap r0;
        int i0, i1;
        java.lang.Object $r2;
        javax.swing.table.TableModel $r1;

        r0 := @this: groovy.inspect.swingui.TableMap;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<groovy.inspect.swingui.TableMap: javax.swing.table.TableModel model>;

        $r2 = interfaceinvoke $r1.<javax.swing.table.TableModel: java.lang.Object getValueAt(int,int)>(i0, i1);

        return $r2;
    }

    public void setValueAt(java.lang.Object, int, int)
    {
        groovy.inspect.swingui.TableMap r0;
        int i0, i1;
        java.lang.Object r1;
        javax.swing.table.TableModel $r2;

        r0 := @this: groovy.inspect.swingui.TableMap;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<groovy.inspect.swingui.TableMap: javax.swing.table.TableModel model>;

        interfaceinvoke $r2.<javax.swing.table.TableModel: void setValueAt(java.lang.Object,int,int)>(r1, i0, i1);

        return;
    }

    public int getRowCount()
    {
        groovy.inspect.swingui.TableMap r0;
        int $i0;
        javax.swing.table.TableModel $r1, $r2;

        r0 := @this: groovy.inspect.swingui.TableMap;

        $r1 = r0.<groovy.inspect.swingui.TableMap: javax.swing.table.TableModel model>;

        if $r1 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $r2 = r0.<groovy.inspect.swingui.TableMap: javax.swing.table.TableModel model>;

        $i0 = interfaceinvoke $r2.<javax.swing.table.TableModel: int getRowCount()>();

     label2:
        return $i0;
    }

    public int getColumnCount()
    {
        groovy.inspect.swingui.TableMap r0;
        int $i0;
        javax.swing.table.TableModel $r1, $r2;

        r0 := @this: groovy.inspect.swingui.TableMap;

        $r1 = r0.<groovy.inspect.swingui.TableMap: javax.swing.table.TableModel model>;

        if $r1 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $r2 = r0.<groovy.inspect.swingui.TableMap: javax.swing.table.TableModel model>;

        $i0 = interfaceinvoke $r2.<javax.swing.table.TableModel: int getColumnCount()>();

     label2:
        return $i0;
    }

    public java.lang.String getColumnName(int)
    {
        groovy.inspect.swingui.TableMap r0;
        int i0;
        java.lang.String $r2;
        javax.swing.table.TableModel $r1;

        r0 := @this: groovy.inspect.swingui.TableMap;

        i0 := @parameter0: int;

        $r1 = r0.<groovy.inspect.swingui.TableMap: javax.swing.table.TableModel model>;

        $r2 = interfaceinvoke $r1.<javax.swing.table.TableModel: java.lang.String getColumnName(int)>(i0);

        return $r2;
    }

    public java.lang.Class getColumnClass(int)
    {
        groovy.inspect.swingui.TableMap r0;
        int i0;
        java.lang.Class $r2;
        javax.swing.table.TableModel $r1;

        r0 := @this: groovy.inspect.swingui.TableMap;

        i0 := @parameter0: int;

        $r1 = r0.<groovy.inspect.swingui.TableMap: javax.swing.table.TableModel model>;

        $r2 = interfaceinvoke $r1.<javax.swing.table.TableModel: java.lang.Class getColumnClass(int)>(i0);

        return $r2;
    }

    public boolean isCellEditable(int, int)
    {
        groovy.inspect.swingui.TableMap r0;
        int i0, i1;
        javax.swing.table.TableModel $r1;
        boolean $z0;

        r0 := @this: groovy.inspect.swingui.TableMap;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<groovy.inspect.swingui.TableMap: javax.swing.table.TableModel model>;

        $z0 = interfaceinvoke $r1.<javax.swing.table.TableModel: boolean isCellEditable(int,int)>(i0, i1);

        return $z0;
    }

    public void tableChanged(javax.swing.event.TableModelEvent)
    {
        groovy.inspect.swingui.TableMap r0;
        javax.swing.event.TableModelEvent r1;

        r0 := @this: groovy.inspect.swingui.TableMap;

        r1 := @parameter0: javax.swing.event.TableModelEvent;

        virtualinvoke r0.<groovy.inspect.swingui.TableMap: void fireTableChanged(javax.swing.event.TableModelEvent)>(r1);

        return;
    }
}
