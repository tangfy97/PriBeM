public class com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder extends java.lang.Object implements com.googlecode.mp4parser.authoring.builder.Mp4Builder
{
    java.util.Set chunkOffsetBoxes;
    private static java.util.logging.Logger LOG;
    java.util.HashMap track2Sample;
    java.util.HashMap track2SampleSizes;
    private com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder intersectionFinder;
    static final boolean $assertionsDisabled;

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        java.lang.String $r2;
        java.util.logging.Logger $r3;
        boolean $z0, $z1;

        $r0 = class "Lcom/googlecode/mp4parser/authoring/builder/DefaultMp4Builder;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: boolean $assertionsDisabled> = $z1;

        $r1 = class "Lcom/googlecode/mp4parser/authoring/builder/DefaultMp4Builder;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r2);

        <com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.logging.Logger LOG> = $r3;

        return;
    }

    public void <init>()
    {
        java.util.HashSet $r1;
        java.util.HashMap $r2, $r3;
        com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder r0;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.Set chunkOffsetBoxes> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.HashMap track2Sample> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.HashMap track2SampleSizes> = $r3;

        return;
    }

    public void setIntersectionFinder(com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder)
    {
        com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder r0;
        com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder r1;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder;

        r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder intersectionFinder> = r1;

        return;
    }

    public com.coremedia.iso.boxes.Container build(com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder $r1;
        int[] $r20;
        com.googlecode.mp4parser.authoring.builder.TwoSecondIntersectionFinder $r33;
        boolean $z0, $z1, $z2, $z3;
        com.googlecode.mp4parser.authoring.Sample r12;
        java.util.Set $r28;
        java.util.logging.Logger $r3;
        java.util.List $r7, $r10, $r17, $r22;
        java.lang.StringBuilder $r2, $r5;
        com.googlecode.mp4parser.authoring.Track r34, r36;
        long $l2, $l3, $l4, $l6, $l7, l9;
        java.util.HashMap $r13, $r16;
        com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder$InterleaveChunkMdat $r27;
        com.coremedia.iso.boxes.MovieBox $r21;
        long[] $r26, $r32, r35;
        com.coremedia.iso.boxes.StaticChunkOffsetBox r31;
        int $i0, $i1, $i5, i8, i10;
        com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder r0;
        java.lang.String $r6;
        com.coremedia.iso.boxes.SampleSizeBox $r25;
        java.util.Iterator $r8, $r18, $r23, $r29;
        com.coremedia.iso.boxes.Box r37;
        com.coremedia.iso.boxes.FileTypeBox $r15;
        com.googlecode.mp4parser.BasicContainer $r14;
        com.googlecode.mp4parser.authoring.Movie r4;
        java.lang.Object $r9, $r11, $r19, $r24, $r30;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;

        r4 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        $r1 = r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder intersectionFinder>;

        if $r1 != null goto label01;

        $r33 = new com.googlecode.mp4parser.authoring.builder.TwoSecondIntersectionFinder;

        specialinvoke $r33.<com.googlecode.mp4parser.authoring.builder.TwoSecondIntersectionFinder: void <init>(com.googlecode.mp4parser.authoring.Movie,int)>(r4, 2);

        r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder intersectionFinder> = $r33;

     label01:
        $r3 = <com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.logging.Logger LOG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Creating movie ");

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.util.logging.Logger: void fine(java.lang.String)>($r6);

        $r7 = virtualinvoke r4.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

        goto label05;

     label02:
        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r34 = (com.googlecode.mp4parser.authoring.Track) $r9;

        $r10 = interfaceinvoke r34.<com.googlecode.mp4parser.authoring.Track: java.util.List getSamples()>();

        virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.List putSamples(com.googlecode.mp4parser.authoring.Track,java.util.List)>(r34, $r10);

        $i0 = interfaceinvoke $r10.<java.util.List: int size()>();

        r35 = newarray (long)[$i0];

        i8 = 0;

        goto label04;

     label03:
        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i8);

        r12 = (com.googlecode.mp4parser.authoring.Sample) $r11;

        $l2 = interfaceinvoke r12.<com.googlecode.mp4parser.authoring.Sample: long getSize()>();

        r35[i8] = $l2;

        i8 = i8 + 1;

     label04:
        $i1 = lengthof r35;

        if i8 < $i1 goto label03;

        $r13 = r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.HashMap track2SampleSizes>;

        virtualinvoke $r13.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r34, r35);

     label05:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label02;

        $r14 = new com.googlecode.mp4parser.BasicContainer;

        specialinvoke $r14.<com.googlecode.mp4parser.BasicContainer: void <init>()>();

        $r15 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: com.coremedia.iso.boxes.FileTypeBox createFileTypeBox(com.googlecode.mp4parser.authoring.Movie)>(r4);

        virtualinvoke $r14.<com.googlecode.mp4parser.BasicContainer: void addBox(com.coremedia.iso.boxes.Box)>($r15);

        $r16 = new java.util.HashMap;

        specialinvoke $r16.<java.util.HashMap: void <init>()>();

        $r17 = virtualinvoke r4.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        $r18 = interfaceinvoke $r17.<java.util.List: java.util.Iterator iterator()>();

        goto label07;

     label06:
        $r19 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        r36 = (com.googlecode.mp4parser.authoring.Track) $r19;

        $r20 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: int[] getChunkSizes(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Movie)>(r36, r4);

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r36, $r20);

     label07:
        $z1 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label06;

        $r21 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: com.coremedia.iso.boxes.MovieBox createMovieBox(com.googlecode.mp4parser.authoring.Movie,java.util.Map)>(r4, $r16);

        virtualinvoke $r14.<com.googlecode.mp4parser.BasicContainer: void addBox(com.coremedia.iso.boxes.Box)>($r21);

        $r22 = staticinvoke <com.googlecode.mp4parser.util.Path: java.util.List getPaths(com.coremedia.iso.boxes.Box,java.lang.String)>($r21, "trak/mdia/minf/stbl/stsz");

        l9 = 0L;

        $r23 = interfaceinvoke $r22.<java.util.List: java.util.Iterator iterator()>();

        goto label09;

     label08:
        $r24 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        r37 = (com.coremedia.iso.boxes.Box) $r24;

        $r25 = (com.coremedia.iso.boxes.SampleSizeBox) r37;

        $r26 = virtualinvoke $r25.<com.coremedia.iso.boxes.SampleSizeBox: long[] getSampleSizes()>();

        $l3 = staticinvoke <com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: long sum(long[])>($r26);

        l9 = l9 + $l3;

     label09:
        $z2 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label08;

        $r27 = new com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder$InterleaveChunkMdat;

        specialinvoke $r27.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder$InterleaveChunkMdat: void <init>(com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder,com.googlecode.mp4parser.authoring.Movie,java.util.Map,long,com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder$InterleaveChunkMdat)>(r0, r4, $r16, l9, null);

        virtualinvoke $r14.<com.googlecode.mp4parser.BasicContainer: void addBox(com.coremedia.iso.boxes.Box)>($r27);

        $l4 = virtualinvoke $r27.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder$InterleaveChunkMdat: long getDataOffset()>();

        $r28 = r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.Set chunkOffsetBoxes>;

        $r29 = interfaceinvoke $r28.<java.util.Set: java.util.Iterator iterator()>();

        goto label13;

     label10:
        $r30 = interfaceinvoke $r29.<java.util.Iterator: java.lang.Object next()>();

        r31 = (com.coremedia.iso.boxes.StaticChunkOffsetBox) $r30;

        $r32 = virtualinvoke r31.<com.coremedia.iso.boxes.StaticChunkOffsetBox: long[] getChunkOffsets()>();

        i10 = 0;

        goto label12;

     label11:
        $l6 = $r32[i10];

        $l7 = $l6 + $l4;

        $r32[i10] = $l7;

        i10 = i10 + 1;

     label12:
        $i5 = lengthof $r32;

        if i10 < $i5 goto label11;

     label13:
        $z3 = interfaceinvoke $r29.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label10;

        return $r14;
    }

    protected java.util.List putSamples(com.googlecode.mp4parser.authoring.Track, java.util.List)
    {
        com.googlecode.mp4parser.authoring.Track r1;
        java.util.List r2, $r5;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder r0;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r2 := @parameter1: java.util.List;

        $r3 = r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.HashMap track2Sample>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r5 = (java.util.List) $r4;

        return $r5;
    }

    protected com.coremedia.iso.boxes.FileTypeBox createFileTypeBox(com.googlecode.mp4parser.authoring.Movie)
    {
        com.coremedia.iso.boxes.FileTypeBox $r1;
        com.googlecode.mp4parser.authoring.Movie r3;
        com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder r2;
        java.util.LinkedList $r0;

        r2 := @this: com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;

        r3 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>("isom");

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>("iso2");

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>("avc1");

        $r1 = new com.coremedia.iso.boxes.FileTypeBox;

        specialinvoke $r1.<com.coremedia.iso.boxes.FileTypeBox: void <init>(java.lang.String,long,java.util.List)>("isom", 0L, $r0);

        return $r1;
    }

    protected com.coremedia.iso.boxes.MovieBox createMovieBox(com.googlecode.mp4parser.authoring.Movie, java.util.Map)
    {
        java.util.Date $r27, $r28;
        com.coremedia.iso.boxes.MovieHeaderBox $r26;
        byte $b4, $b6;
        com.googlecode.mp4parser.util.Matrix $r5;
        java.util.Map r19;
        boolean $z0, $z1, $z2;
        com.coremedia.iso.boxes.TrackBox $r20;
        java.util.List $r7, $r11, $r16;
        com.googlecode.mp4parser.authoring.Track r22, r23, r24;
        long $l0, $l1, $l2, $l3, $l5, $l7, l8, l9, l10, $l11;
        com.coremedia.iso.boxes.MovieBox $r25;
        int $i12, $i13;
        com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder r6;
        java.util.Iterator $r8, $r12, $r17;
        com.coremedia.iso.boxes.Box $r21;
        com.googlecode.mp4parser.authoring.Movie r4;
        java.lang.Object $r9, $r13, $r18;
        com.googlecode.mp4parser.authoring.TrackMetaData $r10, $r14, $r15;

        r6 := @this: com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;

        r4 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        r19 := @parameter1: java.util.Map;

        $r25 = new com.coremedia.iso.boxes.MovieBox;

        specialinvoke $r25.<com.coremedia.iso.boxes.MovieBox: void <init>()>();

        $r26 = new com.coremedia.iso.boxes.MovieHeaderBox;

        specialinvoke $r26.<com.coremedia.iso.boxes.MovieHeaderBox: void <init>()>();

        $r27 = new java.util.Date;

        specialinvoke $r27.<java.util.Date: void <init>()>();

        virtualinvoke $r26.<com.coremedia.iso.boxes.MovieHeaderBox: void setCreationTime(java.util.Date)>($r27);

        $r28 = new java.util.Date;

        specialinvoke $r28.<java.util.Date: void <init>()>();

        virtualinvoke $r26.<com.coremedia.iso.boxes.MovieHeaderBox: void setModificationTime(java.util.Date)>($r28);

        $r5 = virtualinvoke r4.<com.googlecode.mp4parser.authoring.Movie: com.googlecode.mp4parser.util.Matrix getMatrix()>();

        virtualinvoke $r26.<com.coremedia.iso.boxes.MovieHeaderBox: void setMatrix(com.googlecode.mp4parser.util.Matrix)>($r5);

        $l0 = virtualinvoke r6.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: long getTimescale(com.googlecode.mp4parser.authoring.Movie)>(r4);

        l8 = 0L;

        $r7 = virtualinvoke r4.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r22 = (com.googlecode.mp4parser.authoring.Track) $r9;

        $l1 = interfaceinvoke r22.<com.googlecode.mp4parser.authoring.Track: long getDuration()>();

        $l2 = $l1 * $l0;

        $r10 = interfaceinvoke r22.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l3 = virtualinvoke $r10.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        l9 = $l2 / $l3;

        $b4 = l9 cmp l8;

        $i12 = (int) $b4;

        if $i12 <= 0 goto label2;

        l8 = l9;

     label2:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        virtualinvoke $r26.<com.coremedia.iso.boxes.MovieHeaderBox: void setDuration(long)>(l8);

        virtualinvoke $r26.<com.coremedia.iso.boxes.MovieHeaderBox: void setTimescale(long)>($l0);

        l10 = 0L;

        $r11 = virtualinvoke r4.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        $r12 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

        goto label6;

     label3:
        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r23 = (com.googlecode.mp4parser.authoring.Track) $r13;

        $r14 = interfaceinvoke r23.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l5 = virtualinvoke $r14.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTrackId()>();

        $b6 = l10 cmp $l5;

        $i13 = (int) $b6;

        if $i13 >= 0 goto label4;

        $r15 = interfaceinvoke r23.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l11 = virtualinvoke $r15.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTrackId()>();

        goto label5;

     label4:
        $l11 = l10;

     label5:
        l10 = $l11;

     label6:
        $z2 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label3;

        $l7 = l10 + 1L;

        virtualinvoke $r26.<com.coremedia.iso.boxes.MovieHeaderBox: void setNextTrackId(long)>($l7);

        virtualinvoke $r25.<com.coremedia.iso.boxes.MovieBox: void addBox(com.coremedia.iso.boxes.Box)>($r26);

        $r16 = virtualinvoke r4.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        $r17 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();

        goto label8;

     label7:
        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r24 = (com.googlecode.mp4parser.authoring.Track) $r18;

        $r20 = virtualinvoke r6.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: com.coremedia.iso.boxes.TrackBox createTrackBox(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Movie,java.util.Map)>(r24, r4, r19);

        virtualinvoke $r25.<com.coremedia.iso.boxes.MovieBox: void addBox(com.coremedia.iso.boxes.Box)>($r20);

     label8:
        $z0 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label7;

        $r21 = virtualinvoke r6.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: com.coremedia.iso.boxes.Box createUdta(com.googlecode.mp4parser.authoring.Movie)>(r4);

        if $r21 == null goto label9;

        virtualinvoke $r25.<com.coremedia.iso.boxes.MovieBox: void addBox(com.coremedia.iso.boxes.Box)>($r21);

     label9:
        return $r25;
    }

    protected com.coremedia.iso.boxes.Box createUdta(com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.Movie r1;
        com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder r0;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        return null;
    }

    protected com.coremedia.iso.boxes.TrackBox createTrackBox(com.googlecode.mp4parser.authoring.Track, com.googlecode.mp4parser.authoring.Movie, java.util.Map)
    {
        com.coremedia.iso.boxes.MediaHeaderBox $r18;
        java.util.Date $r7, $r14, $r20;
        com.googlecode.mp4parser.util.Matrix $r4;
        java.util.Map r31;
        com.coremedia.iso.boxes.MediaInformationBox $r26;
        com.coremedia.iso.boxes.TrackBox $r0;
        float $f0;
        com.googlecode.mp4parser.authoring.Track r2;
        com.coremedia.iso.boxes.DataEntryUrlBox $r30;
        com.coremedia.iso.boxes.DataInformationBox $r28;
        long $l1, $l2, $l3, $l4, $l5, $l7, $l8, $l9;
        com.coremedia.iso.boxes.MediaBox $r17;
        int $i0, $i6;
        com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder r8;
        java.lang.String $r23, $r25;
        double $d0, $d1;
        com.coremedia.iso.boxes.Box $r27, $r32;
        com.coremedia.iso.boxes.DataReferenceBox $r29;
        com.coremedia.iso.boxes.TrackHeaderBox $r1;
        com.googlecode.mp4parser.authoring.Movie r9;
        com.coremedia.iso.boxes.HandlerBox $r24;
        com.googlecode.mp4parser.authoring.TrackMetaData $r3, $r5, $r6, $r10, $r11, $r12, $r13, $r15, $r16, $r19, $r21, $r22;

        r8 := @this: com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;

        r2 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r9 := @parameter1: com.googlecode.mp4parser.authoring.Movie;

        r31 := @parameter2: java.util.Map;

        $r0 = new com.coremedia.iso.boxes.TrackBox;

        specialinvoke $r0.<com.coremedia.iso.boxes.TrackBox: void <init>()>();

        $r1 = new com.coremedia.iso.boxes.TrackHeaderBox;

        specialinvoke $r1.<com.coremedia.iso.boxes.TrackHeaderBox: void <init>()>();

        virtualinvoke $r1.<com.coremedia.iso.boxes.TrackHeaderBox: void setEnabled(boolean)>(1);

        virtualinvoke $r1.<com.coremedia.iso.boxes.TrackHeaderBox: void setInMovie(boolean)>(1);

        virtualinvoke $r1.<com.coremedia.iso.boxes.TrackHeaderBox: void setInPreview(boolean)>(1);

        virtualinvoke $r1.<com.coremedia.iso.boxes.TrackHeaderBox: void setInPoster(boolean)>(1);

        $r3 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $r4 = virtualinvoke $r3.<com.googlecode.mp4parser.authoring.TrackMetaData: com.googlecode.mp4parser.util.Matrix getMatrix()>();

        virtualinvoke $r1.<com.coremedia.iso.boxes.TrackHeaderBox: void setMatrix(com.googlecode.mp4parser.util.Matrix)>($r4);

        $r5 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $i0 = virtualinvoke $r5.<com.googlecode.mp4parser.authoring.TrackMetaData: int getGroup()>();

        virtualinvoke $r1.<com.coremedia.iso.boxes.TrackHeaderBox: void setAlternateGroup(int)>($i0);

        $r6 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $r7 = virtualinvoke $r6.<com.googlecode.mp4parser.authoring.TrackMetaData: java.util.Date getCreationTime()>();

        virtualinvoke $r1.<com.coremedia.iso.boxes.TrackHeaderBox: void setCreationTime(java.util.Date)>($r7);

        $l1 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: long getDuration()>();

        $l2 = virtualinvoke r8.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: long getTimescale(com.googlecode.mp4parser.authoring.Movie)>(r9);

        $l3 = $l1 * $l2;

        $r10 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l4 = virtualinvoke $r10.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        $l5 = $l3 / $l4;

        virtualinvoke $r1.<com.coremedia.iso.boxes.TrackHeaderBox: void setDuration(long)>($l5);

        $r11 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $d0 = virtualinvoke $r11.<com.googlecode.mp4parser.authoring.TrackMetaData: double getHeight()>();

        virtualinvoke $r1.<com.coremedia.iso.boxes.TrackHeaderBox: void setHeight(double)>($d0);

        $r12 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $d1 = virtualinvoke $r12.<com.googlecode.mp4parser.authoring.TrackMetaData: double getWidth()>();

        virtualinvoke $r1.<com.coremedia.iso.boxes.TrackHeaderBox: void setWidth(double)>($d1);

        $r13 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $i6 = virtualinvoke $r13.<com.googlecode.mp4parser.authoring.TrackMetaData: int getLayer()>();

        virtualinvoke $r1.<com.coremedia.iso.boxes.TrackHeaderBox: void setLayer(int)>($i6);

        $r14 = new java.util.Date;

        specialinvoke $r14.<java.util.Date: void <init>()>();

        virtualinvoke $r1.<com.coremedia.iso.boxes.TrackHeaderBox: void setModificationTime(java.util.Date)>($r14);

        $r15 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l7 = virtualinvoke $r15.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTrackId()>();

        virtualinvoke $r1.<com.coremedia.iso.boxes.TrackHeaderBox: void setTrackId(long)>($l7);

        $r16 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $f0 = virtualinvoke $r16.<com.googlecode.mp4parser.authoring.TrackMetaData: float getVolume()>();

        virtualinvoke $r1.<com.coremedia.iso.boxes.TrackHeaderBox: void setVolume(float)>($f0);

        virtualinvoke $r0.<com.coremedia.iso.boxes.TrackBox: void addBox(com.coremedia.iso.boxes.Box)>($r1);

        $r17 = new com.coremedia.iso.boxes.MediaBox;

        specialinvoke $r17.<com.coremedia.iso.boxes.MediaBox: void <init>()>();

        virtualinvoke $r0.<com.coremedia.iso.boxes.TrackBox: void addBox(com.coremedia.iso.boxes.Box)>($r17);

        $r18 = new com.coremedia.iso.boxes.MediaHeaderBox;

        specialinvoke $r18.<com.coremedia.iso.boxes.MediaHeaderBox: void <init>()>();

        $r19 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $r20 = virtualinvoke $r19.<com.googlecode.mp4parser.authoring.TrackMetaData: java.util.Date getCreationTime()>();

        virtualinvoke $r18.<com.coremedia.iso.boxes.MediaHeaderBox: void setCreationTime(java.util.Date)>($r20);

        $l8 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: long getDuration()>();

        virtualinvoke $r18.<com.coremedia.iso.boxes.MediaHeaderBox: void setDuration(long)>($l8);

        $r21 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l9 = virtualinvoke $r21.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        virtualinvoke $r18.<com.coremedia.iso.boxes.MediaHeaderBox: void setTimescale(long)>($l9);

        $r22 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $r23 = virtualinvoke $r22.<com.googlecode.mp4parser.authoring.TrackMetaData: java.lang.String getLanguage()>();

        virtualinvoke $r18.<com.coremedia.iso.boxes.MediaHeaderBox: void setLanguage(java.lang.String)>($r23);

        virtualinvoke $r17.<com.coremedia.iso.boxes.MediaBox: void addBox(com.coremedia.iso.boxes.Box)>($r18);

        $r24 = new com.coremedia.iso.boxes.HandlerBox;

        specialinvoke $r24.<com.coremedia.iso.boxes.HandlerBox: void <init>()>();

        virtualinvoke $r17.<com.coremedia.iso.boxes.MediaBox: void addBox(com.coremedia.iso.boxes.Box)>($r24);

        $r25 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: java.lang.String getHandler()>();

        virtualinvoke $r24.<com.coremedia.iso.boxes.HandlerBox: void setHandlerType(java.lang.String)>($r25);

        $r26 = new com.coremedia.iso.boxes.MediaInformationBox;

        specialinvoke $r26.<com.coremedia.iso.boxes.MediaInformationBox: void <init>()>();

        $r27 = interfaceinvoke r2.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.Box getMediaHeaderBox()>();

        virtualinvoke $r26.<com.coremedia.iso.boxes.MediaInformationBox: void addBox(com.coremedia.iso.boxes.Box)>($r27);

        $r28 = new com.coremedia.iso.boxes.DataInformationBox;

        specialinvoke $r28.<com.coremedia.iso.boxes.DataInformationBox: void <init>()>();

        $r29 = new com.coremedia.iso.boxes.DataReferenceBox;

        specialinvoke $r29.<com.coremedia.iso.boxes.DataReferenceBox: void <init>()>();

        virtualinvoke $r28.<com.coremedia.iso.boxes.DataInformationBox: void addBox(com.coremedia.iso.boxes.Box)>($r29);

        $r30 = new com.coremedia.iso.boxes.DataEntryUrlBox;

        specialinvoke $r30.<com.coremedia.iso.boxes.DataEntryUrlBox: void <init>()>();

        virtualinvoke $r30.<com.coremedia.iso.boxes.DataEntryUrlBox: void setFlags(int)>(1);

        virtualinvoke $r29.<com.coremedia.iso.boxes.DataReferenceBox: void addBox(com.coremedia.iso.boxes.Box)>($r30);

        virtualinvoke $r26.<com.coremedia.iso.boxes.MediaInformationBox: void addBox(com.coremedia.iso.boxes.Box)>($r28);

        $r32 = virtualinvoke r8.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: com.coremedia.iso.boxes.Box createStbl(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Movie,java.util.Map)>(r2, r9, r31);

        virtualinvoke $r26.<com.coremedia.iso.boxes.MediaInformationBox: void addBox(com.coremedia.iso.boxes.Box)>($r32);

        virtualinvoke $r17.<com.coremedia.iso.boxes.MediaBox: void addBox(com.coremedia.iso.boxes.Box)>($r26);

        return $r0;
    }

    protected com.coremedia.iso.boxes.Box createStbl(com.googlecode.mp4parser.authoring.Track, com.googlecode.mp4parser.authoring.Movie, java.util.Map)
    {
        com.coremedia.iso.boxes.SampleTableBox $r0;
        com.googlecode.mp4parser.authoring.Track r2;
        java.util.Map r3;
        com.googlecode.mp4parser.authoring.Movie r4;
        com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder r1;

        r1 := @this: com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;

        r2 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r4 := @parameter1: com.googlecode.mp4parser.authoring.Movie;

        r3 := @parameter2: java.util.Map;

        $r0 = new com.coremedia.iso.boxes.SampleTableBox;

        specialinvoke $r0.<com.coremedia.iso.boxes.SampleTableBox: void <init>()>();

        virtualinvoke r1.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: void createStsd(com.googlecode.mp4parser.authoring.Track,com.coremedia.iso.boxes.SampleTableBox)>(r2, $r0);

        virtualinvoke r1.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: void createStts(com.googlecode.mp4parser.authoring.Track,com.coremedia.iso.boxes.SampleTableBox)>(r2, $r0);

        virtualinvoke r1.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: void createCtts(com.googlecode.mp4parser.authoring.Track,com.coremedia.iso.boxes.SampleTableBox)>(r2, $r0);

        virtualinvoke r1.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: void createStss(com.googlecode.mp4parser.authoring.Track,com.coremedia.iso.boxes.SampleTableBox)>(r2, $r0);

        virtualinvoke r1.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: void createSdtp(com.googlecode.mp4parser.authoring.Track,com.coremedia.iso.boxes.SampleTableBox)>(r2, $r0);

        virtualinvoke r1.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: void createStsc(com.googlecode.mp4parser.authoring.Track,java.util.Map,com.coremedia.iso.boxes.SampleTableBox)>(r2, r3, $r0);

        virtualinvoke r1.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: void createStsz(com.googlecode.mp4parser.authoring.Track,com.coremedia.iso.boxes.SampleTableBox)>(r2, $r0);

        virtualinvoke r1.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: void createStco(com.googlecode.mp4parser.authoring.Track,com.googlecode.mp4parser.authoring.Movie,java.util.Map,com.coremedia.iso.boxes.SampleTableBox)>(r2, r4, r3, $r0);

        return $r0;
    }

    protected void createStsd(com.googlecode.mp4parser.authoring.Track, com.coremedia.iso.boxes.SampleTableBox)
    {
        com.coremedia.iso.boxes.SampleTableBox r0;
        com.googlecode.mp4parser.authoring.Track r1;
        com.coremedia.iso.boxes.SampleDescriptionBox $r2;
        com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder r3;

        r3 := @this: com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r0 := @parameter1: com.coremedia.iso.boxes.SampleTableBox;

        $r2 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.coremedia.iso.boxes.SampleDescriptionBox getSampleDescriptionBox()>();

        virtualinvoke r0.<com.coremedia.iso.boxes.SampleTableBox: void addBox(com.coremedia.iso.boxes.Box)>($r2);

        return;
    }

    protected void createStco(com.googlecode.mp4parser.authoring.Track, com.googlecode.mp4parser.authoring.Movie, java.util.Map, com.coremedia.iso.boxes.SampleTableBox)
    {
        byte $b8;
        java.util.Map r0;
        java.util.Set $r6;
        java.lang.StringBuilder $r26, $r32, $r33, $r34, $r40, $r43, $r44, $r45;
        com.googlecode.mp4parser.authoring.Track r1, r16;
        long $l3, $l5, $l6, $l7, $l9, $l10, $l11, $l12, l13, l15;
        com.coremedia.iso.boxes.StaticChunkOffsetBox $r42;
        java.lang.String $r27, $r35, $r41;
        com.googlecode.mp4parser.authoring.TrackMetaData $r25, $r31, $r39;
        int[] r3, $r28;
        boolean $z0, $z1, $z2, $z3;
        com.coremedia.iso.boxes.SampleTableBox r36;
        java.util.logging.Logger $r9, $r11, $r18, $r24, $r30, $r38;
        java.util.List $r13;
        java.util.HashMap $r20;
        java.util.logging.Level $r8, $r10, $r17;
        long[] r7, $r22;
        int $i0, $i1, $i2, $i4, i14, i16, i17, $i18;
        com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder r5;
        java.util.Iterator $r14;
        com.googlecode.mp4parser.authoring.Movie r12;
        java.lang.Object $r2, $r15, $r19, $r21;

        r5 := @this: com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r12 := @parameter1: com.googlecode.mp4parser.authoring.Movie;

        r0 := @parameter2: java.util.Map;

        r36 := @parameter3: com.coremedia.iso.boxes.SampleTableBox;

        $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (int[]) $r2;

        $r42 = new com.coremedia.iso.boxes.StaticChunkOffsetBox;

        specialinvoke $r42.<com.coremedia.iso.boxes.StaticChunkOffsetBox: void <init>()>();

        $r6 = r5.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.Set chunkOffsetBoxes>;

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r42);

        l13 = 0L;

        $i0 = lengthof r3;

        r7 = newarray (long)[$i0];

        $r9 = <com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.logging.Logger LOG>;

        $r8 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r9.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r8);

        if $z0 == 0 goto label01;

        $r38 = <com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.logging.Logger LOG>;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>(java.lang.String)>("Calculating chunk offsets for track_");

        $r39 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l12 = virtualinvoke $r39.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTrackId()>();

        $r40 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l12);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r38.<java.util.logging.Logger: void fine(java.lang.String)>($r41);

     label01:
        i14 = 0;

        goto label12;

     label02:
        $r11 = <com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.logging.Logger LOG>;

        $r10 = <java.util.logging.Level: java.util.logging.Level FINER>;

        $z1 = virtualinvoke $r11.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r10);

        if $z1 == 0 goto label03;

        $r30 = <com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.logging.Logger LOG>;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>(java.lang.String)>("Calculating chunk offsets for track_");

        $r31 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l11 = virtualinvoke $r31.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTrackId()>();

        $r32 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l11);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" chunk ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i14);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r30.<java.util.logging.Logger: void finer(java.lang.String)>($r35);

     label03:
        $r13 = virtualinvoke r12.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        $r14 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

        goto label11;

     label04:
        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r16 = (com.googlecode.mp4parser.authoring.Track) $r15;

        $r18 = <com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.logging.Logger LOG>;

        $r17 = <java.util.logging.Level: java.util.logging.Level FINEST>;

        $z3 = virtualinvoke $r18.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r17);

        if $z3 == 0 goto label05;

        $r24 = <com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.logging.Logger LOG>;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>(java.lang.String)>("Adding offsets of track_");

        $r25 = interfaceinvoke r16.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l10 = virtualinvoke $r25.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTrackId()>();

        $r26 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l10);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.util.logging.Logger: void finest(java.lang.String)>($r27);

     label05:
        $r19 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r16);

        $r28 = (int[]) $r19;

        l15 = 0L;

        i16 = 0;

        goto label07;

     label06:
        $i2 = $r28[i16];

        $l3 = (long) $i2;

        l15 = l15 + $l3;

        i16 = i16 + 1;

     label07:
        if i16 < i14 goto label06;

        if r16 != r1 goto label08;

        r7[i14] = l13;

     label08:
        i17 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>(l15);

        goto label10;

     label09:
        $r20 = r5.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.HashMap track2SampleSizes>;

        $r21 = virtualinvoke $r20.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r16);

        $r22 = (long[]) $r21;

        $l9 = $r22[i17];

        l13 = l13 + $l9;

        i17 = i17 + 1;

     label10:
        $l7 = (long) i17;

        $i4 = $r28[i14];

        $l5 = (long) $i4;

        $l6 = l15 + $l5;

        $b8 = $l7 cmp $l6;

        $i18 = (int) $b8;

        if $i18 < 0 goto label09;

     label11:
        $z2 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label04;

        i14 = i14 + 1;

     label12:
        $i1 = lengthof r3;

        if i14 < $i1 goto label02;

        virtualinvoke $r42.<com.coremedia.iso.boxes.StaticChunkOffsetBox: void setChunkOffsets(long[])>(r7);

        virtualinvoke r36.<com.coremedia.iso.boxes.SampleTableBox: void addBox(com.coremedia.iso.boxes.Box)>($r42);

        return;
    }

    protected void createStsz(com.googlecode.mp4parser.authoring.Track, com.coremedia.iso.boxes.SampleTableBox)
    {
        com.googlecode.mp4parser.authoring.Track r2;
        com.coremedia.iso.boxes.SampleTableBox r6;
        com.coremedia.iso.boxes.SampleSizeBox $r0;
        long[] $r5;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder r1;

        r1 := @this: com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;

        r2 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r6 := @parameter1: com.coremedia.iso.boxes.SampleTableBox;

        $r0 = new com.coremedia.iso.boxes.SampleSizeBox;

        specialinvoke $r0.<com.coremedia.iso.boxes.SampleSizeBox: void <init>()>();

        $r3 = r1.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.HashMap track2SampleSizes>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        $r5 = (long[]) $r4;

        virtualinvoke $r0.<com.coremedia.iso.boxes.SampleSizeBox: void setSampleSizes(long[])>($r5);

        virtualinvoke r6.<com.coremedia.iso.boxes.SampleTableBox: void addBox(com.coremedia.iso.boxes.Box)>($r0);

        return;
    }

    protected void createStsc(com.googlecode.mp4parser.authoring.Track, java.util.Map, com.coremedia.iso.boxes.SampleTableBox)
    {
        com.googlecode.mp4parser.authoring.Track r1;
        com.coremedia.iso.boxes.SampleToChunkBox $r4;
        long $l1, $l5, $l6, l8;
        byte $b2;
        int[] r3;
        java.util.Map r0;
        int $i0, $i3, $i4, $i7, i9, $i10;
        com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder r9;
        java.util.LinkedList $r5;
        com.coremedia.iso.boxes.SampleTableBox r8;
        java.util.List $r6;
        java.lang.Object $r2;
        com.coremedia.iso.boxes.SampleToChunkBox$Entry $r7;

        r9 := @this: com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r0 := @parameter1: java.util.Map;

        r8 := @parameter2: com.coremedia.iso.boxes.SampleTableBox;

        $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (int[]) $r2;

        $r4 = new com.coremedia.iso.boxes.SampleToChunkBox;

        specialinvoke $r4.<com.coremedia.iso.boxes.SampleToChunkBox: void <init>()>();

        $r5 = new java.util.LinkedList;

        specialinvoke $r5.<java.util.LinkedList: void <init>()>();

        virtualinvoke $r4.<com.coremedia.iso.boxes.SampleToChunkBox: void setEntries(java.util.List)>($r5);

        l8 = -2147483648L;

        i9 = 0;

        goto label3;

     label1:
        $i0 = r3[i9];

        $l1 = (long) $i0;

        $b2 = l8 cmp $l1;

        if $b2 == 0 goto label2;

        $r6 = virtualinvoke $r4.<com.coremedia.iso.boxes.SampleToChunkBox: java.util.List getEntries()>();

        $r7 = new com.coremedia.iso.boxes.SampleToChunkBox$Entry;

        $i3 = i9 + 1;

        $l6 = (long) $i3;

        $i4 = r3[i9];

        $l5 = (long) $i4;

        specialinvoke $r7.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: void <init>(long,long,long)>($l6, $l5, 1L);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r7);

        $i7 = r3[i9];

        l8 = (long) $i7;

     label2:
        i9 = i9 + 1;

     label3:
        $i10 = lengthof r3;

        if i9 < $i10 goto label1;

        virtualinvoke r8.<com.coremedia.iso.boxes.SampleTableBox: void addBox(com.coremedia.iso.boxes.Box)>($r4);

        return;
    }

    protected void createSdtp(com.googlecode.mp4parser.authoring.Track, com.coremedia.iso.boxes.SampleTableBox)
    {
        com.googlecode.mp4parser.authoring.Track r0;
        com.coremedia.iso.boxes.SampleTableBox r5;
        java.util.List $r1, $r2, $r4;
        com.coremedia.iso.boxes.SampleDependencyTypeBox $r3;
        com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder r6;
        boolean $z0;

        r6 := @this: com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;

        r0 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r5 := @parameter1: com.coremedia.iso.boxes.SampleTableBox;

        $r1 = interfaceinvoke r0.<com.googlecode.mp4parser.authoring.Track: java.util.List getSampleDependencies()>();

        if $r1 == null goto label1;

        $r2 = interfaceinvoke r0.<com.googlecode.mp4parser.authoring.Track: java.util.List getSampleDependencies()>();

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r3 = new com.coremedia.iso.boxes.SampleDependencyTypeBox;

        specialinvoke $r3.<com.coremedia.iso.boxes.SampleDependencyTypeBox: void <init>()>();

        $r4 = interfaceinvoke r0.<com.googlecode.mp4parser.authoring.Track: java.util.List getSampleDependencies()>();

        virtualinvoke $r3.<com.coremedia.iso.boxes.SampleDependencyTypeBox: void setEntries(java.util.List)>($r4);

        virtualinvoke r5.<com.coremedia.iso.boxes.SampleTableBox: void addBox(com.coremedia.iso.boxes.Box)>($r3);

     label1:
        return;
    }

    protected void createStss(com.googlecode.mp4parser.authoring.Track, com.coremedia.iso.boxes.SampleTableBox)
    {
        com.googlecode.mp4parser.authoring.Track r0;
        com.coremedia.iso.boxes.SampleTableBox r3;
        long[] $r1;
        int $i0;
        com.coremedia.iso.boxes.SyncSampleBox $r2;
        com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder r4;

        r4 := @this: com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;

        r0 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r3 := @parameter1: com.coremedia.iso.boxes.SampleTableBox;

        $r1 = interfaceinvoke r0.<com.googlecode.mp4parser.authoring.Track: long[] getSyncSamples()>();

        if $r1 == null goto label1;

        $i0 = lengthof $r1;

        if $i0 <= 0 goto label1;

        $r2 = new com.coremedia.iso.boxes.SyncSampleBox;

        specialinvoke $r2.<com.coremedia.iso.boxes.SyncSampleBox: void <init>()>();

        virtualinvoke $r2.<com.coremedia.iso.boxes.SyncSampleBox: void setSampleNumber(long[])>($r1);

        virtualinvoke r3.<com.coremedia.iso.boxes.SampleTableBox: void addBox(com.coremedia.iso.boxes.Box)>($r2);

     label1:
        return;
    }

    protected void createCtts(com.googlecode.mp4parser.authoring.Track, com.coremedia.iso.boxes.SampleTableBox)
    {
        com.googlecode.mp4parser.authoring.Track r0;
        com.coremedia.iso.boxes.SampleTableBox r3;
        java.util.List $r1;
        com.coremedia.iso.boxes.CompositionTimeToSample $r2;
        com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder r4;
        boolean $z0;

        r4 := @this: com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;

        r0 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r3 := @parameter1: com.coremedia.iso.boxes.SampleTableBox;

        $r1 = interfaceinvoke r0.<com.googlecode.mp4parser.authoring.Track: java.util.List getCompositionTimeEntries()>();

        if $r1 == null goto label1;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r2 = new com.coremedia.iso.boxes.CompositionTimeToSample;

        specialinvoke $r2.<com.coremedia.iso.boxes.CompositionTimeToSample: void <init>()>();

        virtualinvoke $r2.<com.coremedia.iso.boxes.CompositionTimeToSample: void setEntries(java.util.List)>($r1);

        virtualinvoke r3.<com.coremedia.iso.boxes.SampleTableBox: void addBox(com.coremedia.iso.boxes.Box)>($r2);

     label1:
        return;
    }

    protected void createStts(com.googlecode.mp4parser.authoring.Track, com.coremedia.iso.boxes.SampleTableBox)
    {
        com.googlecode.mp4parser.authoring.Track r1;
        com.coremedia.iso.boxes.SampleTableBox r5;
        com.coremedia.iso.boxes.TimeToSampleBox $r4;
        long $l1, $l3, $l4, l6;
        java.util.ArrayList $r0;
        long[] $r2;
        byte $b2;
        int i0, i5;
        com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder r6;
        com.coremedia.iso.boxes.TimeToSampleBox$Entry $r3, r7;

        r6 := @this: com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r5 := @parameter1: com.coremedia.iso.boxes.SampleTableBox;

        r7 = null;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: long[] getSampleDurations()>();

        i0 = lengthof $r2;

        i5 = 0;

        goto label4;

     label1:
        l6 = $r2[i5];

        if r7 == null goto label2;

        $l1 = virtualinvoke r7.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getDelta()>();

        $b2 = $l1 cmp l6;

        if $b2 != 0 goto label2;

        $l3 = virtualinvoke r7.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: long getCount()>();

        $l4 = $l3 + 1L;

        virtualinvoke r7.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: void setCount(long)>($l4);

        goto label3;

     label2:
        $r3 = new com.coremedia.iso.boxes.TimeToSampleBox$Entry;

        specialinvoke $r3.<com.coremedia.iso.boxes.TimeToSampleBox$Entry: void <init>(long,long)>(1L, l6);

        r7 = $r3;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r3);

     label3:
        i5 = i5 + 1;

     label4:
        if i5 < i0 goto label1;

        $r4 = new com.coremedia.iso.boxes.TimeToSampleBox;

        specialinvoke $r4.<com.coremedia.iso.boxes.TimeToSampleBox: void <init>()>();

        virtualinvoke $r4.<com.coremedia.iso.boxes.TimeToSampleBox: void setEntries(java.util.List)>($r0);

        virtualinvoke r5.<com.coremedia.iso.boxes.SampleTableBox: void addBox(com.coremedia.iso.boxes.Box)>($r4);

        return;
    }

    int[] getChunkSizes(com.googlecode.mp4parser.authoring.Track, com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.Track r1;
        long $l1, l2, $l6, $l7, $l11, $l12, l15;
        java.util.HashMap $r6;
        java.lang.AssertionError $r9;
        long[] $r3;
        byte $b13;
        com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder $r2;
        int[] r4;
        int $i0, $i3, $i4, $i5, $i8, $i9, $i10, i14, $i16;
        com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder r0;
        boolean $z0;
        java.util.List $r5, $r8;
        com.googlecode.mp4parser.authoring.Movie r10;
        java.lang.Object $r7;

        r0 := @this: com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;

        r1 := @parameter0: com.googlecode.mp4parser.authoring.Track;

        r10 := @parameter1: com.googlecode.mp4parser.authoring.Movie;

        $r2 = r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder intersectionFinder>;

        $r3 = interfaceinvoke $r2.<com.googlecode.mp4parser.authoring.builder.FragmentIntersectionFinder: long[] sampleNumbers(com.googlecode.mp4parser.authoring.Track)>(r1);

        $i0 = lengthof $r3;

        r4 = newarray (int)[$i0];

        i14 = 0;

        goto label4;

     label1:
        $l1 = $r3[i14];

        l2 = $l1 - 1L;

        $i4 = lengthof $r3;

        $i3 = i14 + 1;

        if $i4 != $i3 goto label2;

        $r5 = interfaceinvoke r1.<com.googlecode.mp4parser.authoring.Track: java.util.List getSamples()>();

        $i9 = interfaceinvoke $r5.<java.util.List: int size()>();

        l15 = (long) $i9;

        goto label3;

     label2:
        $i5 = i14 + 1;

        $l6 = $r3[$i5];

        l15 = $l6 - 1L;

     label3:
        $l7 = l15 - l2;

        $i8 = staticinvoke <com.googlecode.mp4parser.util.CastUtils: int l2i(long)>($l7);

        r4[i14] = $i8;

        i14 = i14 + 1;

     label4:
        $i16 = lengthof $r3;

        if i14 < $i16 goto label1;

        $z0 = <com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: boolean $assertionsDisabled>;

        if $z0 != 0 goto label5;

        $r6 = r0.<com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: java.util.HashMap track2Sample>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r8 = (java.util.List) $r7;

        $i10 = interfaceinvoke $r8.<java.util.List: int size()>();

        $l11 = (long) $i10;

        $l12 = staticinvoke <com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: long sum(int[])>(r4);

        $b13 = $l11 cmp $l12;

        if $b13 == 0 goto label5;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>("The number of samples and the sum of all chunk lengths must be equal");

        throw $r9;

     label5:
        return r4;
    }

    private static long sum(int[])
    {
        int[] r0;
        int i0, $i1, i4;
        long l2, l3;

        r0 := @parameter0: int[];

        l3 = 0L;

        i0 = lengthof r0;

        i4 = 0;

        goto label2;

     label1:
        $i1 = r0[i4];

        l2 = (long) $i1;

        l3 = l3 + l2;

        i4 = i4 + 1;

     label2:
        if i4 < i0 goto label1;

        return l3;
    }

    private static long sum(long[])
    {
        long[] r0;
        int i0, i3;
        long l1, l2;

        r0 := @parameter0: long[];

        l2 = 0L;

        i0 = lengthof r0;

        i3 = 0;

        goto label2;

     label1:
        l1 = r0[i3];

        l2 = l2 + l1;

        i3 = i3 + 1;

     label2:
        if i3 < i0 goto label1;

        return l2;
    }

    public long getTimescale(com.googlecode.mp4parser.authoring.Movie)
    {
        com.googlecode.mp4parser.authoring.Track $r4, r9;
        java.util.Iterator $r2, $r7;
        long $l0, l1;
        java.util.List $r1, $r6;
        com.googlecode.mp4parser.authoring.Movie r0;
        java.lang.Object $r3, $r8;
        com.googlecode.mp4parser.authoring.TrackMetaData $r5, $r10;
        com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder r11;
        boolean $z0;

        r11 := @this: com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;

        r0 := @parameter0: com.googlecode.mp4parser.authoring.Movie;

        $r1 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.googlecode.mp4parser.authoring.Track) $r3;

        $r5 = interfaceinvoke $r4.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        l1 = virtualinvoke $r5.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        $r6 = virtualinvoke r0.<com.googlecode.mp4parser.authoring.Movie: java.util.List getTracks()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (com.googlecode.mp4parser.authoring.Track) $r8;

        $r10 = interfaceinvoke r9.<com.googlecode.mp4parser.authoring.Track: com.googlecode.mp4parser.authoring.TrackMetaData getTrackMetaData()>();

        $l0 = virtualinvoke $r10.<com.googlecode.mp4parser.authoring.TrackMetaData: long getTimescale()>();

        l1 = staticinvoke <com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: long gcd(long,long)>($l0, l1);

     label2:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return l1;
    }

    public static long gcd(long, long)
    {
        byte $b1;
        long l0, l2, $l3, $l4;

        l2 := @parameter0: long;

        l0 := @parameter1: long;

        $b1 = l0 cmp 0L;

        if $b1 != 0 goto label1;

        return l2;

     label1:
        $l3 = l2 % l0;

        $l4 = staticinvoke <com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder: long gcd(long,long)>(l0, $l3);

        return $l4;
    }
}
