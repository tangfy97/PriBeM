public class ucar.nc2.ncml.Aggregation$Dataset extends java.lang.Object implements java.lang.Comparable
{
    protected final java.lang.String location;
    protected java.lang.String id;
    protected java.lang.String cacheLocation;
    protected ucar.nc2.util.cache.FileFactory reader;
    protected java.util.Set enhance;
    protected java.lang.Object extraInfo;
    final ucar.nc2.ncml.Aggregation this$0;

    protected void <init>(ucar.nc2.ncml.Aggregation, java.lang.String)
    {
        ucar.nc2.ncml.Aggregation$Dataset r0;
        ucar.nc2.ncml.Aggregation r1;
        java.lang.String r2, $r3;

        r0 := @this: ucar.nc2.ncml.Aggregation$Dataset;

        r1 := @parameter0: ucar.nc2.ncml.Aggregation;

        r2 := @parameter1: java.lang.String;

        r0.<ucar.nc2.ncml.Aggregation$Dataset: ucar.nc2.ncml.Aggregation this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r2 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = staticinvoke <ucar.unidata.util.StringUtil: java.lang.String substitute(java.lang.String,java.lang.String,java.lang.String)>(r2, "\\", "/");

     label2:
        r0.<ucar.nc2.ncml.Aggregation$Dataset: java.lang.String location> = $r3;

        return;
    }

    protected void <init>(ucar.nc2.ncml.Aggregation, thredds.inventory.MFile)
    {
        ucar.nc2.ncml.Aggregation$Dataset r0;
        thredds.inventory.MFile r2;
        ucar.nc2.ncml.Aggregation r1;
        java.util.Set $r6;
        java.lang.Object $r5;
        java.lang.String $r3, $r4;

        r0 := @this: ucar.nc2.ncml.Aggregation$Dataset;

        r1 := @parameter0: ucar.nc2.ncml.Aggregation;

        r2 := @parameter1: thredds.inventory.MFile;

        $r3 = interfaceinvoke r2.<thredds.inventory.MFile: java.lang.String getPath()>();

        specialinvoke r0.<ucar.nc2.ncml.Aggregation$Dataset: void <init>(ucar.nc2.ncml.Aggregation,java.lang.String)>(r1, $r3);

        $r4 = r0.<ucar.nc2.ncml.Aggregation$Dataset: java.lang.String location>;

        r0.<ucar.nc2.ncml.Aggregation$Dataset: java.lang.String cacheLocation> = $r4;

        $r5 = interfaceinvoke r2.<thredds.inventory.MFile: java.lang.Object getAuxInfo()>();

        $r6 = (java.util.Set) $r5;

        r0.<ucar.nc2.ncml.Aggregation$Dataset: java.util.Set enhance> = $r6;

        return;
    }

    protected void <init>(ucar.nc2.ncml.Aggregation, java.lang.String, java.lang.String, java.lang.String, java.util.EnumSet, ucar.nc2.util.cache.FileFactory)
    {
        ucar.nc2.ncml.Aggregation$Dataset r0;
        ucar.nc2.ncml.Aggregation r1;
        java.lang.String r2, r3, r4;
        ucar.nc2.util.cache.FileFactory r5;
        java.util.EnumSet r6;

        r0 := @this: ucar.nc2.ncml.Aggregation$Dataset;

        r1 := @parameter0: ucar.nc2.ncml.Aggregation;

        r3 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r6 := @parameter4: java.util.EnumSet;

        r5 := @parameter5: ucar.nc2.util.cache.FileFactory;

        specialinvoke r0.<ucar.nc2.ncml.Aggregation$Dataset: void <init>(ucar.nc2.ncml.Aggregation,java.lang.String)>(r1, r2);

        r0.<ucar.nc2.ncml.Aggregation$Dataset: java.lang.String cacheLocation> = r3;

        r0.<ucar.nc2.ncml.Aggregation$Dataset: java.lang.String id> = r4;

        r0.<ucar.nc2.ncml.Aggregation$Dataset: ucar.nc2.util.cache.FileFactory reader> = r5;

        return;
    }

    public java.lang.String getLocation()
    {
        ucar.nc2.ncml.Aggregation$Dataset r0;
        java.lang.String $r1;

        r0 := @this: ucar.nc2.ncml.Aggregation$Dataset;

        $r1 = r0.<ucar.nc2.ncml.Aggregation$Dataset: java.lang.String location>;

        return $r1;
    }

    public java.lang.String getCacheLocation()
    {
        ucar.nc2.ncml.Aggregation$Dataset r0;
        java.lang.String $r1;

        r0 := @this: ucar.nc2.ncml.Aggregation$Dataset;

        $r1 = r0.<ucar.nc2.ncml.Aggregation$Dataset: java.lang.String cacheLocation>;

        return $r1;
    }

    public java.lang.String getId()
    {
        ucar.nc2.ncml.Aggregation$Dataset r0;
        int $i0;
        java.lang.String $r1, $r2, $r3, $r4, $r5;

        r0 := @this: ucar.nc2.ncml.Aggregation$Dataset;

        $r1 = r0.<ucar.nc2.ncml.Aggregation$Dataset: java.lang.String id>;

        if $r1 == null goto label1;

        $r5 = r0.<ucar.nc2.ncml.Aggregation$Dataset: java.lang.String id>;

        return $r5;

     label1:
        $r2 = r0.<ucar.nc2.ncml.Aggregation$Dataset: java.lang.String location>;

        if $r2 == null goto label2;

        $r4 = r0.<ucar.nc2.ncml.Aggregation$Dataset: java.lang.String location>;

        return $r4;

     label2:
        $i0 = virtualinvoke r0.<ucar.nc2.ncml.Aggregation$Dataset: int hashCode()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        return $r3;
    }

    public ucar.nc2.NetcdfFile acquireFile(ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.ncml.Aggregation$Dataset r0;
        ucar.nc2.util.CancelTask r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Set $r9, $r18, $r20, $r29;
        java.lang.StringBuilder $r12, $r14, $r15, $r16, $r23, $r25, $r26, $r27, $r34, $r36, $r40, $r41, $r43;
        ucar.nc2.NetcdfFile $r6, r38;
        ucar.nc2.util.cache.FileFactory $r5;
        ucar.nc2.ncml.Aggregation $r2, $r7, $r30;
        long $l0, $l1, $l2, $l3, $l4;
        int $i6;
        java.lang.String $r4, $r13, $r17, $r24, $r28, $r35, $r37;
        java.io.PrintStream $r11, $r22, $r33;
        java.lang.Object $r3;
        org.jdom.Element $r8, $r31;
        ucar.nc2.dataset.NetcdfDataset r39, $r42;

        r0 := @this: ucar.nc2.ncml.Aggregation$Dataset;

        r1 := @parameter0: ucar.nc2.util.CancelTask;

        $z0 = <ucar.nc2.ncml.Aggregation: boolean debugOpenFile>;

        if $z0 == 0 goto label1;

        $r33 = <java.lang.System: java.io.PrintStream out>;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" try to acquire ");

        $r35 = r0.<ucar.nc2.ncml.Aggregation$Dataset: java.lang.String cacheLocation>;

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>($r37);

     label1:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r5 = r0.<ucar.nc2.ncml.Aggregation$Dataset: ucar.nc2.util.cache.FileFactory reader>;

        $r4 = r0.<ucar.nc2.ncml.Aggregation$Dataset: java.lang.String cacheLocation>;

        $r2 = r0.<ucar.nc2.ncml.Aggregation$Dataset: ucar.nc2.ncml.Aggregation this$0>;

        $r3 = $r2.<ucar.nc2.ncml.Aggregation: java.lang.Object spiObject>;

        $i6 = (int) -1;

        $r6 = staticinvoke <ucar.nc2.dataset.NetcdfDataset: ucar.nc2.NetcdfFile acquireFile(ucar.nc2.util.cache.FileFactory,java.lang.Object,java.lang.String,int,ucar.nc2.util.CancelTask,java.lang.Object)>($r5, null, $r4, $i6, r1, $r3);

        r38 = $r6;

        $r7 = r0.<ucar.nc2.ncml.Aggregation$Dataset: ucar.nc2.ncml.Aggregation this$0>;

        $r8 = staticinvoke <ucar.nc2.ncml.Aggregation: org.jdom.Element access$000(ucar.nc2.ncml.Aggregation)>($r7);

        if $r8 == null goto label2;

        $r30 = r0.<ucar.nc2.ncml.Aggregation$Dataset: ucar.nc2.ncml.Aggregation this$0>;

        $r31 = staticinvoke <ucar.nc2.ncml.Aggregation: org.jdom.Element access$000(ucar.nc2.ncml.Aggregation)>($r30);

        r38 = staticinvoke <ucar.nc2.ncml.NcMLReader: ucar.nc2.dataset.NetcdfDataset mergeNcML(ucar.nc2.NetcdfFile,org.jdom.Element)>($r6, $r31);

     label2:
        $r9 = r0.<ucar.nc2.ncml.Aggregation$Dataset: java.util.Set enhance>;

        if $r9 == null goto label3;

        $r18 = r0.<ucar.nc2.ncml.Aggregation$Dataset: java.util.Set enhance>;

        $z2 = interfaceinvoke $r18.<java.util.Set: boolean isEmpty()>();

        if $z2 == 0 goto label5;

     label3:
        $z1 = <ucar.nc2.ncml.Aggregation: boolean debugOpenFile>;

        if $z1 == 0 goto label4;

        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" acquire (no enhance) ");

        $r13 = r0.<ucar.nc2.ncml.Aggregation$Dataset: java.lang.String cacheLocation>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" took ");

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = $l1 - $l0;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r17);

     label4:
        return r38;

     label5:
        $z3 = r38 instanceof ucar.nc2.dataset.NetcdfDataset;

        if $z3 == 0 goto label6;

        r39 = (ucar.nc2.dataset.NetcdfDataset) r38;

        $r29 = r0.<ucar.nc2.ncml.Aggregation$Dataset: java.util.Set enhance>;

        virtualinvoke r39.<ucar.nc2.dataset.NetcdfDataset: void enhance(java.util.Set)>($r29);

        goto label7;

     label6:
        $r42 = new ucar.nc2.dataset.NetcdfDataset;

        $r20 = r0.<ucar.nc2.ncml.Aggregation$Dataset: java.util.Set enhance>;

        specialinvoke $r42.<ucar.nc2.dataset.NetcdfDataset: void <init>(ucar.nc2.NetcdfFile,java.util.Set)>(r38, $r20);

        r39 = $r42;

     label7:
        $z4 = <ucar.nc2.ncml.Aggregation: boolean debugOpenFile>;

        if $z4 == 0 goto label8;

        $r22 = <java.lang.System: java.io.PrintStream out>;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" acquire (enhance) ");

        $r24 = r0.<ucar.nc2.ncml.Aggregation$Dataset: java.lang.String cacheLocation>;

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" took ");

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l4 = $l3 - $l0;

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r28);

     label8:
        return r39;
    }

    protected void close(ucar.nc2.NetcdfFile) throws java.io.IOException
    {
        ucar.nc2.ncml.Aggregation$Dataset r1;
        ucar.nc2.NetcdfFile r0;

        r1 := @this: ucar.nc2.ncml.Aggregation$Dataset;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        if r0 != null goto label1;

        return;

     label1:
        virtualinvoke r1.<ucar.nc2.ncml.Aggregation$Dataset: void cacheVariables(ucar.nc2.NetcdfFile)>(r0);

        virtualinvoke r0.<ucar.nc2.NetcdfFile: void close()>();

        return;
    }

    protected void cacheVariables(ucar.nc2.NetcdfFile) throws java.io.IOException
    {
        ucar.nc2.ncml.Aggregation$Dataset r0;
        ucar.nc2.NetcdfFile r1;

        r0 := @this: ucar.nc2.ncml.Aggregation$Dataset;

        r1 := @parameter0: ucar.nc2.NetcdfFile;

        return;
    }

    public void show(java.util.Formatter)
    {
        ucar.nc2.ncml.Aggregation$Dataset r2;
        java.lang.Object[] $r1;
        java.lang.String $r3;
        java.util.Formatter r0;

        r2 := @this: ucar.nc2.ncml.Aggregation$Dataset;

        r0 := @parameter0: java.util.Formatter;

        $r1 = newarray (java.lang.Object)[1];

        $r3 = r2.<ucar.nc2.ncml.Aggregation$Dataset: java.lang.String location>;

        $r1[0] = $r3;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("   %s%n", $r1);

        return;
    }

    protected ucar.ma2.Array read(ucar.nc2.Variable, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.lang.Throwable $r12;
        java.lang.Object[] $r7;
        ucar.nc2.ncml.Aggregation$Dataset r0;
        ucar.nc2.util.CancelTask r1;
        ucar.nc2.Variable r3, $r4;
        java.lang.String $r9, $r10, $r11;
        boolean $z0, $z1;
        java.io.PrintStream $r5, $r8;
        ucar.ma2.Array $r6;
        ucar.nc2.NetcdfFile $r2, r13;

        r0 := @this: ucar.nc2.ncml.Aggregation$Dataset;

        r3 := @parameter0: ucar.nc2.Variable;

        r1 := @parameter1: ucar.nc2.util.CancelTask;

        r13 = null;

     label1:
        $r2 = virtualinvoke r0.<ucar.nc2.ncml.Aggregation$Dataset: ucar.nc2.NetcdfFile acquireFile(ucar.nc2.util.CancelTask)>(r1);

        r13 = $r2;

        if r1 == null goto label3;

        $z0 = interfaceinvoke r1.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z0 == 0 goto label3;

     label2:
        virtualinvoke r0.<ucar.nc2.ncml.Aggregation$Dataset: void close(ucar.nc2.NetcdfFile)>($r2);

        return null;

     label3:
        $r4 = virtualinvoke r0.<ucar.nc2.ncml.Aggregation$Dataset: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,ucar.nc2.Variable)>($r2, r3);

        if r3 == null goto label4;

        if $r4 != null goto label5;

     label4:
        $r5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("HEY (mainv == null)");

     label5:
        $z1 = <ucar.nc2.ncml.Aggregation: boolean debugRead>;

        if $z1 == 0 goto label6;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = newarray (java.lang.Object)[3];

        $r9 = virtualinvoke r3.<ucar.nc2.Variable: java.lang.String getNameAndDimensions()>();

        $r7[0] = $r9;

        $r10 = virtualinvoke $r4.<ucar.nc2.Variable: java.lang.String getNameAndDimensions()>();

        $r7[1] = $r10;

        $r11 = virtualinvoke r0.<ucar.nc2.ncml.Aggregation$Dataset: java.lang.String getLocation()>();

        $r7[2] = $r11;

        virtualinvoke $r8.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("Agg.read %s from %s in %s%n", $r7);

     label6:
        $r6 = virtualinvoke $r4.<ucar.nc2.Variable: ucar.ma2.Array read()>();

     label7:
        virtualinvoke r0.<ucar.nc2.ncml.Aggregation$Dataset: void close(ucar.nc2.NetcdfFile)>($r2);

        return $r6;

     label8:
        $r12 := @caughtexception;

     label9:
        virtualinvoke r0.<ucar.nc2.ncml.Aggregation$Dataset: void close(ucar.nc2.NetcdfFile)>(r13);

        throw $r12;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    protected ucar.ma2.Array read(ucar.nc2.Variable, ucar.nc2.util.CancelTask, java.util.List) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        java.lang.Throwable $r13;
        java.lang.Object[] $r8;
        ucar.ma2.Section $r7;
        ucar.nc2.ncml.Aggregation$Dataset r0;
        ucar.nc2.util.CancelTask r1;
        ucar.nc2.Variable r3, $r4;
        java.lang.String $r10, $r11, $r12;
        boolean $z0, $z1;
        java.io.PrintStream $r9;
        ucar.ma2.Array $r6;
        java.util.List r5;
        ucar.nc2.NetcdfFile $r2, r14;

        r0 := @this: ucar.nc2.ncml.Aggregation$Dataset;

        r3 := @parameter0: ucar.nc2.Variable;

        r1 := @parameter1: ucar.nc2.util.CancelTask;

        r5 := @parameter2: java.util.List;

        r14 = null;

     label1:
        $r2 = virtualinvoke r0.<ucar.nc2.ncml.Aggregation$Dataset: ucar.nc2.NetcdfFile acquireFile(ucar.nc2.util.CancelTask)>(r1);

        r14 = $r2;

        if r1 == null goto label3;

        $z1 = interfaceinvoke r1.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z1 == 0 goto label3;

     label2:
        virtualinvoke r0.<ucar.nc2.ncml.Aggregation$Dataset: void close(ucar.nc2.NetcdfFile)>($r2);

        return null;

     label3:
        $r4 = virtualinvoke r0.<ucar.nc2.ncml.Aggregation$Dataset: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,ucar.nc2.Variable)>($r2, r3);

        $z0 = <ucar.nc2.ncml.Aggregation: boolean debugRead>;

        if $z0 == 0 goto label4;

        $r7 = new ucar.ma2.Section;

        specialinvoke $r7.<ucar.ma2.Section: void <init>(java.util.List)>(r5);

        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r8 = newarray (java.lang.Object)[4];

        $r8[0] = $r7;

        $r10 = virtualinvoke r3.<ucar.nc2.Variable: java.lang.String getNameAndDimensions()>();

        $r8[1] = $r10;

        $r11 = virtualinvoke $r4.<ucar.nc2.Variable: java.lang.String getNameAndDimensions()>();

        $r8[2] = $r11;

        $r12 = virtualinvoke r0.<ucar.nc2.ncml.Aggregation$Dataset: java.lang.String getLocation()>();

        $r8[3] = $r12;

        virtualinvoke $r9.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("Agg.read(%s) %s from %s in %s%n", $r8);

     label4:
        $r6 = virtualinvoke $r4.<ucar.nc2.Variable: ucar.ma2.Array read(java.util.List)>(r5);

     label5:
        virtualinvoke r0.<ucar.nc2.ncml.Aggregation$Dataset: void close(ucar.nc2.NetcdfFile)>($r2);

        return $r6;

     label6:
        $r13 := @caughtexception;

     label7:
        virtualinvoke r0.<ucar.nc2.ncml.Aggregation$Dataset: void close(ucar.nc2.NetcdfFile)>(r14);

        throw $r13;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    protected ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile, ucar.nc2.Variable)
    {
        ucar.nc2.ncml.Aggregation$Dataset r6;
        ucar.nc2.dataset.VariableEnhanced r4;
        ucar.nc2.Variable r1, $r3, r7;
        ucar.nc2.NetcdfFile r0;
        java.lang.String $r2, $r5;

        r6 := @this: ucar.nc2.ncml.Aggregation$Dataset;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        r1 := @parameter1: ucar.nc2.Variable;

        $r2 = virtualinvoke r1.<ucar.nc2.Variable: java.lang.String getName()>();

        $r3 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>($r2);

        r7 = $r3;

        if $r3 != null goto label1;

        r4 = (ucar.nc2.dataset.VariableEnhanced) r1;

        $r5 = interfaceinvoke r4.<ucar.nc2.dataset.VariableEnhanced: java.lang.String getOriginalName()>();

        r7 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>($r5);

     label1:
        return r7;
    }

    public boolean equals(java.lang.Object)
    {
        ucar.nc2.ncml.Aggregation$Dataset r0, r2;
        java.lang.Object r1;
        java.lang.String $r3, $r4, $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: ucar.nc2.ncml.Aggregation$Dataset;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof ucar.nc2.ncml.Aggregation$Dataset;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (ucar.nc2.ncml.Aggregation$Dataset) r1;

        $r3 = r0.<ucar.nc2.ncml.Aggregation$Dataset: java.lang.String location>;

        if $r3 == null goto label3;

        $r5 = r0.<ucar.nc2.ncml.Aggregation$Dataset: java.lang.String location>;

        $r4 = r2.<ucar.nc2.ncml.Aggregation$Dataset: java.lang.String location>;

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        return $z2;

     label3:
        $z1 = specialinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z1;
    }

    public int hashCode()
    {
        ucar.nc2.ncml.Aggregation$Dataset r0;
        int $i0;
        java.lang.String $r1, $r2;

        r0 := @this: ucar.nc2.ncml.Aggregation$Dataset;

        $r1 = r0.<ucar.nc2.ncml.Aggregation$Dataset: java.lang.String location>;

        if $r1 == null goto label1;

        $r2 = r0.<ucar.nc2.ncml.Aggregation$Dataset: java.lang.String location>;

        $i0 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        goto label2;

     label1:
        $i0 = specialinvoke r0.<java.lang.Object: int hashCode()>();

     label2:
        return $i0;
    }

    public int compareTo(java.lang.Object)
    {
        ucar.nc2.ncml.Aggregation$Dataset r1, r2;
        int $i0;
        java.lang.Object r0;
        java.lang.String $r3, $r4;

        r2 := @this: ucar.nc2.ncml.Aggregation$Dataset;

        r0 := @parameter0: java.lang.Object;

        r1 = (ucar.nc2.ncml.Aggregation$Dataset) r0;

        $r4 = r2.<ucar.nc2.ncml.Aggregation$Dataset: java.lang.String location>;

        $r3 = r1.<ucar.nc2.ncml.Aggregation$Dataset: java.lang.String location>;

        $i0 = virtualinvoke $r4.<java.lang.String: int compareTo(java.lang.String)>($r3);

        return $i0;
    }
}
