class org.apache.lucene.store.SingleInstanceLock extends org.apache.lucene.store.Lock
{
    java.lang.String lockName;
    private java.util.HashSet locks;

    public void <init>(java.util.HashSet, java.lang.String)
    {
        java.util.HashSet r1;
        org.apache.lucene.store.SingleInstanceLock r0;
        java.lang.String r2;

        r0 := @this: org.apache.lucene.store.SingleInstanceLock;

        r1 := @parameter0: java.util.HashSet;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.lucene.store.Lock: void <init>()>();

        r0.<org.apache.lucene.store.SingleInstanceLock: java.util.HashSet locks> = r1;

        r0.<org.apache.lucene.store.SingleInstanceLock: java.lang.String lockName> = r2;

        return;
    }

    public boolean obtain() throws java.io.IOException
    {
        java.util.HashSet $r1, $r3;
        java.lang.Throwable $r4;
        org.apache.lucene.store.SingleInstanceLock r0;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.apache.lucene.store.SingleInstanceLock;

        $r1 = r0.<org.apache.lucene.store.SingleInstanceLock: java.util.HashSet locks>;

        entermonitor $r1;

     label1:
        $r3 = r0.<org.apache.lucene.store.SingleInstanceLock: java.util.HashSet locks>;

        $r2 = r0.<org.apache.lucene.store.SingleInstanceLock: java.lang.String lockName>;

        $z0 = virtualinvoke $r3.<java.util.HashSet: boolean add(java.lang.Object)>($r2);

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void release()
    {
        java.util.HashSet $r1, $r3;
        java.lang.Throwable $r4;
        org.apache.lucene.store.SingleInstanceLock r0;
        java.lang.String $r2;

        r0 := @this: org.apache.lucene.store.SingleInstanceLock;

        $r1 = r0.<org.apache.lucene.store.SingleInstanceLock: java.util.HashSet locks>;

        entermonitor $r1;

     label1:
        $r3 = r0.<org.apache.lucene.store.SingleInstanceLock: java.util.HashSet locks>;

        $r2 = r0.<org.apache.lucene.store.SingleInstanceLock: java.lang.String lockName>;

        virtualinvoke $r3.<java.util.HashSet: boolean remove(java.lang.Object)>($r2);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isLocked()
    {
        java.util.HashSet $r1, $r3;
        java.lang.Throwable $r4;
        org.apache.lucene.store.SingleInstanceLock r0;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.apache.lucene.store.SingleInstanceLock;

        $r1 = r0.<org.apache.lucene.store.SingleInstanceLock: java.util.HashSet locks>;

        entermonitor $r1;

     label1:
        $r3 = r0.<org.apache.lucene.store.SingleInstanceLock: java.util.HashSet locks>;

        $r2 = r0.<org.apache.lucene.store.SingleInstanceLock: java.lang.String lockName>;

        $z0 = virtualinvoke $r3.<java.util.HashSet: boolean contains(java.lang.Object)>($r2);

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.store.SingleInstanceLock r1;
        java.lang.StringBuilder $r0, $r3, $r4, $r6;
        java.lang.String $r2, $r5, $r7;

        r1 := @this: org.apache.lucene.store.SingleInstanceLock;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = specialinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r5 = r1.<org.apache.lucene.store.SingleInstanceLock: java.lang.String lockName>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
}
