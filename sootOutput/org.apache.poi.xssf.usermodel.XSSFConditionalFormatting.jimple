public class org.apache.poi.xssf.usermodel.XSSFConditionalFormatting extends java.lang.Object implements org.apache.poi.ss.usermodel.ConditionalFormatting
{
    private final org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting _cf;
    private final org.apache.poi.xssf.usermodel.XSSFSheet _sh;

    void <init>(org.apache.poi.xssf.usermodel.XSSFSheet)
    {
        org.apache.poi.xssf.usermodel.XSSFSheet r2;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormatting r0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting $r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFConditionalFormatting;

        r2 := @parameter0: org.apache.poi.xssf.usermodel.XSSFSheet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting newInstance()>();

        r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormatting: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting _cf> = $r1;

        r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormatting: org.apache.poi.xssf.usermodel.XSSFSheet _sh> = r2;

        return;
    }

    void <init>(org.apache.poi.xssf.usermodel.XSSFSheet, org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting)
    {
        org.apache.poi.xssf.usermodel.XSSFSheet r2;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormatting r0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFConditionalFormatting;

        r2 := @parameter0: org.apache.poi.xssf.usermodel.XSSFSheet;

        r1 := @parameter1: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormatting: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting _cf> = r1;

        r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormatting: org.apache.poi.xssf.usermodel.XSSFSheet _sh> = r2;

        return;
    }

    org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting getCTConditionalFormatting()
    {
        org.apache.poi.xssf.usermodel.XSSFConditionalFormatting r0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting $r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFConditionalFormatting;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormatting: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting _cf>;

        return $r1;
    }

    public org.apache.poi.ss.util.CellRangeAddress[] getFormattingRanges()
    {
        java.lang.Object[] $r6;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting $r2;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormatting r1;
        java.lang.String[] $r10;
        org.apache.poi.ss.util.CellRangeAddress[] $r5, $r7;
        java.util.ArrayList $r0;
        int $i0, $i1, i2;
        java.lang.String $r9, $r11;
        boolean $z0;
        org.apache.poi.ss.util.CellRangeAddress $r12;
        java.util.Iterator $r4;
        java.util.List $r3;
        java.lang.Object $r8;

        r1 := @this: org.apache.poi.xssf.usermodel.XSSFConditionalFormatting;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.apache.poi.xssf.usermodel.XSSFConditionalFormatting: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting _cf>;

        $r3 = interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting: java.util.List getSqref()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        i2 = 0;

     label2:
        $i1 = lengthof $r10;

        if i2 >= $i1 goto label3;

        $r11 = $r10[i2];

        $r12 = staticinvoke <org.apache.poi.ss.util.CellRangeAddress: org.apache.poi.ss.util.CellRangeAddress valueOf(java.lang.String)>($r11);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

        i2 = i2 + 1;

        goto label2;

     label3:
        goto label1;

     label4:
        $i0 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        $r5 = newarray (org.apache.poi.ss.util.CellRangeAddress)[$i0];

        $r6 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r7 = (org.apache.poi.ss.util.CellRangeAddress[]) $r6;

        return $r7;
    }

    public void setRule(int, org.apache.poi.ss.usermodel.ConditionalFormattingRule)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting $r3;
        int i0;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormatting r2;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule $r4, $r5;
        org.apache.poi.ss.usermodel.ConditionalFormattingRule r0;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule r1;

        r2 := @this: org.apache.poi.xssf.usermodel.XSSFConditionalFormatting;

        i0 := @parameter0: int;

        r0 := @parameter1: org.apache.poi.ss.usermodel.ConditionalFormattingRule;

        r1 = (org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule) r0;

        $r3 = r2.<org.apache.poi.xssf.usermodel.XSSFConditionalFormatting: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting _cf>;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule getCfRuleArray(int)>(i0);

        $r5 = virtualinvoke r1.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule getCTCfRule()>();

        interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>($r5);

        return;
    }

    public void addRule(org.apache.poi.ss.usermodel.ConditionalFormattingRule)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting $r3;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormatting r2;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule $r4, $r5;
        org.apache.poi.ss.usermodel.ConditionalFormattingRule r0;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule r1;

        r2 := @this: org.apache.poi.xssf.usermodel.XSSFConditionalFormatting;

        r0 := @parameter0: org.apache.poi.ss.usermodel.ConditionalFormattingRule;

        r1 = (org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule) r0;

        $r3 = r2.<org.apache.poi.xssf.usermodel.XSSFConditionalFormatting: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting _cf>;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule addNewCfRule()>();

        $r5 = virtualinvoke r1.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule getCTCfRule()>();

        interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>($r5);

        return;
    }

    public org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule getRule(int)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting $r2;
        int i0;
        org.apache.poi.xssf.usermodel.XSSFSheet $r3;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormatting r1;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule $r4;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule $r0;

        r1 := @this: org.apache.poi.xssf.usermodel.XSSFConditionalFormatting;

        i0 := @parameter0: int;

        $r0 = new org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule;

        $r3 = r1.<org.apache.poi.xssf.usermodel.XSSFConditionalFormatting: org.apache.poi.xssf.usermodel.XSSFSheet _sh>;

        $r2 = r1.<org.apache.poi.xssf.usermodel.XSSFConditionalFormatting: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting _cf>;

        $r4 = interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule getCfRuleArray(int)>(i0);

        specialinvoke $r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule: void <init>(org.apache.poi.xssf.usermodel.XSSFSheet,org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule)>($r3, $r4);

        return $r0;
    }

    public int getNumberOfRules()
    {
        int $i0;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormatting r0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting $r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFConditionalFormatting;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormatting: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting _cf>;

        $i0 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting: int sizeOfCfRuleArray()>();

        return $i0;
    }

    public volatile org.apache.poi.ss.usermodel.ConditionalFormattingRule getRule(int)
    {
        int i0;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormatting r0;
        org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule $r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFConditionalFormatting;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFConditionalFormatting: org.apache.poi.xssf.usermodel.XSSFConditionalFormattingRule getRule(int)>(i0);

        return $r1;
    }
}
