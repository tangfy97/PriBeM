public class ucar.nc2.dataset.conv.ADASConvention extends ucar.nc2.dataset.CoordSysBuilder
{
    private ucar.nc2.dataset.ProjectionCT projCT;
    private boolean debugProj;

    public void <init>()
    {
        ucar.nc2.dataset.conv.ADASConvention r0;

        r0 := @this: ucar.nc2.dataset.conv.ADASConvention;

        specialinvoke r0.<ucar.nc2.dataset.CoordSysBuilder: void <init>()>();

        r0.<ucar.nc2.dataset.conv.ADASConvention: ucar.nc2.dataset.ProjectionCT projCT> = null;

        r0.<ucar.nc2.dataset.conv.ADASConvention: boolean debugProj> = 0;

        r0.<ucar.nc2.dataset.conv.ADASConvention: java.lang.String conventionName> = "ARPS/ADAS";

        return;
    }

    public void augmentDataset(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.dataset.CoordinateAxis $r16, $r17, $r18;
        ucar.nc2.util.CancelTask r82;
        byte $b7;
        ucar.nc2.constants.AxisType $r14;
        ucar.unidata.geoloc.ProjectionPointImpl $r23, $r44, $r54;
        ucar.nc2.Attribute $r2, $r13, $r21, $r73;
        java.lang.StringBuilder $r25, $r27, $r28, $r29, $r30, $r36, $r38, $r39, $r40, $r41, $r46, $r48, $r49, $r50, $r51, $r56, $r58, $r59, $r60, $r61, $r63, $r65, $r67, $r77, $r79, $r80;
        java.lang.Object[] $r7;
        ucar.ma2.ArrayFloat$D1 $r69, $r70;
        long $l1, $l4;
        java.lang.String $r5, $r6, $r15, $r31, $r42, $r52, $r62, $r66, $r68, $r81, r83;
        java.lang.Number $r3, $r74, $r75;
        ucar.nc2.dataset.ProjectionCT $r19, $r72, $r86;
        ucar.ma2.Array $r33, $r35;
        ucar.unidata.geoloc.LatLonPointImpl $r22, $r43, $r53;
        ucar.nc2.dataset.NetcdfDataset r0;
        ucar.nc2.dataset.conv.ADASConvention r4;
        java.util.Formatter $r8;
        boolean $z0, $z1, $z2, $z3;
        ucar.nc2.dataset.VariableDS $r20;
        float $f0, $f1, $f2, $f3;
        int $i0, $i2, $i3, $i5, $i6, $i8;
        ucar.nc2.Variable $r1, $r9, $r10, $r11, $r12, $r32, $r34, $r84;
        double $d0, $d1, $d2, $d3, d4, d5, d6, d7, d8, d9, $d10, d11;
        ucar.unidata.geoloc.ProjectionPoint $r24, $r45, $r55;
        java.io.PrintStream $r26, $r37, $r47, $r57, $r64;
        org.slf4j.Logger $r78;
        java.lang.IllegalArgumentException $r76;
        ucar.unidata.geoloc.projection.LambertConformal $r71, r85;

        r4 := @this: ucar.nc2.dataset.conv.ADASConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r82 := @parameter1: ucar.nc2.util.CancelTask;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("x");

        if null == $r1 goto label01;

        return;

     label01:
        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("MAPPROJ");

        $r3 = virtualinvoke $r2.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        $i0 = virtualinvoke $r3.<java.lang.Number: int intValue()>();

        $d0 = specialinvoke r4.<ucar.nc2.dataset.conv.ADASConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String,double)>(r0, "TRUELAT1", #NaN);

        d4 = $d0;

        d5 = specialinvoke r4.<ucar.nc2.dataset.conv.ADASConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String,double)>(r0, "TRUELAT2", #NaN);

        d6 = $d0;

        d7 = specialinvoke r4.<ucar.nc2.dataset.conv.ADASConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String,double)>(r0, "TRUELON", #NaN);

        d8 = 0.0;

        d9 = 0.0;

        $r5 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "grid_mapping_name", null);

        r83 = $r5;

        if $r5 == null goto label05;

        r83 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        d6 = specialinvoke r4.<ucar.nc2.dataset.conv.ADASConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String,double)>(r0, "latitude_of_projection_origin", #NaN);

        d7 = specialinvoke r4.<ucar.nc2.dataset.conv.ADASConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String,double)>(r0, "longitude_of_central_meridian", #NaN);

        d8 = specialinvoke r4.<ucar.nc2.dataset.conv.ADASConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String,double)>(r0, "false_easting", 0.0);

        d9 = specialinvoke r4.<ucar.nc2.dataset.conv.ADASConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String,double)>(r0, "false_northing", 0.0);

        $r73 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttributeIgnoreCase(java.lang.String)>("standard_parallel");

        if $r73 == null goto label04;

        $r74 = virtualinvoke $r73.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        $d3 = virtualinvoke $r74.<java.lang.Number: double doubleValue()>();

        d4 = $d3;

        $i8 = virtualinvoke $r73.<ucar.nc2.Attribute: int getLength()>();

        if $i8 <= 1 goto label02;

        $r75 = virtualinvoke $r73.<ucar.nc2.Attribute: java.lang.Number getNumericValue(int)>(1);

        $d10 = virtualinvoke $r75.<java.lang.Number: double doubleValue()>();

        goto label03;

     label02:
        $d10 = $d3;

     label03:
        d5 = $d10;

     label04:
        goto label06;

     label05:
        if $i0 != 2 goto label06;

        r83 = "lambert_conformal_conic";

     label06:
        $r84 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("x_stag");

        $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d8);

        if $z2 == 0 goto label07;

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d9);

        if $z1 != 0 goto label12;

     label07:
        $r6 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>($r84, "units", null);

        d11 = 1.0;

     label08:
        d11 = staticinvoke <ucar.nc2.units.SimpleUnit: double getConversionFactor(java.lang.String,java.lang.String)>($r6, "km");

     label09:
        goto label11;

     label10:
        $r76 := @caughtexception;

        $r78 = <ucar.nc2.dataset.conv.ADASConvention: org.slf4j.Logger log>;

        $r77 = new java.lang.StringBuilder;

        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();

        $r79 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not convertible to km");

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r78.<org.slf4j.Logger: void error(java.lang.String)>($r81);

     label11:
        d8 = d8 * d11;

        d9 = d9 * d11;

     label12:
        r85 = null;

        if r83 == null goto label13;

        $z0 = virtualinvoke r83.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("lambert_conformal_conic");

        if $z0 == 0 goto label13;

        $r71 = new ucar.unidata.geoloc.projection.LambertConformal;

        specialinvoke $r71.<ucar.unidata.geoloc.projection.LambertConformal: void <init>(double,double,double,double,double,double)>(d6, d7, d4, d5, d8, d9);

        r85 = $r71;

        $r72 = new ucar.nc2.dataset.ProjectionCT;

        specialinvoke $r72.<ucar.nc2.dataset.ProjectionCT: void <init>(java.lang.String,java.lang.String,ucar.unidata.geoloc.ProjectionImpl)>("Projection", "FGDC", $r71);

        r4.<ucar.nc2.dataset.conv.ADASConvention: ucar.nc2.dataset.ProjectionCT projCT> = $r72;

        $b7 = d8 cmpl 0.0;

        if $b7 != 0 goto label14;

        specialinvoke r4.<ucar.nc2.dataset.conv.ADASConvention: void calcCenterPoints(ucar.nc2.dataset.NetcdfDataset,ucar.unidata.geoloc.Projection)>(r0, $r71);

        goto label14;

     label13:
        $r8 = r4.<ucar.nc2.dataset.conv.ADASConvention: java.util.Formatter parseInfo>;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r83;

        virtualinvoke $r8.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("ERROR: unknown projection type = %s\n", $r7);

     label14:
        $z3 = r4.<ucar.nc2.dataset.conv.ADASConvention: boolean debugProj>;

        if $z3 == 0 goto label16;

        if r85 == null goto label15;

        $r64 = <java.lang.System: java.io.PrintStream out>;

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using LC ");

        $r66 = virtualinvoke r85.<ucar.unidata.geoloc.ProjectionImpl: java.lang.String paramsToString()>();

        $r67 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r64.<java.io.PrintStream: void println(java.lang.String)>($r68);

     label15:
        $d1 = specialinvoke r4.<ucar.nc2.dataset.conv.ADASConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String,double)>(r0, "CTRLAT", #NaN);

        $d2 = specialinvoke r4.<ucar.nc2.dataset.conv.ADASConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String,double)>(r0, "CTRLON", #NaN);

        $r22 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r22.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>($d1, $d2);

        $r23 = new ucar.unidata.geoloc.ProjectionPointImpl;

        specialinvoke $r23.<ucar.unidata.geoloc.ProjectionPointImpl: void <init>()>();

        $r24 = virtualinvoke r85.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint,ucar.unidata.geoloc.ProjectionPointImpl)>($r22, $r23);

        $r26 = <java.lang.System: java.io.PrintStream out>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CTR lpt0= ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ppt0=");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r31);

        $r32 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("x_stag");

        $r33 = virtualinvoke $r32.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r69 = (ucar.ma2.ArrayFloat$D1) $r33;

        $l1 = virtualinvoke $r32.<ucar.nc2.Variable: long getSize()>();

        $i2 = (int) $l1;

        $i3 = $i2 - 1;

        $f0 = virtualinvoke $r69.<ucar.ma2.ArrayFloat$D1: float get(int)>($i3);

        $r34 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("y_stag");

        $r35 = virtualinvoke $r34.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r70 = (ucar.ma2.ArrayFloat$D1) $r35;

        $l4 = virtualinvoke $r34.<ucar.nc2.Variable: long getSize()>();

        $i5 = (int) $l4;

        $i6 = $i5 - 1;

        $f1 = virtualinvoke $r70.<ucar.ma2.ArrayFloat$D1: float get(int)>($i6);

        $r37 = <java.lang.System: java.io.PrintStream out>;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CTR should be x,y= ");

        $f2 = $f0 / 2000.0F;

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $f3 = $f1 / 2000.0F;

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r37.<java.io.PrintStream: void println(java.lang.String)>($r42);

        $r43 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r43.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>(d6, d7);

        $r44 = new ucar.unidata.geoloc.ProjectionPointImpl;

        specialinvoke $r44.<ucar.unidata.geoloc.ProjectionPointImpl: void <init>()>();

        $r45 = virtualinvoke r85.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint,ucar.unidata.geoloc.ProjectionPointImpl)>($r43, $r44);

        $r47 = <java.lang.System: java.io.PrintStream out>;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ORIGIN lpt0= ");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r43);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ppt0=");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r45);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r47.<java.io.PrintStream: void println(java.lang.String)>($r52);

        $r53 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r53.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>(d6, d7);

        $r54 = new ucar.unidata.geoloc.ProjectionPointImpl;

        specialinvoke $r54.<ucar.unidata.geoloc.ProjectionPointImpl: void <init>()>();

        $r55 = virtualinvoke r85.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint,ucar.unidata.geoloc.ProjectionPointImpl)>($r53, $r54);

        $r57 = <java.lang.System: java.io.PrintStream out>;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TRUE ORIGIN lpt0= ");

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r53);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ppt0=");

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r55);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r57.<java.io.PrintStream: void println(java.lang.String)>($r62);

     label16:
        $r86 = r4.<ucar.nc2.dataset.conv.ADASConvention: ucar.nc2.dataset.ProjectionCT projCT>;

        if $r86 == null goto label17;

        $r19 = r4.<ucar.nc2.dataset.conv.ADASConvention: ucar.nc2.dataset.ProjectionCT projCT>;

        $r20 = virtualinvoke r4.<ucar.nc2.dataset.conv.ADASConvention: ucar.nc2.dataset.VariableDS makeCoordinateTransformVariable(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.dataset.CoordinateTransform)>(r0, $r19);

        $r21 = new ucar.nc2.Attribute;

        specialinvoke $r21.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisTypes", "GeoX GeoY");

        virtualinvoke $r20.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r21);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(null, $r20);

     label17:
        $r9 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("x_stag");

        if $r9 == null goto label18;

        $r18 = specialinvoke r4.<ucar.nc2.dataset.conv.ADASConvention: ucar.nc2.dataset.CoordinateAxis makeCoordAxis(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r0, "x");

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r18);

     label18:
        $r10 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("y_stag");

        if $r10 == null goto label19;

        $r17 = specialinvoke r4.<ucar.nc2.dataset.conv.ADASConvention: ucar.nc2.dataset.CoordinateAxis makeCoordAxis(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r0, "y");

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r17);

     label19:
        $r11 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("z_stag");

        if $r11 == null goto label20;

        $r16 = specialinvoke r4.<ucar.nc2.dataset.conv.ADASConvention: ucar.nc2.dataset.CoordinateAxis makeCoordAxis(ucar.nc2.dataset.NetcdfDataset,java.lang.String)>(r0, "z");

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordinateAxis addCoordinateAxis(ucar.nc2.dataset.VariableDS)>($r16);

     label20:
        $r12 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("ZPSOIL");

        if $r12 == null goto label21;

        $r13 = new ucar.nc2.Attribute;

        $r14 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoZ>;

        $r15 = virtualinvoke $r14.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r13.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r15);

        virtualinvoke $r12.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r13);

     label21:
        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: void finish()>();

        return;

        catch java.lang.IllegalArgumentException from label08 to label09 with label10;
    }

    private void calcCenterPoints(ucar.nc2.dataset.NetcdfDataset, ucar.unidata.geoloc.Projection) throws java.io.IOException
    {
        ucar.unidata.geoloc.Projection r3;
        ucar.unidata.geoloc.ProjectionPointImpl $r4;
        java.lang.StringBuilder $r6, $r8, $r9, $r10, $r11, $r16, $r18, $r19, $r24, $r26, $r27;
        ucar.ma2.ArrayFloat$D1 r15, r23;
        long $l0, $l3;
        java.lang.String $r12, $r20, $r28;
        ucar.ma2.Array $r14, $r22;
        ucar.unidata.geoloc.LatLonPointImpl $r2;
        ucar.nc2.dataset.NetcdfDataset r1;
        ucar.nc2.dataset.conv.ADASConvention r0;
        float $f0, $f1, $f2, $f3;
        int i1, $i2, i4, $i5, $i6, $i7;
        ucar.nc2.Variable $r13, $r21;
        double $d0, $d1, $d2, $d3, $d4, d5, $d6, $d7, $d8, d9, $d10, $d11, $d12, d13, $d14, d15, $d16, $d17, $d18, d19, $d20, $d21, $d22, d23;
        ucar.unidata.geoloc.ProjectionPoint $r5;
        java.io.PrintStream $r7, $r17, $r25;

        r0 := @this: ucar.nc2.dataset.conv.ADASConvention;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r3 := @parameter1: ucar.unidata.geoloc.Projection;

        $d0 = specialinvoke r0.<ucar.nc2.dataset.conv.ADASConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String,double)>(r1, "CTRLAT", #NaN);

        $d1 = specialinvoke r0.<ucar.nc2.dataset.conv.ADASConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String,double)>(r1, "CTRLON", #NaN);

        $r2 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r2.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>($d0, $d1);

        $r4 = new ucar.unidata.geoloc.ProjectionPointImpl;

        specialinvoke $r4.<ucar.unidata.geoloc.ProjectionPointImpl: void <init>()>();

        $r5 = interfaceinvoke r3.<ucar.unidata.geoloc.Projection: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint,ucar.unidata.geoloc.ProjectionPointImpl)>($r2, $r4);

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CTR lpt0= ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ppt0=");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r12);

        $r13 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("x_stag");

        $l0 = virtualinvoke $r13.<ucar.nc2.Variable: long getSize()>();

        i1 = (int) $l0;

        $r14 = virtualinvoke $r13.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        r15 = (ucar.ma2.ArrayFloat$D1) $r14;

        $i2 = i1 - 1;

        $f0 = virtualinvoke r15.<ucar.ma2.ArrayFloat$D1: float get(int)>($i2);

        $f1 = $f0 / 2000.0F;

        $d2 = (double) $f1;

        $d3 = interfaceinvoke $r5.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $d4 = $d3 * 1000.0;

        d5 = $d2 - $d4;

        $r17 = <java.lang.System: java.io.PrintStream out>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("false_easting= ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d5);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r20);

        $r21 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("y_stag");

        $l3 = virtualinvoke $r21.<ucar.nc2.Variable: long getSize()>();

        i4 = (int) $l3;

        $r22 = virtualinvoke $r21.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        r23 = (ucar.ma2.ArrayFloat$D1) $r22;

        $i5 = i4 - 1;

        $f2 = virtualinvoke r23.<ucar.ma2.ArrayFloat$D1: float get(int)>($i5);

        $f3 = $f2 / 2000.0F;

        $d6 = (double) $f3;

        $d7 = interfaceinvoke $r5.<ucar.unidata.geoloc.ProjectionPoint: double getY()>();

        $d8 = $d7 * 1000.0;

        d9 = $d6 - $d8;

        $r25 = <java.lang.System: java.io.PrintStream out>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("false_northing= ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d9);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>($r28);

        $d10 = specialinvoke r0.<ucar.nc2.dataset.conv.ADASConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String,double)>(r1, "DX", #NaN);

        $d11 = specialinvoke r0.<ucar.nc2.dataset.conv.ADASConvention: double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset,java.lang.String,double)>(r1, "DY", #NaN);

        $i6 = i1 - 1;

        $d12 = (double) $i6;

        d13 = $d10 * $d12;

        $i7 = i4 - 1;

        $d14 = (double) $i7;

        d15 = $d11 * $d14;

        $d16 = interfaceinvoke $r5.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $d18 = $d16 * 1000.0;

        $d17 = d13 / 2.0;

        d19 = $d18 - $d17;

        $d20 = interfaceinvoke $r5.<ucar.unidata.geoloc.ProjectionPoint: double getY()>();

        $d22 = $d20 * 1000.0;

        $d21 = d15 / 2.0;

        d23 = $d22 - $d21;

        virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: void setValues(ucar.nc2.Variable,int,double,double)>($r13, i1, d19, $d10);

        virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: void setValues(ucar.nc2.Variable,int,double,double)>($r21, i4, d23, $d11);

        return;
    }

    protected void makeCoordinateTransforms(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dataset.conv.ADASConvention r0;
        ucar.nc2.dataset.ProjectionCT $r1, $r3, $r6;
        ucar.nc2.dataset.CoordSysBuilder$VarProcess $r5;
        java.lang.String $r4;
        ucar.nc2.dataset.NetcdfDataset r2;

        r0 := @this: ucar.nc2.dataset.conv.ADASConvention;

        r2 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $r1 = r0.<ucar.nc2.dataset.conv.ADASConvention: ucar.nc2.dataset.ProjectionCT projCT>;

        if $r1 == null goto label1;

        $r3 = r0.<ucar.nc2.dataset.conv.ADASConvention: ucar.nc2.dataset.ProjectionCT projCT>;

        $r4 = virtualinvoke $r3.<ucar.nc2.dataset.ProjectionCT: java.lang.String getName()>();

        $r5 = virtualinvoke r0.<ucar.nc2.dataset.conv.ADASConvention: ucar.nc2.dataset.CoordSysBuilder$VarProcess findVarProcess(java.lang.String)>($r4);

        $r5.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: boolean isCoordinateTransform> = 1;

        $r6 = r0.<ucar.nc2.dataset.conv.ADASConvention: ucar.nc2.dataset.ProjectionCT projCT>;

        $r5.<ucar.nc2.dataset.CoordSysBuilder$VarProcess: ucar.nc2.dataset.CoordinateTransform ct> = $r6;

     label1:
        specialinvoke r0.<ucar.nc2.dataset.CoordSysBuilder: void makeCoordinateTransforms(ucar.nc2.dataset.NetcdfDataset)>(r2);

        return;
    }

    protected ucar.nc2.constants.AxisType getAxisType(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.dataset.VariableEnhanced)
    {
        ucar.nc2.dataset.conv.ADASConvention r13;
        ucar.nc2.constants.AxisType $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12;
        ucar.nc2.Variable r1;
        java.lang.String $r2, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        ucar.nc2.dataset.VariableEnhanced r0;
        ucar.nc2.dataset.NetcdfDataset r14;

        r13 := @this: ucar.nc2.dataset.conv.ADASConvention;

        r14 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r0 := @parameter1: ucar.nc2.dataset.VariableEnhanced;

        r1 = (ucar.nc2.Variable) r0;

        $r2 = virtualinvoke r1.<ucar.nc2.Variable: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("x");

        if $z0 != 0 goto label01;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("x_stag");

        if $z1 == 0 goto label02;

     label01:
        $r3 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoX>;

        return $r3;

     label02:
        $z2 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("lon");

        if $z2 == 0 goto label03;

        $r12 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        return $r12;

     label03:
        $z3 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("y");

        if $z3 != 0 goto label04;

        $z4 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("y_stag");

        if $z4 == 0 goto label05;

     label04:
        $r4 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoY>;

        return $r4;

     label05:
        $z5 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("lat");

        if $z5 == 0 goto label06;

        $r11 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        return $r11;

     label06:
        $z6 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("z");

        if $z6 != 0 goto label07;

        $z7 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("z_stag");

        if $z7 == 0 goto label08;

     label07:
        $r5 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoZ>;

        return $r5;

     label08:
        $z8 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Z");

        if $z8 == 0 goto label09;

        $r10 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        return $r10;

     label09:
        $z9 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("time");

        if $z9 == 0 goto label10;

        $r9 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        return $r9;

     label10:
        $r6 = interfaceinvoke r0.<ucar.nc2.dataset.VariableEnhanced: java.lang.String getUnitsString()>();

        if $r6 == null goto label12;

        $z10 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>("millibar", $r6);

        if $z10 == 0 goto label11;

        $r8 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Pressure>;

        return $r8;

     label11:
        $z11 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>("m", $r6);

        if $z11 == 0 goto label12;

        $r7 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        return $r7;

     label12:
        return null;
    }

    public java.lang.String getZisPositive(ucar.nc2.dataset.CoordinateAxis)
    {
        ucar.nc2.dataset.CoordinateAxis r1;
        ucar.nc2.dataset.conv.ADASConvention r0;

        r0 := @this: ucar.nc2.dataset.conv.ADASConvention;

        r1 := @parameter0: ucar.nc2.dataset.CoordinateAxis;

        return "down";
    }

    private ucar.nc2.dataset.CoordinateAxis makeCoordAxis(ucar.nc2.dataset.NetcdfDataset, java.lang.String) throws java.io.IOException
    {
        ucar.nc2.dataset.conv.ADASConvention r25;
        int[] $r9;
        ucar.nc2.dataset.CoordinateAxis1D $r16;
        ucar.ma2.DataType $r14;
        java.lang.StringBuilder $r1, $r3, $r4, $r17, $r18, $r19, $r20;
        long $l0;
        int $i1, i2, $i3, i4;
        ucar.nc2.Variable $r6;
        java.lang.String r2, $r5, $r15, $r21;
        double $d0, $d1, $d2, d3;
        ucar.ma2.Array $r7, $r10;
        ucar.ma2.Index $r11, $r12, $r22, $r23, $r24;
        java.lang.Class $r8, $r13;
        ucar.nc2.dataset.NetcdfDataset r0;

        r25 := @this: ucar.nc2.dataset.conv.ADASConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_stag");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $l0 = virtualinvoke $r7.<ucar.ma2.Array: long getSize()>();

        $i1 = (int) $l0;

        i2 = $i1 - 1;

        $r8 = virtualinvoke $r7.<ucar.ma2.Array: java.lang.Class getElementType()>();

        $r9 = newarray (int)[1];

        $r9[0] = i2;

        $r10 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(java.lang.Class,int[])>($r8, $r9);

        $r11 = virtualinvoke $r7.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $r12 = virtualinvoke $r10.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        i4 = 0;

     label1:
        if i4 >= i2 goto label2;

        $r22 = virtualinvoke $r11.<ucar.ma2.Index: ucar.ma2.Index set(int)>(i4);

        $d0 = virtualinvoke $r7.<ucar.ma2.Array: double getDouble(ucar.ma2.Index)>($r22);

        $i3 = i4 + 1;

        $r23 = virtualinvoke $r11.<ucar.ma2.Index: ucar.ma2.Index set(int)>($i3);

        $d1 = virtualinvoke $r7.<ucar.ma2.Array: double getDouble(ucar.ma2.Index)>($r23);

        d3 = $d0 + $d1;

        $r24 = virtualinvoke $r12.<ucar.ma2.Index: ucar.ma2.Index set(int)>(i4);

        $d2 = 0.5 * d3;

        virtualinvoke $r10.<ucar.ma2.Array: void setDouble(ucar.ma2.Index,double)>($r24, $d2);

        i4 = i4 + 1;

        goto label1;

     label2:
        $r13 = virtualinvoke $r10.<ucar.ma2.Array: java.lang.Class getElementType()>();

        $r14 = staticinvoke <ucar.ma2.DataType: ucar.ma2.DataType getType(java.lang.Class)>($r13);

        $r15 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>($r6, "units", "m");

        $r16 = new ucar.nc2.dataset.CoordinateAxis1D;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("synthesized non-staggered ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" coordinate");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<ucar.nc2.dataset.CoordinateAxis1D: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r0, null, r2, $r14, r2, $r15, $r21);

        virtualinvoke $r16.<ucar.nc2.dataset.CoordinateAxis: void setCachedData(ucar.ma2.Array,boolean)>($r10, 1);

        return $r16;
    }

    private double findAttributeDouble(ucar.nc2.dataset.NetcdfDataset, java.lang.String, double)
    {
        ucar.nc2.Attribute $r2;
        ucar.nc2.dataset.conv.ADASConvention r4;
        java.lang.String r1;
        java.lang.Number $r3;
        ucar.nc2.dataset.NetcdfDataset r0;
        double $d0, d1;

        r4 := @this: ucar.nc2.dataset.conv.ADASConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r1 := @parameter1: java.lang.String;

        d1 := @parameter2: double;

        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttributeIgnoreCase(java.lang.String)>(r1);

        if $r2 != null goto label1;

        return d1;

     label1:
        $r3 = virtualinvoke $r2.<ucar.nc2.Attribute: java.lang.Number getNumericValue()>();

        $d0 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>();

        return $d0;
    }

    protected void assignCoordinateTransforms(ucar.nc2.dataset.NetcdfDataset)
    {
        java.lang.Object[] $r10;
        ucar.nc2.dataset.conv.ADASConvention r0;
        java.util.Formatter $r11;
        ucar.nc2.dataset.CoordinateAxis $r6, $r7;
        ucar.nc2.dataset.VerticalCT $r9;
        int $i0;
        java.lang.String $r8, $r12, $r13;
        boolean $z0;
        java.util.Iterator $r3;
        java.util.List $r2;
        java.lang.Object $r4;
        ucar.nc2.dataset.CoordinateSystem r5;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.dataset.conv.ADASConvention;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        specialinvoke r0.<ucar.nc2.dataset.CoordSysBuilder: void assignCoordinateTransforms(ucar.nc2.dataset.NetcdfDataset)>(r1);

        $r2 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: java.util.List getCoordinateSystems()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (ucar.nc2.dataset.CoordinateSystem) $r4;

        $r6 = virtualinvoke r5.<ucar.nc2.dataset.CoordinateSystem: ucar.nc2.dataset.CoordinateAxis getZaxis()>();

        if $r6 == null goto label3;

        $r7 = virtualinvoke r5.<ucar.nc2.dataset.CoordinateSystem: ucar.nc2.dataset.CoordinateAxis getZaxis()>();

        $r8 = virtualinvoke $r7.<ucar.nc2.dataset.CoordinateAxis: java.lang.String getUnitsString()>();

        if $r8 == null goto label2;

        $r13 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r13.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

     label2:
        $r9 = specialinvoke r0.<ucar.nc2.dataset.conv.ADASConvention: ucar.nc2.dataset.VerticalCT makeWRFEtaVerticalCoordinateTransform(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.dataset.CoordinateSystem)>(r1, r5);

        if $r9 == null goto label3;

        virtualinvoke r5.<ucar.nc2.dataset.CoordinateSystem: void addCoordinateTransform(ucar.nc2.dataset.CoordinateTransform)>($r9);

        $r11 = r0.<ucar.nc2.dataset.conv.ADASConvention: java.util.Formatter parseInfo>;

        $r10 = newarray (java.lang.Object)[1];

        $r12 = virtualinvoke r5.<ucar.nc2.dataset.CoordinateSystem: java.lang.String getName()>();

        $r10[0] = $r12;

        virtualinvoke $r11.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("***Added WRFEta verticalCoordinateTransform to %s\n", $r10);

     label3:
        goto label1;

     label4:
        return;
    }

    private ucar.nc2.dataset.VerticalCT makeWRFEtaVerticalCoordinateTransform(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.dataset.CoordinateSystem)
    {
        ucar.nc2.dataset.conv.ADASConvention r9;
        ucar.nc2.dataset.transform.WRFEtaTransformBuilder $r5;
        ucar.nc2.dataset.VerticalCT $r8;
        ucar.nc2.dataset.CoordinateTransform $r7;
        ucar.nc2.Variable $r1, $r2, $r3, $r4;
        ucar.nc2.dataset.CoordinateSystem r6;
        ucar.nc2.dataset.NetcdfDataset r0;

        r9 := @this: ucar.nc2.dataset.conv.ADASConvention;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r6 := @parameter1: ucar.nc2.dataset.CoordinateSystem;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("PH");

        if null == $r1 goto label1;

        $r2 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("PHB");

        if null == $r2 goto label1;

        $r3 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("P");

        if null == $r3 goto label1;

        $r4 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("PB");

        if null != $r4 goto label2;

     label1:
        return null;

     label2:
        $r5 = new ucar.nc2.dataset.transform.WRFEtaTransformBuilder;

        specialinvoke $r5.<ucar.nc2.dataset.transform.WRFEtaTransformBuilder: void <init>(ucar.nc2.dataset.CoordinateSystem)>(r6);

        $r7 = virtualinvoke $r5.<ucar.nc2.dataset.transform.WRFEtaTransformBuilder: ucar.nc2.dataset.CoordinateTransform makeCoordinateTransform(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Variable)>(r0, null);

        $r8 = (ucar.nc2.dataset.VerticalCT) $r7;

        return $r8;
    }
}
