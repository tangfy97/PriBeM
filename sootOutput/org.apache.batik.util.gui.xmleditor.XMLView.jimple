public class org.apache.batik.util.gui.xmleditor.XMLView extends javax.swing.text.PlainView
{
    protected org.apache.batik.util.gui.xmleditor.XMLContext context;
    protected org.apache.batik.util.gui.xmleditor.XMLScanner lexer;
    protected int tabSize;

    public void <init>(org.apache.batik.util.gui.xmleditor.XMLContext, javax.swing.text.Element)
    {
        org.apache.batik.util.gui.xmleditor.XMLView r0;
        org.apache.batik.util.gui.xmleditor.XMLContext r3;
        javax.swing.text.Element r1;
        org.apache.batik.util.gui.xmleditor.XMLScanner $r2;

        r0 := @this: org.apache.batik.util.gui.xmleditor.XMLView;

        r3 := @parameter0: org.apache.batik.util.gui.xmleditor.XMLContext;

        r1 := @parameter1: javax.swing.text.Element;

        specialinvoke r0.<javax.swing.text.PlainView: void <init>(javax.swing.text.Element)>(r1);

        r0.<org.apache.batik.util.gui.xmleditor.XMLView: org.apache.batik.util.gui.xmleditor.XMLContext context> = null;

        $r2 = new org.apache.batik.util.gui.xmleditor.XMLScanner;

        specialinvoke $r2.<org.apache.batik.util.gui.xmleditor.XMLScanner: void <init>()>();

        r0.<org.apache.batik.util.gui.xmleditor.XMLView: org.apache.batik.util.gui.xmleditor.XMLScanner lexer> = $r2;

        r0.<org.apache.batik.util.gui.xmleditor.XMLView: int tabSize> = 4;

        r0.<org.apache.batik.util.gui.xmleditor.XMLView: org.apache.batik.util.gui.xmleditor.XMLContext context> = r3;

        return;
    }

    public int getTabSize()
    {
        int $i0;
        org.apache.batik.util.gui.xmleditor.XMLView r0;

        r0 := @this: org.apache.batik.util.gui.xmleditor.XMLView;

        $i0 = r0.<org.apache.batik.util.gui.xmleditor.XMLView: int tabSize>;

        return $i0;
    }

    protected int drawUnselectedText(java.awt.Graphics, int, int, int, int) throws javax.swing.text.BadLocationException
    {
        java.awt.Color $r13, $r18;
        org.apache.batik.util.gui.xmleditor.XMLScanner $r5, $r6, $r7, $r8, $r9, $r10;
        org.apache.batik.util.gui.xmleditor.XMLToken $r3;
        java.awt.Font $r15, $r20;
        org.apache.batik.util.gui.xmleditor.XMLContext $r12, $r14, $r17, $r19;
        java.awt.Graphics r11;
        javax.swing.text.Document $r1;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, $i13, $i14, i15, i16, i17, i18, i19;
        java.lang.String $r4;
        org.apache.batik.util.gui.xmleditor.XMLDocument r2;
        org.apache.batik.util.gui.xmleditor.XMLView r0;
        javax.swing.text.Segment $r16, $r21;

        r0 := @this: org.apache.batik.util.gui.xmleditor.XMLView;

        r11 := @parameter0: java.awt.Graphics;

        i15 := @parameter1: int;

        i12 := @parameter2: int;

        i0 := @parameter3: int;

        i2 := @parameter4: int;

        $r1 = virtualinvoke r0.<javax.swing.text.View: javax.swing.text.Document getDocument()>();

        r2 = (org.apache.batik.util.gui.xmleditor.XMLDocument) $r1;

        $r3 = virtualinvoke r2.<org.apache.batik.util.gui.xmleditor.XMLDocument: org.apache.batik.util.gui.xmleditor.XMLToken getScannerStart(int)>(i0);

        $i1 = virtualinvoke $r3.<org.apache.batik.util.gui.xmleditor.XMLToken: int getStartOffset()>();

        $i3 = virtualinvoke $r3.<org.apache.batik.util.gui.xmleditor.XMLToken: int getStartOffset()>();

        $i4 = i2 - $i3;

        $i5 = $i4 + 1;

        $r4 = virtualinvoke r2.<javax.swing.text.AbstractDocument: java.lang.String getText(int,int)>($i1, $i5);

        $r5 = r0.<org.apache.batik.util.gui.xmleditor.XMLView: org.apache.batik.util.gui.xmleditor.XMLScanner lexer>;

        virtualinvoke $r5.<org.apache.batik.util.gui.xmleditor.XMLScanner: void setString(java.lang.String)>($r4);

        $r6 = r0.<org.apache.batik.util.gui.xmleditor.XMLView: org.apache.batik.util.gui.xmleditor.XMLScanner lexer>;

        virtualinvoke $r6.<org.apache.batik.util.gui.xmleditor.XMLScanner: void reset()>();

        i16 = virtualinvoke $r3.<org.apache.batik.util.gui.xmleditor.XMLToken: int getStartOffset()>();

        $i6 = virtualinvoke $r3.<org.apache.batik.util.gui.xmleditor.XMLToken: int getContext()>();

        i17 = $i6;

        i18 = $i6;

        goto label2;

     label1:
        $r7 = r0.<org.apache.batik.util.gui.xmleditor.XMLView: org.apache.batik.util.gui.xmleditor.XMLScanner lexer>;

        $i7 = virtualinvoke $r7.<org.apache.batik.util.gui.xmleditor.XMLScanner: int scan(int)>(i17);

        $i8 = virtualinvoke $r3.<org.apache.batik.util.gui.xmleditor.XMLToken: int getStartOffset()>();

        i16 = $i7 + $i8;

        i18 = i17;

        $r8 = r0.<org.apache.batik.util.gui.xmleditor.XMLView: org.apache.batik.util.gui.xmleditor.XMLScanner lexer>;

        i17 = virtualinvoke $r8.<org.apache.batik.util.gui.xmleditor.XMLScanner: int getScanValue()>();

     label2:
        if i16 < i0 goto label1;

        i19 = i0;

        goto label5;

     label3:
        if i18 == i17 goto label4;

        $r12 = r0.<org.apache.batik.util.gui.xmleditor.XMLView: org.apache.batik.util.gui.xmleditor.XMLContext context>;

        $r13 = virtualinvoke $r12.<org.apache.batik.util.gui.xmleditor.XMLContext: java.awt.Color getSyntaxForeground(int)>(i18);

        virtualinvoke r11.<java.awt.Graphics: void setColor(java.awt.Color)>($r13);

        $r14 = r0.<org.apache.batik.util.gui.xmleditor.XMLView: org.apache.batik.util.gui.xmleditor.XMLContext context>;

        $r15 = virtualinvoke $r14.<org.apache.batik.util.gui.xmleditor.XMLContext: java.awt.Font getSyntaxFont(int)>(i18);

        virtualinvoke r11.<java.awt.Graphics: void setFont(java.awt.Font)>($r15);

        $r16 = virtualinvoke r0.<javax.swing.text.PlainView: javax.swing.text.Segment getLineBuffer()>();

        $i11 = i16 - i19;

        virtualinvoke r2.<javax.swing.text.AbstractDocument: void getText(int,int,javax.swing.text.Segment)>(i19, $i11, $r16);

        i15 = staticinvoke <javax.swing.text.Utilities: int drawTabbedText(javax.swing.text.Segment,int,int,java.awt.Graphics,javax.swing.text.TabExpander,int)>($r16, i15, i12, r11, r0, i19);

        i19 = i16;

     label4:
        $r9 = r0.<org.apache.batik.util.gui.xmleditor.XMLView: org.apache.batik.util.gui.xmleditor.XMLScanner lexer>;

        $i9 = virtualinvoke $r9.<org.apache.batik.util.gui.xmleditor.XMLScanner: int scan(int)>(i17);

        $i10 = virtualinvoke $r3.<org.apache.batik.util.gui.xmleditor.XMLToken: int getStartOffset()>();

        i16 = $i9 + $i10;

        i18 = i17;

        $r10 = r0.<org.apache.batik.util.gui.xmleditor.XMLView: org.apache.batik.util.gui.xmleditor.XMLScanner lexer>;

        i17 = virtualinvoke $r10.<org.apache.batik.util.gui.xmleditor.XMLScanner: int getScanValue()>();

     label5:
        if i16 < i2 goto label3;

        $r17 = r0.<org.apache.batik.util.gui.xmleditor.XMLView: org.apache.batik.util.gui.xmleditor.XMLContext context>;

        $r18 = virtualinvoke $r17.<org.apache.batik.util.gui.xmleditor.XMLContext: java.awt.Color getSyntaxForeground(int)>(i18);

        virtualinvoke r11.<java.awt.Graphics: void setColor(java.awt.Color)>($r18);

        $r19 = r0.<org.apache.batik.util.gui.xmleditor.XMLView: org.apache.batik.util.gui.xmleditor.XMLContext context>;

        $r20 = virtualinvoke $r19.<org.apache.batik.util.gui.xmleditor.XMLContext: java.awt.Font getSyntaxFont(int)>(i18);

        virtualinvoke r11.<java.awt.Graphics: void setFont(java.awt.Font)>($r20);

        $r21 = virtualinvoke r0.<javax.swing.text.PlainView: javax.swing.text.Segment getLineBuffer()>();

        $i13 = i2 - i19;

        virtualinvoke r2.<javax.swing.text.AbstractDocument: void getText(int,int,javax.swing.text.Segment)>(i19, $i13, $r21);

        $i14 = staticinvoke <javax.swing.text.Utilities: int drawTabbedText(javax.swing.text.Segment,int,int,java.awt.Graphics,javax.swing.text.TabExpander,int)>($r21, i15, i12, r11, r0, i19);

        return $i14;
    }
}
