public final class com.hp.hpl.jena.tdb.transaction.Journal extends java.lang.Object implements org.apache.jena.atlas.lib.Sync, org.apache.jena.atlas.lib.Closeable
{
    private static org.slf4j.Logger log;
    private com.hp.hpl.jena.tdb.base.file.BufferChannel channel;
    private long position;
    private static int Overhead;
    private static final int NoId;
    private java.nio.ByteBuffer header;
    private static int SizeofCRC;
    private java.nio.ByteBuffer crcTrailer;

    public static boolean exists(com.hp.hpl.jena.tdb.base.file.Location)
    {
        com.hp.hpl.jena.tdb.base.file.Location r0;
        java.lang.String $r1;
        boolean $z0, $z1;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.file.Location;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.file.Location: boolean isMem()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r1 = staticinvoke <com.hp.hpl.jena.tdb.transaction.Journal: java.lang.String journalFilename(com.hp.hpl.jena.tdb.base.file.Location)>(r0);

        $z1 = staticinvoke <org.apache.jena.atlas.lib.FileOps: boolean exists(java.lang.String)>($r1);

        return $z1;
    }

    public static com.hp.hpl.jena.tdb.transaction.Journal create(com.hp.hpl.jena.tdb.base.file.Location)
    {
        com.hp.hpl.jena.tdb.base.file.Location r0;
        java.lang.String $r1;
        boolean $z0;
        com.hp.hpl.jena.tdb.transaction.Journal $r2;
        com.hp.hpl.jena.tdb.base.file.BufferChannel r3;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.file.Location;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.file.Location: boolean isMem()>();

        if $z0 == 0 goto label1;

        r3 = staticinvoke <com.hp.hpl.jena.tdb.base.file.BufferChannelMem: com.hp.hpl.jena.tdb.base.file.BufferChannel create()>();

        goto label2;

     label1:
        $r1 = staticinvoke <com.hp.hpl.jena.tdb.transaction.Journal: java.lang.String journalFilename(com.hp.hpl.jena.tdb.base.file.Location)>(r0);

        r3 = staticinvoke <com.hp.hpl.jena.tdb.base.file.BufferChannelFile: com.hp.hpl.jena.tdb.base.file.BufferChannelFile create(java.lang.String)>($r1);

     label2:
        $r2 = new com.hp.hpl.jena.tdb.transaction.Journal;

        specialinvoke $r2.<com.hp.hpl.jena.tdb.transaction.Journal: void <init>(com.hp.hpl.jena.tdb.base.file.BufferChannel)>(r3);

        return $r2;
    }

    private static java.lang.String journalFilename(com.hp.hpl.jena.tdb.base.file.Location)
    {
        com.hp.hpl.jena.tdb.base.file.Location r0;
        java.lang.String $r1;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.file.Location;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.file.Location: java.lang.String absolute(java.lang.String)>("journal.jrnl");

        return $r1;
    }

    public void <init>(com.hp.hpl.jena.tdb.base.file.BufferChannel)
    {
        int $i0, $i1;
        java.nio.ByteBuffer $r1, $r2;
        com.hp.hpl.jena.tdb.transaction.Journal r0;
        com.hp.hpl.jena.tdb.base.file.BufferChannel r3;

        r0 := @this: com.hp.hpl.jena.tdb.transaction.Journal;

        r3 := @parameter0: com.hp.hpl.jena.tdb.base.file.BufferChannel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = <com.hp.hpl.jena.tdb.transaction.Journal: int Overhead>;

        $r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i0);

        r0.<com.hp.hpl.jena.tdb.transaction.Journal: java.nio.ByteBuffer header> = $r1;

        $i1 = <com.hp.hpl.jena.tdb.transaction.Journal: int SizeofCRC>;

        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i1);

        r0.<com.hp.hpl.jena.tdb.transaction.Journal: java.nio.ByteBuffer crcTrailer> = $r2;

        r0.<com.hp.hpl.jena.tdb.transaction.Journal: com.hp.hpl.jena.tdb.base.file.BufferChannel channel> = r3;

        r0.<com.hp.hpl.jena.tdb.transaction.Journal: long position> = 0L;

        return;
    }

    public synchronized long writeJournal(com.hp.hpl.jena.tdb.transaction.JournalEntry)
    {
        long $l0, $l1, $l3;
        com.hp.hpl.jena.tdb.sys.FileRef $r3;
        byte $b2;
        com.hp.hpl.jena.tdb.base.block.Block $r4;
        int $i4;
        com.hp.hpl.jena.tdb.transaction.JournalEntry r1;
        com.hp.hpl.jena.tdb.transaction.JournalEntryType $r2;
        com.hp.hpl.jena.tdb.transaction.Journal r0;

        r0 := @this: com.hp.hpl.jena.tdb.transaction.Journal;

        r1 := @parameter0: com.hp.hpl.jena.tdb.transaction.JournalEntry;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.tdb.transaction.JournalEntry: com.hp.hpl.jena.tdb.transaction.JournalEntryType getType()>();

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.tdb.transaction.JournalEntry: com.hp.hpl.jena.tdb.sys.FileRef getFileRef()>();

        $r4 = virtualinvoke r1.<com.hp.hpl.jena.tdb.transaction.JournalEntry: com.hp.hpl.jena.tdb.base.block.Block getBlock()>();

        $l0 = virtualinvoke r0.<com.hp.hpl.jena.tdb.transaction.Journal: long write(com.hp.hpl.jena.tdb.transaction.JournalEntryType,com.hp.hpl.jena.tdb.sys.FileRef,com.hp.hpl.jena.tdb.base.block.Block)>($r2, $r3, $r4);

        $l1 = virtualinvoke r1.<com.hp.hpl.jena.tdb.transaction.JournalEntry: long getPosition()>();

        $b2 = $l1 cmp 0L;

        $i4 = (int) $b2;

        if $i4 >= 0 goto label1;

        virtualinvoke r1.<com.hp.hpl.jena.tdb.transaction.JournalEntry: void setPosition(long)>($l0);

        $l3 = r0.<com.hp.hpl.jena.tdb.transaction.Journal: long position>;

        virtualinvoke r1.<com.hp.hpl.jena.tdb.transaction.JournalEntry: void setEndPosition(long)>($l3);

     label1:
        return $l0;
    }

    public synchronized long write(com.hp.hpl.jena.tdb.transaction.JournalEntryType, com.hp.hpl.jena.tdb.sys.FileRef, com.hp.hpl.jena.tdb.base.block.Block)
    {
        byte[] $r16, $r19, $r23;
        java.nio.ByteBuffer r1, $r3, $r5, $r6, $r8, $r10, $r11, $r12, $r15, $r17, $r18, $r20, $r24;
        com.hp.hpl.jena.tdb.sys.FileRef r7;
        java.util.zip.Adler32 $r14;
        java.lang.Long $r9;
        com.hp.hpl.jena.tdb.transaction.Journal r2;
        long $l2, $l8, $l9, $l10, $l13;
        com.hp.hpl.jena.tdb.base.file.BufferChannel $r13, $r21, $r22;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, $i11, $i12, i14, i15, $i16, i17;
        com.hp.hpl.jena.tdb.transaction.JournalEntryType r4;
        com.hp.hpl.jena.tdb.base.block.Block r0;

        r2 := @this: com.hp.hpl.jena.tdb.transaction.Journal;

        r4 := @parameter0: com.hp.hpl.jena.tdb.transaction.JournalEntryType;

        r7 := @parameter1: com.hp.hpl.jena.tdb.sys.FileRef;

        r0 := @parameter2: com.hp.hpl.jena.tdb.base.block.Block;

        if r0 != null goto label1;

        $r24 = null;

        goto label2;

     label1:
        $r24 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.block.Block: java.nio.ByteBuffer getByteBuffer()>();

     label2:
        r1 = $r24;

        $l13 = r2.<com.hp.hpl.jena.tdb.transaction.Journal: long position>;

        i14 = 0;

        i15 = 0;

        if $r24 == null goto label3;

        i14 = virtualinvoke $r24.<java.nio.ByteBuffer: int capacity()>();

        i15 = virtualinvoke $r24.<java.nio.ByteBuffer: int remaining()>();

     label3:
        $r3 = r2.<com.hp.hpl.jena.tdb.transaction.Journal: java.nio.ByteBuffer header>;

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        $r5 = r2.<com.hp.hpl.jena.tdb.transaction.Journal: java.nio.ByteBuffer header>;

        $i0 = r4.<com.hp.hpl.jena.tdb.transaction.JournalEntryType: int id>;

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i0);

        $r6 = r2.<com.hp.hpl.jena.tdb.transaction.Journal: java.nio.ByteBuffer header>;

        virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>(i14);

        $r8 = r2.<com.hp.hpl.jena.tdb.transaction.Journal: java.nio.ByteBuffer header>;

        $i1 = virtualinvoke r7.<com.hp.hpl.jena.tdb.sys.FileRef: int getId()>();

        virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i1);

        if r0 != null goto label4;

        $i16 = 5;

        goto label5;

     label4:
        $r9 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.block.Block: java.lang.Long getId()>();

        $i16 = virtualinvoke $r9.<java.lang.Long: int intValue()>();

     label5:
        $r10 = r2.<com.hp.hpl.jena.tdb.transaction.Journal: java.nio.ByteBuffer header>;

        virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i16);

        $r11 = r2.<com.hp.hpl.jena.tdb.transaction.Journal: java.nio.ByteBuffer header>;

        virtualinvoke $r11.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        $r13 = r2.<com.hp.hpl.jena.tdb.transaction.Journal: com.hp.hpl.jena.tdb.base.file.BufferChannel channel>;

        $r12 = r2.<com.hp.hpl.jena.tdb.transaction.Journal: java.nio.ByteBuffer header>;

        interfaceinvoke $r13.<com.hp.hpl.jena.tdb.base.file.BufferChannel: int write(java.nio.ByteBuffer)>($r12);

        $r14 = new java.util.zip.Adler32;

        specialinvoke $r14.<java.util.zip.Adler32: void <init>()>();

        $r15 = r2.<com.hp.hpl.jena.tdb.transaction.Journal: java.nio.ByteBuffer header>;

        $r16 = virtualinvoke $r15.<java.nio.ByteBuffer: byte[] array()>();

        virtualinvoke $r14.<java.util.zip.Adler32: void update(byte[])>($r16);

        if i15 <= 0 goto label8;

        $i11 = virtualinvoke r1.<java.nio.ByteBuffer: int limit()>();

        $i12 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>();

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>(i14);

        i17 = i15;

     label6:
        if i17 >= i14 goto label7;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,byte)>(i17, 0);

        i17 = i17 + 1;

        goto label6;

     label7:
        $r22 = r2.<com.hp.hpl.jena.tdb.transaction.Journal: com.hp.hpl.jena.tdb.base.file.BufferChannel channel>;

        interfaceinvoke $r22.<com.hp.hpl.jena.tdb.base.file.BufferChannel: int write(java.nio.ByteBuffer)>(r1);

        $r23 = virtualinvoke r1.<java.nio.ByteBuffer: byte[] array()>();

        virtualinvoke $r14.<java.util.zip.Adler32: void update(byte[])>($r23);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i12);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i11);

     label8:
        $r17 = r2.<com.hp.hpl.jena.tdb.transaction.Journal: java.nio.ByteBuffer crcTrailer>;

        virtualinvoke $r17.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        $l2 = virtualinvoke $r14.<java.util.zip.Adler32: long getValue()>();

        $i3 = (int) $l2;

        $r18 = r2.<com.hp.hpl.jena.tdb.transaction.Journal: java.nio.ByteBuffer crcTrailer>;

        $r19 = virtualinvoke $r18.<java.nio.ByteBuffer: byte[] array()>();

        staticinvoke <org.apache.jena.atlas.lib.Bytes: void setInt(int,byte[])>($i3, $r19);

        $r21 = r2.<com.hp.hpl.jena.tdb.transaction.Journal: com.hp.hpl.jena.tdb.base.file.BufferChannel channel>;

        $r20 = r2.<com.hp.hpl.jena.tdb.transaction.Journal: java.nio.ByteBuffer crcTrailer>;

        interfaceinvoke $r21.<com.hp.hpl.jena.tdb.base.file.BufferChannel: int write(java.nio.ByteBuffer)>($r20);

        $l9 = r2.<com.hp.hpl.jena.tdb.transaction.Journal: long position>;

        $i4 = <com.hp.hpl.jena.tdb.transaction.Journal: int Overhead>;

        $i6 = $i4 + i15;

        $i5 = <com.hp.hpl.jena.tdb.transaction.Journal: int SizeofCRC>;

        $i7 = $i6 + $i5;

        $l8 = (long) $i7;

        $l10 = $l9 + $l8;

        r2.<com.hp.hpl.jena.tdb.transaction.Journal: long position> = $l10;

        return $l13;
    }

    public synchronized com.hp.hpl.jena.tdb.transaction.JournalEntry readJournal(long)
    {
        com.hp.hpl.jena.tdb.transaction.JournalEntry $r1;
        long l0;
        com.hp.hpl.jena.tdb.transaction.Journal r0;

        r0 := @this: com.hp.hpl.jena.tdb.transaction.Journal;

        l0 := @parameter0: long;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.tdb.transaction.Journal: com.hp.hpl.jena.tdb.transaction.JournalEntry _readJournal(long)>(l0);

        return $r1;
    }

    private com.hp.hpl.jena.tdb.transaction.JournalEntry _readJournal(long)
    {
        long $l0, l1, $l3;
        com.hp.hpl.jena.tdb.base.file.BufferChannel $r1, $r3, $r4, $r5;
        byte $b2, $b4;
        com.hp.hpl.jena.tdb.transaction.JournalEntry $r2;
        com.hp.hpl.jena.tdb.transaction.Journal r0;

        r0 := @this: com.hp.hpl.jena.tdb.transaction.Journal;

        l1 := @parameter0: long;

        $r1 = r0.<com.hp.hpl.jena.tdb.transaction.Journal: com.hp.hpl.jena.tdb.base.file.BufferChannel channel>;

        $l0 = interfaceinvoke $r1.<com.hp.hpl.jena.tdb.base.file.BufferChannel: long position()>();

        $b2 = $l0 cmp l1;

        if $b2 == 0 goto label1;

        $r5 = r0.<com.hp.hpl.jena.tdb.transaction.Journal: com.hp.hpl.jena.tdb.base.file.BufferChannel channel>;

        interfaceinvoke $r5.<com.hp.hpl.jena.tdb.base.file.BufferChannel: void position(long)>(l1);

     label1:
        $r2 = specialinvoke r0.<com.hp.hpl.jena.tdb.transaction.Journal: com.hp.hpl.jena.tdb.transaction.JournalEntry _read()>();

        $r3 = r0.<com.hp.hpl.jena.tdb.transaction.Journal: com.hp.hpl.jena.tdb.base.file.BufferChannel channel>;

        $l3 = interfaceinvoke $r3.<com.hp.hpl.jena.tdb.base.file.BufferChannel: long position()>();

        virtualinvoke $r2.<com.hp.hpl.jena.tdb.transaction.JournalEntry: void setPosition(long)>(l1);

        virtualinvoke $r2.<com.hp.hpl.jena.tdb.transaction.JournalEntry: void setEndPosition(long)>($l3);

        $b4 = $l0 cmp l1;

        if $b4 == 0 goto label2;

        $r4 = r0.<com.hp.hpl.jena.tdb.transaction.Journal: com.hp.hpl.jena.tdb.base.file.BufferChannel channel>;

        interfaceinvoke $r4.<com.hp.hpl.jena.tdb.base.file.BufferChannel: void position(long)>($l0);

     label2:
        return $r2;
    }

    private com.hp.hpl.jena.tdb.transaction.JournalEntry _read()
    {
        byte[] $r11, $r14, $r19;
        java.nio.ByteBuffer $r1, $r2, $r4, $r5, $r6, $r7, $r8, $r10, $r12, $r15, $r16, $r18;
        com.hp.hpl.jena.tdb.sys.FileRef $r21;
        java.util.zip.Adler32 $r42;
        com.hp.hpl.jena.tdb.transaction.TDBTransactionException $r41, $r44, $r46, $r47;
        com.hp.hpl.jena.tdb.transaction.Journal r0;
        com.hp.hpl.jena.tdb.transaction.JournalEntry $r49;
        java.lang.StringBuilder $r27, $r28, $r29, $r30, $r31, $r35, $r36, $r37, $r38, $r43, $r45;
        long $l9, $l11;
        com.hp.hpl.jena.tdb.base.file.BufferChannel $r3, $r13, $r17;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i12, $i14;
        java.lang.String $r32, $r39;
        com.hp.hpl.jena.tdb.transaction.JournalEntryType $r20;
        com.hp.hpl.jena.tdb.base.block.Block $r48;

        r0 := @this: com.hp.hpl.jena.tdb.transaction.Journal;

        $r1 = r0.<com.hp.hpl.jena.tdb.transaction.Journal: java.nio.ByteBuffer header>;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        $r3 = r0.<com.hp.hpl.jena.tdb.transaction.Journal: com.hp.hpl.jena.tdb.base.file.BufferChannel channel>;

        $r2 = r0.<com.hp.hpl.jena.tdb.transaction.Journal: java.nio.ByteBuffer header>;

        $i0 = interfaceinvoke $r3.<com.hp.hpl.jena.tdb.base.file.BufferChannel: int read(java.nio.ByteBuffer)>($r2);

        $i14 = (int) -1;

        if $i0 != $i14 goto label1;

        $r41 = new com.hp.hpl.jena.tdb.transaction.TDBTransactionException;

        specialinvoke $r41.<com.hp.hpl.jena.tdb.transaction.TDBTransactionException: void <init>(java.lang.String)>("Read off the end of a journal file");

        throw $r41;

     label1:
        $r4 = r0.<com.hp.hpl.jena.tdb.transaction.Journal: java.nio.ByteBuffer header>;

        virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r5 = r0.<com.hp.hpl.jena.tdb.transaction.Journal: java.nio.ByteBuffer header>;

        $i1 = virtualinvoke $r5.<java.nio.ByteBuffer: int getInt()>();

        $r6 = r0.<com.hp.hpl.jena.tdb.transaction.Journal: java.nio.ByteBuffer header>;

        $i2 = virtualinvoke $r6.<java.nio.ByteBuffer: int getInt()>();

        $r7 = r0.<com.hp.hpl.jena.tdb.transaction.Journal: java.nio.ByteBuffer header>;

        $i3 = virtualinvoke $r7.<java.nio.ByteBuffer: int getInt()>();

        $r8 = r0.<com.hp.hpl.jena.tdb.transaction.Journal: java.nio.ByteBuffer header>;

        $i4 = virtualinvoke $r8.<java.nio.ByteBuffer: int getInt()>();

        $r42 = new java.util.zip.Adler32;

        specialinvoke $r42.<java.util.zip.Adler32: void <init>()>();

        $r10 = r0.<com.hp.hpl.jena.tdb.transaction.Journal: java.nio.ByteBuffer header>;

        $r11 = virtualinvoke $r10.<java.nio.ByteBuffer: byte[] array()>();

        virtualinvoke $r42.<java.util.zip.Adler32: void update(byte[])>($r11);

        $r12 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i2);

        $r13 = r0.<com.hp.hpl.jena.tdb.transaction.Journal: com.hp.hpl.jena.tdb.base.file.BufferChannel channel>;

        $i5 = interfaceinvoke $r13.<com.hp.hpl.jena.tdb.base.file.BufferChannel: int read(java.nio.ByteBuffer)>($r12);

        if $i5 == $i2 goto label2;

        $r44 = new com.hp.hpl.jena.tdb.transaction.TDBTransactionException;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to read the journal entry: wanted ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes, got ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r44.<com.hp.hpl.jena.tdb.transaction.TDBTransactionException: void <init>(java.lang.String)>($r39);

        throw $r44;

     label2:
        $r14 = virtualinvoke $r12.<java.nio.ByteBuffer: byte[] array()>();

        virtualinvoke $r42.<java.util.zip.Adler32: void update(byte[])>($r14);

        virtualinvoke $r12.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r15 = r0.<com.hp.hpl.jena.tdb.transaction.Journal: java.nio.ByteBuffer crcTrailer>;

        virtualinvoke $r15.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        $r17 = r0.<com.hp.hpl.jena.tdb.transaction.Journal: com.hp.hpl.jena.tdb.base.file.BufferChannel channel>;

        $r16 = r0.<com.hp.hpl.jena.tdb.transaction.Journal: java.nio.ByteBuffer crcTrailer>;

        $i6 = interfaceinvoke $r17.<com.hp.hpl.jena.tdb.base.file.BufferChannel: int read(java.nio.ByteBuffer)>($r16);

        $i7 = <com.hp.hpl.jena.tdb.transaction.Journal: int SizeofCRC>;

        if $i6 == $i7 goto label3;

        $r46 = new com.hp.hpl.jena.tdb.transaction.TDBTransactionException;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to read block checksum (got ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes, not ");

        $i12 = <com.hp.hpl.jena.tdb.transaction.Journal: int SizeofCRC>;

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r46.<com.hp.hpl.jena.tdb.transaction.TDBTransactionException: void <init>(java.lang.String)>($r32);

        throw $r46;

     label3:
        $r18 = r0.<com.hp.hpl.jena.tdb.transaction.Journal: java.nio.ByteBuffer crcTrailer>;

        $r19 = virtualinvoke $r18.<java.nio.ByteBuffer: byte[] array()>();

        $i8 = staticinvoke <org.apache.jena.atlas.lib.Bytes: int getInt(byte[])>($r19);

        $l9 = virtualinvoke $r42.<java.util.zip.Adler32: long getValue()>();

        $i10 = (int) $l9;

        if $i8 == $i10 goto label4;

        $r47 = new com.hp.hpl.jena.tdb.transaction.TDBTransactionException;

        specialinvoke $r47.<com.hp.hpl.jena.tdb.transaction.TDBTransactionException: void <init>(java.lang.String)>("Checksum error reading from the Journal.");

        throw $r47;

     label4:
        $r20 = staticinvoke <com.hp.hpl.jena.tdb.transaction.JournalEntryType: com.hp.hpl.jena.tdb.transaction.JournalEntryType type(int)>($i1);

        $r21 = staticinvoke <com.hp.hpl.jena.tdb.sys.FileRef: com.hp.hpl.jena.tdb.sys.FileRef get(int)>($i3);

        $r48 = new com.hp.hpl.jena.tdb.base.block.Block;

        $l11 = (long) $i4;

        specialinvoke $r48.<com.hp.hpl.jena.tdb.base.block.Block: void <init>(long,java.nio.ByteBuffer)>($l11, $r12);

        $r49 = new com.hp.hpl.jena.tdb.transaction.JournalEntry;

        specialinvoke $r49.<com.hp.hpl.jena.tdb.transaction.JournalEntry: void <init>(com.hp.hpl.jena.tdb.transaction.JournalEntryType,com.hp.hpl.jena.tdb.sys.FileRef,com.hp.hpl.jena.tdb.base.block.Block)>($r20, $r21, $r48);

        return $r49;
    }

    public java.util.Iterator entries()
    {
        com.hp.hpl.jena.tdb.transaction.Journal$IteratorEntries $r0;
        com.hp.hpl.jena.tdb.transaction.Journal r1;

        r1 := @this: com.hp.hpl.jena.tdb.transaction.Journal;

        $r0 = new com.hp.hpl.jena.tdb.transaction.Journal$IteratorEntries;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.transaction.Journal$IteratorEntries: void <init>(com.hp.hpl.jena.tdb.transaction.Journal,long)>(r1, 0L);

        return $r0;
    }

    public synchronized java.util.Iterator entries(long)
    {
        com.hp.hpl.jena.tdb.transaction.Journal$IteratorEntries $r0;
        long l0;
        com.hp.hpl.jena.tdb.transaction.Journal r1;

        r1 := @this: com.hp.hpl.jena.tdb.transaction.Journal;

        l0 := @parameter0: long;

        $r0 = new com.hp.hpl.jena.tdb.transaction.Journal$IteratorEntries;

        specialinvoke $r0.<com.hp.hpl.jena.tdb.transaction.Journal$IteratorEntries: void <init>(com.hp.hpl.jena.tdb.transaction.Journal,long)>(r1, l0);

        return $r0;
    }

    public void sync()
    {
        com.hp.hpl.jena.tdb.transaction.Journal r0;
        com.hp.hpl.jena.tdb.base.file.BufferChannel $r1;

        r0 := @this: com.hp.hpl.jena.tdb.transaction.Journal;

        $r1 = r0.<com.hp.hpl.jena.tdb.transaction.Journal: com.hp.hpl.jena.tdb.base.file.BufferChannel channel>;

        interfaceinvoke $r1.<com.hp.hpl.jena.tdb.base.file.BufferChannel: void sync()>();

        return;
    }

    public void close()
    {
        com.hp.hpl.jena.tdb.transaction.Journal r0;
        com.hp.hpl.jena.tdb.base.file.BufferChannel $r1;

        r0 := @this: com.hp.hpl.jena.tdb.transaction.Journal;

        $r1 = r0.<com.hp.hpl.jena.tdb.transaction.Journal: com.hp.hpl.jena.tdb.base.file.BufferChannel channel>;

        interfaceinvoke $r1.<com.hp.hpl.jena.tdb.base.file.BufferChannel: void close()>();

        return;
    }

    public long size()
    {
        long $l0;
        com.hp.hpl.jena.tdb.transaction.Journal r0;
        com.hp.hpl.jena.tdb.base.file.BufferChannel $r1;

        r0 := @this: com.hp.hpl.jena.tdb.transaction.Journal;

        $r1 = r0.<com.hp.hpl.jena.tdb.transaction.Journal: com.hp.hpl.jena.tdb.base.file.BufferChannel channel>;

        $l0 = interfaceinvoke $r1.<com.hp.hpl.jena.tdb.base.file.BufferChannel: long size()>();

        return $l0;
    }

    public boolean isEmpty()
    {
        byte $b1;
        long $l0;
        com.hp.hpl.jena.tdb.transaction.Journal r0;
        com.hp.hpl.jena.tdb.base.file.BufferChannel $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.transaction.Journal;

        $r1 = r0.<com.hp.hpl.jena.tdb.transaction.Journal: com.hp.hpl.jena.tdb.base.file.BufferChannel channel>;

        $l0 = interfaceinvoke $r1.<com.hp.hpl.jena.tdb.base.file.BufferChannel: long size()>();

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void truncate(long)
    {
        long l0;
        com.hp.hpl.jena.tdb.transaction.Journal r0;
        com.hp.hpl.jena.tdb.base.file.BufferChannel $r1;

        r0 := @this: com.hp.hpl.jena.tdb.transaction.Journal;

        l0 := @parameter0: long;

        $r1 = r0.<com.hp.hpl.jena.tdb.transaction.Journal: com.hp.hpl.jena.tdb.base.file.BufferChannel channel>;

        interfaceinvoke $r1.<com.hp.hpl.jena.tdb.base.file.BufferChannel: void truncate(long)>(l0);

        return;
    }

    public void append()
    {
        long $l0;
        com.hp.hpl.jena.tdb.transaction.Journal r0;

        r0 := @this: com.hp.hpl.jena.tdb.transaction.Journal;

        $l0 = virtualinvoke r0.<com.hp.hpl.jena.tdb.transaction.Journal: long size()>();

        virtualinvoke r0.<com.hp.hpl.jena.tdb.transaction.Journal: void position(long)>($l0);

        return;
    }

    public long position()
    {
        long $l0;
        com.hp.hpl.jena.tdb.transaction.Journal r0;
        com.hp.hpl.jena.tdb.base.file.BufferChannel $r1;

        r0 := @this: com.hp.hpl.jena.tdb.transaction.Journal;

        $r1 = r0.<com.hp.hpl.jena.tdb.transaction.Journal: com.hp.hpl.jena.tdb.base.file.BufferChannel channel>;

        $l0 = interfaceinvoke $r1.<com.hp.hpl.jena.tdb.base.file.BufferChannel: long position()>();

        return $l0;
    }

    public void position(long)
    {
        long l0;
        com.hp.hpl.jena.tdb.transaction.Journal r0;
        com.hp.hpl.jena.tdb.base.file.BufferChannel $r1;

        r0 := @this: com.hp.hpl.jena.tdb.transaction.Journal;

        l0 := @parameter0: long;

        $r1 = r0.<com.hp.hpl.jena.tdb.transaction.Journal: com.hp.hpl.jena.tdb.base.file.BufferChannel channel>;

        interfaceinvoke $r1.<com.hp.hpl.jena.tdb.base.file.BufferChannel: void position(long)>(l0);

        return;
    }

    public java.lang.String getFilename()
    {
        java.lang.String $r2;
        com.hp.hpl.jena.tdb.transaction.Journal r0;
        com.hp.hpl.jena.tdb.base.file.BufferChannel $r1;

        r0 := @this: com.hp.hpl.jena.tdb.transaction.Journal;

        $r1 = r0.<com.hp.hpl.jena.tdb.transaction.Journal: com.hp.hpl.jena.tdb.base.file.BufferChannel channel>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.tdb.base.file.BufferChannel: java.lang.String getFilename()>();

        return $r2;
    }

    static com.hp.hpl.jena.tdb.base.file.BufferChannel access$000(com.hp.hpl.jena.tdb.transaction.Journal)
    {
        com.hp.hpl.jena.tdb.transaction.Journal r0;
        com.hp.hpl.jena.tdb.base.file.BufferChannel $r1;

        r0 := @parameter0: com.hp.hpl.jena.tdb.transaction.Journal;

        $r1 = r0.<com.hp.hpl.jena.tdb.transaction.Journal: com.hp.hpl.jena.tdb.base.file.BufferChannel channel>;

        return $r1;
    }

    static com.hp.hpl.jena.tdb.transaction.JournalEntry access$100(com.hp.hpl.jena.tdb.transaction.Journal, long)
    {
        com.hp.hpl.jena.tdb.transaction.JournalEntry $r1;
        long l0;
        com.hp.hpl.jena.tdb.transaction.Journal r0;

        r0 := @parameter0: com.hp.hpl.jena.tdb.transaction.Journal;

        l0 := @parameter1: long;

        $r1 = specialinvoke r0.<com.hp.hpl.jena.tdb.transaction.Journal: com.hp.hpl.jena.tdb.transaction.JournalEntry _readJournal(long)>(l0);

        return $r1;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        <com.hp.hpl.jena.tdb.transaction.Journal: int NoId> = 5;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/hp/hpl/jena/tdb/transaction/Journal;");

        <com.hp.hpl.jena.tdb.transaction.Journal: org.slf4j.Logger log> = $r0;

        <com.hp.hpl.jena.tdb.transaction.Journal: int Overhead> = 16;

        <com.hp.hpl.jena.tdb.transaction.Journal: int SizeofCRC> = 4;

        return;
    }
}
