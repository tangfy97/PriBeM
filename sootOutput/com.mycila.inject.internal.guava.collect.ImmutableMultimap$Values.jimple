class com.mycila.inject.internal.guava.collect.ImmutableMultimap$Values extends com.mycila.inject.internal.guava.collect.ImmutableCollection
{
    final com.mycila.inject.internal.guava.collect.ImmutableMultimap multimap;
    private static final long serialVersionUID;

    void <init>(com.mycila.inject.internal.guava.collect.ImmutableMultimap)
    {
        com.mycila.inject.internal.guava.collect.ImmutableMultimap r1;
        com.mycila.inject.internal.guava.collect.ImmutableMultimap$Values r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableMultimap$Values;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.ImmutableMultimap;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.ImmutableCollection: void <init>()>();

        r0.<com.mycila.inject.internal.guava.collect.ImmutableMultimap$Values: com.mycila.inject.internal.guava.collect.ImmutableMultimap multimap> = r1;

        return;
    }

    public com.mycila.inject.internal.guava.collect.UnmodifiableIterator iterator()
    {
        com.mycila.inject.internal.guava.collect.ImmutableMultimap$Values$1 $r4;
        com.mycila.inject.internal.guava.collect.ImmutableCollection $r2;
        com.mycila.inject.internal.guava.collect.ImmutableMultimap $r1;
        com.mycila.inject.internal.guava.collect.ImmutableMultimap$Values r0;
        com.mycila.inject.internal.guava.collect.UnmodifiableIterator $r3;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableMultimap$Values;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.ImmutableMultimap$Values: com.mycila.inject.internal.guava.collect.ImmutableMultimap multimap>;

        $r2 = virtualinvoke $r1.<com.mycila.inject.internal.guava.collect.ImmutableMultimap: com.mycila.inject.internal.guava.collect.ImmutableCollection entries()>();

        $r3 = virtualinvoke $r2.<com.mycila.inject.internal.guava.collect.ImmutableCollection: com.mycila.inject.internal.guava.collect.UnmodifiableIterator iterator()>();

        $r4 = new com.mycila.inject.internal.guava.collect.ImmutableMultimap$Values$1;

        specialinvoke $r4.<com.mycila.inject.internal.guava.collect.ImmutableMultimap$Values$1: void <init>(com.mycila.inject.internal.guava.collect.ImmutableMultimap$Values,java.util.Iterator)>(r0, $r3);

        return $r4;
    }

    public int size()
    {
        int $i0;
        com.mycila.inject.internal.guava.collect.ImmutableMultimap $r1;
        com.mycila.inject.internal.guava.collect.ImmutableMultimap$Values r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableMultimap$Values;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.ImmutableMultimap$Values: com.mycila.inject.internal.guava.collect.ImmutableMultimap multimap>;

        $i0 = virtualinvoke $r1.<com.mycila.inject.internal.guava.collect.ImmutableMultimap: int size()>();

        return $i0;
    }

    boolean isPartialView()
    {
        com.mycila.inject.internal.guava.collect.ImmutableMultimap$Values r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableMultimap$Values;

        return 1;
    }

    public volatile java.util.Iterator iterator()
    {
        com.mycila.inject.internal.guava.collect.ImmutableMultimap$Values r0;
        com.mycila.inject.internal.guava.collect.UnmodifiableIterator $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.ImmutableMultimap$Values;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ImmutableMultimap$Values: com.mycila.inject.internal.guava.collect.UnmodifiableIterator iterator()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <com.mycila.inject.internal.guava.collect.ImmutableMultimap$Values: long serialVersionUID> = 0L;

        return;
    }
}
