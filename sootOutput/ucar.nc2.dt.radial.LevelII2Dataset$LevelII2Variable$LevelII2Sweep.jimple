class ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep extends java.lang.Object implements ucar.nc2.dt.RadialDatasetSweep$Sweep
{
    double meanElevation;
    double meanAzimuth;
    int nrays;
    int ngates;
    int sweepno;
    ucar.nc2.Variable sweepVar;
    final ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1;

    void <init>(ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable, ucar.nc2.Variable, int, int, int)
    {
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable r1;
        int i0, i1, i2;
        ucar.nc2.Variable r2;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        r1 := @parameter0: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable;

        r2 := @parameter1: ucar.nc2.Variable;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: double meanElevation> = #NaN;

        r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: double meanAzimuth> = #NaN;

        r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.Variable sweepVar> = r2;

        r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno> = i0;

        r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int nrays> = i1;

        r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int ngates> = i2;

        return;
    }

    public ucar.nc2.Variable getsweepVar()
    {
        ucar.nc2.Variable $r1;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        $r1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.Variable sweepVar>;

        return $r1;
    }

    public float[] readData() throws java.io.IOException
    {
        ucar.nc2.dt.radial.LevelII2Dataset $r3, $r4;
        float[] $r7, $r9, $r10;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable $r1, $r2, $r6, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7;
        boolean $z0;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;
        ucar.nc2.dataset.NetcdfDataset $r5;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        $r1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $r4 = $r1.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r2 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $r3 = $r2.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r5 = staticinvoke <ucar.nc2.dt.radial.LevelII2Dataset: ucar.nc2.dataset.NetcdfDataset access$100(ucar.nc2.dt.radial.LevelII2Dataset)>($r3);

        $z0 = virtualinvoke $r4.<ucar.nc2.dt.radial.LevelII2Dataset: boolean isHighResolution(ucar.nc2.dataset.NetcdfDataset)>($r5);

        if $z0 != 0 goto label1;

        $i7 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        $r10 = specialinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: float[] sweepData(int)>($i7);

        return $r10;

     label1:
        $i2 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        $r6 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $i0 = $r6.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: int nsweepsHR>;

        $i1 = $i0 - 1;

        if $i2 <= $i1 goto label2;

        $i5 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        $r8 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $i4 = $r8.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: int nsweepsHR>;

        i6 = $i5 - $i4;

        $r9 = specialinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: float[] sweepData(int)>(i6);

        return $r9;

     label2:
        $i3 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        $r7 = specialinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: float[] sweepData(int)>($i3);

        return $r7;
    }

    private float[] sweepData(int)
    {
        java.io.IOException $r6;
        float[] $r11, $r12;
        ucar.ma2.Array $r5, r8;
        ucar.ma2.InvalidRangeException $r7;
        int[] $r2, r3;
        int i0;
        ucar.nc2.Variable $r1, $r4;
        java.lang.Class $r9;
        java.lang.Object $r10;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.Variable sweepVar>;

        $r2 = virtualinvoke $r1.<ucar.nc2.Variable: int[] getShape()>();

        r3 = newarray (int)[3];

        r8 = null;

        r3[0] = i0;

        $r2[0] = 1;

     label1:
        $r4 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.Variable sweepVar>;

        $r5 = virtualinvoke $r4.<ucar.nc2.Variable: ucar.ma2.Array read(int[],int[])>(r3, $r2);

        r8 = virtualinvoke $r5.<ucar.ma2.Array: ucar.ma2.Array reduce()>();

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        virtualinvoke $r7.<ucar.ma2.InvalidRangeException: void printStackTrace()>();

        goto label5;

     label4:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.io.IOException: void printStackTrace()>();

     label5:
        $r9 = <java.lang.Float: java.lang.Class TYPE>;

        $r10 = virtualinvoke r8.<ucar.ma2.Array: java.lang.Object get1DJavaArray(java.lang.Class)>($r9);

        $r11 = (float[]) $r10;

        $r12 = (float[]) $r11;

        return $r12;

        catch ucar.ma2.InvalidRangeException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
    }

    public float[] readData(int) throws java.io.IOException
    {
        ucar.nc2.dt.radial.LevelII2Dataset $r3, $r4;
        float[] $r7, $r9, $r10;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable $r1, $r2, $r6, $r8;
        int $i0, $i1, i2, $i3, $i4, $i5, i6, $i7;
        boolean $z0;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;
        ucar.nc2.dataset.NetcdfDataset $r5;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        i2 := @parameter0: int;

        $r1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $r4 = $r1.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r2 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $r3 = $r2.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r5 = staticinvoke <ucar.nc2.dt.radial.LevelII2Dataset: ucar.nc2.dataset.NetcdfDataset access$100(ucar.nc2.dt.radial.LevelII2Dataset)>($r3);

        $z0 = virtualinvoke $r4.<ucar.nc2.dt.radial.LevelII2Dataset: boolean isHighResolution(ucar.nc2.dataset.NetcdfDataset)>($r5);

        if $z0 != 0 goto label1;

        $i7 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        $r10 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: float[] rayData(int,int)>($i7, i2);

        return $r10;

     label1:
        $i1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        $r6 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $i0 = $r6.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: int nsweepsHR>;

        if $i1 < $i0 goto label2;

        $i5 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        $r8 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $i4 = $r8.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: int nsweepsHR>;

        i6 = $i5 - $i4;

        $r9 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: float[] rayData(int,int)>(i6, i2);

        return $r9;

     label2:
        $i3 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        $r7 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: float[] rayData(int,int)>($i3, i2);

        return $r7;
    }

    public float[] rayData(int, int) throws java.io.IOException
    {
        java.io.IOException $r6;
        float[] $r11, $r12;
        ucar.ma2.Array $r5, r8;
        ucar.ma2.InvalidRangeException $r7;
        int[] $r2, r3;
        int i0, i1;
        ucar.nc2.Variable $r1, $r4;
        java.lang.Class $r9;
        java.lang.Object $r10;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.Variable sweepVar>;

        $r2 = virtualinvoke $r1.<ucar.nc2.Variable: int[] getShape()>();

        r3 = newarray (int)[3];

        r8 = null;

        r3[0] = i0;

        r3[1] = i1;

        $r2[0] = 1;

        $r2[1] = 1;

     label1:
        $r4 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.Variable sweepVar>;

        $r5 = virtualinvoke $r4.<ucar.nc2.Variable: ucar.ma2.Array read(int[],int[])>(r3, $r2);

        r8 = virtualinvoke $r5.<ucar.ma2.Array: ucar.ma2.Array reduce()>();

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        virtualinvoke $r7.<ucar.ma2.InvalidRangeException: void printStackTrace()>();

        goto label5;

     label4:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.io.IOException: void printStackTrace()>();

     label5:
        $r9 = <java.lang.Float: java.lang.Class TYPE>;

        $r10 = virtualinvoke r8.<ucar.ma2.Array: java.lang.Object get1DJavaArray(java.lang.Class)>($r9);

        $r11 = (float[]) $r10;

        $r12 = (float[]) $r11;

        return $r12;

        catch ucar.ma2.InvalidRangeException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
    }

    public void setMeanElevation()
    {
        ucar.nc2.dt.radial.LevelII2Dataset $r6, $r7;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable $r4, $r5, $r9, $r14;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6;
        ucar.nc2.Variable $r1;
        java.lang.String $r2, $r3, $r13;
        boolean $z0;
        java.lang.StringBuilder $r10, $r11, $r12;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;
        ucar.nc2.dataset.NetcdfDataset $r8;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        $r1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.Variable sweepVar>;

        $r2 = virtualinvoke $r1.<ucar.nc2.Variable: java.lang.String getName()>();

        $r3 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: java.lang.String getRaidalVarCoordinateName(java.lang.String,java.lang.String)>("elevation", $r2);

        $r4 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $r7 = $r4.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r5 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $r6 = $r5.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r8 = staticinvoke <ucar.nc2.dt.radial.LevelII2Dataset: ucar.nc2.dataset.NetcdfDataset access$100(ucar.nc2.dt.radial.LevelII2Dataset)>($r6);

        $z0 = virtualinvoke $r7.<ucar.nc2.dt.radial.LevelII2Dataset: boolean isHighResolution(ucar.nc2.dataset.NetcdfDataset)>($r8);

        if $z0 != 0 goto label1;

        $i6 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        specialinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: void setMeanEle(java.lang.String,int)>($r3, $i6);

        goto label3;

     label1:
        $i1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        $r9 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $i0 = $r9.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: int nsweepsHR>;

        if $i1 < $i0 goto label2;

        $i4 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        $r14 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $i3 = $r14.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: int nsweepsHR>;

        i5 = $i4 - $i3;

        specialinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: void setMeanEle(java.lang.String,int)>($r3, i5);

        goto label3;

     label2:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_HI");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $i2 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        specialinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: void setMeanEle(java.lang.String,int)>($r13, $i2);

     label3:
        return;
    }

    private void setMeanEle(java.lang.String, int)
    {
        ucar.nc2.dt.radial.LevelII2Dataset $r2;
        float[] $r14, $r15;
        long $l3;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable $r1;
        int[] $r7, r11;
        int i0, $i1, i2, $i4, i5;
        ucar.nc2.Variable $r5;
        java.lang.String r4;
        double $d0;
        boolean $z0;
        java.io.IOException $r9;
        ucar.ma2.Array $r6, r10;
        ucar.ma2.InvalidRangeException $r8;
        float $f0, $f1, $f2, $f3, f4;
        java.lang.Class $r12;
        java.lang.Object $r13;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;
        ucar.nc2.dataset.NetcdfDataset $r3;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r10 = null;

        f4 = 0.0F;

        i2 = 0;

     label1:
        $r1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $r2 = $r1.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r3 = staticinvoke <ucar.nc2.dt.radial.LevelII2Dataset: ucar.nc2.dataset.NetcdfDataset access$100(ucar.nc2.dt.radial.LevelII2Dataset)>($r2);

        $r5 = virtualinvoke $r3.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        virtualinvoke $r5.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r6, 0);

        r11 = newarray (int)[2];

        r11[0] = i0;

        r11[1] = 0;

        $r7 = newarray (int)[2];

        $r7[0] = 1;

        $i1 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int getRadialNumber()>();

        $r7[1] = $i1;

        r10 = virtualinvoke $r6.<ucar.ma2.Array: ucar.ma2.Array section(int[],int[])>(r11, $r7);

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        virtualinvoke $r9.<java.io.IOException: void printStackTrace()>();

        goto label5;

     label4:
        $r8 := @caughtexception;

        virtualinvoke $r8.<ucar.ma2.InvalidRangeException: void printStackTrace()>();

     label5:
        $r12 = <java.lang.Float: java.lang.Class TYPE>;

        $r13 = virtualinvoke r10.<ucar.ma2.Array: java.lang.Object get1DJavaArray(java.lang.Class)>($r12);

        $r14 = (float[]) $r13;

        $r15 = (float[]) $r14;

        $l3 = virtualinvoke r10.<ucar.ma2.Array: long getSize()>();

        $i4 = (int) $l3;

        i5 = 0;

     label6:
        if i5 >= $i4 goto label8;

        $f2 = $r15[i5];

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f2);

        if $z0 != 0 goto label7;

        $f3 = $r15[i5];

        f4 = f4 + $f3;

        i2 = i2 + 1;

     label7:
        i5 = i5 + 1;

        goto label6;

     label8:
        $f0 = (float) i2;

        $f1 = f4 / $f0;

        $d0 = (double) $f1;

        r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: double meanElevation> = $d0;

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch ucar.ma2.InvalidRangeException from label1 to label2 with label4;
    }

    public float getMeanElevation()
    {
        float $f0;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;
        double $d0, $d1;
        boolean $z0;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        $d0 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: double meanElevation>;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: void setMeanElevation()>();

     label1:
        $d1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: double meanElevation>;

        $f0 = (float) $d1;

        return $f0;
    }

    public double meanDouble(ucar.ma2.Array)
    {
        ucar.ma2.IndexIterator $r1;
        ucar.ma2.Array r0;
        int i0;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r2;
        boolean $z0, $z1;
        double $d0, $d1, $d2, d3;

        r2 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        r0 := @parameter0: ucar.ma2.Array;

        d3 = 0.0;

        i0 = 0;

        $r1 = virtualinvoke r0.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<ucar.ma2.IndexIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $d2 = interfaceinvoke $r1.<ucar.ma2.IndexIterator: double getDoubleNext()>();

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d2);

        if $z1 != 0 goto label2;

        d3 = d3 + $d2;

        i0 = i0 + 1;

     label2:
        goto label1;

     label3:
        $d0 = (double) i0;

        $d1 = d3 / $d0;

        return $d1;
    }

    public int getGateNumber()
    {
        int $i0;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        $i0 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int ngates>;

        return $i0;
    }

    public int getRadialNumber()
    {
        int $i0;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        $i0 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int nrays>;

        return $i0;
    }

    public ucar.nc2.dt.RadialDatasetSweep$Type getType()
    {
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        return null;
    }

    public ucar.unidata.geoloc.EarthLocation getOrigin(int)
    {
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable $r1;
        ucar.unidata.geoloc.EarthLocation $r3;
        ucar.nc2.dt.radial.LevelII2Dataset $r2;
        int i0;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $r2 = $r1.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r3 = $r2.<ucar.nc2.dt.radial.LevelII2Dataset: ucar.unidata.geoloc.EarthLocation origin>;

        return $r3;
    }

    public java.util.Date getStartingTime()
    {
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable $r1;
        java.util.Date $r3;
        ucar.nc2.dt.radial.LevelII2Dataset $r2;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        $r1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $r2 = $r1.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r3 = staticinvoke <ucar.nc2.dt.radial.LevelII2Dataset: java.util.Date access$200(ucar.nc2.dt.radial.LevelII2Dataset)>($r2);

        return $r3;
    }

    public java.util.Date getEndingTime()
    {
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable $r1;
        java.util.Date $r3;
        ucar.nc2.dt.radial.LevelII2Dataset $r2;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        $r1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $r2 = $r1.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r3 = staticinvoke <ucar.nc2.dt.radial.LevelII2Dataset: java.util.Date access$300(ucar.nc2.dt.radial.LevelII2Dataset)>($r2);

        return $r3;
    }

    public int getSweepIndex()
    {
        int $i0;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        $i0 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        return $i0;
    }

    public void setMeanAzimuth()
    {
        ucar.nc2.dt.radial.LevelII2Dataset $r6, $r7;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable $r4, $r5, $r9, $r14;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6;
        ucar.nc2.Variable $r1;
        java.lang.String $r2, $r3, $r13;
        boolean $z0;
        java.lang.StringBuilder $r10, $r11, $r12;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;
        ucar.nc2.dataset.NetcdfDataset $r8;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        $r1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.Variable sweepVar>;

        $r2 = virtualinvoke $r1.<ucar.nc2.Variable: java.lang.String getName()>();

        $r3 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: java.lang.String getRaidalVarCoordinateName(java.lang.String,java.lang.String)>("azimuth", $r2);

        $r4 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $r7 = $r4.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r5 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $r6 = $r5.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r8 = staticinvoke <ucar.nc2.dt.radial.LevelII2Dataset: ucar.nc2.dataset.NetcdfDataset access$100(ucar.nc2.dt.radial.LevelII2Dataset)>($r6);

        $z0 = virtualinvoke $r7.<ucar.nc2.dt.radial.LevelII2Dataset: boolean isHighResolution(ucar.nc2.dataset.NetcdfDataset)>($r8);

        if $z0 != 0 goto label1;

        $i6 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        specialinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: void setMeanAzi(java.lang.String,int)>($r3, $i6);

        goto label3;

     label1:
        $i1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        $r9 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $i0 = $r9.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: int nsweepsHR>;

        if $i1 < $i0 goto label2;

        $i4 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        $r14 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $i3 = $r14.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: int nsweepsHR>;

        i5 = $i4 - $i3;

        specialinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: void setMeanAzi(java.lang.String,int)>($r3, i5);

        goto label3;

     label2:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_HI");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $i2 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        specialinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: void setMeanAzi(java.lang.String,int)>($r13, $i2);

     label3:
        return;
    }

    private void setMeanAzi(java.lang.String, int)
    {
        ucar.nc2.dt.radial.LevelII2Dataset $r3;
        long $l2;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable $r2;
        int[] r8, $r9;
        int i0, $i1;
        ucar.nc2.Variable $r6;
        java.lang.String r5;
        double $d0, $d1, $d2;
        java.io.IOException $r12;
        ucar.ma2.Array $r7, $r10;
        ucar.ma2.InvalidRangeException $r11;
        ucar.nc2.dt.RadialDatasetSweep$Type $r1;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;
        ucar.nc2.dataset.NetcdfDataset $r4;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        r5 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.RadialDatasetSweep$Type getType()>();

        if $r1 == null goto label5;

     label1:
        $r2 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $r3 = $r2.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r4 = staticinvoke <ucar.nc2.dt.radial.LevelII2Dataset: ucar.nc2.dataset.NetcdfDataset access$100(ucar.nc2.dt.radial.LevelII2Dataset)>($r3);

        $r6 = virtualinvoke $r4.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        r8 = newarray (int)[2];

        r8[0] = i0;

        r8[1] = 0;

        $r9 = newarray (int)[2];

        $r9[0] = 1;

        $i1 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int getRadialNumber()>();

        $r9[1] = $i1;

        $r10 = virtualinvoke $r7.<ucar.ma2.Array: ucar.ma2.Array section(int[],int[])>(r8, $r9);

        $d0 = staticinvoke <ucar.ma2.MAMath: double sumDouble(ucar.ma2.Array)>($r10);

        $l2 = virtualinvoke $r10.<ucar.ma2.Array: long getSize()>();

        $d1 = (double) $l2;

        $d2 = $d0 / $d1;

        r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: double meanAzimuth> = $d2;

     label2:
        goto label6;

     label3:
        $r12 := @caughtexception;

        virtualinvoke $r12.<java.io.IOException: void printStackTrace()>();

        r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: double meanAzimuth> = 0.0;

        goto label6;

     label4:
        $r11 := @caughtexception;

        virtualinvoke $r11.<ucar.ma2.InvalidRangeException: void printStackTrace()>();

        goto label6;

     label5:
        r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: double meanAzimuth> = 0.0;

     label6:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch ucar.ma2.InvalidRangeException from label1 to label2 with label4;
    }

    public float getMeanAzimuth()
    {
        float $f0;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;
        double $d0, $d1;
        boolean $z0;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        $d0 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: double meanAzimuth>;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: void setMeanAzimuth()>();

     label1:
        $d1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: double meanAzimuth>;

        $f0 = (float) $d1;

        return $f0;
    }

    public boolean isConic()
    {
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        return 1;
    }

    public float getElevation(int) throws java.io.IOException
    {
        ucar.nc2.dt.radial.LevelII2Dataset $r6, $r7;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable $r4, $r5, $r9, $r14;
        int $i0, $i1, i2, $i3, $i4, $i5, i6, $i7;
        ucar.nc2.Variable $r1;
        java.lang.String $r2, $r3, $r13;
        boolean $z0;
        float $f0, $f1, $f2;
        java.lang.StringBuilder $r10, $r11, $r12;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;
        ucar.nc2.dataset.NetcdfDataset $r8;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        i2 := @parameter0: int;

        $r1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.Variable sweepVar>;

        $r2 = virtualinvoke $r1.<ucar.nc2.Variable: java.lang.String getName()>();

        $r3 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: java.lang.String getRaidalVarCoordinateName(java.lang.String,java.lang.String)>("elevation", $r2);

        $r4 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $r7 = $r4.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r5 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $r6 = $r5.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r8 = staticinvoke <ucar.nc2.dt.radial.LevelII2Dataset: ucar.nc2.dataset.NetcdfDataset access$100(ucar.nc2.dt.radial.LevelII2Dataset)>($r6);

        $z0 = virtualinvoke $r7.<ucar.nc2.dt.radial.LevelII2Dataset: boolean isHighResolution(ucar.nc2.dataset.NetcdfDataset)>($r8);

        if $z0 != 0 goto label1;

        $i7 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        $f2 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: float getEle(java.lang.String,int,int)>($r3, $i7, i2);

        return $f2;

     label1:
        $i1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        $r9 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $i0 = $r9.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: int nsweepsHR>;

        if $i1 < $i0 goto label2;

        $i5 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        $r14 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $i4 = $r14.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: int nsweepsHR>;

        i6 = $i5 - $i4;

        $f1 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: float getEle(java.lang.String,int,int)>($r3, i6, i2);

        return $f1;

     label2:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_HI");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $i3 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        $f0 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: float getEle(java.lang.String,int,int)>($r13, $i3, i2);

        return $f0;
    }

    public float getEle(java.lang.String, int, int) throws java.io.IOException
    {
        ucar.nc2.dt.radial.LevelII2Dataset $r2;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable $r1;
        int[] r7, $r8;
        int i0, $i1, i2;
        ucar.nc2.Variable $r5;
        java.lang.String r4;
        java.io.IOException $r10;
        ucar.ma2.Array $r6, r11;
        ucar.ma2.InvalidRangeException $r9;
        ucar.ma2.Index $r12, $r13;
        float $f0;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;
        ucar.nc2.dataset.NetcdfDataset $r3;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        r11 = null;

     label1:
        $r1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $r2 = $r1.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r3 = staticinvoke <ucar.nc2.dt.radial.LevelII2Dataset: ucar.nc2.dataset.NetcdfDataset access$100(ucar.nc2.dt.radial.LevelII2Dataset)>($r2);

        $r5 = virtualinvoke $r3.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        virtualinvoke $r5.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r6, 0);

        r7 = newarray (int)[2];

        r7[0] = i0;

        r7[1] = 0;

        $r8 = newarray (int)[2];

        $r8[0] = 1;

        $i1 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int getRadialNumber()>();

        $r8[1] = $i1;

        r11 = virtualinvoke $r6.<ucar.ma2.Array: ucar.ma2.Array section(int[],int[])>(r7, $r8);

     label2:
        goto label5;

     label3:
        $r10 := @caughtexception;

        virtualinvoke $r10.<java.io.IOException: void printStackTrace()>();

        goto label5;

     label4:
        $r9 := @caughtexception;

        virtualinvoke $r9.<ucar.ma2.InvalidRangeException: void printStackTrace()>();

     label5:
        $r12 = virtualinvoke r11.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $r13 = virtualinvoke $r12.<ucar.ma2.Index: ucar.ma2.Index set(int)>(i2);

        $f0 = virtualinvoke r11.<ucar.ma2.Array: float getFloat(ucar.ma2.Index)>($r13);

        return $f0;

        catch java.io.IOException from label1 to label2 with label3;
        catch ucar.ma2.InvalidRangeException from label1 to label2 with label4;
    }

    public float[] getElevation() throws java.io.IOException
    {
        ucar.nc2.dt.radial.LevelII2Dataset $r6, $r7;
        float[] $r14, $r16, $r17;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable $r4, $r5, $r9, $r15;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6;
        ucar.nc2.Variable $r1;
        java.lang.String $r2, $r3, $r13;
        boolean $z0;
        java.lang.StringBuilder $r10, $r11, $r12;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;
        ucar.nc2.dataset.NetcdfDataset $r8;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        $r1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.Variable sweepVar>;

        $r2 = virtualinvoke $r1.<ucar.nc2.Variable: java.lang.String getName()>();

        $r3 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: java.lang.String getRaidalVarCoordinateName(java.lang.String,java.lang.String)>("elevation", $r2);

        $r4 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $r7 = $r4.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r5 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $r6 = $r5.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r8 = staticinvoke <ucar.nc2.dt.radial.LevelII2Dataset: ucar.nc2.dataset.NetcdfDataset access$100(ucar.nc2.dt.radial.LevelII2Dataset)>($r6);

        $z0 = virtualinvoke $r7.<ucar.nc2.dt.radial.LevelII2Dataset: boolean isHighResolution(ucar.nc2.dataset.NetcdfDataset)>($r8);

        if $z0 != 0 goto label1;

        $i6 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        $r17 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: float[] getEle(java.lang.String,int)>($r3, $i6);

        return $r17;

     label1:
        $i1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        $r9 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $i0 = $r9.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: int nsweepsHR>;

        if $i1 < $i0 goto label2;

        $i4 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        $r15 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $i3 = $r15.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: int nsweepsHR>;

        i5 = $i4 - $i3;

        $r16 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: float[] getEle(java.lang.String,int)>($r3, i5);

        return $r16;

     label2:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_HI");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $i2 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        $r14 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: float[] getEle(java.lang.String,int)>($r13, $i2);

        return $r14;
    }

    public float[] getEle(java.lang.String, int) throws java.io.IOException
    {
        ucar.nc2.dt.radial.LevelII2Dataset $r2;
        float[] $r14, $r15;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable $r1;
        int[] r7, $r8;
        int i0, $i1;
        ucar.nc2.Variable $r5;
        java.lang.String r4;
        java.io.IOException $r10;
        ucar.ma2.Array $r6, r11;
        ucar.ma2.InvalidRangeException $r9;
        java.lang.Class $r12;
        java.lang.Object $r13;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;
        ucar.nc2.dataset.NetcdfDataset $r3;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r11 = null;

        if null != null goto label5;

     label1:
        $r1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $r2 = $r1.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r3 = staticinvoke <ucar.nc2.dt.radial.LevelII2Dataset: ucar.nc2.dataset.NetcdfDataset access$100(ucar.nc2.dt.radial.LevelII2Dataset)>($r2);

        $r5 = virtualinvoke $r3.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        virtualinvoke $r5.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r6, 0);

        r7 = newarray (int)[2];

        r7[0] = i0;

        r7[1] = 0;

        $r8 = newarray (int)[2];

        $r8[0] = 1;

        $i1 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int getRadialNumber()>();

        $r8[1] = $i1;

        r11 = virtualinvoke $r6.<ucar.ma2.Array: ucar.ma2.Array section(int[],int[])>(r7, $r8);

     label2:
        goto label5;

     label3:
        $r10 := @caughtexception;

        virtualinvoke $r10.<java.io.IOException: void printStackTrace()>();

        goto label5;

     label4:
        $r9 := @caughtexception;

        virtualinvoke $r9.<ucar.ma2.InvalidRangeException: void printStackTrace()>();

     label5:
        $r12 = <java.lang.Float: java.lang.Class TYPE>;

        $r13 = virtualinvoke r11.<ucar.ma2.Array: java.lang.Object get1DJavaArray(java.lang.Class)>($r12);

        $r14 = (float[]) $r13;

        $r15 = (float[]) $r14;

        return $r15;

        catch java.io.IOException from label1 to label2 with label3;
        catch ucar.ma2.InvalidRangeException from label1 to label2 with label4;
    }

    public float[] getAzimuth() throws java.io.IOException
    {
        ucar.nc2.dt.radial.LevelII2Dataset $r6, $r7;
        float[] $r14, $r16, $r17;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable $r4, $r5, $r9, $r15;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6;
        ucar.nc2.Variable $r1;
        java.lang.String $r2, $r3, $r13;
        boolean $z0;
        java.lang.StringBuilder $r10, $r11, $r12;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;
        ucar.nc2.dataset.NetcdfDataset $r8;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        $r1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.Variable sweepVar>;

        $r2 = virtualinvoke $r1.<ucar.nc2.Variable: java.lang.String getName()>();

        $r3 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: java.lang.String getRaidalVarCoordinateName(java.lang.String,java.lang.String)>("azimuth", $r2);

        $r4 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $r7 = $r4.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r5 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $r6 = $r5.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r8 = staticinvoke <ucar.nc2.dt.radial.LevelII2Dataset: ucar.nc2.dataset.NetcdfDataset access$100(ucar.nc2.dt.radial.LevelII2Dataset)>($r6);

        $z0 = virtualinvoke $r7.<ucar.nc2.dt.radial.LevelII2Dataset: boolean isHighResolution(ucar.nc2.dataset.NetcdfDataset)>($r8);

        if $z0 != 0 goto label1;

        $i6 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        $r17 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: float[] getAzi(java.lang.String,int)>($r3, $i6);

        return $r17;

     label1:
        $i1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        $r9 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $i0 = $r9.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: int nsweepsHR>;

        if $i1 < $i0 goto label2;

        $i4 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        $r15 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $i3 = $r15.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: int nsweepsHR>;

        i5 = $i4 - $i3;

        $r16 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: float[] getAzi(java.lang.String,int)>($r3, i5);

        return $r16;

     label2:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_HI");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $i2 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        $r14 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: float[] getAzi(java.lang.String,int)>($r13, $i2);

        return $r14;
    }

    public float[] getAzi(java.lang.String, int) throws java.io.IOException
    {
        ucar.nc2.dt.radial.LevelII2Dataset $r2;
        float[] $r14, $r15;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable $r1;
        int[] r7, $r8;
        int i0, $i1;
        ucar.nc2.Variable $r5;
        java.lang.String r4;
        java.io.IOException $r10;
        ucar.ma2.Array $r6, r11;
        ucar.ma2.InvalidRangeException $r9;
        java.lang.Class $r12;
        java.lang.Object $r13;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;
        ucar.nc2.dataset.NetcdfDataset $r3;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r11 = null;

        if null != null goto label5;

     label1:
        $r1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $r2 = $r1.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r3 = staticinvoke <ucar.nc2.dt.radial.LevelII2Dataset: ucar.nc2.dataset.NetcdfDataset access$100(ucar.nc2.dt.radial.LevelII2Dataset)>($r2);

        $r5 = virtualinvoke $r3.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        virtualinvoke $r5.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r6, 0);

        r7 = newarray (int)[2];

        r7[0] = i0;

        r7[1] = 0;

        $r8 = newarray (int)[2];

        $r8[0] = 1;

        $i1 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int getRadialNumber()>();

        $r8[1] = $i1;

        r11 = virtualinvoke $r6.<ucar.ma2.Array: ucar.ma2.Array section(int[],int[])>(r7, $r8);

     label2:
        goto label5;

     label3:
        $r10 := @caughtexception;

        virtualinvoke $r10.<java.io.IOException: void printStackTrace()>();

        goto label5;

     label4:
        $r9 := @caughtexception;

        virtualinvoke $r9.<ucar.ma2.InvalidRangeException: void printStackTrace()>();

     label5:
        $r12 = <java.lang.Float: java.lang.Class TYPE>;

        $r13 = virtualinvoke r11.<ucar.ma2.Array: java.lang.Object get1DJavaArray(java.lang.Class)>($r12);

        $r14 = (float[]) $r13;

        $r15 = (float[]) $r14;

        return $r15;

        catch java.io.IOException from label1 to label2 with label3;
        catch ucar.ma2.InvalidRangeException from label1 to label2 with label4;
    }

    public float getAzimuth(int) throws java.io.IOException
    {
        ucar.nc2.dt.radial.LevelII2Dataset $r6, $r7;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable $r4, $r5, $r9, $r14;
        int $i0, $i1, i2, $i3, $i4, $i5, i6, $i7;
        ucar.nc2.Variable $r1;
        java.lang.String $r2, $r3, $r13;
        boolean $z0;
        float $f0, $f1, $f2;
        java.lang.StringBuilder $r10, $r11, $r12;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;
        ucar.nc2.dataset.NetcdfDataset $r8;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        i2 := @parameter0: int;

        $r1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.Variable sweepVar>;

        $r2 = virtualinvoke $r1.<ucar.nc2.Variable: java.lang.String getName()>();

        $r3 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: java.lang.String getRaidalVarCoordinateName(java.lang.String,java.lang.String)>("azimuth", $r2);

        $r4 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $r7 = $r4.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r5 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $r6 = $r5.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r8 = staticinvoke <ucar.nc2.dt.radial.LevelII2Dataset: ucar.nc2.dataset.NetcdfDataset access$100(ucar.nc2.dt.radial.LevelII2Dataset)>($r6);

        $z0 = virtualinvoke $r7.<ucar.nc2.dt.radial.LevelII2Dataset: boolean isHighResolution(ucar.nc2.dataset.NetcdfDataset)>($r8);

        if $z0 != 0 goto label1;

        $i7 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        $f2 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: float getAzi(java.lang.String,int,int)>($r3, $i7, i2);

        return $f2;

     label1:
        $i1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        $r9 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $i0 = $r9.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: int nsweepsHR>;

        if $i1 < $i0 goto label2;

        $i5 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        $r14 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $i4 = $r14.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: int nsweepsHR>;

        i6 = $i5 - $i4;

        $f1 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: float getAzi(java.lang.String,int,int)>($r3, i6, i2);

        return $f1;

     label2:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_HI");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $i3 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        $f0 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: float getAzi(java.lang.String,int,int)>($r13, $i3, i2);

        return $f0;
    }

    public float getAzi(java.lang.String, int, int) throws java.io.IOException
    {
        ucar.nc2.dt.radial.LevelII2Dataset $r2;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable $r1;
        int[] r7, $r8;
        int i0, i1, $i2;
        ucar.nc2.Variable $r5;
        java.lang.String r4;
        java.io.IOException $r10;
        ucar.ma2.Array $r6, r11;
        ucar.ma2.InvalidRangeException $r9;
        ucar.ma2.Index $r12, $r13;
        float $f0;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;
        ucar.nc2.dataset.NetcdfDataset $r3;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        r4 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        r11 = null;

        if null != null goto label5;

     label1:
        $r1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $r2 = $r1.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r3 = staticinvoke <ucar.nc2.dt.radial.LevelII2Dataset: ucar.nc2.dataset.NetcdfDataset access$100(ucar.nc2.dt.radial.LevelII2Dataset)>($r2);

        $r5 = virtualinvoke $r3.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        virtualinvoke $r5.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r6, 0);

        r7 = newarray (int)[2];

        r7[0] = i1;

        r7[1] = 0;

        $r8 = newarray (int)[2];

        $r8[0] = 1;

        $i2 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int getRadialNumber()>();

        $r8[1] = $i2;

        r11 = virtualinvoke $r6.<ucar.ma2.Array: ucar.ma2.Array section(int[],int[])>(r7, $r8);

     label2:
        goto label5;

     label3:
        $r10 := @caughtexception;

        virtualinvoke $r10.<java.io.IOException: void printStackTrace()>();

        goto label5;

     label4:
        $r9 := @caughtexception;

        virtualinvoke $r9.<ucar.ma2.InvalidRangeException: void printStackTrace()>();

     label5:
        $r12 = virtualinvoke r11.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $r13 = virtualinvoke $r12.<ucar.ma2.Index: ucar.ma2.Index set(int)>(i0);

        $f0 = virtualinvoke r11.<ucar.ma2.Array: float getFloat(ucar.ma2.Index)>($r13);

        return $f0;

        catch java.io.IOException from label1 to label2 with label3;
        catch ucar.ma2.InvalidRangeException from label1 to label2 with label4;
    }

    public float getRadialDistance(int) throws java.io.IOException
    {
        ucar.nc2.dt.radial.LevelII2Dataset $r6, $r7;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable $r4, $r5, $r9;
        int $i0, $i1, i2;
        ucar.nc2.Variable $r1;
        java.lang.String $r2, $r3, $r13;
        boolean $z0;
        float $f0, $f1, $f2;
        java.lang.StringBuilder $r10, $r11, $r12;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;
        ucar.nc2.dataset.NetcdfDataset $r8;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        i2 := @parameter0: int;

        $r1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.Variable sweepVar>;

        $r2 = virtualinvoke $r1.<ucar.nc2.Variable: java.lang.String getName()>();

        $r3 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: java.lang.String getRaidalVarCoordinateName(java.lang.String,java.lang.String)>("distance", $r2);

        $r4 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $r7 = $r4.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r5 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $r6 = $r5.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r8 = staticinvoke <ucar.nc2.dt.radial.LevelII2Dataset: ucar.nc2.dataset.NetcdfDataset access$100(ucar.nc2.dt.radial.LevelII2Dataset)>($r6);

        $z0 = virtualinvoke $r7.<ucar.nc2.dt.radial.LevelII2Dataset: boolean isHighResolution(ucar.nc2.dataset.NetcdfDataset)>($r8);

        if $z0 != 0 goto label1;

        $f2 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: float getRadialDist(java.lang.String,int)>($r3, i2);

        return $f2;

     label1:
        $i1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        $r9 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $i0 = $r9.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: int nsweepsHR>;

        if $i1 < $i0 goto label2;

        $f1 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: float getRadialDist(java.lang.String,int)>($r3, i2);

        return $f1;

     label2:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_HI");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $f0 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: float getRadialDist(java.lang.String,int)>($r13, i2);

        return $f0;
    }

    public float getRadialDist(java.lang.String, int) throws java.io.IOException
    {
        ucar.nc2.dt.radial.LevelII2Dataset $r2;
        ucar.ma2.Array $r6;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable $r1;
        ucar.ma2.Index $r7, $r8;
        int i0;
        float $f0;
        ucar.nc2.Variable $r5;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;
        java.lang.String r4;
        ucar.nc2.dataset.NetcdfDataset $r3;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $r2 = $r1.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r3 = staticinvoke <ucar.nc2.dt.radial.LevelII2Dataset: ucar.nc2.dataset.NetcdfDataset access$100(ucar.nc2.dt.radial.LevelII2Dataset)>($r2);

        $r5 = virtualinvoke $r3.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        virtualinvoke $r5.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r6, 0);

        $r7 = virtualinvoke $r6.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $r8 = virtualinvoke $r7.<ucar.ma2.Index: ucar.ma2.Index set(int)>(i0);

        $f0 = virtualinvoke $r6.<ucar.ma2.Array: float getFloat(ucar.ma2.Index)>($r8);

        return $f0;
    }

    public float getTime(int) throws java.io.IOException
    {
        ucar.nc2.dt.radial.LevelII2Dataset $r6, $r7;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable $r4, $r5, $r9, $r14;
        int $i0, $i1, i2, $i3, $i4, $i5, i6, $i7;
        ucar.nc2.Variable $r1;
        java.lang.String $r2, $r3, $r13;
        boolean $z0;
        float $f0, $f1, $f2;
        java.lang.StringBuilder $r10, $r11, $r12;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;
        ucar.nc2.dataset.NetcdfDataset $r8;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        i2 := @parameter0: int;

        $r1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.Variable sweepVar>;

        $r2 = virtualinvoke $r1.<ucar.nc2.Variable: java.lang.String getName()>();

        $r3 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: java.lang.String getRaidalVarCoordinateName(java.lang.String,java.lang.String)>("time", $r2);

        $r4 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $r7 = $r4.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r5 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $r6 = $r5.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r8 = staticinvoke <ucar.nc2.dt.radial.LevelII2Dataset: ucar.nc2.dataset.NetcdfDataset access$100(ucar.nc2.dt.radial.LevelII2Dataset)>($r6);

        $z0 = virtualinvoke $r7.<ucar.nc2.dt.radial.LevelII2Dataset: boolean isHighResolution(ucar.nc2.dataset.NetcdfDataset)>($r8);

        if $z0 != 0 goto label1;

        $i7 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        $f2 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: float getT(java.lang.String,int,int)>($r3, $i7, i2);

        return $f2;

     label1:
        $i1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        $r9 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $i0 = $r9.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: int nsweepsHR>;

        if $i1 < $i0 goto label2;

        $i5 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        $r14 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $i4 = $r14.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: int nsweepsHR>;

        i6 = $i5 - $i4;

        $f1 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: float getT(java.lang.String,int,int)>($r3, i6, i2);

        return $f1;

     label2:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_HI");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $i3 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: int sweepno>;

        $f0 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: float getT(java.lang.String,int,int)>($r13, $i3, i2);

        return $f0;
    }

    public java.lang.String getRaidalVarCoordinateName(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r2, r18;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r17;

        r17 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("Reflectivity");

        if $z0 == 0 goto label1;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("R");

        r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label5;

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("DifferentialReflectivity");

        if $z1 == 0 goto label2;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("D");

        r18 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label5;

     label2:
        $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("CorrelationCoefficient");

        if $z2 == 0 goto label3;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("C");

        r18 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label5;

     label3:
        $z3 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("DifferentialPhase");

        if $z3 == 0 goto label4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("P");

        r18 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label5;

     label4:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("V");

        r18 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        return r18;
    }

    public float getT(java.lang.String, int, int) throws java.io.IOException
    {
        ucar.nc2.dt.radial.LevelII2Dataset $r2;
        ucar.ma2.Array $r6;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable $r1;
        ucar.ma2.Index $r7, $r8;
        int i0, i1;
        float $f0;
        ucar.nc2.Variable $r5;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;
        java.lang.String r4;
        ucar.nc2.dataset.NetcdfDataset $r3;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable this$1>;

        $r2 = $r1.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable: ucar.nc2.dt.radial.LevelII2Dataset this$0>;

        $r3 = staticinvoke <ucar.nc2.dt.radial.LevelII2Dataset: ucar.nc2.dataset.NetcdfDataset access$100(ucar.nc2.dt.radial.LevelII2Dataset)>($r2);

        $r5 = virtualinvoke $r3.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        virtualinvoke $r5.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r6, 0);

        $r7 = virtualinvoke $r6.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        $r8 = virtualinvoke $r7.<ucar.ma2.Index: ucar.ma2.Index set(int,int)>(i0, i1);

        $f0 = virtualinvoke $r6.<ucar.ma2.Array: float getFloat(ucar.ma2.Index)>($r8);

        return $f0;
    }

    public float getBeamWidth()
    {
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        return 0.95F;
    }

    public float getNyquistFrequency()
    {
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        return 0.0F;
    }

    public float getRangeToFirstGate()
    {
        float $f0;
        java.io.IOException $r1;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

     label1:
        $f0 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: float getRadialDistance(int)>(0);

     label2:
        return $f0;

     label3:
        $r1 := @caughtexception;

        virtualinvoke $r1.<java.io.IOException: void printStackTrace()>();

        return 0.0F;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public float getGateSize()
    {
        float $f0, $f1, $f2;
        java.io.IOException $r1;
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

     label1:
        $f0 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: float getRadialDistance(int)>(1);

        $f1 = virtualinvoke r0.<ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep: float getRadialDistance(int)>(0);

        $f2 = $f0 - $f1;

     label2:
        return $f2;

     label3:
        $r1 := @caughtexception;

        virtualinvoke $r1.<java.io.IOException: void printStackTrace()>();

        return 0.0F;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public boolean isGateSizeConstant()
    {
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        return 1;
    }

    public void clearSweepMemory()
    {
        ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep r0;

        r0 := @this: ucar.nc2.dt.radial.LevelII2Dataset$LevelII2Variable$LevelII2Sweep;

        return;
    }
}
