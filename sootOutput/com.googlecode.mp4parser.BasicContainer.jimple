public class com.googlecode.mp4parser.BasicContainer extends java.lang.Object implements com.coremedia.iso.boxes.Container, java.util.Iterator
{
    private static com.googlecode.mp4parser.util.Logger LOG;
    private java.util.List boxes;
    protected com.coremedia.iso.BoxParser boxParser;
    protected com.googlecode.mp4parser.DataSource dataSource;
    com.coremedia.iso.boxes.Box lookahead;
    long parsePosition;
    long startPosition;
    long endPosition;
    private static final com.coremedia.iso.boxes.Box EOF;

    static void <clinit>()
    {
        com.googlecode.mp4parser.BasicContainer$1 $r1;
        com.googlecode.mp4parser.util.Logger $r0;

        $r0 = staticinvoke <com.googlecode.mp4parser.util.Logger: com.googlecode.mp4parser.util.Logger getLogger(java.lang.Class)>(class "Lcom/googlecode/mp4parser/AbstractContainerBox;");

        <com.googlecode.mp4parser.BasicContainer: com.googlecode.mp4parser.util.Logger LOG> = $r0;

        $r1 = new com.googlecode.mp4parser.BasicContainer$1;

        specialinvoke $r1.<com.googlecode.mp4parser.BasicContainer$1: void <init>(java.lang.String)>("eof ");

        <com.googlecode.mp4parser.BasicContainer: com.coremedia.iso.boxes.Box EOF> = $r1;

        return;
    }

    public java.util.List getBoxes()
    {
        com.googlecode.mp4parser.DataSource $r1;
        java.util.List $r2, $r6;
        com.googlecode.mp4parser.util.LazyList $r5;
        com.googlecode.mp4parser.BasicContainer r0;
        com.coremedia.iso.boxes.Box $r3, $r4;

        r0 := @this: com.googlecode.mp4parser.BasicContainer;

        $r1 = r0.<com.googlecode.mp4parser.BasicContainer: com.googlecode.mp4parser.DataSource dataSource>;

        if $r1 == null goto label1;

        $r4 = r0.<com.googlecode.mp4parser.BasicContainer: com.coremedia.iso.boxes.Box lookahead>;

        $r3 = <com.googlecode.mp4parser.BasicContainer: com.coremedia.iso.boxes.Box EOF>;

        if $r4 == $r3 goto label1;

        $r5 = new com.googlecode.mp4parser.util.LazyList;

        $r6 = r0.<com.googlecode.mp4parser.BasicContainer: java.util.List boxes>;

        specialinvoke $r5.<com.googlecode.mp4parser.util.LazyList: void <init>(java.util.List,java.util.Iterator)>($r6, r0);

        return $r5;

     label1:
        $r2 = r0.<com.googlecode.mp4parser.BasicContainer: java.util.List boxes>;

        return $r2;
    }

    protected long getContainerSize()
    {
        com.coremedia.iso.boxes.Box $r4;
        long $l1, l2;
        java.util.List $r1, $r2;
        com.googlecode.mp4parser.BasicContainer r0;
        int $i0, i3;
        java.lang.Object $r3;

        r0 := @this: com.googlecode.mp4parser.BasicContainer;

        l2 = 0L;

        i3 = 0;

        goto label2;

     label1:
        $r2 = r0.<com.googlecode.mp4parser.BasicContainer: java.util.List boxes>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i3);

        $r4 = (com.coremedia.iso.boxes.Box) $r3;

        $l1 = interfaceinvoke $r4.<com.coremedia.iso.boxes.Box: long getSize()>();

        l2 = l2 + $l1;

        i3 = i3 + 1;

     label2:
        $r1 = virtualinvoke r0.<com.googlecode.mp4parser.BasicContainer: java.util.List getBoxes()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i3 < $i0 goto label1;

        return l2;
    }

    public void <init>()
    {
        com.googlecode.mp4parser.BasicContainer r0;
        java.util.ArrayList $r1;

        r0 := @this: com.googlecode.mp4parser.BasicContainer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.googlecode.mp4parser.BasicContainer: java.util.List boxes> = $r1;

        r0.<com.googlecode.mp4parser.BasicContainer: com.coremedia.iso.boxes.Box lookahead> = null;

        r0.<com.googlecode.mp4parser.BasicContainer: long parsePosition> = 0L;

        r0.<com.googlecode.mp4parser.BasicContainer: long startPosition> = 0L;

        r0.<com.googlecode.mp4parser.BasicContainer: long endPosition> = 0L;

        return;
    }

    public void setBoxes(java.util.List)
    {
        java.util.List r2;
        com.googlecode.mp4parser.BasicContainer r0;
        com.coremedia.iso.boxes.Box $r3;
        java.util.ArrayList $r1;

        r0 := @this: com.googlecode.mp4parser.BasicContainer;

        r2 := @parameter0: java.util.List;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>(r2);

        r0.<com.googlecode.mp4parser.BasicContainer: java.util.List boxes> = $r1;

        $r3 = <com.googlecode.mp4parser.BasicContainer: com.coremedia.iso.boxes.Box EOF>;

        r0.<com.googlecode.mp4parser.BasicContainer: com.coremedia.iso.boxes.Box lookahead> = $r3;

        r0.<com.googlecode.mp4parser.BasicContainer: com.googlecode.mp4parser.DataSource dataSource> = null;

        return;
    }

    public java.util.List getBoxes(java.lang.Class)
    {
        java.lang.Class r1;
        java.util.List $r2;
        com.googlecode.mp4parser.BasicContainer r0;

        r0 := @this: com.googlecode.mp4parser.BasicContainer;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<com.googlecode.mp4parser.BasicContainer: java.util.List getBoxes(java.lang.Class,boolean)>(r1, 0);

        return $r2;
    }

    public java.util.List getBoxes(java.lang.Class, boolean)
    {
        java.util.Iterator $r3;
        com.coremedia.iso.boxes.Box r5;
        com.coremedia.iso.boxes.Container $r7;
        java.util.ArrayList $r0;
        java.util.List $r2, $r8;
        com.googlecode.mp4parser.BasicContainer r1;
        java.lang.Object $r4;
        java.lang.Class r6;
        boolean $z0, z1, $z2, $z3;

        r1 := @this: com.googlecode.mp4parser.BasicContainer;

        r6 := @parameter0: java.lang.Class;

        z1 := @parameter1: boolean;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>(2);

        $r2 = virtualinvoke r1.<com.googlecode.mp4parser.BasicContainer: java.util.List getBoxes()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        goto label3;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.coremedia.iso.boxes.Box) $r4;

        $z0 = virtualinvoke r6.<java.lang.Class: boolean isInstance(java.lang.Object)>(r5);

        if $z0 == 0 goto label2;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r5);

     label2:
        if z1 == 0 goto label3;

        $z2 = r5 instanceof com.coremedia.iso.boxes.Container;

        if $z2 == 0 goto label3;

        $r7 = (com.coremedia.iso.boxes.Container) r5;

        $r8 = interfaceinvoke $r7.<com.coremedia.iso.boxes.Container: java.util.List getBoxes(java.lang.Class,boolean)>(r6, z1);

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r8);

     label3:
        $z3 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label1;

        return $r0;
    }

    public void addBox(com.coremedia.iso.boxes.Box)
    {
        java.util.List $r2, $r4;
        com.googlecode.mp4parser.BasicContainer r0;
        com.coremedia.iso.boxes.Box r3;
        java.util.ArrayList $r1;

        r0 := @this: com.googlecode.mp4parser.BasicContainer;

        r3 := @parameter0: com.coremedia.iso.boxes.Box;

        $r1 = new java.util.ArrayList;

        $r2 = virtualinvoke r0.<com.googlecode.mp4parser.BasicContainer: java.util.List getBoxes()>();

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        r0.<com.googlecode.mp4parser.BasicContainer: java.util.List boxes> = $r1;

        interfaceinvoke r3.<com.coremedia.iso.boxes.Box: void setParent(com.coremedia.iso.boxes.Container)>(r0);

        $r4 = r0.<com.googlecode.mp4parser.BasicContainer: java.util.List boxes>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r3);

        return;
    }

    public void parseContainer(com.googlecode.mp4parser.DataSource, long, com.coremedia.iso.BoxParser) throws java.io.IOException
    {
        com.googlecode.mp4parser.DataSource r1;
        long $l0, $l1, l2, $l3, $l4;
        com.googlecode.mp4parser.BasicContainer r0;
        com.coremedia.iso.BoxParser r2;

        r0 := @this: com.googlecode.mp4parser.BasicContainer;

        r1 := @parameter0: com.googlecode.mp4parser.DataSource;

        l2 := @parameter1: long;

        r2 := @parameter2: com.coremedia.iso.BoxParser;

        r0.<com.googlecode.mp4parser.BasicContainer: com.googlecode.mp4parser.DataSource dataSource> = r1;

        $l0 = interfaceinvoke r1.<com.googlecode.mp4parser.DataSource: long position()>();

        r0.<com.googlecode.mp4parser.BasicContainer: long startPosition> = $l0;

        r0.<com.googlecode.mp4parser.BasicContainer: long parsePosition> = $l0;

        $l1 = interfaceinvoke r1.<com.googlecode.mp4parser.DataSource: long position()>();

        $l3 = $l1 + l2;

        interfaceinvoke r1.<com.googlecode.mp4parser.DataSource: void position(long)>($l3);

        $l4 = interfaceinvoke r1.<com.googlecode.mp4parser.DataSource: long position()>();

        r0.<com.googlecode.mp4parser.BasicContainer: long endPosition> = $l4;

        r0.<com.googlecode.mp4parser.BasicContainer: com.coremedia.iso.BoxParser boxParser> = r2;

        return;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        com.googlecode.mp4parser.BasicContainer r1;

        r1 := @this: com.googlecode.mp4parser.BasicContainer;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean hasNext()
    {
        com.googlecode.mp4parser.BasicContainer r0;
        com.coremedia.iso.boxes.Box $r1, $r2, $r3, $r4, $r6;
        java.util.NoSuchElementException $r5;

        r0 := @this: com.googlecode.mp4parser.BasicContainer;

        $r2 = r0.<com.googlecode.mp4parser.BasicContainer: com.coremedia.iso.boxes.Box lookahead>;

        $r1 = <com.googlecode.mp4parser.BasicContainer: com.coremedia.iso.boxes.Box EOF>;

        if $r2 != $r1 goto label1;

        return 0;

     label1:
        $r3 = r0.<com.googlecode.mp4parser.BasicContainer: com.coremedia.iso.boxes.Box lookahead>;

        if $r3 == null goto label2;

        return 1;

     label2:
        $r4 = virtualinvoke r0.<com.googlecode.mp4parser.BasicContainer: com.coremedia.iso.boxes.Box next()>();

        r0.<com.googlecode.mp4parser.BasicContainer: com.coremedia.iso.boxes.Box lookahead> = $r4;

     label3:
        return 1;

     label4:
        $r5 := @caughtexception;

        $r6 = <com.googlecode.mp4parser.BasicContainer: com.coremedia.iso.boxes.Box EOF>;

        r0.<com.googlecode.mp4parser.BasicContainer: com.coremedia.iso.boxes.Box lookahead> = $r6;

        return 0;

        catch java.util.NoSuchElementException from label2 to label3 with label4;
    }

    public com.coremedia.iso.boxes.Box next()
    {
        java.lang.Throwable $r18;
        long $l0, $l1, $l3, $l4;
        byte $b2;
        int $i5;
        java.util.NoSuchElementException $r20, $r21, $r22;
        com.googlecode.mp4parser.DataSource $r3, $r6, $r7, $r8, $r11;
        com.coremedia.iso.boxes.Box $r1, $r4, $r10, $r12, $r13, r19;
        java.io.IOException $r14;
        com.googlecode.mp4parser.util.Logger $r2;
        java.io.EOFException $r16;
        com.googlecode.mp4parser.BasicContainer r0;
        com.coremedia.iso.BoxParser $r9;

        r0 := @this: com.googlecode.mp4parser.BasicContainer;

        $r1 = r0.<com.googlecode.mp4parser.BasicContainer: com.coremedia.iso.boxes.Box lookahead>;

        if $r1 == null goto label1;

        $r13 = r0.<com.googlecode.mp4parser.BasicContainer: com.coremedia.iso.boxes.Box lookahead>;

        $r12 = <com.googlecode.mp4parser.BasicContainer: com.coremedia.iso.boxes.Box EOF>;

        if $r13 == $r12 goto label1;

        r19 = r0.<com.googlecode.mp4parser.BasicContainer: com.coremedia.iso.boxes.Box lookahead>;

        r0.<com.googlecode.mp4parser.BasicContainer: com.coremedia.iso.boxes.Box lookahead> = null;

        return r19;

     label1:
        $r2 = <com.googlecode.mp4parser.BasicContainer: com.googlecode.mp4parser.util.Logger LOG>;

        virtualinvoke $r2.<com.googlecode.mp4parser.util.Logger: void logDebug(java.lang.String)>("Parsing next() box");

        $r3 = r0.<com.googlecode.mp4parser.BasicContainer: com.googlecode.mp4parser.DataSource dataSource>;

        if $r3 == null goto label2;

        $l1 = r0.<com.googlecode.mp4parser.BasicContainer: long parsePosition>;

        $l0 = r0.<com.googlecode.mp4parser.BasicContainer: long endPosition>;

        $b2 = $l1 cmp $l0;

        $i5 = (int) $b2;

        if $i5 < 0 goto label3;

     label2:
        $r4 = <com.googlecode.mp4parser.BasicContainer: com.coremedia.iso.boxes.Box EOF>;

        r0.<com.googlecode.mp4parser.BasicContainer: com.coremedia.iso.boxes.Box lookahead> = $r4;

        $r20 = new java.util.NoSuchElementException;

        specialinvoke $r20.<java.util.NoSuchElementException: void <init>()>();

        throw $r20;

     label3:
        $r6 = r0.<com.googlecode.mp4parser.BasicContainer: com.googlecode.mp4parser.DataSource dataSource>;

        entermonitor $r6;

     label4:
        $r7 = r0.<com.googlecode.mp4parser.BasicContainer: com.googlecode.mp4parser.DataSource dataSource>;

        $l3 = r0.<com.googlecode.mp4parser.BasicContainer: long parsePosition>;

        interfaceinvoke $r7.<com.googlecode.mp4parser.DataSource: void position(long)>($l3);

        $r9 = r0.<com.googlecode.mp4parser.BasicContainer: com.coremedia.iso.BoxParser boxParser>;

        $r8 = r0.<com.googlecode.mp4parser.BasicContainer: com.googlecode.mp4parser.DataSource dataSource>;

        $r10 = interfaceinvoke $r9.<com.coremedia.iso.BoxParser: com.coremedia.iso.boxes.Box parseBox(com.googlecode.mp4parser.DataSource,com.coremedia.iso.boxes.Container)>($r8, r0);

        $r11 = r0.<com.googlecode.mp4parser.BasicContainer: com.googlecode.mp4parser.DataSource dataSource>;

        $l4 = interfaceinvoke $r11.<com.googlecode.mp4parser.DataSource: long position()>();

        r0.<com.googlecode.mp4parser.BasicContainer: long parsePosition> = $l4;

        exitmonitor $r6;

     label5:
        return $r10;

     label6:
        $r18 := @caughtexception;

        exitmonitor $r6;

     label7:
        throw $r18;

     label8:
        $r16 := @caughtexception;

        $r21 = new java.util.NoSuchElementException;

        specialinvoke $r21.<java.util.NoSuchElementException: void <init>()>();

        throw $r21;

     label9:
        $r14 := @caughtexception;

        $r22 = new java.util.NoSuchElementException;

        specialinvoke $r22.<java.util.NoSuchElementException: void <init>()>();

        throw $r22;

        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
        catch java.io.EOFException from label3 to label5 with label8;
        catch java.io.EOFException from label6 to label8 with label8;
        catch java.io.IOException from label3 to label5 with label9;
        catch java.io.IOException from label6 to label8 with label9;
    }

    public java.lang.String toString()
    {
        com.coremedia.iso.boxes.Box $r7;
        java.util.List $r5, $r10;
        com.googlecode.mp4parser.BasicContainer r1;
        int i0, $i1;
        java.lang.StringBuilder $r0, $r4;
        java.lang.Class $r2;
        java.lang.Object $r6;
        java.lang.String $r3, $r8, $r9;

        r1 := @this: com.googlecode.mp4parser.BasicContainer;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        i0 = 0;

        goto label3;

     label1:
        if i0 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

     label2:
        $r5 = r1.<com.googlecode.mp4parser.BasicContainer: java.util.List boxes>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i0);

        $r7 = (com.coremedia.iso.boxes.Box) $r6;

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        i0 = i0 + 1;

     label3:
        $r10 = r1.<com.googlecode.mp4parser.BasicContainer: java.util.List boxes>;

        $i1 = interfaceinvoke $r10.<java.util.List: int size()>();

        if i0 < $i1 goto label1;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public final void writeContainer(java.nio.channels.WritableByteChannel) throws java.io.IOException
    {
        java.util.List $r1;
        com.googlecode.mp4parser.BasicContainer r0;
        java.util.Iterator $r2;
        com.coremedia.iso.boxes.Box r4;
        java.nio.channels.WritableByteChannel r5;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: com.googlecode.mp4parser.BasicContainer;

        r5 := @parameter0: java.nio.channels.WritableByteChannel;

        $r1 = virtualinvoke r0.<com.googlecode.mp4parser.BasicContainer: java.util.List getBoxes()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.coremedia.iso.boxes.Box) $r3;

        interfaceinvoke r4.<com.coremedia.iso.boxes.Box: void getBox(java.nio.channels.WritableByteChannel)>(r5);

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return;
    }

    public java.nio.ByteBuffer getByteBuffer(long, long) throws java.io.IOException
    {
        java.lang.Throwable $r4;
        com.googlecode.mp4parser.DataSource $r1, $r2;
        long l0, $l1, l2, $l3;
        java.nio.ByteBuffer $r3;
        com.googlecode.mp4parser.BasicContainer r0;

        r0 := @this: com.googlecode.mp4parser.BasicContainer;

        l0 := @parameter0: long;

        l2 := @parameter1: long;

        $r1 = r0.<com.googlecode.mp4parser.BasicContainer: com.googlecode.mp4parser.DataSource dataSource>;

        entermonitor $r1;

     label1:
        $r2 = r0.<com.googlecode.mp4parser.BasicContainer: com.googlecode.mp4parser.DataSource dataSource>;

        $l1 = r0.<com.googlecode.mp4parser.BasicContainer: long startPosition>;

        $l3 = $l1 + l0;

        $r3 = interfaceinvoke $r2.<com.googlecode.mp4parser.DataSource: java.nio.ByteBuffer map(long,long)>($l3, l2);

        exitmonitor $r1;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public volatile java.lang.Object next()
    {
        com.coremedia.iso.boxes.Box $r1;
        com.googlecode.mp4parser.BasicContainer r0;

        r0 := @this: com.googlecode.mp4parser.BasicContainer;

        $r1 = virtualinvoke r0.<com.googlecode.mp4parser.BasicContainer: com.coremedia.iso.boxes.Box next()>();

        return $r1;
    }
}
