public class org.mozilla.javascript.tools.debugger.Dim$StackFrame extends java.lang.Object implements org.mozilla.javascript.debug.DebugFrame
{
    private org.mozilla.javascript.tools.debugger.Dim dim;
    private org.mozilla.javascript.tools.debugger.Dim$ContextData contextData;
    private org.mozilla.javascript.Scriptable scope;
    private org.mozilla.javascript.Scriptable thisObj;
    private org.mozilla.javascript.tools.debugger.Dim$FunctionSource fsource;
    private boolean[] breakpoints;
    private int lineNumber;

    private void <init>(org.mozilla.javascript.Context, org.mozilla.javascript.tools.debugger.Dim, org.mozilla.javascript.tools.debugger.Dim$FunctionSource)
    {
        org.mozilla.javascript.tools.debugger.Dim$ContextData $r3;
        org.mozilla.javascript.Context r2;
        boolean[] $r6;
        org.mozilla.javascript.tools.debugger.Dim$SourceInfo $r5;
        org.mozilla.javascript.tools.debugger.Dim$FunctionSource r4;
        int $i0;
        org.mozilla.javascript.tools.debugger.Dim$StackFrame r0;
        org.mozilla.javascript.tools.debugger.Dim r1;

        r0 := @this: org.mozilla.javascript.tools.debugger.Dim$StackFrame;

        r2 := @parameter0: org.mozilla.javascript.Context;

        r1 := @parameter1: org.mozilla.javascript.tools.debugger.Dim;

        r4 := @parameter2: org.mozilla.javascript.tools.debugger.Dim$FunctionSource;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: org.mozilla.javascript.tools.debugger.Dim dim> = r1;

        $r3 = staticinvoke <org.mozilla.javascript.tools.debugger.Dim$ContextData: org.mozilla.javascript.tools.debugger.Dim$ContextData get(org.mozilla.javascript.Context)>(r2);

        r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: org.mozilla.javascript.tools.debugger.Dim$ContextData contextData> = $r3;

        r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: org.mozilla.javascript.tools.debugger.Dim$FunctionSource fsource> = r4;

        $r5 = virtualinvoke r4.<org.mozilla.javascript.tools.debugger.Dim$FunctionSource: org.mozilla.javascript.tools.debugger.Dim$SourceInfo sourceInfo()>();

        $r6 = staticinvoke <org.mozilla.javascript.tools.debugger.Dim$SourceInfo: boolean[] access$2500(org.mozilla.javascript.tools.debugger.Dim$SourceInfo)>($r5);

        r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: boolean[] breakpoints> = $r6;

        $i0 = virtualinvoke r4.<org.mozilla.javascript.tools.debugger.Dim$FunctionSource: int firstLine()>();

        r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: int lineNumber> = $i0;

        return;
    }

    public void onEnter(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        org.mozilla.javascript.tools.debugger.Dim$ContextData $r1;
        java.lang.Object[] r7;
        org.mozilla.javascript.Context r5;
        org.mozilla.javascript.Scriptable r2, r3;
        org.mozilla.javascript.tools.debugger.Dim$StackFrame r0;
        org.mozilla.javascript.tools.debugger.Dim $r4, $r6;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.tools.debugger.Dim$StackFrame;

        r5 := @parameter0: org.mozilla.javascript.Context;

        r2 := @parameter1: org.mozilla.javascript.Scriptable;

        r3 := @parameter2: org.mozilla.javascript.Scriptable;

        r7 := @parameter3: java.lang.Object[];

        $r1 = r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: org.mozilla.javascript.tools.debugger.Dim$ContextData contextData>;

        staticinvoke <org.mozilla.javascript.tools.debugger.Dim$ContextData: void access$2600(org.mozilla.javascript.tools.debugger.Dim$ContextData,org.mozilla.javascript.tools.debugger.Dim$StackFrame)>($r1, r0);

        r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: org.mozilla.javascript.Scriptable scope> = r2;

        r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: org.mozilla.javascript.Scriptable thisObj> = r3;

        $r4 = r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: org.mozilla.javascript.tools.debugger.Dim dim>;

        $z0 = staticinvoke <org.mozilla.javascript.tools.debugger.Dim: boolean access$2700(org.mozilla.javascript.tools.debugger.Dim)>($r4);

        if $z0 == 0 goto label1;

        $r6 = r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: org.mozilla.javascript.tools.debugger.Dim dim>;

        staticinvoke <org.mozilla.javascript.tools.debugger.Dim: void access$2800(org.mozilla.javascript.tools.debugger.Dim,org.mozilla.javascript.tools.debugger.Dim$StackFrame,org.mozilla.javascript.Context)>($r6, r0, r5);

     label1:
        return;
    }

    public void onLineChange(org.mozilla.javascript.Context, int)
    {
        org.mozilla.javascript.tools.debugger.Dim$ContextData $r4, $r5, $r6, $r7, $r8, $r9;
        int i0, $i1, $i2, $i3, $i5;
        org.mozilla.javascript.tools.debugger.Dim$StackFrame r0;
        boolean $z0, $z1, $z2, z3, $z4;
        org.mozilla.javascript.Context r2;
        boolean[] $r1;
        org.mozilla.javascript.tools.debugger.Dim $r3, $r10;

        r0 := @this: org.mozilla.javascript.tools.debugger.Dim$StackFrame;

        r2 := @parameter0: org.mozilla.javascript.Context;

        i0 := @parameter1: int;

        r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: int lineNumber> = i0;

        $r1 = r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: boolean[] breakpoints>;

        $z0 = $r1[i0];

        if $z0 != 0 goto label5;

        $r3 = r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: org.mozilla.javascript.tools.debugger.Dim dim>;

        $z1 = staticinvoke <org.mozilla.javascript.tools.debugger.Dim: boolean access$2900(org.mozilla.javascript.tools.debugger.Dim)>($r3);

        if $z1 != 0 goto label5;

        $r4 = r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: org.mozilla.javascript.tools.debugger.Dim$ContextData contextData>;

        $z2 = staticinvoke <org.mozilla.javascript.tools.debugger.Dim$ContextData: boolean access$1400(org.mozilla.javascript.tools.debugger.Dim$ContextData)>($r4);

        z3 = $z2;

        if $z2 == 0 goto label3;

        $r7 = r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: org.mozilla.javascript.tools.debugger.Dim$ContextData contextData>;

        $i1 = staticinvoke <org.mozilla.javascript.tools.debugger.Dim$ContextData: int access$1500(org.mozilla.javascript.tools.debugger.Dim$ContextData)>($r7);

        if $i1 < 0 goto label3;

        $r8 = r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: org.mozilla.javascript.tools.debugger.Dim$ContextData contextData>;

        $i2 = virtualinvoke $r8.<org.mozilla.javascript.tools.debugger.Dim$ContextData: int frameCount()>();

        $r9 = r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: org.mozilla.javascript.tools.debugger.Dim$ContextData contextData>;

        $i3 = staticinvoke <org.mozilla.javascript.tools.debugger.Dim$ContextData: int access$1500(org.mozilla.javascript.tools.debugger.Dim$ContextData)>($r9);

        if $i2 > $i3 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        z3 = $z4;

     label3:
        if z3 != 0 goto label4;

        return;

     label4:
        $r5 = r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: org.mozilla.javascript.tools.debugger.Dim$ContextData contextData>;

        $i5 = (int) -1;

        staticinvoke <org.mozilla.javascript.tools.debugger.Dim$ContextData: int access$1502(org.mozilla.javascript.tools.debugger.Dim$ContextData,int)>($r5, $i5);

        $r6 = r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: org.mozilla.javascript.tools.debugger.Dim$ContextData contextData>;

        staticinvoke <org.mozilla.javascript.tools.debugger.Dim$ContextData: boolean access$1402(org.mozilla.javascript.tools.debugger.Dim$ContextData,boolean)>($r6, 0);

     label5:
        $r10 = r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: org.mozilla.javascript.tools.debugger.Dim dim>;

        staticinvoke <org.mozilla.javascript.tools.debugger.Dim: void access$2800(org.mozilla.javascript.tools.debugger.Dim,org.mozilla.javascript.tools.debugger.Dim$StackFrame,org.mozilla.javascript.Context)>($r10, r0, r2);

        return;
    }

    public void onExceptionThrown(org.mozilla.javascript.Context, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        org.mozilla.javascript.Context r1;
        org.mozilla.javascript.tools.debugger.Dim$StackFrame r0;
        org.mozilla.javascript.tools.debugger.Dim $r3;

        r0 := @this: org.mozilla.javascript.tools.debugger.Dim$StackFrame;

        r1 := @parameter0: org.mozilla.javascript.Context;

        r2 := @parameter1: java.lang.Throwable;

        $r3 = r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: org.mozilla.javascript.tools.debugger.Dim dim>;

        staticinvoke <org.mozilla.javascript.tools.debugger.Dim: void access$3000(org.mozilla.javascript.tools.debugger.Dim,org.mozilla.javascript.Context,java.lang.Throwable,org.mozilla.javascript.tools.debugger.Dim$StackFrame)>($r3, r1, r2, r0);

        return;
    }

    public void onExit(org.mozilla.javascript.Context, boolean, java.lang.Object)
    {
        org.mozilla.javascript.tools.debugger.Dim$ContextData $r5;
        org.mozilla.javascript.Context r2;
        org.mozilla.javascript.tools.debugger.Dim$StackFrame r0;
        java.lang.Object r4;
        org.mozilla.javascript.tools.debugger.Dim $r1, $r3;
        boolean $z0, z1;

        r0 := @this: org.mozilla.javascript.tools.debugger.Dim$StackFrame;

        r2 := @parameter0: org.mozilla.javascript.Context;

        z1 := @parameter1: boolean;

        r4 := @parameter2: java.lang.Object;

        $r1 = r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: org.mozilla.javascript.tools.debugger.Dim dim>;

        $z0 = staticinvoke <org.mozilla.javascript.tools.debugger.Dim: boolean access$3100(org.mozilla.javascript.tools.debugger.Dim)>($r1);

        if $z0 == 0 goto label1;

        if z1 != 0 goto label1;

        $r3 = r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: org.mozilla.javascript.tools.debugger.Dim dim>;

        staticinvoke <org.mozilla.javascript.tools.debugger.Dim: void access$2800(org.mozilla.javascript.tools.debugger.Dim,org.mozilla.javascript.tools.debugger.Dim$StackFrame,org.mozilla.javascript.Context)>($r3, r0, r2);

     label1:
        $r5 = r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: org.mozilla.javascript.tools.debugger.Dim$ContextData contextData>;

        staticinvoke <org.mozilla.javascript.tools.debugger.Dim$ContextData: void access$3200(org.mozilla.javascript.tools.debugger.Dim$ContextData)>($r5);

        return;
    }

    public org.mozilla.javascript.tools.debugger.Dim$SourceInfo sourceInfo()
    {
        org.mozilla.javascript.tools.debugger.Dim$FunctionSource $r1;
        org.mozilla.javascript.tools.debugger.Dim$StackFrame r0;
        org.mozilla.javascript.tools.debugger.Dim$SourceInfo $r2;

        r0 := @this: org.mozilla.javascript.tools.debugger.Dim$StackFrame;

        $r1 = r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: org.mozilla.javascript.tools.debugger.Dim$FunctionSource fsource>;

        $r2 = virtualinvoke $r1.<org.mozilla.javascript.tools.debugger.Dim$FunctionSource: org.mozilla.javascript.tools.debugger.Dim$SourceInfo sourceInfo()>();

        return $r2;
    }

    public org.mozilla.javascript.tools.debugger.Dim$ContextData contextData()
    {
        org.mozilla.javascript.tools.debugger.Dim$ContextData $r1;
        org.mozilla.javascript.tools.debugger.Dim$StackFrame r0;

        r0 := @this: org.mozilla.javascript.tools.debugger.Dim$StackFrame;

        $r1 = r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: org.mozilla.javascript.tools.debugger.Dim$ContextData contextData>;

        return $r1;
    }

    public java.lang.Object scope()
    {
        org.mozilla.javascript.tools.debugger.Dim$StackFrame r0;
        org.mozilla.javascript.Scriptable $r1;

        r0 := @this: org.mozilla.javascript.tools.debugger.Dim$StackFrame;

        $r1 = r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: org.mozilla.javascript.Scriptable scope>;

        return $r1;
    }

    public java.lang.Object thisObj()
    {
        org.mozilla.javascript.tools.debugger.Dim$StackFrame r0;
        org.mozilla.javascript.Scriptable $r1;

        r0 := @this: org.mozilla.javascript.tools.debugger.Dim$StackFrame;

        $r1 = r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: org.mozilla.javascript.Scriptable thisObj>;

        return $r1;
    }

    public java.lang.String getUrl()
    {
        org.mozilla.javascript.tools.debugger.Dim$SourceInfo $r2;
        org.mozilla.javascript.tools.debugger.Dim$FunctionSource $r1;
        org.mozilla.javascript.tools.debugger.Dim$StackFrame r0;
        java.lang.String $r3;

        r0 := @this: org.mozilla.javascript.tools.debugger.Dim$StackFrame;

        $r1 = r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: org.mozilla.javascript.tools.debugger.Dim$FunctionSource fsource>;

        $r2 = virtualinvoke $r1.<org.mozilla.javascript.tools.debugger.Dim$FunctionSource: org.mozilla.javascript.tools.debugger.Dim$SourceInfo sourceInfo()>();

        $r3 = virtualinvoke $r2.<org.mozilla.javascript.tools.debugger.Dim$SourceInfo: java.lang.String url()>();

        return $r3;
    }

    public int getLineNumber()
    {
        int $i0;
        org.mozilla.javascript.tools.debugger.Dim$StackFrame r0;

        r0 := @this: org.mozilla.javascript.tools.debugger.Dim$StackFrame;

        $i0 = r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: int lineNumber>;

        return $i0;
    }

    static org.mozilla.javascript.Scriptable access$1600(org.mozilla.javascript.tools.debugger.Dim$StackFrame)
    {
        org.mozilla.javascript.tools.debugger.Dim$StackFrame r0;
        org.mozilla.javascript.Scriptable $r1;

        r0 := @parameter0: org.mozilla.javascript.tools.debugger.Dim$StackFrame;

        $r1 = r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: org.mozilla.javascript.Scriptable scope>;

        return $r1;
    }

    static org.mozilla.javascript.Scriptable access$1700(org.mozilla.javascript.tools.debugger.Dim$StackFrame)
    {
        org.mozilla.javascript.tools.debugger.Dim$StackFrame r0;
        org.mozilla.javascript.Scriptable $r1;

        r0 := @parameter0: org.mozilla.javascript.tools.debugger.Dim$StackFrame;

        $r1 = r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: org.mozilla.javascript.Scriptable thisObj>;

        return $r1;
    }

    void <init>(org.mozilla.javascript.Context, org.mozilla.javascript.tools.debugger.Dim, org.mozilla.javascript.tools.debugger.Dim$FunctionSource, org.mozilla.javascript.tools.debugger.Dim$1)
    {
        org.mozilla.javascript.Context r1;
        org.mozilla.javascript.tools.debugger.Dim$1 r4;
        org.mozilla.javascript.tools.debugger.Dim$FunctionSource r3;
        org.mozilla.javascript.tools.debugger.Dim$StackFrame r0;
        org.mozilla.javascript.tools.debugger.Dim r2;

        r0 := @this: org.mozilla.javascript.tools.debugger.Dim$StackFrame;

        r1 := @parameter0: org.mozilla.javascript.Context;

        r2 := @parameter1: org.mozilla.javascript.tools.debugger.Dim;

        r3 := @parameter2: org.mozilla.javascript.tools.debugger.Dim$FunctionSource;

        r4 := @parameter3: org.mozilla.javascript.tools.debugger.Dim$1;

        specialinvoke r0.<org.mozilla.javascript.tools.debugger.Dim$StackFrame: void <init>(org.mozilla.javascript.Context,org.mozilla.javascript.tools.debugger.Dim,org.mozilla.javascript.tools.debugger.Dim$FunctionSource)>(r1, r2, r3);

        return;
    }
}
