public class com.mycila.inject.internal.asm.tree.MultiANewArrayInsnNode extends com.mycila.inject.internal.asm.tree.AbstractInsnNode
{
    public java.lang.String desc;
    public int dims;

    public void <init>(java.lang.String, int)
    {
        int i0;
        java.lang.String r1;
        com.mycila.inject.internal.asm.tree.MultiANewArrayInsnNode r0;

        r0 := @this: com.mycila.inject.internal.asm.tree.MultiANewArrayInsnNode;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<com.mycila.inject.internal.asm.tree.AbstractInsnNode: void <init>(int)>(197);

        r0.<com.mycila.inject.internal.asm.tree.MultiANewArrayInsnNode: java.lang.String desc> = r1;

        r0.<com.mycila.inject.internal.asm.tree.MultiANewArrayInsnNode: int dims> = i0;

        return;
    }

    public int getType()
    {
        com.mycila.inject.internal.asm.tree.MultiANewArrayInsnNode r0;

        r0 := @this: com.mycila.inject.internal.asm.tree.MultiANewArrayInsnNode;

        return 12;
    }

    public void accept(com.mycila.inject.internal.asm.MethodVisitor)
    {
        com.mycila.inject.internal.asm.MethodVisitor r0;
        int $i0;
        java.lang.String $r2;
        com.mycila.inject.internal.asm.tree.MultiANewArrayInsnNode r1;

        r1 := @this: com.mycila.inject.internal.asm.tree.MultiANewArrayInsnNode;

        r0 := @parameter0: com.mycila.inject.internal.asm.MethodVisitor;

        $r2 = r1.<com.mycila.inject.internal.asm.tree.MultiANewArrayInsnNode: java.lang.String desc>;

        $i0 = r1.<com.mycila.inject.internal.asm.tree.MultiANewArrayInsnNode: int dims>;

        interfaceinvoke r0.<com.mycila.inject.internal.asm.MethodVisitor: void visitMultiANewArrayInsn(java.lang.String,int)>($r2, $i0);

        return;
    }

    public com.mycila.inject.internal.asm.tree.AbstractInsnNode clone(java.util.Map)
    {
        java.util.Map r3;
        int $i0;
        java.lang.String $r2;
        com.mycila.inject.internal.asm.tree.MultiANewArrayInsnNode $r0, r1;

        r1 := @this: com.mycila.inject.internal.asm.tree.MultiANewArrayInsnNode;

        r3 := @parameter0: java.util.Map;

        $r0 = new com.mycila.inject.internal.asm.tree.MultiANewArrayInsnNode;

        $r2 = r1.<com.mycila.inject.internal.asm.tree.MultiANewArrayInsnNode: java.lang.String desc>;

        $i0 = r1.<com.mycila.inject.internal.asm.tree.MultiANewArrayInsnNode: int dims>;

        specialinvoke $r0.<com.mycila.inject.internal.asm.tree.MultiANewArrayInsnNode: void <init>(java.lang.String,int)>($r2, $i0);

        return $r0;
    }
}
