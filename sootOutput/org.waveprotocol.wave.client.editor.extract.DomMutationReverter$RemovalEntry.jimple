class org.waveprotocol.wave.client.editor.extract.DomMutationReverter$RemovalEntry extends java.lang.Object implements org.waveprotocol.wave.client.editor.extract.DomMutationReverter$Undoable
{
    com.google.gwt.dom.client.Node removedNode;
    com.google.gwt.dom.client.Element oldParent;
    com.google.gwt.dom.client.Node oldNodeAfter;
    boolean removeAfter;

    public void <init>(com.google.gwt.dom.client.Node, com.google.gwt.dom.client.Element, com.google.gwt.dom.client.Node, boolean)
    {
        com.google.gwt.dom.client.Element r1;
        java.lang.IllegalArgumentException $r4;
        com.google.gwt.dom.client.Node r2, r3;
        org.waveprotocol.wave.client.editor.extract.DomMutationReverter$RemovalEntry r0;
        boolean z0;

        r0 := @this: org.waveprotocol.wave.client.editor.extract.DomMutationReverter$RemovalEntry;

        r2 := @parameter0: com.google.gwt.dom.client.Node;

        r1 := @parameter1: com.google.gwt.dom.client.Element;

        r3 := @parameter2: com.google.gwt.dom.client.Node;

        z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Old parent cannot be null");

        throw $r4;

     label1:
        r0.<org.waveprotocol.wave.client.editor.extract.DomMutationReverter$RemovalEntry: boolean removeAfter> = z0;

        r0.<org.waveprotocol.wave.client.editor.extract.DomMutationReverter$RemovalEntry: com.google.gwt.dom.client.Node removedNode> = r2;

        r0.<org.waveprotocol.wave.client.editor.extract.DomMutationReverter$RemovalEntry: com.google.gwt.dom.client.Element oldParent> = r1;

        r0.<org.waveprotocol.wave.client.editor.extract.DomMutationReverter$RemovalEntry: com.google.gwt.dom.client.Node oldNodeAfter> = r3;

        return;
    }

    public void undo()
    {
        com.google.gwt.dom.client.Element $r3;
        com.google.gwt.dom.client.Node $r1, $r2;
        org.waveprotocol.wave.client.editor.extract.DomMutationReverter$RemovalEntry r0;

        r0 := @this: org.waveprotocol.wave.client.editor.extract.DomMutationReverter$RemovalEntry;

        $r3 = r0.<org.waveprotocol.wave.client.editor.extract.DomMutationReverter$RemovalEntry: com.google.gwt.dom.client.Element oldParent>;

        $r2 = r0.<org.waveprotocol.wave.client.editor.extract.DomMutationReverter$RemovalEntry: com.google.gwt.dom.client.Node removedNode>;

        $r1 = r0.<org.waveprotocol.wave.client.editor.extract.DomMutationReverter$RemovalEntry: com.google.gwt.dom.client.Node oldNodeAfter>;

        virtualinvoke $r3.<com.google.gwt.dom.client.Element: com.google.gwt.dom.client.Node insertBefore(com.google.gwt.dom.client.Node,com.google.gwt.dom.client.Node)>($r2, $r1);

        return;
    }

    public void cleanup()
    {
        org.waveprotocol.wave.common.logging.Logger $r2;
        com.google.gwt.dom.client.Text $r14;
        java.lang.String $r10, $r15;
        boolean $z0, $z1;
        com.google.gwt.core.client.JavaScriptObject $r7, $r13;
        org.waveprotocol.wave.common.logging.LoggerBundle $r1;
        com.google.gwt.dom.client.Element $r8;
        java.lang.StringBuilder $r3, $r4, $r9;
        com.google.gwt.dom.client.Node $r5, $r6, $r11, $r12;
        org.waveprotocol.wave.client.editor.extract.DomMutationReverter$RemovalEntry r0;

        r0 := @this: org.waveprotocol.wave.client.editor.extract.DomMutationReverter$RemovalEntry;

        $z0 = r0.<org.waveprotocol.wave.client.editor.extract.DomMutationReverter$RemovalEntry: boolean removeAfter>;

        if $z0 == 0 goto label3;

        $r1 = <org.waveprotocol.wave.client.editor.EditorStaticDeps: org.waveprotocol.wave.common.logging.LoggerBundle logger>;

        $r2 = interfaceinvoke $r1.<org.waveprotocol.wave.common.logging.LoggerBundle: org.waveprotocol.wave.common.logging.Logger trace()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("REVERT CLEANUP: ");

        $r5 = r0.<org.waveprotocol.wave.client.editor.extract.DomMutationReverter$RemovalEntry: com.google.gwt.dom.client.Node removedNode>;

        $z1 = staticinvoke <org.waveprotocol.wave.client.common.util.DomHelper: boolean isTextNode(com.google.gwt.dom.client.Node)>($r5);

        if $z1 == 0 goto label1;

        $r12 = r0.<org.waveprotocol.wave.client.editor.extract.DomMutationReverter$RemovalEntry: com.google.gwt.dom.client.Node removedNode>;

        $r13 = virtualinvoke $r12.<com.google.gwt.dom.client.Node: com.google.gwt.core.client.JavaScriptObject cast()>();

        $r14 = (com.google.gwt.dom.client.Text) $r13;

        $r15 = virtualinvoke $r14.<com.google.gwt.dom.client.Text: java.lang.String getData()>();

        goto label2;

     label1:
        $r6 = r0.<org.waveprotocol.wave.client.editor.extract.DomMutationReverter$RemovalEntry: com.google.gwt.dom.client.Node removedNode>;

        $r7 = virtualinvoke $r6.<com.google.gwt.dom.client.Node: com.google.gwt.core.client.JavaScriptObject cast()>();

        $r8 = (com.google.gwt.dom.client.Element) $r7;

        $r15 = virtualinvoke $r8.<com.google.gwt.dom.client.Element: java.lang.String getTagName()>();

     label2:
        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<org.waveprotocol.wave.common.logging.Logger: void log(java.lang.String)>($r10);

        $r11 = r0.<org.waveprotocol.wave.client.editor.extract.DomMutationReverter$RemovalEntry: com.google.gwt.dom.client.Node removedNode>;

        virtualinvoke $r11.<com.google.gwt.dom.client.Node: void removeFromParent()>();

     label3:
        return;
    }
}
