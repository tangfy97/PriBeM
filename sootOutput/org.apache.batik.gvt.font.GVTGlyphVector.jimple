public interface  org.apache.batik.gvt.font.GVTGlyphVector extends java.lang.Object
{

    public abstract org.apache.batik.gvt.font.GVTFont getFont();

    public abstract java.awt.font.FontRenderContext getFontRenderContext();

    public abstract int getGlyphCode(int);

    public abstract int[] getGlyphCodes(int, int, int[]);

    public abstract java.awt.font.GlyphJustificationInfo getGlyphJustificationInfo(int);

    public abstract java.awt.Shape getGlyphLogicalBounds(int);

    public abstract org.apache.batik.gvt.font.GVTGlyphMetrics getGlyphMetrics(int);

    public abstract java.awt.Shape getGlyphOutline(int);

    public abstract java.awt.geom.Rectangle2D getGlyphCellBounds(int);

    public abstract java.awt.geom.Point2D getGlyphPosition(int);

    public abstract float[] getGlyphPositions(int, int, float[]);

    public abstract java.awt.geom.AffineTransform getGlyphTransform(int);

    public abstract java.awt.Shape getGlyphVisualBounds(int);

    public abstract java.awt.geom.Rectangle2D getLogicalBounds();

    public abstract int getNumGlyphs();

    public abstract java.awt.Shape getOutline();

    public abstract java.awt.Shape getOutline(float, float);

    public abstract java.awt.geom.Rectangle2D getGeometricBounds();

    public abstract java.awt.geom.Rectangle2D getBounds2D(java.text.AttributedCharacterIterator);

    public abstract void performDefaultLayout();

    public abstract void setGlyphPosition(int, java.awt.geom.Point2D);

    public abstract void setGlyphTransform(int, java.awt.geom.AffineTransform);

    public abstract void setGlyphVisible(int, boolean);

    public abstract boolean isGlyphVisible(int);

    public abstract int getCharacterCount(int, int);

    public abstract void draw(java.awt.Graphics2D, java.text.AttributedCharacterIterator);
}
