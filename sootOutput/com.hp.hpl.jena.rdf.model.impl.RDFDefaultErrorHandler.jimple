public class com.hp.hpl.jena.rdf.model.impl.RDFDefaultErrorHandler extends java.lang.Object implements com.hp.hpl.jena.rdf.model.RDFErrorHandler
{
    public static boolean silent;
    public static final org.slf4j.Logger logger;

    public void <init>()
    {
        com.hp.hpl.jena.rdf.model.impl.RDFDefaultErrorHandler r0;

        r0 := @this: com.hp.hpl.jena.rdf.model.impl.RDFDefaultErrorHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void warning(java.lang.Exception)
    {
        com.hp.hpl.jena.rdf.model.impl.RDFDefaultErrorHandler r3;
        org.slf4j.Logger $r1;
        java.lang.String $r2;
        java.lang.Exception r0;
        boolean $z0;

        r3 := @this: com.hp.hpl.jena.rdf.model.impl.RDFDefaultErrorHandler;

        r0 := @parameter0: java.lang.Exception;

        $z0 = <com.hp.hpl.jena.rdf.model.impl.RDFDefaultErrorHandler: boolean silent>;

        if $z0 != 0 goto label1;

        $r1 = <com.hp.hpl.jena.rdf.model.impl.RDFDefaultErrorHandler: org.slf4j.Logger logger>;

        $r2 = staticinvoke <com.hp.hpl.jena.rdf.arp.ParseException: java.lang.String formatMessage(java.lang.Exception)>(r0);

        interfaceinvoke $r1.<org.slf4j.Logger: void warn(java.lang.String)>($r2);

     label1:
        return;
    }

    public void error(java.lang.Exception)
    {
        com.hp.hpl.jena.rdf.model.impl.RDFDefaultErrorHandler r3;
        org.slf4j.Logger $r1;
        java.lang.String $r2;
        java.lang.Exception r0;
        boolean $z0;

        r3 := @this: com.hp.hpl.jena.rdf.model.impl.RDFDefaultErrorHandler;

        r0 := @parameter0: java.lang.Exception;

        $z0 = <com.hp.hpl.jena.rdf.model.impl.RDFDefaultErrorHandler: boolean silent>;

        if $z0 != 0 goto label1;

        $r1 = <com.hp.hpl.jena.rdf.model.impl.RDFDefaultErrorHandler: org.slf4j.Logger logger>;

        $r2 = staticinvoke <com.hp.hpl.jena.rdf.arp.ParseException: java.lang.String formatMessage(java.lang.Exception)>(r0);

        interfaceinvoke $r1.<org.slf4j.Logger: void error(java.lang.String)>($r2);

     label1:
        return;
    }

    public void fatalError(java.lang.Exception)
    {
        org.slf4j.Logger $r1;
        com.hp.hpl.jena.shared.JenaException $r5;
        java.lang.RuntimeException $r4;
        java.lang.Exception r0;
        com.hp.hpl.jena.rdf.model.impl.RDFDefaultErrorHandler r3;
        java.lang.String $r2;
        boolean $z0, $z1;

        r3 := @this: com.hp.hpl.jena.rdf.model.impl.RDFDefaultErrorHandler;

        r0 := @parameter0: java.lang.Exception;

        $z0 = <com.hp.hpl.jena.rdf.model.impl.RDFDefaultErrorHandler: boolean silent>;

        if $z0 != 0 goto label1;

        $r1 = <com.hp.hpl.jena.rdf.model.impl.RDFDefaultErrorHandler: org.slf4j.Logger logger>;

        $r2 = staticinvoke <com.hp.hpl.jena.rdf.arp.ParseException: java.lang.String formatMessage(java.lang.Exception)>(r0);

        interfaceinvoke $r1.<org.slf4j.Logger: void error(java.lang.String)>($r2);

     label1:
        $z1 = r0 instanceof java.lang.RuntimeException;

        if $z1 == 0 goto label2;

        $r4 = (java.lang.RuntimeException) r0;

        goto label3;

     label2:
        $r5 = new com.hp.hpl.jena.shared.JenaException;

        $r4 = $r5;

        specialinvoke $r5.<com.hp.hpl.jena.shared.JenaException: void <init>(java.lang.Throwable)>(r0);

     label3:
        throw $r4;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        <com.hp.hpl.jena.rdf.model.impl.RDFDefaultErrorHandler: boolean silent> = 0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/hp/hpl/jena/rdf/model/impl/RDFDefaultErrorHandler;");

        <com.hp.hpl.jena.rdf.model.impl.RDFDefaultErrorHandler: org.slf4j.Logger logger> = $r0;

        return;
    }
}
