public class groovy.swing.factory.EtchedBorderFactory extends groovy.swing.factory.SwingBorderFactory
{
    private final int type;
    public static java.lang.Long __timeStamp;
    public static java.lang.Long __timeStamp__239_neverHappen1239119697199;
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;
    static java.lang.Class class$java$lang$Object;
    static java.lang.Class class$java$lang$RuntimeException;
    static java.lang.Class class$javax$swing$BorderFactory;
    static java.lang.Class class$java$awt$Color;
    static java.lang.Class class$java$lang$Integer;

    public void <init>(int)
    {
        groovy.swing.factory.EtchedBorderFactory r0;
        int i0, $i1;
        java.lang.Class $r1, $r2, $r4, $r5;
        java.lang.Object $r3;

        r0 := @this: groovy.swing.factory.EtchedBorderFactory;

        i0 := @parameter0: int;

        specialinvoke r0.<groovy.swing.factory.SwingBorderFactory: void <init>()>();

        $r1 = <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$0>;

        if $r1 != null goto label1;

        $r4 = staticinvoke <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.EtchedBorderFactory");

        <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$0> = $r4;

        goto label2;

     label1:
        $r4 = <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$0>;

     label2:
        $r2 = <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r5 = staticinvoke <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$groovy$lang$MetaClass> = $r5;

        goto label4;

     label3:
        $r5 = <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object box(int)>(i0);

        $i1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: int intUnbox(java.lang.Object)>($r3);

        r0.<groovy.swing.factory.EtchedBorderFactory: int type> = $i1;

        return;
    }

    public java.lang.Object newInstance(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object, java.util.Map)
    {
        java.awt.Color $r41, $r42;
        java.util.Map r3;
        groovy.swing.factory.EtchedBorderFactory r12;
        java.lang.Throwable $r25;
        java.lang.Object[] $r4, $r8, $r11, $r19, $r21, $r26, $r30, $r35;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        groovy.util.FactoryBuilderSupport r6;
        org.codehaus.groovy.runtime.GStringImpl $r20;
        java.lang.String[] $r23;
        int $i0, $i1;
        java.lang.Boolean $r48, $r49;
        java.lang.Class $r0, r1, $r2, $r10, $r15, $r18, $r28, $r32, $r34, $r38, $r44, $r45, $r46, $r47, $r50, $r51, $r52, $r53, $r54;
        java.lang.Object $r5, $r7, $r9, $r13, $r14, $r16, $r17, r22, $r24, $r27, $r29, $r31, $r33, $r36, $r37, $r39, $r40, r43;

        r12 := @this: groovy.swing.factory.EtchedBorderFactory;

        r6 := @parameter0: groovy.util.FactoryBuilderSupport;

        r22 := @parameter1: java.lang.Object;

        r43 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.util.Map;

        $r0 = <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r44 = staticinvoke <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.EtchedBorderFactory");

        <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$0> = $r44;

        goto label02;

     label01:
        $r44 = <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$0>;

     label02:
        r1 = $r44;

        $r2 = <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r45 = staticinvoke <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$groovy$lang$MetaClass> = $r45;

        goto label04;

     label03:
        $r45 = <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = "parent";

        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "remove", $r4);

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r6, "context");

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void setProperty(java.lang.Object,java.lang.Class,java.lang.Object,java.lang.String)>($r5, r1, $r7, "applyBorderToParent");

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = "highlight";

        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "containsKey", $r8);

        $z0 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r9);

        if $z0 == 0 goto label20;

        $r26 = newarray (java.lang.Object)[1];

        $r26[0] = "highlight";

        $r27 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "remove", $r26);

        $r28 = <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$java$awt$Color>;

        if $r28 != null goto label05;

        $r46 = staticinvoke <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$(java.lang.String)>("java.awt.Color");

        <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$java$awt$Color> = $r46;

        goto label06;

     label05:
        $r46 = <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$java$awt$Color>;

     label06:
        $r29 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r27, $r46);

        $r42 = (java.awt.Color) $r29;

        $r30 = newarray (java.lang.Object)[1];

        $r30[0] = "shadow";

        $r31 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "remove", $r30);

        $r32 = <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$java$awt$Color>;

        if $r32 != null goto label07;

        $r47 = staticinvoke <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$(java.lang.String)>("java.awt.Color");

        <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$java$awt$Color> = $r47;

        goto label08;

     label07:
        $r47 = <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$java$awt$Color>;

     label08:
        $r33 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r31, $r47);

        $r41 = (java.awt.Color) $r33;

        $z2 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r42);

        if $z2 == 0 goto label09;

        $z4 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r41);

        if $z4 == 0 goto label09;

        $r48 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label10;

     label09:
        $r48 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label10:
        $z5 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r48);

        if $z5 == 0 goto label13;

        $z3 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>(r3);

        if $z3 != 0 goto label11;

        $z6 = 1;

        goto label12;

     label11:
        $z6 = 0;

     label12:
        if $z6 == 0 goto label13;

        $r49 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label14;

     label13:
        $r49 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label14:
        $z7 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r49);

        if $z7 == 0 goto label19;

        $r34 = <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$javax$swing$BorderFactory>;

        if $r34 != null goto label15;

        $r50 = staticinvoke <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$(java.lang.String)>("javax.swing.BorderFactory");

        <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$javax$swing$BorderFactory> = $r50;

        goto label16;

     label15:
        $r50 = <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$javax$swing$BorderFactory>;

     label16:
        $r35 = newarray (java.lang.Object)[3];

        $i1 = r12.<groovy.swing.factory.EtchedBorderFactory: int type>;

        $r36 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object box(int)>($i1);

        $r35[0] = $r36;

        $r35[1] = $r42;

        $r35[2] = $r41;

        $r37 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r50, "createEtchedBorder", $r35);

        $r38 = <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$java$lang$Object>;

        if $r38 != null goto label17;

        $r51 = staticinvoke <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$java$lang$Object> = $r51;

        goto label18;

     label17:
        $r51 = <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$java$lang$Object>;

     label18:
        $r39 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r37, $r51);

        $r40 = (java.lang.Object) $r39;

        return $r40;

     label19:
        goto label20;

     label20:
        $z1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>(r3);

        if $z1 == 0 goto label23;

        $r18 = <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$java$lang$RuntimeException>;

        if $r18 != null goto label21;

        $r52 = staticinvoke <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$(java.lang.String)>("java.lang.RuntimeException");

        <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$java$lang$RuntimeException> = $r52;

        goto label22;

     label21:
        $r52 = <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$java$lang$RuntimeException>;

     label22:
        $r19 = newarray (java.lang.Object)[1];

        $r20 = new org.codehaus.groovy.runtime.GStringImpl;

        $r21 = newarray (java.lang.Object)[1];

        $r21[0] = r22;

        $r23 = newarray (java.lang.String)[2];

        $r23[0] = "";

        $r23[1] = " only accepts no attributes, or highlight: and shadow: attributes";

        specialinvoke $r20.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r21, $r23);

        $r19[0] = $r20;

        $r24 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r52, $r19);

        $r25 = (java.lang.Throwable) $r24;

        throw $r25;

     label23:
        $r10 = <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$javax$swing$BorderFactory>;

        if $r10 != null goto label24;

        $r53 = staticinvoke <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$(java.lang.String)>("javax.swing.BorderFactory");

        <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$javax$swing$BorderFactory> = $r53;

        goto label25;

     label24:
        $r53 = <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$javax$swing$BorderFactory>;

     label25:
        $r11 = newarray (java.lang.Object)[1];

        $i0 = r12.<groovy.swing.factory.EtchedBorderFactory: int type>;

        $r13 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object box(int)>($i0);

        $r11[0] = $r13;

        $r14 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r53, "createEtchedBorder", $r11);

        $r15 = <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$java$lang$Object>;

        if $r15 != null goto label26;

        $r54 = staticinvoke <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$java$lang$Object> = $r54;

        goto label27;

     label26:
        $r54 = <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$java$lang$Object>;

     label27:
        $r16 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r14, $r54);

        $r17 = (java.lang.Object) $r16;

        return $r17;
    }

    static void <clinit>()
    {
        java.lang.Long $r2, $r3, $r4, $r5;
        java.lang.Class $r0, $r1, $r6, $r7;

        $r0 = <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.EtchedBorderFactory");

        <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r2 = new java.lang.Long;

        specialinvoke $r2.<java.lang.Long: void <init>(long)>(1239119697199L);

        $r3 = (java.lang.Long) $r2;

        <groovy.swing.factory.EtchedBorderFactory: java.lang.Long __timeStamp> = $r3;

        $r4 = new java.lang.Long;

        specialinvoke $r4.<java.lang.Long: void <init>(long)>(0L);

        $r5 = (java.lang.Long) $r4;

        <groovy.swing.factory.EtchedBorderFactory: java.lang.Long __timeStamp__239_neverHappen1239119697199> = $r5;

        return;
    }

    public final int getType()
    {
        groovy.swing.factory.EtchedBorderFactory r2;
        java.lang.Integer $r6;
        int $i0, $i1;
        java.lang.Class $r0, $r1, $r4, $r7, $r8, $r9;
        java.lang.Object $r3, $r5;

        r2 := @this: groovy.swing.factory.EtchedBorderFactory;

        $r0 = <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.EtchedBorderFactory");

        <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$0> = $r7;

        goto label2;

     label1:
        $r7 = <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r8 = staticinvoke <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$groovy$lang$MetaClass> = $r8;

        goto label4;

     label3:
        $r8 = <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $i0 = r2.<groovy.swing.factory.EtchedBorderFactory: int type>;

        $r3 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: java.lang.Object box(int)>($i0);

        $r4 = <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$java$lang$Integer>;

        if $r4 != null goto label5;

        $r9 = staticinvoke <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$(java.lang.String)>("java.lang.Integer");

        <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$java$lang$Integer> = $r9;

        goto label6;

     label5:
        $r9 = <groovy.swing.factory.EtchedBorderFactory: java.lang.Class class$java$lang$Integer>;

     label6:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r3, $r9);

        $r6 = (java.lang.Integer) $r5;

        $i1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: int intUnbox(java.lang.Object)>($r6);

        return $i1;
    }

    java.lang.Object super$3$getProperty(java.lang.String)
    {
        groovy.swing.factory.EtchedBorderFactory r0;
        java.lang.Object $r2;
        java.lang.String r1;

        r0 := @this: groovy.swing.factory.EtchedBorderFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<groovy.swing.factory.SwingBorderFactory: java.lang.Object getProperty(java.lang.String)>(r1);

        return $r2;
    }

    java.lang.String super$1$toString()
    {
        groovy.swing.factory.EtchedBorderFactory r0;
        java.lang.String $r1;

        r0 := @this: groovy.swing.factory.EtchedBorderFactory;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    boolean super$3$isLeaf()
    {
        groovy.swing.factory.EtchedBorderFactory r0;
        boolean $z0;

        r0 := @this: groovy.swing.factory.EtchedBorderFactory;

        $z0 = specialinvoke r0.<groovy.swing.factory.SwingBorderFactory: boolean isLeaf()>();

        return $z0;
    }

    void super$2$setChild(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object)
    {
        groovy.swing.factory.EtchedBorderFactory r0;
        groovy.util.FactoryBuilderSupport r1;
        java.lang.Object r2, r3;

        r0 := @this: groovy.swing.factory.EtchedBorderFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<groovy.util.AbstractFactory: void setChild(groovy.util.FactoryBuilderSupport,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return;
    }

    void super$3$setProperty(java.lang.String, java.lang.Object)
    {
        groovy.swing.factory.EtchedBorderFactory r0;
        java.lang.Object r2;
        java.lang.String r1;

        r0 := @this: groovy.swing.factory.EtchedBorderFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<groovy.swing.factory.SwingBorderFactory: void setProperty(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    void super$1$notify()
    {
        groovy.swing.factory.EtchedBorderFactory r0;

        r0 := @this: groovy.swing.factory.EtchedBorderFactory;

        specialinvoke r0.<java.lang.Object: void notify()>();

        return;
    }

    void super$1$notifyAll()
    {
        groovy.swing.factory.EtchedBorderFactory r0;

        r0 := @this: groovy.swing.factory.EtchedBorderFactory;

        specialinvoke r0.<java.lang.Object: void notifyAll()>();

        return;
    }

    void super$3$setParent(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object)
    {
        groovy.swing.factory.EtchedBorderFactory r0;
        groovy.util.FactoryBuilderSupport r1;
        java.lang.Object r2, r3;

        r0 := @this: groovy.swing.factory.EtchedBorderFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<groovy.swing.factory.SwingBorderFactory: void setParent(groovy.util.FactoryBuilderSupport,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return;
    }

    java.lang.Object super$1$clone()
    {
        groovy.swing.factory.EtchedBorderFactory r0;
        java.lang.Object $r1;

        r0 := @this: groovy.swing.factory.EtchedBorderFactory;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }

    void super$1$wait()
    {
        groovy.swing.factory.EtchedBorderFactory r0;

        r0 := @this: groovy.swing.factory.EtchedBorderFactory;

        specialinvoke r0.<java.lang.Object: void wait()>();

        return;
    }

    groovy.lang.MetaClass super$3$getMetaClass()
    {
        groovy.swing.factory.EtchedBorderFactory r0;
        groovy.lang.MetaClass $r1;

        r0 := @this: groovy.swing.factory.EtchedBorderFactory;

        $r1 = specialinvoke r0.<groovy.swing.factory.SwingBorderFactory: groovy.lang.MetaClass getMetaClass()>();

        return $r1;
    }

    void super$1$wait(long, int)
    {
        groovy.swing.factory.EtchedBorderFactory r0;
        int i1;
        long l0;

        r0 := @this: groovy.swing.factory.EtchedBorderFactory;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void wait(long,int)>(l0, i1);

        return;
    }

    void super$3$setMetaClass(groovy.lang.MetaClass)
    {
        groovy.swing.factory.EtchedBorderFactory r0;
        groovy.lang.MetaClass r1;

        r0 := @this: groovy.swing.factory.EtchedBorderFactory;

        r1 := @parameter0: groovy.lang.MetaClass;

        specialinvoke r0.<groovy.swing.factory.SwingBorderFactory: void setMetaClass(groovy.lang.MetaClass)>(r1);

        return;
    }

    java.lang.Class super$1$getClass()
    {
        groovy.swing.factory.EtchedBorderFactory r0;
        java.lang.Class $r1;

        r0 := @this: groovy.swing.factory.EtchedBorderFactory;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        return $r1;
    }

    void super$2$onNodeCompleted(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object)
    {
        groovy.swing.factory.EtchedBorderFactory r0;
        groovy.util.FactoryBuilderSupport r1;
        java.lang.Object r2, r3;

        r0 := @this: groovy.swing.factory.EtchedBorderFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<groovy.util.AbstractFactory: void onNodeCompleted(groovy.util.FactoryBuilderSupport,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return;
    }

    void super$1$finalize()
    {
        groovy.swing.factory.EtchedBorderFactory r0;

        r0 := @this: groovy.swing.factory.EtchedBorderFactory;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    void super$1$wait(long)
    {
        groovy.swing.factory.EtchedBorderFactory r0;
        long l0;

        r0 := @this: groovy.swing.factory.EtchedBorderFactory;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void wait(long)>(l0);

        return;
    }

    boolean super$3$onHandleNodeAttributes(groovy.util.FactoryBuilderSupport, java.lang.Object, java.util.Map)
    {
        groovy.swing.factory.EtchedBorderFactory r0;
        groovy.util.FactoryBuilderSupport r1;
        java.util.Map r3;
        java.lang.Object r2;
        boolean $z0;

        r0 := @this: groovy.swing.factory.EtchedBorderFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.util.Map;

        $z0 = specialinvoke r0.<groovy.swing.factory.SwingBorderFactory: boolean onHandleNodeAttributes(groovy.util.FactoryBuilderSupport,java.lang.Object,java.util.Map)>(r1, r2, r3);

        return $z0;
    }

    boolean super$1$equals(java.lang.Object)
    {
        groovy.swing.factory.EtchedBorderFactory r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: groovy.swing.factory.EtchedBorderFactory;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    java.lang.Object super$3$invokeMethod(java.lang.String, java.lang.Object)
    {
        groovy.swing.factory.EtchedBorderFactory r0;
        java.lang.Object r2, $r3;
        java.lang.String r1;

        r0 := @this: groovy.swing.factory.EtchedBorderFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = specialinvoke r0.<groovy.swing.factory.SwingBorderFactory: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>(r1, r2);

        return $r3;
    }

    int super$1$hashCode()
    {
        groovy.swing.factory.EtchedBorderFactory r0;
        int $i0;

        r0 := @this: groovy.swing.factory.EtchedBorderFactory;

        $i0 = specialinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
