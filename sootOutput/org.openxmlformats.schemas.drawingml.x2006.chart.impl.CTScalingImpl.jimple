public class org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl extends org.apache.xmlbeans.impl.values.XmlComplexContentImpl implements org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling
{
    private static final javax.xml.namespace.QName LOGBASE$0;
    private static final javax.xml.namespace.QName ORIENTATION$2;
    private static final javax.xml.namespace.QName MAX$4;
    private static final javax.xml.namespace.QName MIN$6;
    private static final javax.xml.namespace.QName EXTLST$8;

    public void <init>(org.apache.xmlbeans.SchemaType)
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl r0;
        org.apache.xmlbeans.SchemaType r1;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl;

        r1 := @parameter0: org.apache.xmlbeans.SchemaType;

        specialinvoke r0.<org.apache.xmlbeans.impl.values.XmlComplexContentImpl: void <init>(org.apache.xmlbeans.SchemaType)>(r1);

        return;
    }

    public org.openxmlformats.schemas.drawingml.x2006.chart.CTLogBase getLogBase()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTLogBase r6;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName LOGBASE$0>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, 0);

        r6 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTLogBase) $r4;

        if r6 != null goto label3;

        exitmonitor $r1;

     label2:
        return null;

     label3:
        exitmonitor $r1;

     label4:
        return r6;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean isSetLogBase()
    {
        java.lang.Throwable $r4;
        int $i0;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName LOGBASE$0>;

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>($r3);

        if $i0 == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setLogBase(org.openxmlformats.schemas.drawingml.x2006.chart.CTLogBase)
    {
        java.lang.Throwable $r9;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTLogBase r5, r10;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl;

        r5 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.chart.CTLogBase;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName LOGBASE$0>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, 0);

        r10 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTLogBase) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName LOGBASE$0>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTLogBase) $r8;

     label2:
        interfaceinvoke r10.<org.openxmlformats.schemas.drawingml.x2006.chart.CTLogBase: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.openxmlformats.schemas.drawingml.x2006.chart.CTLogBase addNewLogBase()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTLogBase r6;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName LOGBASE$0>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTLogBase) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void unsetLogBase()
    {
        java.lang.Throwable $r4;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName LOGBASE$0>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>($r3, 0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.openxmlformats.schemas.drawingml.x2006.chart.CTOrientation getOrientation()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTOrientation r6;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName ORIENTATION$2>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, 0);

        r6 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTOrientation) $r4;

        if r6 != null goto label3;

        exitmonitor $r1;

     label2:
        return null;

     label3:
        exitmonitor $r1;

     label4:
        return r6;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean isSetOrientation()
    {
        java.lang.Throwable $r4;
        int $i0;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName ORIENTATION$2>;

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>($r3);

        if $i0 == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setOrientation(org.openxmlformats.schemas.drawingml.x2006.chart.CTOrientation)
    {
        java.lang.Throwable $r9;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTOrientation r5, r10;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl;

        r5 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.chart.CTOrientation;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName ORIENTATION$2>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, 0);

        r10 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTOrientation) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName ORIENTATION$2>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTOrientation) $r8;

     label2:
        interfaceinvoke r10.<org.openxmlformats.schemas.drawingml.x2006.chart.CTOrientation: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.openxmlformats.schemas.drawingml.x2006.chart.CTOrientation addNewOrientation()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTOrientation r6;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName ORIENTATION$2>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTOrientation) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void unsetOrientation()
    {
        java.lang.Throwable $r4;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName ORIENTATION$2>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>($r3, 0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble getMax()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl r0;
        java.lang.Object $r1;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName MAX$4>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, 0);

        r6 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble) $r4;

        if r6 != null goto label3;

        exitmonitor $r1;

     label2:
        return null;

     label3:
        exitmonitor $r1;

     label4:
        return r6;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean isSetMax()
    {
        java.lang.Throwable $r4;
        int $i0;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName MAX$4>;

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>($r3);

        if $i0 == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setMax(org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl r0;
        java.lang.Object $r1;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble r5, r10;
        javax.xml.namespace.QName $r3, $r7;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl;

        r5 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName MAX$4>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, 0);

        r10 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName MAX$4>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble) $r8;

     label2:
        interfaceinvoke r10.<org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble addNewMax()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl r0;
        java.lang.Object $r1;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName MAX$4>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void unsetMax()
    {
        java.lang.Throwable $r4;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName MAX$4>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>($r3, 0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble getMin()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl r0;
        java.lang.Object $r1;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName MIN$6>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, 0);

        r6 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble) $r4;

        if r6 != null goto label3;

        exitmonitor $r1;

     label2:
        return null;

     label3:
        exitmonitor $r1;

     label4:
        return r6;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean isSetMin()
    {
        java.lang.Throwable $r4;
        int $i0;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName MIN$6>;

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>($r3);

        if $i0 == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setMin(org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl r0;
        java.lang.Object $r1;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble r5, r10;
        javax.xml.namespace.QName $r3, $r7;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl;

        r5 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName MIN$6>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, 0);

        r10 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName MIN$6>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble) $r8;

     label2:
        interfaceinvoke r10.<org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble addNewMin()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl r0;
        java.lang.Object $r1;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName MIN$6>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void unsetMin()
    {
        java.lang.Throwable $r4;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName MIN$6>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>($r3, 0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.openxmlformats.schemas.drawingml.x2006.chart.CTExtensionList getExtLst()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTExtensionList r6;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName EXTLST$8>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, 0);

        r6 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTExtensionList) $r4;

        if r6 != null goto label3;

        exitmonitor $r1;

     label2:
        return null;

     label3:
        exitmonitor $r1;

     label4:
        return r6;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean isSetExtLst()
    {
        java.lang.Throwable $r4;
        int $i0;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName EXTLST$8>;

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>($r3);

        if $i0 == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setExtLst(org.openxmlformats.schemas.drawingml.x2006.chart.CTExtensionList)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTExtensionList r5, r10;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;
        org.apache.xmlbeans.XmlObject $r11;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl;

        r5 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.chart.CTExtensionList;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName EXTLST$8>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, 0);

        r10 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTExtensionList) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName EXTLST$8>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTExtensionList) $r8;

     label2:
        $r11 = (org.apache.xmlbeans.XmlObject) r5;

        interfaceinvoke r10.<org.openxmlformats.schemas.drawingml.x2006.chart.CTExtensionList: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>($r11);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.openxmlformats.schemas.drawingml.x2006.chart.CTExtensionList addNewExtLst()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTExtensionList r6;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName EXTLST$8>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.openxmlformats.schemas.drawingml.x2006.chart.CTExtensionList) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void unsetExtLst()
    {
        java.lang.Throwable $r4;
        org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl;

        $r1 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName EXTLST$8>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>($r3, 0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static void <clinit>()
    {
        javax.xml.namespace.QName $r0, $r1, $r2, $r3, $r4;

        $r0 = new javax.xml.namespace.QName;

        specialinvoke $r0.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://schemas.openxmlformats.org/drawingml/2006/chart", "logBase");

        <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName LOGBASE$0> = $r0;

        $r1 = new javax.xml.namespace.QName;

        specialinvoke $r1.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://schemas.openxmlformats.org/drawingml/2006/chart", "orientation");

        <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName ORIENTATION$2> = $r1;

        $r2 = new javax.xml.namespace.QName;

        specialinvoke $r2.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://schemas.openxmlformats.org/drawingml/2006/chart", "max");

        <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName MAX$4> = $r2;

        $r3 = new javax.xml.namespace.QName;

        specialinvoke $r3.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://schemas.openxmlformats.org/drawingml/2006/chart", "min");

        <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName MIN$6> = $r3;

        $r4 = new javax.xml.namespace.QName;

        specialinvoke $r4.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://schemas.openxmlformats.org/drawingml/2006/chart", "extLst");

        <org.openxmlformats.schemas.drawingml.x2006.chart.impl.CTScalingImpl: javax.xml.namespace.QName EXTLST$8> = $r4;

        return;
    }
}
