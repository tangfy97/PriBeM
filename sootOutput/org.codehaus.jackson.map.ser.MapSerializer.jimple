public class org.codehaus.jackson.map.ser.MapSerializer extends org.codehaus.jackson.map.ser.std.MapSerializer
{

    protected void <init>()
    {
        org.codehaus.jackson.map.ser.MapSerializer r0;

        r0 := @this: org.codehaus.jackson.map.ser.MapSerializer;

        specialinvoke r0.<org.codehaus.jackson.map.ser.MapSerializer: void <init>(java.util.HashSet,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.BeanProperty)>(null, null, null, 0, null, null, null, null);

        return;
    }

    protected void <init>(java.util.HashSet, org.codehaus.jackson.type.JavaType, boolean, org.codehaus.jackson.map.TypeSerializer)
    {
        java.util.HashSet r1;
        org.codehaus.jackson.map.TypeSerializer r3;
        org.codehaus.jackson.type.JavaType r2, $r4;
        org.codehaus.jackson.map.ser.MapSerializer r0;
        boolean z0;

        r0 := @this: org.codehaus.jackson.map.ser.MapSerializer;

        r1 := @parameter0: java.util.HashSet;

        r2 := @parameter1: org.codehaus.jackson.type.JavaType;

        z0 := @parameter2: boolean;

        r3 := @parameter3: org.codehaus.jackson.map.TypeSerializer;

        $r4 = <org.codehaus.jackson.map.ser.MapSerializer: org.codehaus.jackson.type.JavaType UNSPECIFIED_TYPE>;

        specialinvoke r0.<org.codehaus.jackson.map.ser.std.MapSerializer: void <init>(java.util.HashSet,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.BeanProperty)>(r1, $r4, r2, z0, r3, null, null, null);

        return;
    }

    protected void <init>(java.util.HashSet, org.codehaus.jackson.type.JavaType, org.codehaus.jackson.type.JavaType, boolean, org.codehaus.jackson.map.TypeSerializer, org.codehaus.jackson.map.JsonSerializer, org.codehaus.jackson.map.BeanProperty)
    {
        org.codehaus.jackson.map.JsonSerializer r5;
        org.codehaus.jackson.map.BeanProperty r6;
        java.util.HashSet r1;
        org.codehaus.jackson.map.TypeSerializer r4;
        org.codehaus.jackson.type.JavaType r2, r3;
        org.codehaus.jackson.map.ser.MapSerializer r0;
        boolean z0;

        r0 := @this: org.codehaus.jackson.map.ser.MapSerializer;

        r1 := @parameter0: java.util.HashSet;

        r2 := @parameter1: org.codehaus.jackson.type.JavaType;

        r3 := @parameter2: org.codehaus.jackson.type.JavaType;

        z0 := @parameter3: boolean;

        r4 := @parameter4: org.codehaus.jackson.map.TypeSerializer;

        r5 := @parameter5: org.codehaus.jackson.map.JsonSerializer;

        r6 := @parameter6: org.codehaus.jackson.map.BeanProperty;

        specialinvoke r0.<org.codehaus.jackson.map.ser.std.MapSerializer: void <init>(java.util.HashSet,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.BeanProperty)>(r1, r2, r3, z0, r4, r5, null, r6);

        return;
    }

    protected void <init>(java.util.HashSet, org.codehaus.jackson.type.JavaType, org.codehaus.jackson.type.JavaType, boolean, org.codehaus.jackson.map.TypeSerializer, org.codehaus.jackson.map.JsonSerializer, org.codehaus.jackson.map.JsonSerializer, org.codehaus.jackson.map.BeanProperty)
    {
        org.codehaus.jackson.map.JsonSerializer r5, r6;
        org.codehaus.jackson.map.BeanProperty r7;
        java.util.HashSet r1;
        org.codehaus.jackson.map.TypeSerializer r4;
        org.codehaus.jackson.type.JavaType r2, r3;
        org.codehaus.jackson.map.ser.MapSerializer r0;
        boolean z0;

        r0 := @this: org.codehaus.jackson.map.ser.MapSerializer;

        r1 := @parameter0: java.util.HashSet;

        r2 := @parameter1: org.codehaus.jackson.type.JavaType;

        r3 := @parameter2: org.codehaus.jackson.type.JavaType;

        z0 := @parameter3: boolean;

        r4 := @parameter4: org.codehaus.jackson.map.TypeSerializer;

        r5 := @parameter5: org.codehaus.jackson.map.JsonSerializer;

        r6 := @parameter6: org.codehaus.jackson.map.JsonSerializer;

        r7 := @parameter7: org.codehaus.jackson.map.BeanProperty;

        specialinvoke r0.<org.codehaus.jackson.map.ser.std.MapSerializer: void <init>(java.util.HashSet,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.BeanProperty)>(r1, r2, r3, z0, r4, r5, r6, r7);

        return;
    }
}
