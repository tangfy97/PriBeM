class ucar.nc2.ncml.AggregationTiled$DatasetTiled extends ucar.nc2.ncml.Aggregation$Dataset
{
    protected java.lang.String sectionSpec;
    protected ucar.ma2.Section section;
    final ucar.nc2.ncml.AggregationTiled this$0;

    protected void <init>(ucar.nc2.ncml.AggregationTiled, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.util.EnumSet, ucar.nc2.util.cache.FileFactory)
    {
        ucar.ma2.Section $r8;
        java.lang.IllegalArgumentException $r10;
        ucar.ma2.InvalidRangeException $r9;
        ucar.nc2.ncml.AggregationTiled$DatasetTiled r0;
        ucar.nc2.ncml.AggregationTiled r1;
        java.lang.String r2, r3, r4, r7;
        ucar.nc2.util.cache.FileFactory r6;
        java.util.EnumSet r5;

        r0 := @this: ucar.nc2.ncml.AggregationTiled$DatasetTiled;

        r1 := @parameter0: ucar.nc2.ncml.AggregationTiled;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r7 := @parameter4: java.lang.String;

        r5 := @parameter5: java.util.EnumSet;

        r6 := @parameter6: ucar.nc2.util.cache.FileFactory;

        r0.<ucar.nc2.ncml.AggregationTiled$DatasetTiled: ucar.nc2.ncml.AggregationTiled this$0> = r1;

        specialinvoke r0.<ucar.nc2.ncml.Aggregation$Dataset: void <init>(ucar.nc2.ncml.Aggregation,java.lang.String,java.lang.String,java.lang.String,java.util.EnumSet,ucar.nc2.util.cache.FileFactory)>(r1, r2, r3, r4, r5, r6);

        r0.<ucar.nc2.ncml.AggregationTiled$DatasetTiled: java.lang.String sectionSpec> = r7;

     label1:
        $r8 = new ucar.ma2.Section;

        specialinvoke $r8.<ucar.ma2.Section: void <init>(java.lang.String)>(r7);

        r0.<ucar.nc2.ncml.AggregationTiled$DatasetTiled: ucar.ma2.Section section> = $r8;

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

     label4:
        return;

        catch ucar.ma2.InvalidRangeException from label1 to label2 with label3;
    }

    boolean isNeeded(ucar.ma2.Section) throws ucar.ma2.InvalidRangeException
    {
        ucar.ma2.Section r1, $r2;
        ucar.nc2.ncml.AggregationTiled$DatasetTiled r0;
        boolean $z0;

        r0 := @this: ucar.nc2.ncml.AggregationTiled$DatasetTiled;

        r1 := @parameter0: ucar.ma2.Section;

        $r2 = r0.<ucar.nc2.ncml.AggregationTiled$DatasetTiled: ucar.ma2.Section section>;

        $z0 = virtualinvoke $r2.<ucar.ma2.Section: boolean intersects(ucar.ma2.Section)>(r1);

        return $z0;
    }

    ucar.ma2.Section makeVarSection(ucar.nc2.Variable)
    {
        ucar.ma2.Range r6, $r10, $r11;
        ucar.ma2.Section $r1, $r2, $r8;
        java.util.Iterator $r4;
        java.util.List $r3;
        ucar.nc2.ncml.AggregationTiled$DatasetTiled r7;
        ucar.nc2.Variable r0;
        java.lang.Object $r5;
        java.lang.String $r9;
        boolean $z0;

        r7 := @this: ucar.nc2.ncml.AggregationTiled$DatasetTiled;

        r0 := @parameter0: ucar.nc2.Variable;

        $r1 = virtualinvoke r0.<ucar.nc2.Variable: ucar.ma2.Section getShapeAsSection()>();

        $r2 = new ucar.ma2.Section;

        specialinvoke $r2.<ucar.ma2.Section: void <init>()>();

        $r3 = virtualinvoke $r1.<ucar.ma2.Section: java.util.List getRanges()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (ucar.ma2.Range) $r5;

        $r8 = r7.<ucar.nc2.ncml.AggregationTiled$DatasetTiled: ucar.ma2.Section section>;

        $r9 = virtualinvoke r6.<ucar.ma2.Range: java.lang.String getName()>();

        $r10 = virtualinvoke $r8.<ucar.ma2.Section: ucar.ma2.Range find(java.lang.String)>($r9);

        if $r10 == null goto label2;

        $r11 = $r10;

        goto label3;

     label2:
        $r11 = r6;

     label3:
        virtualinvoke $r2.<ucar.ma2.Section: ucar.ma2.Section appendRange(ucar.ma2.Range)>($r11);

        goto label1;

     label4:
        return $r2;
    }
}
