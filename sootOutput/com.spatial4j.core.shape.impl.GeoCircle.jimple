public class com.spatial4j.core.shape.impl.GeoCircle extends com.spatial4j.core.shape.impl.CircleImpl
{
    private com.spatial4j.core.shape.impl.GeoCircle inverseCircle;
    private double horizAxisY;
    static final boolean $assertionsDisabled;

    public void <init>(com.spatial4j.core.shape.Point, double, com.spatial4j.core.context.SpatialContext)
    {
        com.spatial4j.core.shape.impl.GeoCircle r0;
        com.spatial4j.core.shape.Point r1;
        com.spatial4j.core.context.SpatialContext r2;
        java.lang.AssertionError $r3;
        double d0;
        boolean $z0, $z1;

        r0 := @this: com.spatial4j.core.shape.impl.GeoCircle;

        r1 := @parameter0: com.spatial4j.core.shape.Point;

        d0 := @parameter1: double;

        r2 := @parameter2: com.spatial4j.core.context.SpatialContext;

        specialinvoke r0.<com.spatial4j.core.shape.impl.CircleImpl: void <init>(com.spatial4j.core.shape.Point,double,com.spatial4j.core.context.SpatialContext)>(r1, d0, r2);

        $z0 = <com.spatial4j.core.shape.impl.GeoCircle: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r2.<com.spatial4j.core.context.SpatialContext: boolean isGeo()>();

        if $z1 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        specialinvoke r0.<com.spatial4j.core.shape.impl.GeoCircle: void init()>();

        return;
    }

    public void reset(double, double, double)
    {
        com.spatial4j.core.shape.impl.GeoCircle r0;
        double d0, d1, d2;

        r0 := @this: com.spatial4j.core.shape.impl.GeoCircle;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        specialinvoke r0.<com.spatial4j.core.shape.impl.CircleImpl: void reset(double,double,double)>(d0, d1, d2);

        specialinvoke r0.<com.spatial4j.core.shape.impl.GeoCircle: void init()>();

        return;
    }

    private void init()
    {
        com.spatial4j.core.distance.DistanceCalculator $r2;
        byte $b0, $b1, $b2, $b3, $b4;
        com.spatial4j.core.shape.impl.GeoCircle r0, $r12, $r17, $r21;
        com.spatial4j.core.shape.Point $r3, $r9, $r10, $r11, $r15;
        boolean $z0;
        com.spatial4j.core.shape.Rectangle $r5, $r6, $r7, $r8, $r18;
        com.spatial4j.core.context.SpatialContext $r1, $r4, $r14, $r16;
        java.lang.AssertionError $r20;
        int $i5, $i6, $i7, $i8;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, d19, d20;

        r0 := @this: com.spatial4j.core.shape.impl.GeoCircle;

        $d0 = r0.<com.spatial4j.core.shape.impl.GeoCircle: double radiusDEG>;

        $b0 = $d0 cmpl 90.0;

        $i5 = (int) $b0;

        if $i5 <= 0 goto label6;

        $z0 = <com.spatial4j.core.shape.impl.GeoCircle: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r18 = r0.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.shape.Rectangle enclosingBox>;

        $d17 = interfaceinvoke $r18.<com.spatial4j.core.shape.Rectangle: double getWidth()>();

        $b4 = $d17 cmpl 360.0;

        if $b4 == 0 goto label1;

        $r20 = new java.lang.AssertionError;

        specialinvoke $r20.<java.lang.AssertionError: void <init>()>();

        throw $r20;

     label1:
        $d7 = r0.<com.spatial4j.core.shape.impl.GeoCircle: double radiusDEG>;

        $d18 = 180.0 - $d7;

        $b3 = $d18 cmpl 0.0;

        $i6 = (int) $b3;

        if $i6 <= 0 goto label4;

        $d9 = r0.<com.spatial4j.core.shape.impl.GeoCircle: double radiusDEG>;

        d19 = 180.0 - $d9;

        $d10 = staticinvoke <java.lang.Math: double ulp(double)>(d19);

        d20 = d19 - $d10;

        $r10 = virtualinvoke r0.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.shape.Point getCenter()>();

        $d11 = interfaceinvoke $r10.<com.spatial4j.core.shape.Point: double getX()>();

        $d12 = $d11 + 180.0;

        $d13 = staticinvoke <com.spatial4j.core.distance.DistanceUtils: double normLonDEG(double)>($d12);

        $r11 = virtualinvoke r0.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.shape.Point getCenter()>();

        $d14 = interfaceinvoke $r11.<com.spatial4j.core.shape.Point: double getY()>();

        $d15 = $d14 + 180.0;

        $d16 = staticinvoke <com.spatial4j.core.distance.DistanceUtils: double normLatDEG(double)>($d15);

        $r12 = r0.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.shape.impl.GeoCircle inverseCircle>;

        if $r12 == null goto label2;

        $r17 = r0.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.shape.impl.GeoCircle inverseCircle>;

        virtualinvoke $r17.<com.spatial4j.core.shape.impl.GeoCircle: void reset(double,double,double)>($d13, $d16, d20);

        goto label3;

     label2:
        $r21 = new com.spatial4j.core.shape.impl.GeoCircle;

        $r14 = r0.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.context.SpatialContext ctx>;

        $r15 = virtualinvoke $r14.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.shape.Point makePoint(double,double)>($d13, $d16);

        $r16 = r0.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.context.SpatialContext ctx>;

        specialinvoke $r21.<com.spatial4j.core.shape.impl.GeoCircle: void <init>(com.spatial4j.core.shape.Point,double,com.spatial4j.core.context.SpatialContext)>($r15, d20, $r16);

        r0.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.shape.impl.GeoCircle inverseCircle> = $r21;

     label3:
        goto label5;

     label4:
        r0.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.shape.impl.GeoCircle inverseCircle> = null;

     label5:
        $r9 = virtualinvoke r0.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.shape.Point getCenter()>();

        $d8 = interfaceinvoke $r9.<com.spatial4j.core.shape.Point: double getY()>();

        r0.<com.spatial4j.core.shape.impl.GeoCircle: double horizAxisY> = $d8;

        goto label9;

     label6:
        r0.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.shape.impl.GeoCircle inverseCircle> = null;

        $r1 = r0.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.context.SpatialContext ctx>;

        $r2 = virtualinvoke $r1.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.distance.DistanceCalculator getDistCalc()>();

        $r3 = virtualinvoke r0.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.shape.Point getCenter()>();

        $d1 = r0.<com.spatial4j.core.shape.impl.GeoCircle: double radiusDEG>;

        $r4 = r0.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.context.SpatialContext ctx>;

        $d2 = interfaceinvoke $r2.<com.spatial4j.core.distance.DistanceCalculator: double calcBoxByDistFromPt_yHorizAxisDEG(com.spatial4j.core.shape.Point,double,com.spatial4j.core.context.SpatialContext)>($r3, $d1, $r4);

        $r5 = r0.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.shape.Rectangle enclosingBox>;

        $d3 = interfaceinvoke $r5.<com.spatial4j.core.shape.Rectangle: double getMaxY()>();

        $b1 = $d2 cmpl $d3;

        $i7 = (int) $b1;

        if $i7 <= 0 goto label7;

        $r8 = r0.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.shape.Rectangle enclosingBox>;

        $d6 = interfaceinvoke $r8.<com.spatial4j.core.shape.Rectangle: double getMaxY()>();

        r0.<com.spatial4j.core.shape.impl.GeoCircle: double horizAxisY> = $d6;

        goto label9;

     label7:
        $r6 = r0.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.shape.Rectangle enclosingBox>;

        $d4 = interfaceinvoke $r6.<com.spatial4j.core.shape.Rectangle: double getMinY()>();

        $b2 = $d2 cmpg $d4;

        $i8 = (int) $b2;

        if $i8 >= 0 goto label8;

        $r7 = r0.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.shape.Rectangle enclosingBox>;

        $d5 = interfaceinvoke $r7.<com.spatial4j.core.shape.Rectangle: double getMinY()>();

        r0.<com.spatial4j.core.shape.impl.GeoCircle: double horizAxisY> = $d5;

        goto label9;

     label8:
        r0.<com.spatial4j.core.shape.impl.GeoCircle: double horizAxisY> = $d2;

     label9:
        return;
    }

    protected double getYAxis()
    {
        com.spatial4j.core.shape.impl.GeoCircle r0;
        double $d0;

        r0 := @this: com.spatial4j.core.shape.impl.GeoCircle;

        $d0 = r0.<com.spatial4j.core.shape.impl.GeoCircle: double horizAxisY>;

        return $d0;
    }

    protected com.spatial4j.core.shape.SpatialRelation relateRectanglePhase2(com.spatial4j.core.shape.Rectangle, com.spatial4j.core.shape.SpatialRelation)
    {
        byte $b0, $b1, $b3, $b4;
        com.spatial4j.core.shape.impl.GeoCircle r1, $r2, $r29;
        com.spatial4j.core.shape.Point $r8, $r9;
        com.spatial4j.core.context.SpatialContext $r27;
        java.lang.AssertionError $r33, $r34;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.spatial4j.core.shape.Rectangle r0, $r3, $r4, $r14, $r15, $r19, $r20;
        int $i2, $i5, $i6;
        com.spatial4j.core.shape.SpatialRelation $r5, $r6, $r7, $r10, $r11, $r16, $r17, $r18, $r21, $r22, $r23, $r24, r25, $r26, $r28, $r30, $r31, $r32;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, d15;

        r1 := @this: com.spatial4j.core.shape.impl.GeoCircle;

        r0 := @parameter0: com.spatial4j.core.shape.Rectangle;

        r25 := @parameter1: com.spatial4j.core.shape.SpatialRelation;

        $d0 = interfaceinvoke r0.<com.spatial4j.core.shape.Rectangle: double getWidth()>();

        $b0 = $d0 cmpl 360.0;

        if $b0 != 0 goto label01;

        $r32 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation INTERSECTS>;

        return $r32;

     label01:
        $r2 = r1.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.shape.impl.GeoCircle inverseCircle>;

        if $r2 == null goto label02;

        $r29 = r1.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.shape.impl.GeoCircle inverseCircle>;

        $r30 = virtualinvoke $r29.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.shape.SpatialRelation relate(com.spatial4j.core.shape.Rectangle)>(r0);

        $r31 = virtualinvoke $r30.<com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation inverse()>();

        return $r31;

     label02:
        $r3 = r1.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.shape.Rectangle enclosingBox>;

        $d1 = interfaceinvoke $r3.<com.spatial4j.core.shape.Rectangle: double getWidth()>();

        $b1 = $d1 cmpl 360.0;

        if $b1 != 0 goto label03;

        $r27 = r1.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.context.SpatialContext ctx>;

        $r28 = specialinvoke r1.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.shape.SpatialRelation relateRectangleCircleWrapsPole(com.spatial4j.core.shape.Rectangle,com.spatial4j.core.context.SpatialContext)>(r0, $r27);

        return $r28;

     label03:
        $r4 = r1.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.shape.Rectangle enclosingBox>;

        $z0 = interfaceinvoke $r4.<com.spatial4j.core.shape.Rectangle: boolean getCrossesDateLine()>();

        if $z0 != 0 goto label04;

        $z7 = interfaceinvoke r0.<com.spatial4j.core.shape.Rectangle: boolean getCrossesDateLine()>();

        if $z7 != 0 goto label04;

        $r26 = specialinvoke r1.<com.spatial4j.core.shape.impl.CircleImpl: com.spatial4j.core.shape.SpatialRelation relateRectanglePhase2(com.spatial4j.core.shape.Rectangle,com.spatial4j.core.shape.SpatialRelation)>(r0, r25);

        return $r26;

     label04:
        $i2 = specialinvoke r1.<com.spatial4j.core.shape.impl.GeoCircle: int numCornersIntersect(com.spatial4j.core.shape.Rectangle)>(r0);

        if $i2 != 4 goto label06;

        $r19 = r1.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.shape.Rectangle enclosingBox>;

        $d13 = interfaceinvoke $r19.<com.spatial4j.core.shape.Rectangle: double getMinX()>();

        $r20 = r1.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.shape.Rectangle enclosingBox>;

        $d14 = interfaceinvoke $r20.<com.spatial4j.core.shape.Rectangle: double getMaxX()>();

        $r21 = interfaceinvoke r0.<com.spatial4j.core.shape.Rectangle: com.spatial4j.core.shape.SpatialRelation relateXRange(double,double)>($d13, $d14);

        $r22 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation WITHIN>;

        if $r21 != $r22 goto label05;

        $r24 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation CONTAINS>;

        return $r24;

     label05:
        $r23 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation INTERSECTS>;

        return $r23;

     label06:
        if $i2 <= 0 goto label07;

        $r18 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation INTERSECTS>;

        return $r18;

     label07:
        $d2 = virtualinvoke r1.<com.spatial4j.core.shape.impl.GeoCircle: double getYAxis()>();

        $d3 = virtualinvoke r1.<com.spatial4j.core.shape.impl.GeoCircle: double getYAxis()>();

        $r5 = interfaceinvoke r0.<com.spatial4j.core.shape.Rectangle: com.spatial4j.core.shape.SpatialRelation relateYRange(double,double)>($d2, $d3);

        $z1 = virtualinvoke $r5.<com.spatial4j.core.shape.SpatialRelation: boolean intersects()>();

        if $z1 == 0 goto label08;

        $r14 = r1.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.shape.Rectangle enclosingBox>;

        $d11 = interfaceinvoke $r14.<com.spatial4j.core.shape.Rectangle: double getMinX()>();

        $r15 = r1.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.shape.Rectangle enclosingBox>;

        $d12 = interfaceinvoke $r15.<com.spatial4j.core.shape.Rectangle: double getMaxX()>();

        $r16 = interfaceinvoke r0.<com.spatial4j.core.shape.Rectangle: com.spatial4j.core.shape.SpatialRelation relateXRange(double,double)>($d11, $d12);

        $z6 = virtualinvoke $r16.<com.spatial4j.core.shape.SpatialRelation: boolean intersects()>();

        if $z6 == 0 goto label08;

        $r17 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation INTERSECTS>;

        return $r17;

     label08:
        $d4 = virtualinvoke r1.<com.spatial4j.core.shape.impl.GeoCircle: double getXAxis()>();

        $d5 = virtualinvoke r1.<com.spatial4j.core.shape.impl.GeoCircle: double getXAxis()>();

        $r6 = interfaceinvoke r0.<com.spatial4j.core.shape.Rectangle: com.spatial4j.core.shape.SpatialRelation relateXRange(double,double)>($d4, $d5);

        $z2 = virtualinvoke $r6.<com.spatial4j.core.shape.SpatialRelation: boolean intersects()>();

        if $z2 == 0 goto label11;

        $r8 = virtualinvoke r1.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.shape.Point getCenter()>();

        $d6 = interfaceinvoke $r8.<com.spatial4j.core.shape.Point: double getY()>();

        $d7 = r1.<com.spatial4j.core.shape.impl.GeoCircle: double radiusDEG>;

        d15 = $d6 + $d7;

        $z3 = <com.spatial4j.core.shape.impl.GeoCircle: boolean $assertionsDisabled>;

        if $z3 != 0 goto label09;

        $b4 = d15 cmpg 90.0;

        $i5 = (int) $b4;

        if $i5 <= 0 goto label09;

        $r33 = new java.lang.AssertionError;

        specialinvoke $r33.<java.lang.AssertionError: void <init>()>();

        throw $r33;

     label09:
        $r9 = virtualinvoke r1.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.shape.Point getCenter()>();

        $d8 = interfaceinvoke $r9.<com.spatial4j.core.shape.Point: double getY()>();

        $d9 = r1.<com.spatial4j.core.shape.impl.GeoCircle: double radiusDEG>;

        $d10 = $d8 - $d9;

        $z4 = <com.spatial4j.core.shape.impl.GeoCircle: boolean $assertionsDisabled>;

        if $z4 != 0 goto label10;

        $b3 = $d10 cmpl -90.0;

        $i6 = (int) $b3;

        if $i6 >= 0 goto label10;

        $r34 = new java.lang.AssertionError;

        specialinvoke $r34.<java.lang.AssertionError: void <init>()>();

        throw $r34;

     label10:
        $r10 = interfaceinvoke r0.<com.spatial4j.core.shape.Rectangle: com.spatial4j.core.shape.SpatialRelation relateYRange(double,double)>($d10, d15);

        $z5 = virtualinvoke $r10.<com.spatial4j.core.shape.SpatialRelation: boolean intersects()>();

        if $z5 == 0 goto label11;

        $r11 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation INTERSECTS>;

        return $r11;

     label11:
        $r7 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation DISJOINT>;

        return $r7;
    }

    private com.spatial4j.core.shape.SpatialRelation relateRectangleCircleWrapsPole(com.spatial4j.core.shape.Rectangle, com.spatial4j.core.context.SpatialContext)
    {
        byte $b0, $b1, $b2, $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11;
        com.spatial4j.core.shape.impl.GeoCircle r0;
        com.spatial4j.core.shape.Point $r1, $r2, $r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.spatial4j.core.shape.Rectangle r3;
        com.spatial4j.core.context.SpatialContext r19;
        java.lang.AssertionError $r20, $r21, $r22;
        int $i3, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        com.spatial4j.core.shape.SpatialRelation $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r14, $r16, $r18;
        double $d0, $d1, $d2, d3, $d4, $d5, $d6, d7, $d8, $d9, $d10, $d11, d12, d13, $d14, $d15;

        r0 := @this: com.spatial4j.core.shape.impl.GeoCircle;

        r3 := @parameter0: com.spatial4j.core.shape.Rectangle;

        r19 := @parameter1: com.spatial4j.core.context.SpatialContext;

        $d0 = r0.<com.spatial4j.core.shape.impl.GeoCircle: double radiusDEG>;

        $b0 = $d0 cmpl 180.0;

        if $b0 != 0 goto label01;

        $r18 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation CONTAINS>;

        return $r18;

     label01:
        $r1 = virtualinvoke r0.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.shape.Point getCenter()>();

        $d1 = interfaceinvoke $r1.<com.spatial4j.core.shape.Point: double getY()>();

        $d2 = r0.<com.spatial4j.core.shape.impl.GeoCircle: double radiusDEG>;

        d3 = $d1 + $d2;

        $b1 = d3 cmpl 90.0;

        $i12 = (int) $b1;

        if $i12 <= 0 goto label04;

        d12 = d3 - 90.0;

        $z4 = <com.spatial4j.core.shape.impl.GeoCircle: boolean $assertionsDisabled>;

        if $z4 != 0 goto label02;

        $b10 = d12 cmpg 90.0;

        $i13 = (int) $b10;

        if $i13 <= 0 goto label02;

        $r20 = new java.lang.AssertionError;

        specialinvoke $r20.<java.lang.AssertionError: void <init>()>();

        throw $r20;

     label02:
        $d10 = interfaceinvoke r3.<com.spatial4j.core.shape.Rectangle: double getMinY()>();

        $d11 = 90.0 - d12;

        $b9 = $d10 cmpl $d11;

        $i14 = (int) $b9;

        if $i14 < 0 goto label03;

        $r16 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation CONTAINS>;

        return $r16;

     label03:
        goto label08;

     label04:
        $r2 = r0.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.shape.Point point>;

        $d4 = interfaceinvoke $r2.<com.spatial4j.core.shape.Point: double getY()>();

        $d5 = r0.<com.spatial4j.core.shape.impl.GeoCircle: double radiusDEG>;

        d13 = $d4 - $d5;

        $b2 = d13 cmpg -90.0;

        $i15 = (int) $b2;

        if $i15 >= 0 goto label07;

        d7 = -90.0 - d13;

        $z3 = <com.spatial4j.core.shape.impl.GeoCircle: boolean $assertionsDisabled>;

        if $z3 != 0 goto label05;

        $b8 = d7 cmpg 90.0;

        $i16 = (int) $b8;

        if $i16 <= 0 goto label05;

        $r21 = new java.lang.AssertionError;

        specialinvoke $r21.<java.lang.AssertionError: void <init>()>();

        throw $r21;

     label05:
        $d8 = interfaceinvoke r3.<com.spatial4j.core.shape.Rectangle: double getMaxY()>();

        $d9 = -90.0 + d7;

        $b7 = $d8 cmpg $d9;

        $i17 = (int) $b7;

        if $i17 > 0 goto label06;

        $r14 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation CONTAINS>;

        return $r14;

     label06:
        goto label08;

     label07:
        $z0 = <com.spatial4j.core.shape.impl.GeoCircle: boolean $assertionsDisabled>;

        if $z0 != 0 goto label08;

        $b5 = d3 cmpl 90.0;

        if $b5 == 0 goto label08;

        $b6 = d13 cmpl -90.0;

        if $b6 == 0 goto label08;

        $r22 = new java.lang.AssertionError;

        specialinvoke $r22.<java.lang.AssertionError: void <init>()>();

        throw $r22;

     label08:
        $d14 = interfaceinvoke r3.<com.spatial4j.core.shape.Rectangle: double getWidth()>();

        $b11 = $d14 cmpl 360.0;

        if $b11 != 0 goto label09;

        $r12 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation INTERSECTS>;

        return $r12;

     label09:
        $i3 = specialinvoke r0.<com.spatial4j.core.shape.impl.GeoCircle: int numCornersIntersect(com.spatial4j.core.shape.Rectangle)>(r3);

        $r4 = virtualinvoke r0.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.shape.Point getCenter()>();

        $d6 = interfaceinvoke $r4.<com.spatial4j.core.shape.Point: double getX()>();

        if $i3 != 4 goto label13;

        $b4 = $d6 cmpg 0.0;

        $i18 = (int) $b4;

        if $i18 > 0 goto label10;

        $d15 = $d6 + 180.0;

        goto label11;

     label10:
        $d15 = $d6 - 180.0;

     label11:
        $r9 = interfaceinvoke r3.<com.spatial4j.core.shape.Rectangle: com.spatial4j.core.shape.SpatialRelation relateXRange(double,double)>($d15, $d15);

        $z2 = virtualinvoke $r9.<com.spatial4j.core.shape.SpatialRelation: boolean intersects()>();

        if $z2 == 0 goto label12;

        $r11 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation INTERSECTS>;

        return $r11;

     label12:
        $r10 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation CONTAINS>;

        return $r10;

     label13:
        if $i3 != 0 goto label15;

        $r6 = interfaceinvoke r3.<com.spatial4j.core.shape.Rectangle: com.spatial4j.core.shape.SpatialRelation relateXRange(double,double)>($d6, $d6);

        $z1 = virtualinvoke $r6.<com.spatial4j.core.shape.SpatialRelation: boolean intersects()>();

        if $z1 == 0 goto label14;

        $r8 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation INTERSECTS>;

        return $r8;

     label14:
        $r7 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation DISJOINT>;

        return $r7;

     label15:
        $r5 = <com.spatial4j.core.shape.SpatialRelation: com.spatial4j.core.shape.SpatialRelation INTERSECTS>;

        return $r5;
    }

    private int numCornersIntersect(com.spatial4j.core.shape.Rectangle)
    {
        com.spatial4j.core.shape.Rectangle r1;
        byte $b0;
        com.spatial4j.core.shape.impl.GeoCircle r0;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.spatial4j.core.shape.impl.GeoCircle;

        r1 := @parameter0: com.spatial4j.core.shape.Rectangle;

        $d0 = interfaceinvoke r1.<com.spatial4j.core.shape.Rectangle: double getMinX()>();

        $d1 = interfaceinvoke r1.<com.spatial4j.core.shape.Rectangle: double getMinY()>();

        $z0 = virtualinvoke r0.<com.spatial4j.core.shape.impl.GeoCircle: boolean contains(double,double)>($d0, $d1);

        $d2 = interfaceinvoke r1.<com.spatial4j.core.shape.Rectangle: double getMinX()>();

        $d3 = interfaceinvoke r1.<com.spatial4j.core.shape.Rectangle: double getMaxY()>();

        $z1 = virtualinvoke r0.<com.spatial4j.core.shape.impl.GeoCircle: boolean contains(double,double)>($d2, $d3);

        if $z1 == 0 goto label1;

        if $z0 != 0 goto label2;

        return 1;

     label1:
        if $z0 == 0 goto label2;

        return 1;

     label2:
        $d4 = interfaceinvoke r1.<com.spatial4j.core.shape.Rectangle: double getMaxX()>();

        $d5 = interfaceinvoke r1.<com.spatial4j.core.shape.Rectangle: double getMinY()>();

        $z2 = virtualinvoke r0.<com.spatial4j.core.shape.impl.GeoCircle: boolean contains(double,double)>($d4, $d5);

        if $z2 == 0 goto label3;

        if $z0 != 0 goto label4;

        return 1;

     label3:
        if $z0 == 0 goto label4;

        return 1;

     label4:
        $d6 = interfaceinvoke r1.<com.spatial4j.core.shape.Rectangle: double getMaxX()>();

        $d7 = interfaceinvoke r1.<com.spatial4j.core.shape.Rectangle: double getMaxY()>();

        $z3 = virtualinvoke r0.<com.spatial4j.core.shape.impl.GeoCircle: boolean contains(double,double)>($d6, $d7);

        if $z3 == 0 goto label5;

        if $z0 != 0 goto label6;

        return 1;

     label5:
        if $z0 == 0 goto label6;

        return 1;

     label6:
        if $z0 == 0 goto label7;

        $b0 = 4;

        goto label8;

     label7:
        $b0 = 0;

     label8:
        return $b0;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r1;
        java.lang.Double $r2, $r3;
        com.spatial4j.core.shape.impl.GeoCircle r0;
        com.spatial4j.core.shape.Point $r7;
        java.lang.String $r4, $r12;
        double $d0, $d1, $d2;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r10, $r11;

        r0 := @this: com.spatial4j.core.shape.impl.GeoCircle;

        $d0 = r0.<com.spatial4j.core.shape.impl.GeoCircle: double radiusDEG>;

        $d1 = staticinvoke <com.spatial4j.core.distance.DistanceUtils: double degrees2Dist(double,double)>($d0, 6371.0087714);

        $r1 = newarray (java.lang.Object)[2];

        $d2 = r0.<com.spatial4j.core.shape.impl.GeoCircle: double radiusDEG>;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r1[1] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.1f\u00b0 %.2fkm", $r1);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Circle(");

        $r7 = r0.<com.spatial4j.core.shape.impl.GeoCircle: com.spatial4j.core.shape.Point point>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", d=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lcom/spatial4j/core/shape/impl/GeoCircle;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.spatial4j.core.shape.impl.GeoCircle: boolean $assertionsDisabled> = $z1;

        return;
    }
}
