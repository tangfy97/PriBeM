public final class com.glines.socketio.util.ServiceClassLoader extends java.lang.Object implements java.lang.Iterable
{
    private static final java.lang.String PREFIX;
    private final java.lang.Class service;
    private final com.glines.socketio.util.Loader loader;
    private java.util.LinkedHashMap providers;
    private com.glines.socketio.util.ServiceClassLoader$LazyIterator lookupIterator;

    public void reload()
    {
        java.util.LinkedHashMap $r1;
        com.glines.socketio.util.ServiceClassLoader$LazyIterator $r2;
        com.glines.socketio.util.ServiceClassLoader r0;
        java.lang.Class $r4;
        com.glines.socketio.util.Loader $r3;

        r0 := @this: com.glines.socketio.util.ServiceClassLoader;

        $r1 = r0.<com.glines.socketio.util.ServiceClassLoader: java.util.LinkedHashMap providers>;

        virtualinvoke $r1.<java.util.LinkedHashMap: void clear()>();

        $r2 = new com.glines.socketio.util.ServiceClassLoader$LazyIterator;

        $r4 = r0.<com.glines.socketio.util.ServiceClassLoader: java.lang.Class service>;

        $r3 = r0.<com.glines.socketio.util.ServiceClassLoader: com.glines.socketio.util.Loader loader>;

        specialinvoke $r2.<com.glines.socketio.util.ServiceClassLoader$LazyIterator: void <init>(com.glines.socketio.util.ServiceClassLoader,java.lang.Class,com.glines.socketio.util.Loader,com.glines.socketio.util.ServiceClassLoader$LazyIterator)>(r0, $r4, $r3, null);

        r0.<com.glines.socketio.util.ServiceClassLoader: com.glines.socketio.util.ServiceClassLoader$LazyIterator lookupIterator> = $r2;

        return;
    }

    private void <init>(java.lang.Class, com.glines.socketio.util.Loader)
    {
        java.util.LinkedHashMap $r1;
        com.glines.socketio.util.ServiceClassLoader r0;
        java.lang.Class r2;
        com.glines.socketio.util.Loader r3;

        r0 := @this: com.glines.socketio.util.ServiceClassLoader;

        r2 := @parameter0: java.lang.Class;

        r3 := @parameter1: com.glines.socketio.util.Loader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.glines.socketio.util.ServiceClassLoader: java.util.LinkedHashMap providers> = $r1;

        r0.<com.glines.socketio.util.ServiceClassLoader: java.lang.Class service> = r2;

        r0.<com.glines.socketio.util.ServiceClassLoader: com.glines.socketio.util.Loader loader> = r3;

        virtualinvoke r0.<com.glines.socketio.util.ServiceClassLoader: void reload()>();

        return;
    }

    private static void fail(java.lang.Class, java.lang.String, java.lang.Throwable) throws java.util.ServiceConfigurationError
    {
        java.lang.Throwable r9;
        java.util.ServiceConfigurationError $r0;
        java.lang.StringBuilder $r1, $r5, $r7;
        java.lang.Class r2;
        java.lang.String $r3, $r4, r6, $r8;

        r2 := @parameter0: java.lang.Class;

        r6 := @parameter1: java.lang.String;

        r9 := @parameter2: java.lang.Throwable;

        $r0 = new java.util.ServiceConfigurationError;

        $r1 = new java.lang.StringBuilder;

        $r3 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.util.ServiceConfigurationError: void <init>(java.lang.String,java.lang.Throwable)>($r8, r9);

        throw $r0;
    }

    private static void fail(java.lang.Class, java.lang.String) throws java.util.ServiceConfigurationError
    {
        java.util.ServiceConfigurationError $r0;
        java.lang.StringBuilder $r1, $r5, $r7;
        java.lang.Class r2;
        java.lang.String $r3, $r4, r6, $r8;

        r2 := @parameter0: java.lang.Class;

        r6 := @parameter1: java.lang.String;

        $r0 = new java.util.ServiceConfigurationError;

        $r1 = new java.lang.StringBuilder;

        $r3 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.util.ServiceConfigurationError: void <init>(java.lang.String)>($r8);

        throw $r0;
    }

    private static void fail(java.lang.Class, java.net.URL, int, java.lang.String) throws java.util.ServiceConfigurationError
    {
        java.net.URL r2;
        int i0;
        java.lang.Class r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r5, $r6, $r8;
        java.lang.String r7, $r9;

        r0 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.net.URL;

        i0 := @parameter2: int;

        r7 := @parameter3: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.glines.socketio.util.ServiceClassLoader: void fail(java.lang.Class,java.lang.String)>(r0, $r9);

        return;
    }

    private int parseLine(java.lang.Class, java.net.URL, java.io.BufferedReader, int, java.util.List) throws java.io.IOException, java.util.ServiceConfigurationError
    {
        java.net.URL r4;
        com.glines.socketio.util.ServiceClassLoader r8;
        java.util.LinkedHashMap $r9;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, $i11;
        java.lang.String $r1, $r2, $r7, $r13, r14;
        boolean $z0, $z1, $z2, $z3;
        java.util.List r10;
        java.lang.Class r3;
        java.lang.StringBuilder $r6, $r12, $r15, $r16;
        java.io.BufferedReader r0;

        r8 := @this: com.glines.socketio.util.ServiceClassLoader;

        r3 := @parameter0: java.lang.Class;

        r4 := @parameter1: java.net.URL;

        r0 := @parameter2: java.io.BufferedReader;

        i2 := @parameter3: int;

        r10 := @parameter4: java.util.List;

        $r1 = virtualinvoke r0.<java.io.BufferedReader: java.lang.String readLine()>();

        r14 = $r1;

        if $r1 != null goto label1;

        $i11 = (int) -1;

        return $i11;

     label1:
        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(35);

        if $i0 < 0 goto label2;

        r14 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label2:
        $r2 = virtualinvoke r14.<java.lang.String: java.lang.String trim()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i1 == 0 goto label9;

        $i3 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(32);

        if $i3 >= 0 goto label3;

        $i5 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(9);

        if $i5 < 0 goto label4;

     label3:
        staticinvoke <com.glines.socketio.util.ServiceClassLoader: void fail(java.lang.Class,java.net.URL,int,java.lang.String)>(r3, r4, i2, "Illegal configuration-file syntax");

     label4:
        $i6 = virtualinvoke $r2.<java.lang.String: int codePointAt(int)>(0);

        $z3 = staticinvoke <java.lang.Character: boolean isJavaIdentifierStart(int)>($i6);

        if $z3 != 0 goto label5;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("Illegal provider-class name: ");

        $r12 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.glines.socketio.util.ServiceClassLoader: void fail(java.lang.Class,java.net.URL,int,java.lang.String)>(r3, r4, i2, $r13);

     label5:
        i7 = staticinvoke <java.lang.Character: int charCount(int)>($i6);

        goto label8;

     label6:
        $i4 = virtualinvoke $r2.<java.lang.String: int codePointAt(int)>(i7);

        $z0 = staticinvoke <java.lang.Character: boolean isJavaIdentifierPart(int)>($i4);

        if $z0 != 0 goto label7;

        if $i4 == 46 goto label7;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("Illegal provider-class name: ");

        $r6 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.glines.socketio.util.ServiceClassLoader: void fail(java.lang.Class,java.net.URL,int,java.lang.String)>(r3, r4, i2, $r7);

     label7:
        $i8 = staticinvoke <java.lang.Character: int charCount(int)>($i4);

        i7 = i7 + $i8;

     label8:
        if i7 < $i1 goto label6;

        $r9 = r8.<com.glines.socketio.util.ServiceClassLoader: java.util.LinkedHashMap providers>;

        $z1 = virtualinvoke $r9.<java.util.LinkedHashMap: boolean containsKey(java.lang.Object)>($r2);

        if $z1 != 0 goto label9;

        $z2 = interfaceinvoke r10.<java.util.List: boolean contains(java.lang.Object)>($r2);

        if $z2 != 0 goto label9;

        interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>($r2);

     label9:
        $i9 = i2 + 1;

        return $i9;
    }

    private java.util.Iterator parse(java.lang.Class, java.net.URL) throws java.util.ServiceConfigurationError
    {
        java.lang.Throwable $r9;
        java.net.URL r1;
        com.glines.socketio.util.ServiceClassLoader r5;
        java.util.ArrayList $r0;
        int $i0, i1;
        java.util.Iterator $r14;
        java.io.IOException $r7, $r8, $r10, $r11;
        java.io.InputStreamReader $r4;
        java.lang.Class r6;
        java.io.BufferedReader $r3, r13;
        java.io.InputStream $r2, r12;

        r5 := @this: com.glines.socketio.util.ServiceClassLoader;

        r6 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.net.URL;

        r12 = null;

        r13 = null;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

     label01:
        $r2 = virtualinvoke r1.<java.net.URL: java.io.InputStream openStream()>();

        r12 = $r2;

        $r3 = new java.io.BufferedReader;

        $r4 = new java.io.InputStreamReader;

        specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r2, "utf-8");

        specialinvoke $r3.<java.io.BufferedReader: void <init>(java.io.Reader)>($r4);

        r13 = $r3;

        i1 = 1;

     label02:
        $i0 = specialinvoke r5.<com.glines.socketio.util.ServiceClassLoader: int parseLine(java.lang.Class,java.net.URL,java.io.BufferedReader,int,java.util.List)>(r6, r1, $r3, i1, $r0);

        i1 = $i0;

        if $i0 >= 0 goto label02;

     label03:
        goto label15;

     label04:
        $r11 := @caughtexception;

        staticinvoke <com.glines.socketio.util.ServiceClassLoader: void fail(java.lang.Class,java.lang.String,java.lang.Throwable)>(r6, "Error reading configuration file", $r11);

     label05:
        if r13 == null goto label06;

        virtualinvoke r13.<java.io.BufferedReader: void close()>();

     label06:
        if r12 == null goto label19;

        virtualinvoke r12.<java.io.InputStream: void close()>();

     label07:
        goto label19;

     label08:
        $r10 := @caughtexception;

        staticinvoke <com.glines.socketio.util.ServiceClassLoader: void fail(java.lang.Class,java.lang.String,java.lang.Throwable)>(r6, "Error closing configuration file", $r10);

        goto label19;

     label09:
        $r9 := @caughtexception;

     label10:
        if r13 == null goto label11;

        virtualinvoke r13.<java.io.BufferedReader: void close()>();

     label11:
        if r12 == null goto label14;

        virtualinvoke r12.<java.io.InputStream: void close()>();

     label12:
        goto label14;

     label13:
        $r8 := @caughtexception;

        staticinvoke <com.glines.socketio.util.ServiceClassLoader: void fail(java.lang.Class,java.lang.String,java.lang.Throwable)>(r6, "Error closing configuration file", $r8);

     label14:
        throw $r9;

     label15:
        if $r3 == null goto label16;

        virtualinvoke $r3.<java.io.BufferedReader: void close()>();

     label16:
        if $r2 == null goto label19;

        virtualinvoke $r2.<java.io.InputStream: void close()>();

     label17:
        goto label19;

     label18:
        $r7 := @caughtexception;

        staticinvoke <com.glines.socketio.util.ServiceClassLoader: void fail(java.lang.Class,java.lang.String,java.lang.Throwable)>(r6, "Error closing configuration file", $r7);

     label19:
        $r14 = virtualinvoke $r0.<java.util.ArrayList: java.util.Iterator iterator()>();

        return $r14;

        catch java.io.IOException from label01 to label03 with label04;
        catch java.io.IOException from label05 to label07 with label08;
        catch java.lang.Throwable from label01 to label05 with label09;
        catch java.io.IOException from label10 to label12 with label13;
        catch java.io.IOException from label15 to label17 with label18;
    }

    public java.util.Iterator iterator()
    {
        com.glines.socketio.util.ServiceClassLoader$1 $r0;
        com.glines.socketio.util.ServiceClassLoader r1;

        r1 := @this: com.glines.socketio.util.ServiceClassLoader;

        $r0 = new com.glines.socketio.util.ServiceClassLoader$1;

        specialinvoke $r0.<com.glines.socketio.util.ServiceClassLoader$1: void <init>(com.glines.socketio.util.ServiceClassLoader)>(r1);

        return $r0;
    }

    public static com.glines.socketio.util.ServiceClassLoader load(java.lang.Class, com.glines.socketio.util.Loader)
    {
        com.glines.socketio.util.ServiceClassLoader $r0;
        java.lang.Class r1;
        com.glines.socketio.util.Loader r2;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: com.glines.socketio.util.Loader;

        $r0 = new com.glines.socketio.util.ServiceClassLoader;

        specialinvoke $r0.<com.glines.socketio.util.ServiceClassLoader: void <init>(java.lang.Class,com.glines.socketio.util.Loader)>(r1, r2);

        return $r0;
    }

    public static com.glines.socketio.util.ServiceClassLoader load(java.lang.Class)
    {
        com.glines.socketio.util.ServiceClassLoader $r0;
        java.lang.Class r1;
        com.glines.socketio.util.DefaultLoader $r2;

        r1 := @parameter0: java.lang.Class;

        $r0 = new com.glines.socketio.util.ServiceClassLoader;

        $r2 = new com.glines.socketio.util.DefaultLoader;

        specialinvoke $r2.<com.glines.socketio.util.DefaultLoader: void <init>()>();

        specialinvoke $r0.<com.glines.socketio.util.ServiceClassLoader: void <init>(java.lang.Class,com.glines.socketio.util.Loader)>(r1, $r2);

        return $r0;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r4, $r5;
        com.glines.socketio.util.ServiceClassLoader r1;
        java.lang.Class $r2;
        java.lang.String $r3, $r6;

        r1 := @this: com.glines.socketio.util.ServiceClassLoader;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("ServiceClassLoader[");

        $r2 = r1.<com.glines.socketio.util.ServiceClassLoader: java.lang.Class service>;

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    static java.util.Iterator access$0(com.glines.socketio.util.ServiceClassLoader, java.lang.Class, java.net.URL) throws java.util.ServiceConfigurationError
    {
        java.util.Iterator $r3;
        java.net.URL r2;
        com.glines.socketio.util.ServiceClassLoader r0;
        java.lang.Class r1;

        r0 := @parameter0: com.glines.socketio.util.ServiceClassLoader;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: java.net.URL;

        $r3 = specialinvoke r0.<com.glines.socketio.util.ServiceClassLoader: java.util.Iterator parse(java.lang.Class,java.net.URL)>(r1, r2);

        return $r3;
    }

    static java.util.LinkedHashMap access$1(com.glines.socketio.util.ServiceClassLoader)
    {
        java.util.LinkedHashMap $r1;
        com.glines.socketio.util.ServiceClassLoader r0;

        r0 := @parameter0: com.glines.socketio.util.ServiceClassLoader;

        $r1 = r0.<com.glines.socketio.util.ServiceClassLoader: java.util.LinkedHashMap providers>;

        return $r1;
    }

    static void access$2(java.lang.Class, java.lang.String, java.lang.Throwable) throws java.util.ServiceConfigurationError
    {
        java.lang.Throwable r2;
        java.lang.Class r0;
        java.lang.String r1;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Throwable;

        staticinvoke <com.glines.socketio.util.ServiceClassLoader: void fail(java.lang.Class,java.lang.String,java.lang.Throwable)>(r0, r1, r2);

        return;
    }

    static com.glines.socketio.util.ServiceClassLoader$LazyIterator access$3(com.glines.socketio.util.ServiceClassLoader)
    {
        com.glines.socketio.util.ServiceClassLoader$LazyIterator $r1;
        com.glines.socketio.util.ServiceClassLoader r0;

        r0 := @parameter0: com.glines.socketio.util.ServiceClassLoader;

        $r1 = r0.<com.glines.socketio.util.ServiceClassLoader: com.glines.socketio.util.ServiceClassLoader$LazyIterator lookupIterator>;

        return $r1;
    }

    public static void <clinit>()
    {
        <com.glines.socketio.util.ServiceClassLoader: java.lang.String PREFIX> = "META-INF/services/";

        return;
    }
}
