public class org.apache.pdfbox.Overlay extends java.lang.Object
{
    public static final org.apache.pdfbox.cos.COSName XOBJECT;
    public static final org.apache.pdfbox.cos.COSName PROC_SET;
    public static final org.apache.pdfbox.cos.COSName EXT_G_STATE;
    private java.util.List layoutPages;
    private org.apache.pdfbox.pdmodel.PDDocument pdfOverlay;
    private org.apache.pdfbox.pdmodel.PDDocument pdfDocument;
    private int pageCount;
    private org.apache.pdfbox.cos.COSStream saveGraphicsStateStream;
    private org.apache.pdfbox.cos.COSStream restoreGraphicsStateStream;

    public void <init>()
    {
        org.apache.pdfbox.Overlay r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.pdfbox.Overlay;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(10);

        r0.<org.apache.pdfbox.Overlay: java.util.List layoutPages> = $r1;

        r0.<org.apache.pdfbox.Overlay: int pageCount> = 0;

        return;
    }

    public static void main(java.lang.String[]) throws java.io.IOException, org.apache.pdfbox.exceptions.COSVisitorException
    {
        org.apache.pdfbox.Overlay $r5;
        java.lang.Throwable $r7;
        org.apache.pdfbox.pdmodel.PDDocument $r2, $r4, r8, r9;
        java.lang.String[] r0;
        int $i0;
        java.lang.String $r1, $r3, $r6;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 == 3 goto label1;

        staticinvoke <org.apache.pdfbox.Overlay: void usage()>();

        staticinvoke <java.lang.System: void exit(int)>(1);

        goto label9;

     label1:
        r8 = null;

        r9 = null;

     label2:
        $r1 = r0[0];

        $r2 = staticinvoke <org.apache.pdfbox.Overlay: org.apache.pdfbox.pdmodel.PDDocument getDocument(java.lang.String)>($r1);

        r8 = $r2;

        $r3 = r0[1];

        $r4 = staticinvoke <org.apache.pdfbox.Overlay: org.apache.pdfbox.pdmodel.PDDocument getDocument(java.lang.String)>($r3);

        r9 = $r4;

        $r5 = new org.apache.pdfbox.Overlay;

        specialinvoke $r5.<org.apache.pdfbox.Overlay: void <init>()>();

        virtualinvoke $r5.<org.apache.pdfbox.Overlay: org.apache.pdfbox.pdmodel.PDDocument overlay(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)>($r2, $r4);

        $r6 = r0[2];

        staticinvoke <org.apache.pdfbox.Overlay: void writeDocument(org.apache.pdfbox.pdmodel.PDDocument,java.lang.String)>($r4, $r6);

     label3:
        if $r2 == null goto label4;

        virtualinvoke $r2.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

     label4:
        if $r4 == null goto label9;

        virtualinvoke $r4.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

        goto label9;

     label5:
        $r7 := @caughtexception;

     label6:
        if r8 == null goto label7;

        virtualinvoke r8.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

     label7:
        if r9 == null goto label8;

        virtualinvoke r9.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

     label8:
        throw $r7;

     label9:
        return;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private static void writeDocument(org.apache.pdfbox.pdmodel.PDDocument, java.lang.String) throws java.io.IOException, org.apache.pdfbox.exceptions.COSVisitorException
    {
        org.apache.pdfbox.pdfwriter.COSWriter $r2, r6;
        java.lang.Throwable $r4;
        org.apache.pdfbox.pdmodel.PDDocument r3;
        java.io.FileOutputStream $r0, r5;
        java.lang.String r1;

        r3 := @parameter0: org.apache.pdfbox.pdmodel.PDDocument;

        r1 := @parameter1: java.lang.String;

        r5 = null;

        r6 = null;

     label1:
        $r0 = new java.io.FileOutputStream;

        specialinvoke $r0.<java.io.FileOutputStream: void <init>(java.lang.String)>(r1);

        r5 = $r0;

        $r2 = new org.apache.pdfbox.pdfwriter.COSWriter;

        specialinvoke $r2.<org.apache.pdfbox.pdfwriter.COSWriter: void <init>(java.io.OutputStream)>($r0);

        r6 = $r2;

        virtualinvoke $r2.<org.apache.pdfbox.pdfwriter.COSWriter: void write(org.apache.pdfbox.pdmodel.PDDocument)>(r3);

     label2:
        if $r2 == null goto label3;

        virtualinvoke $r2.<org.apache.pdfbox.pdfwriter.COSWriter: void close()>();

     label3:
        if $r0 == null goto label8;

        virtualinvoke $r0.<java.io.FileOutputStream: void close()>();

        goto label8;

     label4:
        $r4 := @caughtexception;

     label5:
        if r6 == null goto label6;

        virtualinvoke r6.<org.apache.pdfbox.pdfwriter.COSWriter: void close()>();

     label6:
        if r5 == null goto label7;

        virtualinvoke r5.<java.io.FileOutputStream: void close()>();

     label7:
        throw $r4;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private static org.apache.pdfbox.pdmodel.PDDocument getDocument(java.lang.String) throws java.io.IOException
    {
        java.lang.Throwable $r4;
        org.apache.pdfbox.pdmodel.PDDocument $r3;
        java.io.FileInputStream $r0, r5;
        java.lang.String r1;
        org.apache.pdfbox.pdfparser.PDFParser $r2;

        r1 := @parameter0: java.lang.String;

        r5 = null;

     label1:
        $r0 = new java.io.FileInputStream;

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.lang.String)>(r1);

        r5 = $r0;

        $r2 = new org.apache.pdfbox.pdfparser.PDFParser;

        specialinvoke $r2.<org.apache.pdfbox.pdfparser.PDFParser: void <init>(java.io.InputStream)>($r0);

        virtualinvoke $r2.<org.apache.pdfbox.pdfparser.PDFParser: void parse()>();

        $r3 = virtualinvoke $r2.<org.apache.pdfbox.pdfparser.PDFParser: org.apache.pdfbox.pdmodel.PDDocument getPDDocument()>();

     label2:
        if $r0 == null goto label6;

        virtualinvoke $r0.<java.io.FileInputStream: void close()>();

        goto label6;

     label3:
        $r4 := @caughtexception;

     label4:
        if r5 == null goto label5;

        virtualinvoke r5.<java.io.FileInputStream: void close()>();

     label5:
        throw $r4;

     label6:
        return $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private static void usage()
    {
        java.io.PrintStream $r0;

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("usage: java -jar pdfbox-app-x.y.z.jar Overlay <overlay.pdf> <document.pdf> <result.pdf>");

        return;
    }

    public org.apache.pdfbox.pdmodel.PDDocument overlay(org.apache.pdfbox.pdmodel.PDDocument, org.apache.pdfbox.pdmodel.PDDocument) throws java.io.IOException
    {
        org.apache.pdfbox.Overlay r0;
        byte[] $r13, $r20;
        java.lang.String $r12, $r19;
        org.apache.pdfbox.cos.COSStream $r9, $r10, $r16, $r17;
        org.apache.pdfbox.pdmodel.PDDocumentCatalog $r4, $r22;
        java.io.OutputStream $r11, $r18;
        org.apache.pdfbox.cos.COSDocument $r8, $r15;
        org.apache.pdfbox.pdmodel.PDDocument r1, r2, $r3, $r7, $r14, $r21, $r24;
        org.apache.pdfbox.cos.COSDictionary $r6;
        java.util.List $r5, $r23;

        r0 := @this: org.apache.pdfbox.Overlay;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.PDDocument;

        r2 := @parameter1: org.apache.pdfbox.pdmodel.PDDocument;

        r0.<org.apache.pdfbox.Overlay: org.apache.pdfbox.pdmodel.PDDocument pdfOverlay> = r1;

        r0.<org.apache.pdfbox.Overlay: org.apache.pdfbox.pdmodel.PDDocument pdfDocument> = r2;

        $r3 = r0.<org.apache.pdfbox.Overlay: org.apache.pdfbox.pdmodel.PDDocument pdfOverlay>;

        $r4 = virtualinvoke $r3.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>();

        $r5 = virtualinvoke $r4.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: java.util.List getAllPages()>();

        specialinvoke r0.<org.apache.pdfbox.Overlay: void collectLayoutPages(java.util.List)>($r5);

        $r6 = new org.apache.pdfbox.cos.COSDictionary;

        specialinvoke $r6.<org.apache.pdfbox.cos.COSDictionary: void <init>()>();

        $r7 = r0.<org.apache.pdfbox.Overlay: org.apache.pdfbox.pdmodel.PDDocument pdfDocument>;

        $r8 = virtualinvoke $r7.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>();

        $r9 = virtualinvoke $r8.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSStream createCOSStream(org.apache.pdfbox.cos.COSDictionary)>($r6);

        r0.<org.apache.pdfbox.Overlay: org.apache.pdfbox.cos.COSStream saveGraphicsStateStream> = $r9;

        $r10 = r0.<org.apache.pdfbox.Overlay: org.apache.pdfbox.cos.COSStream saveGraphicsStateStream>;

        $r11 = virtualinvoke $r10.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createUnfilteredStream()>();

        $r12 = " q\n";

        $r13 = virtualinvoke $r12.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        virtualinvoke $r11.<java.io.OutputStream: void write(byte[])>($r13);

        virtualinvoke $r11.<java.io.OutputStream: void flush()>();

        $r14 = r0.<org.apache.pdfbox.Overlay: org.apache.pdfbox.pdmodel.PDDocument pdfDocument>;

        $r15 = virtualinvoke $r14.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>();

        $r16 = virtualinvoke $r15.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSStream createCOSStream(org.apache.pdfbox.cos.COSDictionary)>($r6);

        r0.<org.apache.pdfbox.Overlay: org.apache.pdfbox.cos.COSStream restoreGraphicsStateStream> = $r16;

        $r17 = r0.<org.apache.pdfbox.Overlay: org.apache.pdfbox.cos.COSStream restoreGraphicsStateStream>;

        $r18 = virtualinvoke $r17.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createUnfilteredStream()>();

        $r19 = " Q\n";

        $r20 = virtualinvoke $r19.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        virtualinvoke $r18.<java.io.OutputStream: void write(byte[])>($r20);

        virtualinvoke $r18.<java.io.OutputStream: void flush()>();

        $r21 = r0.<org.apache.pdfbox.Overlay: org.apache.pdfbox.pdmodel.PDDocument pdfDocument>;

        $r22 = virtualinvoke $r21.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>();

        $r23 = virtualinvoke $r22.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: java.util.List getAllPages()>();

        specialinvoke r0.<org.apache.pdfbox.Overlay: void processPages(java.util.List)>($r23);

        $r24 = r0.<org.apache.pdfbox.Overlay: org.apache.pdfbox.pdmodel.PDDocument pdfDocument>;

        return $r24;
    }

    private void collectLayoutPages(java.util.List) throws java.io.IOException
    {
        org.apache.pdfbox.Overlay r18;
        java.lang.String $r13, $r15;
        org.apache.pdfbox.cos.COSStream $r19, r24;
        boolean $z0, $z1, $z2;
        org.apache.pdfbox.cos.COSName $r5;
        java.lang.UnsupportedOperationException $r16;
        java.util.Iterator $r1;
        java.io.IOException $r9;
        org.apache.pdfbox.pdmodel.PDResources $r7, $r22, r23;
        org.apache.pdfbox.cos.COSDictionary $r4, $r8;
        java.util.List r0, $r21;
        java.util.TreeMap $r17;
        org.apache.pdfbox.cos.COSBase $r6;
        org.apache.pdfbox.Overlay$LayoutPage $r20;
        java.lang.Object $r2;
        org.apache.pdfbox.pdmodel.PDPage r3;
        java.lang.StringBuilder $r10, $r11, $r14;
        java.lang.Class $r12;

        r18 := @this: org.apache.pdfbox.Overlay;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.pdfbox.pdmodel.PDPage) $r2;

        $r4 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CONTENTS>;

        $r6 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5);

        $r7 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.PDResources findResources()>();

        r23 = $r7;

        if $r7 != null goto label2;

        $r22 = new org.apache.pdfbox.pdmodel.PDResources;

        specialinvoke $r22.<org.apache.pdfbox.pdmodel.PDResources: void <init>()>();

        r23 = $r22;

        virtualinvoke r3.<org.apache.pdfbox.pdmodel.PDPage: void setResources(org.apache.pdfbox.pdmodel.PDResources)>($r22);

     label2:
        $r8 = virtualinvoke r23.<org.apache.pdfbox.pdmodel.PDResources: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        $z1 = $r6 instanceof org.apache.pdfbox.cos.COSStream;

        if $z1 == 0 goto label3;

        r24 = (org.apache.pdfbox.cos.COSStream) $r6;

        $r17 = new java.util.TreeMap;

        specialinvoke $r17.<java.util.TreeMap: void <init>()>();

        $r19 = specialinvoke r18.<org.apache.pdfbox.Overlay: org.apache.pdfbox.cos.COSStream makeUniqObjectNames(java.util.Map,org.apache.pdfbox.cos.COSStream)>($r17, r24);

        $r21 = r18.<org.apache.pdfbox.Overlay: java.util.List layoutPages>;

        $r20 = new org.apache.pdfbox.Overlay$LayoutPage;

        specialinvoke $r20.<org.apache.pdfbox.Overlay$LayoutPage: void <init>(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSDictionary,java.util.Map)>($r19, $r8, $r17);

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r20);

        goto label5;

     label3:
        $z2 = $r6 instanceof org.apache.pdfbox.cos.COSArray;

        if $z2 == 0 goto label4;

        $r16 = new java.lang.UnsupportedOperationException;

        specialinvoke $r16.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Layout pages with COSArray currently not supported.");

        throw $r16;

     label4:
        $r9 = new java.io.IOException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Contents are unknown type:");

        $r12 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>($r15);

        throw $r9;

     label5:
        goto label1;

     label6:
        return;
    }

    private org.apache.pdfbox.cos.COSStream makeUniqObjectNames(java.util.Map, org.apache.pdfbox.cos.COSStream) throws java.io.IOException
    {
        org.apache.pdfbox.Overlay r8;
        byte[] $r3, $r20, r23;
        byte b9;
        java.util.Map r21;
        boolean $z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10;
        org.apache.pdfbox.pdmodel.PDDocument $r9;
        org.apache.pdfbox.cos.COSDictionary $r28;
        org.apache.pdfbox.cos.COSBase $r12;
        java.lang.StringBuilder $r17, $r18, $r27;
        java.io.ByteArrayOutputStream $r24, $r25;
        java.lang.StringBuffer $r26;
        int $i0, $i1, $i2, $i3, $i4, $i7, i8, $i11, $i12, $i13, $i14, $i15, $i16;
        java.lang.String $r14, $r15, $r19;
        org.apache.pdfbox.cos.COSStream r1, $r11;
        org.apache.pdfbox.cos.COSName $r7, $r22;
        java.io.OutputStream $r13;
        org.apache.pdfbox.cos.COSDocument $r10;
        char $c5, $c6;
        java.io.InputStream $r2;

        r8 := @this: org.apache.pdfbox.Overlay;

        r21 := @parameter0: java.util.Map;

        r1 := @parameter1: org.apache.pdfbox.cos.COSStream;

        $r24 = new java.io.ByteArrayOutputStream;

        specialinvoke $r24.<java.io.ByteArrayOutputStream: void <init>(int)>(10240);

        r23 = newarray (byte)[10240];

        $r2 = virtualinvoke r1.<org.apache.pdfbox.cos.COSStream: java.io.InputStream getUnfilteredStream()>();

     label01:
        $i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>(r23);

        $i11 = (int) -1;

        if $i0 <= $i11 goto label02;

        virtualinvoke $r24.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r23, 0, $i0);

        goto label01;

     label02:
        $r3 = virtualinvoke $r24.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r25 = new java.io.ByteArrayOutputStream;

        $i1 = lengthof $r3;

        $i2 = $i1 + 100;

        specialinvoke $r25.<java.io.ByteArrayOutputStream: void <init>(int)>($i2);

        $r26 = new java.lang.StringBuffer;

        specialinvoke $r26.<java.lang.StringBuffer: void <init>(int)>(10);

        z1 = 0;

        z5 = 0;

        z4 = 0;

        z2 = 0;

        z8 = 0;

        z7 = 0;

        z6 = 0;

        z3 = 0;

        z10 = 0;

        z9 = 0;

        i8 = 0;

     label03:
        $i3 = lengthof $r3;

        if i8 >= $i3 goto label12;

        b9 = $r3[i8];

        if z9 != 0 goto label09;

        if z6 != 0 goto label04;

        $i12 = (int) b9;

        if $i12 != 40 goto label04;

        z2 = 1;

        z8 = 1;

        z7 = 1;

        z6 = 1;

     label04:
        if z7 == 0 goto label05;

        $i13 = (int) b9;

        if $i13 != 41 goto label05;

        z2 = 0;

        z8 = 0;

        z7 = 0;

        z6 = 0;

     label05:
        $i14 = (int) b9;

        if $i14 != 92 goto label06;

        z3 = 1;

        z10 = 1;

        z9 = 1;

     label06:
        if z8 != 0 goto label08;

        if z10 != 0 goto label08;

        $i15 = (int) b9;

        if $i15 != 47 goto label07;

        z1 = 1;

        z5 = 1;

        z4 = 1;

        goto label08;

     label07:
        if z5 == 0 goto label08;

        $c6 = (char) b9;

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c6);

        if $z0 == 0 goto label08;

        z1 = 0;

        z5 = 0;

        z4 = 0;

        $r14 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.String toString()>();

        $r15 = virtualinvoke $r14.<java.lang.String: java.lang.String substring(int)>(1);

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("overlay");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r25.<java.io.ByteArrayOutputStream: void write(int)>(47);

        $r20 = virtualinvoke $r19.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        virtualinvoke $r25.<java.io.ByteArrayOutputStream: void write(byte[])>($r20);

        $r22 = staticinvoke <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName getPDFName(java.lang.String)>($r19);

        interfaceinvoke r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r22);

        $i7 = virtualinvoke $r26.<java.lang.StringBuffer: int length()>();

        virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer delete(int,int)>(0, $i7);

     label08:
        if z4 == 0 goto label10;

        $c5 = (char) b9;

        virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c5);

        goto label11;

     label09:
        z3 = 0;

        z10 = 0;

        z9 = 0;

     label10:
        $i16 = (int) b9;

        virtualinvoke $r25.<java.io.ByteArrayOutputStream: void write(int)>($i16);

     label11:
        i8 = i8 + 1;

        goto label03;

     label12:
        $r28 = new org.apache.pdfbox.cos.COSDictionary;

        specialinvoke $r28.<org.apache.pdfbox.cos.COSDictionary: void <init>()>();

        $r7 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName LENGTH>;

        $i4 = virtualinvoke $r25.<java.io.ByteArrayOutputStream: int size()>();

        virtualinvoke $r28.<org.apache.pdfbox.cos.COSDictionary: void setInt(org.apache.pdfbox.cos.COSName,int)>($r7, $i4);

        $r9 = r8.<org.apache.pdfbox.Overlay: org.apache.pdfbox.pdmodel.PDDocument pdfDocument>;

        $r10 = virtualinvoke $r9.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.cos.COSDocument getDocument()>();

        $r11 = virtualinvoke $r10.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSStream createCOSStream(org.apache.pdfbox.cos.COSDictionary)>($r28);

        $r12 = virtualinvoke r1.<org.apache.pdfbox.cos.COSStream: org.apache.pdfbox.cos.COSBase getFilters()>();

        virtualinvoke $r11.<org.apache.pdfbox.cos.COSStream: void setFilters(org.apache.pdfbox.cos.COSBase)>($r12);

        $r13 = virtualinvoke $r11.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createUnfilteredStream()>();

        virtualinvoke $r25.<java.io.ByteArrayOutputStream: void writeTo(java.io.OutputStream)>($r13);

        virtualinvoke $r13.<java.io.OutputStream: void close()>();

        return $r11;
    }

    private void processPages(java.util.List) throws java.io.IOException
    {
        org.apache.pdfbox.Overlay r14;
        org.apache.pdfbox.cos.COSArray $r15, r18;
        int $i0, $i1;
        java.lang.String $r11, $r13;
        org.apache.pdfbox.cos.COSStream r17;
        boolean $z0, $z1, $z2;
        org.apache.pdfbox.cos.COSName $r5, $r16;
        java.util.Iterator $r1;
        java.io.IOException $r7;
        org.apache.pdfbox.cos.COSDictionary $r4;
        java.util.List r0;
        org.apache.pdfbox.cos.COSBase $r6;
        java.lang.Object $r2;
        org.apache.pdfbox.pdmodel.PDPage r3;
        java.lang.StringBuilder $r8, $r9, $r12;
        java.lang.Class $r10;

        r14 := @this: org.apache.pdfbox.Overlay;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.pdfbox.pdmodel.PDPage) $r2;

        $r4 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CONTENTS>;

        $r6 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5);

        $z1 = $r6 instanceof org.apache.pdfbox.cos.COSStream;

        if $z1 == 0 goto label2;

        r17 = (org.apache.pdfbox.cos.COSStream) $r6;

        $r15 = new org.apache.pdfbox.cos.COSArray;

        specialinvoke $r15.<org.apache.pdfbox.cos.COSArray: void <init>()>();

        virtualinvoke $r15.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(r17);

        specialinvoke r14.<org.apache.pdfbox.Overlay: void mergePage(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDPage)>($r15, r3);

        $r16 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CONTENTS>;

        virtualinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r16, $r15);

        goto label4;

     label2:
        $z2 = $r6 instanceof org.apache.pdfbox.cos.COSArray;

        if $z2 == 0 goto label3;

        r18 = (org.apache.pdfbox.cos.COSArray) $r6;

        specialinvoke r14.<org.apache.pdfbox.Overlay: void mergePage(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDPage)>(r18, r3);

        goto label4;

     label3:
        $r7 = new java.io.IOException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Contents are unknown type:");

        $r10 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>($r13);

        throw $r7;

     label4:
        $i0 = r14.<org.apache.pdfbox.Overlay: int pageCount>;

        $i1 = $i0 + 1;

        r14.<org.apache.pdfbox.Overlay: int pageCount> = $i1;

        goto label1;

     label5:
        return;
    }

    private void mergePage(org.apache.pdfbox.cos.COSArray, org.apache.pdfbox.pdmodel.PDPage)
    {
        org.apache.pdfbox.Overlay r0;
        org.apache.pdfbox.cos.COSArray r16;
        java.util.Map $r11, $r13, $r15;
        int $i0, $i1, i2;
        org.apache.pdfbox.cos.COSStream $r17, $r18;
        org.apache.pdfbox.cos.COSName $r9, $r10, $r12, $r14;
        org.apache.pdfbox.pdmodel.PDResources $r6, $r20, r21;
        org.apache.pdfbox.cos.COSDictionary $r7, $r8;
        java.util.List $r1, $r2;
        org.apache.pdfbox.cos.COSBase $r19;
        org.apache.pdfbox.Overlay$LayoutPage r4;
        java.lang.Object $r3;
        org.apache.pdfbox.pdmodel.PDPage r5;

        r0 := @this: org.apache.pdfbox.Overlay;

        r16 := @parameter0: org.apache.pdfbox.cos.COSArray;

        r5 := @parameter1: org.apache.pdfbox.pdmodel.PDPage;

        $i0 = r0.<org.apache.pdfbox.Overlay: int pageCount>;

        $r1 = r0.<org.apache.pdfbox.Overlay: java.util.List layoutPages>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        i2 = $i0 % $i1;

        $r2 = r0.<org.apache.pdfbox.Overlay: java.util.List layoutPages>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i2);

        r4 = (org.apache.pdfbox.Overlay$LayoutPage) $r3;

        $r6 = virtualinvoke r5.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.PDResources findResources()>();

        r21 = $r6;

        if $r6 != null goto label1;

        $r20 = new org.apache.pdfbox.pdmodel.PDResources;

        specialinvoke $r20.<org.apache.pdfbox.pdmodel.PDResources: void <init>()>();

        r21 = $r20;

        virtualinvoke r5.<org.apache.pdfbox.pdmodel.PDPage: void setResources(org.apache.pdfbox.pdmodel.PDResources)>($r20);

     label1:
        $r7 = virtualinvoke r21.<org.apache.pdfbox.pdmodel.PDResources: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        $r8 = staticinvoke <org.apache.pdfbox.Overlay$LayoutPage: org.apache.pdfbox.cos.COSDictionary access$000(org.apache.pdfbox.Overlay$LayoutPage)>(r4);

        $r9 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PROC_SET>;

        specialinvoke r0.<org.apache.pdfbox.Overlay: void mergeArray(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary)>($r9, $r7, $r8);

        $r10 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FONT>;

        $r11 = staticinvoke <org.apache.pdfbox.Overlay$LayoutPage: java.util.Map access$100(org.apache.pdfbox.Overlay$LayoutPage)>(r4);

        specialinvoke r0.<org.apache.pdfbox.Overlay: void mergeDictionary(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,java.util.Map)>($r10, $r7, $r8, $r11);

        $r12 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName XOBJECT>;

        $r13 = staticinvoke <org.apache.pdfbox.Overlay$LayoutPage: java.util.Map access$100(org.apache.pdfbox.Overlay$LayoutPage)>(r4);

        specialinvoke r0.<org.apache.pdfbox.Overlay: void mergeDictionary(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,java.util.Map)>($r12, $r7, $r8, $r13);

        $r14 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName EXT_G_STATE>;

        $r15 = staticinvoke <org.apache.pdfbox.Overlay$LayoutPage: java.util.Map access$100(org.apache.pdfbox.Overlay$LayoutPage)>(r4);

        specialinvoke r0.<org.apache.pdfbox.Overlay: void mergeDictionary(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,java.util.Map)>($r14, $r7, $r8, $r15);

        $r17 = r0.<org.apache.pdfbox.Overlay: org.apache.pdfbox.cos.COSStream saveGraphicsStateStream>;

        virtualinvoke r16.<org.apache.pdfbox.cos.COSArray: void add(int,org.apache.pdfbox.cos.COSBase)>(0, $r17);

        $r18 = r0.<org.apache.pdfbox.Overlay: org.apache.pdfbox.cos.COSStream restoreGraphicsStateStream>;

        virtualinvoke r16.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r18);

        $r19 = staticinvoke <org.apache.pdfbox.Overlay$LayoutPage: org.apache.pdfbox.cos.COSBase access$200(org.apache.pdfbox.Overlay$LayoutPage)>(r4);

        virtualinvoke r16.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r19);

        return;
    }

    private void mergeDictionary(org.apache.pdfbox.cos.COSName, org.apache.pdfbox.cos.COSDictionary, org.apache.pdfbox.cos.COSDictionary, java.util.Map)
    {
        org.apache.pdfbox.Overlay r19;
        java.util.Map r10;
        java.lang.String $r13;
        boolean $z0;
        org.apache.pdfbox.cos.COSName r1, $r12, r15;
        java.util.Map$Entry r9;
        java.util.Iterator $r7;
        java.util.Set $r6;
        org.apache.pdfbox.cos.COSDictionary r0, r3, r5, $r18, r20;
        org.apache.pdfbox.cos.COSBase $r2, $r4, $r17;
        java.lang.Object $r8, $r11, $r14, $r16;

        r19 := @this: org.apache.pdfbox.Overlay;

        r1 := @parameter0: org.apache.pdfbox.cos.COSName;

        r0 := @parameter1: org.apache.pdfbox.cos.COSDictionary;

        r3 := @parameter2: org.apache.pdfbox.cos.COSDictionary;

        r10 := @parameter3: java.util.Map;

        $r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1);

        r20 = (org.apache.pdfbox.cos.COSDictionary) $r2;

        $r4 = virtualinvoke r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1);

        r5 = (org.apache.pdfbox.cos.COSDictionary) $r4;

        if r20 != null goto label1;

        $r18 = new org.apache.pdfbox.cos.COSDictionary;

        specialinvoke $r18.<org.apache.pdfbox.cos.COSDictionary: void <init>()>();

        r20 = $r18;

        virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, $r18);

     label1:
        if r5 == null goto label4;

        $r6 = virtualinvoke r5.<org.apache.pdfbox.cos.COSDictionary: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.util.Map$Entry) $r8;

        $r11 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = (org.apache.pdfbox.cos.COSName) $r11;

        $r13 = virtualinvoke $r12.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>();

        $r14 = interfaceinvoke r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13);

        r15 = (org.apache.pdfbox.cos.COSName) $r14;

        if r15 == null goto label3;

        $r16 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r17 = (org.apache.pdfbox.cos.COSBase) $r16;

        virtualinvoke r20.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r15, $r17);

     label3:
        goto label2;

     label4:
        return;
    }

    private void mergeArray(org.apache.pdfbox.cos.COSName, org.apache.pdfbox.cos.COSDictionary, org.apache.pdfbox.cos.COSDictionary)
    {
        org.apache.pdfbox.Overlay r11;
        org.apache.pdfbox.cos.COSArray r5, $r10, r12;
        int $i0, $i1, i2, i3;
        boolean $z0, $z1, $z2, z3;
        org.apache.pdfbox.cos.COSName r1, r7, r9;
        org.apache.pdfbox.cos.COSDictionary r0, r3;
        org.apache.pdfbox.cos.COSBase $r2, $r4, $r6, $r8;

        r11 := @this: org.apache.pdfbox.Overlay;

        r1 := @parameter0: org.apache.pdfbox.cos.COSName;

        r0 := @parameter1: org.apache.pdfbox.cos.COSDictionary;

        r3 := @parameter2: org.apache.pdfbox.cos.COSDictionary;

        $r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1);

        r12 = (org.apache.pdfbox.cos.COSArray) $r2;

        $r4 = virtualinvoke r3.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>(r1);

        r5 = (org.apache.pdfbox.cos.COSArray) $r4;

        if r12 != null goto label1;

        $r10 = new org.apache.pdfbox.cos.COSArray;

        specialinvoke $r10.<org.apache.pdfbox.cos.COSArray: void <init>()>();

        r12 = $r10;

        virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>(r1, $r10);

     label1:
        i2 = 0;

     label2:
        if r5 == null goto label7;

        $i0 = virtualinvoke r5.<org.apache.pdfbox.cos.COSArray: int size()>();

        if i2 >= $i0 goto label7;

        $r6 = virtualinvoke r5.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(i2);

        $z0 = $r6 instanceof org.apache.pdfbox.cos.COSName;

        if $z0 == 0 goto label6;

        r7 = (org.apache.pdfbox.cos.COSName) $r6;

        z3 = 0;

        i3 = 0;

     label3:
        $i1 = virtualinvoke r12.<org.apache.pdfbox.cos.COSArray: int size()>();

        if i3 >= $i1 goto label5;

        $r8 = virtualinvoke r12.<org.apache.pdfbox.cos.COSArray: org.apache.pdfbox.cos.COSBase get(int)>(i3);

        $z1 = $r8 instanceof org.apache.pdfbox.cos.COSName;

        if $z1 == 0 goto label4;

        r9 = (org.apache.pdfbox.cos.COSName) $r8;

        $z2 = virtualinvoke r9.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r7);

        if $z2 == 0 goto label4;

        z3 = 1;

        goto label5;

     label4:
        i3 = i3 + 1;

        goto label3;

     label5:
        if z3 != 0 goto label6;

        virtualinvoke r12.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>(r7);

     label6:
        i2 = i2 + 1;

        goto label2;

     label7:
        return;
    }

    static void <clinit>()
    {
        org.apache.pdfbox.cos.COSName $r0, $r1, $r2;

        $r0 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName XOBJECT>;

        <org.apache.pdfbox.Overlay: org.apache.pdfbox.cos.COSName XOBJECT> = $r0;

        $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName PROC_SET>;

        <org.apache.pdfbox.Overlay: org.apache.pdfbox.cos.COSName PROC_SET> = $r1;

        $r2 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName EXT_G_STATE>;

        <org.apache.pdfbox.Overlay: org.apache.pdfbox.cos.COSName EXT_G_STATE> = $r2;

        return;
    }
}
