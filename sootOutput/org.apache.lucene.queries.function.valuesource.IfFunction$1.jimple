class org.apache.lucene.queries.function.valuesource.IfFunction$1 extends org.apache.lucene.queries.function.FunctionValues
{
    final org.apache.lucene.queries.function.FunctionValues val$ifVals;
    final org.apache.lucene.queries.function.FunctionValues val$trueVals;
    final org.apache.lucene.queries.function.FunctionValues val$falseVals;
    final org.apache.lucene.queries.function.valuesource.IfFunction this$0;

    void <init>(org.apache.lucene.queries.function.valuesource.IfFunction, org.apache.lucene.queries.function.FunctionValues, org.apache.lucene.queries.function.FunctionValues, org.apache.lucene.queries.function.FunctionValues)
    {
        org.apache.lucene.queries.function.valuesource.IfFunction$1 r0;
        org.apache.lucene.queries.function.valuesource.IfFunction r1;
        org.apache.lucene.queries.function.FunctionValues r2, r3, r4;

        r0 := @this: org.apache.lucene.queries.function.valuesource.IfFunction$1;

        r1 := @parameter0: org.apache.lucene.queries.function.valuesource.IfFunction;

        r2 := @parameter1: org.apache.lucene.queries.function.FunctionValues;

        r3 := @parameter2: org.apache.lucene.queries.function.FunctionValues;

        r4 := @parameter3: org.apache.lucene.queries.function.FunctionValues;

        r0.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.valuesource.IfFunction this$0> = r1;

        r0.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$ifVals> = r2;

        r0.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$trueVals> = r3;

        r0.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$falseVals> = r4;

        specialinvoke r0.<org.apache.lucene.queries.function.FunctionValues: void <init>()>();

        return;
    }

    public byte byteVal(int)
    {
        org.apache.lucene.queries.function.valuesource.IfFunction$1 r0;
        byte $b1;
        int i0;
        org.apache.lucene.queries.function.FunctionValues $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.IfFunction$1;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$ifVals>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.queries.function.FunctionValues: boolean boolVal(int)>(i0);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$trueVals>;

        $b1 = virtualinvoke $r3.<org.apache.lucene.queries.function.FunctionValues: byte byteVal(int)>(i0);

        goto label2;

     label1:
        $r2 = r0.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$falseVals>;

        $b1 = virtualinvoke $r2.<org.apache.lucene.queries.function.FunctionValues: byte byteVal(int)>(i0);

     label2:
        return $b1;
    }

    public short shortVal(int)
    {
        short $s1;
        org.apache.lucene.queries.function.valuesource.IfFunction$1 r0;
        int i0;
        org.apache.lucene.queries.function.FunctionValues $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.IfFunction$1;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$ifVals>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.queries.function.FunctionValues: boolean boolVal(int)>(i0);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$trueVals>;

        $s1 = virtualinvoke $r3.<org.apache.lucene.queries.function.FunctionValues: short shortVal(int)>(i0);

        goto label2;

     label1:
        $r2 = r0.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$falseVals>;

        $s1 = virtualinvoke $r2.<org.apache.lucene.queries.function.FunctionValues: short shortVal(int)>(i0);

     label2:
        return $s1;
    }

    public float floatVal(int)
    {
        org.apache.lucene.queries.function.valuesource.IfFunction$1 r0;
        int i0;
        float $f0;
        org.apache.lucene.queries.function.FunctionValues $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.IfFunction$1;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$ifVals>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.queries.function.FunctionValues: boolean boolVal(int)>(i0);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$trueVals>;

        $f0 = virtualinvoke $r3.<org.apache.lucene.queries.function.FunctionValues: float floatVal(int)>(i0);

        goto label2;

     label1:
        $r2 = r0.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$falseVals>;

        $f0 = virtualinvoke $r2.<org.apache.lucene.queries.function.FunctionValues: float floatVal(int)>(i0);

     label2:
        return $f0;
    }

    public int intVal(int)
    {
        org.apache.lucene.queries.function.valuesource.IfFunction$1 r0;
        int i0, $i1;
        org.apache.lucene.queries.function.FunctionValues $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.IfFunction$1;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$ifVals>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.queries.function.FunctionValues: boolean boolVal(int)>(i0);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$trueVals>;

        $i1 = virtualinvoke $r3.<org.apache.lucene.queries.function.FunctionValues: int intVal(int)>(i0);

        goto label2;

     label1:
        $r2 = r0.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$falseVals>;

        $i1 = virtualinvoke $r2.<org.apache.lucene.queries.function.FunctionValues: int intVal(int)>(i0);

     label2:
        return $i1;
    }

    public long longVal(int)
    {
        org.apache.lucene.queries.function.valuesource.IfFunction$1 r0;
        int i0;
        org.apache.lucene.queries.function.FunctionValues $r1, $r2, $r3;
        long $l1;
        boolean $z0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.IfFunction$1;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$ifVals>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.queries.function.FunctionValues: boolean boolVal(int)>(i0);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$trueVals>;

        $l1 = virtualinvoke $r3.<org.apache.lucene.queries.function.FunctionValues: long longVal(int)>(i0);

        goto label2;

     label1:
        $r2 = r0.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$falseVals>;

        $l1 = virtualinvoke $r2.<org.apache.lucene.queries.function.FunctionValues: long longVal(int)>(i0);

     label2:
        return $l1;
    }

    public double doubleVal(int)
    {
        org.apache.lucene.queries.function.valuesource.IfFunction$1 r0;
        int i0;
        org.apache.lucene.queries.function.FunctionValues $r1, $r2, $r3;
        boolean $z0;
        double $d0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.IfFunction$1;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$ifVals>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.queries.function.FunctionValues: boolean boolVal(int)>(i0);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$trueVals>;

        $d0 = virtualinvoke $r3.<org.apache.lucene.queries.function.FunctionValues: double doubleVal(int)>(i0);

        goto label2;

     label1:
        $r2 = r0.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$falseVals>;

        $d0 = virtualinvoke $r2.<org.apache.lucene.queries.function.FunctionValues: double doubleVal(int)>(i0);

     label2:
        return $d0;
    }

    public java.lang.String strVal(int)
    {
        org.apache.lucene.queries.function.valuesource.IfFunction$1 r0;
        int i0;
        org.apache.lucene.queries.function.FunctionValues $r1, $r2, $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.IfFunction$1;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$ifVals>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.queries.function.FunctionValues: boolean boolVal(int)>(i0);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$trueVals>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.queries.function.FunctionValues: java.lang.String strVal(int)>(i0);

        goto label2;

     label1:
        $r2 = r0.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$falseVals>;

        $r4 = virtualinvoke $r2.<org.apache.lucene.queries.function.FunctionValues: java.lang.String strVal(int)>(i0);

     label2:
        return $r4;
    }

    public boolean boolVal(int)
    {
        org.apache.lucene.queries.function.valuesource.IfFunction$1 r0;
        int i0;
        org.apache.lucene.queries.function.FunctionValues $r1, $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.queries.function.valuesource.IfFunction$1;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$ifVals>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.queries.function.FunctionValues: boolean boolVal(int)>(i0);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$trueVals>;

        $z1 = virtualinvoke $r3.<org.apache.lucene.queries.function.FunctionValues: boolean boolVal(int)>(i0);

        goto label2;

     label1:
        $r2 = r0.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$falseVals>;

        $z1 = virtualinvoke $r2.<org.apache.lucene.queries.function.FunctionValues: boolean boolVal(int)>(i0);

     label2:
        return $z1;
    }

    public boolean bytesVal(int, org.apache.lucene.util.BytesRef)
    {
        org.apache.lucene.queries.function.valuesource.IfFunction$1 r0;
        org.apache.lucene.util.BytesRef r2;
        int i0;
        org.apache.lucene.queries.function.FunctionValues $r1, $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.queries.function.valuesource.IfFunction$1;

        i0 := @parameter0: int;

        r2 := @parameter1: org.apache.lucene.util.BytesRef;

        $r1 = r0.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$ifVals>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.queries.function.FunctionValues: boolean boolVal(int)>(i0);

        if $z0 == 0 goto label1;

        $r4 = r0.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$trueVals>;

        $z1 = virtualinvoke $r4.<org.apache.lucene.queries.function.FunctionValues: boolean bytesVal(int,org.apache.lucene.util.BytesRef)>(i0, r2);

        goto label2;

     label1:
        $r3 = r0.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$falseVals>;

        $z1 = virtualinvoke $r3.<org.apache.lucene.queries.function.FunctionValues: boolean bytesVal(int,org.apache.lucene.util.BytesRef)>(i0, r2);

     label2:
        return $z1;
    }

    public java.lang.Object objectVal(int)
    {
        org.apache.lucene.queries.function.valuesource.IfFunction$1 r0;
        int i0;
        org.apache.lucene.queries.function.FunctionValues $r1, $r2, $r3;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.IfFunction$1;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$ifVals>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.queries.function.FunctionValues: boolean boolVal(int)>(i0);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$trueVals>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.queries.function.FunctionValues: java.lang.Object objectVal(int)>(i0);

        goto label2;

     label1:
        $r2 = r0.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$falseVals>;

        $r4 = virtualinvoke $r2.<org.apache.lucene.queries.function.FunctionValues: java.lang.Object objectVal(int)>(i0);

     label2:
        return $r4;
    }

    public boolean exists(int)
    {
        int i0;
        org.apache.lucene.queries.function.valuesource.IfFunction$1 r0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.IfFunction$1;

        i0 := @parameter0: int;

        return 1;
    }

    public org.apache.lucene.queries.function.FunctionValues$ValueFiller getValueFiller()
    {
        org.apache.lucene.queries.function.valuesource.IfFunction$1 r0;
        org.apache.lucene.queries.function.FunctionValues$ValueFiller $r1;

        r0 := @this: org.apache.lucene.queries.function.valuesource.IfFunction$1;

        $r1 = specialinvoke r0.<org.apache.lucene.queries.function.FunctionValues: org.apache.lucene.queries.function.FunctionValues$ValueFiller getValueFiller()>();

        return $r1;
    }

    public java.lang.String toString(int)
    {
        int i0;
        org.apache.lucene.queries.function.FunctionValues $r3, $r7, $r11;
        java.lang.String $r4, $r8, $r12, $r15;
        org.apache.lucene.queries.function.valuesource.IfFunction$1 r2;
        java.lang.StringBuilder $r0, $r1, $r5, $r6, $r9, $r10, $r13, $r14;

        r2 := @this: org.apache.lucene.queries.function.valuesource.IfFunction$1;

        i0 := @parameter0: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("if(");

        $r3 = r2.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$ifVals>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.queries.function.FunctionValues: java.lang.String toString(int)>(i0);

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $r7 = r2.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$trueVals>;

        $r8 = virtualinvoke $r7.<org.apache.lucene.queries.function.FunctionValues: java.lang.String toString(int)>(i0);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $r11 = r2.<org.apache.lucene.queries.function.valuesource.IfFunction$1: org.apache.lucene.queries.function.FunctionValues val$falseVals>;

        $r12 = virtualinvoke $r11.<org.apache.lucene.queries.function.FunctionValues: java.lang.String toString(int)>(i0);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }
}
