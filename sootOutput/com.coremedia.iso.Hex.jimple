public class com.coremedia.iso.Hex extends java.lang.Object
{
    private static final char[] DIGITS;

    static void <clinit>()
    {
        char[] $r0;

        $r0 = newarray (char)[16];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 65;

        $r0[11] = 66;

        $r0[12] = 67;

        $r0[13] = 68;

        $r0[14] = 69;

        $r0[15] = 70;

        <com.coremedia.iso.Hex: char[] DIGITS> = $r0;

        return;
    }

    public void <init>()
    {
        com.coremedia.iso.Hex r0;

        r0 := @this: com.coremedia.iso.Hex;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String encodeHex(byte[])
    {
        byte[] r0;
        java.lang.String $r1;

        r0 := @parameter0: byte[];

        $r1 = staticinvoke <com.coremedia.iso.Hex: java.lang.String encodeHex(byte[],int)>(r0, 0);

        return $r1;
    }

    public static java.lang.String encodeHex(byte[], int)
    {
        byte[] r0;
        short $s11, $s17;
        byte $b10, $b14, $b15;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, $i12, $i18;
        java.lang.String $r5;
        char $c13, $c16;
        char[] $r2, $r3, $r4;

        r0 := @parameter0: byte[];

        i1 := @parameter1: int;

        i0 = lengthof r0;

        $i2 = i0 << 1;

        if i1 <= 0 goto label1;

        $i6 = i0 / i1;

        goto label2;

     label1:
        $i6 = 0;

     label2:
        $i3 = $i2 + $i6;

        $r2 = newarray (char)[$i3];

        i7 = 0;

        i8 = 0;

        goto label5;

     label3:
        if i1 <= 0 goto label4;

        $i4 = i7 % i1;

        if $i4 != 0 goto label4;

        if i8 <= 0 goto label4;

        $i5 = i8;

        i8 = i8 + 1;

        $r2[$i5] = 45;

     label4:
        i9 = i8 + 1;

        $r3 = <com.coremedia.iso.Hex: char[] DIGITS>;

        $b10 = r0[i7];

        $s17 = (short) $b10;

        $s11 = 240 & $s17;

        $i18 = (int) $s11;

        $i12 = $i18 >>> 4;

        $c13 = $r3[$i12];

        $r2[i8] = $c13;

        i8 = i9 + 1;

        $r4 = <com.coremedia.iso.Hex: char[] DIGITS>;

        $b14 = r0[i7];

        $b15 = 15 & $b14;

        $c16 = $r4[$b15];

        $r2[i9] = $c16;

        i7 = i7 + 1;

     label5:
        if i7 < i0 goto label3;

        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(char[])>($r2);

        return $r5;
    }

    public static byte[] decodeHex(java.lang.String)
    {
        byte[] $r3;
        java.io.ByteArrayOutputStream $r0;
        int $i0, $i1, $i2, i3;
        java.lang.String r1, $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        i3 = 0;

        goto label2;

     label1:
        $i1 = i3 + 2;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i3, $i1);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r2, 16);

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(int)>($i2);

        i3 = i3 + 2;

     label2:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i3 < $i0 goto label1;

        $r3 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r3;
    }
}
