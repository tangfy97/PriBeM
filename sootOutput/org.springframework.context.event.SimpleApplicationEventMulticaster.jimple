public class org.springframework.context.event.SimpleApplicationEventMulticaster extends org.springframework.context.event.AbstractApplicationEventMulticaster
{
    private java.util.concurrent.Executor taskExecutor;

    public void <init>()
    {
        org.springframework.context.event.SimpleApplicationEventMulticaster r0;

        r0 := @this: org.springframework.context.event.SimpleApplicationEventMulticaster;

        specialinvoke r0.<org.springframework.context.event.AbstractApplicationEventMulticaster: void <init>()>();

        return;
    }

    public void <init>(org.springframework.beans.factory.BeanFactory)
    {
        org.springframework.context.event.SimpleApplicationEventMulticaster r0;
        org.springframework.beans.factory.BeanFactory r1;

        r0 := @this: org.springframework.context.event.SimpleApplicationEventMulticaster;

        r1 := @parameter0: org.springframework.beans.factory.BeanFactory;

        specialinvoke r0.<org.springframework.context.event.AbstractApplicationEventMulticaster: void <init>()>();

        virtualinvoke r0.<org.springframework.context.event.SimpleApplicationEventMulticaster: void setBeanFactory(org.springframework.beans.factory.BeanFactory)>(r1);

        return;
    }

    public void setTaskExecutor(java.util.concurrent.Executor)
    {
        org.springframework.context.event.SimpleApplicationEventMulticaster r0;
        java.util.concurrent.Executor r1;

        r0 := @this: org.springframework.context.event.SimpleApplicationEventMulticaster;

        r1 := @parameter0: java.util.concurrent.Executor;

        r0.<org.springframework.context.event.SimpleApplicationEventMulticaster: java.util.concurrent.Executor taskExecutor> = r1;

        return;
    }

    protected java.util.concurrent.Executor getTaskExecutor()
    {
        org.springframework.context.event.SimpleApplicationEventMulticaster r0;
        java.util.concurrent.Executor $r1;

        r0 := @this: org.springframework.context.event.SimpleApplicationEventMulticaster;

        $r1 = r0.<org.springframework.context.event.SimpleApplicationEventMulticaster: java.util.concurrent.Executor taskExecutor>;

        return $r1;
    }

    public void multicastEvent(org.springframework.context.ApplicationEvent)
    {
        java.util.Iterator $r3;
        java.util.concurrent.Executor $r6;
        java.util.Collection $r2;
        org.springframework.context.event.SimpleApplicationEventMulticaster$1 $r7;
        org.springframework.context.event.SimpleApplicationEventMulticaster r0;
        org.springframework.context.ApplicationListener r5;
        org.springframework.context.ApplicationEvent r1;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: org.springframework.context.event.SimpleApplicationEventMulticaster;

        r1 := @parameter0: org.springframework.context.ApplicationEvent;

        $r2 = virtualinvoke r0.<org.springframework.context.event.SimpleApplicationEventMulticaster: java.util.Collection getApplicationListeners(org.springframework.context.ApplicationEvent)>(r1);

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

        goto label3;

     label1:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.springframework.context.ApplicationListener) $r4;

        $r6 = virtualinvoke r0.<org.springframework.context.event.SimpleApplicationEventMulticaster: java.util.concurrent.Executor getTaskExecutor()>();

        if $r6 == null goto label2;

        $r7 = new org.springframework.context.event.SimpleApplicationEventMulticaster$1;

        specialinvoke $r7.<org.springframework.context.event.SimpleApplicationEventMulticaster$1: void <init>(org.springframework.context.event.SimpleApplicationEventMulticaster,org.springframework.context.ApplicationListener,org.springframework.context.ApplicationEvent)>(r0, r5, r1);

        interfaceinvoke $r6.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r7);

        goto label3;

     label2:
        interfaceinvoke r5.<org.springframework.context.ApplicationListener: void onApplicationEvent(org.springframework.context.ApplicationEvent)>(r1);

     label3:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return;
    }
}
