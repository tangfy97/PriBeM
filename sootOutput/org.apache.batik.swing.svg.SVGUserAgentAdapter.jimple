public class org.apache.batik.swing.svg.SVGUserAgentAdapter extends java.lang.Object implements org.apache.batik.swing.svg.SVGUserAgent
{

    public void <init>()
    {
        org.apache.batik.swing.svg.SVGUserAgentAdapter r0;

        r0 := @this: org.apache.batik.swing.svg.SVGUserAgentAdapter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void displayError(java.lang.String)
    {
        java.io.PrintStream $r1;
        org.apache.batik.swing.svg.SVGUserAgentAdapter r2;
        java.lang.String r0;

        r2 := @this: org.apache.batik.swing.svg.SVGUserAgentAdapter;

        r0 := @parameter0: java.lang.String;

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(r0);

        return;
    }

    public void displayError(java.lang.Exception)
    {
        org.apache.batik.swing.svg.SVGUserAgentAdapter r1;
        java.lang.Exception r0;

        r1 := @this: org.apache.batik.swing.svg.SVGUserAgentAdapter;

        r0 := @parameter0: java.lang.Exception;

        virtualinvoke r0.<java.lang.Throwable: void printStackTrace()>();

        return;
    }

    public void displayMessage(java.lang.String)
    {
        java.io.PrintStream $r1;
        org.apache.batik.swing.svg.SVGUserAgentAdapter r2;
        java.lang.String r0;

        r2 := @this: org.apache.batik.swing.svg.SVGUserAgentAdapter;

        r0 := @parameter0: java.lang.String;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(r0);

        return;
    }

    public void showAlert(java.lang.String)
    {
        java.io.PrintStream $r1;
        org.apache.batik.swing.svg.SVGUserAgentAdapter r2;
        java.lang.String r0;

        r2 := @this: org.apache.batik.swing.svg.SVGUserAgentAdapter;

        r0 := @parameter0: java.lang.String;

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(r0);

        return;
    }

    public java.lang.String showPrompt(java.lang.String)
    {
        org.apache.batik.swing.svg.SVGUserAgentAdapter r0;
        java.lang.String r1;

        r0 := @this: org.apache.batik.swing.svg.SVGUserAgentAdapter;

        r1 := @parameter0: java.lang.String;

        return "";
    }

    public java.lang.String showPrompt(java.lang.String, java.lang.String)
    {
        org.apache.batik.swing.svg.SVGUserAgentAdapter r1;
        java.lang.String r0, r2;

        r1 := @this: org.apache.batik.swing.svg.SVGUserAgentAdapter;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        return r0;
    }

    public boolean showConfirm(java.lang.String)
    {
        org.apache.batik.swing.svg.SVGUserAgentAdapter r0;
        java.lang.String r1;

        r0 := @this: org.apache.batik.swing.svg.SVGUserAgentAdapter;

        r1 := @parameter0: java.lang.String;

        return 0;
    }

    public float getPixelUnitToMillimeter()
    {
        org.apache.batik.swing.svg.SVGUserAgentAdapter r0;

        r0 := @this: org.apache.batik.swing.svg.SVGUserAgentAdapter;

        return 0.26458332F;
    }

    public float getPixelToMM()
    {
        float $f0;
        org.apache.batik.swing.svg.SVGUserAgentAdapter r0;

        r0 := @this: org.apache.batik.swing.svg.SVGUserAgentAdapter;

        $f0 = virtualinvoke r0.<org.apache.batik.swing.svg.SVGUserAgentAdapter: float getPixelUnitToMillimeter()>();

        return $f0;
    }

    public java.lang.String getDefaultFontFamily()
    {
        org.apache.batik.swing.svg.SVGUserAgentAdapter r0;

        r0 := @this: org.apache.batik.swing.svg.SVGUserAgentAdapter;

        return "Serif";
    }

    public float getMediumFontSize()
    {
        float $f0, $f1, $f2;
        org.apache.batik.swing.svg.SVGUserAgentAdapter r0;

        r0 := @this: org.apache.batik.swing.svg.SVGUserAgentAdapter;

        $f0 = virtualinvoke r0.<org.apache.batik.swing.svg.SVGUserAgentAdapter: float getPixelUnitToMillimeter()>();

        $f1 = 72.0F * $f0;

        $f2 = 228.59999F / $f1;

        return $f2;
    }

    public float getLighterFontWeight(float)
    {
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuffer $r1, $r2, $r3;
        int $i0, i1;
        float f0, $f1, $f2;
        org.apache.batik.swing.svg.SVGUserAgentAdapter r5;
        java.lang.String $r4;

        r5 := @this: org.apache.batik.swing.svg.SVGUserAgentAdapter;

        f0 := @parameter0: float;

        $f1 = f0 + 50.0F;

        $f2 = $f1 / 100.0F;

        $i0 = (int) $f2;

        i1 = $i0 * 100;

        lookupswitch(i1)
        {
            case 100: goto label01;
            case 200: goto label02;
            case 300: goto label03;
            case 400: goto label04;
            case 500: goto label05;
            case 600: goto label06;
            case 700: goto label07;
            case 800: goto label08;
            case 900: goto label09;
            default: goto label10;
        };

     label01:
        return 100.0F;

     label02:
        return 100.0F;

     label03:
        return 200.0F;

     label04:
        return 300.0F;

     label05:
        return 400.0F;

     label06:
        return 400.0F;

     label07:
        return 400.0F;

     label08:
        return 400.0F;

     label09:
        return 400.0F;

     label10:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Bad Font Weight: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>(f0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r0;
    }

    public float getBolderFontWeight(float)
    {
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuffer $r1, $r2, $r3;
        int $i0, i1;
        float f0, $f1, $f2;
        org.apache.batik.swing.svg.SVGUserAgentAdapter r5;
        java.lang.String $r4;

        r5 := @this: org.apache.batik.swing.svg.SVGUserAgentAdapter;

        f0 := @parameter0: float;

        $f1 = f0 + 50.0F;

        $f2 = $f1 / 100.0F;

        $i0 = (int) $f2;

        i1 = $i0 * 100;

        lookupswitch(i1)
        {
            case 100: goto label01;
            case 200: goto label02;
            case 300: goto label03;
            case 400: goto label04;
            case 500: goto label05;
            case 600: goto label06;
            case 700: goto label07;
            case 800: goto label08;
            case 900: goto label09;
            default: goto label10;
        };

     label01:
        return 600.0F;

     label02:
        return 600.0F;

     label03:
        return 600.0F;

     label04:
        return 600.0F;

     label05:
        return 600.0F;

     label06:
        return 700.0F;

     label07:
        return 800.0F;

     label08:
        return 900.0F;

     label09:
        return 900.0F;

     label10:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Bad Font Weight: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>(f0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r0;
    }

    public java.lang.String getLanguages()
    {
        org.apache.batik.swing.svg.SVGUserAgentAdapter r0;

        r0 := @this: org.apache.batik.swing.svg.SVGUserAgentAdapter;

        return "en";
    }

    public java.lang.String getUserStyleSheetURI()
    {
        org.apache.batik.swing.svg.SVGUserAgentAdapter r0;

        r0 := @this: org.apache.batik.swing.svg.SVGUserAgentAdapter;

        return null;
    }

    public java.lang.String getXMLParserClassName()
    {
        org.apache.batik.swing.svg.SVGUserAgentAdapter r1;
        java.lang.String $r0;

        r1 := @this: org.apache.batik.swing.svg.SVGUserAgentAdapter;

        $r0 = staticinvoke <org.apache.batik.util.XMLResourceDescriptor: java.lang.String getXMLParserClassName()>();

        return $r0;
    }

    public boolean isXMLParserValidating()
    {
        org.apache.batik.swing.svg.SVGUserAgentAdapter r0;

        r0 := @this: org.apache.batik.swing.svg.SVGUserAgentAdapter;

        return 0;
    }

    public java.lang.String getMedia()
    {
        org.apache.batik.swing.svg.SVGUserAgentAdapter r0;

        r0 := @this: org.apache.batik.swing.svg.SVGUserAgentAdapter;

        return "screen";
    }

    public java.lang.String getAlternateStyleSheet()
    {
        org.apache.batik.swing.svg.SVGUserAgentAdapter r0;

        r0 := @this: org.apache.batik.swing.svg.SVGUserAgentAdapter;

        return null;
    }

    public void openLink(java.lang.String, boolean)
    {
        org.apache.batik.swing.svg.SVGUserAgentAdapter r0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.apache.batik.swing.svg.SVGUserAgentAdapter;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        return;
    }

    public boolean supportExtension(java.lang.String)
    {
        org.apache.batik.swing.svg.SVGUserAgentAdapter r0;
        java.lang.String r1;

        r0 := @this: org.apache.batik.swing.svg.SVGUserAgentAdapter;

        r1 := @parameter0: java.lang.String;

        return 0;
    }

    public void handleElement(org.w3c.dom.Element, java.lang.Object)
    {
        org.apache.batik.swing.svg.SVGUserAgentAdapter r0;
        java.lang.Object r2;
        org.w3c.dom.Element r1;

        r0 := @this: org.apache.batik.swing.svg.SVGUserAgentAdapter;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: java.lang.Object;

        return;
    }

    public org.apache.batik.bridge.ScriptSecurity getScriptSecurity(java.lang.String, org.apache.batik.util.ParsedURL, org.apache.batik.util.ParsedURL)
    {
        org.apache.batik.util.ParsedURL r2, r3;
        org.apache.batik.bridge.RelaxedScriptSecurity $r0;
        org.apache.batik.swing.svg.SVGUserAgentAdapter r4;
        java.lang.String r1;

        r4 := @this: org.apache.batik.swing.svg.SVGUserAgentAdapter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.batik.util.ParsedURL;

        r3 := @parameter2: org.apache.batik.util.ParsedURL;

        $r0 = new org.apache.batik.bridge.RelaxedScriptSecurity;

        specialinvoke $r0.<org.apache.batik.bridge.RelaxedScriptSecurity: void <init>(java.lang.String,org.apache.batik.util.ParsedURL,org.apache.batik.util.ParsedURL)>(r1, r2, r3);

        return $r0;
    }

    public void checkLoadScript(java.lang.String, org.apache.batik.util.ParsedURL, org.apache.batik.util.ParsedURL) throws java.lang.SecurityException
    {
        org.apache.batik.util.ParsedURL r2, r3;
        org.apache.batik.bridge.ScriptSecurity $r4;
        org.apache.batik.swing.svg.SVGUserAgentAdapter r0;
        java.lang.String r1;

        r0 := @this: org.apache.batik.swing.svg.SVGUserAgentAdapter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.batik.util.ParsedURL;

        r3 := @parameter2: org.apache.batik.util.ParsedURL;

        $r4 = virtualinvoke r0.<org.apache.batik.swing.svg.SVGUserAgentAdapter: org.apache.batik.bridge.ScriptSecurity getScriptSecurity(java.lang.String,org.apache.batik.util.ParsedURL,org.apache.batik.util.ParsedURL)>(r1, r2, r3);

        if $r4 == null goto label1;

        interfaceinvoke $r4.<org.apache.batik.bridge.ScriptSecurity: void checkLoadScript()>();

     label1:
        return;
    }

    public org.apache.batik.bridge.ExternalResourceSecurity getExternalResourceSecurity(org.apache.batik.util.ParsedURL, org.apache.batik.util.ParsedURL)
    {
        org.apache.batik.bridge.RelaxedExternalResourceSecurity $r0;
        org.apache.batik.util.ParsedURL r1, r2;
        org.apache.batik.swing.svg.SVGUserAgentAdapter r3;

        r3 := @this: org.apache.batik.swing.svg.SVGUserAgentAdapter;

        r1 := @parameter0: org.apache.batik.util.ParsedURL;

        r2 := @parameter1: org.apache.batik.util.ParsedURL;

        $r0 = new org.apache.batik.bridge.RelaxedExternalResourceSecurity;

        specialinvoke $r0.<org.apache.batik.bridge.RelaxedExternalResourceSecurity: void <init>(org.apache.batik.util.ParsedURL,org.apache.batik.util.ParsedURL)>(r1, r2);

        return $r0;
    }

    public void checkLoadExternalResource(org.apache.batik.util.ParsedURL, org.apache.batik.util.ParsedURL) throws java.lang.SecurityException
    {
        org.apache.batik.util.ParsedURL r1, r2;
        org.apache.batik.swing.svg.SVGUserAgentAdapter r0;
        org.apache.batik.bridge.ExternalResourceSecurity $r3;

        r0 := @this: org.apache.batik.swing.svg.SVGUserAgentAdapter;

        r1 := @parameter0: org.apache.batik.util.ParsedURL;

        r2 := @parameter1: org.apache.batik.util.ParsedURL;

        $r3 = virtualinvoke r0.<org.apache.batik.swing.svg.SVGUserAgentAdapter: org.apache.batik.bridge.ExternalResourceSecurity getExternalResourceSecurity(org.apache.batik.util.ParsedURL,org.apache.batik.util.ParsedURL)>(r1, r2);

        if $r3 == null goto label1;

        interfaceinvoke $r3.<org.apache.batik.bridge.ExternalResourceSecurity: void checkLoadExternalResource()>();

     label1:
        return;
    }
}
