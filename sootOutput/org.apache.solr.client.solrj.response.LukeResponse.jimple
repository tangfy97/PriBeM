public class org.apache.solr.client.solrj.response.LukeResponse extends org.apache.solr.client.solrj.response.SolrResponseBase
{
    private org.apache.solr.common.util.NamedList indexInfo;
    private java.util.Map fieldInfo;
    private java.util.Map fieldTypeInfo;

    public void <init>()
    {
        org.apache.solr.client.solrj.response.LukeResponse r0;

        r0 := @this: org.apache.solr.client.solrj.response.LukeResponse;

        specialinvoke r0.<org.apache.solr.client.solrj.response.SolrResponseBase: void <init>()>();

        return;
    }

    public void setResponse(org.apache.solr.common.util.NamedList)
    {
        java.util.Map $r16, $r26;
        boolean $z0, $z1;
        org.apache.solr.client.solrj.response.LukeResponse r0;
        java.util.HashMap $r8, $r18;
        org.apache.solr.client.solrj.response.LukeResponse$FieldInfo $r21;
        java.lang.String $r13, $r23;
        org.apache.solr.client.solrj.response.LukeResponse$FieldTypeInfo $r11;
        java.util.Map$Entry r30, r32;
        java.util.Iterator $r9, $r19;
        org.apache.solr.common.util.NamedList r1, $r3, r5, $r15, $r25, r29, r31;
        java.lang.Object $r2, $r4, $r6, $r7, $r10, $r12, $r14, $r17, $r20, $r22, $r24, $r27, $r28;

        r0 := @this: org.apache.solr.client.solrj.response.LukeResponse;

        r1 := @parameter0: org.apache.solr.common.util.NamedList;

        specialinvoke r0.<org.apache.solr.client.solrj.response.SolrResponseBase: void setResponse(org.apache.solr.common.util.NamedList)>(r1);

        $r2 = virtualinvoke r1.<org.apache.solr.common.util.NamedList: java.lang.Object get(java.lang.String)>("index");

        $r3 = (org.apache.solr.common.util.NamedList) $r2;

        r0.<org.apache.solr.client.solrj.response.LukeResponse: org.apache.solr.common.util.NamedList indexInfo> = $r3;

        $r4 = virtualinvoke r1.<org.apache.solr.common.util.NamedList: java.lang.Object get(java.lang.String)>("schema");

        r5 = (org.apache.solr.common.util.NamedList) $r4;

        $r6 = virtualinvoke r1.<org.apache.solr.common.util.NamedList: java.lang.Object get(java.lang.String)>("fields");

        r29 = (org.apache.solr.common.util.NamedList) $r6;

        if r29 != null goto label1;

        if r5 == null goto label1;

        $r28 = virtualinvoke r5.<org.apache.solr.common.util.NamedList: java.lang.Object get(java.lang.String)>("fields");

        r29 = (org.apache.solr.common.util.NamedList) $r28;

     label1:
        if r29 == null goto label3;

        $r18 = new java.util.HashMap;

        specialinvoke $r18.<java.util.HashMap: void <init>()>();

        r0.<org.apache.solr.client.solrj.response.LukeResponse: java.util.Map fieldInfo> = $r18;

        $r19 = virtualinvoke r29.<org.apache.solr.common.util.NamedList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r30 = (java.util.Map$Entry) $r20;

        $r21 = new org.apache.solr.client.solrj.response.LukeResponse$FieldInfo;

        $r22 = interfaceinvoke r30.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r23 = (java.lang.String) $r22;

        specialinvoke $r21.<org.apache.solr.client.solrj.response.LukeResponse$FieldInfo: void <init>(java.lang.String)>($r23);

        $r24 = interfaceinvoke r30.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r25 = (org.apache.solr.common.util.NamedList) $r24;

        virtualinvoke $r21.<org.apache.solr.client.solrj.response.LukeResponse$FieldInfo: void read(org.apache.solr.common.util.NamedList)>($r25);

        $r26 = r0.<org.apache.solr.client.solrj.response.LukeResponse: java.util.Map fieldInfo>;

        $r27 = interfaceinvoke r30.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, $r21);

        goto label2;

     label3:
        if r5 == null goto label5;

        $r7 = virtualinvoke r5.<org.apache.solr.common.util.NamedList: java.lang.Object get(java.lang.String)>("types");

        r31 = (org.apache.solr.common.util.NamedList) $r7;

        if r31 == null goto label5;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r0.<org.apache.solr.client.solrj.response.LukeResponse: java.util.Map fieldTypeInfo> = $r8;

        $r9 = virtualinvoke r31.<org.apache.solr.common.util.NamedList: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r32 = (java.util.Map$Entry) $r10;

        $r11 = new org.apache.solr.client.solrj.response.LukeResponse$FieldTypeInfo;

        $r12 = interfaceinvoke r32.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = (java.lang.String) $r12;

        specialinvoke $r11.<org.apache.solr.client.solrj.response.LukeResponse$FieldTypeInfo: void <init>(java.lang.String)>($r13);

        $r14 = interfaceinvoke r32.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r15 = (org.apache.solr.common.util.NamedList) $r14;

        virtualinvoke $r11.<org.apache.solr.client.solrj.response.LukeResponse$FieldTypeInfo: void read(org.apache.solr.common.util.NamedList)>($r15);

        $r16 = r0.<org.apache.solr.client.solrj.response.LukeResponse: java.util.Map fieldTypeInfo>;

        $r17 = interfaceinvoke r32.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, $r11);

        goto label4;

     label5:
        return;
    }

    public java.lang.String getIndexDirectory()
    {
        java.lang.Object $r3;
        java.lang.String $r4;
        org.apache.solr.client.solrj.response.LukeResponse r0;
        org.apache.solr.common.util.NamedList $r1, $r2;

        r0 := @this: org.apache.solr.client.solrj.response.LukeResponse;

        $r1 = r0.<org.apache.solr.client.solrj.response.LukeResponse: org.apache.solr.common.util.NamedList indexInfo>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.solr.client.solrj.response.LukeResponse: org.apache.solr.common.util.NamedList indexInfo>;

        $r3 = virtualinvoke $r2.<org.apache.solr.common.util.NamedList: java.lang.Object get(java.lang.String)>("directory");

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public java.lang.Integer getNumDocs()
    {
        java.lang.Object $r3;
        java.lang.Integer $r4;
        org.apache.solr.client.solrj.response.LukeResponse r0;
        org.apache.solr.common.util.NamedList $r1, $r2;

        r0 := @this: org.apache.solr.client.solrj.response.LukeResponse;

        $r1 = r0.<org.apache.solr.client.solrj.response.LukeResponse: org.apache.solr.common.util.NamedList indexInfo>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.solr.client.solrj.response.LukeResponse: org.apache.solr.common.util.NamedList indexInfo>;

        $r3 = virtualinvoke $r2.<org.apache.solr.common.util.NamedList: java.lang.Object get(java.lang.String)>("numDocs");

        $r4 = (java.lang.Integer) $r3;

        return $r4;
    }

    public java.lang.Integer getMaxDoc()
    {
        java.lang.Object $r3;
        java.lang.Integer $r4;
        org.apache.solr.client.solrj.response.LukeResponse r0;
        org.apache.solr.common.util.NamedList $r1, $r2;

        r0 := @this: org.apache.solr.client.solrj.response.LukeResponse;

        $r1 = r0.<org.apache.solr.client.solrj.response.LukeResponse: org.apache.solr.common.util.NamedList indexInfo>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.solr.client.solrj.response.LukeResponse: org.apache.solr.common.util.NamedList indexInfo>;

        $r3 = virtualinvoke $r2.<org.apache.solr.common.util.NamedList: java.lang.Object get(java.lang.String)>("maxDoc");

        $r4 = (java.lang.Integer) $r3;

        return $r4;
    }

    public java.lang.Integer getNumTerms()
    {
        java.lang.Object $r3;
        java.lang.Integer $r4;
        org.apache.solr.client.solrj.response.LukeResponse r0;
        org.apache.solr.common.util.NamedList $r1, $r2;

        r0 := @this: org.apache.solr.client.solrj.response.LukeResponse;

        $r1 = r0.<org.apache.solr.client.solrj.response.LukeResponse: org.apache.solr.common.util.NamedList indexInfo>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.solr.client.solrj.response.LukeResponse: org.apache.solr.common.util.NamedList indexInfo>;

        $r3 = virtualinvoke $r2.<org.apache.solr.common.util.NamedList: java.lang.Object get(java.lang.String)>("numTerms");

        $r4 = (java.lang.Integer) $r3;

        return $r4;
    }

    public java.util.Map getFieldTypeInfo()
    {
        org.apache.solr.client.solrj.response.LukeResponse r0;
        java.util.Map $r1;

        r0 := @this: org.apache.solr.client.solrj.response.LukeResponse;

        $r1 = r0.<org.apache.solr.client.solrj.response.LukeResponse: java.util.Map fieldTypeInfo>;

        return $r1;
    }

    public org.apache.solr.client.solrj.response.LukeResponse$FieldTypeInfo getFieldTypeInfo(java.lang.String)
    {
        org.apache.solr.client.solrj.response.LukeResponse$FieldTypeInfo $r4;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        org.apache.solr.client.solrj.response.LukeResponse r0;

        r0 := @this: org.apache.solr.client.solrj.response.LukeResponse;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.solr.client.solrj.response.LukeResponse: java.util.Map fieldTypeInfo>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.solr.client.solrj.response.LukeResponse$FieldTypeInfo) $r3;

        return $r4;
    }

    public org.apache.solr.common.util.NamedList getIndexInfo()
    {
        org.apache.solr.client.solrj.response.LukeResponse r0;
        org.apache.solr.common.util.NamedList $r1;

        r0 := @this: org.apache.solr.client.solrj.response.LukeResponse;

        $r1 = r0.<org.apache.solr.client.solrj.response.LukeResponse: org.apache.solr.common.util.NamedList indexInfo>;

        return $r1;
    }

    public java.util.Map getFieldInfo()
    {
        org.apache.solr.client.solrj.response.LukeResponse r0;
        java.util.Map $r1;

        r0 := @this: org.apache.solr.client.solrj.response.LukeResponse;

        $r1 = r0.<org.apache.solr.client.solrj.response.LukeResponse: java.util.Map fieldInfo>;

        return $r1;
    }

    public org.apache.solr.client.solrj.response.LukeResponse$FieldInfo getFieldInfo(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        org.apache.solr.client.solrj.response.LukeResponse$FieldInfo $r4;
        org.apache.solr.client.solrj.response.LukeResponse r0;

        r0 := @this: org.apache.solr.client.solrj.response.LukeResponse;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.solr.client.solrj.response.LukeResponse: java.util.Map fieldInfo>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.solr.client.solrj.response.LukeResponse$FieldInfo) $r3;

        return $r4;
    }
}
