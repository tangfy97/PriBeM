class org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$ElementStartGenerator extends org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$RandomMutationComponentGenerator
{
    final org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator this$0;

    void <init>(org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator)
    {
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator r1;
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$ElementStartGenerator r0;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$ElementStartGenerator;

        r1 := @parameter0: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator;

        r0.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$ElementStartGenerator: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator this$0> = r1;

        specialinvoke r0.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$RandomMutationComponentGenerator: void <init>(org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator)>(r1);

        return;
    }

    public int potential()
    {
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$ElementStartGenerator r0;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$ElementStartGenerator;

        return 0;
    }

    org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$RandomizerMutationComponent generate(boolean)
    {
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator $r1, $r2;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters $r3;
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$ElementStartGenerator r0;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$RandomProvider $r4;
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$ElementStartGenerator$1 $r6;
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$ElementStartGenerator$2 $r13;
        org.waveprotocol.wave.model.util.Pair r8;
        org.waveprotocol.wave.model.document.operation.Attributes r12;
        java.util.List $r5;
        java.lang.Object $r7, $r9, $r11;
        java.lang.String r10;
        boolean z0;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$ElementStartGenerator;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$ElementStartGenerator: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator this$0>;

        $r4 = $r1.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$RandomProvider r>;

        $r2 = r0.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$ElementStartGenerator: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator this$0>;

        $r3 = $r2.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters p>;

        $r5 = virtualinvoke $r3.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Parameters: java.util.List getElementTypes()>();

        $r6 = new org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$ElementStartGenerator$1;

        specialinvoke $r6.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$ElementStartGenerator$1: void <init>(org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$ElementStartGenerator,boolean)>(r0, z0);

        $r7 = staticinvoke <org.waveprotocol.wave.model.testing.RandomNindoGenerator: java.lang.Object access$100(org.waveprotocol.wave.model.testing.RandomDocOpGenerator$RandomProvider,java.util.List,org.waveprotocol.wave.model.testing.RandomNindoGenerator$Mapper)>($r4, $r5, $r6);

        r8 = (org.waveprotocol.wave.model.util.Pair) $r7;

        if r8 != null goto label1;

        return null;

     label1:
        $r9 = virtualinvoke r8.<org.waveprotocol.wave.model.util.Pair: java.lang.Object getFirst()>();

        r10 = (java.lang.String) $r9;

        $r11 = virtualinvoke r8.<org.waveprotocol.wave.model.util.Pair: java.lang.Object getSecond()>();

        r12 = (org.waveprotocol.wave.model.document.operation.Attributes) $r11;

        $r13 = new org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$ElementStartGenerator$2;

        specialinvoke $r13.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$ElementStartGenerator$2: void <init>(org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$ElementStartGenerator,java.lang.String,org.waveprotocol.wave.model.document.operation.Attributes)>(r0, r10, r12);

        return $r13;
    }
}
