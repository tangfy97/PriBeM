class org.tukaani.xz.DeltaOutputStream extends org.tukaani.xz.FinishableOutputStream
{
    private static final int FILTER_BUF_SIZE;
    private org.tukaani.xz.FinishableOutputStream out;
    private final org.tukaani.xz.delta.DeltaEncoder delta;
    private final byte[] filterBuf;
    private boolean finished;
    private java.io.IOException exception;
    private final byte[] tempBuf;

    static int getMemoryUsage()
    {
        return 5;
    }

    void <init>(org.tukaani.xz.FinishableOutputStream, org.tukaani.xz.DeltaOptions)
    {
        byte[] $r1, $r2;
        org.tukaani.xz.DeltaOptions r5;
        org.tukaani.xz.delta.DeltaEncoder $r4;
        int $i0;
        org.tukaani.xz.DeltaOutputStream r0;
        org.tukaani.xz.FinishableOutputStream r3;

        r0 := @this: org.tukaani.xz.DeltaOutputStream;

        r3 := @parameter0: org.tukaani.xz.FinishableOutputStream;

        r5 := @parameter1: org.tukaani.xz.DeltaOptions;

        specialinvoke r0.<org.tukaani.xz.FinishableOutputStream: void <init>()>();

        $r1 = newarray (byte)[4096];

        r0.<org.tukaani.xz.DeltaOutputStream: byte[] filterBuf> = $r1;

        r0.<org.tukaani.xz.DeltaOutputStream: boolean finished> = 0;

        r0.<org.tukaani.xz.DeltaOutputStream: java.io.IOException exception> = null;

        $r2 = newarray (byte)[1];

        r0.<org.tukaani.xz.DeltaOutputStream: byte[] tempBuf> = $r2;

        r0.<org.tukaani.xz.DeltaOutputStream: org.tukaani.xz.FinishableOutputStream out> = r3;

        $r4 = new org.tukaani.xz.delta.DeltaEncoder;

        $i0 = virtualinvoke r5.<org.tukaani.xz.DeltaOptions: int getDistance()>();

        specialinvoke $r4.<org.tukaani.xz.delta.DeltaEncoder: void <init>(int)>($i0);

        r0.<org.tukaani.xz.DeltaOutputStream: org.tukaani.xz.delta.DeltaEncoder delta> = $r4;

        return;
    }

    public void write(int) throws java.io.IOException
    {
        byte[] $r1, $r2;
        byte $b1;
        int i0;
        org.tukaani.xz.DeltaOutputStream r0;

        r0 := @this: org.tukaani.xz.DeltaOutputStream;

        i0 := @parameter0: int;

        $r1 = r0.<org.tukaani.xz.DeltaOutputStream: byte[] tempBuf>;

        $b1 = (byte) i0;

        $r1[0] = $b1;

        $r2 = r0.<org.tukaani.xz.DeltaOutputStream: byte[] tempBuf>;

        virtualinvoke r0.<org.tukaani.xz.DeltaOutputStream: void write(byte[],int,int)>($r2, 0, 1);

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        byte[] r0, $r3, $r5, $r7, $r9;
        java.lang.IndexOutOfBoundsException $r15;
        org.tukaani.xz.delta.DeltaEncoder $r4, $r8;
        int $i0, $i1, $i2, i3, i4, $i6;
        org.tukaani.xz.DeltaOutputStream r1;
        boolean $z0;
        java.io.IOException $r2, $r12, $r13;
        org.tukaani.xz.XZIOException $r16;
        org.tukaani.xz.FinishableOutputStream $r6, $r10;

        r1 := @this: org.tukaani.xz.DeltaOutputStream;

        r0 := @parameter0: byte[];

        i3 := @parameter1: int;

        i4 := @parameter2: int;

        if i3 < 0 goto label1;

        if i4 < 0 goto label1;

        $i0 = i3 + i4;

        if $i0 < 0 goto label1;

        $i2 = i3 + i4;

        $i1 = lengthof r0;

        if $i2 <= $i1 goto label2;

     label1:
        $r15 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r15.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r15;

     label2:
        $r2 = r1.<org.tukaani.xz.DeltaOutputStream: java.io.IOException exception>;

        if $r2 == null goto label3;

        $r12 = r1.<org.tukaani.xz.DeltaOutputStream: java.io.IOException exception>;

        throw $r12;

     label3:
        $z0 = r1.<org.tukaani.xz.DeltaOutputStream: boolean finished>;

        if $z0 == 0 goto label4;

        $r16 = new org.tukaani.xz.XZIOException;

        specialinvoke $r16.<org.tukaani.xz.XZIOException: void <init>(java.lang.String)>("Stream finished");

        throw $r16;

     label4:
        if i4 <= 4096 goto label5;

        $r8 = r1.<org.tukaani.xz.DeltaOutputStream: org.tukaani.xz.delta.DeltaEncoder delta>;

        $r7 = r1.<org.tukaani.xz.DeltaOutputStream: byte[] filterBuf>;

        virtualinvoke $r8.<org.tukaani.xz.delta.DeltaEncoder: void encode(byte[],int,int,byte[])>(r0, i3, 4096, $r7);

        $r10 = r1.<org.tukaani.xz.DeltaOutputStream: org.tukaani.xz.FinishableOutputStream out>;

        $r9 = r1.<org.tukaani.xz.DeltaOutputStream: byte[] filterBuf>;

        virtualinvoke $r10.<org.tukaani.xz.FinishableOutputStream: void write(byte[])>($r9);

        i3 = i3 + 4096;

        $i6 = (int) -4096;

        i4 = i4 + $i6;

        goto label4;

     label5:
        $r4 = r1.<org.tukaani.xz.DeltaOutputStream: org.tukaani.xz.delta.DeltaEncoder delta>;

        $r3 = r1.<org.tukaani.xz.DeltaOutputStream: byte[] filterBuf>;

        virtualinvoke $r4.<org.tukaani.xz.delta.DeltaEncoder: void encode(byte[],int,int,byte[])>(r0, i3, i4, $r3);

        $r6 = r1.<org.tukaani.xz.DeltaOutputStream: org.tukaani.xz.FinishableOutputStream out>;

        $r5 = r1.<org.tukaani.xz.DeltaOutputStream: byte[] filterBuf>;

        virtualinvoke $r6.<org.tukaani.xz.FinishableOutputStream: void write(byte[],int,int)>($r5, 0, i4);

     label6:
        goto label8;

     label7:
        $r13 := @caughtexception;

        r1.<org.tukaani.xz.DeltaOutputStream: java.io.IOException exception> = $r13;

        throw $r13;

     label8:
        return;

        catch java.io.IOException from label4 to label6 with label7;
    }

    public void flush() throws java.io.IOException
    {
        org.tukaani.xz.DeltaOutputStream r0;
        java.io.IOException $r1, $r4, $r5;
        org.tukaani.xz.FinishableOutputStream $r2;
        org.tukaani.xz.XZIOException $r3;
        boolean $z0;

        r0 := @this: org.tukaani.xz.DeltaOutputStream;

        $r1 = r0.<org.tukaani.xz.DeltaOutputStream: java.io.IOException exception>;

        if $r1 == null goto label1;

        $r4 = r0.<org.tukaani.xz.DeltaOutputStream: java.io.IOException exception>;

        throw $r4;

     label1:
        $z0 = r0.<org.tukaani.xz.DeltaOutputStream: boolean finished>;

        if $z0 == 0 goto label2;

        $r3 = new org.tukaani.xz.XZIOException;

        specialinvoke $r3.<org.tukaani.xz.XZIOException: void <init>(java.lang.String)>("Stream finished or closed");

        throw $r3;

     label2:
        $r2 = r0.<org.tukaani.xz.DeltaOutputStream: org.tukaani.xz.FinishableOutputStream out>;

        virtualinvoke $r2.<org.tukaani.xz.FinishableOutputStream: void flush()>();

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        r0.<org.tukaani.xz.DeltaOutputStream: java.io.IOException exception> = $r5;

        throw $r5;

     label5:
        return;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public void finish() throws java.io.IOException
    {
        org.tukaani.xz.DeltaOutputStream r0;
        java.io.IOException $r1, $r3, $r4;
        org.tukaani.xz.FinishableOutputStream $r2;
        boolean $z0;

        r0 := @this: org.tukaani.xz.DeltaOutputStream;

        $z0 = r0.<org.tukaani.xz.DeltaOutputStream: boolean finished>;

        if $z0 != 0 goto label5;

        $r1 = r0.<org.tukaani.xz.DeltaOutputStream: java.io.IOException exception>;

        if $r1 == null goto label1;

        $r3 = r0.<org.tukaani.xz.DeltaOutputStream: java.io.IOException exception>;

        throw $r3;

     label1:
        $r2 = r0.<org.tukaani.xz.DeltaOutputStream: org.tukaani.xz.FinishableOutputStream out>;

        virtualinvoke $r2.<org.tukaani.xz.FinishableOutputStream: void finish()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r0.<org.tukaani.xz.DeltaOutputStream: java.io.IOException exception> = $r4;

        throw $r4;

     label4:
        r0.<org.tukaani.xz.DeltaOutputStream: boolean finished> = 1;

     label5:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void close() throws java.io.IOException
    {
        org.tukaani.xz.DeltaOutputStream r0;
        org.tukaani.xz.FinishableOutputStream $r1, $r3;
        java.io.IOException $r2, $r4, $r5, $r6;

        r0 := @this: org.tukaani.xz.DeltaOutputStream;

        $r1 = r0.<org.tukaani.xz.DeltaOutputStream: org.tukaani.xz.FinishableOutputStream out>;

        if $r1 == null goto label5;

     label1:
        $r3 = r0.<org.tukaani.xz.DeltaOutputStream: org.tukaani.xz.FinishableOutputStream out>;

        virtualinvoke $r3.<org.tukaani.xz.FinishableOutputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = r0.<org.tukaani.xz.DeltaOutputStream: java.io.IOException exception>;

        if $r5 != null goto label4;

        r0.<org.tukaani.xz.DeltaOutputStream: java.io.IOException exception> = $r4;

     label4:
        r0.<org.tukaani.xz.DeltaOutputStream: org.tukaani.xz.FinishableOutputStream out> = null;

     label5:
        $r6 = r0.<org.tukaani.xz.DeltaOutputStream: java.io.IOException exception>;

        if $r6 == null goto label6;

        $r2 = r0.<org.tukaani.xz.DeltaOutputStream: java.io.IOException exception>;

        throw $r2;

     label6:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <org.tukaani.xz.DeltaOutputStream: int FILTER_BUF_SIZE> = 4096;

        return;
    }
}
