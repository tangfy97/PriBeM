class com.mycila.inject.internal.guava.collect.Lists$TwoPlusArrayList extends java.util.AbstractList implements java.io.Serializable, java.util.RandomAccess
{
    final java.lang.Object first;
    final java.lang.Object second;
    final java.lang.Object[] rest;
    private static final long serialVersionUID;

    void <init>(java.lang.Object, java.lang.Object, java.lang.Object[])
    {
        java.lang.Object[] r3, $r5;
        java.lang.Object r1, r2, $r4;
        com.mycila.inject.internal.guava.collect.Lists$TwoPlusArrayList r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Lists$TwoPlusArrayList;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object[];

        specialinvoke r0.<java.util.AbstractList: void <init>()>();

        r0.<com.mycila.inject.internal.guava.collect.Lists$TwoPlusArrayList: java.lang.Object first> = r1;

        r0.<com.mycila.inject.internal.guava.collect.Lists$TwoPlusArrayList: java.lang.Object second> = r2;

        $r4 = staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r5 = (java.lang.Object[]) $r4;

        r0.<com.mycila.inject.internal.guava.collect.Lists$TwoPlusArrayList: java.lang.Object[] rest> = $r5;

        return;
    }

    public int size()
    {
        java.lang.Object[] $r1;
        int $i0, $i1;
        com.mycila.inject.internal.guava.collect.Lists$TwoPlusArrayList r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Lists$TwoPlusArrayList;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.Lists$TwoPlusArrayList: java.lang.Object[] rest>;

        $i0 = lengthof $r1;

        $i1 = $i0 + 2;

        return $i1;
    }

    public java.lang.Object get(int)
    {
        java.lang.Object[] $r3;
        int i0, $i1, $i2;
        java.lang.Object $r1, $r2, $r4;
        com.mycila.inject.internal.guava.collect.Lists$TwoPlusArrayList r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.Lists$TwoPlusArrayList;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label3;
        };

     label1:
        $r2 = r0.<com.mycila.inject.internal.guava.collect.Lists$TwoPlusArrayList: java.lang.Object first>;

        return $r2;

     label2:
        $r1 = r0.<com.mycila.inject.internal.guava.collect.Lists$TwoPlusArrayList: java.lang.Object second>;

        return $r1;

     label3:
        $i1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.Lists$TwoPlusArrayList: int size()>();

        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: int checkElementIndex(int,int)>(i0, $i1);

        $r3 = r0.<com.mycila.inject.internal.guava.collect.Lists$TwoPlusArrayList: java.lang.Object[] rest>;

        $i2 = i0 - 2;

        $r4 = $r3[$i2];

        return $r4;
    }

    public static void <clinit>()
    {
        <com.mycila.inject.internal.guava.collect.Lists$TwoPlusArrayList: long serialVersionUID> = 0L;

        return;
    }
}
