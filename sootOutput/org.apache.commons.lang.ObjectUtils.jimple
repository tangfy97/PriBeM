public class org.apache.commons.lang.ObjectUtils extends java.lang.Object
{
    public static final org.apache.commons.lang.ObjectUtils$Null NULL;

    public void <init>()
    {
        org.apache.commons.lang.ObjectUtils r0;

        r0 := @this: org.apache.commons.lang.ObjectUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Object defaultIfNull(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1, $r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 == null goto label1;

        $r2 = r0;

        goto label2;

     label1:
        $r2 = r1;

     label2:
        return $r2;
    }

    public static boolean equals(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r0 == null goto label2;

        if r1 != null goto label3;

     label2:
        return 0;

     label3:
        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    public static int hashCode(java.lang.Object)
    {
        int $i0;
        java.lang.Object r0;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

     label2:
        return $i0;
    }

    public static java.lang.String identityToString(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.String $r2;
        java.lang.StringBuffer $r1;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        staticinvoke <org.apache.commons.lang.ObjectUtils: void identityToString(java.lang.StringBuffer,java.lang.Object)>($r1, r0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static void identityToString(java.lang.StringBuffer, java.lang.Object)
    {
        java.lang.NullPointerException $r7;
        java.lang.StringBuffer r1, $r4, $r5;
        int $i0;
        java.lang.Object r0;
        java.lang.Class $r2;
        java.lang.String $r3, $r6;

        r1 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot get the toString of a null identity");

        throw $r7;

     label1:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(64);

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        return;
    }

    public static java.lang.StringBuffer appendIdentityToString(java.lang.StringBuffer, java.lang.Object)
    {
        java.lang.StringBuffer $r3, $r4, $r6, $r7, r8;
        int $i0;
        java.lang.Object r0;
        java.lang.Class $r1;
        java.lang.String $r2, $r5;

        r8 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        return null;

     label1:
        if r8 != null goto label2;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        r8 = $r7;

     label2:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(64);

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        return $r6;
    }

    public static java.lang.String toString(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $r1 = "";

        goto label2;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

     label2:
        return $r1;
    }

    public static java.lang.String toString(java.lang.Object, java.lang.String)
    {
        java.lang.Object r0;
        java.lang.String r1, $r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r2 = r1;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

     label2:
        return $r2;
    }

    public static java.lang.Object min(java.lang.Comparable, java.lang.Comparable)
    {
        int $i0;
        java.lang.Comparable r0, r1, $r2, $r3;

        r0 := @parameter0: java.lang.Comparable;

        r1 := @parameter1: java.lang.Comparable;

        if r0 == null goto label3;

        if r1 == null goto label3;

        $i0 = interfaceinvoke r0.<java.lang.Comparable: int compareTo(java.lang.Object)>(r1);

        if $i0 >= 1 goto label1;

        $r2 = r0;

        goto label2;

     label1:
        $r2 = r1;

     label2:
        return $r2;

     label3:
        if r0 == null goto label4;

        $r3 = r0;

        goto label5;

     label4:
        $r3 = r1;

     label5:
        return $r3;
    }

    public static java.lang.Object max(java.lang.Comparable, java.lang.Comparable)
    {
        int $i0;
        java.lang.Comparable r0, r1, $r2, $r3;

        r0 := @parameter0: java.lang.Comparable;

        r1 := @parameter1: java.lang.Comparable;

        if r0 == null goto label3;

        if r1 == null goto label3;

        $i0 = interfaceinvoke r0.<java.lang.Comparable: int compareTo(java.lang.Object)>(r1);

        if $i0 < 0 goto label1;

        $r2 = r0;

        goto label2;

     label1:
        $r2 = r1;

     label2:
        return $r2;

     label3:
        if r0 == null goto label4;

        $r3 = r0;

        goto label5;

     label4:
        $r3 = r1;

     label5:
        return $r3;
    }

    static void <clinit>()
    {
        org.apache.commons.lang.ObjectUtils$Null $r0;

        $r0 = new org.apache.commons.lang.ObjectUtils$Null;

        specialinvoke $r0.<org.apache.commons.lang.ObjectUtils$Null: void <init>()>();

        <org.apache.commons.lang.ObjectUtils: org.apache.commons.lang.ObjectUtils$Null NULL> = $r0;

        return;
    }
}
