public class org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory extends java.lang.Object implements org.eclipse.jdt.internal.compiler.IProblemFactory
{
    public org.eclipse.jdt.internal.compiler.util.HashtableOfInt messageTemplates;
    private java.util.Locale locale;
    private static org.eclipse.jdt.internal.compiler.util.HashtableOfInt DEFAULT_LOCALE_TEMPLATES;
    private static final char[] DOUBLE_QUOTES;
    private static final char[] SINGLE_QUOTE;
    private static final char[] FIRST_ARGUMENT;

    static void <clinit>()
    {
        char[] $r1, $r3, $r5;
        java.lang.String $r0, $r2, $r4;

        $r0 = "\'\'";

        $r1 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory: char[] DOUBLE_QUOTES> = $r1;

        $r2 = "\'";

        $r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory: char[] SINGLE_QUOTE> = $r3;

        $r4 = "{0}";

        $r5 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory: char[] FIRST_ARGUMENT> = $r5;

        return;
    }

    public void <init>()
    {
        org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory r0;
        java.util.Locale $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory;

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory: void <init>(java.util.Locale)>($r1);

        return;
    }

    public void <init>(java.util.Locale)
    {
        org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory r0;
        java.util.Locale r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory;

        r1 := @parameter0: java.util.Locale;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory: void setLocale(java.util.Locale)>(r1);

        return;
    }

    public org.eclipse.jdt.core.compiler.CategorizedProblem createProblem(char[], int, java.lang.String[], java.lang.String[], int, int, int, int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.DefaultProblem $r0;
        java.lang.String[] r3, r5;
        org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory r2;
        int i0, i1, i2, i3, i4, i5;
        char[] r1;
        java.lang.String $r4;

        r2 := @this: org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        r5 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.lang.String[];

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        i5 := @parameter8: int;

        $r0 = new org.eclipse.jdt.internal.compiler.problem.DefaultProblem;

        $r4 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory: java.lang.String getLocalizedMessage(int,java.lang.String[])>(i0, r3);

        specialinvoke $r0.<org.eclipse.jdt.internal.compiler.problem.DefaultProblem: void <init>(char[],java.lang.String,int,java.lang.String[],int,int,int,int,int)>(r1, $r4, i0, r5, i1, i2, i3, i4, i5);

        return $r0;
    }

    public org.eclipse.jdt.core.compiler.CategorizedProblem createProblem(char[], int, java.lang.String[], int, java.lang.String[], int, int, int, int, int)
    {
        org.eclipse.jdt.internal.compiler.problem.DefaultProblem $r0;
        java.lang.String[] r3, r5;
        org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory r2;
        int i0, i1, i2, i3, i4, i5, i6;
        char[] r1;
        java.lang.String $r4;

        r2 := @this: org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        r5 := @parameter2: java.lang.String[];

        i1 := @parameter3: int;

        r3 := @parameter4: java.lang.String[];

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        i5 := @parameter8: int;

        i6 := @parameter9: int;

        $r0 = new org.eclipse.jdt.internal.compiler.problem.DefaultProblem;

        $r4 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory: java.lang.String getLocalizedMessage(int,int,java.lang.String[])>(i0, i1, r3);

        specialinvoke $r0.<org.eclipse.jdt.internal.compiler.problem.DefaultProblem: void <init>(char[],java.lang.String,int,java.lang.String[],int,int,int,int,int)>(r1, $r4, i0, r5, i2, i3, i4, i5, i6);

        return $r0;
    }

    private static final int keyFromID(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 + 1;

        return $i1;
    }

    public java.util.Locale getLocale()
    {
        org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory r0;
        java.util.Locale $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory: java.util.Locale locale>;

        return $r1;
    }

    public void setLocale(java.util.Locale)
    {
        org.eclipse.jdt.internal.compiler.util.HashtableOfInt $r4, $r5, $r6, $r7;
        org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory r1;
        java.util.Locale r0, $r2, $r3;
        boolean $z0;

        r1 := @this: org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory;

        r0 := @parameter0: java.util.Locale;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory: java.util.Locale locale>;

        if r0 != $r2 goto label1;

        return;

     label1:
        r1.<org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory: java.util.Locale locale> = r0;

        $r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $z0 = virtualinvoke $r3.<java.util.Locale: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label3;

        $r5 = <org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory: org.eclipse.jdt.internal.compiler.util.HashtableOfInt DEFAULT_LOCALE_TEMPLATES>;

        if $r5 != null goto label2;

        $r7 = staticinvoke <org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory: org.eclipse.jdt.internal.compiler.util.HashtableOfInt loadMessageTemplates(java.util.Locale)>(r0);

        <org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory: org.eclipse.jdt.internal.compiler.util.HashtableOfInt DEFAULT_LOCALE_TEMPLATES> = $r7;

     label2:
        $r6 = <org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory: org.eclipse.jdt.internal.compiler.util.HashtableOfInt DEFAULT_LOCALE_TEMPLATES>;

        r1.<org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory: org.eclipse.jdt.internal.compiler.util.HashtableOfInt messageTemplates> = $r6;

        goto label4;

     label3:
        $r4 = staticinvoke <org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory: org.eclipse.jdt.internal.compiler.util.HashtableOfInt loadMessageTemplates(java.util.Locale)>(r0);

        r1.<org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory: org.eclipse.jdt.internal.compiler.util.HashtableOfInt messageTemplates> = $r4;

     label4:
        return;
    }

    public final java.lang.String getLocalizedMessage(int, java.lang.String[])
    {
        org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory r0;
        int i0;
        java.lang.String[] r1;
        java.lang.String $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String[];

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory: java.lang.String getLocalizedMessage(int,int,java.lang.String[])>(i0, 0, r1);

        return $r2;
    }

    public final java.lang.String getLocalizedMessage(int, int, java.lang.String[])
    {
        org.eclipse.jdt.internal.compiler.util.HashtableOfInt $r1, $r15, $r19;
        java.lang.StringBuffer $r24, $r25, $r28, $r29, $r33, $r34, $r36, $r37, $r39, $r40, r45, $r46, $r47, $r49, $r50, $r51;
        java.lang.String r3, $r10, $r12, $r17, $r26, $r30, $r38, $r41, r44, $r48, $r52, $r53, $r54;
        java.lang.NumberFormatException $r42;
        java.lang.ArrayIndexOutOfBoundsException $r31;
        org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory r0;
        char[] $r4, $r5, $r6, $r7, $r21, $r22, r43;
        java.lang.String[] r8;
        int i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, i26, i27, $i28, $i30, $i32;
        java.lang.Object $r2, $r16, $r20;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory;

        i0 := @parameter0: int;

        i3 := @parameter1: int;

        r8 := @parameter2: java.lang.String[];

        $r1 = r0.<org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory: org.eclipse.jdt.internal.compiler.util.HashtableOfInt messageTemplates>;

        $i1 = i0 & 16777215;

        $i2 = staticinvoke <org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory: int keyFromID(int)>($i1);

        $r2 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: java.lang.Object get(int)>($i2);

        r3 = (java.lang.String) $r2;

        if r3 != null goto label01;

        $r46 = new java.lang.StringBuffer;

        specialinvoke $r46.<java.lang.StringBuffer: void <init>(java.lang.String)>("Unable to retrieve the error message for problem id: ");

        $i22 = i0 & 16777215;

        $r28 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i22);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(". Check compiler resources.");

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r30;

     label01:
        $r4 = virtualinvoke r3.<java.lang.String: char[] toCharArray()>();

        r43 = $r4;

        if i3 == 0 goto label03;

        $r19 = r0.<org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory: org.eclipse.jdt.internal.compiler.util.HashtableOfInt messageTemplates>;

        $i21 = staticinvoke <org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory: int keyFromID(int)>(i3);

        $r20 = virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: java.lang.Object get(int)>($i21);

        r44 = (java.lang.String) $r20;

        if r44 != null goto label02;

        $r47 = new java.lang.StringBuffer;

        specialinvoke $r47.<java.lang.StringBuffer: void <init>(java.lang.String)>("Unable to retrieve the error message elaboration for elaboration id: ");

        $r24 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i3);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(". Check compiler resources.");

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r26;

     label02:
        $r21 = <org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory: char[] FIRST_ARGUMENT>;

        $r22 = virtualinvoke r44.<java.lang.String: char[] toCharArray()>();

        r43 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] replace(char[],char[],char[])>($r4, $r21, $r22);

     label03:
        $r6 = <org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory: char[] DOUBLE_QUOTES>;

        $r5 = <org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory: char[] SINGLE_QUOTE>;

        $r7 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] replace(char[],char[],char[])>(r43, $r6, $r5);

        if r8 != null goto label04;

        $r48 = new java.lang.String;

        specialinvoke $r48.<java.lang.String: void <init>(char[])>($r7);

        return $r48;

     label04:
        i26 = lengthof $r7;

        i27 = 0;

        r45 = null;

        $i4 = i0 & -2147483648;

        if $i4 == 0 goto label05;

        $r49 = new java.lang.StringBuffer;

        $i18 = 10 + i26;

        $i16 = lengthof r8;

        $i17 = $i16 * 20;

        $i19 = $i18 + $i17;

        specialinvoke $r49.<java.lang.StringBuffer: void <init>(int)>($i19);

        r45 = $r49;

        $r15 = r0.<org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory: org.eclipse.jdt.internal.compiler.util.HashtableOfInt messageTemplates>;

        $i20 = staticinvoke <org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory: int keyFromID(int)>(514);

        $r16 = virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: java.lang.Object get(int)>($i20);

        $r17 = (java.lang.String) $r16;

        virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

     label05:
        $i28 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int indexOf(char,char[],int)>(123, $r7, i27);

        $i30 = (int) -1;

        if $i28 <= $i30 goto label13;

        if r45 != null goto label06;

        $r50 = new java.lang.StringBuffer;

        $i13 = lengthof r8;

        $i14 = $i13 * 20;

        $i15 = i26 + $i14;

        specialinvoke $r50.<java.lang.StringBuffer: void <init>(int)>($i15);

        r45 = $r50;

     label06:
        $i6 = $i28 - i27;

        virtualinvoke r45.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>($r7, i27, $i6);

        $i7 = $i28 + 1;

        $i8 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int indexOf(char,char[],int)>(125, $r7, $i7);

        $i32 = (int) -1;

        if $i8 <= $i32 goto label12;

     label07:
        $i11 = $i28 + 1;

        $i9 = $i8 - $i28;

        $i10 = $i9 - 1;

        $i12 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: int parseInt(char[],int,int)>($r7, $i11, $i10);

        $r12 = r8[$i12];

        virtualinvoke r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

     label08:
        goto label11;

     label09:
        $r42 := @caughtexception;

        $i25 = $i28 + 1;

        $i24 = $i8 - $i28;

        virtualinvoke r45.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>($r7, $i25, $i24);

        goto label11;

     label10:
        $r31 := @caughtexception;

        $r51 = new java.lang.StringBuffer;

        specialinvoke $r51.<java.lang.StringBuffer: void <init>(java.lang.String)>("Cannot bind message for problem (id: ");

        $i23 = i0 & 16777215;

        $r33 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i23);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") \"");

        $r52 = new java.lang.String;

        specialinvoke $r52.<java.lang.String: void <init>(char[])>($r7);

        $r36 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r52);

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" with arguments: {");

        $r38 = staticinvoke <org.eclipse.jdt.internal.compiler.util.Util: java.lang.String toString(java.lang.Object[])>(r8);

        $r39 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}");

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r41;

     label11:
        i27 = $i8 + 1;

        goto label05;

     label12:
        virtualinvoke r45.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>($r7, $i28, i26);

        goto label15;

     label13:
        if r45 != null goto label14;

        $r53 = new java.lang.String;

        specialinvoke $r53.<java.lang.String: void <init>(char[])>($r7);

        return $r53;

     label14:
        $i5 = i26 - i27;

        virtualinvoke r45.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>($r7, i27, $i5);

     label15:
        $r54 = new java.lang.String;

        $r10 = virtualinvoke r45.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r54.<java.lang.String: void <init>(java.lang.String)>($r10);

        return $r54;

        catch java.lang.NumberFormatException from label07 to label08 with label09;
        catch java.lang.ArrayIndexOutOfBoundsException from label07 to label08 with label10;
    }

    public final java.lang.String localizedMessage(org.eclipse.jdt.core.compiler.CategorizedProblem)
    {
        org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory r0;
        org.eclipse.jdt.core.compiler.CategorizedProblem r1;
        int $i0;
        java.lang.String[] $r2;
        java.lang.String $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory;

        r1 := @parameter0: org.eclipse.jdt.core.compiler.CategorizedProblem;

        $i0 = virtualinvoke r1.<org.eclipse.jdt.core.compiler.CategorizedProblem: int getID()>();

        $r2 = virtualinvoke r1.<org.eclipse.jdt.core.compiler.CategorizedProblem: java.lang.String[] getArguments()>();

        $r3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory: java.lang.String getLocalizedMessage(int,java.lang.String[])>($i0, $r2);

        return $r3;
    }

    public static org.eclipse.jdt.internal.compiler.util.HashtableOfInt loadMessageTemplates(java.util.Locale)
    {
        java.util.Enumeration $r4;
        java.util.ResourceBundle $r2;
        java.util.Locale r1;
        java.lang.StringBuffer $r11, $r14, $r15, $r16;
        int $i0, $i1;
        java.lang.String r0, r6, $r7, $r13, $r17;
        boolean $z0;
        java.io.PrintStream $r12;
        java.util.MissingResourceException $r8, $r10;
        org.eclipse.jdt.internal.compiler.util.HashtableOfInt $r3;
        java.lang.NumberFormatException $r9;
        java.lang.Object $r5;

        r1 := @parameter0: java.util.Locale;

        r0 = "org.eclipse.jdt.internal.compiler.problem.messages";

     label01:
        $r2 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)>("org.eclipse.jdt.internal.compiler.problem.messages", r1);

     label02:
        goto label04;

     label03:
        $r10 := @caughtexception;

        $r12 = <java.lang.System: java.io.PrintStream out>;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>(java.lang.String)>("Missing resource : ");

        $r13 = virtualinvoke r0.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        $r14 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".properties for locale ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r17);

        throw $r10;

     label04:
        $r3 = new org.eclipse.jdt.internal.compiler.util.HashtableOfInt;

        specialinvoke $r3.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: void <init>(int)>(700);

        $r4 = virtualinvoke $r2.<java.util.ResourceBundle: java.util.Enumeration getKeys()>();

        goto label10;

     label05:
        $r5 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        r6 = (java.lang.String) $r5;

     label06:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r6);

        $i1 = staticinvoke <org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory: int keyFromID(int)>($i0);

        $r7 = virtualinvoke $r2.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(r6);

        virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.util.HashtableOfInt: java.lang.Object put(int,java.lang.Object)>($i1, $r7);

     label07:
        goto label10;

     label08:
        $r9 := @caughtexception;

        goto label10;

     label09:
        $r8 := @caughtexception;

     label10:
        $z0 = interfaceinvoke $r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 != 0 goto label05;

        return $r3;

        catch java.util.MissingResourceException from label01 to label02 with label03;
        catch java.lang.NumberFormatException from label06 to label07 with label08;
        catch java.util.MissingResourceException from label06 to label07 with label09;
    }
}
