public class org.mozilla.javascript.NativeJavaMethod extends org.mozilla.javascript.BaseFunction
{
    static final long serialVersionUID;
    private static final int PREFERENCE_EQUAL;
    private static final int PREFERENCE_FIRST_ARG;
    private static final int PREFERENCE_SECOND_ARG;
    private static final int PREFERENCE_AMBIGUOUS;
    private static final boolean debug;
    org.mozilla.javascript.MemberBox[] methods;
    private java.lang.String functionName;

    void <init>(org.mozilla.javascript.MemberBox[])
    {
        org.mozilla.javascript.MemberBox[] r1;
        org.mozilla.javascript.MemberBox $r2;
        org.mozilla.javascript.NativeJavaMethod r0;
        java.lang.String $r3;

        r0 := @this: org.mozilla.javascript.NativeJavaMethod;

        r1 := @parameter0: org.mozilla.javascript.MemberBox[];

        specialinvoke r0.<org.mozilla.javascript.BaseFunction: void <init>()>();

        $r2 = r1[0];

        $r3 = virtualinvoke $r2.<org.mozilla.javascript.MemberBox: java.lang.String getName()>();

        r0.<org.mozilla.javascript.NativeJavaMethod: java.lang.String functionName> = $r3;

        r0.<org.mozilla.javascript.NativeJavaMethod: org.mozilla.javascript.MemberBox[] methods> = r1;

        return;
    }

    void <init>(org.mozilla.javascript.MemberBox, java.lang.String)
    {
        org.mozilla.javascript.MemberBox[] $r2;
        org.mozilla.javascript.MemberBox r3;
        org.mozilla.javascript.NativeJavaMethod r0;
        java.lang.String r1;

        r0 := @this: org.mozilla.javascript.NativeJavaMethod;

        r3 := @parameter0: org.mozilla.javascript.MemberBox;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<org.mozilla.javascript.BaseFunction: void <init>()>();

        r0.<org.mozilla.javascript.NativeJavaMethod: java.lang.String functionName> = r1;

        $r2 = newarray (org.mozilla.javascript.MemberBox)[1];

        $r2[0] = r3;

        r0.<org.mozilla.javascript.NativeJavaMethod: org.mozilla.javascript.MemberBox[] methods> = $r2;

        return;
    }

    public void <init>(java.lang.reflect.Method, java.lang.String)
    {
        org.mozilla.javascript.MemberBox $r1;
        org.mozilla.javascript.NativeJavaMethod r0;
        java.lang.String r3;
        java.lang.reflect.Method r2;

        r0 := @this: org.mozilla.javascript.NativeJavaMethod;

        r2 := @parameter0: java.lang.reflect.Method;

        r3 := @parameter1: java.lang.String;

        $r1 = new org.mozilla.javascript.MemberBox;

        specialinvoke $r1.<org.mozilla.javascript.MemberBox: void <init>(java.lang.reflect.Method)>(r2);

        specialinvoke r0.<org.mozilla.javascript.NativeJavaMethod: void <init>(org.mozilla.javascript.MemberBox,java.lang.String)>($r1, r3);

        return;
    }

    public java.lang.String getFunctionName()
    {
        org.mozilla.javascript.NativeJavaMethod r0;
        java.lang.String $r1;

        r0 := @this: org.mozilla.javascript.NativeJavaMethod;

        $r1 = r0.<org.mozilla.javascript.NativeJavaMethod: java.lang.String functionName>;

        return $r1;
    }

    static java.lang.String scriptSignature(java.lang.Object[])
    {
        java.lang.Object[] r1;
        java.lang.StringBuffer $r0;
        int $i0, i1;
        java.lang.String $r2, r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.mozilla.javascript.Wrapper $r5;
        java.lang.Object r3, $r6;
        java.lang.Class $r4, $r7;

        r1 := @parameter0: java.lang.Object[];

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        i1 = 0;

     label01:
        $i0 = lengthof r1;

        if i1 == $i0 goto label12;

        r3 = r1[i1];

        if r3 != null goto label02;

        r8 = "null";

        goto label10;

     label02:
        $z0 = r3 instanceof java.lang.Boolean;

        if $z0 == 0 goto label03;

        r8 = "boolean";

        goto label10;

     label03:
        $z1 = r3 instanceof java.lang.String;

        if $z1 == 0 goto label04;

        r8 = "string";

        goto label10;

     label04:
        $z2 = r3 instanceof java.lang.Number;

        if $z2 == 0 goto label05;

        r8 = "number";

        goto label10;

     label05:
        $z3 = r3 instanceof org.mozilla.javascript.Scriptable;

        if $z3 == 0 goto label09;

        $z4 = r3 instanceof org.mozilla.javascript.Undefined;

        if $z4 == 0 goto label06;

        r8 = "undefined";

        goto label10;

     label06:
        $z5 = r3 instanceof org.mozilla.javascript.Wrapper;

        if $z5 == 0 goto label07;

        $r5 = (org.mozilla.javascript.Wrapper) r3;

        $r6 = interfaceinvoke $r5.<org.mozilla.javascript.Wrapper: java.lang.Object unwrap()>();

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        goto label10;

     label07:
        $z6 = r3 instanceof org.mozilla.javascript.Function;

        if $z6 == 0 goto label08;

        r8 = "function";

        goto label10;

     label08:
        r8 = "object";

        goto label10;

     label09:
        $r4 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        r8 = staticinvoke <org.mozilla.javascript.JavaMembers: java.lang.String javaSignature(java.lang.Class)>($r4);

     label10:
        if i1 == 0 goto label11;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

     label11:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r8);

        i1 = i1 + 1;

        goto label01;

     label12:
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    java.lang.String decompile(int, int)
    {
        org.mozilla.javascript.NativeJavaMethod r1;
        java.lang.StringBuffer $r0;
        int i0, $i1, i2;
        java.lang.String $r2, $r3, $r4, $r5;
        boolean z0, $z2, $z3;

        r1 := @this: org.mozilla.javascript.NativeJavaMethod;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $i1 = i0 & 1;

        if 0 == $i1 goto label1;

        $z3 = 1;

        $z2 = 1;

        goto label2;

     label1:
        $z3 = 0;

        $z2 = 0;

     label2:
        z0 = $z2;

        if $z3 != 0 goto label3;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("function ");

        $r4 = virtualinvoke r1.<org.mozilla.javascript.NativeJavaMethod: java.lang.String getFunctionName()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("() {");

     label3:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/*\n");

        $r2 = virtualinvoke r1.<org.mozilla.javascript.NativeJavaMethod: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        if z0 == 0 goto label4;

        $r5 = "*/\n";

        goto label5;

     label4:
        $r5 = "*/}\n";

     label5:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public java.lang.String toString()
    {
        org.mozilla.javascript.MemberBox $r5, $r11;
        org.mozilla.javascript.NativeJavaMethod r1;
        org.mozilla.javascript.MemberBox[] $r2, $r4, $r10;
        java.lang.StringBuffer $r0;
        int i0, i1;
        java.lang.String $r3, $r8, $r9, $r13;
        java.lang.reflect.Method $r6;
        java.lang.Class[] $r12;
        java.lang.Class $r7;

        r1 := @this: org.mozilla.javascript.NativeJavaMethod;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        i1 = 0;

        $r2 = r1.<org.mozilla.javascript.NativeJavaMethod: org.mozilla.javascript.MemberBox[] methods>;

        i0 = lengthof $r2;

     label1:
        if i1 == i0 goto label2;

        $r4 = r1.<org.mozilla.javascript.NativeJavaMethod: org.mozilla.javascript.MemberBox[] methods>;

        $r5 = $r4[i1];

        $r6 = virtualinvoke $r5.<org.mozilla.javascript.MemberBox: java.lang.reflect.Method method()>();

        $r7 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r8 = staticinvoke <org.mozilla.javascript.JavaMembers: java.lang.String javaSignature(java.lang.Class)>($r7);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r9 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.String getName()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r10 = r1.<org.mozilla.javascript.NativeJavaMethod: org.mozilla.javascript.MemberBox[] methods>;

        $r11 = $r10[i1];

        $r12 = $r11.<org.mozilla.javascript.MemberBox: java.lang.Class[] argTypes>;

        $r13 = staticinvoke <org.mozilla.javascript.JavaMembers: java.lang.String liveConnectSignature(java.lang.Class[])>($r12);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public java.lang.Object call(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        java.lang.reflect.Method $r11, $r26;
        boolean $z0, $z1, $z2;
        org.mozilla.javascript.Wrapper $r8;
        org.mozilla.javascript.Scriptable r6, r14, r46;
        org.mozilla.javascript.MemberBox $r25, r42;
        java.lang.Object[] r5, r41;
        org.mozilla.javascript.NativeJavaMethod r0;
        org.mozilla.javascript.MemberBox[] $r1, $r3, $r4, $r24;
        java.lang.StringBuffer $r28, $r30, $r31, $r33, $r34, $r36, $r37;
        int $i0, $i1, $i2, i3;
        java.lang.String $r17, $r18, $r19, $r29, $r32, $r35, $r38;
        org.mozilla.javascript.Context r2;
        org.mozilla.javascript.EvaluatorException $r20, $r39;
        java.lang.Class[] r43;
        java.lang.RuntimeException $r40;
        org.mozilla.javascript.WrapFactory $r13;
        java.lang.Class $r7, $r12, $r16, $r21, $r27;
        java.lang.Object $r9, $r10, $r15, $r22, $r23, r44, r45, r47;

        r0 := @this: org.mozilla.javascript.NativeJavaMethod;

        r2 := @parameter0: org.mozilla.javascript.Context;

        r14 := @parameter1: org.mozilla.javascript.Scriptable;

        r6 := @parameter2: org.mozilla.javascript.Scriptable;

        r41 := @parameter3: java.lang.Object[];

        $r1 = r0.<org.mozilla.javascript.NativeJavaMethod: org.mozilla.javascript.MemberBox[] methods>;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label01;

        $r40 = new java.lang.RuntimeException;

        specialinvoke $r40.<java.lang.RuntimeException: void <init>(java.lang.String)>("No methods defined for call");

        throw $r40;

     label01:
        $r3 = r0.<org.mozilla.javascript.NativeJavaMethod: org.mozilla.javascript.MemberBox[] methods>;

        $i1 = staticinvoke <org.mozilla.javascript.NativeJavaMethod: int findFunction(org.mozilla.javascript.Context,org.mozilla.javascript.MemberBox[],java.lang.Object[])>(r2, $r3, r41);

        if $i1 >= 0 goto label02;

        $r24 = r0.<org.mozilla.javascript.NativeJavaMethod: org.mozilla.javascript.MemberBox[] methods>;

        $r25 = $r24[0];

        $r26 = virtualinvoke $r25.<org.mozilla.javascript.MemberBox: java.lang.reflect.Method method()>();

        $r27 = virtualinvoke $r26.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        $r29 = virtualinvoke $r27.<java.lang.Class: java.lang.String getName()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

        $r32 = virtualinvoke r0.<org.mozilla.javascript.NativeJavaMethod: java.lang.String getFunctionName()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(40);

        $r35 = staticinvoke <org.mozilla.javascript.NativeJavaMethod: java.lang.String scriptSignature(java.lang.Object[])>(r41);

        $r36 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.String toString()>();

        $r39 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError1(java.lang.String,java.lang.Object)>("msg.java.no_such_method", $r38);

        throw $r39;

     label02:
        $r4 = r0.<org.mozilla.javascript.NativeJavaMethod: org.mozilla.javascript.MemberBox[] methods>;

        r42 = $r4[$i1];

        r43 = r42.<org.mozilla.javascript.MemberBox: java.lang.Class[] argTypes>;

        r5 = r41;

        i3 = 0;

     label03:
        $i2 = lengthof r41;

        if i3 >= $i2 goto label06;

        r44 = r41[i3];

        $r21 = r43[i3];

        $r22 = staticinvoke <org.mozilla.javascript.Context: java.lang.Object jsToJava(java.lang.Object,java.lang.Class)>(r44, $r21);

        if $r22 == r44 goto label05;

        if r5 != r41 goto label04;

        $r23 = virtualinvoke r41.<java.lang.Object: java.lang.Object clone()>();

        r41 = (java.lang.Object[]) $r23;

     label04:
        r41[i3] = $r22;

     label05:
        i3 = i3 + 1;

        goto label03;

     label06:
        $z0 = virtualinvoke r42.<org.mozilla.javascript.MemberBox: boolean isStatic()>();

        if $z0 == 0 goto label07;

        r45 = null;

        goto label11;

     label07:
        r46 = r6;

        $r7 = virtualinvoke r42.<org.mozilla.javascript.MemberBox: java.lang.Class getDeclaringClass()>();

     label08:
        if r46 != null goto label09;

        $r17 = virtualinvoke r0.<org.mozilla.javascript.NativeJavaMethod: java.lang.String getFunctionName()>();

        $r18 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r6);

        $r19 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r20 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError3(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>("msg.nonjava.method", $r17, $r18, $r19);

        throw $r20;

     label09:
        $z1 = r46 instanceof org.mozilla.javascript.Wrapper;

        if $z1 == 0 goto label10;

        $r8 = (org.mozilla.javascript.Wrapper) r46;

        $r9 = interfaceinvoke $r8.<org.mozilla.javascript.Wrapper: java.lang.Object unwrap()>();

        r45 = $r9;

        $z2 = virtualinvoke $r7.<java.lang.Class: boolean isInstance(java.lang.Object)>($r9);

        if $z2 == 0 goto label10;

        goto label11;

     label10:
        r46 = interfaceinvoke r46.<org.mozilla.javascript.Scriptable: org.mozilla.javascript.Scriptable getPrototype()>();

        goto label08;

     label11:
        $r10 = virtualinvoke r42.<org.mozilla.javascript.MemberBox: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r45, r41);

        $r11 = virtualinvoke r42.<org.mozilla.javascript.MemberBox: java.lang.reflect.Method method()>();

        $r12 = virtualinvoke $r11.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r13 = virtualinvoke r2.<org.mozilla.javascript.Context: org.mozilla.javascript.WrapFactory getWrapFactory()>();

        $r15 = virtualinvoke $r13.<org.mozilla.javascript.WrapFactory: java.lang.Object wrap(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Class)>(r2, r14, $r10, $r12);

        r47 = $r15;

        if $r15 != null goto label12;

        $r16 = <java.lang.Void: java.lang.Class TYPE>;

        if $r12 != $r16 goto label12;

        r47 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

     label12:
        return r47;
    }

    static int findFunction(org.mozilla.javascript.Context, org.mozilla.javascript.MemberBox[], java.lang.Object[])
    {
        java.lang.Object[] r6;
        org.mozilla.javascript.MemberBox[] r0;
        java.lang.StringBuffer $r30;
        java.lang.String $r2, $r4, $r7, $r8, $r10, $r11, $r14;
        org.mozilla.javascript.Context r23;
        org.mozilla.javascript.EvaluatorException $r9, $r12;
        java.lang.Class[] $r15, r25, r28;
        int[] r26;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.mozilla.javascript.MemberBox $r5, $r13, $r18, r24, r27, r29;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, $i25, $i27, $i29, $i31, $i33, $i35, $i37, $i39, $i41, $i43;
        java.lang.Class $r3, $r16, $r17, $r19, $r21;
        java.lang.Object $r20, $r22;

        r23 := @parameter0: org.mozilla.javascript.Context;

        r0 := @parameter1: org.mozilla.javascript.MemberBox[];

        r6 := @parameter2: java.lang.Object[];

        $i0 = lengthof r0;

        if $i0 != 0 goto label01;

        $i25 = (int) -1;

        return $i25;

     label01:
        $i1 = lengthof r0;

        if $i1 != 1 goto label06;

        r24 = r0[0];

        r25 = r24.<org.mozilla.javascript.MemberBox: java.lang.Class[] argTypes>;

        i12 = lengthof r25;

        $i11 = lengthof r6;

        if i12 == $i11 goto label02;

        $i27 = (int) -1;

        return $i27;

     label02:
        i13 = 0;

     label03:
        if i13 == i12 goto label05;

        $r22 = r6[i13];

        $r21 = r25[i13];

        $z4 = staticinvoke <org.mozilla.javascript.NativeJavaObject: boolean canConvert(java.lang.Object,java.lang.Class)>($r22, $r21);

        if $z4 != 0 goto label04;

        $i29 = (int) -1;

        return $i29;

     label04:
        i13 = i13 + 1;

        goto label03;

     label05:
        return 0;

     label06:
        $i31 = (int) -1;

        i14 = $i31;

        r26 = null;

        i15 = 0;

        i16 = 0;

     label07:
        $i2 = lengthof r0;

        if i16 >= $i2 goto label27;

        r27 = r0[i16];

        r28 = r27.<org.mozilla.javascript.MemberBox: java.lang.Class[] argTypes>;

        $i4 = lengthof r28;

        $i3 = lengthof r6;

        if $i4 == $i3 goto label08;

        goto label26;

     label08:
        i17 = 0;

     label09:
        $i5 = lengthof r28;

        if i17 >= $i5 goto label11;

        $r20 = r6[i17];

        $r19 = r28[i17];

        $z3 = staticinvoke <org.mozilla.javascript.NativeJavaObject: boolean canConvert(java.lang.Object,java.lang.Class)>($r20, $r19);

        if $z3 != 0 goto label10;

        goto label26;

     label10:
        i17 = i17 + 1;

        goto label09;

     label11:
        if i14 >= 0 goto label12;

        i14 = i16;

        goto label26;

     label12:
        i18 = 0;

        i19 = 0;

        $i33 = (int) -1;

        i20 = $i33;

     label13:
        if i20 == i15 goto label22;

        $i35 = (int) -1;

        if i20 != $i35 goto label14;

        i21 = i14;

        goto label15;

     label14:
        i21 = r26[i20];

     label15:
        $r18 = r0[i21];

        $r15 = $r18.<org.mozilla.javascript.MemberBox: java.lang.Class[] argTypes>;

        $i10 = staticinvoke <org.mozilla.javascript.NativeJavaMethod: int preferSignature(java.lang.Object[],java.lang.Class[],java.lang.Class[])>(r6, r28, $r15);

        if $i10 != 3 goto label16;

        goto label22;

     label16:
        if $i10 != 1 goto label17;

        i18 = i18 + 1;

        goto label21;

     label17:
        if $i10 != 2 goto label18;

        i19 = i19 + 1;

        goto label21;

     label18:
        if $i10 == 0 goto label19;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label19:
        $z1 = virtualinvoke $r18.<org.mozilla.javascript.MemberBox: boolean isStatic()>();

        if $z1 == 0 goto label26;

        $r16 = virtualinvoke $r18.<org.mozilla.javascript.MemberBox: java.lang.Class getDeclaringClass()>();

        $r17 = virtualinvoke r27.<org.mozilla.javascript.MemberBox: java.lang.Class getDeclaringClass()>();

        $z2 = virtualinvoke $r16.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r17);

        if $z2 == 0 goto label26;

        $i37 = (int) -1;

        if i20 != $i37 goto label20;

        i14 = i16;

        goto label26;

     label20:
        r26[i20] = i16;

        goto label26;

     label21:
        i20 = i20 + 1;

        goto label13;

     label22:
        $i6 = 1 + i15;

        if i18 != $i6 goto label23;

        i14 = i16;

        i15 = 0;

        goto label26;

     label23:
        $i7 = 1 + i15;

        if i19 != $i7 goto label24;

        goto label26;

     label24:
        if r26 != null goto label25;

        $i8 = lengthof r0;

        $i9 = $i8 - 1;

        r26 = newarray (int)[$i9];

     label25:
        r26[i15] = i16;

        i15 = i15 + 1;

     label26:
        i16 = i16 + 1;

        goto label07;

     label27:
        if i14 >= 0 goto label28;

        $i39 = (int) -1;

        return $i39;

     label28:
        if i15 != 0 goto label29;

        return i14;

     label29:
        $r30 = new java.lang.StringBuffer;

        specialinvoke $r30.<java.lang.StringBuffer: void <init>()>();

        $i41 = (int) -1;

        i22 = $i41;

     label30:
        if i22 == i15 goto label33;

        $i43 = (int) -1;

        if i22 != $i43 goto label31;

        i23 = i14;

        goto label32;

     label31:
        i23 = r26[i22];

     label32:
        virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n    ");

        $r13 = r0[i23];

        $r14 = virtualinvoke $r13.<org.mozilla.javascript.MemberBox: java.lang.String toJavaDeclaration()>();

        virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        i22 = i22 + 1;

        goto label30;

     label33:
        r29 = r0[i14];

        $r2 = virtualinvoke r29.<org.mozilla.javascript.MemberBox: java.lang.String getName()>();

        $r3 = virtualinvoke r29.<org.mozilla.javascript.MemberBox: java.lang.Class getDeclaringClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = r0[0];

        $z0 = virtualinvoke $r5.<org.mozilla.javascript.MemberBox: boolean isMethod()>();

        if $z0 == 0 goto label34;

        $r10 = staticinvoke <org.mozilla.javascript.NativeJavaMethod: java.lang.String scriptSignature(java.lang.Object[])>(r6);

        $r11 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.String toString()>();

        $r12 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError3(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>("msg.constructor.ambiguous", $r2, $r10, $r11);

        throw $r12;

     label34:
        $r7 = staticinvoke <org.mozilla.javascript.NativeJavaMethod: java.lang.String scriptSignature(java.lang.Object[])>(r6);

        $r8 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.String toString()>();

        $r9 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError4(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("msg.method.ambiguous", $r4, $r2, $r7, $r8);

        throw $r9;
    }

    private static int preferSignature(java.lang.Object[], java.lang.Class[], java.lang.Class[])
    {
        java.lang.Object[] r0;
        java.lang.Class[] r1, r3;
        byte b3, b5, $b6;
        int $i0, $i1, $i2, i4;
        java.lang.Class r2, r4;
        java.lang.Object r5;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object[];

        r1 := @parameter1: java.lang.Class[];

        r3 := @parameter2: java.lang.Class[];

        b3 = 0;

        i4 = 0;

     label01:
        $i0 = lengthof r0;

        if i4 >= $i0 goto label10;

        r2 = r1[i4];

        r4 = r3[i4];

        if r2 != r4 goto label02;

        goto label09;

     label02:
        r5 = r0[i4];

        $i1 = staticinvoke <org.mozilla.javascript.NativeJavaObject: int getConversionWeight(java.lang.Object,java.lang.Class)>(r5, r2);

        $i2 = staticinvoke <org.mozilla.javascript.NativeJavaObject: int getConversionWeight(java.lang.Object,java.lang.Class)>(r5, r4);

        if $i1 >= $i2 goto label03;

        b5 = 1;

        goto label08;

     label03:
        if $i1 <= $i2 goto label04;

        b5 = 2;

        goto label08;

     label04:
        if $i1 != 0 goto label07;

        $z0 = virtualinvoke r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);

        if $z0 == 0 goto label05;

        b5 = 2;

        goto label08;

     label05:
        $z1 = virtualinvoke r4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r2);

        if $z1 == 0 goto label06;

        b5 = 1;

        goto label08;

     label06:
        b5 = 3;

        goto label08;

     label07:
        b5 = 3;

     label08:
        $b6 = b3 | b5;

        b3 = $b6;

        if $b6 != 3 goto label09;

        goto label10;

     label09:
        i4 = i4 + 1;

        goto label01;

     label10:
        return b3;
    }

    private static void printDebug(java.lang.String, org.mozilla.javascript.MemberBox, java.lang.Object[])
    {
        org.mozilla.javascript.MemberBox r1;
        java.lang.String r0;
        java.lang.Object[] r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.mozilla.javascript.MemberBox;

        r2 := @parameter2: java.lang.Object[];

        return;
    }

    public static void <clinit>()
    {
        <org.mozilla.javascript.NativeJavaMethod: boolean debug> = 0;

        <org.mozilla.javascript.NativeJavaMethod: int PREFERENCE_AMBIGUOUS> = 3;

        <org.mozilla.javascript.NativeJavaMethod: int PREFERENCE_SECOND_ARG> = 2;

        <org.mozilla.javascript.NativeJavaMethod: int PREFERENCE_FIRST_ARG> = 1;

        <org.mozilla.javascript.NativeJavaMethod: int PREFERENCE_EQUAL> = 0;

        <org.mozilla.javascript.NativeJavaMethod: long serialVersionUID> = -3440381785576412928L;

        return;
    }
}
