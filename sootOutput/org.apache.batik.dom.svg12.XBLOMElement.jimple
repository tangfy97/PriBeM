public abstract class org.apache.batik.dom.svg12.XBLOMElement extends org.apache.batik.dom.svg.SVGOMElement implements org.apache.batik.util.XBLConstants
{
    protected java.lang.String prefix;

    protected void <init>()
    {
        org.apache.batik.dom.svg12.XBLOMElement r0;

        r0 := @this: org.apache.batik.dom.svg12.XBLOMElement;

        specialinvoke r0.<org.apache.batik.dom.svg.SVGOMElement: void <init>()>();

        return;
    }

    protected void <init>(java.lang.String, org.apache.batik.dom.AbstractDocument)
    {
        org.apache.batik.dom.AbstractDocument r1;
        org.apache.batik.dom.svg12.XBLOMElement r0;
        java.lang.String r2;

        r0 := @this: org.apache.batik.dom.svg12.XBLOMElement;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: org.apache.batik.dom.AbstractDocument;

        specialinvoke r0.<org.apache.batik.dom.svg.SVGOMElement: void <init>()>();

        r0.<org.apache.batik.dom.AbstractNode: org.apache.batik.dom.AbstractDocument ownerDocument> = r1;

        virtualinvoke r0.<org.apache.batik.dom.svg12.XBLOMElement: void setPrefix(java.lang.String)>(r2);

        return;
    }

    public java.lang.String getNodeName()
    {
        java.lang.StringBuffer $r4, $r6, $r7, $r9;
        org.apache.batik.dom.svg12.XBLOMElement r0;
        java.lang.String $r1, $r2, $r3, $r5, $r8, $r10;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg12.XBLOMElement;

        $r1 = r0.<org.apache.batik.dom.svg12.XBLOMElement: java.lang.String prefix>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.batik.dom.svg12.XBLOMElement: java.lang.String prefix>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.apache.batik.dom.AbstractNode: java.lang.String getLocalName()>();

        return $r2;

     label2:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = r0.<org.apache.batik.dom.svg12.XBLOMElement: java.lang.String prefix>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        $r8 = virtualinvoke r0.<org.apache.batik.dom.AbstractNode: java.lang.String getLocalName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r10;
    }

    public java.lang.String getNamespaceURI()
    {
        org.apache.batik.dom.svg12.XBLOMElement r0;

        r0 := @this: org.apache.batik.dom.svg12.XBLOMElement;

        return "http://www.w3.org/2004/xbl";
    }

    public void setPrefix(java.lang.String) throws org.w3c.dom.DOMException
    {
        java.lang.Object[] $r2, $r6;
        java.lang.Integer $r10, $r11;
        short $s0, $s1;
        org.w3c.dom.DOMException $r5, $r9;
        int $i2, $i3;
        org.apache.batik.dom.svg12.XBLOMElement r0;
        java.lang.String r1, $r4, $r8;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.batik.dom.svg12.XBLOMElement;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.batik.dom.svg.SVGOMElement: boolean isReadonly()>();

        if $z0 == 0 goto label1;

        $r6 = newarray (java.lang.Object)[2];

        $r10 = new java.lang.Integer;

        $s1 = virtualinvoke r0.<org.apache.batik.dom.AbstractElement: short getNodeType()>();

        $i2 = (int) $s1;

        specialinvoke $r10.<java.lang.Integer: void <init>(int)>($i2);

        $r6[0] = $r10;

        $r8 = virtualinvoke r0.<org.apache.batik.dom.svg12.XBLOMElement: java.lang.String getNodeName()>();

        $r6[1] = $r8;

        $r9 = virtualinvoke r0.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(7, "readonly.node", $r6);

        throw $r9;

     label1:
        if r1 == null goto label2;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 != 0 goto label2;

        $z2 = staticinvoke <org.apache.batik.dom.util.DOMUtilities: boolean isValidName(java.lang.String)>(r1);

        if $z2 != 0 goto label2;

        $r2 = newarray (java.lang.Object)[3];

        $r11 = new java.lang.Integer;

        $s0 = virtualinvoke r0.<org.apache.batik.dom.AbstractElement: short getNodeType()>();

        $i3 = (int) $s0;

        specialinvoke $r11.<java.lang.Integer: void <init>(int)>($i3);

        $r2[0] = $r11;

        $r4 = virtualinvoke r0.<org.apache.batik.dom.svg12.XBLOMElement: java.lang.String getNodeName()>();

        $r2[1] = $r4;

        $r2[2] = r1;

        $r5 = virtualinvoke r0.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(5, "prefix", $r2);

        throw $r5;

     label2:
        r0.<org.apache.batik.dom.svg12.XBLOMElement: java.lang.String prefix> = r1;

        return;
    }

    protected org.w3c.dom.Node export(org.w3c.dom.Node, org.apache.batik.dom.AbstractDocument)
    {
        org.w3c.dom.Node r1;
        org.apache.batik.dom.AbstractDocument r2;
        org.apache.batik.dom.svg12.XBLOMElement r0, r3;
        java.lang.String $r4;

        r0 := @this: org.apache.batik.dom.svg12.XBLOMElement;

        r1 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: org.apache.batik.dom.AbstractDocument;

        specialinvoke r0.<org.apache.batik.dom.svg.SVGOMElement: org.w3c.dom.Node export(org.w3c.dom.Node,org.apache.batik.dom.AbstractDocument)>(r1, r2);

        r3 = (org.apache.batik.dom.svg12.XBLOMElement) r1;

        $r4 = r0.<org.apache.batik.dom.svg12.XBLOMElement: java.lang.String prefix>;

        r3.<org.apache.batik.dom.svg12.XBLOMElement: java.lang.String prefix> = $r4;

        return r1;
    }

    protected org.w3c.dom.Node deepExport(org.w3c.dom.Node, org.apache.batik.dom.AbstractDocument)
    {
        org.w3c.dom.Node r1;
        org.apache.batik.dom.AbstractDocument r2;
        org.apache.batik.dom.svg12.XBLOMElement r0, r3;
        java.lang.String $r4;

        r0 := @this: org.apache.batik.dom.svg12.XBLOMElement;

        r1 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: org.apache.batik.dom.AbstractDocument;

        specialinvoke r0.<org.apache.batik.dom.svg.SVGOMElement: org.w3c.dom.Node deepExport(org.w3c.dom.Node,org.apache.batik.dom.AbstractDocument)>(r1, r2);

        r3 = (org.apache.batik.dom.svg12.XBLOMElement) r1;

        $r4 = r0.<org.apache.batik.dom.svg12.XBLOMElement: java.lang.String prefix>;

        r3.<org.apache.batik.dom.svg12.XBLOMElement: java.lang.String prefix> = $r4;

        return r1;
    }

    protected org.w3c.dom.Node copyInto(org.w3c.dom.Node)
    {
        org.w3c.dom.Node r1;
        org.apache.batik.dom.svg12.XBLOMElement r0, r2;
        java.lang.String $r3;

        r0 := @this: org.apache.batik.dom.svg12.XBLOMElement;

        r1 := @parameter0: org.w3c.dom.Node;

        specialinvoke r0.<org.apache.batik.dom.svg.SVGOMElement: org.w3c.dom.Node copyInto(org.w3c.dom.Node)>(r1);

        r2 = (org.apache.batik.dom.svg12.XBLOMElement) r1;

        $r3 = r0.<org.apache.batik.dom.svg12.XBLOMElement: java.lang.String prefix>;

        r2.<org.apache.batik.dom.svg12.XBLOMElement: java.lang.String prefix> = $r3;

        return r1;
    }

    protected org.w3c.dom.Node deepCopyInto(org.w3c.dom.Node)
    {
        org.w3c.dom.Node r1;
        org.apache.batik.dom.svg12.XBLOMElement r0, r2;
        java.lang.String $r3;

        r0 := @this: org.apache.batik.dom.svg12.XBLOMElement;

        r1 := @parameter0: org.w3c.dom.Node;

        specialinvoke r0.<org.apache.batik.dom.svg.SVGOMElement: org.w3c.dom.Node deepCopyInto(org.w3c.dom.Node)>(r1);

        r2 = (org.apache.batik.dom.svg12.XBLOMElement) r1;

        $r3 = r0.<org.apache.batik.dom.svg12.XBLOMElement: java.lang.String prefix>;

        r2.<org.apache.batik.dom.svg12.XBLOMElement: java.lang.String prefix> = $r3;

        return r1;
    }
}
