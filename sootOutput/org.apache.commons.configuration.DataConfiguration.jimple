public class org.apache.commons.configuration.DataConfiguration extends org.apache.commons.configuration.AbstractConfiguration implements java.io.Serializable
{
    public static final java.lang.String DATE_FORMAT_KEY;
    public static final java.lang.String DEFAULT_DATE_FORMAT;
    private static final long serialVersionUID;
    protected org.apache.commons.configuration.Configuration configuration;
    static java.lang.Class class$java$util$Date;
    static java.lang.Class class$java$util$Calendar;
    static java.lang.Class class$java$lang$Boolean;
    static java.lang.Class class$java$lang$Byte;
    static java.lang.Class class$java$lang$Short;
    static java.lang.Class class$java$lang$Integer;
    static java.lang.Class class$java$lang$Long;
    static java.lang.Class class$java$lang$Float;
    static java.lang.Class class$java$lang$Double;
    static java.lang.Class class$java$math$BigInteger;
    static java.lang.Class class$java$math$BigDecimal;
    static java.lang.Class class$java$net$URL;
    static java.lang.Class class$java$util$Locale;
    static java.lang.Class class$java$awt$Color;

    public void <init>(org.apache.commons.configuration.Configuration)
    {
        org.apache.commons.configuration.Configuration r1;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: org.apache.commons.configuration.Configuration;

        specialinvoke r0.<org.apache.commons.configuration.AbstractConfiguration: void <init>()>();

        r0.<org.apache.commons.configuration.DataConfiguration: org.apache.commons.configuration.Configuration configuration> = r1;

        return;
    }

    public org.apache.commons.configuration.Configuration getConfiguration()
    {
        org.apache.commons.configuration.Configuration $r1;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        $r1 = r0.<org.apache.commons.configuration.DataConfiguration: org.apache.commons.configuration.Configuration configuration>;

        return $r1;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        org.apache.commons.configuration.Configuration $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.commons.configuration.DataConfiguration: org.apache.commons.configuration.Configuration configuration>;

        $r3 = interfaceinvoke $r2.<org.apache.commons.configuration.Configuration: java.lang.Object getProperty(java.lang.String)>(r1);

        return $r3;
    }

    protected void addPropertyDirect(java.lang.String, java.lang.Object)
    {
        org.apache.commons.configuration.Configuration $r1, $r4, $r5;
        org.apache.commons.configuration.AbstractConfiguration $r6;
        java.lang.Object r3;
        java.lang.String r2;
        org.apache.commons.configuration.DataConfiguration r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        $r1 = r0.<org.apache.commons.configuration.DataConfiguration: org.apache.commons.configuration.Configuration configuration>;

        $z0 = $r1 instanceof org.apache.commons.configuration.AbstractConfiguration;

        if $z0 == 0 goto label1;

        $r5 = r0.<org.apache.commons.configuration.DataConfiguration: org.apache.commons.configuration.Configuration configuration>;

        $r6 = (org.apache.commons.configuration.AbstractConfiguration) $r5;

        virtualinvoke $r6.<org.apache.commons.configuration.AbstractConfiguration: void addPropertyDirect(java.lang.String,java.lang.Object)>(r2, r3);

        goto label2;

     label1:
        $r4 = r0.<org.apache.commons.configuration.DataConfiguration: org.apache.commons.configuration.Configuration configuration>;

        interfaceinvoke $r4.<org.apache.commons.configuration.Configuration: void addProperty(java.lang.String,java.lang.Object)>(r2, r3);

     label2:
        return;
    }

    public void addProperty(java.lang.String, java.lang.Object)
    {
        org.apache.commons.configuration.Configuration $r1;
        java.lang.Object r3;
        java.lang.String r2;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: org.apache.commons.configuration.Configuration getConfiguration()>();

        interfaceinvoke $r1.<org.apache.commons.configuration.Configuration: void addProperty(java.lang.String,java.lang.Object)>(r2, r3);

        return;
    }

    public boolean isEmpty()
    {
        org.apache.commons.configuration.Configuration $r1;
        org.apache.commons.configuration.DataConfiguration r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        $r1 = r0.<org.apache.commons.configuration.DataConfiguration: org.apache.commons.configuration.Configuration configuration>;

        $z0 = interfaceinvoke $r1.<org.apache.commons.configuration.Configuration: boolean isEmpty()>();

        return $z0;
    }

    public boolean containsKey(java.lang.String)
    {
        org.apache.commons.configuration.Configuration $r2;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.commons.configuration.DataConfiguration: org.apache.commons.configuration.Configuration configuration>;

        $z0 = interfaceinvoke $r2.<org.apache.commons.configuration.Configuration: boolean containsKey(java.lang.String)>(r1);

        return $z0;
    }

    public void clearProperty(java.lang.String)
    {
        org.apache.commons.configuration.Configuration $r2;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.commons.configuration.DataConfiguration: org.apache.commons.configuration.Configuration configuration>;

        interfaceinvoke $r2.<org.apache.commons.configuration.Configuration: void clearProperty(java.lang.String)>(r1);

        return;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        org.apache.commons.configuration.Configuration $r3;
        java.lang.Object r2;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.commons.configuration.DataConfiguration: org.apache.commons.configuration.Configuration configuration>;

        interfaceinvoke $r3.<org.apache.commons.configuration.Configuration: void setProperty(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    public java.util.Iterator getKeys()
    {
        org.apache.commons.configuration.Configuration $r1;
        java.util.Iterator $r2;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        $r1 = r0.<org.apache.commons.configuration.DataConfiguration: org.apache.commons.configuration.Configuration configuration>;

        $r2 = interfaceinvoke $r1.<org.apache.commons.configuration.Configuration: java.util.Iterator getKeys()>();

        return $r2;
    }

    public java.lang.Object get(java.lang.Class, java.lang.String)
    {
        java.lang.StringBuffer $r5, $r6, $r7, $r8;
        java.lang.Class r1;
        java.lang.Object $r3;
        java.lang.String r2, $r9;
        java.util.NoSuchElementException $r4;
        org.apache.commons.configuration.DataConfiguration r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object get(java.lang.Class,java.lang.String,java.lang.Object)>(r1, r2, null);

        if $r3 == null goto label1;

        return $r3;

     label1:
        $z0 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: boolean isThrowExceptionOnMissing()>();

        if $z0 == 0 goto label2;

        $r4 = new java.util.NoSuchElementException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' doesn\'t map to an existing object");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label2:
        return null;
    }

    public java.lang.Object get(java.lang.Class, java.lang.String, java.lang.Object)
    {
        java.lang.String[] $r6;
        org.apache.commons.configuration.ConversionException $r13, $r14;
        java.lang.StringBuffer $r15, $r16, $r17, $r18, $r19;
        java.lang.String r1, $r7, $r20;
        org.apache.commons.configuration.DataConfiguration r0;
        boolean $z0, $z1;
        java.lang.Object $r2, $r5, $r8, $r10, $r11, r12;
        java.lang.Class $r3, r4, $r9, $r21, $r22;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r4 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        r12 := @parameter2: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object resolveContainerStore(java.lang.String)>(r1);

        if $r2 != null goto label01;

        return r12;

     label01:
        $r3 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$util$Date>;

        if $r3 != null goto label02;

        $r21 = staticinvoke <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$(java.lang.String)>("java.util.Date");

        <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$util$Date> = $r21;

        goto label03;

     label02:
        $r21 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$util$Date>;

     label03:
        $z0 = virtualinvoke $r21.<java.lang.Object: boolean equals(java.lang.Object)>(r4);

        if $z0 != 0 goto label06;

        $r9 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$util$Calendar>;

        if $r9 != null goto label04;

        $r22 = staticinvoke <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$(java.lang.String)>("java.util.Calendar");

        <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$util$Calendar> = $r22;

        goto label05;

     label04:
        $r22 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$util$Calendar>;

     label05:
        $z1 = virtualinvoke $r22.<java.lang.Object: boolean equals(java.lang.Object)>(r4);

        if $z1 == 0 goto label08;

     label06:
        $r5 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object interpolate(java.lang.Object)>($r2);

        $r6 = newarray (java.lang.String)[1];

        $r7 = specialinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.String getDefaultDateFormat()>();

        $r6[0] = $r7;

        $r8 = staticinvoke <org.apache.commons.configuration.PropertyConverter: java.lang.Object 'to'(java.lang.Class,java.lang.Object,java.lang.Object[])>(r4, $r5, $r6);

     label07:
        return $r8;

     label08:
        $r10 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object interpolate(java.lang.Object)>($r2);

        $r11 = staticinvoke <org.apache.commons.configuration.PropertyConverter: java.lang.Object 'to'(java.lang.Class,java.lang.Object,java.lang.Object[])>(r4, $r10, null);

     label09:
        return $r11;

     label10:
        $r13 := @caughtexception;

        $r14 = new org.apache.commons.configuration.ConversionException;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' doesn\'t map to a ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r4);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r14.<org.apache.commons.configuration.ConversionException: void <init>(java.lang.String,java.lang.Throwable)>($r20, $r13);

        throw $r14;

        catch org.apache.commons.configuration.ConversionException from label01 to label07 with label10;
        catch org.apache.commons.configuration.ConversionException from label08 to label09 with label10;
    }

    public java.util.List getList(java.lang.Class, java.lang.String)
    {
        java.util.List $r4;
        java.lang.Class r1;
        java.lang.String r2;
        org.apache.commons.configuration.DataConfiguration r0;
        java.util.ArrayList $r3;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.List getList(java.lang.Class,java.lang.String,java.util.List)>(r1, r2, $r3);

        return $r4;
    }

    public java.util.List getList(java.lang.Class, java.lang.String, java.util.List)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.util.Collection r37;
        java.util.List r4, r33;
        java.lang.Object[] $r8, r34;
        java.util.ArrayList $r5;
        org.apache.commons.configuration.ConversionException $r24, $r25;
        java.lang.StringBuffer $r26, $r27, $r28, $r29, $r30;
        int $i0, i1, i2;
        java.lang.String r1, $r9, $r23, $r31;
        org.apache.commons.configuration.DataConfiguration r0;
        java.util.Iterator $r12;
        java.lang.Object $r2, $r10, $r11, $r13, $r14, $r15, $r17, $r18, $r19, $r20;
        java.lang.Class r3, r6, $r7, $r16, $r21, $r22, $r32, $r35, $r36;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r6 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        r4 := @parameter2: java.util.List;

        $r2 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object getProperty(java.lang.String)>(r1);

        if $r2 == null goto label01;

        $r32 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        goto label02;

     label01:
        $r32 = null;

     label02:
        r3 = $r32;

        if $r2 == null goto label03;

        $z0 = $r2 instanceof java.lang.String;

        if $z0 == 0 goto label04;

        $r23 = (java.lang.String) $r2;

        $z8 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r23);

        if $z8 == 0 goto label04;

     label03:
        r33 = r4;

        goto label23;

     label04:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r33 = $r5;

        r34 = null;

        $r7 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$util$Date>;

        if $r7 != null goto label05;

        $r35 = staticinvoke <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$(java.lang.String)>("java.util.Date");

        <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$util$Date> = $r35;

        goto label06;

     label05:
        $r35 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$util$Date>;

     label06:
        $z1 = virtualinvoke r6.<java.lang.Object: boolean equals(java.lang.Object)>($r35);

        if $z1 != 0 goto label09;

        $r22 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$util$Calendar>;

        if $r22 != null goto label07;

        $r36 = staticinvoke <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$(java.lang.String)>("java.util.Calendar");

        <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$util$Calendar> = $r36;

        goto label08;

     label07:
        $r36 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$util$Calendar>;

     label08:
        $z7 = virtualinvoke r6.<java.lang.Object: boolean equals(java.lang.Object)>($r36);

        if $z7 == 0 goto label10;

     label09:
        $r8 = newarray (java.lang.Object)[1];

        $r9 = specialinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.String getDefaultDateFormat()>();

        $r8[0] = $r9;

        r34 = $r8;

     label10:
        $z9 = virtualinvoke r3.<java.lang.Class: boolean isArray()>();

        if $z9 == 0 goto label17;

        $r16 = virtualinvoke r3.<java.lang.Class: java.lang.Class getComponentType()>();

        $i0 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>($r2);

        $z4 = virtualinvoke $r16.<java.lang.Object: boolean equals(java.lang.Object)>(r6);

        if $z4 != 0 goto label11;

        $z5 = virtualinvoke $r16.<java.lang.Class: boolean isPrimitive()>();

        if $z5 == 0 goto label14;

        $r21 = staticinvoke <org.apache.commons.lang.ClassUtils: java.lang.Class primitiveToWrapper(java.lang.Class)>($r16);

        $z6 = virtualinvoke r6.<java.lang.Object: boolean equals(java.lang.Object)>($r21);

        if $z6 == 0 goto label14;

     label11:
        i1 = 0;

     label12:
        if i1 >= $i0 goto label13;

        $r17 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>($r2, i1);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r17);

        i1 = i1 + 1;

        goto label12;

     label13:
        goto label16;

     label14:
        i2 = 0;

     label15:
        if i2 >= $i0 goto label16;

        $r18 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>($r2, i2);

        $r19 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object interpolate(java.lang.Object)>($r18);

        $r20 = staticinvoke <org.apache.commons.configuration.PropertyConverter: java.lang.Object 'to'(java.lang.Class,java.lang.Object,java.lang.Object[])>(r6, $r19, r34);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r20);

        i2 = i2 + 1;

        goto label15;

     label16:
        goto label21;

     label17:
        $z2 = $r2 instanceof java.util.Collection;

        if $z2 == 0 goto label20;

        r37 = (java.util.Collection) $r2;

        $r12 = interfaceinvoke r37.<java.util.Collection: java.util.Iterator iterator()>();

     label18:
        $z3 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label19;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        $r14 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object interpolate(java.lang.Object)>($r13);

        $r15 = staticinvoke <org.apache.commons.configuration.PropertyConverter: java.lang.Object 'to'(java.lang.Class,java.lang.Object,java.lang.Object[])>(r6, $r14, r34);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r15);

        goto label18;

     label19:
        goto label21;

     label20:
        $r10 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object interpolate(java.lang.Object)>($r2);

        $r11 = staticinvoke <org.apache.commons.configuration.PropertyConverter: java.lang.Object 'to'(java.lang.Class,java.lang.Object,java.lang.Object[])>(r6, $r10, r34);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r11);

     label21:
        goto label23;

     label22:
        $r24 := @caughtexception;

        $r25 = new org.apache.commons.configuration.ConversionException;

        $r26 = new java.lang.StringBuffer;

        specialinvoke $r26.<java.lang.StringBuffer: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' doesn\'t map to a list of ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r6);

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r25.<org.apache.commons.configuration.ConversionException: void <init>(java.lang.String,java.lang.Throwable)>($r31, $r24);

        throw $r25;

     label23:
        return r33;

        catch org.apache.commons.configuration.ConversionException from label10 to label21 with label22;
    }

    public java.lang.Object getArray(java.lang.Class, java.lang.String)
    {
        java.lang.Class r1;
        java.lang.Object $r3, $r4;
        java.lang.String r2;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        $r3 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r1, 0);

        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object getArray(java.lang.Class,java.lang.String,java.lang.Object)>(r1, r2, $r3);

        return $r4;
    }

    public java.lang.Object getArray(java.lang.Class, java.lang.String, java.lang.Object)
    {
        java.lang.Object[] $r6, $r7;
        java.lang.StringBuffer $r11, $r12, $r14, $r15, $r16, $r17, $r18;
        int $i0;
        java.lang.String r3, $r19;
        org.apache.commons.configuration.DataConfiguration r2;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalArgumentException $r10;
        java.util.List $r4;
        java.lang.Object r0, $r5, $r8;
        java.lang.Class r1, $r9, $r13, $r20, $r21;

        r2 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.Class;

        r3 := @parameter1: java.lang.String;

        r0 := @parameter2: java.lang.Object;

        if r0 == null goto label2;

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z2 = virtualinvoke $r9.<java.lang.Class: boolean isArray()>();

        if $z2 == 0 goto label1;

        $r20 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r21 = virtualinvoke $r20.<java.lang.Class: java.lang.Class getComponentType()>();

        $z3 = virtualinvoke r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r21);

        if $z3 != 0 goto label2;

     label1:
        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The type of the default value (");

        $r13 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is not an array of the specified class (");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r10;

     label2:
        $z0 = virtualinvoke r1.<java.lang.Class: boolean isPrimitive()>();

        if $z0 == 0 goto label3;

        $r8 = specialinvoke r2.<org.apache.commons.configuration.DataConfiguration: java.lang.Object getPrimitiveArray(java.lang.Class,java.lang.String,java.lang.Object)>(r1, r3, r0);

        return $r8;

     label3:
        $r4 = virtualinvoke r2.<org.apache.commons.configuration.DataConfiguration: java.util.List getList(java.lang.Class,java.lang.String)>(r1, r3);

        $z1 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label4;

        return r0;

     label4:
        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $r5 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r1, $i0);

        $r6 = (java.lang.Object[]) $r5;

        $r7 = interfaceinvoke $r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        return $r7;
    }

    private java.lang.Object getPrimitiveArray(java.lang.Class, java.lang.String, java.lang.Object)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.Collection r39;
        org.apache.commons.configuration.ConversionException $r16, $r29, $r30;
        java.lang.StringBuffer $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r31, $r32, $r33, $r34, $r35;
        int $i0, $i1, $i2, i3, i4;
        java.lang.String r1, $r25, $r28, $r36;
        org.apache.commons.configuration.DataConfiguration r0;
        java.util.Iterator $r10;
        java.lang.Object $r2, r4, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r26, $r27, r38;
        java.lang.Class r3, r5, $r14, $r15, $r37;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r5 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.Object;

        $r2 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object getProperty(java.lang.String)>(r1);

        if $r2 == null goto label01;

        $r37 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        goto label02;

     label01:
        $r37 = null;

     label02:
        r3 = $r37;

        if $r2 == null goto label03;

        $z0 = $r2 instanceof java.lang.String;

        if $z0 == 0 goto label04;

        $r28 = (java.lang.String) $r2;

        $z6 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r28);

        if $z6 == 0 goto label04;

     label03:
        r38 = r4;

        goto label16;

     label04:
        $z1 = virtualinvoke r3.<java.lang.Class: boolean isArray()>();

        if $z1 == 0 goto label10;

        $r14 = virtualinvoke r3.<java.lang.Class: java.lang.Class getComponentType()>();

        $i2 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>($r2);

        $z4 = virtualinvoke $r14.<java.lang.Object: boolean equals(java.lang.Object)>(r5);

        if $z4 == 0 goto label05;

        r38 = $r2;

        goto label09;

     label05:
        $r15 = staticinvoke <org.apache.commons.lang.ClassUtils: java.lang.Class primitiveToWrapper(java.lang.Class)>(r5);

        $z5 = virtualinvoke $r14.<java.lang.Object: boolean equals(java.lang.Object)>($r15);

        if $z5 == 0 goto label08;

        $r26 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r5, $i2);

        r38 = $r26;

        i3 = 0;

     label06:
        if i3 >= $i2 goto label07;

        $r27 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>($r2, i3);

        staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>($r26, i3, $r27);

        i3 = i3 + 1;

        goto label06;

     label07:
        goto label09;

     label08:
        $r16 = new org.apache.commons.configuration.ConversionException;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' (");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r14);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" doesn\'t map to a compatible array of ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r5);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r16.<org.apache.commons.configuration.ConversionException: void <init>(java.lang.String)>($r25);

        throw $r16;

     label09:
        goto label16;

     label10:
        $z2 = $r2 instanceof java.util.Collection;

        if $z2 == 0 goto label13;

        r39 = (java.util.Collection) $r2;

        $i0 = interfaceinvoke r39.<java.util.Collection: int size()>();

        $r9 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r5, $i0);

        r38 = $r9;

        $r10 = interfaceinvoke r39.<java.util.Collection: java.util.Iterator iterator()>();

        i4 = 0;

     label11:
        $z3 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label12;

        $i1 = i4;

        i4 = i4 + 1;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r12 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object interpolate(java.lang.Object)>($r11);

        $r13 = staticinvoke <org.apache.commons.configuration.PropertyConverter: java.lang.Object 'to'(java.lang.Class,java.lang.Object,java.lang.Object[])>(r5, $r12, null);

        staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>($r9, $i1, $r13);

        goto label11;

     label12:
        goto label16;

     label13:
        $r6 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object interpolate(java.lang.Object)>($r2);

        $r7 = staticinvoke <org.apache.commons.configuration.PropertyConverter: java.lang.Object 'to'(java.lang.Class,java.lang.Object,java.lang.Object[])>(r5, $r6, null);

        $r8 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r5, 1);

        r38 = $r8;

        staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>($r8, 0, $r7);

     label14:
        goto label16;

     label15:
        $r29 := @caughtexception;

        $r30 = new org.apache.commons.configuration.ConversionException;

        $r31 = new java.lang.StringBuffer;

        specialinvoke $r31.<java.lang.StringBuffer: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' doesn\'t map to an array of ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r5);

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r30.<org.apache.commons.configuration.ConversionException: void <init>(java.lang.String,java.lang.Throwable)>($r36, $r29);

        throw $r30;

     label16:
        return r38;

        catch org.apache.commons.configuration.ConversionException from label13 to label14 with label15;
    }

    public java.util.List getBooleanList(java.lang.String)
    {
        java.util.List $r3;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.List getBooleanList(java.lang.String,java.util.List)>(r1, $r2);

        return $r3;
    }

    public java.util.List getBooleanList(java.lang.String, java.util.List)
    {
        java.util.List r3, $r4;
        java.lang.Class $r1, $r5;
        java.lang.String r2;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.List;

        $r1 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$lang$Boolean>;

        if $r1 != null goto label1;

        $r5 = staticinvoke <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$(java.lang.String)>("java.lang.Boolean");

        <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$lang$Boolean> = $r5;

        goto label2;

     label1:
        $r5 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$lang$Boolean>;

     label2:
        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.List getList(java.lang.Class,java.lang.String,java.util.List)>($r5, r2, r3);

        return $r4;
    }

    public boolean[] getBooleanArray(java.lang.String)
    {
        boolean[] $r4;
        java.lang.Class $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object getArray(java.lang.Class,java.lang.String)>($r2, r1);

        $r4 = (boolean[]) $r3;

        return $r4;
    }

    public boolean[] getBooleanArray(java.lang.String, boolean[])
    {
        boolean[] r2, $r5;
        java.lang.Class $r3;
        java.lang.Object $r4;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: boolean[];

        $r3 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object getArray(java.lang.Class,java.lang.String,java.lang.Object)>($r3, r1, r2);

        $r5 = (boolean[]) $r4;

        return $r5;
    }

    public java.util.List getByteList(java.lang.String)
    {
        java.util.List $r3;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.List getByteList(java.lang.String,java.util.List)>(r1, $r2);

        return $r3;
    }

    public java.util.List getByteList(java.lang.String, java.util.List)
    {
        java.util.List r3, $r4;
        java.lang.Class $r1, $r5;
        java.lang.String r2;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.List;

        $r1 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$lang$Byte>;

        if $r1 != null goto label1;

        $r5 = staticinvoke <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$(java.lang.String)>("java.lang.Byte");

        <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$lang$Byte> = $r5;

        goto label2;

     label1:
        $r5 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$lang$Byte>;

     label2:
        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.List getList(java.lang.Class,java.lang.String,java.util.List)>($r5, r2, r3);

        return $r4;
    }

    public byte[] getByteArray(java.lang.String)
    {
        byte[] $r2, $r3;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = newarray (byte)[0];

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: byte[] getByteArray(java.lang.String,byte[])>(r1, $r2);

        return $r3;
    }

    public byte[] getByteArray(java.lang.String, byte[])
    {
        byte[] r2, $r5;
        java.lang.Class $r3;
        java.lang.Object $r4;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        $r3 = <java.lang.Byte: java.lang.Class TYPE>;

        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object getArray(java.lang.Class,java.lang.String,java.lang.Object)>($r3, r1, r2);

        $r5 = (byte[]) $r4;

        return $r5;
    }

    public java.util.List getShortList(java.lang.String)
    {
        java.util.List $r3;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.List getShortList(java.lang.String,java.util.List)>(r1, $r2);

        return $r3;
    }

    public java.util.List getShortList(java.lang.String, java.util.List)
    {
        java.util.List r3, $r4;
        java.lang.Class $r1, $r5;
        java.lang.String r2;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.List;

        $r1 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$lang$Short>;

        if $r1 != null goto label1;

        $r5 = staticinvoke <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$(java.lang.String)>("java.lang.Short");

        <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$lang$Short> = $r5;

        goto label2;

     label1:
        $r5 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$lang$Short>;

     label2:
        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.List getList(java.lang.Class,java.lang.String,java.util.List)>($r5, r2, r3);

        return $r4;
    }

    public short[] getShortArray(java.lang.String)
    {
        java.lang.String r1;
        short[] $r2, $r3;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = newarray (short)[0];

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: short[] getShortArray(java.lang.String,short[])>(r1, $r2);

        return $r3;
    }

    public short[] getShortArray(java.lang.String, short[])
    {
        java.lang.Class $r3;
        java.lang.Object $r4;
        java.lang.String r1;
        short[] r2, $r5;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: short[];

        $r3 = <java.lang.Short: java.lang.Class TYPE>;

        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object getArray(java.lang.Class,java.lang.String,java.lang.Object)>($r3, r1, r2);

        $r5 = (short[]) $r4;

        return $r5;
    }

    public java.util.List getIntegerList(java.lang.String)
    {
        java.util.List $r3;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.List getIntegerList(java.lang.String,java.util.List)>(r1, $r2);

        return $r3;
    }

    public java.util.List getIntegerList(java.lang.String, java.util.List)
    {
        java.util.List r3, $r4;
        java.lang.Class $r1, $r5;
        java.lang.String r2;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.List;

        $r1 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$lang$Integer>;

        if $r1 != null goto label1;

        $r5 = staticinvoke <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$(java.lang.String)>("java.lang.Integer");

        <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$lang$Integer> = $r5;

        goto label2;

     label1:
        $r5 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$lang$Integer>;

     label2:
        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.List getList(java.lang.Class,java.lang.String,java.util.List)>($r5, r2, r3);

        return $r4;
    }

    public int[] getIntArray(java.lang.String)
    {
        int[] $r2, $r3;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = newarray (int)[0];

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: int[] getIntArray(java.lang.String,int[])>(r1, $r2);

        return $r3;
    }

    public int[] getIntArray(java.lang.String, int[])
    {
        int[] r2, $r5;
        java.lang.Class $r3;
        java.lang.Object $r4;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: int[];

        $r3 = <java.lang.Integer: java.lang.Class TYPE>;

        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object getArray(java.lang.Class,java.lang.String,java.lang.Object)>($r3, r1, r2);

        $r5 = (int[]) $r4;

        return $r5;
    }

    public java.util.List getLongList(java.lang.String)
    {
        java.util.List $r3;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.List getLongList(java.lang.String,java.util.List)>(r1, $r2);

        return $r3;
    }

    public java.util.List getLongList(java.lang.String, java.util.List)
    {
        java.util.List r3, $r4;
        java.lang.Class $r1, $r5;
        java.lang.String r2;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.List;

        $r1 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$lang$Long>;

        if $r1 != null goto label1;

        $r5 = staticinvoke <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$(java.lang.String)>("java.lang.Long");

        <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$lang$Long> = $r5;

        goto label2;

     label1:
        $r5 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$lang$Long>;

     label2:
        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.List getList(java.lang.Class,java.lang.String,java.util.List)>($r5, r2, r3);

        return $r4;
    }

    public long[] getLongArray(java.lang.String)
    {
        long[] $r2, $r3;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = newarray (long)[0];

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: long[] getLongArray(java.lang.String,long[])>(r1, $r2);

        return $r3;
    }

    public long[] getLongArray(java.lang.String, long[])
    {
        long[] r2, $r5;
        java.lang.Class $r3;
        java.lang.Object $r4;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: long[];

        $r3 = <java.lang.Long: java.lang.Class TYPE>;

        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object getArray(java.lang.Class,java.lang.String,java.lang.Object)>($r3, r1, r2);

        $r5 = (long[]) $r4;

        return $r5;
    }

    public java.util.List getFloatList(java.lang.String)
    {
        java.util.List $r3;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.List getFloatList(java.lang.String,java.util.List)>(r1, $r2);

        return $r3;
    }

    public java.util.List getFloatList(java.lang.String, java.util.List)
    {
        java.util.List r3, $r4;
        java.lang.Class $r1, $r5;
        java.lang.String r2;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.List;

        $r1 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$lang$Float>;

        if $r1 != null goto label1;

        $r5 = staticinvoke <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$(java.lang.String)>("java.lang.Float");

        <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$lang$Float> = $r5;

        goto label2;

     label1:
        $r5 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$lang$Float>;

     label2:
        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.List getList(java.lang.Class,java.lang.String,java.util.List)>($r5, r2, r3);

        return $r4;
    }

    public float[] getFloatArray(java.lang.String)
    {
        float[] $r2, $r3;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = newarray (float)[0];

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: float[] getFloatArray(java.lang.String,float[])>(r1, $r2);

        return $r3;
    }

    public float[] getFloatArray(java.lang.String, float[])
    {
        float[] r2, $r5;
        java.lang.Class $r3;
        java.lang.Object $r4;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: float[];

        $r3 = <java.lang.Float: java.lang.Class TYPE>;

        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object getArray(java.lang.Class,java.lang.String,java.lang.Object)>($r3, r1, r2);

        $r5 = (float[]) $r4;

        return $r5;
    }

    public java.util.List getDoubleList(java.lang.String)
    {
        java.util.List $r3;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.List getDoubleList(java.lang.String,java.util.List)>(r1, $r2);

        return $r3;
    }

    public java.util.List getDoubleList(java.lang.String, java.util.List)
    {
        java.util.List r3, $r4;
        java.lang.Class $r1, $r5;
        java.lang.String r2;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.List;

        $r1 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$lang$Double>;

        if $r1 != null goto label1;

        $r5 = staticinvoke <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$(java.lang.String)>("java.lang.Double");

        <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$lang$Double> = $r5;

        goto label2;

     label1:
        $r5 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$lang$Double>;

     label2:
        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.List getList(java.lang.Class,java.lang.String,java.util.List)>($r5, r2, r3);

        return $r4;
    }

    public double[] getDoubleArray(java.lang.String)
    {
        double[] $r2, $r3;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = newarray (double)[0];

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: double[] getDoubleArray(java.lang.String,double[])>(r1, $r2);

        return $r3;
    }

    public double[] getDoubleArray(java.lang.String, double[])
    {
        double[] r2, $r5;
        java.lang.Class $r3;
        java.lang.Object $r4;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: double[];

        $r3 = <java.lang.Double: java.lang.Class TYPE>;

        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object getArray(java.lang.Class,java.lang.String,java.lang.Object)>($r3, r1, r2);

        $r5 = (double[]) $r4;

        return $r5;
    }

    public java.util.List getBigIntegerList(java.lang.String)
    {
        java.util.List $r3;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.List getBigIntegerList(java.lang.String,java.util.List)>(r1, $r2);

        return $r3;
    }

    public java.util.List getBigIntegerList(java.lang.String, java.util.List)
    {
        java.util.List r3, $r4;
        java.lang.Class $r1, $r5;
        java.lang.String r2;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.List;

        $r1 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$math$BigInteger>;

        if $r1 != null goto label1;

        $r5 = staticinvoke <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$(java.lang.String)>("java.math.BigInteger");

        <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$math$BigInteger> = $r5;

        goto label2;

     label1:
        $r5 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$math$BigInteger>;

     label2:
        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.List getList(java.lang.Class,java.lang.String,java.util.List)>($r5, r2, r3);

        return $r4;
    }

    public java.math.BigInteger[] getBigIntegerArray(java.lang.String)
    {
        java.math.BigInteger[] $r2, $r3;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = newarray (java.math.BigInteger)[0];

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.math.BigInteger[] getBigIntegerArray(java.lang.String,java.math.BigInteger[])>(r1, $r2);

        return $r3;
    }

    public java.math.BigInteger[] getBigIntegerArray(java.lang.String, java.math.BigInteger[])
    {
        java.math.BigInteger[] r3, $r5;
        java.lang.Class $r1, $r6;
        java.lang.Object $r4;
        java.lang.String r2;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.math.BigInteger[];

        $r1 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$math$BigInteger>;

        if $r1 != null goto label1;

        $r6 = staticinvoke <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$(java.lang.String)>("java.math.BigInteger");

        <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$math$BigInteger> = $r6;

        goto label2;

     label1:
        $r6 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$math$BigInteger>;

     label2:
        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object getArray(java.lang.Class,java.lang.String,java.lang.Object)>($r6, r2, r3);

        $r5 = (java.math.BigInteger[]) $r4;

        return $r5;
    }

    public java.util.List getBigDecimalList(java.lang.String)
    {
        java.util.List $r3;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.List getBigDecimalList(java.lang.String,java.util.List)>(r1, $r2);

        return $r3;
    }

    public java.util.List getBigDecimalList(java.lang.String, java.util.List)
    {
        java.util.List r3, $r4;
        java.lang.Class $r1, $r5;
        java.lang.String r2;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.List;

        $r1 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$math$BigDecimal>;

        if $r1 != null goto label1;

        $r5 = staticinvoke <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$(java.lang.String)>("java.math.BigDecimal");

        <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$math$BigDecimal> = $r5;

        goto label2;

     label1:
        $r5 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$math$BigDecimal>;

     label2:
        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.List getList(java.lang.Class,java.lang.String,java.util.List)>($r5, r2, r3);

        return $r4;
    }

    public java.math.BigDecimal[] getBigDecimalArray(java.lang.String)
    {
        java.math.BigDecimal[] $r2, $r3;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = newarray (java.math.BigDecimal)[0];

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.math.BigDecimal[] getBigDecimalArray(java.lang.String,java.math.BigDecimal[])>(r1, $r2);

        return $r3;
    }

    public java.math.BigDecimal[] getBigDecimalArray(java.lang.String, java.math.BigDecimal[])
    {
        java.math.BigDecimal[] r3, $r5;
        java.lang.Class $r1, $r6;
        java.lang.Object $r4;
        java.lang.String r2;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.math.BigDecimal[];

        $r1 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$math$BigDecimal>;

        if $r1 != null goto label1;

        $r6 = staticinvoke <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$(java.lang.String)>("java.math.BigDecimal");

        <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$math$BigDecimal> = $r6;

        goto label2;

     label1:
        $r6 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$math$BigDecimal>;

     label2:
        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object getArray(java.lang.Class,java.lang.String,java.lang.Object)>($r6, r2, r3);

        $r5 = (java.math.BigDecimal[]) $r4;

        return $r5;
    }

    public java.net.URL getURL(java.lang.String)
    {
        java.net.URL $r4;
        java.lang.Class $r1, $r5;
        java.lang.Object $r3;
        java.lang.String r2;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r2 := @parameter0: java.lang.String;

        $r1 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$net$URL>;

        if $r1 != null goto label1;

        $r5 = staticinvoke <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$(java.lang.String)>("java.net.URL");

        <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$net$URL> = $r5;

        goto label2;

     label1:
        $r5 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$net$URL>;

     label2:
        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object get(java.lang.Class,java.lang.String)>($r5, r2);

        $r4 = (java.net.URL) $r3;

        return $r4;
    }

    public java.net.URL getURL(java.lang.String, java.net.URL)
    {
        java.net.URL r3, $r5;
        java.lang.Class $r1, $r6;
        java.lang.Object $r4;
        java.lang.String r2;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.net.URL;

        $r1 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$net$URL>;

        if $r1 != null goto label1;

        $r6 = staticinvoke <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$(java.lang.String)>("java.net.URL");

        <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$net$URL> = $r6;

        goto label2;

     label1:
        $r6 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$net$URL>;

     label2:
        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object get(java.lang.Class,java.lang.String,java.lang.Object)>($r6, r2, r3);

        $r5 = (java.net.URL) $r4;

        return $r5;
    }

    public java.util.List getURLList(java.lang.String)
    {
        java.util.List $r3;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.List getURLList(java.lang.String,java.util.List)>(r1, $r2);

        return $r3;
    }

    public java.util.List getURLList(java.lang.String, java.util.List)
    {
        java.util.List r3, $r4;
        java.lang.Class $r1, $r5;
        java.lang.String r2;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.List;

        $r1 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$net$URL>;

        if $r1 != null goto label1;

        $r5 = staticinvoke <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$(java.lang.String)>("java.net.URL");

        <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$net$URL> = $r5;

        goto label2;

     label1:
        $r5 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$net$URL>;

     label2:
        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.List getList(java.lang.Class,java.lang.String,java.util.List)>($r5, r2, r3);

        return $r4;
    }

    public java.net.URL[] getURLArray(java.lang.String)
    {
        java.net.URL[] $r2, $r3;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = newarray (java.net.URL)[0];

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.net.URL[] getURLArray(java.lang.String,java.net.URL[])>(r1, $r2);

        return $r3;
    }

    public java.net.URL[] getURLArray(java.lang.String, java.net.URL[])
    {
        java.net.URL[] r3, $r5;
        java.lang.Class $r1, $r6;
        java.lang.Object $r4;
        java.lang.String r2;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.net.URL[];

        $r1 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$net$URL>;

        if $r1 != null goto label1;

        $r6 = staticinvoke <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$(java.lang.String)>("java.net.URL");

        <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$net$URL> = $r6;

        goto label2;

     label1:
        $r6 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$net$URL>;

     label2:
        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object getArray(java.lang.Class,java.lang.String,java.lang.Object)>($r6, r2, r3);

        $r5 = (java.net.URL[]) $r4;

        return $r5;
    }

    public java.util.Date getDate(java.lang.String)
    {
        java.util.Date $r4;
        java.lang.Class $r1, $r5;
        java.lang.Object $r3;
        java.lang.String r2;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r2 := @parameter0: java.lang.String;

        $r1 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$util$Date>;

        if $r1 != null goto label1;

        $r5 = staticinvoke <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$(java.lang.String)>("java.util.Date");

        <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$util$Date> = $r5;

        goto label2;

     label1:
        $r5 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$util$Date>;

     label2:
        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object get(java.lang.Class,java.lang.String)>($r5, r2);

        $r4 = (java.util.Date) $r3;

        return $r4;
    }

    public java.util.Date getDate(java.lang.String, java.lang.String)
    {
        java.util.Date $r3;
        java.lang.StringBuffer $r5, $r6, $r7, $r8;
        java.lang.String r1, r2, $r9;
        java.util.NoSuchElementException $r4;
        org.apache.commons.configuration.DataConfiguration r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.Date getDate(java.lang.String,java.util.Date,java.lang.String)>(r1, null, r2);

        if $r3 == null goto label1;

        return $r3;

     label1:
        $z0 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: boolean isThrowExceptionOnMissing()>();

        if $z0 == 0 goto label2;

        $r4 = new java.util.NoSuchElementException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' doesn\'t map to an existing object");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label2:
        return null;
    }

    public java.util.Date getDate(java.lang.String, java.util.Date)
    {
        java.util.Date r2, $r4;
        java.lang.String r1, $r3;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Date;

        $r3 = specialinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.String getDefaultDateFormat()>();

        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.Date getDate(java.lang.String,java.util.Date,java.lang.String)>(r1, r2, $r3);

        return $r4;
    }

    public java.util.Date getDate(java.lang.String, java.util.Date, java.lang.String)
    {
        java.util.Date $r5, r6;
        org.apache.commons.configuration.ConversionException $r7, $r8;
        java.lang.StringBuffer $r9, $r10, $r11, $r12;
        java.lang.Object $r2, $r3;
        java.lang.String r1, r4, $r13;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: java.util.Date;

        r4 := @parameter2: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object resolveContainerStore(java.lang.String)>(r1);

        if $r2 != null goto label1;

        return r6;

     label1:
        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object interpolate(java.lang.Object)>($r2);

        $r5 = staticinvoke <org.apache.commons.configuration.PropertyConverter: java.util.Date toDate(java.lang.Object,java.lang.String)>($r3, r4);

     label2:
        return $r5;

     label3:
        $r7 := @caughtexception;

        $r8 = new org.apache.commons.configuration.ConversionException;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' doesn\'t map to a Date");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r8.<org.apache.commons.configuration.ConversionException: void <init>(java.lang.String,java.lang.Throwable)>($r13, $r7);

        throw $r8;

        catch org.apache.commons.configuration.ConversionException from label1 to label2 with label3;
    }

    public java.util.List getDateList(java.lang.String)
    {
        java.util.List $r3;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.List getDateList(java.lang.String,java.util.List)>(r1, $r2);

        return $r3;
    }

    public java.util.List getDateList(java.lang.String, java.lang.String)
    {
        java.util.List $r4;
        java.lang.String r1, r3;
        org.apache.commons.configuration.DataConfiguration r0;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.List getDateList(java.lang.String,java.util.List,java.lang.String)>(r1, $r2, r3);

        return $r4;
    }

    public java.util.List getDateList(java.lang.String, java.util.List)
    {
        java.util.List r2, $r4;
        java.lang.String r1, $r3;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        $r3 = specialinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.String getDefaultDateFormat()>();

        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.List getDateList(java.lang.String,java.util.List,java.lang.String)>(r1, r2, $r3);

        return $r4;
    }

    public java.util.List getDateList(java.lang.String, java.util.List, java.lang.String)
    {
        java.util.Date $r8, $r13, $r17;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Collection r27;
        java.util.List r3, r26;
        java.util.ArrayList $r5, $r9, $r14;
        org.apache.commons.configuration.ConversionException $r19, $r20;
        java.lang.StringBuffer $r21, $r22, $r23, $r24;
        int $i0, i1;
        java.lang.String r1, r7, $r18, $r25;
        org.apache.commons.configuration.DataConfiguration r0;
        java.util.Iterator $r10;
        java.lang.Object $r2, $r6, $r11, $r12, $r15, $r16;
        java.lang.Class $r4;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.List;

        r7 := @parameter2: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object getProperty(java.lang.String)>(r1);

        if $r2 == null goto label01;

        $z0 = $r2 instanceof java.lang.String;

        if $z0 == 0 goto label02;

        $r18 = (java.lang.String) $r2;

        $z4 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r18);

        if $z4 == 0 goto label02;

     label01:
        r26 = r3;

        goto label11;

     label02:
        $r4 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke $r4.<java.lang.Class: boolean isArray()>();

        if $z1 == 0 goto label05;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r26 = $r14;

        $i0 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>($r2);

        i1 = 0;

     label03:
        if i1 >= $i0 goto label04;

        $r15 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>($r2, i1);

        $r16 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object interpolate(java.lang.Object)>($r15);

        $r17 = staticinvoke <org.apache.commons.configuration.PropertyConverter: java.util.Date toDate(java.lang.Object,java.lang.String)>($r16, r7);

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r17);

        i1 = i1 + 1;

        goto label03;

     label04:
        goto label11;

     label05:
        $z2 = $r2 instanceof java.util.Collection;

        if $z2 == 0 goto label08;

        r27 = (java.util.Collection) $r2;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r26 = $r9;

        $r10 = interfaceinvoke r27.<java.util.Collection: java.util.Iterator iterator()>();

     label06:
        $z3 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label07;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r12 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object interpolate(java.lang.Object)>($r11);

        $r13 = staticinvoke <org.apache.commons.configuration.PropertyConverter: java.util.Date toDate(java.lang.Object,java.lang.String)>($r12, r7);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r13);

        goto label06;

     label07:
        goto label11;

     label08:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r26 = $r5;

        $r6 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object interpolate(java.lang.Object)>($r2);

        $r8 = staticinvoke <org.apache.commons.configuration.PropertyConverter: java.util.Date toDate(java.lang.Object,java.lang.String)>($r6, r7);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r8);

     label09:
        goto label11;

     label10:
        $r19 := @caughtexception;

        $r20 = new org.apache.commons.configuration.ConversionException;

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' doesn\'t map to a list of Dates");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r20.<org.apache.commons.configuration.ConversionException: void <init>(java.lang.String,java.lang.Throwable)>($r25, $r19);

        throw $r20;

     label11:
        return r26;

        catch org.apache.commons.configuration.ConversionException from label08 to label09 with label10;
    }

    public java.util.Date[] getDateArray(java.lang.String)
    {
        java.util.Date[] $r2, $r3;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = newarray (java.util.Date)[0];

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.Date[] getDateArray(java.lang.String,java.util.Date[])>(r1, $r2);

        return $r3;
    }

    public java.util.Date[] getDateArray(java.lang.String, java.lang.String)
    {
        java.util.Date[] $r3, $r4;
        java.lang.String r1, r2;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = newarray (java.util.Date)[0];

        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.Date[] getDateArray(java.lang.String,java.util.Date[],java.lang.String)>(r1, $r3, r2);

        return $r4;
    }

    public java.util.Date[] getDateArray(java.lang.String, java.util.Date[])
    {
        java.util.Date[] r2, $r4;
        java.lang.String r1, $r3;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Date[];

        $r3 = specialinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.String getDefaultDateFormat()>();

        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.Date[] getDateArray(java.lang.String,java.util.Date[],java.lang.String)>(r1, r2, $r3);

        return $r4;
    }

    public java.util.Date[] getDateArray(java.lang.String, java.util.Date[], java.lang.String)
    {
        java.lang.Object[] $r5;
        java.util.List $r3;
        int $i0;
        java.util.Date[] $r4, $r6, r7;
        java.lang.String r1, r2;
        org.apache.commons.configuration.DataConfiguration r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        r7 := @parameter1: java.util.Date[];

        r2 := @parameter2: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.List getDateList(java.lang.String,java.lang.String)>(r1, r2);

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return r7;

     label1:
        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r4 = newarray (java.util.Date)[$i0];

        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (java.util.Date[]) $r5;

        return $r6;
    }

    public java.util.Calendar getCalendar(java.lang.String)
    {
        java.util.Calendar $r4;
        java.lang.Class $r1, $r5;
        java.lang.Object $r3;
        java.lang.String r2;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r2 := @parameter0: java.lang.String;

        $r1 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$util$Calendar>;

        if $r1 != null goto label1;

        $r5 = staticinvoke <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$(java.lang.String)>("java.util.Calendar");

        <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$util$Calendar> = $r5;

        goto label2;

     label1:
        $r5 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$util$Calendar>;

     label2:
        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object get(java.lang.Class,java.lang.String)>($r5, r2);

        $r4 = (java.util.Calendar) $r3;

        return $r4;
    }

    public java.util.Calendar getCalendar(java.lang.String, java.lang.String)
    {
        java.util.Calendar $r3;
        java.lang.StringBuffer $r5, $r6, $r7, $r8;
        java.lang.String r1, r2, $r9;
        java.util.NoSuchElementException $r4;
        org.apache.commons.configuration.DataConfiguration r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.Calendar getCalendar(java.lang.String,java.util.Calendar,java.lang.String)>(r1, null, r2);

        if $r3 == null goto label1;

        return $r3;

     label1:
        $z0 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: boolean isThrowExceptionOnMissing()>();

        if $z0 == 0 goto label2;

        $r4 = new java.util.NoSuchElementException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' doesn\'t map to an existing object");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label2:
        return null;
    }

    public java.util.Calendar getCalendar(java.lang.String, java.util.Calendar)
    {
        java.util.Calendar r2, $r4;
        java.lang.String r1, $r3;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Calendar;

        $r3 = specialinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.String getDefaultDateFormat()>();

        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.Calendar getCalendar(java.lang.String,java.util.Calendar,java.lang.String)>(r1, r2, $r3);

        return $r4;
    }

    public java.util.Calendar getCalendar(java.lang.String, java.util.Calendar, java.lang.String)
    {
        org.apache.commons.configuration.ConversionException $r7, $r8;
        java.util.Calendar $r5, r6;
        java.lang.StringBuffer $r9, $r10, $r11, $r12;
        java.lang.Object $r2, $r3;
        java.lang.String r1, r4, $r13;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: java.util.Calendar;

        r4 := @parameter2: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object resolveContainerStore(java.lang.String)>(r1);

        if $r2 != null goto label1;

        return r6;

     label1:
        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object interpolate(java.lang.Object)>($r2);

        $r5 = staticinvoke <org.apache.commons.configuration.PropertyConverter: java.util.Calendar toCalendar(java.lang.Object,java.lang.String)>($r3, r4);

     label2:
        return $r5;

     label3:
        $r7 := @caughtexception;

        $r8 = new org.apache.commons.configuration.ConversionException;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' doesn\'t map to a Calendar");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r8.<org.apache.commons.configuration.ConversionException: void <init>(java.lang.String,java.lang.Throwable)>($r13, $r7);

        throw $r8;

        catch org.apache.commons.configuration.ConversionException from label1 to label2 with label3;
    }

    public java.util.List getCalendarList(java.lang.String)
    {
        java.util.List $r3;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.List getCalendarList(java.lang.String,java.util.List)>(r1, $r2);

        return $r3;
    }

    public java.util.List getCalendarList(java.lang.String, java.lang.String)
    {
        java.util.List $r4;
        java.lang.String r1, r3;
        org.apache.commons.configuration.DataConfiguration r0;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.List getCalendarList(java.lang.String,java.util.List,java.lang.String)>(r1, $r2, r3);

        return $r4;
    }

    public java.util.List getCalendarList(java.lang.String, java.util.List)
    {
        java.util.List r2, $r4;
        java.lang.String r1, $r3;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        $r3 = specialinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.String getDefaultDateFormat()>();

        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.List getCalendarList(java.lang.String,java.util.List,java.lang.String)>(r1, r2, $r3);

        return $r4;
    }

    public java.util.List getCalendarList(java.lang.String, java.util.List, java.lang.String)
    {
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Collection r27;
        java.util.List r3, r26;
        java.util.ArrayList $r5, $r9, $r14;
        org.apache.commons.configuration.ConversionException $r19, $r20;
        java.util.Calendar $r8, $r13, $r17;
        java.lang.StringBuffer $r21, $r22, $r23, $r24;
        int $i0, i1;
        java.lang.String r1, r7, $r18, $r25;
        org.apache.commons.configuration.DataConfiguration r0;
        java.util.Iterator $r10;
        java.lang.Object $r2, $r6, $r11, $r12, $r15, $r16;
        java.lang.Class $r4;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.List;

        r7 := @parameter2: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object getProperty(java.lang.String)>(r1);

        if $r2 == null goto label01;

        $z0 = $r2 instanceof java.lang.String;

        if $z0 == 0 goto label02;

        $r18 = (java.lang.String) $r2;

        $z4 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r18);

        if $z4 == 0 goto label02;

     label01:
        r26 = r3;

        goto label11;

     label02:
        $r4 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke $r4.<java.lang.Class: boolean isArray()>();

        if $z1 == 0 goto label05;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r26 = $r14;

        $i0 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>($r2);

        i1 = 0;

     label03:
        if i1 >= $i0 goto label04;

        $r15 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>($r2, i1);

        $r16 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object interpolate(java.lang.Object)>($r15);

        $r17 = staticinvoke <org.apache.commons.configuration.PropertyConverter: java.util.Calendar toCalendar(java.lang.Object,java.lang.String)>($r16, r7);

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r17);

        i1 = i1 + 1;

        goto label03;

     label04:
        goto label11;

     label05:
        $z2 = $r2 instanceof java.util.Collection;

        if $z2 == 0 goto label08;

        r27 = (java.util.Collection) $r2;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r26 = $r9;

        $r10 = interfaceinvoke r27.<java.util.Collection: java.util.Iterator iterator()>();

     label06:
        $z3 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label07;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r12 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object interpolate(java.lang.Object)>($r11);

        $r13 = staticinvoke <org.apache.commons.configuration.PropertyConverter: java.util.Calendar toCalendar(java.lang.Object,java.lang.String)>($r12, r7);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r13);

        goto label06;

     label07:
        goto label11;

     label08:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r26 = $r5;

        $r6 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object interpolate(java.lang.Object)>($r2);

        $r8 = staticinvoke <org.apache.commons.configuration.PropertyConverter: java.util.Calendar toCalendar(java.lang.Object,java.lang.String)>($r6, r7);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r8);

     label09:
        goto label11;

     label10:
        $r19 := @caughtexception;

        $r20 = new org.apache.commons.configuration.ConversionException;

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' doesn\'t map to a list of Calendars");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r20.<org.apache.commons.configuration.ConversionException: void <init>(java.lang.String,java.lang.Throwable)>($r25, $r19);

        throw $r20;

     label11:
        return r26;

        catch org.apache.commons.configuration.ConversionException from label08 to label09 with label10;
    }

    public java.util.Calendar[] getCalendarArray(java.lang.String)
    {
        java.util.Calendar[] $r2, $r3;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = newarray (java.util.Calendar)[0];

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.Calendar[] getCalendarArray(java.lang.String,java.util.Calendar[])>(r1, $r2);

        return $r3;
    }

    public java.util.Calendar[] getCalendarArray(java.lang.String, java.lang.String)
    {
        java.util.Calendar[] $r3, $r4;
        java.lang.String r1, r2;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = newarray (java.util.Calendar)[0];

        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.Calendar[] getCalendarArray(java.lang.String,java.util.Calendar[],java.lang.String)>(r1, $r3, r2);

        return $r4;
    }

    public java.util.Calendar[] getCalendarArray(java.lang.String, java.util.Calendar[])
    {
        java.util.Calendar[] r2, $r4;
        java.lang.String r1, $r3;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Calendar[];

        $r3 = specialinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.String getDefaultDateFormat()>();

        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.Calendar[] getCalendarArray(java.lang.String,java.util.Calendar[],java.lang.String)>(r1, r2, $r3);

        return $r4;
    }

    public java.util.Calendar[] getCalendarArray(java.lang.String, java.util.Calendar[], java.lang.String)
    {
        java.lang.Object[] $r5;
        java.util.Calendar[] $r4, $r6, r7;
        java.util.List $r3;
        int $i0;
        java.lang.String r1, r2;
        org.apache.commons.configuration.DataConfiguration r0;
        boolean $z0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        r7 := @parameter1: java.util.Calendar[];

        r2 := @parameter2: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.List getCalendarList(java.lang.String,java.lang.String)>(r1, r2);

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return r7;

     label1:
        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r4 = newarray (java.util.Calendar)[$i0];

        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (java.util.Calendar[]) $r5;

        return $r6;
    }

    private java.lang.String getDefaultDateFormat()
    {
        java.lang.String $r1;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        $r1 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.String getString(java.lang.String,java.lang.String)>("org.apache.commons.configuration.format.date", "yyyy-MM-dd HH:mm:ss");

        return $r1;
    }

    public java.util.Locale getLocale(java.lang.String)
    {
        java.util.Locale $r4;
        java.lang.Class $r1, $r5;
        java.lang.Object $r3;
        java.lang.String r2;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r2 := @parameter0: java.lang.String;

        $r1 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$util$Locale>;

        if $r1 != null goto label1;

        $r5 = staticinvoke <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$(java.lang.String)>("java.util.Locale");

        <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$util$Locale> = $r5;

        goto label2;

     label1:
        $r5 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$util$Locale>;

     label2:
        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object get(java.lang.Class,java.lang.String)>($r5, r2);

        $r4 = (java.util.Locale) $r3;

        return $r4;
    }

    public java.util.Locale getLocale(java.lang.String, java.util.Locale)
    {
        java.util.Locale r3, $r5;
        java.lang.Class $r1, $r6;
        java.lang.Object $r4;
        java.lang.String r2;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.Locale;

        $r1 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$util$Locale>;

        if $r1 != null goto label1;

        $r6 = staticinvoke <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$(java.lang.String)>("java.util.Locale");

        <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$util$Locale> = $r6;

        goto label2;

     label1:
        $r6 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$util$Locale>;

     label2:
        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object get(java.lang.Class,java.lang.String,java.lang.Object)>($r6, r2, r3);

        $r5 = (java.util.Locale) $r4;

        return $r5;
    }

    public java.util.List getLocaleList(java.lang.String)
    {
        java.util.List $r3;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.List getLocaleList(java.lang.String,java.util.List)>(r1, $r2);

        return $r3;
    }

    public java.util.List getLocaleList(java.lang.String, java.util.List)
    {
        java.util.List r3, $r4;
        java.lang.Class $r1, $r5;
        java.lang.String r2;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.List;

        $r1 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$util$Locale>;

        if $r1 != null goto label1;

        $r5 = staticinvoke <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$(java.lang.String)>("java.util.Locale");

        <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$util$Locale> = $r5;

        goto label2;

     label1:
        $r5 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$util$Locale>;

     label2:
        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.List getList(java.lang.Class,java.lang.String,java.util.List)>($r5, r2, r3);

        return $r4;
    }

    public java.util.Locale[] getLocaleArray(java.lang.String)
    {
        java.util.Locale[] $r2, $r3;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = newarray (java.util.Locale)[0];

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.Locale[] getLocaleArray(java.lang.String,java.util.Locale[])>(r1, $r2);

        return $r3;
    }

    public java.util.Locale[] getLocaleArray(java.lang.String, java.util.Locale[])
    {
        java.util.Locale[] r3, $r5;
        java.lang.Class $r1, $r6;
        java.lang.Object $r4;
        java.lang.String r2;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.Locale[];

        $r1 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$util$Locale>;

        if $r1 != null goto label1;

        $r6 = staticinvoke <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$(java.lang.String)>("java.util.Locale");

        <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$util$Locale> = $r6;

        goto label2;

     label1:
        $r6 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$util$Locale>;

     label2:
        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object getArray(java.lang.Class,java.lang.String,java.lang.Object)>($r6, r2, r3);

        $r5 = (java.util.Locale[]) $r4;

        return $r5;
    }

    public java.awt.Color getColor(java.lang.String)
    {
        java.awt.Color $r4;
        java.lang.Class $r1, $r5;
        java.lang.Object $r3;
        java.lang.String r2;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r2 := @parameter0: java.lang.String;

        $r1 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$awt$Color>;

        if $r1 != null goto label1;

        $r5 = staticinvoke <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$(java.lang.String)>("java.awt.Color");

        <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$awt$Color> = $r5;

        goto label2;

     label1:
        $r5 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$awt$Color>;

     label2:
        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object get(java.lang.Class,java.lang.String)>($r5, r2);

        $r4 = (java.awt.Color) $r3;

        return $r4;
    }

    public java.awt.Color getColor(java.lang.String, java.awt.Color)
    {
        java.awt.Color r3, $r5;
        java.lang.Class $r1, $r6;
        java.lang.Object $r4;
        java.lang.String r2;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.awt.Color;

        $r1 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$awt$Color>;

        if $r1 != null goto label1;

        $r6 = staticinvoke <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$(java.lang.String)>("java.awt.Color");

        <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$awt$Color> = $r6;

        goto label2;

     label1:
        $r6 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$awt$Color>;

     label2:
        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object get(java.lang.Class,java.lang.String,java.lang.Object)>($r6, r2, r3);

        $r5 = (java.awt.Color) $r4;

        return $r5;
    }

    public java.util.List getColorList(java.lang.String)
    {
        java.util.List $r3;
        java.lang.String r1;
        org.apache.commons.configuration.DataConfiguration r0;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.List getColorList(java.lang.String,java.util.List)>(r1, $r2);

        return $r3;
    }

    public java.util.List getColorList(java.lang.String, java.util.List)
    {
        java.util.List r3, $r4;
        java.lang.Class $r1, $r5;
        java.lang.String r2;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.List;

        $r1 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$awt$Color>;

        if $r1 != null goto label1;

        $r5 = staticinvoke <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$(java.lang.String)>("java.awt.Color");

        <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$awt$Color> = $r5;

        goto label2;

     label1:
        $r5 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$awt$Color>;

     label2:
        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.util.List getList(java.lang.Class,java.lang.String,java.util.List)>($r5, r2, r3);

        return $r4;
    }

    public java.awt.Color[] getColorArray(java.lang.String)
    {
        java.lang.String r1;
        java.awt.Color[] $r2, $r3;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r1 := @parameter0: java.lang.String;

        $r2 = newarray (java.awt.Color)[0];

        $r3 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.awt.Color[] getColorArray(java.lang.String,java.awt.Color[])>(r1, $r2);

        return $r3;
    }

    public java.awt.Color[] getColorArray(java.lang.String, java.awt.Color[])
    {
        java.lang.Class $r1, $r6;
        java.lang.Object $r4;
        java.lang.String r2;
        java.awt.Color[] r3, $r5;
        org.apache.commons.configuration.DataConfiguration r0;

        r0 := @this: org.apache.commons.configuration.DataConfiguration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.awt.Color[];

        $r1 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$awt$Color>;

        if $r1 != null goto label1;

        $r6 = staticinvoke <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$(java.lang.String)>("java.awt.Color");

        <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$awt$Color> = $r6;

        goto label2;

     label1:
        $r6 = <org.apache.commons.configuration.DataConfiguration: java.lang.Class class$java$awt$Color>;

     label2:
        $r4 = virtualinvoke r0.<org.apache.commons.configuration.DataConfiguration: java.lang.Object getArray(java.lang.Class,java.lang.String,java.lang.Object)>($r6, r2, r3);

        $r5 = (java.awt.Color[]) $r4;

        return $r5;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <org.apache.commons.configuration.DataConfiguration: long serialVersionUID> = -69011336405718640L;

        <org.apache.commons.configuration.DataConfiguration: java.lang.String DEFAULT_DATE_FORMAT> = "yyyy-MM-dd HH:mm:ss";

        <org.apache.commons.configuration.DataConfiguration: java.lang.String DATE_FORMAT_KEY> = "org.apache.commons.configuration.format.date";

        return;
    }
}
