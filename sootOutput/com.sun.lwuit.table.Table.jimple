public class com.sun.lwuit.table.Table extends com.sun.lwuit.Container
{
    private com.sun.lwuit.table.TableModel model;
    private com.sun.lwuit.table.Table$Listener listener;
    private boolean drawBorder;
    private boolean includeHeader;
    private int titleAlignment;
    private int cellAlignment;
    private boolean potentiallyDirtyModel;

    public void <init>(com.sun.lwuit.table.TableModel)
    {
        com.sun.lwuit.table.Table r0;
        com.sun.lwuit.table.TableModel r2;
        com.sun.lwuit.table.Table$Listener $r1;

        r0 := @this: com.sun.lwuit.table.Table;

        r2 := @parameter0: com.sun.lwuit.table.TableModel;

        specialinvoke r0.<com.sun.lwuit.Container: void <init>()>();

        $r1 = new com.sun.lwuit.table.Table$Listener;

        specialinvoke $r1.<com.sun.lwuit.table.Table$Listener: void <init>(com.sun.lwuit.table.Table)>(r0);

        r0.<com.sun.lwuit.table.Table: com.sun.lwuit.table.Table$Listener listener> = $r1;

        r0.<com.sun.lwuit.table.Table: boolean drawBorder> = 1;

        r0.<com.sun.lwuit.table.Table: boolean includeHeader> = 1;

        r0.<com.sun.lwuit.table.Table: int titleAlignment> = 4;

        r0.<com.sun.lwuit.table.Table: int cellAlignment> = 1;

        r0.<com.sun.lwuit.table.Table: com.sun.lwuit.table.TableModel model> = r2;

        specialinvoke r0.<com.sun.lwuit.table.Table: void updateModel()>();

        virtualinvoke r0.<com.sun.lwuit.table.Table: void setUIID(java.lang.String)>("Table");

        return;
    }

    public void <init>(com.sun.lwuit.table.TableModel, boolean)
    {
        com.sun.lwuit.table.Table r0;
        com.sun.lwuit.table.TableModel r2;
        com.sun.lwuit.table.Table$Listener $r1;
        boolean z0;

        r0 := @this: com.sun.lwuit.table.Table;

        r2 := @parameter0: com.sun.lwuit.table.TableModel;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.sun.lwuit.Container: void <init>()>();

        $r1 = new com.sun.lwuit.table.Table$Listener;

        specialinvoke $r1.<com.sun.lwuit.table.Table$Listener: void <init>(com.sun.lwuit.table.Table)>(r0);

        r0.<com.sun.lwuit.table.Table: com.sun.lwuit.table.Table$Listener listener> = $r1;

        r0.<com.sun.lwuit.table.Table: boolean drawBorder> = 1;

        r0.<com.sun.lwuit.table.Table: boolean includeHeader> = 1;

        r0.<com.sun.lwuit.table.Table: int titleAlignment> = 4;

        r0.<com.sun.lwuit.table.Table: int cellAlignment> = 1;

        virtualinvoke r0.<com.sun.lwuit.table.Table: void setUIID(java.lang.String)>("Table");

        r0.<com.sun.lwuit.table.Table: boolean includeHeader> = z0;

        r0.<com.sun.lwuit.table.Table: com.sun.lwuit.table.TableModel model> = r2;

        specialinvoke r0.<com.sun.lwuit.table.Table: void updateModel()>();

        return;
    }

    public int getSelectedRow()
    {
        com.sun.lwuit.Component $r2;
        com.sun.lwuit.table.Table r0;
        com.sun.lwuit.Form $r1;
        int $i0, $i2;

        r0 := @this: com.sun.lwuit.table.Table;

        $r1 = virtualinvoke r0.<com.sun.lwuit.table.Table: com.sun.lwuit.Form getComponentForm()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<com.sun.lwuit.Form: com.sun.lwuit.Component getFocused()>();

        if $r2 == null goto label1;

        $i0 = virtualinvoke r0.<com.sun.lwuit.table.Table: int getCellRow(com.sun.lwuit.Component)>($r2);

        return $i0;

     label1:
        $i2 = (int) -1;

        return $i2;
    }

    public int getSelectedColumn()
    {
        com.sun.lwuit.Component $r2;
        com.sun.lwuit.table.Table r0;
        com.sun.lwuit.Form $r1;
        int $i0, $i2;

        r0 := @this: com.sun.lwuit.table.Table;

        $r1 = virtualinvoke r0.<com.sun.lwuit.table.Table: com.sun.lwuit.Form getComponentForm()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<com.sun.lwuit.Form: com.sun.lwuit.Component getFocused()>();

        if $r2 == null goto label1;

        $i0 = virtualinvoke r0.<com.sun.lwuit.table.Table: int getCellColumn(com.sun.lwuit.Component)>($r2);

        return $i0;

     label1:
        $i2 = (int) -1;

        return $i2;
    }

    private void updateModel()
    {
        com.sun.lwuit.table.TableModel $r3, $r4, $r6, $r11, $r13, $r14, $r19, $r20;
        com.sun.lwuit.table.TableLayout$Constraint $r8, $r17;
        com.sun.lwuit.table.TableLayout $r10, $r21, $r22;
        com.sun.lwuit.Component $r7, $r16, $r18;
        com.sun.lwuit.layouts.Layout $r9;
        boolean $z0, $z1;
        com.sun.lwuit.table.Table r0;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, $i7, i8, i9, $i10, i11, $i13, $i15, $i17, $i19;
        java.lang.String $r15;
        com.sun.lwuit.Form $r1;
        java.lang.Object $r5;

        r0 := @this: com.sun.lwuit.table.Table;

        $i13 = (int) -1;

        i5 = $i13;

        $i15 = (int) -1;

        i6 = $i15;

        $r1 = virtualinvoke r0.<com.sun.lwuit.table.Table: com.sun.lwuit.Form getComponentForm()>();

        if $r1 == null goto label01;

        $r18 = virtualinvoke $r1.<com.sun.lwuit.Form: com.sun.lwuit.Component getFocused()>();

        if $r18 == null goto label01;

        i5 = virtualinvoke r0.<com.sun.lwuit.table.Table: int getCellRow(com.sun.lwuit.Component)>($r18);

        i6 = virtualinvoke r0.<com.sun.lwuit.table.Table: int getCellColumn(com.sun.lwuit.Component)>($r18);

     label01:
        virtualinvoke r0.<com.sun.lwuit.table.Table: void removeAll()>();

        $r19 = r0.<com.sun.lwuit.table.Table: com.sun.lwuit.table.TableModel model>;

        $i7 = interfaceinvoke $r19.<com.sun.lwuit.table.TableModel: int getColumnCount()>();

        $z1 = r0.<com.sun.lwuit.table.Table: boolean includeHeader>;

        if $z1 == 0 goto label04;

        $r21 = new com.sun.lwuit.table.TableLayout;

        $r13 = r0.<com.sun.lwuit.table.Table: com.sun.lwuit.table.TableModel model>;

        $i3 = interfaceinvoke $r13.<com.sun.lwuit.table.TableModel: int getRowCount()>();

        $i4 = $i3 + 1;

        specialinvoke $r21.<com.sun.lwuit.table.TableLayout: void <init>(int,int)>($i4, $i7);

        virtualinvoke r0.<com.sun.lwuit.table.Table: void setLayout(com.sun.lwuit.layouts.Layout)>($r21);

        i8 = 0;

     label02:
        if i8 >= $i7 goto label03;

        $r14 = r0.<com.sun.lwuit.table.Table: com.sun.lwuit.table.TableModel model>;

        $r15 = interfaceinvoke $r14.<com.sun.lwuit.table.TableModel: java.lang.String getColumnName(int)>(i8);

        $i17 = (int) -1;

        $r16 = specialinvoke r0.<com.sun.lwuit.table.Table: com.sun.lwuit.Component createCellImpl(java.lang.Object,int,int,boolean)>($r15, $i17, i8, 0);

        $i19 = (int) -1;

        $r17 = virtualinvoke r0.<com.sun.lwuit.table.Table: com.sun.lwuit.table.TableLayout$Constraint createCellConstraint(java.lang.Object,int,int)>($r15, $i19, i8);

        virtualinvoke r0.<com.sun.lwuit.table.Table: void addComponent(java.lang.Object,com.sun.lwuit.Component)>($r17, $r16);

        i8 = i8 + 1;

        goto label02;

     label03:
        goto label05;

     label04:
        $r22 = new com.sun.lwuit.table.TableLayout;

        $r3 = r0.<com.sun.lwuit.table.Table: com.sun.lwuit.table.TableModel model>;

        $i0 = interfaceinvoke $r3.<com.sun.lwuit.table.TableModel: int getRowCount()>();

        specialinvoke $r22.<com.sun.lwuit.table.TableLayout: void <init>(int,int)>($i0, $i7);

        virtualinvoke r0.<com.sun.lwuit.table.Table: void setLayout(com.sun.lwuit.layouts.Layout)>($r22);

     label05:
        i9 = 0;

     label06:
        $r20 = r0.<com.sun.lwuit.table.Table: com.sun.lwuit.table.TableModel model>;

        $i10 = interfaceinvoke $r20.<com.sun.lwuit.table.TableModel: int getRowCount()>();

        if i9 >= $i10 goto label11;

        i11 = 0;

     label07:
        if i11 >= $i7 goto label10;

        $r4 = r0.<com.sun.lwuit.table.Table: com.sun.lwuit.table.TableModel model>;

        $r5 = interfaceinvoke $r4.<com.sun.lwuit.table.TableModel: java.lang.Object getValueAt(int,int)>(i9, i11);

        if $r5 == null goto label09;

        $r6 = r0.<com.sun.lwuit.table.Table: com.sun.lwuit.table.TableModel model>;

        $z0 = interfaceinvoke $r6.<com.sun.lwuit.table.TableModel: boolean isCellEditable(int,int)>(i9, i11);

        $r7 = specialinvoke r0.<com.sun.lwuit.table.Table: com.sun.lwuit.Component createCellImpl(java.lang.Object,int,int,boolean)>($r5, i9, i11, $z0);

        if $r7 == null goto label09;

        $r8 = virtualinvoke r0.<com.sun.lwuit.table.Table: com.sun.lwuit.table.TableLayout$Constraint createCellConstraint(java.lang.Object,int,int)>($r5, i9, i11);

        $r9 = virtualinvoke r0.<com.sun.lwuit.table.Table: com.sun.lwuit.layouts.Layout getLayout()>();

        $r10 = (com.sun.lwuit.table.TableLayout) $r9;

        $i1 = virtualinvoke $r10.<com.sun.lwuit.table.TableLayout: int getNextRow()>();

        $r11 = r0.<com.sun.lwuit.table.Table: com.sun.lwuit.table.TableModel model>;

        $i2 = interfaceinvoke $r11.<com.sun.lwuit.table.TableModel: int getRowCount()>();

        if $i1 <= $i2 goto label08;

        return;

     label08:
        virtualinvoke r0.<com.sun.lwuit.table.Table: void addComponent(java.lang.Object,com.sun.lwuit.Component)>($r8, $r7);

        if i9 != i5 goto label09;

        if i11 != i6 goto label09;

        virtualinvoke $r7.<com.sun.lwuit.Component: void requestFocus()>();

     label09:
        i11 = i11 + 1;

        goto label07;

     label10:
        i9 = i9 + 1;

        goto label06;

     label11:
        return;
    }

    protected void paintGlass(com.sun.lwuit.Graphics)
    {
        com.sun.lwuit.plaf.Style $r4;
        com.sun.lwuit.layouts.Layout $r5;
        com.sun.lwuit.table.Table r0;
        com.sun.lwuit.Graphics r1;
        com.sun.lwuit.table.TableModel $r2, $r3, $r8, $r9;
        com.sun.lwuit.table.TableLayout $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.sun.lwuit.geom.Dimension $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, i52, i53, i54, i55, i56, i57, i58, i59, i60, i61;

        r0 := @this: com.sun.lwuit.table.Table;

        r1 := @parameter0: com.sun.lwuit.Graphics;

        $z0 = r0.<com.sun.lwuit.table.Table: boolean drawBorder>;

        if $z0 == 0 goto label24;

        $i0 = virtualinvoke r0.<com.sun.lwuit.table.Table: int getAbsoluteX()>();

        $i1 = virtualinvoke r0.<com.sun.lwuit.table.Table: int getAbsoluteY()>();

        virtualinvoke r1.<com.sun.lwuit.Graphics: void translate(int,int)>($i0, $i1);

        $r2 = r0.<com.sun.lwuit.table.Table: com.sun.lwuit.table.TableModel model>;

        $i2 = interfaceinvoke $r2.<com.sun.lwuit.table.TableModel: int getRowCount()>();

        i52 = $i2;

        $r3 = r0.<com.sun.lwuit.table.Table: com.sun.lwuit.table.TableModel model>;

        $i3 = interfaceinvoke $r3.<com.sun.lwuit.table.TableModel: int getColumnCount()>();

        $z1 = r0.<com.sun.lwuit.table.Table: boolean includeHeader>;

        if $z1 == 0 goto label01;

        i52 = $i2 + 1;

     label01:
        $r4 = virtualinvoke r0.<com.sun.lwuit.table.Table: com.sun.lwuit.plaf.Style getStyle()>();

        $i4 = virtualinvoke $r4.<com.sun.lwuit.plaf.Style: int getFgColor()>();

        virtualinvoke r1.<com.sun.lwuit.Graphics: void setColor(int)>($i4);

        $r5 = virtualinvoke r0.<com.sun.lwuit.table.Table: com.sun.lwuit.layouts.Layout getLayout()>();

        $r10 = (com.sun.lwuit.table.TableLayout) $r5;

        $i5 = virtualinvoke r0.<com.sun.lwuit.table.Table: int getWidth()>();

        $r6 = virtualinvoke r0.<com.sun.lwuit.table.Table: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i6 = virtualinvoke $r6.<com.sun.lwuit.geom.Dimension: int getWidth()>();

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i6);

        $z2 = virtualinvoke $r10.<com.sun.lwuit.table.TableLayout: boolean hasVerticalSpanning()>();

        if $z2 == 0 goto label10;

        i53 = 0;

     label02:
        $i34 = i52 - 1;

        if i53 >= $i34 goto label09;

        i54 = 0;

     label03:
        if i54 >= $i3 goto label08;

        $i35 = virtualinvoke $r10.<com.sun.lwuit.table.TableLayout: int getCellVerticalSpan(int,int)>(i53, i54);

        $i36 = i53 + $i35;

        $i38 = $i36 - 1;

        $i37 = i52 - 1;

        if $i38 == $i37 goto label07;

        $z5 = virtualinvoke $r10.<com.sun.lwuit.table.TableLayout: boolean isCellSpannedThroughHorizontally(int,int)>(i53, i54);

        if $z5 == 0 goto label04;

        goto label07;

     label04:
        $i39 = virtualinvoke $r10.<com.sun.lwuit.table.TableLayout: int getColumnPosition(int)>(i54);

        $i40 = virtualinvoke $r10.<com.sun.lwuit.table.TableLayout: int getRowPosition(int)>(i53);

        $i41 = virtualinvoke $r10.<com.sun.lwuit.table.TableLayout: int getCellVerticalSpan(int,int)>(i53, i54);

        $i42 = i53 + $i41;

        $i43 = virtualinvoke $r10.<com.sun.lwuit.table.TableLayout: int getRowPosition(int)>($i42);

        i55 = $i43 - $i40;

        $r9 = virtualinvoke r0.<com.sun.lwuit.table.Table: com.sun.lwuit.table.TableModel getModel()>();

        $i44 = interfaceinvoke $r9.<com.sun.lwuit.table.TableModel: int getColumnCount()>();

        $i45 = $i44 - 1;

        if i54 >= $i45 goto label05;

        $i50 = i54 + 1;

        $i51 = virtualinvoke $r10.<com.sun.lwuit.table.TableLayout: int getColumnPosition(int)>($i50);

        i56 = $i51 - $i39;

        goto label06;

     label05:
        $i46 = virtualinvoke r0.<com.sun.lwuit.table.Table: int getWidth()>();

        i56 = $i46 - $i40;

     label06:
        $i49 = $i40 + i55;

        $i48 = $i39 + i56;

        $i47 = $i40 + i55;

        virtualinvoke r1.<com.sun.lwuit.Graphics: void drawLine(int,int,int,int)>($i39, $i49, $i48, $i47);

     label07:
        i54 = i54 + 1;

        goto label03;

     label08:
        i53 = i53 + 1;

        goto label02;

     label09:
        goto label12;

     label10:
        i57 = 1;

     label11:
        if i57 >= i52 goto label12;

        $i33 = virtualinvoke $r10.<com.sun.lwuit.table.TableLayout: int getRowPosition(int)>(i57);

        virtualinvoke r1.<com.sun.lwuit.Graphics: void drawLine(int,int,int,int)>(0, $i33, $i7, $i33);

        i57 = i57 + 1;

        goto label11;

     label12:
        $i8 = virtualinvoke r0.<com.sun.lwuit.table.Table: int getHeight()>();

        $r7 = virtualinvoke r0.<com.sun.lwuit.table.Table: com.sun.lwuit.geom.Dimension getScrollDimension()>();

        $i9 = virtualinvoke $r7.<com.sun.lwuit.geom.Dimension: int getHeight()>();

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>($i8, $i9);

        $z3 = virtualinvoke $r10.<com.sun.lwuit.table.TableLayout: boolean hasHorizontalSpanning()>();

        if $z3 == 0 goto label21;

        i58 = 0;

     label13:
        if i58 >= i52 goto label20;

        i59 = 0;

     label14:
        $i14 = $i3 - 1;

        if i59 >= $i14 goto label19;

        $i15 = virtualinvoke $r10.<com.sun.lwuit.table.TableLayout: int getCellHorizontalSpan(int,int)>(i58, i59);

        $i16 = i59 + $i15;

        $i18 = $i16 - 1;

        $i17 = $i3 - 1;

        if $i18 == $i17 goto label18;

        $z4 = virtualinvoke $r10.<com.sun.lwuit.table.TableLayout: boolean isCellSpannedThroughVertically(int,int)>(i58, i59);

        if $z4 == 0 goto label15;

        goto label18;

     label15:
        $i19 = virtualinvoke $r10.<com.sun.lwuit.table.TableLayout: int getColumnPosition(int)>(i59);

        $i20 = virtualinvoke $r10.<com.sun.lwuit.table.TableLayout: int getRowPosition(int)>(i58);

        $i21 = virtualinvoke $r10.<com.sun.lwuit.table.TableLayout: int getCellHorizontalSpan(int,int)>(i58, i59);

        $i22 = i59 + $i21;

        $i23 = virtualinvoke $r10.<com.sun.lwuit.table.TableLayout: int getColumnPosition(int)>($i22);

        i24 = $i23 - $i19;

        $r8 = virtualinvoke r0.<com.sun.lwuit.table.Table: com.sun.lwuit.table.TableModel getModel()>();

        $i25 = interfaceinvoke $r8.<com.sun.lwuit.table.TableModel: int getRowCount()>();

        $i26 = $i25 - 1;

        if i58 >= $i26 goto label16;

        $i31 = i58 + 1;

        $i32 = virtualinvoke $r10.<com.sun.lwuit.table.TableLayout: int getRowPosition(int)>($i31);

        i60 = $i32 - $i20;

        goto label17;

     label16:
        $i27 = virtualinvoke r0.<com.sun.lwuit.table.Table: int getHeight()>();

        i60 = $i27 - $i20;

     label17:
        $i30 = $i19 + i24;

        $i29 = $i19 + i24;

        $i28 = $i20 + i60;

        virtualinvoke r1.<com.sun.lwuit.Graphics: void drawLine(int,int,int,int)>($i30, $i20, $i29, $i28);

     label18:
        i59 = i59 + 1;

        goto label14;

     label19:
        i58 = i58 + 1;

        goto label13;

     label20:
        goto label23;

     label21:
        i61 = 1;

     label22:
        if i61 >= $i3 goto label23;

        $i13 = virtualinvoke $r10.<com.sun.lwuit.table.TableLayout: int getColumnPosition(int)>(i61);

        virtualinvoke r1.<com.sun.lwuit.Graphics: void drawLine(int,int,int,int)>($i13, 0, $i13, $i10);

        i61 = i61 + 1;

        goto label22;

     label23:
        $i12 = neg $i0;

        $i11 = neg $i1;

        virtualinvoke r1.<com.sun.lwuit.Graphics: void translate(int,int)>($i12, $i11);

     label24:
        return;
    }

    private com.sun.lwuit.Component createCellImpl(java.lang.Object, int, int, boolean)
    {
        com.sun.lwuit.table.Table r0;
        java.lang.Integer $r3, $r4;
        com.sun.lwuit.Component $r2;
        com.sun.lwuit.plaf.Style $r5, $r6, r9;
        com.sun.lwuit.table.Table$Listener $r7;
        int i0, i1;
        java.lang.Object r1;
        com.sun.lwuit.TextArea $r8;
        boolean z0, $z1, $z2;

        r0 := @this: com.sun.lwuit.table.Table;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r2 = virtualinvoke r0.<com.sun.lwuit.table.Table: com.sun.lwuit.Component createCell(java.lang.Object,int,int,boolean)>(r1, i0, i1, z0);

        $r3 = new java.lang.Integer;

        specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i0);

        virtualinvoke $r2.<com.sun.lwuit.Component: void putClientProperty(java.lang.String,java.lang.Object)>("row", $r3);

        $r4 = new java.lang.Integer;

        specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i1);

        virtualinvoke $r2.<com.sun.lwuit.Component: void putClientProperty(java.lang.String,java.lang.Object)>("column", $r4);

        $z1 = $r2 instanceof com.sun.lwuit.TextArea;

        if $z1 == 0 goto label1;

        $r8 = (com.sun.lwuit.TextArea) $r2;

        $r7 = r0.<com.sun.lwuit.table.Table: com.sun.lwuit.table.Table$Listener listener>;

        virtualinvoke $r8.<com.sun.lwuit.TextArea: void addActionListener(com.sun.lwuit.events.ActionListener)>($r7);

     label1:
        $r5 = virtualinvoke $r2.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getSelectedStyle()>();

        virtualinvoke $r5.<com.sun.lwuit.plaf.Style: void setMargin(int,int,int,int)>(0, 0, 0, 0);

        $z2 = r0.<com.sun.lwuit.table.Table: boolean drawBorder>;

        if $z2 == 0 goto label2;

        virtualinvoke $r5.<com.sun.lwuit.plaf.Style: void setBorder(com.sun.lwuit.plaf.Border)>(null);

        $r6 = virtualinvoke $r2.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getUnselectedStyle()>();

        r9 = $r6;

        virtualinvoke $r6.<com.sun.lwuit.plaf.Style: void setBorder(com.sun.lwuit.plaf.Border)>(null);

        goto label3;

     label2:
        r9 = virtualinvoke $r2.<com.sun.lwuit.Component: com.sun.lwuit.plaf.Style getUnselectedStyle()>();

     label3:
        virtualinvoke r9.<com.sun.lwuit.plaf.Style: void setBgTransparency(int)>(0);

        virtualinvoke r9.<com.sun.lwuit.plaf.Style: void setMargin(int,int,int,int)>(0, 0, 0, 0);

        return $r2;
    }

    protected com.sun.lwuit.Component createCell(java.lang.Object, int, int, boolean)
    {
        com.sun.lwuit.Label $r14, $r18;
        int i0, $i1, $i2, i3, $i5, $i7;
        java.lang.String $r5, $r11, $r13;
        com.sun.lwuit.TextField $r16;
        boolean z0;
        com.sun.lwuit.table.Table r6;
        java.lang.StringBuilder $r2, $r4, $r9, $r10, $r15, $r17;
        java.lang.Object r3;

        r6 := @this: com.sun.lwuit.table.Table;

        r3 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i3 := @parameter2: int;

        z0 := @parameter3: boolean;

        $i5 = (int) -1;

        if i0 != $i5 goto label1;

        $r14 = new com.sun.lwuit.Label;

        $r13 = (java.lang.String) r3;

        specialinvoke $r14.<com.sun.lwuit.Label: void <init>(java.lang.String)>($r13);

        virtualinvoke $r14.<com.sun.lwuit.Label: void setUIID(java.lang.String)>("TableHeader");

        $i2 = r6.<com.sun.lwuit.table.Table: int titleAlignment>;

        virtualinvoke $r14.<com.sun.lwuit.Label: void setAlignment(int)>($i2);

        virtualinvoke $r14.<com.sun.lwuit.Label: void setFocusable(boolean)>(1);

        return $r14;

     label1:
        if z0 == 0 goto label2;

        $r16 = new com.sun.lwuit.TextField;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $i7 = (int) -1;

        specialinvoke $r16.<com.sun.lwuit.TextField: void <init>(java.lang.String,int)>($r11, $i7);

        virtualinvoke $r16.<com.sun.lwuit.TextField: void setLeftAndRightEditingTrigger(boolean)>(0);

        virtualinvoke $r16.<com.sun.lwuit.TextField: void setUIID(java.lang.String)>("TableCell");

        return $r16;

     label2:
        $r18 = new com.sun.lwuit.Label;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<com.sun.lwuit.Label: void <init>(java.lang.String)>($r5);

        virtualinvoke $r18.<com.sun.lwuit.Label: void setUIID(java.lang.String)>("TableCell");

        $i1 = r6.<com.sun.lwuit.table.Table: int cellAlignment>;

        virtualinvoke $r18.<com.sun.lwuit.Label: void setAlignment(int)>($i1);

        virtualinvoke $r18.<com.sun.lwuit.Label: void setFocusable(boolean)>(1);

        return $r18;
    }

    public void initComponent()
    {
        com.sun.lwuit.table.Table r0;
        com.sun.lwuit.table.TableModel $r2;
        com.sun.lwuit.table.Table$Listener $r1;
        boolean $z0;

        r0 := @this: com.sun.lwuit.table.Table;

        $z0 = r0.<com.sun.lwuit.table.Table: boolean potentiallyDirtyModel>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.sun.lwuit.table.Table: void updateModel()>();

        r0.<com.sun.lwuit.table.Table: boolean potentiallyDirtyModel> = 0;

     label1:
        $r2 = r0.<com.sun.lwuit.table.Table: com.sun.lwuit.table.TableModel model>;

        $r1 = r0.<com.sun.lwuit.table.Table: com.sun.lwuit.table.Table$Listener listener>;

        interfaceinvoke $r2.<com.sun.lwuit.table.TableModel: void addDataChangeListener(com.sun.lwuit.events.DataChangedListener)>($r1);

        return;
    }

    public void deinitialize()
    {
        com.sun.lwuit.table.Table r1;
        com.sun.lwuit.table.TableModel $r3;
        com.sun.lwuit.table.Table$Listener $r2;
        com.sun.lwuit.Display $r0;
        boolean $z0;

        r1 := @this: com.sun.lwuit.table.Table;

        $r0 = staticinvoke <com.sun.lwuit.Display: com.sun.lwuit.Display getInstance()>();

        $z0 = virtualinvoke $r0.<com.sun.lwuit.Display: boolean isVirtualKeyboardShowing()>();

        if $z0 != 0 goto label1;

        r1.<com.sun.lwuit.table.Table: boolean potentiallyDirtyModel> = 1;

        $r3 = r1.<com.sun.lwuit.table.Table: com.sun.lwuit.table.TableModel model>;

        $r2 = r1.<com.sun.lwuit.table.Table: com.sun.lwuit.table.Table$Listener listener>;

        interfaceinvoke $r3.<com.sun.lwuit.table.TableModel: void removeDataChangeListener(com.sun.lwuit.events.DataChangedListener)>($r2);

        goto label2;

     label1:
        r1.<com.sun.lwuit.table.Table: boolean potentiallyDirtyModel> = 0;

     label2:
        return;
    }

    public void setModel(com.sun.lwuit.table.TableModel)
    {
        com.sun.lwuit.table.Table r0;
        com.sun.lwuit.table.TableModel r1;

        r0 := @this: com.sun.lwuit.table.Table;

        r1 := @parameter0: com.sun.lwuit.table.TableModel;

        r0.<com.sun.lwuit.table.Table: com.sun.lwuit.table.TableModel model> = r1;

        specialinvoke r0.<com.sun.lwuit.table.Table: void updateModel()>();

        virtualinvoke r0.<com.sun.lwuit.table.Table: void revalidate()>();

        return;
    }

    public com.sun.lwuit.table.TableModel getModel()
    {
        com.sun.lwuit.table.Table r0;
        com.sun.lwuit.table.TableModel $r1;

        r0 := @this: com.sun.lwuit.table.Table;

        $r1 = r0.<com.sun.lwuit.table.Table: com.sun.lwuit.table.TableModel model>;

        return $r1;
    }

    public boolean isDrawBorder()
    {
        com.sun.lwuit.table.Table r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.table.Table;

        $z0 = r0.<com.sun.lwuit.table.Table: boolean drawBorder>;

        return $z0;
    }

    public void setDrawBorder(boolean)
    {
        com.sun.lwuit.table.Table r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.table.Table;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.table.Table: boolean drawBorder> = z0;

        virtualinvoke r0.<com.sun.lwuit.table.Table: void repaint()>();

        return;
    }

    public int getTitleAlignment()
    {
        int $i0;
        com.sun.lwuit.table.Table r0;

        r0 := @this: com.sun.lwuit.table.Table;

        $i0 = r0.<com.sun.lwuit.table.Table: int titleAlignment>;

        return $i0;
    }

    public void setTitleAlignment(int)
    {
        int i0;
        com.sun.lwuit.table.Table r0;

        r0 := @this: com.sun.lwuit.table.Table;

        i0 := @parameter0: int;

        r0.<com.sun.lwuit.table.Table: int titleAlignment> = i0;

        virtualinvoke r0.<com.sun.lwuit.table.Table: void repaint()>();

        return;
    }

    public int getCellColumn(com.sun.lwuit.Component)
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.table.Table r3;
        int $i0, $i2;
        java.lang.Object $r1;
        java.lang.Integer r2;

        r3 := @this: com.sun.lwuit.table.Table;

        r0 := @parameter0: com.sun.lwuit.Component;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: java.lang.Object getClientProperty(java.lang.String)>("column");

        r2 = (java.lang.Integer) $r1;

        if r2 == null goto label1;

        $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        return $i0;

     label1:
        $i2 = (int) -1;

        return $i2;
    }

    public int getCellRow(com.sun.lwuit.Component)
    {
        com.sun.lwuit.Component r0;
        com.sun.lwuit.table.Table r3;
        int $i0, $i2;
        java.lang.Object $r1;
        java.lang.Integer r2;

        r3 := @this: com.sun.lwuit.table.Table;

        r0 := @parameter0: com.sun.lwuit.Component;

        $r1 = virtualinvoke r0.<com.sun.lwuit.Component: java.lang.Object getClientProperty(java.lang.String)>("row");

        r2 = (java.lang.Integer) $r1;

        if r2 == null goto label1;

        $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        return $i0;

     label1:
        $i2 = (int) -1;

        return $i2;
    }

    public int getCellAlignment()
    {
        int $i0;
        com.sun.lwuit.table.Table r0;

        r0 := @this: com.sun.lwuit.table.Table;

        $i0 = r0.<com.sun.lwuit.table.Table: int cellAlignment>;

        return $i0;
    }

    public void setCellAlignment(int)
    {
        int i0;
        com.sun.lwuit.table.Table r0;

        r0 := @this: com.sun.lwuit.table.Table;

        i0 := @parameter0: int;

        r0.<com.sun.lwuit.table.Table: int cellAlignment> = i0;

        virtualinvoke r0.<com.sun.lwuit.table.Table: void repaint()>();

        return;
    }

    public boolean isIncludeHeader()
    {
        com.sun.lwuit.table.Table r0;
        boolean $z0;

        r0 := @this: com.sun.lwuit.table.Table;

        $z0 = r0.<com.sun.lwuit.table.Table: boolean includeHeader>;

        return $z0;
    }

    public void setIncludeHeader(boolean)
    {
        com.sun.lwuit.table.Table r0;
        boolean z0;

        r0 := @this: com.sun.lwuit.table.Table;

        z0 := @parameter0: boolean;

        r0.<com.sun.lwuit.table.Table: boolean includeHeader> = z0;

        return;
    }

    protected com.sun.lwuit.table.TableLayout$Constraint createCellConstraint(java.lang.Object, int, int)
    {
        com.sun.lwuit.table.Table r0;
        com.sun.lwuit.table.TableLayout$Constraint $r2;
        com.sun.lwuit.table.TableLayout $r3;
        int i0, i1;
        java.lang.Object r4;
        com.sun.lwuit.layouts.Layout $r1;
        boolean $z0;

        r0 := @this: com.sun.lwuit.table.Table;

        r4 := @parameter0: java.lang.Object;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        $z0 = r0.<com.sun.lwuit.table.Table: boolean includeHeader>;

        if $z0 == 0 goto label1;

        i1 = i1 + 1;

     label1:
        $r1 = virtualinvoke r0.<com.sun.lwuit.table.Table: com.sun.lwuit.layouts.Layout getLayout()>();

        $r3 = (com.sun.lwuit.table.TableLayout) $r1;

        $r2 = virtualinvoke $r3.<com.sun.lwuit.table.TableLayout: com.sun.lwuit.table.TableLayout$Constraint createConstraint(int,int)>(i1, i0);

        return $r2;
    }

    static com.sun.lwuit.table.TableModel access$000(com.sun.lwuit.table.Table)
    {
        com.sun.lwuit.table.Table r0;
        com.sun.lwuit.table.TableModel $r1;

        r0 := @parameter0: com.sun.lwuit.table.Table;

        $r1 = r0.<com.sun.lwuit.table.Table: com.sun.lwuit.table.TableModel model>;

        return $r1;
    }

    static com.sun.lwuit.Component access$100(com.sun.lwuit.table.Table, java.lang.Object, int, int, boolean)
    {
        com.sun.lwuit.Component $r2;
        com.sun.lwuit.table.Table r0;
        int i0, i1;
        java.lang.Object r1;
        boolean z0;

        r0 := @parameter0: com.sun.lwuit.table.Table;

        r1 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        z0 := @parameter4: boolean;

        $r2 = specialinvoke r0.<com.sun.lwuit.table.Table: com.sun.lwuit.Component createCellImpl(java.lang.Object,int,int,boolean)>(r1, i0, i1, z0);

        return $r2;
    }

    static boolean access$200(com.sun.lwuit.table.Table)
    {
        com.sun.lwuit.table.Table r0;
        boolean $z0;

        r0 := @parameter0: com.sun.lwuit.table.Table;

        $z0 = r0.<com.sun.lwuit.table.Table: boolean includeHeader>;

        return $z0;
    }
}
