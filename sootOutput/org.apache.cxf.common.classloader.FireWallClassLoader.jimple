public class org.apache.cxf.common.classloader.FireWallClassLoader extends java.security.SecureClassLoader
{
    private final java.lang.String[] filters;
    private final java.lang.String[] fnFilters;
    private final java.lang.String[] negativeFilters;
    private final java.lang.String[] negativeFNFilters;

    public void <init>(java.lang.ClassLoader, java.lang.String[])
    {
        java.lang.String[] r2, $r3;
        java.lang.ClassLoader r1;
        org.apache.cxf.common.classloader.FireWallClassLoader r0;

        r0 := @this: org.apache.cxf.common.classloader.FireWallClassLoader;

        r1 := @parameter0: java.lang.ClassLoader;

        r2 := @parameter1: java.lang.String[];

        $r3 = newarray (java.lang.String)[0];

        specialinvoke r0.<org.apache.cxf.common.classloader.FireWallClassLoader: void <init>(java.lang.ClassLoader,java.lang.String[],java.lang.String[])>(r1, r2, $r3);

        return;
    }

    public void <init>(java.lang.ClassLoader, java.lang.String[], java.lang.String[])
    {
        java.lang.SecurityException $r23;
        boolean $z0, $z1, z2;
        java.lang.ClassLoader r1;
        java.lang.String[] r2, $r3, r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r14, $r15, $r18;
        int $i0, $i1, i2, i3, i4, $i6;
        java.lang.String $r16, $r17, $r19, r20, r21, r22;
        org.apache.cxf.common.classloader.FireWallClassLoader r0;

        r0 := @this: org.apache.cxf.common.classloader.FireWallClassLoader;

        r1 := @parameter0: java.lang.ClassLoader;

        r2 := @parameter1: java.lang.String[];

        r4 := @parameter2: java.lang.String[];

        specialinvoke r0.<java.security.SecureClassLoader: void <init>(java.lang.ClassLoader)>(r1);

        $r3 = staticinvoke <org.apache.cxf.common.classloader.FireWallClassLoader: java.lang.String[] processFilters(java.lang.String[])>(r2);

        r0.<org.apache.cxf.common.classloader.FireWallClassLoader: java.lang.String[] filters> = $r3;

        $r5 = staticinvoke <org.apache.cxf.common.classloader.FireWallClassLoader: java.lang.String[] processFilters(java.lang.String[])>(r4);

        r0.<org.apache.cxf.common.classloader.FireWallClassLoader: java.lang.String[] negativeFilters> = $r5;

        $r6 = r0.<org.apache.cxf.common.classloader.FireWallClassLoader: java.lang.String[] filters>;

        $r7 = staticinvoke <org.apache.cxf.common.classloader.FireWallClassLoader: java.lang.String[] filters2FNFilters(java.lang.String[])>($r6);

        r0.<org.apache.cxf.common.classloader.FireWallClassLoader: java.lang.String[] fnFilters> = $r7;

        $r8 = r0.<org.apache.cxf.common.classloader.FireWallClassLoader: java.lang.String[] negativeFilters>;

        $r9 = staticinvoke <org.apache.cxf.common.classloader.FireWallClassLoader: java.lang.String[] filters2FNFilters(java.lang.String[])>($r8);

        r0.<org.apache.cxf.common.classloader.FireWallClassLoader: java.lang.String[] negativeFNFilters> = $r9;

        z2 = 0;

        $r10 = r0.<org.apache.cxf.common.classloader.FireWallClassLoader: java.lang.String[] filters>;

        if $r10 != null goto label01;

        z2 = 1;

        goto label04;

     label01:
        i2 = 0;

     label02:
        $r11 = r0.<org.apache.cxf.common.classloader.FireWallClassLoader: java.lang.String[] filters>;

        $i0 = lengthof $r11;

        if i2 >= $i0 goto label04;

        $r18 = r0.<org.apache.cxf.common.classloader.FireWallClassLoader: java.lang.String[] filters>;

        $r19 = $r18[i2];

        $z1 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>("java.");

        if $z1 == 0 goto label03;

        z2 = 1;

     label03:
        i2 = i2 + 1;

        goto label02;

     label04:
        $r12 = r0.<org.apache.cxf.common.classloader.FireWallClassLoader: java.lang.String[] negativeFilters>;

        if $r12 == null goto label09;

        r20 = "java.";

        r22 = "java.";

        r21 = "java.";

        i3 = virtualinvoke r22.<java.lang.String: int length()>();

     label05:
        if i3 < 0 goto label09;

        i4 = 0;

     label06:
        $r14 = r0.<org.apache.cxf.common.classloader.FireWallClassLoader: java.lang.String[] negativeFilters>;

        $i1 = lengthof $r14;

        if i4 >= $i1 goto label08;

        $r15 = r0.<org.apache.cxf.common.classloader.FireWallClassLoader: java.lang.String[] negativeFilters>;

        $r16 = $r15[i4];

        $r17 = virtualinvoke r21.<java.lang.String: java.lang.String substring(int,int)>(0, i3);

        $z0 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z0 == 0 goto label07;

        z2 = 0;

     label07:
        i4 = i4 + 1;

        goto label06;

     label08:
        $i6 = (int) -1;

        i3 = i3 + $i6;

        goto label05;

     label09:
        if z2 != 0 goto label10;

        $r23 = new java.lang.SecurityException;

        specialinvoke $r23.<java.lang.SecurityException: void <init>(java.lang.String)>("It\'s unsafe to construct a FireWallClassLoader that does not let the java. package through.");

        throw $r23;

     label10:
        return;
    }

    private static java.lang.String[] processFilters(java.lang.String[])
    {
        java.lang.String[] r0, r1;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String[];

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        $i1 = lengthof r0;

        r1 = newarray (java.lang.String)[$i1];

        i5 = 0;

     label3:
        $i2 = lengthof r0;

        if i5 >= $i2 goto label5;

        r2 = r0[i5];

        $z0 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>("*");

        if $z0 == 0 goto label4;

        $i3 = virtualinvoke r2.<java.lang.String: int length()>();

        $i4 = $i3 - 1;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i4);

     label4:
        r1[i5] = r2;

        i5 = i5 + 1;

        goto label3;

     label5:
        return r1;
    }

    private static java.lang.String[] filters2FNFilters(java.lang.String[])
    {
        java.lang.String[] r0, r1;
        int $i0, $i1, $i2, i3;
        java.lang.String $r2, $r3;

        r0 := @parameter0: java.lang.String[];

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        $i1 = lengthof r0;

        r1 = newarray (java.lang.String)[$i1];

        i3 = 0;

     label3:
        $i2 = lengthof r0;

        if i3 >= $i2 goto label4;

        $r2 = r0[i3];

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        r1[i3] = $r3;

        i3 = i3 + 1;

        goto label3;

     label4:
        return r1;
    }

    protected java.lang.Class loadClass(java.lang.String, boolean) throws java.lang.ClassNotFoundException
    {
        java.lang.String[] $r1, $r2, $r5, $r7, $r10, $r11;
        int $i0, $i1, i2, i3;
        java.lang.String r3, $r8, $r12;
        org.apache.cxf.common.classloader.FireWallClassLoader r0;
        boolean z0, $z1, $z2;
        java.lang.Class $r4, $r9;
        java.lang.ClassNotFoundException $r6, $r13;

        r0 := @this: org.apache.cxf.common.classloader.FireWallClassLoader;

        r3 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r1 = r0.<org.apache.cxf.common.classloader.FireWallClassLoader: java.lang.String[] negativeFilters>;

        if $r1 == null goto label3;

        i2 = 0;

     label1:
        $r10 = r0.<org.apache.cxf.common.classloader.FireWallClassLoader: java.lang.String[] negativeFilters>;

        $i1 = lengthof $r10;

        if i2 >= $i1 goto label3;

        $r11 = r0.<org.apache.cxf.common.classloader.FireWallClassLoader: java.lang.String[] negativeFilters>;

        $r12 = $r11[i2];

        $z2 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>($r12);

        if $z2 == 0 goto label2;

        $r13 = new java.lang.ClassNotFoundException;

        specialinvoke $r13.<java.lang.ClassNotFoundException: void <init>(java.lang.String)>(r3);

        throw $r13;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r2 = r0.<org.apache.cxf.common.classloader.FireWallClassLoader: java.lang.String[] filters>;

        if $r2 == null goto label7;

        i3 = 0;

     label4:
        $r5 = r0.<org.apache.cxf.common.classloader.FireWallClassLoader: java.lang.String[] filters>;

        $i0 = lengthof $r5;

        if i3 >= $i0 goto label6;

        $r7 = r0.<org.apache.cxf.common.classloader.FireWallClassLoader: java.lang.String[] filters>;

        $r8 = $r7[i3];

        $z1 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>($r8);

        if $z1 == 0 goto label5;

        $r9 = specialinvoke r0.<java.security.SecureClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>(r3, z0);

        return $r9;

     label5:
        i3 = i3 + 1;

        goto label4;

     label6:
        goto label8;

     label7:
        $r4 = specialinvoke r0.<java.security.SecureClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>(r3, z0);

        return $r4;

     label8:
        $r6 = new java.lang.ClassNotFoundException;

        specialinvoke $r6.<java.lang.ClassNotFoundException: void <init>(java.lang.String)>(r3);

        throw $r6;
    }

    public java.net.URL getResource(java.lang.String)
    {
        java.net.URL $r4, $r8;
        java.lang.String[] $r1, $r2, $r5, $r6, $r9, $r10;
        int $i0, $i1, i2, i3;
        java.lang.String r3, $r7, $r11;
        org.apache.cxf.common.classloader.FireWallClassLoader r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.common.classloader.FireWallClassLoader;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.cxf.common.classloader.FireWallClassLoader: java.lang.String[] negativeFNFilters>;

        if $r1 == null goto label3;

        i2 = 0;

     label1:
        $r9 = r0.<org.apache.cxf.common.classloader.FireWallClassLoader: java.lang.String[] negativeFNFilters>;

        $i1 = lengthof $r9;

        if i2 >= $i1 goto label3;

        $r10 = r0.<org.apache.cxf.common.classloader.FireWallClassLoader: java.lang.String[] negativeFNFilters>;

        $r11 = $r10[i2];

        $z1 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>($r11);

        if $z1 == 0 goto label2;

        return null;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r2 = r0.<org.apache.cxf.common.classloader.FireWallClassLoader: java.lang.String[] fnFilters>;

        if $r2 == null goto label7;

        i3 = 0;

     label4:
        $r5 = r0.<org.apache.cxf.common.classloader.FireWallClassLoader: java.lang.String[] fnFilters>;

        $i0 = lengthof $r5;

        if i3 >= $i0 goto label6;

        $r6 = r0.<org.apache.cxf.common.classloader.FireWallClassLoader: java.lang.String[] fnFilters>;

        $r7 = $r6[i3];

        $z0 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>($r7);

        if $z0 == 0 goto label5;

        $r8 = specialinvoke r0.<java.security.SecureClassLoader: java.net.URL getResource(java.lang.String)>(r3);

        return $r8;

     label5:
        i3 = i3 + 1;

        goto label4;

     label6:
        goto label8;

     label7:
        $r4 = specialinvoke r0.<java.security.SecureClassLoader: java.net.URL getResource(java.lang.String)>(r3);

        return $r4;

     label8:
        return null;
    }

    public java.lang.String[] getFilters()
    {
        java.lang.String[] $r1, $r2, $r4;
        java.lang.Object $r3;
        org.apache.cxf.common.classloader.FireWallClassLoader r0;

        r0 := @this: org.apache.cxf.common.classloader.FireWallClassLoader;

        $r1 = r0.<org.apache.cxf.common.classloader.FireWallClassLoader: java.lang.String[] filters>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.cxf.common.classloader.FireWallClassLoader: java.lang.String[] filters>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (java.lang.String[]) $r3;

        return $r4;
    }

    public java.lang.String[] getNegativeFilters()
    {
        java.lang.String[] $r1, $r2, $r4;
        java.lang.Object $r3;
        org.apache.cxf.common.classloader.FireWallClassLoader r0;

        r0 := @this: org.apache.cxf.common.classloader.FireWallClassLoader;

        $r1 = r0.<org.apache.cxf.common.classloader.FireWallClassLoader: java.lang.String[] negativeFilters>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.cxf.common.classloader.FireWallClassLoader: java.lang.String[] negativeFilters>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (java.lang.String[]) $r3;

        return $r4;
    }
}
