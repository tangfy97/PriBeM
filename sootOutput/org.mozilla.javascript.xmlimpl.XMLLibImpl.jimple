public final class org.mozilla.javascript.xmlimpl.XMLLibImpl extends org.mozilla.javascript.xml.XMLLib implements java.io.Serializable
{
    private static final long serialVersionUID;
    private org.mozilla.javascript.Scriptable globalScope;
    org.mozilla.javascript.xmlimpl.XML xmlPrototype;
    org.mozilla.javascript.xmlimpl.XMLList xmlListPrototype;
    org.mozilla.javascript.xmlimpl.Namespace namespacePrototype;
    org.mozilla.javascript.xmlimpl.QName qnamePrototype;
    boolean ignoreComments;
    boolean ignoreProcessingInstructions;
    boolean ignoreWhitespace;
    boolean prettyPrinting;
    int prettyIndent;
    static java.lang.Class class$org$apache$xmlbeans$XmlObject;

    org.mozilla.javascript.Scriptable globalScope()
    {
        org.mozilla.javascript.xmlimpl.XMLLibImpl r0;
        org.mozilla.javascript.Scriptable $r1;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        $r1 = r0.<org.mozilla.javascript.xmlimpl.XMLLibImpl: org.mozilla.javascript.Scriptable globalScope>;

        return $r1;
    }

    private void <init>(org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.xmlimpl.XMLLibImpl r0;
        org.mozilla.javascript.Scriptable r1;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r1 := @parameter0: org.mozilla.javascript.Scriptable;

        specialinvoke r0.<org.mozilla.javascript.xml.XMLLib: void <init>()>();

        r0.<org.mozilla.javascript.xmlimpl.XMLLibImpl: org.mozilla.javascript.Scriptable globalScope> = r1;

        virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLLibImpl: void defaultSettings()>();

        return;
    }

    public static void init(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, boolean)
    {
        org.mozilla.javascript.xmlimpl.XMLLibImpl $r1;
        org.mozilla.javascript.xml.XMLLib $r3;
        org.mozilla.javascript.Scriptable r2;
        org.mozilla.javascript.Context r4;
        java.lang.Class $r0, $r5;
        boolean z0;

        r4 := @parameter0: org.mozilla.javascript.Context;

        r2 := @parameter1: org.mozilla.javascript.Scriptable;

        z0 := @parameter2: boolean;

        $r0 = <org.mozilla.javascript.xmlimpl.XMLLibImpl: java.lang.Class class$org$apache$xmlbeans$XmlObject>;

        if $r0 != null goto label1;

        $r5 = staticinvoke <org.mozilla.javascript.xmlimpl.XMLLibImpl: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.XmlObject");

        <org.mozilla.javascript.xmlimpl.XMLLibImpl: java.lang.Class class$org$apache$xmlbeans$XmlObject> = $r5;

        goto label2;

     label1:
        $r5 = <org.mozilla.javascript.xmlimpl.XMLLibImpl: java.lang.Class class$org$apache$xmlbeans$XmlObject>;

     label2:
        virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r1 = new org.mozilla.javascript.xmlimpl.XMLLibImpl;

        specialinvoke $r1.<org.mozilla.javascript.xmlimpl.XMLLibImpl: void <init>(org.mozilla.javascript.Scriptable)>(r2);

        $r3 = virtualinvoke $r1.<org.mozilla.javascript.xmlimpl.XMLLibImpl: org.mozilla.javascript.xml.XMLLib bindToScope(org.mozilla.javascript.Scriptable)>(r2);

        if $r3 != $r1 goto label3;

        specialinvoke $r1.<org.mozilla.javascript.xmlimpl.XMLLibImpl: void exportToScope(boolean)>(z0);

     label3:
        return;
    }

    private void exportToScope(boolean)
    {
        org.mozilla.javascript.xmlimpl.XMLList $r2, $r6;
        org.mozilla.javascript.xmlimpl.XML $r1, $r5;
        org.mozilla.javascript.xmlimpl.XMLLibImpl r0;
        org.mozilla.javascript.xmlimpl.Namespace $r3, $r7;
        org.mozilla.javascript.xmlimpl.QName $r4, $r8;
        boolean z0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <org.mozilla.javascript.xmlimpl.XML: org.mozilla.javascript.xmlimpl.XML createEmptyXML(org.mozilla.javascript.xmlimpl.XMLLibImpl)>(r0);

        r0.<org.mozilla.javascript.xmlimpl.XMLLibImpl: org.mozilla.javascript.xmlimpl.XML xmlPrototype> = $r1;

        $r2 = new org.mozilla.javascript.xmlimpl.XMLList;

        specialinvoke $r2.<org.mozilla.javascript.xmlimpl.XMLList: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl)>(r0);

        r0.<org.mozilla.javascript.xmlimpl.XMLLibImpl: org.mozilla.javascript.xmlimpl.XMLList xmlListPrototype> = $r2;

        $r3 = new org.mozilla.javascript.xmlimpl.Namespace;

        specialinvoke $r3.<org.mozilla.javascript.xmlimpl.Namespace: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl,java.lang.String,java.lang.String)>(r0, "", "");

        r0.<org.mozilla.javascript.xmlimpl.XMLLibImpl: org.mozilla.javascript.xmlimpl.Namespace namespacePrototype> = $r3;

        $r4 = new org.mozilla.javascript.xmlimpl.QName;

        specialinvoke $r4.<org.mozilla.javascript.xmlimpl.QName: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl,java.lang.String,java.lang.String,java.lang.String)>(r0, "", "", "");

        r0.<org.mozilla.javascript.xmlimpl.XMLLibImpl: org.mozilla.javascript.xmlimpl.QName qnamePrototype> = $r4;

        $r5 = r0.<org.mozilla.javascript.xmlimpl.XMLLibImpl: org.mozilla.javascript.xmlimpl.XML xmlPrototype>;

        virtualinvoke $r5.<org.mozilla.javascript.xmlimpl.XML: void exportAsJSClass(boolean)>(z0);

        $r6 = r0.<org.mozilla.javascript.xmlimpl.XMLLibImpl: org.mozilla.javascript.xmlimpl.XMLList xmlListPrototype>;

        virtualinvoke $r6.<org.mozilla.javascript.xmlimpl.XMLList: void exportAsJSClass(boolean)>(z0);

        $r7 = r0.<org.mozilla.javascript.xmlimpl.XMLLibImpl: org.mozilla.javascript.xmlimpl.Namespace namespacePrototype>;

        virtualinvoke $r7.<org.mozilla.javascript.xmlimpl.Namespace: void exportAsJSClass(boolean)>(z0);

        $r8 = r0.<org.mozilla.javascript.xmlimpl.XMLLibImpl: org.mozilla.javascript.xmlimpl.QName qnamePrototype>;

        virtualinvoke $r8.<org.mozilla.javascript.xmlimpl.QName: void exportAsJSClass(boolean)>(z0);

        return;
    }

    void defaultSettings()
    {
        org.mozilla.javascript.xmlimpl.XMLLibImpl r0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r0.<org.mozilla.javascript.xmlimpl.XMLLibImpl: boolean ignoreComments> = 1;

        r0.<org.mozilla.javascript.xmlimpl.XMLLibImpl: boolean ignoreProcessingInstructions> = 1;

        r0.<org.mozilla.javascript.xmlimpl.XMLLibImpl: boolean ignoreWhitespace> = 1;

        r0.<org.mozilla.javascript.xmlimpl.XMLLibImpl: boolean prettyPrinting> = 1;

        r0.<org.mozilla.javascript.xmlimpl.XMLLibImpl: int prettyIndent> = 2;

        return;
    }

    org.mozilla.javascript.xmlimpl.XMLName toAttributeName(org.mozilla.javascript.Context, java.lang.Object)
    {
        org.mozilla.javascript.xmlimpl.XMLLibImpl r2;
        org.mozilla.javascript.xmlimpl.XMLName r6, $r9;
        java.lang.String r4, r5;
        org.mozilla.javascript.xmlimpl.QName r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.mozilla.javascript.Context r3;
        java.lang.RuntimeException $r8;
        java.lang.Object r0, $r1;

        r2 := @this: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r3 := @parameter0: org.mozilla.javascript.Context;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        r4 = "";

        r5 = (java.lang.String) r0;

        goto label7;

     label1:
        $z1 = r0 instanceof org.mozilla.javascript.xmlimpl.XMLName;

        if $z1 == 0 goto label3;

        r6 = (org.mozilla.javascript.xmlimpl.XMLName) r0;

        $z5 = virtualinvoke r6.<org.mozilla.javascript.xmlimpl.XMLName: boolean isAttributeName()>();

        if $z5 != 0 goto label2;

        virtualinvoke r6.<org.mozilla.javascript.xmlimpl.XMLName: void setAttributeName()>();

     label2:
        return r6;

     label3:
        $z2 = r0 instanceof org.mozilla.javascript.xmlimpl.QName;

        if $z2 == 0 goto label4;

        r7 = (org.mozilla.javascript.xmlimpl.QName) r0;

        r4 = virtualinvoke r7.<org.mozilla.javascript.xmlimpl.QName: java.lang.String uri()>();

        r5 = virtualinvoke r7.<org.mozilla.javascript.xmlimpl.QName: java.lang.String localName()>();

        goto label7;

     label4:
        $z3 = r0 instanceof java.lang.Boolean;

        if $z3 != 0 goto label5;

        $z4 = r0 instanceof java.lang.Number;

        if $z4 != 0 goto label5;

        $r1 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        if r0 == $r1 goto label5;

        if r0 != null goto label6;

     label5:
        $r8 = staticinvoke <org.mozilla.javascript.xmlimpl.XMLLibImpl: java.lang.RuntimeException badXMLName(java.lang.Object)>(r0);

        throw $r8;

     label6:
        r4 = "";

        r5 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r0);

     label7:
        $r9 = staticinvoke <org.mozilla.javascript.xmlimpl.XMLName: org.mozilla.javascript.xmlimpl.XMLName formProperty(java.lang.String,java.lang.String)>(r4, r5);

        virtualinvoke $r9.<org.mozilla.javascript.xmlimpl.XMLName: void setAttributeName()>();

        return $r9;
    }

    private static java.lang.RuntimeException badXMLName(java.lang.Object)
    {
        org.mozilla.javascript.EcmaError $r10;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuffer $r5, $r6, $r8;
        java.lang.Object r0, $r1;
        java.lang.String $r3, r4, $r7, $r9;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.Number;

        if $z0 == 0 goto label1;

        r4 = "Can not construct XML name from number: ";

        goto label5;

     label1:
        $z1 = r0 instanceof java.lang.Boolean;

        if $z1 == 0 goto label2;

        r4 = "Can not construct XML name from boolean: ";

        goto label5;

     label2:
        $r1 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        if r0 == $r1 goto label3;

        if r0 != null goto label4;

     label3:
        r4 = "Can not construct XML name from ";

        goto label5;

     label4:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label5:
        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        $r7 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        $r10 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>($r9);

        return $r10;
    }

    org.mozilla.javascript.xmlimpl.XMLName toXMLName(org.mozilla.javascript.Context, java.lang.Object)
    {
        org.mozilla.javascript.xmlimpl.XMLLibImpl r3;
        org.mozilla.javascript.xmlimpl.XMLName r8;
        java.lang.String $r2, $r5, $r6, $r7;
        org.mozilla.javascript.xmlimpl.QName r9;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.mozilla.javascript.Context r4;
        java.lang.RuntimeException $r10;
        java.lang.Object r0, $r1;

        r3 := @this: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r4 := @parameter0: org.mozilla.javascript.Context;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof org.mozilla.javascript.xmlimpl.XMLName;

        if $z0 == 0 goto label1;

        r8 = (org.mozilla.javascript.xmlimpl.XMLName) r0;

        goto label6;

     label1:
        $z1 = r0 instanceof org.mozilla.javascript.xmlimpl.QName;

        if $z1 == 0 goto label2;

        r9 = (org.mozilla.javascript.xmlimpl.QName) r0;

        $r6 = virtualinvoke r9.<org.mozilla.javascript.xmlimpl.QName: java.lang.String uri()>();

        $r7 = virtualinvoke r9.<org.mozilla.javascript.xmlimpl.QName: java.lang.String localName()>();

        r8 = staticinvoke <org.mozilla.javascript.xmlimpl.XMLName: org.mozilla.javascript.xmlimpl.XMLName formProperty(java.lang.String,java.lang.String)>($r6, $r7);

        goto label6;

     label2:
        $z2 = r0 instanceof java.lang.String;

        if $z2 == 0 goto label3;

        $r5 = (java.lang.String) r0;

        r8 = virtualinvoke r3.<org.mozilla.javascript.xmlimpl.XMLLibImpl: org.mozilla.javascript.xmlimpl.XMLName toXMLNameFromString(org.mozilla.javascript.Context,java.lang.String)>(r4, $r5);

        goto label6;

     label3:
        $z3 = r0 instanceof java.lang.Boolean;

        if $z3 != 0 goto label4;

        $z4 = r0 instanceof java.lang.Number;

        if $z4 != 0 goto label4;

        $r1 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        if r0 == $r1 goto label4;

        if r0 != null goto label5;

     label4:
        $r10 = staticinvoke <org.mozilla.javascript.xmlimpl.XMLLibImpl: java.lang.RuntimeException badXMLName(java.lang.Object)>(r0);

        throw $r10;

     label5:
        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r0);

        r8 = virtualinvoke r3.<org.mozilla.javascript.xmlimpl.XMLLibImpl: org.mozilla.javascript.xmlimpl.XMLName toXMLNameFromString(org.mozilla.javascript.Context,java.lang.String)>(r4, $r2);

     label6:
        return r8;
    }

    org.mozilla.javascript.xmlimpl.XMLName toXMLNameOrIndex(org.mozilla.javascript.Context, java.lang.Object)
    {
        byte $b1, $b4, $b5, $b6, $b7, $b9;
        org.mozilla.javascript.xmlimpl.XMLName r8;
        org.mozilla.javascript.xmlimpl.QName r11;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        long $l0, $l3, $l8, l10;
        org.mozilla.javascript.xmlimpl.XMLLibImpl r3;
        int $i2, $i11, $i12, $i13, $i14, $i15;
        java.lang.String $r2, $r5, $r6, r9;
        java.lang.Number $r7;
        double $d0, $d1;
        org.mozilla.javascript.Context r4;
        java.lang.RuntimeException $r10, $r12;
        java.lang.Object r0, $r1;

        r3 := @this: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r4 := @parameter0: org.mozilla.javascript.Context;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof org.mozilla.javascript.xmlimpl.XMLName;

        if $z0 == 0 goto label01;

        r8 = (org.mozilla.javascript.xmlimpl.XMLName) r0;

        goto label11;

     label01:
        $z1 = r0 instanceof java.lang.String;

        if $z1 == 0 goto label03;

        r9 = (java.lang.String) r0;

        $l8 = staticinvoke <org.mozilla.javascript.ScriptRuntime: long testUint32String(java.lang.String)>(r9);

        $b9 = $l8 cmp 0L;

        $i11 = (int) $b9;

        if $i11 < 0 goto label02;

        staticinvoke <org.mozilla.javascript.ScriptRuntime: void storeUint32Result(org.mozilla.javascript.Context,long)>(r4, $l8);

        r8 = null;

        goto label11;

     label02:
        r8 = virtualinvoke r3.<org.mozilla.javascript.xmlimpl.XMLLibImpl: org.mozilla.javascript.xmlimpl.XMLName toXMLNameFromString(org.mozilla.javascript.Context,java.lang.String)>(r4, r9);

        goto label11;

     label03:
        $z2 = r0 instanceof java.lang.Number;

        if $z2 == 0 goto label05;

        $r7 = (java.lang.Number) r0;

        $d0 = virtualinvoke $r7.<java.lang.Number: double doubleValue()>();

        l10 = (long) $d0;

        $d1 = (double) l10;

        $b5 = $d1 cmpl $d0;

        if $b5 != 0 goto label04;

        $b6 = 0L cmp l10;

        $i12 = (int) $b6;

        if $i12 > 0 goto label04;

        $b7 = l10 cmp 4294967295L;

        $i13 = (int) $b7;

        if $i13 > 0 goto label04;

        staticinvoke <org.mozilla.javascript.ScriptRuntime: void storeUint32Result(org.mozilla.javascript.Context,long)>(r4, l10);

        r8 = null;

        goto label11;

     label04:
        $r10 = staticinvoke <org.mozilla.javascript.xmlimpl.XMLLibImpl: java.lang.RuntimeException badXMLName(java.lang.Object)>(r0);

        throw $r10;

     label05:
        $z3 = r0 instanceof org.mozilla.javascript.xmlimpl.QName;

        if $z3 == 0 goto label07;

        r11 = (org.mozilla.javascript.xmlimpl.QName) r0;

        $r5 = virtualinvoke r11.<org.mozilla.javascript.xmlimpl.QName: java.lang.String uri()>();

        z5 = 0;

        r8 = null;

        if $r5 == null goto label06;

        $i2 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i2 != 0 goto label06;

        $l3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: long testUint32String(java.lang.String)>($r5);

        $b4 = $l3 cmp 0L;

        $i14 = (int) $b4;

        if $i14 < 0 goto label06;

        staticinvoke <org.mozilla.javascript.ScriptRuntime: void storeUint32Result(org.mozilla.javascript.Context,long)>(r4, $l3);

        z5 = 1;

     label06:
        if z5 != 0 goto label11;

        $r6 = virtualinvoke r11.<org.mozilla.javascript.xmlimpl.QName: java.lang.String localName()>();

        r8 = staticinvoke <org.mozilla.javascript.xmlimpl.XMLName: org.mozilla.javascript.xmlimpl.XMLName formProperty(java.lang.String,java.lang.String)>($r5, $r6);

        goto label11;

     label07:
        $z4 = r0 instanceof java.lang.Boolean;

        if $z4 != 0 goto label08;

        $r1 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        if r0 == $r1 goto label08;

        if r0 != null goto label09;

     label08:
        $r12 = staticinvoke <org.mozilla.javascript.xmlimpl.XMLLibImpl: java.lang.RuntimeException badXMLName(java.lang.Object)>(r0);

        throw $r12;

     label09:
        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r0);

        $l0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: long testUint32String(java.lang.String)>($r2);

        $b1 = $l0 cmp 0L;

        $i15 = (int) $b1;

        if $i15 < 0 goto label10;

        staticinvoke <org.mozilla.javascript.ScriptRuntime: void storeUint32Result(org.mozilla.javascript.Context,long)>(r4, $l0);

        r8 = null;

        goto label11;

     label10:
        r8 = virtualinvoke r3.<org.mozilla.javascript.xmlimpl.XMLLibImpl: org.mozilla.javascript.xmlimpl.XMLName toXMLNameFromString(org.mozilla.javascript.Context,java.lang.String)>(r4, $r2);

     label11:
        return r8;
    }

    org.mozilla.javascript.xmlimpl.XMLName toXMLNameFromString(org.mozilla.javascript.Context, java.lang.String)
    {
        org.mozilla.javascript.Context r2;
        char $c1;
        java.lang.IllegalArgumentException $r9;
        org.mozilla.javascript.xmlimpl.XMLLibImpl r1;
        org.mozilla.javascript.xmlimpl.XMLName $r4, $r5, $r8;
        int $i0, $i2, $i3;
        java.lang.String r0, $r3, $r7;

        r1 := @this: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r2 := @parameter0: org.mozilla.javascript.Context;

        r0 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r9;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 == 0 goto label3;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i2 = (int) $c1;

        if $i2 != 42 goto label2;

        if $i0 != 1 goto label3;

        $r5 = staticinvoke <org.mozilla.javascript.xmlimpl.XMLName: org.mozilla.javascript.xmlimpl.XMLName formStar()>();

        return $r5;

     label2:
        $i3 = (int) $c1;

        if $i3 != 64 goto label3;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1);

        $r4 = staticinvoke <org.mozilla.javascript.xmlimpl.XMLName: org.mozilla.javascript.xmlimpl.XMLName formProperty(java.lang.String,java.lang.String)>("", $r3);

        virtualinvoke $r4.<org.mozilla.javascript.xmlimpl.XMLName: void setAttributeName()>();

        return $r4;

     label3:
        $r7 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLLibImpl: java.lang.String getDefaultNamespaceURI(org.mozilla.javascript.Context)>(r2);

        $r8 = staticinvoke <org.mozilla.javascript.xmlimpl.XMLName: org.mozilla.javascript.xmlimpl.XMLName formProperty(java.lang.String,java.lang.String)>($r7, r0);

        return $r8;
    }

    org.mozilla.javascript.xmlimpl.Namespace constructNamespace(org.mozilla.javascript.Context, java.lang.Object)
    {
        org.mozilla.javascript.Context r4;
        org.mozilla.javascript.xmlimpl.XMLLibImpl r2;
        int $i0;
        java.lang.Object r0;
        java.lang.String $r1, $r3, r6, r7, $r9;
        org.mozilla.javascript.xmlimpl.Namespace r5, $r10;
        org.mozilla.javascript.xmlimpl.QName r8;
        boolean $z0, $z1;

        r2 := @this: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r4 := @parameter0: org.mozilla.javascript.Context;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof org.mozilla.javascript.xmlimpl.Namespace;

        if $z0 == 0 goto label1;

        r5 = (org.mozilla.javascript.xmlimpl.Namespace) r0;

        r6 = virtualinvoke r5.<org.mozilla.javascript.xmlimpl.Namespace: java.lang.String prefix()>();

        r7 = virtualinvoke r5.<org.mozilla.javascript.xmlimpl.Namespace: java.lang.String uri()>();

        goto label6;

     label1:
        $z1 = r0 instanceof org.mozilla.javascript.xmlimpl.QName;

        if $z1 == 0 goto label3;

        r8 = (org.mozilla.javascript.xmlimpl.QName) r0;

        $r3 = virtualinvoke r8.<org.mozilla.javascript.xmlimpl.QName: java.lang.String uri()>();

        r7 = $r3;

        if $r3 == null goto label2;

        r6 = virtualinvoke r8.<org.mozilla.javascript.xmlimpl.QName: java.lang.String prefix()>();

        goto label6;

     label2:
        r7 = virtualinvoke r8.<org.mozilla.javascript.xmlimpl.QName: java.lang.String toString()>();

        r6 = null;

        goto label6;

     label3:
        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r0);

        r7 = $r1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label4;

        $r9 = "";

        goto label5;

     label4:
        $r9 = null;

     label5:
        r6 = $r9;

     label6:
        $r10 = new org.mozilla.javascript.xmlimpl.Namespace;

        specialinvoke $r10.<org.mozilla.javascript.xmlimpl.Namespace: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl,java.lang.String,java.lang.String)>(r2, r6, r7);

        return $r10;
    }

    org.mozilla.javascript.xmlimpl.Namespace castToNamespace(org.mozilla.javascript.Context, java.lang.Object)
    {
        org.mozilla.javascript.xmlimpl.XMLLibImpl r1;
        org.mozilla.javascript.Context r2;
        java.lang.Object r0;
        org.mozilla.javascript.xmlimpl.Namespace $r3, $r4;
        boolean $z0;

        r1 := @this: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r2 := @parameter0: org.mozilla.javascript.Context;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof org.mozilla.javascript.xmlimpl.Namespace;

        if $z0 == 0 goto label1;

        $r4 = (org.mozilla.javascript.xmlimpl.Namespace) r0;

        return $r4;

     label1:
        $r3 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLLibImpl: org.mozilla.javascript.xmlimpl.Namespace constructNamespace(org.mozilla.javascript.Context,java.lang.Object)>(r2, r0);

        return $r3;
    }

    org.mozilla.javascript.xmlimpl.Namespace constructNamespace(org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.xmlimpl.XMLLibImpl r1;
        org.mozilla.javascript.xmlimpl.Namespace $r0;
        org.mozilla.javascript.Context r2;

        r1 := @this: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r2 := @parameter0: org.mozilla.javascript.Context;

        $r0 = new org.mozilla.javascript.xmlimpl.Namespace;

        specialinvoke $r0.<org.mozilla.javascript.xmlimpl.Namespace: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl,java.lang.String,java.lang.String)>(r1, "", "");

        return $r0;
    }

    public org.mozilla.javascript.xmlimpl.Namespace constructNamespace(org.mozilla.javascript.Context, java.lang.Object, java.lang.Object)
    {
        org.mozilla.javascript.EcmaError $r12;
        org.mozilla.javascript.xmlimpl.XMLLibImpl r3;
        java.lang.StringBuffer $r7, $r8, $r9, $r10;
        int $i0, $i1;
        java.lang.String $r6, $r11, $r14, r15, r16;
        org.mozilla.javascript.xmlimpl.QName r13;
        org.mozilla.javascript.xmlimpl.Namespace $r17;
        boolean $z0, $z1;
        org.mozilla.javascript.Context r4;
        java.lang.Object r0, r1, $r2, $r5;

        r3 := @this: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r4 := @parameter0: org.mozilla.javascript.Context;

        r1 := @parameter1: java.lang.Object;

        r0 := @parameter2: java.lang.Object;

        $z0 = r0 instanceof org.mozilla.javascript.xmlimpl.QName;

        if $z0 == 0 goto label1;

        r13 = (org.mozilla.javascript.xmlimpl.QName) r0;

        $r14 = virtualinvoke r13.<org.mozilla.javascript.xmlimpl.QName: java.lang.String uri()>();

        r15 = $r14;

        if $r14 != null goto label2;

        r15 = virtualinvoke r13.<org.mozilla.javascript.xmlimpl.QName: java.lang.String toString()>();

        goto label2;

     label1:
        r15 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r0);

     label2:
        $i1 = virtualinvoke r15.<java.lang.String: int length()>();

        if $i1 != 0 goto label4;

        $r5 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        if r1 != $r5 goto label3;

        r16 = "";

        goto label7;

     label3:
        $r6 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r1);

        r16 = $r6;

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i0 == 0 goto label7;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal prefix \'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' for \'no namespace\'.");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        $r12 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>($r11);

        throw $r12;

     label4:
        $r2 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        if r1 != $r2 goto label5;

        r16 = "";

        goto label7;

     label5:
        $z1 = virtualinvoke r3.<org.mozilla.javascript.xmlimpl.XMLLibImpl: boolean isXMLName(org.mozilla.javascript.Context,java.lang.Object)>(r4, r1);

        if $z1 != 0 goto label6;

        r16 = "";

        goto label7;

     label6:
        r16 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r1);

     label7:
        $r17 = new org.mozilla.javascript.xmlimpl.Namespace;

        specialinvoke $r17.<org.mozilla.javascript.xmlimpl.Namespace: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl,java.lang.String,java.lang.String)>(r3, r16, r15);

        return $r17;
    }

    java.lang.String getDefaultNamespaceURI(org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.xmlimpl.XMLLibImpl r2;
        org.mozilla.javascript.Context r3;
        java.lang.Object $r0;
        java.lang.String r4;
        org.mozilla.javascript.xmlimpl.Namespace $r1;
        boolean $z0;

        r2 := @this: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r3 := @parameter0: org.mozilla.javascript.Context;

        r4 = "";

        if r3 != null goto label1;

        r3 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.Context getCurrentContext()>();

     label1:
        if r3 == null goto label2;

        $r0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object searchDefaultNamespace(org.mozilla.javascript.Context)>(r3);

        if $r0 == null goto label2;

        $z0 = $r0 instanceof org.mozilla.javascript.xmlimpl.Namespace;

        if $z0 == 0 goto label2;

        $r1 = (org.mozilla.javascript.xmlimpl.Namespace) $r0;

        r4 = virtualinvoke $r1.<org.mozilla.javascript.xmlimpl.Namespace: java.lang.String uri()>();

     label2:
        return r4;
    }

    org.mozilla.javascript.xmlimpl.Namespace getDefaultNamespace(org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.xmlimpl.XMLLibImpl r1;
        org.mozilla.javascript.Context $r2, r4;
        java.lang.Object $r0;
        org.mozilla.javascript.xmlimpl.Namespace $r3, r5;
        boolean $z0;

        r1 := @this: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r4 := @parameter0: org.mozilla.javascript.Context;

        if r4 != null goto label1;

        $r2 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.Context getCurrentContext()>();

        r4 = $r2;

        if $r2 != null goto label1;

        $r3 = r1.<org.mozilla.javascript.xmlimpl.XMLLibImpl: org.mozilla.javascript.xmlimpl.Namespace namespacePrototype>;

        return $r3;

     label1:
        $r0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object searchDefaultNamespace(org.mozilla.javascript.Context)>(r4);

        if $r0 != null goto label2;

        r5 = r1.<org.mozilla.javascript.xmlimpl.XMLLibImpl: org.mozilla.javascript.xmlimpl.Namespace namespacePrototype>;

        goto label4;

     label2:
        $z0 = $r0 instanceof org.mozilla.javascript.xmlimpl.Namespace;

        if $z0 == 0 goto label3;

        r5 = (org.mozilla.javascript.xmlimpl.Namespace) $r0;

        goto label4;

     label3:
        r5 = r1.<org.mozilla.javascript.xmlimpl.XMLLibImpl: org.mozilla.javascript.xmlimpl.Namespace namespacePrototype>;

     label4:
        return r5;
    }

    org.mozilla.javascript.xmlimpl.QName castToQName(org.mozilla.javascript.Context, java.lang.Object)
    {
        org.mozilla.javascript.xmlimpl.XMLLibImpl r1;
        org.mozilla.javascript.Context r2;
        java.lang.Object r0;
        org.mozilla.javascript.xmlimpl.QName $r3, $r4;
        boolean $z0;

        r1 := @this: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r2 := @parameter0: org.mozilla.javascript.Context;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof org.mozilla.javascript.xmlimpl.QName;

        if $z0 == 0 goto label1;

        $r4 = (org.mozilla.javascript.xmlimpl.QName) r0;

        return $r4;

     label1:
        $r3 = virtualinvoke r1.<org.mozilla.javascript.xmlimpl.XMLLibImpl: org.mozilla.javascript.xmlimpl.QName constructQName(org.mozilla.javascript.Context,java.lang.Object)>(r2, r0);

        return $r3;
    }

    org.mozilla.javascript.xmlimpl.QName constructQName(org.mozilla.javascript.Context, java.lang.Object)
    {
        org.mozilla.javascript.Context r3;
        org.mozilla.javascript.xmlimpl.XMLLibImpl r2;
        java.lang.Object r0;
        java.lang.String $r1, $r5, $r6, $r7;
        org.mozilla.javascript.xmlimpl.QName $r4, r8, r9;
        boolean $z0;

        r2 := @this: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r3 := @parameter0: org.mozilla.javascript.Context;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof org.mozilla.javascript.xmlimpl.QName;

        if $z0 == 0 goto label1;

        r8 = (org.mozilla.javascript.xmlimpl.QName) r0;

        $r4 = new org.mozilla.javascript.xmlimpl.QName;

        $r5 = virtualinvoke r8.<org.mozilla.javascript.xmlimpl.QName: java.lang.String uri()>();

        $r6 = virtualinvoke r8.<org.mozilla.javascript.xmlimpl.QName: java.lang.String localName()>();

        $r7 = virtualinvoke r8.<org.mozilla.javascript.xmlimpl.QName: java.lang.String prefix()>();

        specialinvoke $r4.<org.mozilla.javascript.xmlimpl.QName: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl,java.lang.String,java.lang.String,java.lang.String)>(r2, $r5, $r6, $r7);

        r9 = $r4;

        goto label2;

     label1:
        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r0);

        r9 = virtualinvoke r2.<org.mozilla.javascript.xmlimpl.XMLLibImpl: org.mozilla.javascript.xmlimpl.QName constructQNameFromString(org.mozilla.javascript.Context,java.lang.String)>(r3, $r1);

     label2:
        return r9;
    }

    org.mozilla.javascript.xmlimpl.QName constructQNameFromString(org.mozilla.javascript.Context, java.lang.String)
    {
        org.mozilla.javascript.Context r3;
        java.lang.IllegalArgumentException $r6;
        org.mozilla.javascript.xmlimpl.XMLLibImpl r2;
        java.lang.String r0, $r1, r7, r8;
        org.mozilla.javascript.xmlimpl.Namespace $r4;
        org.mozilla.javascript.xmlimpl.QName $r5;
        boolean $z0;

        r2 := @this: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r3 := @parameter0: org.mozilla.javascript.Context;

        r0 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r6;

     label1:
        $r1 = "*";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        r7 = null;

        r8 = null;

        goto label3;

     label2:
        $r4 = virtualinvoke r2.<org.mozilla.javascript.xmlimpl.XMLLibImpl: org.mozilla.javascript.xmlimpl.Namespace getDefaultNamespace(org.mozilla.javascript.Context)>(r3);

        r7 = virtualinvoke $r4.<org.mozilla.javascript.xmlimpl.Namespace: java.lang.String uri()>();

        r8 = virtualinvoke $r4.<org.mozilla.javascript.xmlimpl.Namespace: java.lang.String prefix()>();

     label3:
        $r5 = new org.mozilla.javascript.xmlimpl.QName;

        specialinvoke $r5.<org.mozilla.javascript.xmlimpl.QName: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl,java.lang.String,java.lang.String,java.lang.String)>(r2, r7, r0, r8);

        return $r5;
    }

    org.mozilla.javascript.xmlimpl.QName constructQName(org.mozilla.javascript.Context, java.lang.Object, java.lang.Object)
    {
        org.mozilla.javascript.Context r4;
        org.mozilla.javascript.xmlimpl.XMLLibImpl r3;
        java.lang.Object r0, r1, $r2;
        java.lang.String $r6, r8, r10, r11;
        org.mozilla.javascript.xmlimpl.QName $r5, r7;
        org.mozilla.javascript.xmlimpl.Namespace r9;
        boolean $z0, $z1, $z2;

        r3 := @this: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r4 := @parameter0: org.mozilla.javascript.Context;

        r1 := @parameter1: java.lang.Object;

        r0 := @parameter2: java.lang.Object;

        $z0 = r0 instanceof org.mozilla.javascript.xmlimpl.QName;

        if $z0 == 0 goto label1;

        r7 = (org.mozilla.javascript.xmlimpl.QName) r0;

        r8 = virtualinvoke r7.<org.mozilla.javascript.xmlimpl.QName: java.lang.String localName()>();

        goto label2;

     label1:
        r8 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r0);

     label2:
        $r2 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        if r1 != $r2 goto label4;

        $r6 = "*";

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z2 == 0 goto label3;

        r9 = null;

        goto label7;

     label3:
        r9 = virtualinvoke r3.<org.mozilla.javascript.xmlimpl.XMLLibImpl: org.mozilla.javascript.xmlimpl.Namespace getDefaultNamespace(org.mozilla.javascript.Context)>(r4);

        goto label7;

     label4:
        if r1 != null goto label5;

        r9 = null;

        goto label7;

     label5:
        $z1 = r1 instanceof org.mozilla.javascript.xmlimpl.Namespace;

        if $z1 == 0 goto label6;

        r9 = (org.mozilla.javascript.xmlimpl.Namespace) r1;

        goto label7;

     label6:
        r9 = virtualinvoke r3.<org.mozilla.javascript.xmlimpl.XMLLibImpl: org.mozilla.javascript.xmlimpl.Namespace constructNamespace(org.mozilla.javascript.Context,java.lang.Object)>(r4, r1);

     label7:
        if r9 != null goto label8;

        r10 = null;

        r11 = null;

        goto label9;

     label8:
        r10 = virtualinvoke r9.<org.mozilla.javascript.xmlimpl.Namespace: java.lang.String uri()>();

        r11 = virtualinvoke r9.<org.mozilla.javascript.xmlimpl.Namespace: java.lang.String prefix()>();

     label9:
        $r5 = new org.mozilla.javascript.xmlimpl.QName;

        specialinvoke $r5.<org.mozilla.javascript.xmlimpl.QName: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl,java.lang.String,java.lang.String,java.lang.String)>(r3, r10, r8, r11);

        return $r5;
    }

    java.lang.Object addXMLObjects(org.mozilla.javascript.Context, org.mozilla.javascript.xml.XMLObject, org.mozilla.javascript.xml.XMLObject)
    {
        org.mozilla.javascript.xml.XMLObject r2, r3;
        org.mozilla.javascript.xmlimpl.XML $r4, $r6;
        org.mozilla.javascript.xmlimpl.XMLLibImpl r1;
        int $i0, $i1, i2;
        boolean $z0, $z1, $z2;
        org.mozilla.javascript.xmlimpl.XMLList $r0, $r5, r8, r9, r10;
        org.mozilla.javascript.Context r7;

        r1 := @this: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r7 := @parameter0: org.mozilla.javascript.Context;

        r2 := @parameter1: org.mozilla.javascript.xml.XMLObject;

        r3 := @parameter2: org.mozilla.javascript.xml.XMLObject;

        $r0 = new org.mozilla.javascript.xmlimpl.XMLList;

        specialinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl)>(r1);

        r8 = $r0;

        $z0 = r2 instanceof org.mozilla.javascript.xmlimpl.XMLList;

        if $z0 == 0 goto label2;

        r9 = (org.mozilla.javascript.xmlimpl.XMLList) r2;

        $i1 = virtualinvoke r9.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if $i1 != 1 goto label1;

        $r6 = virtualinvoke r9.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML item(int)>(0);

        virtualinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void addToList(java.lang.Object)>($r6);

        goto label3;

     label1:
        $r5 = new org.mozilla.javascript.xmlimpl.XMLList;

        specialinvoke $r5.<org.mozilla.javascript.xmlimpl.XMLList: void <init>(org.mozilla.javascript.xmlimpl.XMLLibImpl,java.lang.Object)>(r1, r2);

        r8 = $r5;

        goto label3;

     label2:
        virtualinvoke $r0.<org.mozilla.javascript.xmlimpl.XMLList: void addToList(java.lang.Object)>(r2);

     label3:
        $z2 = r3 instanceof org.mozilla.javascript.xmlimpl.XMLList;

        if $z2 == 0 goto label5;

        r10 = (org.mozilla.javascript.xmlimpl.XMLList) r3;

        i2 = 0;

     label4:
        $i0 = virtualinvoke r10.<org.mozilla.javascript.xmlimpl.XMLList: int length()>();

        if i2 >= $i0 goto label6;

        $r4 = virtualinvoke r10.<org.mozilla.javascript.xmlimpl.XMLList: org.mozilla.javascript.xmlimpl.XML item(int)>(i2);

        virtualinvoke r8.<org.mozilla.javascript.xmlimpl.XMLList: void addToList(java.lang.Object)>($r4);

        i2 = i2 + 1;

        goto label4;

     label5:
        $z1 = r3 instanceof org.mozilla.javascript.xmlimpl.XML;

        if $z1 == 0 goto label6;

        virtualinvoke r8.<org.mozilla.javascript.xmlimpl.XMLList: void addToList(java.lang.Object)>(r3);

     label6:
        return r8;
    }

    public boolean isXMLName(org.mozilla.javascript.Context, java.lang.Object)
    {
        org.mozilla.javascript.EcmaError $r2;
        org.mozilla.javascript.xmlimpl.XMLLibImpl r5;
        int $i0, i3, $i4, $i5;
        java.lang.String $r1, $r3, $r4;
        boolean $z0, $z1, $z2;
        org.mozilla.javascript.Context r6;
        char $c1, $c2;
        java.lang.Object r0;

        r5 := @this: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r6 := @parameter0: org.mozilla.javascript.Context;

        r0 := @parameter1: java.lang.Object;

     label1:
        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r0);

     label2:
        goto label5;

     label3:
        $r2 := @caughtexception;

        $r3 = "TypeError";

        $r4 = virtualinvoke $r2.<org.mozilla.javascript.EcmaError: java.lang.String getName()>();

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z2 == 0 goto label4;

        return 0;

     label4:
        throw $r2;

     label5:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 == 0 goto label9;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        $i4 = (int) $c1;

        $z0 = staticinvoke <org.mozilla.javascript.xmlimpl.XMLLibImpl: boolean isNCNameStartChar(int)>($i4);

        if $z0 == 0 goto label9;

        i3 = 1;

     label6:
        if i3 == $i0 goto label8;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i3);

        $i5 = (int) $c2;

        $z1 = staticinvoke <org.mozilla.javascript.xmlimpl.XMLLibImpl: boolean isNCNameChar(int)>($i5);

        if $z1 != 0 goto label7;

        return 0;

     label7:
        i3 = i3 + 1;

        goto label6;

     label8:
        return 1;

     label9:
        return 0;

        catch org.mozilla.javascript.EcmaError from label1 to label2 with label3;
    }

    private static boolean isNCNameStartChar(int)
    {
        int i0, $i1, $i2, $i4, $i6, $i8, $i10, $i12, $i14, $i16;
        boolean $z0, $z1, $z2, $z3;

        i0 := @parameter0: int;

        $i4 = (int) -128;

        $i1 = i0 & $i4;

        if $i1 != 0 goto label07;

        if i0 < 97 goto label03;

        if i0 > 122 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        return $z0;

     label03:
        if i0 < 65 goto label15;

        if i0 > 90 goto label04;

        return 1;

     label04:
        if i0 != 95 goto label05;

        $z1 = 1;

        goto label06;

     label05:
        $z1 = 0;

     label06:
        return $z1;

     label07:
        $i6 = (int) -8192;

        $i2 = i0 & $i6;

        if $i2 != 0 goto label15;

        if 192 > i0 goto label08;

        if i0 <= 214 goto label12;

     label08:
        if 216 > i0 goto label09;

        if i0 <= 246 goto label12;

     label09:
        if 248 > i0 goto label10;

        if i0 <= 767 goto label12;

     label10:
        if 880 > i0 goto label11;

        if i0 <= 893 goto label12;

     label11:
        if 895 > i0 goto label13;

     label12:
        $z2 = 1;

        goto label14;

     label13:
        $z2 = 0;

     label14:
        return $z2;

     label15:
        if 8204 > i0 goto label16;

        if i0 <= 8205 goto label22;

     label16:
        if 8304 > i0 goto label17;

        if i0 <= 8591 goto label22;

     label17:
        if 11264 > i0 goto label18;

        if i0 <= 12271 goto label22;

     label18:
        if 12289 > i0 goto label19;

        $i8 = (int) 55295;

        if i0 <= $i8 goto label22;

     label19:
        $i10 = (int) 63744;

        if $i10 > i0 goto label20;

        $i12 = (int) 64975;

        if i0 <= $i12 goto label22;

     label20:
        $i14 = (int) 65008;

        if $i14 > i0 goto label21;

        $i16 = (int) 65533;

        if i0 <= $i16 goto label22;

     label21:
        if 65536 > i0 goto label23;

        if i0 > 983039 goto label23;

     label22:
        $z3 = 1;

        goto label24;

     label23:
        $z3 = 0;

     label24:
        return $z3;
    }

    private static boolean isNCNameChar(int)
    {
        int i0, $i1, $i2, $i4, $i6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;

        i0 := @parameter0: int;

        $i4 = (int) -128;

        $i1 = i0 & $i4;

        if $i1 != 0 goto label14;

        if i0 < 97 goto label03;

        if i0 > 122 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        return $z2;

     label03:
        if i0 < 65 goto label07;

        if i0 > 90 goto label04;

        return 1;

     label04:
        if i0 != 95 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        return $z3;

     label07:
        if i0 < 48 goto label10;

        if i0 > 57 goto label08;

        $z4 = 1;

        goto label09;

     label08:
        $z4 = 0;

     label09:
        return $z4;

     label10:
        if i0 == 45 goto label11;

        if i0 != 46 goto label12;

     label11:
        $z5 = 1;

        goto label13;

     label12:
        $z5 = 0;

     label13:
        return $z5;

     label14:
        $i6 = (int) -8192;

        $i2 = i0 & $i6;

        if $i2 != 0 goto label18;

        $z1 = staticinvoke <org.mozilla.javascript.xmlimpl.XMLLibImpl: boolean isNCNameStartChar(int)>(i0);

        if $z1 != 0 goto label15;

        if i0 == 183 goto label15;

        if 768 > i0 goto label16;

        if i0 > 879 goto label16;

     label15:
        $z6 = 1;

        goto label17;

     label16:
        $z6 = 0;

     label17:
        return $z6;

     label18:
        $z0 = staticinvoke <org.mozilla.javascript.xmlimpl.XMLLibImpl: boolean isNCNameStartChar(int)>(i0);

        if $z0 != 0 goto label19;

        if 8255 > i0 goto label20;

        if i0 > 8256 goto label20;

     label19:
        $z7 = 1;

        goto label21;

     label20:
        $z7 = 0;

     label21:
        return $z7;
    }

    org.mozilla.javascript.xmlimpl.XMLName toQualifiedName(org.mozilla.javascript.Context, java.lang.Object, java.lang.Object)
    {
        org.mozilla.javascript.Context r4;
        org.mozilla.javascript.xmlimpl.XMLLibImpl r3;
        org.mozilla.javascript.xmlimpl.XMLName $r5;
        java.lang.Object r0, r1, $r2;
        java.lang.String $r6, r8, r10;
        org.mozilla.javascript.xmlimpl.QName r7;
        org.mozilla.javascript.xmlimpl.Namespace r9;
        boolean $z0, $z1, $z2;

        r3 := @this: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r4 := @parameter0: org.mozilla.javascript.Context;

        r1 := @parameter1: java.lang.Object;

        r0 := @parameter2: java.lang.Object;

        $z0 = r0 instanceof org.mozilla.javascript.xmlimpl.QName;

        if $z0 == 0 goto label1;

        r7 = (org.mozilla.javascript.xmlimpl.QName) r0;

        r8 = virtualinvoke r7.<org.mozilla.javascript.xmlimpl.QName: java.lang.String localName()>();

        goto label2;

     label1:
        r8 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r0);

     label2:
        $r2 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        if r1 != $r2 goto label4;

        $r6 = "*";

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z2 == 0 goto label3;

        r9 = null;

        goto label7;

     label3:
        r9 = virtualinvoke r3.<org.mozilla.javascript.xmlimpl.XMLLibImpl: org.mozilla.javascript.xmlimpl.Namespace getDefaultNamespace(org.mozilla.javascript.Context)>(r4);

        goto label7;

     label4:
        if r1 != null goto label5;

        r9 = null;

        goto label7;

     label5:
        $z1 = r1 instanceof org.mozilla.javascript.xmlimpl.Namespace;

        if $z1 == 0 goto label6;

        r9 = (org.mozilla.javascript.xmlimpl.Namespace) r1;

        goto label7;

     label6:
        r9 = virtualinvoke r3.<org.mozilla.javascript.xmlimpl.XMLLibImpl: org.mozilla.javascript.xmlimpl.Namespace constructNamespace(org.mozilla.javascript.Context,java.lang.Object)>(r4, r1);

     label7:
        if r9 != null goto label8;

        r10 = null;

        goto label9;

     label8:
        r10 = virtualinvoke r9.<org.mozilla.javascript.xmlimpl.Namespace: java.lang.String uri()>();

     label9:
        $r5 = staticinvoke <org.mozilla.javascript.xmlimpl.XMLName: org.mozilla.javascript.xmlimpl.XMLName formProperty(java.lang.String,java.lang.String)>(r10, r8);

        return $r5;
    }

    public org.mozilla.javascript.Ref nameRef(org.mozilla.javascript.Context, java.lang.Object, org.mozilla.javascript.Scriptable, int)
    {
        org.mozilla.javascript.Ref $r5;
        org.mozilla.javascript.Context r1;
        java.lang.RuntimeException $r6;
        org.mozilla.javascript.xmlimpl.XMLLibImpl r0;
        org.mozilla.javascript.Scriptable r4;
        org.mozilla.javascript.xmlimpl.XMLName $r3;
        int i0, $i1;
        java.lang.Object r2;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r1 := @parameter0: org.mozilla.javascript.Context;

        r2 := @parameter1: java.lang.Object;

        r4 := @parameter2: org.mozilla.javascript.Scriptable;

        i0 := @parameter3: int;

        $i1 = i0 & 2;

        if $i1 != 0 goto label1;

        $r6 = staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        throw $r6;

     label1:
        $r3 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLLibImpl: org.mozilla.javascript.xmlimpl.XMLName toAttributeName(org.mozilla.javascript.Context,java.lang.Object)>(r1, r2);

        $r5 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XMLLibImpl: org.mozilla.javascript.Ref xmlPrimaryReference(org.mozilla.javascript.Context,org.mozilla.javascript.xmlimpl.XMLName,org.mozilla.javascript.Scriptable)>(r1, $r3, r4);

        return $r5;
    }

    public org.mozilla.javascript.Ref nameRef(org.mozilla.javascript.Context, java.lang.Object, java.lang.Object, org.mozilla.javascript.Scriptable, int)
    {
        org.mozilla.javascript.Ref $r6;
        org.mozilla.javascript.Context r1;
        org.mozilla.javascript.xmlimpl.XMLLibImpl r0;
        org.mozilla.javascript.Scriptable r5;
        org.mozilla.javascript.xmlimpl.XMLName $r4;
        int i0, $i1;
        java.lang.Object r2, r3;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r1 := @parameter0: org.mozilla.javascript.Context;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r5 := @parameter3: org.mozilla.javascript.Scriptable;

        i0 := @parameter4: int;

        $r4 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLLibImpl: org.mozilla.javascript.xmlimpl.XMLName toQualifiedName(org.mozilla.javascript.Context,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        $z0 = virtualinvoke $r4.<org.mozilla.javascript.xmlimpl.XMLName: boolean isAttributeName()>();

        if $z0 != 0 goto label1;

        virtualinvoke $r4.<org.mozilla.javascript.xmlimpl.XMLName: void setAttributeName()>();

     label1:
        $r6 = specialinvoke r0.<org.mozilla.javascript.xmlimpl.XMLLibImpl: org.mozilla.javascript.Ref xmlPrimaryReference(org.mozilla.javascript.Context,org.mozilla.javascript.xmlimpl.XMLName,org.mozilla.javascript.Scriptable)>(r1, $r4, r5);

        return $r6;
    }

    private org.mozilla.javascript.Ref xmlPrimaryReference(org.mozilla.javascript.Context, org.mozilla.javascript.xmlimpl.XMLName, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.Context r3;
        org.mozilla.javascript.xmlimpl.XMLObjectImpl r5, r6;
        org.mozilla.javascript.xmlimpl.XMLLibImpl r2;
        org.mozilla.javascript.Scriptable $r1, r4, $r7;
        org.mozilla.javascript.xmlimpl.XMLName r0;
        boolean $z0, $z1;

        r2 := @this: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r3 := @parameter0: org.mozilla.javascript.Context;

        r0 := @parameter1: org.mozilla.javascript.xmlimpl.XMLName;

        r4 := @parameter2: org.mozilla.javascript.Scriptable;

        r5 = null;

     label1:
        $z0 = r4 instanceof org.mozilla.javascript.xmlimpl.XMLWithScope;

        if $z0 == 0 goto label3;

        $r1 = interfaceinvoke r4.<org.mozilla.javascript.Scriptable: org.mozilla.javascript.Scriptable getPrototype()>();

        r6 = (org.mozilla.javascript.xmlimpl.XMLObjectImpl) $r1;

        $z1 = virtualinvoke r6.<org.mozilla.javascript.xmlimpl.XMLObjectImpl: boolean hasXMLProperty(org.mozilla.javascript.xmlimpl.XMLName)>(r0);

        if $z1 == 0 goto label2;

        goto label4;

     label2:
        if r5 != null goto label3;

        r5 = r6;

     label3:
        $r7 = interfaceinvoke r4.<org.mozilla.javascript.Scriptable: org.mozilla.javascript.Scriptable getParentScope()>();

        r4 = $r7;

        if $r7 != null goto label1;

        r6 = r5;

        goto label4;

     label4:
        if r6 == null goto label5;

        virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLName: void initXMLObject(org.mozilla.javascript.xmlimpl.XMLObjectImpl)>(r6);

     label5:
        return r0;
    }

    public java.lang.String escapeAttributeValue(java.lang.Object)
    {
        org.apache.xmlbeans.XmlCursor $r3;
        org.mozilla.javascript.xmlimpl.XMLLibImpl r6;
        int $i0, $i1, $i2, $i3;
        java.lang.Object r0;
        java.lang.String $r1, $r4, $r5;
        org.apache.xmlbeans.XmlObject $r2;

        r6 := @this: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r0);

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return "\"\"";

     label1:
        $r2 = staticinvoke <org.apache.xmlbeans.XmlObject$Factory: org.apache.xmlbeans.XmlObject newInstance()>();

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlCursor newCursor()>();

        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: void beginElement(java.lang.String)>("a");

        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: void insertAttributeWithValue(java.lang.String,java.lang.String)>("a", $r1);

        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        $r4 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $i1 = virtualinvoke $r4.<java.lang.String: int indexOf(int)>(34);

        $i2 = virtualinvoke $r4.<java.lang.String: int lastIndexOf(int)>(34);

        $i3 = $i2 + 1;

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>($i1, $i3);

        return $r5;
    }

    public java.lang.String escapeTextValue(java.lang.Object)
    {
        org.mozilla.javascript.xmlimpl.XMLObjectImpl $r5;
        org.apache.xmlbeans.XmlCursor $r3;
        org.mozilla.javascript.xmlimpl.XMLLibImpl r7;
        int $i0, $i1, i2, $i3;
        java.lang.Object r0;
        java.lang.String $r1, $r4, $r6, $r8;
        org.apache.xmlbeans.XmlObject $r2;
        boolean $z0;

        r7 := @this: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.mozilla.javascript.xmlimpl.XMLObjectImpl;

        if $z0 == 0 goto label1;

        $r5 = (org.mozilla.javascript.xmlimpl.XMLObjectImpl) r0;

        $r6 = virtualinvoke $r5.<org.mozilla.javascript.xmlimpl.XMLObjectImpl: java.lang.String toXMLString(int)>(0);

        return $r6;

     label1:
        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r0);

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        return $r1;

     label2:
        $r2 = staticinvoke <org.apache.xmlbeans.XmlObject$Factory: org.apache.xmlbeans.XmlObject newInstance()>();

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlCursor newCursor()>();

        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: void beginElement(java.lang.String)>("a");

        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: void insertChars(java.lang.String)>($r1);

        interfaceinvoke $r3.<org.apache.xmlbeans.XmlCursor: void dispose()>();

        $r4 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $i1 = virtualinvoke $r4.<java.lang.String: int indexOf(int)>(62);

        i2 = $i1 + 1;

        $i3 = virtualinvoke $r4.<java.lang.String: int lastIndexOf(int)>(60);

        if i2 >= $i3 goto label3;

        $r8 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(i2, $i3);

        goto label4;

     label3:
        $r8 = "";

     label4:
        return $r8;
    }

    public java.lang.Object toDefaultXmlNamespace(org.mozilla.javascript.Context, java.lang.Object)
    {
        org.mozilla.javascript.xmlimpl.XMLLibImpl r0;
        org.mozilla.javascript.Context r1;
        java.lang.Object r2;
        org.mozilla.javascript.xmlimpl.Namespace $r3;

        r0 := @this: org.mozilla.javascript.xmlimpl.XMLLibImpl;

        r1 := @parameter0: org.mozilla.javascript.Context;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<org.mozilla.javascript.xmlimpl.XMLLibImpl: org.mozilla.javascript.xmlimpl.Namespace constructNamespace(org.mozilla.javascript.Context,java.lang.Object)>(r1, r2);

        return $r3;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <org.mozilla.javascript.xmlimpl.XMLLibImpl: long serialVersionUID> = 1L;

        return;
    }
}
