class com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl extends com.sun.xml.bind.v2.model.impl.PropertyInfoImpl implements com.sun.xml.bind.v2.model.core.MapPropertyInfo
{
    private final javax.xml.namespace.QName xmlName;
    private boolean nil;
    private final java.lang.Object keyType;
    private final java.lang.Object valueType;
    private com.sun.xml.bind.v2.model.core.NonElement keyTypeInfo;
    private com.sun.xml.bind.v2.model.core.NonElement valueTypeInfo;
    static final boolean $assertionsDisabled;

    public void <init>(com.sun.xml.bind.v2.model.impl.ClassInfoImpl, com.sun.xml.bind.v2.model.impl.PropertySeed)
    {
        com.sun.xml.bind.v2.model.impl.PropertySeed r2;
        javax.xml.bind.'annotation'.XmlElementWrapper r4;
        java.lang.AssertionError $r13;
        boolean $z0, $z1, $z2, $z3;
        com.sun.xml.bind.v2.model.impl.ClassInfoImpl r1;
        com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl r0;
        java.lang.'annotation'.Annotation $r3;
        java.lang.Object $r8, $r10, $r12, $r14, $r17, $r18;
        javax.xml.namespace.QName $r5;
        com.sun.xml.bind.v2.model.nav.Navigator $r6, $r7, $r9, $r11, $r15, $r16;

        r0 := @this: com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl;

        r1 := @parameter0: com.sun.xml.bind.v2.model.impl.ClassInfoImpl;

        r2 := @parameter1: com.sun.xml.bind.v2.model.impl.PropertySeed;

        specialinvoke r0.<com.sun.xml.bind.v2.model.impl.PropertyInfoImpl: void <init>(com.sun.xml.bind.v2.model.impl.ClassInfoImpl,com.sun.xml.bind.v2.model.impl.PropertySeed)>(r1, r2);

        $r3 = interfaceinvoke r2.<com.sun.xml.bind.v2.model.impl.PropertySeed: java.lang.'annotation'.Annotation readAnnotation(java.lang.Class)>(class "Ljavax/xml/bind/annotation/XmlElementWrapper;");

        r4 = (javax.xml.bind.'annotation'.XmlElementWrapper) $r3;

        $r5 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl: javax.xml.namespace.QName calcXmlName(javax.xml.bind.'annotation'.XmlElementWrapper)>(r4);

        r0.<com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl: javax.xml.namespace.QName xmlName> = $r5;

        if r4 == null goto label1;

        $z1 = interfaceinvoke r4.<javax.xml.bind.'annotation'.XmlElementWrapper: boolean nillable()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        r0.<com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl: boolean nil> = $z2;

        $r14 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl: java.lang.Object getRawType()>();

        $r15 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl: com.sun.xml.bind.v2.model.nav.Navigator nav()>();

        $r16 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl: com.sun.xml.bind.v2.model.nav.Navigator nav()>();

        $r17 = interfaceinvoke $r16.<com.sun.xml.bind.v2.model.nav.Navigator: java.lang.Object asDecl(java.lang.Class)>(class "Ljava/util/Map;");

        $r18 = interfaceinvoke $r15.<com.sun.xml.bind.v2.model.nav.Navigator: java.lang.Object getBaseClass(java.lang.Object,java.lang.Object)>($r14, $r17);

        $z3 = <com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl: boolean $assertionsDisabled>;

        if $z3 != 0 goto label3;

        if $r18 != null goto label3;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label3:
        $r6 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl: com.sun.xml.bind.v2.model.nav.Navigator nav()>();

        $z0 = interfaceinvoke $r6.<com.sun.xml.bind.v2.model.nav.Navigator: boolean isParameterizedType(java.lang.Object)>($r18);

        if $z0 == 0 goto label4;

        $r9 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl: com.sun.xml.bind.v2.model.nav.Navigator nav()>();

        $r10 = interfaceinvoke $r9.<com.sun.xml.bind.v2.model.nav.Navigator: java.lang.Object getTypeArgument(java.lang.Object,int)>($r18, 0);

        r0.<com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl: java.lang.Object keyType> = $r10;

        $r11 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl: com.sun.xml.bind.v2.model.nav.Navigator nav()>();

        $r12 = interfaceinvoke $r11.<com.sun.xml.bind.v2.model.nav.Navigator: java.lang.Object getTypeArgument(java.lang.Object,int)>($r18, 1);

        r0.<com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl: java.lang.Object valueType> = $r12;

        goto label5;

     label4:
        $r7 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl: com.sun.xml.bind.v2.model.nav.Navigator nav()>();

        $r8 = interfaceinvoke $r7.<com.sun.xml.bind.v2.model.nav.Navigator: java.lang.Object ref(java.lang.Class)>(class "Ljava/lang/Object;");

        r0.<com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl: java.lang.Object valueType> = $r8;

        r0.<com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl: java.lang.Object keyType> = $r8;

     label5:
        return;
    }

    public java.util.Collection ref()
    {
        java.util.List $r4;
        com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl r1;
        com.sun.xml.bind.v2.model.core.NonElement $r2, $r3;
        com.sun.xml.bind.v2.model.core.NonElement[] $r0;

        r1 := @this: com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl;

        $r0 = newarray (com.sun.xml.bind.v2.model.core.NonElement)[2];

        $r2 = virtualinvoke r1.<com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl: com.sun.xml.bind.v2.model.core.NonElement getKeyType()>();

        $r0[0] = $r2;

        $r3 = virtualinvoke r1.<com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl: com.sun.xml.bind.v2.model.core.NonElement getValueType()>();

        $r0[1] = $r3;

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        return $r4;
    }

    public final com.sun.xml.bind.v2.model.core.PropertyKind kind()
    {
        com.sun.xml.bind.v2.model.core.PropertyKind $r0;
        com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl r1;

        r1 := @this: com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl;

        $r0 = <com.sun.xml.bind.v2.model.core.PropertyKind: com.sun.xml.bind.v2.model.core.PropertyKind MAP>;

        return $r0;
    }

    public javax.xml.namespace.QName getXmlName()
    {
        javax.xml.namespace.QName $r1;
        com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl r0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl: javax.xml.namespace.QName xmlName>;

        return $r1;
    }

    public boolean isCollectionNillable()
    {
        com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl r0;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl;

        $z0 = r0.<com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl: boolean nil>;

        return $z0;
    }

    public com.sun.xml.bind.v2.model.core.NonElement getKeyType()
    {
        com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl r0;
        com.sun.xml.bind.v2.model.core.NonElement $r1, $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl: com.sun.xml.bind.v2.model.core.NonElement keyTypeInfo>;

        if $r1 != null goto label1;

        $r3 = r0.<com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl: java.lang.Object keyType>;

        $r4 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl: com.sun.xml.bind.v2.model.core.NonElement getTarget(java.lang.Object)>($r3);

        r0.<com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl: com.sun.xml.bind.v2.model.core.NonElement keyTypeInfo> = $r4;

     label1:
        $r2 = r0.<com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl: com.sun.xml.bind.v2.model.core.NonElement keyTypeInfo>;

        return $r2;
    }

    public com.sun.xml.bind.v2.model.core.NonElement getValueType()
    {
        com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl r0;
        com.sun.xml.bind.v2.model.core.NonElement $r1, $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl;

        $r1 = r0.<com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl: com.sun.xml.bind.v2.model.core.NonElement valueTypeInfo>;

        if $r1 != null goto label1;

        $r3 = r0.<com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl: java.lang.Object valueType>;

        $r4 = virtualinvoke r0.<com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl: com.sun.xml.bind.v2.model.core.NonElement getTarget(java.lang.Object)>($r3);

        r0.<com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl: com.sun.xml.bind.v2.model.core.NonElement valueTypeInfo> = $r4;

     label1:
        $r2 = r0.<com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl: com.sun.xml.bind.v2.model.core.NonElement valueTypeInfo>;

        return $r2;
    }

    public com.sun.xml.bind.v2.model.core.NonElement getTarget(java.lang.Object)
    {
        com.sun.xml.bind.v2.model.core.NonElement $r4;
        com.sun.xml.bind.v2.model.impl.ClassInfoImpl $r1, $r5;
        java.lang.AssertionError $r7;
        com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl r0;
        java.lang.Object r2;
        boolean $z0;
        com.sun.xml.bind.v2.model.impl.ModelBuilder $r3, $r6;

        r0 := @this: com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl;

        r2 := @parameter0: java.lang.Object;

        $z0 = <com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r5 = r0.<com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl: com.sun.xml.bind.v2.model.impl.ClassInfoImpl parent>;

        $r6 = $r5.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl: com.sun.xml.bind.v2.model.impl.ModelBuilder builder>;

        if $r6 != null goto label1;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>("this method must be called during the build stage");

        throw $r7;

     label1:
        $r1 = r0.<com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl: com.sun.xml.bind.v2.model.impl.ClassInfoImpl parent>;

        $r3 = $r1.<com.sun.xml.bind.v2.model.impl.ClassInfoImpl: com.sun.xml.bind.v2.model.impl.ModelBuilder builder>;

        $r4 = virtualinvoke $r3.<com.sun.xml.bind.v2.model.impl.ModelBuilder: com.sun.xml.bind.v2.model.core.NonElement getTypeInfo(java.lang.Object,com.sun.xml.bind.v2.model.'annotation'.Locatable)>(r2, r0);

        return $r4;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lcom/sun/xml/bind/v2/model/impl/MapPropertyInfoImpl;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.sun.xml.bind.v2.model.impl.MapPropertyInfoImpl: boolean $assertionsDisabled> = $z1;

        return;
    }
}
