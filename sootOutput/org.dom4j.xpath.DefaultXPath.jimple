public class org.dom4j.xpath.DefaultXPath extends java.lang.Object implements org.dom4j.XPath, org.dom4j.NodeFilter, java.io.Serializable
{
    private java.lang.String text;
    private org.jaxen.XPath xpath;
    private org.jaxen.NamespaceContext namespaceContext;

    public void <init>(java.lang.String) throws org.dom4j.InvalidXPathException
    {
        org.jaxen.XPath $r2;
        java.lang.String r1;
        org.dom4j.xpath.DefaultXPath r0;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.dom4j.xpath.DefaultXPath: java.lang.String text> = r1;

        $r2 = staticinvoke <org.dom4j.xpath.DefaultXPath: org.jaxen.XPath parse(java.lang.String)>(r1);

        r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.XPath xpath> = $r2;

        return;
    }

    public java.lang.String toString()
    {
        org.dom4j.xpath.DefaultXPath r2;
        java.lang.StringBuffer $r0, $r1, $r4, $r5;
        org.jaxen.XPath $r3;
        java.lang.String $r6;

        r2 := @this: org.dom4j.xpath.DefaultXPath;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[XPath: ");

        $r3 = r2.<org.dom4j.xpath.DefaultXPath: org.jaxen.XPath xpath>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    public java.lang.String getText()
    {
        java.lang.String $r1;
        org.dom4j.xpath.DefaultXPath r0;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        $r1 = r0.<org.dom4j.xpath.DefaultXPath: java.lang.String text>;

        return $r1;
    }

    public org.jaxen.FunctionContext getFunctionContext()
    {
        org.jaxen.XPath $r1;
        org.dom4j.xpath.DefaultXPath r0;
        org.jaxen.FunctionContext $r2;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        $r1 = r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.XPath xpath>;

        $r2 = interfaceinvoke $r1.<org.jaxen.XPath: org.jaxen.FunctionContext getFunctionContext()>();

        return $r2;
    }

    public void setFunctionContext(org.jaxen.FunctionContext)
    {
        org.jaxen.XPath $r2;
        org.dom4j.xpath.DefaultXPath r0;
        org.jaxen.FunctionContext r1;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        r1 := @parameter0: org.jaxen.FunctionContext;

        $r2 = r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.XPath xpath>;

        interfaceinvoke $r2.<org.jaxen.XPath: void setFunctionContext(org.jaxen.FunctionContext)>(r1);

        return;
    }

    public org.jaxen.NamespaceContext getNamespaceContext()
    {
        org.dom4j.xpath.DefaultXPath r0;
        org.jaxen.NamespaceContext $r1;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        $r1 = r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.NamespaceContext namespaceContext>;

        return $r1;
    }

    public void setNamespaceURIs(java.util.Map)
    {
        org.dom4j.xpath.DefaultXPath r0;
        org.jaxen.NamespaceContext $r4;
        java.util.Map r2;
        org.jaxen.SimpleNamespaceContext $r3;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        r2 := @parameter0: java.util.Map;

        $r3 = new org.jaxen.SimpleNamespaceContext;

        specialinvoke $r3.<org.jaxen.SimpleNamespaceContext: void <init>(java.util.Map)>(r2);

        $r4 = (org.jaxen.NamespaceContext) $r3;

        virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: void setNamespaceContext(org.jaxen.NamespaceContext)>($r4);

        return;
    }

    public void setNamespaceContext(org.jaxen.NamespaceContext)
    {
        org.jaxen.XPath $r2;
        org.dom4j.xpath.DefaultXPath r0;
        org.jaxen.NamespaceContext r1;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        r1 := @parameter0: org.jaxen.NamespaceContext;

        r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.NamespaceContext namespaceContext> = r1;

        $r2 = r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.XPath xpath>;

        interfaceinvoke $r2.<org.jaxen.XPath: void setNamespaceContext(org.jaxen.NamespaceContext)>(r1);

        return;
    }

    public org.jaxen.VariableContext getVariableContext()
    {
        org.jaxen.VariableContext $r2;
        org.jaxen.XPath $r1;
        org.dom4j.xpath.DefaultXPath r0;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        $r1 = r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.XPath xpath>;

        $r2 = interfaceinvoke $r1.<org.jaxen.XPath: org.jaxen.VariableContext getVariableContext()>();

        return $r2;
    }

    public void setVariableContext(org.jaxen.VariableContext)
    {
        org.jaxen.VariableContext r1;
        org.jaxen.XPath $r2;
        org.dom4j.xpath.DefaultXPath r0;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        r1 := @parameter0: org.jaxen.VariableContext;

        $r2 = r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.XPath xpath>;

        interfaceinvoke $r2.<org.jaxen.XPath: void setVariableContext(org.jaxen.VariableContext)>(r1);

        return;
    }

    public java.lang.Object evaluate(java.lang.Object)
    {
        java.lang.Throwable $r5;
        org.jaxen.JaxenException $r6;
        org.jaxen.XPath $r2;
        java.util.List $r3;
        org.dom4j.xpath.DefaultXPath r0;
        int $i0;
        java.lang.Object r1, $r4;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        r1 := @parameter0: java.lang.Object;

     label1:
        virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: void setNSContext(java.lang.Object)>(r1);

        $r2 = r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.XPath xpath>;

        $r3 = interfaceinvoke $r2.<org.jaxen.XPath: java.util.List selectNodes(java.lang.Object)>(r1);

        if $r3 == null goto label3;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 != 1 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

     label2:
        return $r4;

     label3:
        return $r3;

     label4:
        $r5 := @caughtexception;

        $r6 = (org.jaxen.JaxenException) $r5;

        virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: void handleJaxenException(org.jaxen.JaxenException)>($r6);

        return null;

        catch org.jaxen.JaxenException from label1 to label2 with label4;
    }

    public java.lang.Object selectObject(java.lang.Object)
    {
        java.lang.Object r1, $r2;
        org.dom4j.xpath.DefaultXPath r0;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: java.lang.Object evaluate(java.lang.Object)>(r1);

        return $r2;
    }

    public java.util.List selectNodes(java.lang.Object)
    {
        java.lang.Throwable $r4;
        org.jaxen.JaxenException $r6;
        java.util.List $r3, $r5;
        org.dom4j.xpath.DefaultXPath r0;
        java.lang.Object r1;
        org.jaxen.XPath $r2;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        r1 := @parameter0: java.lang.Object;

     label1:
        virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: void setNSContext(java.lang.Object)>(r1);

        $r2 = r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.XPath xpath>;

        $r3 = interfaceinvoke $r2.<org.jaxen.XPath: java.util.List selectNodes(java.lang.Object)>(r1);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r6 = (org.jaxen.JaxenException) $r4;

        virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: void handleJaxenException(org.jaxen.JaxenException)>($r6);

        $r5 = <java.util.Collections: java.util.List EMPTY_LIST>;

        return $r5;

        catch org.jaxen.JaxenException from label1 to label2 with label3;
    }

    public java.util.List selectNodes(java.lang.Object, org.dom4j.XPath)
    {
        java.util.List $r2;
        org.dom4j.xpath.DefaultXPath r0;
        org.dom4j.XPath r3;
        java.lang.Object r1;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: org.dom4j.XPath;

        $r2 = virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: java.util.List selectNodes(java.lang.Object)>(r1);

        interfaceinvoke r3.<org.dom4j.XPath: void sort(java.util.List)>($r2);

        return $r2;
    }

    public java.util.List selectNodes(java.lang.Object, org.dom4j.XPath, boolean)
    {
        java.util.List $r2;
        org.dom4j.xpath.DefaultXPath r0;
        org.dom4j.XPath r3;
        java.lang.Object r1;
        boolean z0;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: org.dom4j.XPath;

        z0 := @parameter2: boolean;

        $r2 = virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: java.util.List selectNodes(java.lang.Object)>(r1);

        interfaceinvoke r3.<org.dom4j.XPath: void sort(java.util.List,boolean)>($r2, z0);

        return $r2;
    }

    public org.dom4j.Node selectSingleNode(java.lang.Object)
    {
        java.lang.Throwable $r14;
        org.jaxen.JaxenException $r17;
        org.dom4j.Node $r13;
        org.jaxen.XPath $r2;
        java.lang.StringBuffer $r6, $r7, $r8, $r11, $r15;
        java.lang.String $r10, $r12;
        boolean $z0;
        org.dom4j.xpath.DefaultXPath r0;
        java.lang.Object r1, $r3;
        java.lang.Class $r9;
        org.dom4j.XPathException $r16;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        r1 := @parameter0: java.lang.Object;

     label1:
        virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: void setNSContext(java.lang.Object)>(r1);

        $r2 = r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.XPath xpath>;

        $r3 = interfaceinvoke $r2.<org.jaxen.XPath: java.lang.Object selectSingleNode(java.lang.Object)>(r1);

        $z0 = $r3 instanceof org.dom4j.Node;

        if $z0 == 0 goto label3;

        $r13 = (org.dom4j.Node) $r3;

     label2:
        return $r13;

     label3:
        if $r3 != null goto label5;

     label4:
        return null;

     label5:
        $r16 = new org.dom4j.XPathException;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The result of the XPath expression is not a Node. It was: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" of type: ");

        $r9 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r16.<org.dom4j.XPathException: void <init>(java.lang.String)>($r12);

        throw $r16;

     label6:
        $r14 := @caughtexception;

        $r17 = (org.jaxen.JaxenException) $r14;

        virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: void handleJaxenException(org.jaxen.JaxenException)>($r17);

        return null;

        catch org.jaxen.JaxenException from label1 to label2 with label6;
        catch org.jaxen.JaxenException from label3 to label4 with label6;
        catch org.jaxen.JaxenException from label5 to label6 with label6;
    }

    public java.lang.String valueOf(java.lang.Object)
    {
        java.lang.Throwable $r4;
        org.jaxen.JaxenException $r5;
        org.dom4j.xpath.DefaultXPath r0;
        java.lang.Object r1;
        org.jaxen.XPath $r2;
        java.lang.String $r3;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        r1 := @parameter0: java.lang.Object;

     label1:
        virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: void setNSContext(java.lang.Object)>(r1);

        $r2 = r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.XPath xpath>;

        $r3 = interfaceinvoke $r2.<org.jaxen.XPath: java.lang.String stringValueOf(java.lang.Object)>(r1);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = (org.jaxen.JaxenException) $r4;

        virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: void handleJaxenException(org.jaxen.JaxenException)>($r5);

        return "";

        catch org.jaxen.JaxenException from label1 to label2 with label3;
    }

    public java.lang.Number numberValueOf(java.lang.Object)
    {
        java.lang.Throwable $r4;
        org.jaxen.JaxenException $r5;
        org.dom4j.xpath.DefaultXPath r0;
        java.lang.Object r1;
        org.jaxen.XPath $r2;
        java.lang.Number $r3;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        r1 := @parameter0: java.lang.Object;

     label1:
        virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: void setNSContext(java.lang.Object)>(r1);

        $r2 = r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.XPath xpath>;

        $r3 = interfaceinvoke $r2.<org.jaxen.XPath: java.lang.Number numberValueOf(java.lang.Object)>(r1);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = (org.jaxen.JaxenException) $r4;

        virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: void handleJaxenException(org.jaxen.JaxenException)>($r5);

        return null;

        catch org.jaxen.JaxenException from label1 to label2 with label3;
    }

    public boolean booleanValueOf(java.lang.Object)
    {
        java.lang.Throwable $r3;
        org.jaxen.JaxenException $r4;
        org.dom4j.xpath.DefaultXPath r0;
        java.lang.Object r1;
        org.jaxen.XPath $r2;
        boolean $z0;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        r1 := @parameter0: java.lang.Object;

     label1:
        virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: void setNSContext(java.lang.Object)>(r1);

        $r2 = r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.XPath xpath>;

        $z0 = interfaceinvoke $r2.<org.jaxen.XPath: boolean booleanValueOf(java.lang.Object)>(r1);

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        $r4 = (org.jaxen.JaxenException) $r3;

        virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: void handleJaxenException(org.jaxen.JaxenException)>($r4);

        return 0;

        catch org.jaxen.JaxenException from label1 to label2 with label3;
    }

    public void sort(java.util.List)
    {
        java.util.List r1;
        org.dom4j.xpath.DefaultXPath r0;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        r1 := @parameter0: java.util.List;

        virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: void sort(java.util.List,boolean)>(r1, 0);

        return;
    }

    public void sort(java.util.List, boolean)
    {
        org.dom4j.Node r4;
        java.util.HashMap $r1;
        java.util.List r0;
        org.dom4j.xpath.DefaultXPath r2;
        int $i0, i1;
        java.lang.Object $r3, $r5;
        boolean $z0, z1, $z2;

        r2 := @this: org.dom4j.xpath.DefaultXPath;

        r0 := @parameter0: java.util.List;

        z1 := @parameter1: boolean;

        if r0 == null goto label4;

        $z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>(int)>($i0);

        i1 = 0;

     label1:
        if i1 >= $i0 goto label3;

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        $z2 = $r3 instanceof org.dom4j.Node;

        if $z2 == 0 goto label2;

        r4 = (org.dom4j.Node) $r3;

        $r5 = virtualinvoke r2.<org.dom4j.xpath.DefaultXPath: java.lang.Object getCompareValue(org.dom4j.Node)>(r4);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r5);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        virtualinvoke r2.<org.dom4j.xpath.DefaultXPath: void sort(java.util.List,java.util.Map)>(r0, $r1);

        if z1 == 0 goto label4;

        virtualinvoke r2.<org.dom4j.xpath.DefaultXPath: void removeDuplicates(java.util.List,java.util.Map)>(r0, $r1);

     label4:
        return;
    }

    public boolean matches(org.dom4j.Node)
    {
        java.lang.Throwable $r6;
        org.jaxen.JaxenException $r7;
        org.dom4j.Node r1;
        org.jaxen.XPath $r2;
        java.util.List $r3;
        org.dom4j.xpath.DefaultXPath r0;
        int $i0;
        java.lang.Boolean $r5;
        java.lang.Object $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        r1 := @parameter0: org.dom4j.Node;

     label1:
        virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: void setNSContext(java.lang.Object)>(r1);

        $r2 = r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.XPath xpath>;

        $r3 = interfaceinvoke $r2.<org.jaxen.XPath: java.util.List selectNodes(java.lang.Object)>(r1);

        if $r3 == null goto label5;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 <= 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $z0 = $r4 instanceof java.lang.Boolean;

        if $z0 == 0 goto label3;

        $r5 = (java.lang.Boolean) $r4;

        $z2 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

     label2:
        return $z2;

     label3:
        $z1 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>(r1);

     label4:
        return $z1;

     label5:
        return 0;

     label6:
        $r6 := @caughtexception;

        $r7 = (org.jaxen.JaxenException) $r6;

        virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: void handleJaxenException(org.jaxen.JaxenException)>($r7);

        return 0;

        catch org.jaxen.JaxenException from label1 to label2 with label6;
        catch org.jaxen.JaxenException from label3 to label4 with label6;
    }

    protected void sort(java.util.List, java.util.Map)
    {
        java.util.List r0;
        org.dom4j.xpath.DefaultXPath$1 $r1;
        org.dom4j.xpath.DefaultXPath r2;
        java.util.Map r3;

        r2 := @this: org.dom4j.xpath.DefaultXPath;

        r0 := @parameter0: java.util.List;

        r3 := @parameter1: java.util.Map;

        $r1 = new org.dom4j.xpath.DefaultXPath$1;

        specialinvoke $r1.<org.dom4j.xpath.DefaultXPath$1: void <init>(org.dom4j.xpath.DefaultXPath,java.util.Map)>(r2, r3);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r0, $r1);

        return;
    }

    protected void removeDuplicates(java.util.List, java.util.Map)
    {
        java.util.Iterator $r2;
        java.util.HashSet $r0;
        java.util.List r1;
        org.dom4j.xpath.DefaultXPath r6;
        java.util.Map r4;
        java.lang.Object $r3, $r5;
        boolean $z0, $z1;

        r6 := @this: org.dom4j.xpath.DefaultXPath;

        r1 := @parameter0: java.util.List;

        r4 := @parameter1: java.util.Map;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $z1 = virtualinvoke $r0.<java.util.HashSet: boolean contains(java.lang.Object)>($r5);

        if $z1 == 0 goto label2;

        interfaceinvoke $r2.<java.util.Iterator: void remove()>();

        goto label3;

     label2:
        virtualinvoke $r0.<java.util.HashSet: boolean add(java.lang.Object)>($r5);

     label3:
        goto label1;

     label4:
        return;
    }

    protected java.lang.Object getCompareValue(org.dom4j.Node)
    {
        java.lang.String $r2;
        org.dom4j.xpath.DefaultXPath r0;
        org.dom4j.Node r1;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        r1 := @parameter0: org.dom4j.Node;

        $r2 = virtualinvoke r0.<org.dom4j.xpath.DefaultXPath: java.lang.String valueOf(java.lang.Object)>(r1);

        return $r2;
    }

    protected static org.jaxen.XPath parse(java.lang.String)
    {
        java.lang.Throwable $r2, $r4;
        org.jaxen.dom4j.Dom4jXPath $r7;
        org.jaxen.JaxenException $r11;
        org.jaxen.XPath $r10;
        org.dom4j.InvalidXPathException $r8, $r9;
        java.lang.String r1, $r6;

        r1 := @parameter0: java.lang.String;

     label1:
        $r7 = new org.jaxen.dom4j.Dom4jXPath;

        specialinvoke $r7.<org.jaxen.dom4j.Dom4jXPath: void <init>(java.lang.String)>(r1);

     label2:
        $r10 = (org.jaxen.XPath) $r7;

        return $r10;

     label3:
        $r4 := @caughtexception;

        $r8 = new org.dom4j.InvalidXPathException;

        $r11 = (org.jaxen.JaxenException) $r4;

        $r6 = virtualinvoke $r11.<org.jaxen.JaxenException: java.lang.String getMessage()>();

        specialinvoke $r8.<org.dom4j.InvalidXPathException: void <init>(java.lang.String,java.lang.String)>(r1, $r6);

        throw $r8;

     label4:
        $r2 := @caughtexception;

        $r9 = new org.dom4j.InvalidXPathException;

        specialinvoke $r9.<org.dom4j.InvalidXPathException: void <init>(java.lang.String,java.lang.Throwable)>(r1, $r2);

        throw $r9;

        catch org.jaxen.JaxenException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label4;
    }

    protected void setNSContext(java.lang.Object)
    {
        org.dom4j.xpath.DefaultXPath r0;
        org.dom4j.xpath.DefaultNamespaceContext $r4;
        org.jaxen.NamespaceContext $r1;
        java.lang.Object r2;
        org.jaxen.XPath $r3;

        r0 := @this: org.dom4j.xpath.DefaultXPath;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.NamespaceContext namespaceContext>;

        if $r1 != null goto label1;

        $r3 = r0.<org.dom4j.xpath.DefaultXPath: org.jaxen.XPath xpath>;

        $r4 = staticinvoke <org.dom4j.xpath.DefaultNamespaceContext: org.dom4j.xpath.DefaultNamespaceContext create(java.lang.Object)>(r2);

        interfaceinvoke $r3.<org.jaxen.XPath: void setNamespaceContext(org.jaxen.NamespaceContext)>($r4);

     label1:
        return;
    }

    protected void handleJaxenException(org.jaxen.JaxenException) throws org.dom4j.XPathException
    {
        org.jaxen.JaxenException r2;
        org.dom4j.xpath.DefaultXPath r1;
        java.lang.String $r3;
        org.dom4j.XPathException $r4;
        java.lang.Exception $r5;

        r1 := @this: org.dom4j.xpath.DefaultXPath;

        r2 := @parameter0: org.jaxen.JaxenException;

        $r4 = new org.dom4j.XPathException;

        $r3 = r1.<org.dom4j.xpath.DefaultXPath: java.lang.String text>;

        $r5 = (java.lang.Exception) r2;

        specialinvoke $r4.<org.dom4j.XPathException: void <init>(java.lang.String,java.lang.Exception)>($r3, $r5);

        throw $r4;
    }
}
