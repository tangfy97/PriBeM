public class org.apache.lucene.queries.CommonTermsQuery extends org.apache.lucene.search.Query
{
    protected final java.util.List terms;
    protected final boolean disableCoord;
    protected final float maxTermFrequency;
    protected final org.apache.lucene.search.BooleanClause$Occur lowFreqOccur;
    protected final org.apache.lucene.search.BooleanClause$Occur highFreqOccur;
    protected float lowFreqBoost;
    protected float highFreqBoost;
    protected float minNrShouldMatch;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.search.BooleanClause$Occur, org.apache.lucene.search.BooleanClause$Occur, float)
    {
        org.apache.lucene.queries.CommonTermsQuery r0;
        float f0;
        org.apache.lucene.search.BooleanClause$Occur r1, r2;

        r0 := @this: org.apache.lucene.queries.CommonTermsQuery;

        r1 := @parameter0: org.apache.lucene.search.BooleanClause$Occur;

        r2 := @parameter1: org.apache.lucene.search.BooleanClause$Occur;

        f0 := @parameter2: float;

        specialinvoke r0.<org.apache.lucene.queries.CommonTermsQuery: void <init>(org.apache.lucene.search.BooleanClause$Occur,org.apache.lucene.search.BooleanClause$Occur,float,boolean)>(r1, r2, f0, 0);

        return;
    }

    public void <init>(org.apache.lucene.search.BooleanClause$Occur, org.apache.lucene.search.BooleanClause$Occur, float, boolean)
    {
        org.apache.lucene.queries.CommonTermsQuery r0;
        java.lang.IllegalArgumentException $r6, $r7;
        java.util.ArrayList $r1;
        float f0;
        org.apache.lucene.search.BooleanClause$Occur r2, $r3, r4, $r5;
        boolean z0;

        r0 := @this: org.apache.lucene.queries.CommonTermsQuery;

        r2 := @parameter0: org.apache.lucene.search.BooleanClause$Occur;

        r4 := @parameter1: org.apache.lucene.search.BooleanClause$Occur;

        f0 := @parameter2: float;

        z0 := @parameter3: boolean;

        specialinvoke r0.<org.apache.lucene.search.Query: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.lucene.queries.CommonTermsQuery: java.util.List terms> = $r1;

        r0.<org.apache.lucene.queries.CommonTermsQuery: float lowFreqBoost> = 1.0F;

        r0.<org.apache.lucene.queries.CommonTermsQuery: float highFreqBoost> = 1.0F;

        r0.<org.apache.lucene.queries.CommonTermsQuery: float minNrShouldMatch> = 0.0F;

        $r3 = <org.apache.lucene.search.BooleanClause$Occur: org.apache.lucene.search.BooleanClause$Occur MUST_NOT>;

        if r2 != $r3 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("highFreqOccur should be MUST or SHOULD but was MUST_NOT");

        throw $r7;

     label1:
        $r5 = <org.apache.lucene.search.BooleanClause$Occur: org.apache.lucene.search.BooleanClause$Occur MUST_NOT>;

        if r4 != $r5 goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("lowFreqOccur should be MUST or SHOULD but was MUST_NOT");

        throw $r6;

     label2:
        r0.<org.apache.lucene.queries.CommonTermsQuery: boolean disableCoord> = z0;

        r0.<org.apache.lucene.queries.CommonTermsQuery: org.apache.lucene.search.BooleanClause$Occur highFreqOccur> = r2;

        r0.<org.apache.lucene.queries.CommonTermsQuery: org.apache.lucene.search.BooleanClause$Occur lowFreqOccur> = r4;

        r0.<org.apache.lucene.queries.CommonTermsQuery: float maxTermFrequency> = f0;

        return;
    }

    public void add(org.apache.lucene.index.Term)
    {
        java.util.List $r2;
        org.apache.lucene.index.Term r0;
        org.apache.lucene.queries.CommonTermsQuery r1;
        java.lang.IllegalArgumentException $r3;

        r1 := @this: org.apache.lucene.queries.CommonTermsQuery;

        r0 := @parameter0: org.apache.lucene.index.Term;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Term must not be null");

        throw $r3;

     label1:
        $r2 = r1.<org.apache.lucene.queries.CommonTermsQuery: java.util.List terms>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r0);

        return;
    }

    public org.apache.lucene.search.Query rewrite(org.apache.lucene.index.IndexReader) throws java.io.IOException
    {
        org.apache.lucene.search.Query $r11;
        java.lang.Object[] $r9;
        org.apache.lucene.queries.CommonTermsQuery r0;
        org.apache.lucene.index.Term $r15;
        int $i0, $i1, $i2;
        org.apache.lucene.index.Term[] $r7, r10;
        boolean $z0;
        java.util.List $r1, $r2, $r4, $r5, $r8, $r13;
        org.apache.lucene.search.TermQuery $r12;
        org.apache.lucene.search.BooleanQuery $r16;
        org.apache.lucene.index.TermContext[] r6;
        float $f0;
        java.lang.Object $r14;
        org.apache.lucene.index.IndexReader r3;

        r0 := @this: org.apache.lucene.queries.CommonTermsQuery;

        r3 := @parameter0: org.apache.lucene.index.IndexReader;

        $r1 = r0.<org.apache.lucene.queries.CommonTermsQuery: java.util.List terms>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r16 = new org.apache.lucene.search.BooleanQuery;

        specialinvoke $r16.<org.apache.lucene.search.BooleanQuery: void <init>()>();

        return $r16;

     label1:
        $r2 = r0.<org.apache.lucene.queries.CommonTermsQuery: java.util.List terms>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 != 1 goto label2;

        $r12 = new org.apache.lucene.search.TermQuery;

        $r13 = r0.<org.apache.lucene.queries.CommonTermsQuery: java.util.List terms>;

        $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(0);

        $r15 = (org.apache.lucene.index.Term) $r14;

        specialinvoke $r12.<org.apache.lucene.search.TermQuery: void <init>(org.apache.lucene.index.Term)>($r15);

        $f0 = virtualinvoke r0.<org.apache.lucene.queries.CommonTermsQuery: float getBoost()>();

        virtualinvoke $r12.<org.apache.lucene.search.TermQuery: void setBoost(float)>($f0);

        return $r12;

     label2:
        $r4 = virtualinvoke r3.<org.apache.lucene.index.IndexReader: java.util.List leaves()>();

        $i1 = virtualinvoke r3.<org.apache.lucene.index.IndexReader: int maxDoc()>();

        $r5 = r0.<org.apache.lucene.queries.CommonTermsQuery: java.util.List terms>;

        $i2 = interfaceinvoke $r5.<java.util.List: int size()>();

        r6 = newarray (org.apache.lucene.index.TermContext)[$i2];

        $r8 = r0.<org.apache.lucene.queries.CommonTermsQuery: java.util.List terms>;

        $r7 = newarray (org.apache.lucene.index.Term)[0];

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        r10 = (org.apache.lucene.index.Term[]) $r9;

        virtualinvoke r0.<org.apache.lucene.queries.CommonTermsQuery: void collectTermContext(org.apache.lucene.index.IndexReader,java.util.List,org.apache.lucene.index.TermContext[],org.apache.lucene.index.Term[])>(r3, $r4, r6, r10);

        $r11 = virtualinvoke r0.<org.apache.lucene.queries.CommonTermsQuery: org.apache.lucene.search.Query buildQuery(int,org.apache.lucene.index.TermContext[],org.apache.lucene.index.Term[])>($i1, r6, r10);

        return $r11;
    }

    protected int calcLowFreqMinimumNumberShouldMatch(int)
    {
        org.apache.lucene.queries.CommonTermsQuery r0;
        byte $b0, $b2;
        int $i1, i3, $i4, $i5;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: org.apache.lucene.queries.CommonTermsQuery;

        i3 := @parameter0: int;

        $f0 = r0.<org.apache.lucene.queries.CommonTermsQuery: float minNrShouldMatch>;

        $b0 = $f0 cmpl 1.0F;

        $i5 = (int) $b0;

        if $i5 >= 0 goto label1;

        $f2 = r0.<org.apache.lucene.queries.CommonTermsQuery: float minNrShouldMatch>;

        $b2 = $f2 cmpl 0.0F;

        if $b2 != 0 goto label2;

     label1:
        $f1 = r0.<org.apache.lucene.queries.CommonTermsQuery: float minNrShouldMatch>;

        $i1 = (int) $f1;

        return $i1;

     label2:
        $f4 = r0.<org.apache.lucene.queries.CommonTermsQuery: float minNrShouldMatch>;

        $f3 = (float) i3;

        $f5 = $f4 * $f3;

        $i4 = staticinvoke <java.lang.Math: int round(float)>($f5);

        return $i4;
    }

    protected org.apache.lucene.search.Query buildQuery(int, org.apache.lucene.index.TermContext[], org.apache.lucene.index.Term[])
    {
        org.apache.lucene.search.Query $r17;
        org.apache.lucene.queries.CommonTermsQuery r1;
        org.apache.lucene.index.Term $r21, $r24, $r27;
        byte $b3, $b8;
        org.apache.lucene.index.Term[] r4;
        org.apache.lucene.search.BooleanClause$Occur $r6, $r7, $r9, $r10, $r11, $r12, $r18, $r22, $r25, $r28;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.List $r5, $r8, $r30;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        int $i0, $i1, $i2, $i4, i5, $i6, $i7, i9, $i10, $i11;
        double $d0, $d1;
        java.util.Iterator $r14;
        org.apache.lucene.index.TermContext r29;
        org.apache.lucene.search.BooleanClause r16;
        org.apache.lucene.search.TermQuery $r34, $r35, $r36;
        org.apache.lucene.search.BooleanQuery $r31, $r32, $r33, $r37;
        org.apache.lucene.index.TermContext[] r19;
        java.lang.Object $r15;

        r1 := @this: org.apache.lucene.queries.CommonTermsQuery;

        i5 := @parameter0: int;

        r19 := @parameter1: org.apache.lucene.index.TermContext[];

        r4 := @parameter2: org.apache.lucene.index.Term[];

        $r31 = new org.apache.lucene.search.BooleanQuery;

        $z0 = r1.<org.apache.lucene.queries.CommonTermsQuery: boolean disableCoord>;

        specialinvoke $r31.<org.apache.lucene.search.BooleanQuery: void <init>(boolean)>($z0);

        $r32 = new org.apache.lucene.search.BooleanQuery;

        $z1 = r1.<org.apache.lucene.queries.CommonTermsQuery: boolean disableCoord>;

        specialinvoke $r32.<org.apache.lucene.search.BooleanQuery: void <init>(boolean)>($z1);

        $f0 = r1.<org.apache.lucene.queries.CommonTermsQuery: float highFreqBoost>;

        virtualinvoke $r32.<org.apache.lucene.search.BooleanQuery: void setBoost(float)>($f0);

        $f1 = r1.<org.apache.lucene.queries.CommonTermsQuery: float lowFreqBoost>;

        virtualinvoke $r31.<org.apache.lucene.search.BooleanQuery: void setBoost(float)>($f1);

        $r33 = new org.apache.lucene.search.BooleanQuery;

        specialinvoke $r33.<org.apache.lucene.search.BooleanQuery: void <init>(boolean)>(1);

        i9 = 0;

     label01:
        $i0 = lengthof r4;

        if i9 >= $i0 goto label07;

        r29 = r19[i9];

        if r29 != null goto label02;

        $r34 = new org.apache.lucene.search.TermQuery;

        $r27 = r4[i9];

        specialinvoke $r34.<org.apache.lucene.search.TermQuery: void <init>(org.apache.lucene.index.Term)>($r27);

        $r28 = r1.<org.apache.lucene.queries.CommonTermsQuery: org.apache.lucene.search.BooleanClause$Occur lowFreqOccur>;

        virtualinvoke $r31.<org.apache.lucene.search.BooleanQuery: void add(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur)>($r34, $r28);

        goto label06;

     label02:
        $f6 = r1.<org.apache.lucene.queries.CommonTermsQuery: float maxTermFrequency>;

        $b3 = $f6 cmpl 1.0F;

        $i10 = (int) $b3;

        if $i10 < 0 goto label03;

        $i7 = virtualinvoke r29.<org.apache.lucene.index.TermContext: int docFreq()>();

        $f11 = (float) $i7;

        $f10 = r1.<org.apache.lucene.queries.CommonTermsQuery: float maxTermFrequency>;

        $b8 = $f11 cmpl $f10;

        $i11 = (int) $b8;

        if $i11 > 0 goto label04;

     label03:
        $i4 = virtualinvoke r29.<org.apache.lucene.index.TermContext: int docFreq()>();

        $f8 = r1.<org.apache.lucene.queries.CommonTermsQuery: float maxTermFrequency>;

        $f7 = (float) i5;

        $f9 = $f8 * $f7;

        $d0 = (double) $f9;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i6 = (int) $d1;

        if $i4 <= $i6 goto label05;

     label04:
        $r35 = new org.apache.lucene.search.TermQuery;

        $r24 = r4[i9];

        specialinvoke $r35.<org.apache.lucene.search.TermQuery: void <init>(org.apache.lucene.index.Term,org.apache.lucene.index.TermContext)>($r24, r29);

        $r25 = r1.<org.apache.lucene.queries.CommonTermsQuery: org.apache.lucene.search.BooleanClause$Occur highFreqOccur>;

        virtualinvoke $r32.<org.apache.lucene.search.BooleanQuery: void add(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur)>($r35, $r25);

        goto label06;

     label05:
        $r36 = new org.apache.lucene.search.TermQuery;

        $r21 = r4[i9];

        specialinvoke $r36.<org.apache.lucene.search.TermQuery: void <init>(org.apache.lucene.index.Term,org.apache.lucene.index.TermContext)>($r21, r29);

        $r22 = r1.<org.apache.lucene.queries.CommonTermsQuery: org.apache.lucene.search.BooleanClause$Occur lowFreqOccur>;

        virtualinvoke $r31.<org.apache.lucene.search.BooleanQuery: void add(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur)>($r36, $r22);

     label06:
        i9 = i9 + 1;

        goto label01;

     label07:
        $r5 = virtualinvoke $r31.<org.apache.lucene.search.BooleanQuery: java.util.List clauses()>();

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        $r7 = r1.<org.apache.lucene.queries.CommonTermsQuery: org.apache.lucene.search.BooleanClause$Occur lowFreqOccur>;

        $r6 = <org.apache.lucene.search.BooleanClause$Occur: org.apache.lucene.search.BooleanClause$Occur SHOULD>;

        if $r7 != $r6 goto label08;

        if $i1 <= 0 goto label08;

        $i2 = virtualinvoke r1.<org.apache.lucene.queries.CommonTermsQuery: int calcLowFreqMinimumNumberShouldMatch(int)>($i1);

        virtualinvoke $r31.<org.apache.lucene.search.BooleanQuery: void setMinimumNumberShouldMatch(int)>($i2);

     label08:
        $r30 = virtualinvoke $r31.<org.apache.lucene.search.BooleanQuery: java.util.List clauses()>();

        $z4 = interfaceinvoke $r30.<java.util.List: boolean isEmpty()>();

        if $z4 == 0 goto label12;

        $r12 = r1.<org.apache.lucene.queries.CommonTermsQuery: org.apache.lucene.search.BooleanClause$Occur highFreqOccur>;

        $r11 = <org.apache.lucene.search.BooleanClause$Occur: org.apache.lucene.search.BooleanClause$Occur MUST>;

        if $r12 != $r11 goto label09;

        $f5 = virtualinvoke r1.<org.apache.lucene.queries.CommonTermsQuery: float getBoost()>();

        virtualinvoke $r32.<org.apache.lucene.search.BooleanQuery: void setBoost(float)>($f5);

        return $r32;

     label09:
        $r37 = new org.apache.lucene.search.BooleanQuery;

        specialinvoke $r37.<org.apache.lucene.search.BooleanQuery: void <init>()>();

        $r14 = virtualinvoke $r32.<org.apache.lucene.search.BooleanQuery: java.util.Iterator iterator()>();

     label10:
        $z3 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label11;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r16 = (org.apache.lucene.search.BooleanClause) $r15;

        $r17 = virtualinvoke r16.<org.apache.lucene.search.BooleanClause: org.apache.lucene.search.Query getQuery()>();

        $r18 = <org.apache.lucene.search.BooleanClause$Occur: org.apache.lucene.search.BooleanClause$Occur MUST>;

        virtualinvoke $r37.<org.apache.lucene.search.BooleanQuery: void add(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur)>($r17, $r18);

        goto label10;

     label11:
        $f4 = virtualinvoke r1.<org.apache.lucene.queries.CommonTermsQuery: float getBoost()>();

        virtualinvoke $r37.<org.apache.lucene.search.BooleanQuery: void setBoost(float)>($f4);

        return $r37;

     label12:
        $r8 = virtualinvoke $r32.<org.apache.lucene.search.BooleanQuery: java.util.List clauses()>();

        $z2 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label13;

        $f3 = virtualinvoke r1.<org.apache.lucene.queries.CommonTermsQuery: float getBoost()>();

        virtualinvoke $r31.<org.apache.lucene.search.BooleanQuery: void setBoost(float)>($f3);

        return $r31;

     label13:
        $r9 = <org.apache.lucene.search.BooleanClause$Occur: org.apache.lucene.search.BooleanClause$Occur SHOULD>;

        virtualinvoke $r33.<org.apache.lucene.search.BooleanQuery: void add(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur)>($r32, $r9);

        $r10 = <org.apache.lucene.search.BooleanClause$Occur: org.apache.lucene.search.BooleanClause$Occur MUST>;

        virtualinvoke $r33.<org.apache.lucene.search.BooleanQuery: void add(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur)>($r31, $r10);

        $f2 = virtualinvoke r1.<org.apache.lucene.queries.CommonTermsQuery: float getBoost()>();

        virtualinvoke $r33.<org.apache.lucene.search.BooleanQuery: void setBoost(float)>($f2);

        return $r33;
    }

    public void collectTermContext(org.apache.lucene.index.IndexReader, java.util.List, org.apache.lucene.index.TermContext[], org.apache.lucene.index.Term[]) throws java.io.IOException
    {
        org.apache.lucene.index.Fields $r5;
        org.apache.lucene.index.Term r7;
        org.apache.lucene.queries.CommonTermsQuery r21;
        org.apache.lucene.index.TermsEnum $r12, $r13, r22;
        org.apache.lucene.index.Term[] r6;
        boolean $z0, $z1, $z2;
        org.apache.lucene.index.Terms $r11;
        org.apache.lucene.util.BytesRef $r14;
        java.util.List r0;
        org.apache.lucene.index.AtomicReader $r4;
        org.apache.lucene.index.IndexReader r17;
        long $l3, $l6;
        java.lang.AssertionError $r20;
        int $i0, $i1, $i2, $i4, $i5, i7;
        java.lang.String $r10;
        org.apache.lucene.index.TermState $r15, $r19;
        java.util.Iterator $r1;
        org.apache.lucene.index.TermContext r9, $r16;
        org.apache.lucene.index.TermContext[] r8;
        java.lang.Object $r2;
        org.apache.lucene.index.AtomicReaderContext r3;
        org.apache.lucene.index.IndexReaderContext $r18;

        r21 := @this: org.apache.lucene.queries.CommonTermsQuery;

        r17 := @parameter0: org.apache.lucene.index.IndexReader;

        r0 := @parameter1: java.util.List;

        r8 := @parameter2: org.apache.lucene.index.TermContext[];

        r6 := @parameter3: org.apache.lucene.index.Term[];

        r22 = null;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z2 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label10;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.lucene.index.AtomicReaderContext) $r2;

        $r4 = virtualinvoke r3.<org.apache.lucene.index.AtomicReaderContext: org.apache.lucene.index.AtomicReader reader()>();

        $r5 = virtualinvoke $r4.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.Fields fields()>();

        if $r5 != null goto label02;

        goto label01;

     label02:
        i7 = 0;

     label03:
        $i0 = lengthof r6;

        if i7 >= $i0 goto label09;

        r7 = r6[i7];

        r9 = r8[i7];

        $r10 = virtualinvoke r7.<org.apache.lucene.index.Term: java.lang.String field()>();

        $r11 = virtualinvoke $r5.<org.apache.lucene.index.Fields: org.apache.lucene.index.Terms terms(java.lang.String)>($r10);

        if $r11 != null goto label04;

        goto label08;

     label04:
        $r12 = virtualinvoke $r11.<org.apache.lucene.index.Terms: org.apache.lucene.index.TermsEnum iterator(org.apache.lucene.index.TermsEnum)>(r22);

        r22 = $r12;

        $z0 = <org.apache.lucene.queries.CommonTermsQuery: boolean $assertionsDisabled>;

        if $z0 != 0 goto label05;

        if $r12 != null goto label05;

        $r20 = new java.lang.AssertionError;

        specialinvoke $r20.<java.lang.AssertionError: void <init>()>();

        throw $r20;

     label05:
        $r13 = <org.apache.lucene.index.TermsEnum: org.apache.lucene.index.TermsEnum EMPTY>;

        if $r12 != $r13 goto label06;

        goto label08;

     label06:
        $r14 = virtualinvoke r7.<org.apache.lucene.index.Term: org.apache.lucene.util.BytesRef bytes()>();

        $z1 = virtualinvoke $r12.<org.apache.lucene.index.TermsEnum: boolean seekExact(org.apache.lucene.util.BytesRef,boolean)>($r14, 0);

        if $z1 == 0 goto label08;

        if r9 != null goto label07;

        $r16 = new org.apache.lucene.index.TermContext;

        $r18 = virtualinvoke r17.<org.apache.lucene.index.IndexReader: org.apache.lucene.index.IndexReaderContext getContext()>();

        $r19 = virtualinvoke $r12.<org.apache.lucene.index.TermsEnum: org.apache.lucene.index.TermState termState()>();

        $i4 = r3.<org.apache.lucene.index.AtomicReaderContext: int ord>;

        $i5 = virtualinvoke $r12.<org.apache.lucene.index.TermsEnum: int docFreq()>();

        $l6 = virtualinvoke $r12.<org.apache.lucene.index.TermsEnum: long totalTermFreq()>();

        specialinvoke $r16.<org.apache.lucene.index.TermContext: void <init>(org.apache.lucene.index.IndexReaderContext,org.apache.lucene.index.TermState,int,int,long)>($r18, $r19, $i4, $i5, $l6);

        r8[i7] = $r16;

        goto label08;

     label07:
        $r15 = virtualinvoke $r12.<org.apache.lucene.index.TermsEnum: org.apache.lucene.index.TermState termState()>();

        $i1 = r3.<org.apache.lucene.index.AtomicReaderContext: int ord>;

        $i2 = virtualinvoke $r12.<org.apache.lucene.index.TermsEnum: int docFreq()>();

        $l3 = virtualinvoke $r12.<org.apache.lucene.index.TermsEnum: long totalTermFreq()>();

        virtualinvoke r9.<org.apache.lucene.index.TermContext: void register(org.apache.lucene.index.TermState,int,int,long)>($r15, $i1, $i2, $l3);

     label08:
        i7 = i7 + 1;

        goto label03;

     label09:
        goto label01;

     label10:
        return;
    }

    public boolean isCoordDisabled()
    {
        org.apache.lucene.queries.CommonTermsQuery r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.queries.CommonTermsQuery;

        $z0 = r0.<org.apache.lucene.queries.CommonTermsQuery: boolean disableCoord>;

        return $z0;
    }

    public void setMinimumNumberShouldMatch(float)
    {
        org.apache.lucene.queries.CommonTermsQuery r0;
        float f0;

        r0 := @this: org.apache.lucene.queries.CommonTermsQuery;

        f0 := @parameter0: float;

        r0.<org.apache.lucene.queries.CommonTermsQuery: float minNrShouldMatch> = f0;

        return;
    }

    public float getMinimumNumberShouldMatch()
    {
        org.apache.lucene.queries.CommonTermsQuery r0;
        float $f0;

        r0 := @this: org.apache.lucene.queries.CommonTermsQuery;

        $f0 = r0.<org.apache.lucene.queries.CommonTermsQuery: float minNrShouldMatch>;

        return $f0;
    }

    public void extractTerms(java.util.Set)
    {
        org.apache.lucene.queries.CommonTermsQuery r1;
        java.util.Set r0;
        java.util.List $r2;

        r1 := @this: org.apache.lucene.queries.CommonTermsQuery;

        r0 := @parameter0: java.util.Set;

        $r2 = r1.<org.apache.lucene.queries.CommonTermsQuery: java.util.List terms>;

        interfaceinvoke r0.<java.util.Set: boolean addAll(java.util.Collection)>($r2);

        return;
    }

    public java.lang.String toString(java.lang.String)
    {
        org.apache.lucene.queries.CommonTermsQuery r1;
        org.apache.lucene.index.Term r6;
        byte $b0, $b1, $b2, $b5;
        boolean z0, $z2, $z3;
        java.util.List $r4, $r9, $r11;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        java.lang.StringBuilder $r12;
        int $i3, $i4, i6, $i7, $i8, $i9;
        java.lang.String $r2, $r3, $r8, r10;
        double $d0;
        org.apache.lucene.search.TermQuery $r13;
        java.lang.Object $r5;

        r1 := @this: org.apache.lucene.queries.CommonTermsQuery;

        r10 := @parameter0: java.lang.String;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $f0 = virtualinvoke r1.<org.apache.lucene.queries.CommonTermsQuery: float getBoost()>();

        $d0 = (double) $f0;

        $b0 = $d0 cmpl 1.0;

        if $b0 != 0 goto label01;

        $f5 = virtualinvoke r1.<org.apache.lucene.queries.CommonTermsQuery: float getMinimumNumberShouldMatch()>();

        $b5 = $f5 cmpl 0.0F;

        $i8 = (int) $b5;

        if $i8 <= 0 goto label02;

     label01:
        $z3 = 1;

        $z2 = 1;

        goto label03;

     label02:
        $z3 = 0;

        $z2 = 0;

     label03:
        z0 = $z2;

        if $z3 == 0 goto label04;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

     label04:
        i6 = 0;

     label05:
        $r11 = r1.<org.apache.lucene.queries.CommonTermsQuery: java.util.List terms>;

        $i7 = interfaceinvoke $r11.<java.util.List: int size()>();

        if i6 >= $i7 goto label07;

        $r4 = r1.<org.apache.lucene.queries.CommonTermsQuery: java.util.List terms>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i6);

        r6 = (org.apache.lucene.index.Term) $r5;

        $r13 = new org.apache.lucene.search.TermQuery;

        specialinvoke $r13.<org.apache.lucene.search.TermQuery: void <init>(org.apache.lucene.index.Term)>(r6);

        $r8 = virtualinvoke $r13.<org.apache.lucene.search.TermQuery: java.lang.String toString()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = r1.<org.apache.lucene.queries.CommonTermsQuery: java.util.List terms>;

        $i3 = interfaceinvoke $r9.<java.util.List: int size()>();

        $i4 = $i3 - 1;

        if i6 == $i4 goto label06;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label06:
        i6 = i6 + 1;

        goto label05;

     label07:
        if z0 == 0 goto label08;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label08:
        $f1 = virtualinvoke r1.<org.apache.lucene.queries.CommonTermsQuery: float getMinimumNumberShouldMatch()>();

        $b1 = $f1 cmpl 0.0F;

        $i9 = (int) $b1;

        if $i9 <= 0 goto label09;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(126);

        $f4 = virtualinvoke r1.<org.apache.lucene.queries.CommonTermsQuery: float getMinimumNumberShouldMatch()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f4);

     label09:
        $f2 = virtualinvoke r1.<org.apache.lucene.queries.CommonTermsQuery: float getBoost()>();

        $b2 = $f2 cmpl 1.0F;

        if $b2 == 0 goto label10;

        $f3 = virtualinvoke r1.<org.apache.lucene.queries.CommonTermsQuery: float getBoost()>();

        $r3 = staticinvoke <org.apache.lucene.util.ToStringUtils: java.lang.String boost(float)>($f3);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label10:
        $r2 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public int hashCode()
    {
        org.apache.lucene.queries.CommonTermsQuery r0;
        org.apache.lucene.search.BooleanClause$Occur $r1, $r2, $r3, $r4;
        boolean $z0;
        java.util.List $r5, $r6;
        float $f0, $f1, $f2, $f3;
        short $s21;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i24;

        r0 := @this: org.apache.lucene.queries.CommonTermsQuery;

        $i0 = specialinvoke r0.<org.apache.lucene.search.Query: int hashCode()>();

        $i1 = 31 * $i0;

        $z0 = r0.<org.apache.lucene.queries.CommonTermsQuery: boolean disableCoord>;

        if $z0 == 0 goto label1;

        $s21 = 1231;

        goto label2;

     label1:
        $s21 = 1237;

     label2:
        $i19 = $i1 + $s21;

        $i2 = 31 * $i19;

        $f0 = r0.<org.apache.lucene.queries.CommonTermsQuery: float highFreqBoost>;

        $i3 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0);

        $i20 = $i2 + $i3;

        $i4 = 31 * $i20;

        $r1 = r0.<org.apache.lucene.queries.CommonTermsQuery: org.apache.lucene.search.BooleanClause$Occur highFreqOccur>;

        if $r1 != null goto label3;

        $i22 = 0;

        goto label4;

     label3:
        $r2 = r0.<org.apache.lucene.queries.CommonTermsQuery: org.apache.lucene.search.BooleanClause$Occur highFreqOccur>;

        $i22 = virtualinvoke $r2.<org.apache.lucene.search.BooleanClause$Occur: int hashCode()>();

     label4:
        $i17 = $i4 + $i22;

        $i5 = 31 * $i17;

        $f1 = r0.<org.apache.lucene.queries.CommonTermsQuery: float lowFreqBoost>;

        $i6 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f1);

        $i18 = $i5 + $i6;

        $i7 = 31 * $i18;

        $r3 = r0.<org.apache.lucene.queries.CommonTermsQuery: org.apache.lucene.search.BooleanClause$Occur lowFreqOccur>;

        if $r3 != null goto label5;

        $i23 = 0;

        goto label6;

     label5:
        $r4 = r0.<org.apache.lucene.queries.CommonTermsQuery: org.apache.lucene.search.BooleanClause$Occur lowFreqOccur>;

        $i23 = virtualinvoke $r4.<org.apache.lucene.search.BooleanClause$Occur: int hashCode()>();

     label6:
        $i14 = $i7 + $i23;

        $i8 = 31 * $i14;

        $f2 = r0.<org.apache.lucene.queries.CommonTermsQuery: float maxTermFrequency>;

        $i9 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f2);

        $i15 = $i8 + $i9;

        $i10 = 31 * $i15;

        $f3 = r0.<org.apache.lucene.queries.CommonTermsQuery: float minNrShouldMatch>;

        $i11 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f3);

        $i16 = $i10 + $i11;

        $i12 = 31 * $i16;

        $r5 = r0.<org.apache.lucene.queries.CommonTermsQuery: java.util.List terms>;

        if $r5 != null goto label7;

        $i24 = 0;

        goto label8;

     label7:
        $r6 = r0.<org.apache.lucene.queries.CommonTermsQuery: java.util.List terms>;

        $i24 = virtualinvoke $r6.<java.lang.Object: int hashCode()>();

     label8:
        $i13 = $i12 + $i24;

        return $i13;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.lucene.queries.CommonTermsQuery r0, r4;
        byte $b6;
        org.apache.lucene.search.BooleanClause$Occur $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2, $z3;
        java.util.List $r9, $r10, $r11, $r12;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;

        r0 := @this: org.apache.lucene.queries.CommonTermsQuery;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label01;

        return 1;

     label01:
        $z0 = specialinvoke r0.<org.apache.lucene.search.Query: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label02;

        return 0;

     label02:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label03;

        return 0;

     label03:
        r4 = (org.apache.lucene.queries.CommonTermsQuery) r1;

        $z2 = r0.<org.apache.lucene.queries.CommonTermsQuery: boolean disableCoord>;

        $z1 = r4.<org.apache.lucene.queries.CommonTermsQuery: boolean disableCoord>;

        if $z2 == $z1 goto label04;

        return 0;

     label04:
        $f0 = r0.<org.apache.lucene.queries.CommonTermsQuery: float highFreqBoost>;

        $i0 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0);

        $f1 = r4.<org.apache.lucene.queries.CommonTermsQuery: float highFreqBoost>;

        $i1 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f1);

        if $i0 == $i1 goto label05;

        return 0;

     label05:
        $r6 = r0.<org.apache.lucene.queries.CommonTermsQuery: org.apache.lucene.search.BooleanClause$Occur highFreqOccur>;

        $r5 = r4.<org.apache.lucene.queries.CommonTermsQuery: org.apache.lucene.search.BooleanClause$Occur highFreqOccur>;

        if $r6 == $r5 goto label06;

        return 0;

     label06:
        $f2 = r0.<org.apache.lucene.queries.CommonTermsQuery: float lowFreqBoost>;

        $i2 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f2);

        $f3 = r4.<org.apache.lucene.queries.CommonTermsQuery: float lowFreqBoost>;

        $i3 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f3);

        if $i2 == $i3 goto label07;

        return 0;

     label07:
        $r8 = r0.<org.apache.lucene.queries.CommonTermsQuery: org.apache.lucene.search.BooleanClause$Occur lowFreqOccur>;

        $r7 = r4.<org.apache.lucene.queries.CommonTermsQuery: org.apache.lucene.search.BooleanClause$Occur lowFreqOccur>;

        if $r8 == $r7 goto label08;

        return 0;

     label08:
        $f4 = r0.<org.apache.lucene.queries.CommonTermsQuery: float maxTermFrequency>;

        $i4 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f4);

        $f5 = r4.<org.apache.lucene.queries.CommonTermsQuery: float maxTermFrequency>;

        $i5 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f5);

        if $i4 == $i5 goto label09;

        return 0;

     label09:
        $f7 = r0.<org.apache.lucene.queries.CommonTermsQuery: float minNrShouldMatch>;

        $f6 = r4.<org.apache.lucene.queries.CommonTermsQuery: float minNrShouldMatch>;

        $b6 = $f7 cmpl $f6;

        if $b6 == 0 goto label10;

        return 0;

     label10:
        $r9 = r0.<org.apache.lucene.queries.CommonTermsQuery: java.util.List terms>;

        if $r9 != null goto label11;

        $r12 = r4.<org.apache.lucene.queries.CommonTermsQuery: java.util.List terms>;

        if $r12 == null goto label12;

        return 0;

     label11:
        $r11 = r0.<org.apache.lucene.queries.CommonTermsQuery: java.util.List terms>;

        $r10 = r4.<org.apache.lucene.queries.CommonTermsQuery: java.util.List terms>;

        $z3 = virtualinvoke $r11.<java.lang.Object: boolean equals(java.lang.Object)>($r10);

        if $z3 != 0 goto label12;

        return 0;

     label12:
        return 1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/queries/CommonTermsQuery;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.queries.CommonTermsQuery: boolean $assertionsDisabled> = $z1;

        return;
    }
}
