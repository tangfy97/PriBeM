class org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence extends java.lang.Object
{
    private int value;
    private int previousValue;
    private int minValue;
    final org.apache.lucene.analysis.shingle.ShingleFilter this$0;

    public void <init>(org.apache.lucene.analysis.shingle.ShingleFilter)
    {
        org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence r0;
        org.apache.lucene.analysis.shingle.ShingleFilter r1;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence;

        r1 := @parameter0: org.apache.lucene.analysis.shingle.ShingleFilter;

        r0.<org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence: org.apache.lucene.analysis.shingle.ShingleFilter this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = staticinvoke <org.apache.lucene.analysis.shingle.ShingleFilter: boolean access$100(org.apache.lucene.analysis.shingle.ShingleFilter)>(r1);

        if $z0 == 0 goto label1;

        $i0 = 1;

        goto label2;

     label1:
        $i0 = staticinvoke <org.apache.lucene.analysis.shingle.ShingleFilter: int access$200(org.apache.lucene.analysis.shingle.ShingleFilter)>(r1);

     label2:
        r0.<org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence: int minValue> = $i0;

        virtualinvoke r0.<org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence: void reset()>();

        return;
    }

    public int getValue()
    {
        int $i0;
        org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence r0;

        r0 := @this: org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence;

        $i0 = r0.<org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence: int value>;

        return $i0;
    }

    public void advance()
    {
        org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.apache.lucene.analysis.shingle.ShingleFilter $r1, $r2;

        r0 := @this: org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence;

        $i0 = r0.<org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence: int value>;

        r0.<org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence: int previousValue> = $i0;

        $i1 = r0.<org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence: int value>;

        if $i1 != 1 goto label1;

        $r2 = r0.<org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence: org.apache.lucene.analysis.shingle.ShingleFilter this$0>;

        $i6 = staticinvoke <org.apache.lucene.analysis.shingle.ShingleFilter: int access$200(org.apache.lucene.analysis.shingle.ShingleFilter)>($r2);

        r0.<org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence: int value> = $i6;

        goto label3;

     label1:
        $i2 = r0.<org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence: int value>;

        $r1 = r0.<org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence: org.apache.lucene.analysis.shingle.ShingleFilter this$0>;

        $i3 = staticinvoke <org.apache.lucene.analysis.shingle.ShingleFilter: int access$300(org.apache.lucene.analysis.shingle.ShingleFilter)>($r1);

        if $i2 != $i3 goto label2;

        virtualinvoke r0.<org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence: void reset()>();

        goto label3;

     label2:
        $i4 = r0.<org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence: int value>;

        $i5 = $i4 + 1;

        r0.<org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence: int value> = $i5;

     label3:
        return;
    }

    public void reset()
    {
        int $i0;
        org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence r0;

        r0 := @this: org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence;

        $i0 = r0.<org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence: int minValue>;

        r0.<org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence: int value> = $i0;

        r0.<org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence: int previousValue> = $i0;

        return;
    }

    public boolean atMinValue()
    {
        org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence;

        $i1 = r0.<org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence: int value>;

        $i0 = r0.<org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence: int minValue>;

        if $i1 != $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int getPreviousValue()
    {
        int $i0;
        org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence r0;

        r0 := @this: org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence;

        $i0 = r0.<org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence: int previousValue>;

        return $i0;
    }

    static int access$000(org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence)
    {
        int $i0;
        org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence r0;

        r0 := @parameter0: org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence;

        $i0 = r0.<org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence: int minValue>;

        return $i0;
    }

    static int access$002(org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence, int)
    {
        int i0;
        org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence r0;

        r0 := @parameter0: org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence;

        i0 := @parameter1: int;

        r0.<org.apache.lucene.analysis.shingle.ShingleFilter$CircularSequence: int minValue> = i0;

        return i0;
    }
}
