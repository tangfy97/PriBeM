public class org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTStreamWriter extends org.apache.cxf.staxutils.DelegatingXMLStreamWriter
{
    private final javax.xml.transform.Templates xsltTemplate;
    private final org.apache.cxf.io.CachedWriter cachedWriter;
    private final javax.xml.stream.XMLStreamWriter origXWriter;

    public void <init>(javax.xml.transform.Templates, org.apache.cxf.io.CachedWriter, javax.xml.stream.XMLStreamWriter, javax.xml.stream.XMLStreamWriter)
    {
        javax.xml.transform.Templates r2;
        org.apache.cxf.io.CachedWriter r3;
        org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTStreamWriter r0;
        javax.xml.stream.XMLStreamWriter r1, r4;

        r0 := @this: org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTStreamWriter;

        r2 := @parameter0: javax.xml.transform.Templates;

        r3 := @parameter1: org.apache.cxf.io.CachedWriter;

        r1 := @parameter2: javax.xml.stream.XMLStreamWriter;

        r4 := @parameter3: javax.xml.stream.XMLStreamWriter;

        specialinvoke r0.<org.apache.cxf.staxutils.DelegatingXMLStreamWriter: void <init>(javax.xml.stream.XMLStreamWriter)>(r1);

        r0.<org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTStreamWriter: javax.xml.transform.Templates xsltTemplate> = r2;

        r0.<org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTStreamWriter: org.apache.cxf.io.CachedWriter cachedWriter> = r3;

        r0.<org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTStreamWriter: javax.xml.stream.XMLStreamWriter origXWriter> = r4;

        return;
    }

    public void close()
    {
        javax.xml.transform.Templates $r2;
        org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTStreamWriter r0;
        javax.xml.stream.XMLStreamException $r24;
        javax.xml.stream.XMLStreamWriter $r6, $r8, $r18;
        java.io.Reader $r3, $r4, r36;
        java.util.logging.Logger $r10, $r21, $r26, $r30;
        java.lang.Exception $r9, $r29;
        java.lang.StringBuilder $r11, $r12, $r14, $r31, $r32, $r34;
        java.lang.Throwable $r16;
        java.lang.Object[] $r22, $r27;
        javax.xml.transform.stream.StreamSource $r5;
        org.apache.cxf.interceptor.Fault $r20, $r25;
        java.lang.String $r13, $r15, $r23, $r28, $r33, $r35;
        org.apache.cxf.io.CachedWriter $r1, $r7, $r17;
        java.io.IOException $r19;

        r0 := @this: org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTStreamWriter;

        r36 = null;

     label01:
        specialinvoke r0.<org.apache.cxf.staxutils.DelegatingXMLStreamWriter: void flush()>();

        $r2 = r0.<org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTStreamWriter: javax.xml.transform.Templates xsltTemplate>;

        $r1 = r0.<org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTStreamWriter: org.apache.cxf.io.CachedWriter cachedWriter>;

        $r3 = virtualinvoke $r1.<org.apache.cxf.io.CachedWriter: java.io.Reader getReader()>();

        $r4 = staticinvoke <org.apache.cxf.feature.transform.XSLTUtils: java.io.Reader transform(javax.xml.transform.Templates,java.io.Reader)>($r2, $r3);

        r36 = $r4;

        $r5 = new javax.xml.transform.stream.StreamSource;

        specialinvoke $r5.<javax.xml.transform.stream.StreamSource: void <init>(java.io.Reader)>($r4);

        $r6 = r0.<org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTStreamWriter: javax.xml.stream.XMLStreamWriter origXWriter>;

        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void copy(javax.xml.transform.Source,javax.xml.stream.XMLStreamWriter)>($r5, $r6);

     label02:
        if $r4 == null goto label03;

        virtualinvoke $r4.<java.io.Reader: void close()>();

     label03:
        $r7 = r0.<org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTStreamWriter: org.apache.cxf.io.CachedWriter cachedWriter>;

        virtualinvoke $r7.<org.apache.cxf.io.CachedWriter: void close()>();

        $r8 = r0.<org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTStreamWriter: javax.xml.stream.XMLStreamWriter origXWriter>;

        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void close(javax.xml.stream.XMLStreamWriter)>($r8);

        specialinvoke r0.<org.apache.cxf.staxutils.DelegatingXMLStreamWriter: void close()>();

     label04:
        goto label14;

     label05:
        $r29 := @caughtexception;

        $r30 = staticinvoke <org.apache.cxf.feature.transform.XSLTOutInterceptor: java.util.logging.Logger access$000()>();

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot close stream after transformation: ");

        $r33 = virtualinvoke $r29.<java.lang.Exception: java.lang.String getMessage()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r30.<java.util.logging.Logger: void warning(java.lang.String)>($r35);

        goto label14;

     label06:
        $r24 := @caughtexception;

        $r25 = new org.apache.cxf.interceptor.Fault;

        $r26 = staticinvoke <org.apache.cxf.feature.transform.XSLTOutInterceptor: java.util.logging.Logger access$000()>();

        $r27 = newarray (java.lang.Object)[1];

        $r28 = virtualinvoke $r24.<javax.xml.stream.XMLStreamException: java.lang.String getMessage()>();

        $r27[0] = $r28;

        specialinvoke $r25.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Throwable,java.lang.Object[])>("STAX_COPY", $r26, $r24, $r27);

        throw $r25;

     label07:
        $r19 := @caughtexception;

        $r20 = new org.apache.cxf.interceptor.Fault;

        $r21 = staticinvoke <org.apache.cxf.feature.transform.XSLTOutInterceptor: java.util.logging.Logger access$000()>();

        $r22 = newarray (java.lang.Object)[1];

        $r23 = virtualinvoke $r19.<java.io.IOException: java.lang.String getMessage()>();

        $r22[0] = $r23;

        specialinvoke $r20.<org.apache.cxf.interceptor.Fault: void <init>(java.lang.String,java.util.logging.Logger,java.lang.Throwable,java.lang.Object[])>("GET_CACHED_INPUT_STREAM", $r21, $r19, $r22);

        throw $r20;

     label08:
        $r16 := @caughtexception;

     label09:
        if r36 == null goto label10;

        virtualinvoke r36.<java.io.Reader: void close()>();

     label10:
        $r17 = r0.<org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTStreamWriter: org.apache.cxf.io.CachedWriter cachedWriter>;

        virtualinvoke $r17.<org.apache.cxf.io.CachedWriter: void close()>();

        $r18 = r0.<org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTStreamWriter: javax.xml.stream.XMLStreamWriter origXWriter>;

        staticinvoke <org.apache.cxf.staxutils.StaxUtils: void close(javax.xml.stream.XMLStreamWriter)>($r18);

        specialinvoke r0.<org.apache.cxf.staxutils.DelegatingXMLStreamWriter: void close()>();

     label11:
        goto label13;

     label12:
        $r9 := @caughtexception;

        $r10 = staticinvoke <org.apache.cxf.feature.transform.XSLTOutInterceptor: java.util.logging.Logger access$000()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot close stream after transformation: ");

        $r13 = virtualinvoke $r9.<java.lang.Exception: java.lang.String getMessage()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.util.logging.Logger: void warning(java.lang.String)>($r15);

     label13:
        throw $r16;

     label14:
        return;

        catch java.lang.Exception from label02 to label04 with label05;
        catch javax.xml.stream.XMLStreamException from label01 to label02 with label06;
        catch java.io.IOException from label01 to label02 with label07;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Exception from label09 to label11 with label12;
        catch java.lang.Throwable from label06 to label09 with label08;
    }
}
