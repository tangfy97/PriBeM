public final class edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava extends java.lang.Object implements kodkod.ast.visitor.VoidVisitor
{
    private final java.io.PrintWriter file;
    private final java.util.IdentityHashMap map;

    public static int countHeight(kodkod.ast.Node)
    {
        int $i0;
        java.lang.Object $r2;
        edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava$1 $r0;
        java.lang.Integer $r3;
        kodkod.ast.Node r1;
        boolean $z0;

        r1 := @parameter0: kodkod.ast.Node;

        $r0 = new edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava$1;

        specialinvoke $r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava$1: void <init>()>();

        $r2 = virtualinvoke r1.<kodkod.ast.Node: java.lang.Object accept(kodkod.ast.visitor.ReturnVisitor)>($r0);

        $z0 = $r2 instanceof java.lang.Integer;

        if $z0 == 0 goto label1;

        $r3 = (java.lang.Integer) $r2;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        return $i0;

     label1:
        return 0;
    }

    public static java.lang.String convert(kodkod.ast.Formula, int, java.lang.Iterable, kodkod.instance.Bounds, java.util.Map)
    {
        java.io.PrintWriter $r1;
        java.io.StringWriter $r0;
        kodkod.ast.Formula r3;
        java.lang.Iterable r4;
        kodkod.instance.Bounds r5;
        java.util.Map r6;
        int i0;
        java.lang.String $r7;
        edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava $r2;
        boolean $z0;

        r3 := @parameter0: kodkod.ast.Formula;

        i0 := @parameter1: int;

        r4 := @parameter2: java.lang.Iterable;

        r5 := @parameter3: kodkod.instance.Bounds;

        r6 := @parameter4: java.util.Map;

        $r0 = new java.io.StringWriter;

        specialinvoke $r0.<java.io.StringWriter: void <init>()>();

        $r1 = new java.io.PrintWriter;

        specialinvoke $r1.<java.io.PrintWriter: void <init>(java.io.Writer)>($r0);

        $r2 = new edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava;

        specialinvoke $r2.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: void <init>(java.io.PrintWriter,kodkod.ast.Formula,int,java.lang.Iterable,kodkod.instance.Bounds,java.util.Map)>($r1, r3, i0, r4, r5, r6);

        $z0 = virtualinvoke $r1.<java.io.PrintWriter: boolean checkError()>();

        if $z0 == 0 goto label1;

        return "";

     label1:
        $r7 = virtualinvoke $r0.<java.io.StringWriter: java.lang.String toString()>();

        return $r7;
    }

    private java.lang.String makename(kodkod.ast.Node)
    {
        java.util.IdentityHashMap $r2, $r5, $r8;
        kodkod.ast.Node r1;
        int $i0;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r7;
        edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava r0;
        boolean $z0;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava;

        r1 := @parameter0: kodkod.ast.Node;

        $r2 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.util.IdentityHashMap map>;

        $z0 = virtualinvoke $r2.<java.util.IdentityHashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $r5 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.util.IdentityHashMap map>;

        $i0 = virtualinvoke $r5.<java.util.IdentityHashMap: int size()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.util.IdentityHashMap map>;

        virtualinvoke $r8.<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r7);

        return $r7;
    }

    private java.lang.String make(kodkod.ast.Node)
    {
        java.util.IdentityHashMap $r2;
        java.lang.Object $r3;
        java.lang.String $r4;
        kodkod.ast.Node r0;
        edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava r1;

        r1 := @this: edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava;

        r0 := @parameter0: kodkod.ast.Node;

        virtualinvoke r0.<kodkod.ast.Node: void accept(kodkod.ast.visitor.VoidVisitor)>(r1);

        $r2 = r1.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.util.IdentityHashMap map>;

        $r3 = virtualinvoke $r2.<java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>(r0);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    private void <init>(java.io.PrintWriter, kodkod.ast.Formula, int, java.lang.Iterable, kodkod.instance.Bounds, java.util.Map)
    {
        java.lang.Integer $r54, $r83, $r118;
        java.util.Map r80;
        java.lang.StringBuilder $r91, $r92, $r95, $r96, $r137, $r138;
        java.lang.Object[] $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r29, $r32, $r34, $r36, $r38, $r44, $r48, $r50, $r52, $r55, $r57, $r59, $r61, $r63, $r65, $r67, $r69, $r71, $r81, $r98, $r100, $r102, $r105, $r107, $r109, $r111, $r115, $r119;
        edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava r0;
        kodkod.instance.Tuple r132;
        kodkod.ast.Formula r46;
        kodkod.util.ints.SparseSequence $r42;
        kodkod.ast.Relation r127, r129;
        int i0, $i1, $i2, $i3, i4, $i6, $i8;
        kodkod.instance.TupleSet $r76, $r88, $r89;
        java.lang.Object $r74, $r75, $r78, $r79, $r84, $r85, $r87, $r104, $r113, $r122, $r123;
        java.io.PrintWriter r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r30, $r33, $r35, $r37, $r39, $r45, $r49, $r51, $r53, $r56, $r58, $r60, $r62, $r64, $r66, $r68, $r70, $r72, $r73, $r82, $r99, $r101, $r103, $r106, $r108, $r110, $r112, $r116, $r120;
        java.util.Set $r27, $r40;
        java.util.ArrayList $r136;
        kodkod.util.ints.IndexedEntry r131;
        java.lang.String $r47, $r93, $r97, $r114, $r117, $r121, r124, $r125, $r126, r128, r130, $r133, $r134;
        kodkod.instance.Bounds r26;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.IdentityHashMap $r86, $r135;
        java.lang.Iterable r24;
        java.util.Iterator $r25, $r28, $r31, $r41, $r43, $r77;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava;

        r2 := @parameter0: java.io.PrintWriter;

        r46 := @parameter1: kodkod.ast.Formula;

        i0 := @parameter2: int;

        r24 := @parameter3: java.lang.Iterable;

        r26 := @parameter4: kodkod.instance.Bounds;

        r80 := @parameter5: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r135 = new java.util.IdentityHashMap;

        specialinvoke $r135.<java.util.IdentityHashMap: void <init>()>();

        r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.util.IdentityHashMap map> = $r135;

        r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file> = r2;

        $r4 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r3 = newarray (java.lang.Object)[0];

        virtualinvoke $r4.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("import java.util.Arrays;%n", $r3);

        $r6 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r5 = newarray (java.lang.Object)[0];

        virtualinvoke $r6.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("import java.util.List;%n", $r5);

        $r8 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r7 = newarray (java.lang.Object)[0];

        virtualinvoke $r8.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("import kodkod.ast.*;%n", $r7);

        $r10 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r9 = newarray (java.lang.Object)[0];

        virtualinvoke $r10.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("import kodkod.ast.operator.*;%n", $r9);

        $r12 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r11 = newarray (java.lang.Object)[0];

        virtualinvoke $r12.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("import kodkod.instance.*;%n", $r11);

        $r14 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r13 = newarray (java.lang.Object)[0];

        virtualinvoke $r14.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("import kodkod.engine.*;%n", $r13);

        $r16 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r15 = newarray (java.lang.Object)[0];

        virtualinvoke $r16.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("import kodkod.engine.satlab.SATFactory;%n", $r15);

        $r18 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r17 = newarray (java.lang.Object)[0];

        virtualinvoke $r18.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("import kodkod.engine.config.Options;%n%n", $r17);

        $r20 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r19 = newarray (java.lang.Object)[0];

        virtualinvoke $r20.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("public final class Test {%n%n", $r19);

        $r22 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r21 = newarray (java.lang.Object)[0];

        virtualinvoke $r22.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("public static void main(String[] args) throws Exception {%n%n", $r21);

        $r136 = new java.util.ArrayList;

        specialinvoke $r136.<java.util.ArrayList: void <init>()>();

        $r25 = interfaceinvoke r24.<java.lang.Iterable: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r25.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r122 = interfaceinvoke $r25.<java.util.Iterator: java.lang.Object next()>();

        r124 = (java.lang.String) $r122;

        if r80 != null goto label02;

        $r125 = null;

        goto label03;

     label02:
        $r123 = interfaceinvoke r80.<java.util.Map: java.lang.Object get(java.lang.Object)>(r124);

        $r125 = (java.lang.String) $r123;

     label03:
        if $r125 != null goto label04;

        $r126 = virtualinvoke r124.<java.lang.Object: java.lang.String toString()>();

        goto label05;

     label04:
        $r126 = $r125;

     label05:
        virtualinvoke $r136.<java.util.ArrayList: boolean add(java.lang.Object)>($r126);

        goto label01;

     label06:
        staticinvoke <java.util.Collections: void sort(java.util.List)>($r136);

        $r27 = virtualinvoke r26.<kodkod.instance.Bounds: java.util.Set relations()>();

        $r28 = interfaceinvoke $r27.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke $r28.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r113 = interfaceinvoke $r28.<java.util.Iterator: java.lang.Object next()>();

        r127 = (kodkod.ast.Relation) $r113;

        $r114 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String makename(kodkod.ast.Node)>(r127);

        $i3 = virtualinvoke r127.<kodkod.ast.Relation: int arity()>();

        if $i3 != 1 goto label08;

        $r120 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r119 = newarray (java.lang.Object)[2];

        $r119[0] = $r114;

        $r121 = virtualinvoke r127.<kodkod.ast.Relation: java.lang.String name()>();

        $r119[1] = $r121;

        virtualinvoke $r120.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Relation %s = Relation.unary(\"%s\");%n", $r119);

        goto label09;

     label08:
        $r116 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r115 = newarray (java.lang.Object)[3];

        $r115[0] = $r114;

        $r117 = virtualinvoke r127.<kodkod.ast.Relation: java.lang.String name()>();

        $r115[1] = $r117;

        $r118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r115[2] = $r118;

        virtualinvoke $r116.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Relation %s = Relation.nary(\"%s\", %d);%n", $r115);

     label09:
        goto label07;

     label10:
        $r30 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r29 = newarray (java.lang.Object)[0];

        virtualinvoke $r30.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("%nList<String> atomlist = Arrays.asList(%n", $r29);

        $i6 = (int) -1;

        i4 = $i6;

        $r31 = virtualinvoke $r136.<java.util.ArrayList: java.util.Iterator iterator()>();

     label11:
        $z2 = interfaceinvoke $r31.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label16;

        $r104 = interfaceinvoke $r31.<java.util.Iterator: java.lang.Object next()>();

        r128 = (java.lang.String) $r104;

        $i8 = (int) -1;

        if i4 == $i8 goto label12;

        $r112 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r111 = newarray (java.lang.Object)[0];

        virtualinvoke $r112.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>(",", $r111);

        goto label13;

     label12:
        i4 = 0;

     label13:
        if i4 != 5 goto label14;

        $r110 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r109 = newarray (java.lang.Object)[0];

        virtualinvoke $r110.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("%n ", $r109);

        i4 = 0;

        goto label15;

     label14:
        $r106 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r105 = newarray (java.lang.Object)[0];

        virtualinvoke $r106.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>(" ", $r105);

        i4 = i4 + 1;

     label15:
        $r108 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r107 = newarray (java.lang.Object)[1];

        $r107[0] = r128;

        virtualinvoke $r108.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("\"%s\"", $r107);

        goto label11;

     label16:
        $r33 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r32 = newarray (java.lang.Object)[0];

        virtualinvoke $r33.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("%n);%n%n", $r32);

        $r35 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r34 = newarray (java.lang.Object)[0];

        virtualinvoke $r35.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Universe universe = new Universe(atomlist);%n", $r34);

        $r37 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r36 = newarray (java.lang.Object)[0];

        virtualinvoke $r37.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("TupleFactory factory = universe.factory();%n", $r36);

        $r39 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r38 = newarray (java.lang.Object)[0];

        virtualinvoke $r39.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Bounds bounds = new Bounds(universe);%n%n", $r38);

        $r40 = virtualinvoke r26.<kodkod.instance.Bounds: java.util.Set relations()>();

        $r41 = interfaceinvoke $r40.<java.util.Set: java.util.Iterator iterator()>();

     label17:
        $z3 = interfaceinvoke $r41.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label21;

        $r85 = interfaceinvoke $r41.<java.util.Iterator: java.lang.Object next()>();

        r129 = (kodkod.ast.Relation) $r85;

        $r86 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.util.IdentityHashMap map>;

        $r87 = virtualinvoke $r86.<java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>(r129);

        r130 = (java.lang.String) $r87;

        $r88 = virtualinvoke r26.<kodkod.instance.Bounds: kodkod.instance.TupleSet upperBound(kodkod.ast.Relation)>(r129);

        $r89 = virtualinvoke r26.<kodkod.instance.Bounds: kodkod.instance.TupleSet lowerBound(kodkod.ast.Relation)>(r129);

        $r137 = new java.lang.StringBuilder;

        specialinvoke $r137.<java.lang.StringBuilder: void <init>()>();

        $r91 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r130);

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_upper");

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: void printTupleset(java.lang.String,kodkod.instance.TupleSet,java.util.Map)>($r93, $r88, r80);

        $z6 = virtualinvoke $r88.<kodkod.instance.TupleSet: boolean equals(java.lang.Object)>($r89);

        if $z6 == 0 goto label18;

        $r103 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r102 = newarray (java.lang.Object)[2];

        $r102[0] = r130;

        $r102[1] = r130;

        virtualinvoke $r103.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("bounds.boundExactly(%s, %s_upper);%n%n", $r102);

        goto label20;

     label18:
        $i2 = virtualinvoke $r89.<kodkod.instance.TupleSet: int size()>();

        if $i2 != 0 goto label19;

        $r101 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r100 = newarray (java.lang.Object)[2];

        $r100[0] = r130;

        $r100[1] = r130;

        virtualinvoke $r101.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("bounds.bound(%s, %s_upper);%n%n", $r100);

        goto label20;

     label19:
        $r138 = new java.lang.StringBuilder;

        specialinvoke $r138.<java.lang.StringBuilder: void <init>()>();

        $r95 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r130);

        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_lower");

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: void printTupleset(java.lang.String,kodkod.instance.TupleSet,java.util.Map)>($r97, $r89, r80);

        $r99 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r98 = newarray (java.lang.Object)[3];

        $r98[0] = r130;

        $r98[1] = r130;

        $r98[2] = r130;

        virtualinvoke $r99.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("bounds.bound(%s, %s_lower, %s_upper);%n%n", $r98);

     label20:
        goto label17;

     label21:
        $r42 = virtualinvoke r26.<kodkod.instance.Bounds: kodkod.util.ints.SparseSequence intBounds()>();

        $r43 = interfaceinvoke $r42.<kodkod.util.ints.SparseSequence: java.util.Iterator iterator()>();

     label22:
        $z4 = interfaceinvoke $r43.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label29;

        $r74 = interfaceinvoke $r43.<java.util.Iterator: java.lang.Object next()>();

        r131 = (kodkod.util.ints.IndexedEntry) $r74;

        $r75 = interfaceinvoke r131.<kodkod.util.ints.IndexedEntry: java.lang.Object value()>();

        $r76 = (kodkod.instance.TupleSet) $r75;

        $r77 = virtualinvoke $r76.<kodkod.instance.TupleSet: java.util.Iterator iterator()>();

     label23:
        $z5 = interfaceinvoke $r77.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label28;

        $r78 = interfaceinvoke $r77.<java.util.Iterator: java.lang.Object next()>();

        r132 = (kodkod.instance.Tuple) $r78;

        $r79 = virtualinvoke r132.<kodkod.instance.Tuple: java.lang.Object atom(int)>(0);

        if r80 == null goto label24;

        $r84 = interfaceinvoke r80.<java.util.Map: java.lang.Object get(java.lang.Object)>($r79);

        $r133 = (java.lang.String) $r84;

        goto label25;

     label24:
        $r133 = null;

     label25:
        if $r133 == null goto label26;

        $r134 = $r133;

        goto label27;

     label26:
        $r134 = virtualinvoke $r79.<java.lang.Object: java.lang.String toString()>();

     label27:
        $r82 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r81 = newarray (java.lang.Object)[3];

        $i1 = interfaceinvoke r131.<kodkod.util.ints.IndexedEntry: int index()>();

        $r83 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r81[0] = $r83;

        $r81[1] = $r134;

        $r81[2] = $r134;

        virtualinvoke $r82.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("bounds.boundExactly(%d,factory.range(factory.tuple(\"%s\"),factory.tuple(\"%s\")));%n", $r81);

        goto label23;

     label28:
        goto label22;

     label29:
        $r45 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r44 = newarray (java.lang.Object)[0];

        virtualinvoke $r45.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("%n", $r44);

        $r47 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>(r46);

        $r49 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r48 = newarray (java.lang.Object)[0];

        virtualinvoke $r49.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("%nSolver solver = new Solver();", $r48);

        $r51 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r50 = newarray (java.lang.Object)[0];

        virtualinvoke $r51.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("%nsolver.options().setSolver(SATFactory.DefaultSAT4J);", $r50);

        $r53 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r52 = newarray (java.lang.Object)[1];

        $r54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r52[0] = $r54;

        virtualinvoke $r53.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("%nsolver.options().setBitwidth(%d);", $r52);

        $r56 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r55 = newarray (java.lang.Object)[0];

        virtualinvoke $r56.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("%nsolver.options().setFlatten(false);", $r55);

        $r58 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r57 = newarray (java.lang.Object)[0];

        virtualinvoke $r58.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("%nsolver.options().setIntEncoding(Options.IntEncoding.TWOSCOMPLEMENT);", $r57);

        $r60 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r59 = newarray (java.lang.Object)[0];

        virtualinvoke $r60.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("%nsolver.options().setSymmetryBreaking(20);", $r59);

        $r62 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r61 = newarray (java.lang.Object)[0];

        virtualinvoke $r62.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("%nsolver.options().setSkolemDepth(0);", $r61);

        $r64 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r63 = newarray (java.lang.Object)[0];

        virtualinvoke $r64.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("%nSystem.out.println(\"Solving...\");", $r63);

        $r66 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r65 = newarray (java.lang.Object)[0];

        virtualinvoke $r66.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("%nSystem.out.flush();", $r65);

        $r68 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r67 = newarray (java.lang.Object)[1];

        $r67[0] = $r47;

        virtualinvoke $r68.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("%nSolution sol = solver.solve(%s,bounds);", $r67);

        $r70 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r69 = newarray (java.lang.Object)[0];

        virtualinvoke $r70.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("%nSystem.out.println(sol.toString());", $r69);

        $r72 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r71 = newarray (java.lang.Object)[0];

        virtualinvoke $r72.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("%n}}%n", $r71);

        $r73 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        virtualinvoke $r73.<java.io.PrintWriter: void close()>();

        return;
    }

    private void printTupleset(java.lang.String, kodkod.instance.TupleSet, java.util.Map)
    {
        java.lang.Object[] $r1, $r9, $r11, $r16, $r18, $r20;
        java.lang.Integer $r5;
        java.util.Map r14;
        int $i0, $i1, i2;
        java.lang.String r2, $r22, $r23;
        edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava r0;
        kodkod.instance.TupleSet r3;
        boolean $z0;
        java.io.PrintWriter $r4, $r10, $r12, $r17, $r19, $r21;
        kodkod.instance.Tuple r8;
        java.util.Iterator $r6;
        java.lang.Object $r7, $r13, $r15;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: kodkod.instance.TupleSet;

        r14 := @parameter2: java.util.Map;

        $r4 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = r2;

        $i0 = virtualinvoke r3.<kodkod.instance.TupleSet: int arity()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[1] = $r5;

        virtualinvoke $r4.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("TupleSet %s = factory.noneOf(%d);%n", $r1);

        $r6 = virtualinvoke r3.<kodkod.instance.TupleSet: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (kodkod.instance.Tuple) $r7;

        $r10 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = r2;

        virtualinvoke $r10.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("%s.add(", $r9);

        i2 = 0;

     label02:
        $i1 = virtualinvoke r3.<kodkod.instance.TupleSet: int arity()>();

        if i2 >= $i1 goto label09;

        if i2 == 0 goto label03;

        $r21 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r20 = newarray (java.lang.Object)[0];

        virtualinvoke $r21.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>(".product(", $r20);

     label03:
        $r13 = virtualinvoke r8.<kodkod.instance.Tuple: java.lang.Object atom(int)>(i2);

        if r14 != null goto label04;

        $r22 = null;

        goto label05;

     label04:
        $r15 = interfaceinvoke r14.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13);

        $r22 = (java.lang.String) $r15;

     label05:
        $r17 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r16 = newarray (java.lang.Object)[1];

        if $r22 != null goto label06;

        $r23 = virtualinvoke $r13.<java.lang.Object: java.lang.String toString()>();

        goto label07;

     label06:
        $r23 = $r22;

     label07:
        $r16[0] = $r23;

        virtualinvoke $r17.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("factory.tuple(\"%s\")", $r16);

        if i2 == 0 goto label08;

        $r19 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r18 = newarray (java.lang.Object)[0];

        virtualinvoke $r19.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>(")", $r18);

     label08:
        i2 = i2 + 1;

        goto label02;

     label09:
        $r12 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r11 = newarray (java.lang.Object)[0];

        virtualinvoke $r12.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>(");%n", $r11);

        goto label01;

     label10:
        return;
    }

    public void visit(kodkod.ast.Relation)
    {
        java.util.IdentityHashMap $r2;
        java.lang.RuntimeException $r3;
        java.lang.StringBuilder $r4, $r5, $r7, $r8;
        java.lang.String $r6, $r9;
        edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava r0;
        kodkod.ast.Relation r1;
        boolean $z0;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava;

        r1 := @parameter0: kodkod.ast.Relation;

        $r2 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.util.IdentityHashMap map>;

        $z0 = virtualinvoke $r2.<java.util.IdentityHashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.RuntimeException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown kodkod relation \"");

        $r6 = virtualinvoke r1.<kodkod.ast.Relation: java.lang.String name()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" encountered");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r3;

     label1:
        return;
    }

    public void visit(kodkod.ast.BinaryExpression)
    {
        java.lang.Object[] $r9, $r11, $r13, $r15, $r17, $r19;
        kodkod.ast.BinaryExpression r1;
        int[] $r7;
        int $i0, $i1;
        java.lang.String $r2, $r4, $r6, $r27;
        edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava r0;
        java.io.PrintWriter $r10, $r12, $r14, $r16, $r18, $r20;
        kodkod.ast.Expression $r3, $r5;
        java.lang.RuntimeException $r21;
        kodkod.ast.operator.ExprOperator $r8, $r24;
        java.lang.StringBuilder $r22, $r23, $r25, $r26;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava;

        r1 := @parameter0: kodkod.ast.BinaryExpression;

        $r2 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String makename(kodkod.ast.Node)>(r1);

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r1.<kodkod.ast.BinaryExpression: kodkod.ast.Expression left()>();

        $r4 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r3);

        $r5 = virtualinvoke r1.<kodkod.ast.BinaryExpression: kodkod.ast.Expression right()>();

        $r6 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r5);

        $r7 = <edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava$2: int[] $SwitchMap$kodkod$ast$operator$ExprOperator>;

        $r8 = virtualinvoke r1.<kodkod.ast.BinaryExpression: kodkod.ast.operator.ExprOperator op()>();

        $i0 = virtualinvoke $r8.<kodkod.ast.operator.ExprOperator: int ordinal()>();

        $i1 = $r7[$i0];

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            case 6: goto label7;
            default: goto label8;
        };

     label2:
        $r20 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r19 = newarray (java.lang.Object)[3];

        $r19[0] = $r2;

        $r19[1] = $r4;

        $r19[2] = $r6;

        virtualinvoke $r20.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Expression %s=%s.difference(%s);%n", $r19);

        goto label9;

     label3:
        $r18 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r17 = newarray (java.lang.Object)[3];

        $r17[0] = $r2;

        $r17[1] = $r4;

        $r17[2] = $r6;

        virtualinvoke $r18.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Expression %s=%s.intersection(%s);%n", $r17);

        goto label9;

     label4:
        $r16 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r15 = newarray (java.lang.Object)[3];

        $r15[0] = $r2;

        $r15[1] = $r4;

        $r15[2] = $r6;

        virtualinvoke $r16.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Expression %s=%s.join(%s);%n", $r15);

        goto label9;

     label5:
        $r14 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r13 = newarray (java.lang.Object)[3];

        $r13[0] = $r2;

        $r13[1] = $r4;

        $r13[2] = $r6;

        virtualinvoke $r14.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Expression %s=%s.override(%s);%n", $r13);

        goto label9;

     label6:
        $r12 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r11 = newarray (java.lang.Object)[3];

        $r11[0] = $r2;

        $r11[1] = $r4;

        $r11[2] = $r6;

        virtualinvoke $r12.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Expression %s=%s.product(%s);%n", $r11);

        goto label9;

     label7:
        $r10 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r9 = newarray (java.lang.Object)[3];

        $r9[0] = $r2;

        $r9[1] = $r4;

        $r9[2] = $r6;

        virtualinvoke $r10.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Expression %s=%s.union(%s);%n", $r9);

        goto label9;

     label8:
        $r21 = new java.lang.RuntimeException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown kodkod operator \"");

        $r24 = virtualinvoke r1.<kodkod.ast.BinaryExpression: kodkod.ast.operator.ExprOperator op()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" encountered");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.RuntimeException: void <init>(java.lang.String)>($r27);

        throw $r21;

     label9:
        return;
    }

    public void visit(kodkod.ast.ComparisonFormula)
    {
        java.lang.Object[] $r9, $r11;
        int[] $r7;
        int $i0, $i1;
        kodkod.ast.ComparisonFormula r1;
        java.lang.String $r2, $r4, $r6, $r19;
        kodkod.ast.operator.ExprCompOperator $r8, $r16;
        edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava r0;
        java.io.PrintWriter $r10, $r12;
        kodkod.ast.Expression $r3, $r5;
        java.lang.RuntimeException $r13;
        java.lang.StringBuilder $r14, $r15, $r17, $r18;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava;

        r1 := @parameter0: kodkod.ast.ComparisonFormula;

        $r2 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String makename(kodkod.ast.Node)>(r1);

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r1.<kodkod.ast.ComparisonFormula: kodkod.ast.Expression left()>();

        $r4 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r3);

        $r5 = virtualinvoke r1.<kodkod.ast.ComparisonFormula: kodkod.ast.Expression right()>();

        $r6 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r5);

        $r7 = <edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava$2: int[] $SwitchMap$kodkod$ast$operator$ExprCompOperator>;

        $r8 = virtualinvoke r1.<kodkod.ast.ComparisonFormula: kodkod.ast.operator.ExprCompOperator op()>();

        $i0 = virtualinvoke $r8.<kodkod.ast.operator.ExprCompOperator: int ordinal()>();

        $i1 = $r7[$i0];

        lookupswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label2:
        $r12 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r11 = newarray (java.lang.Object)[3];

        $r11[0] = $r2;

        $r11[1] = $r4;

        $r11[2] = $r6;

        virtualinvoke $r12.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Formula %s=%s.eq(%s);%n", $r11);

        goto label5;

     label3:
        $r10 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r9 = newarray (java.lang.Object)[3];

        $r9[0] = $r2;

        $r9[1] = $r4;

        $r9[2] = $r6;

        virtualinvoke $r10.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Formula %s=%s.in(%s);%n", $r9);

        goto label5;

     label4:
        $r13 = new java.lang.RuntimeException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown kodkod operator \"");

        $r16 = virtualinvoke r1.<kodkod.ast.ComparisonFormula: kodkod.ast.operator.ExprCompOperator op()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" encountered");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>($r19);

        throw $r13;

     label5:
        return;
    }

    public void visit(kodkod.ast.ProjectExpression)
    {
        kodkod.ast.ProjectExpression r1;
        java.lang.Object[] $r7, $r9, $r11, $r14;
        java.util.ArrayList $r5;
        int $i0, i1;
        java.lang.String $r2, $r4, $r18;
        edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava r0;
        boolean $z0;
        java.io.PrintWriter $r8, $r10, $r12, $r15;
        java.util.Iterator $r6;
        kodkod.ast.Expression $r3;
        kodkod.ast.Node $r17;
        java.lang.Object $r13, $r16;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava;

        r1 := @parameter0: kodkod.ast.ProjectExpression;

        $r2 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String makename(kodkod.ast.Node)>(r1);

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r1.<kodkod.ast.ProjectExpression: kodkod.ast.Expression expression()>();

        $r4 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r3);

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = virtualinvoke r1.<kodkod.ast.ProjectExpression: java.util.Iterator columns()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r16 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r17 = (kodkod.ast.Node) $r16;

        $r18 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r17);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r18);

        goto label2;

     label3:
        i1 = 0;

     label4:
        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        if i1 >= $i0 goto label7;

        if i1 != 0 goto label5;

        $r15 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r14 = newarray (java.lang.Object)[2];

        $r14[0] = $r2;

        $r14[1] = $r4;

        virtualinvoke $r15.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Expression %s=%s.over(", $r14);

        goto label6;

     label5:
        $r10 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r9 = newarray (java.lang.Object)[0];

        virtualinvoke $r10.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>(",", $r9);

     label6:
        $r12 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r11 = newarray (java.lang.Object)[1];

        $r13 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i1);

        $r11[0] = $r13;

        virtualinvoke $r12.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("%s", $r11);

        i1 = i1 + 1;

        goto label4;

     label7:
        $r8 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r7 = newarray (java.lang.Object)[0];

        virtualinvoke $r8.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>(");%n", $r7);

        return;
    }

    public void visit(kodkod.ast.IntComparisonFormula)
    {
        kodkod.ast.operator.IntCompOperator $r8, $r22;
        java.lang.Object[] $r9, $r11, $r13, $r15, $r17;
        int[] $r7;
        int $i0, $i1;
        java.lang.String $r2, $r4, $r6, $r25;
        edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava r0;
        java.io.PrintWriter $r10, $r12, $r14, $r16, $r18;
        kodkod.ast.IntExpression $r3, $r5;
        java.lang.RuntimeException $r19;
        kodkod.ast.IntComparisonFormula r1;
        java.lang.StringBuilder $r20, $r21, $r23, $r24;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava;

        r1 := @parameter0: kodkod.ast.IntComparisonFormula;

        $r2 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String makename(kodkod.ast.Node)>(r1);

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r1.<kodkod.ast.IntComparisonFormula: kodkod.ast.IntExpression left()>();

        $r4 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r3);

        $r5 = virtualinvoke r1.<kodkod.ast.IntComparisonFormula: kodkod.ast.IntExpression right()>();

        $r6 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r5);

        $r7 = <edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava$2: int[] $SwitchMap$kodkod$ast$operator$IntCompOperator>;

        $r8 = virtualinvoke r1.<kodkod.ast.IntComparisonFormula: kodkod.ast.operator.IntCompOperator op()>();

        $i0 = virtualinvoke $r8.<kodkod.ast.operator.IntCompOperator: int ordinal()>();

        $i1 = $r7[$i0];

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            default: goto label7;
        };

     label2:
        $r18 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r17 = newarray (java.lang.Object)[3];

        $r17[0] = $r2;

        $r17[1] = $r4;

        $r17[2] = $r6;

        virtualinvoke $r18.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Formula %s=%s.eq(%s);%n", $r17);

        goto label8;

     label3:
        $r16 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r15 = newarray (java.lang.Object)[3];

        $r15[0] = $r2;

        $r15[1] = $r4;

        $r15[2] = $r6;

        virtualinvoke $r16.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Formula %s=%s.gt(%s);%n", $r15);

        goto label8;

     label4:
        $r14 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r13 = newarray (java.lang.Object)[3];

        $r13[0] = $r2;

        $r13[1] = $r4;

        $r13[2] = $r6;

        virtualinvoke $r14.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Formula %s=%s.gte(%s);%n", $r13);

        goto label8;

     label5:
        $r12 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r11 = newarray (java.lang.Object)[3];

        $r11[0] = $r2;

        $r11[1] = $r4;

        $r11[2] = $r6;

        virtualinvoke $r12.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Formula %s=%s.lt(%s);%n", $r11);

        goto label8;

     label6:
        $r10 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r9 = newarray (java.lang.Object)[3];

        $r9[0] = $r2;

        $r9[1] = $r4;

        $r9[2] = $r6;

        virtualinvoke $r10.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Formula %s=%s.lte(%s);%n", $r9);

        goto label8;

     label7:
        $r19 = new java.lang.RuntimeException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown kodkod operator \"");

        $r22 = virtualinvoke r1.<kodkod.ast.IntComparisonFormula: kodkod.ast.operator.IntCompOperator op()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" encountered");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String)>($r25);

        throw $r19;

     label8:
        return;
    }

    public void visit(kodkod.ast.BinaryFormula)
    {
        kodkod.ast.BinaryFormula r1;
        java.lang.Object[] $r9, $r11, $r13, $r15;
        int[] $r7;
        kodkod.ast.operator.FormulaOperator $r8, $r20;
        int $i0, $i1;
        java.lang.String $r2, $r4, $r6, $r23;
        edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava r0;
        java.io.PrintWriter $r10, $r12, $r14, $r16;
        kodkod.ast.Formula $r3, $r5;
        java.lang.RuntimeException $r17;
        java.lang.StringBuilder $r18, $r19, $r21, $r22;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava;

        r1 := @parameter0: kodkod.ast.BinaryFormula;

        $r2 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String makename(kodkod.ast.Node)>(r1);

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r1.<kodkod.ast.BinaryFormula: kodkod.ast.Formula left()>();

        $r4 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r3);

        $r5 = virtualinvoke r1.<kodkod.ast.BinaryFormula: kodkod.ast.Formula right()>();

        $r6 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r5);

        $r7 = <edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava$2: int[] $SwitchMap$kodkod$ast$operator$FormulaOperator>;

        $r8 = virtualinvoke r1.<kodkod.ast.BinaryFormula: kodkod.ast.operator.FormulaOperator op()>();

        $i0 = virtualinvoke $r8.<kodkod.ast.operator.FormulaOperator: int ordinal()>();

        $i1 = $r7[$i0];

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            default: goto label6;
        };

     label2:
        $r16 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r15 = newarray (java.lang.Object)[3];

        $r15[0] = $r2;

        $r15[1] = $r4;

        $r15[2] = $r6;

        virtualinvoke $r16.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Formula %s=%s.and(%s);%n", $r15);

        goto label7;

     label3:
        $r14 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r13 = newarray (java.lang.Object)[3];

        $r13[0] = $r2;

        $r13[1] = $r4;

        $r13[2] = $r6;

        virtualinvoke $r14.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Formula %s=%s.or(%s);%n", $r13);

        goto label7;

     label4:
        $r12 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r11 = newarray (java.lang.Object)[3];

        $r11[0] = $r2;

        $r11[1] = $r4;

        $r11[2] = $r6;

        virtualinvoke $r12.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Formula %s=%s.implies(%s);%n", $r11);

        goto label7;

     label5:
        $r10 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r9 = newarray (java.lang.Object)[3];

        $r9[0] = $r2;

        $r9[1] = $r4;

        $r9[2] = $r6;

        virtualinvoke $r10.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Formula %s=%s.iff(%s);%n", $r9);

        goto label7;

     label6:
        $r17 = new java.lang.RuntimeException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown kodkod operator \"");

        $r20 = virtualinvoke r1.<kodkod.ast.BinaryFormula: kodkod.ast.operator.FormulaOperator op()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" encountered");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String)>($r23);

        throw $r17;

     label7:
        return;
    }

    public void visit(kodkod.ast.BinaryIntExpression)
    {
        int[] $r7;
        java.io.PrintWriter $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30;
        kodkod.ast.operator.IntOperator $r8, $r34;
        java.lang.StringBuilder $r32, $r33, $r35, $r36;
        java.lang.Object[] $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29;
        kodkod.ast.BinaryIntExpression r1;
        int $i0, $i1;
        java.lang.String $r2, $r4, $r6, $r37;
        edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava r0;
        kodkod.ast.IntExpression $r3, $r5;
        java.lang.RuntimeException $r31;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava;

        r1 := @parameter0: kodkod.ast.BinaryIntExpression;

        $r2 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String makename(kodkod.ast.Node)>(r1);

        if $r2 != null goto label01;

        return;

     label01:
        $r3 = virtualinvoke r1.<kodkod.ast.BinaryIntExpression: kodkod.ast.IntExpression left()>();

        $r4 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r3);

        $r5 = virtualinvoke r1.<kodkod.ast.BinaryIntExpression: kodkod.ast.IntExpression right()>();

        $r6 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r5);

        $r7 = <edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava$2: int[] $SwitchMap$kodkod$ast$operator$IntOperator>;

        $r8 = virtualinvoke r1.<kodkod.ast.BinaryIntExpression: kodkod.ast.operator.IntOperator op()>();

        $i0 = virtualinvoke $r8.<kodkod.ast.operator.IntOperator: int ordinal()>();

        $i1 = $r7[$i0];

        tableswitch($i1)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label08;
            case 8: goto label09;
            case 9: goto label10;
            case 10: goto label11;
            case 11: goto label12;
            default: goto label13;
        };

     label02:
        $r30 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r29 = newarray (java.lang.Object)[3];

        $r29[0] = $r2;

        $r29[1] = $r4;

        $r29[2] = $r6;

        virtualinvoke $r30.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("IntExpression %s=%s.plus(%s);%n", $r29);

        goto label14;

     label03:
        $r28 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r27 = newarray (java.lang.Object)[3];

        $r27[0] = $r2;

        $r27[1] = $r4;

        $r27[2] = $r6;

        virtualinvoke $r28.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("IntExpression %s=%s.minus(%s);%n", $r27);

        goto label14;

     label04:
        $r26 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r25 = newarray (java.lang.Object)[3];

        $r25[0] = $r2;

        $r25[1] = $r4;

        $r25[2] = $r6;

        virtualinvoke $r26.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("IntExpression %s=%s.multiply(%s);%n", $r25);

        goto label14;

     label05:
        $r24 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r23 = newarray (java.lang.Object)[3];

        $r23[0] = $r2;

        $r23[1] = $r4;

        $r23[2] = $r6;

        virtualinvoke $r24.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("IntExpression %s=%s.divide(%s);%n", $r23);

        goto label14;

     label06:
        $r22 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r21 = newarray (java.lang.Object)[3];

        $r21[0] = $r2;

        $r21[1] = $r4;

        $r21[2] = $r6;

        virtualinvoke $r22.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("IntExpression %s=%s.modulo(%s);%n", $r21);

        goto label14;

     label07:
        $r20 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r19 = newarray (java.lang.Object)[3];

        $r19[0] = $r2;

        $r19[1] = $r4;

        $r19[2] = $r6;

        virtualinvoke $r20.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("IntExpression %s=%s.and(%s);%n", $r19);

        goto label14;

     label08:
        $r18 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r17 = newarray (java.lang.Object)[3];

        $r17[0] = $r2;

        $r17[1] = $r4;

        $r17[2] = $r6;

        virtualinvoke $r18.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("IntExpression %s=%s.or(%s);%n", $r17);

        goto label14;

     label09:
        $r16 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r15 = newarray (java.lang.Object)[3];

        $r15[0] = $r2;

        $r15[1] = $r4;

        $r15[2] = $r6;

        virtualinvoke $r16.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("IntExpression %s=%s.xor(%s);%n", $r15);

        goto label14;

     label10:
        $r14 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r13 = newarray (java.lang.Object)[3];

        $r13[0] = $r2;

        $r13[1] = $r4;

        $r13[2] = $r6;

        virtualinvoke $r14.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("IntExpression %s=%s.sha(%s);%n", $r13);

        goto label14;

     label11:
        $r12 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r11 = newarray (java.lang.Object)[3];

        $r11[0] = $r2;

        $r11[1] = $r4;

        $r11[2] = $r6;

        virtualinvoke $r12.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("IntExpression %s=%s.shl(%s);%n", $r11);

        goto label14;

     label12:
        $r10 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r9 = newarray (java.lang.Object)[3];

        $r9[0] = $r2;

        $r9[1] = $r4;

        $r9[2] = $r6;

        virtualinvoke $r10.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("IntExpression %s=%s.shr(%s);%n", $r9);

        goto label14;

     label13:
        $r31 = new java.lang.RuntimeException;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown kodkod operator \"");

        $r34 = virtualinvoke r1.<kodkod.ast.BinaryIntExpression: kodkod.ast.operator.IntOperator op()>();

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" encountered");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r31.<java.lang.RuntimeException: void <init>(java.lang.String)>($r37);

        throw $r31;

     label14:
        return;
    }

    public void visit(kodkod.ast.UnaryIntExpression)
    {
        java.lang.Object[] $r7, $r9, $r11, $r13;
        int[] $r5;
        int $i0, $i1;
        java.lang.String $r2, $r4, $r21;
        kodkod.ast.UnaryIntExpression r1;
        edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava r0;
        java.io.PrintWriter $r8, $r10, $r12, $r14;
        kodkod.ast.IntExpression $r3;
        kodkod.ast.operator.IntOperator $r6, $r18;
        java.lang.RuntimeException $r15;
        java.lang.StringBuilder $r16, $r17, $r19, $r20;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava;

        r1 := @parameter0: kodkod.ast.UnaryIntExpression;

        $r2 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String makename(kodkod.ast.Node)>(r1);

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r1.<kodkod.ast.UnaryIntExpression: kodkod.ast.IntExpression intExpr()>();

        $r4 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r3);

        $r5 = <edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava$2: int[] $SwitchMap$kodkod$ast$operator$IntOperator>;

        $r6 = virtualinvoke r1.<kodkod.ast.UnaryIntExpression: kodkod.ast.operator.IntOperator op()>();

        $i0 = virtualinvoke $r6.<kodkod.ast.operator.IntOperator: int ordinal()>();

        $i1 = $r5[$i0];

        lookupswitch($i1)
        {
            case 2: goto label2;
            case 12: goto label3;
            case 13: goto label4;
            case 14: goto label5;
            default: goto label6;
        };

     label2:
        $r14 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r13 = newarray (java.lang.Object)[2];

        $r13[0] = $r2;

        $r13[1] = $r4;

        virtualinvoke $r14.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("IntExpression %s=%s.negate();%n", $r13);

        goto label7;

     label3:
        $r12 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = $r2;

        $r11[1] = $r4;

        virtualinvoke $r12.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("IntExpression %s=%s.not();%n", $r11);

        goto label7;

     label4:
        $r10 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = $r2;

        $r9[1] = $r4;

        virtualinvoke $r10.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("IntExpression %s=%s.abs();%n", $r9);

        goto label7;

     label5:
        $r8 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = $r2;

        $r7[1] = $r4;

        virtualinvoke $r8.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("IntExpression %s=%s.signum();%n", $r7);

        goto label7;

     label6:
        $r15 = new java.lang.RuntimeException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown kodkod operator \"");

        $r18 = virtualinvoke r1.<kodkod.ast.UnaryIntExpression: kodkod.ast.operator.IntOperator op()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" encountered");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>($r21);

        throw $r15;

     label7:
        return;
    }

    public void visit(kodkod.ast.UnaryExpression)
    {
        java.lang.Object[] $r7, $r9, $r11;
        int[] $r5;
        int $i0, $i1;
        java.lang.String $r2, $r4, $r19;
        edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava r0;
        java.io.PrintWriter $r8, $r10, $r12;
        kodkod.ast.Expression $r3;
        java.lang.RuntimeException $r13;
        kodkod.ast.UnaryExpression r1;
        kodkod.ast.operator.ExprOperator $r6, $r16;
        java.lang.StringBuilder $r14, $r15, $r17, $r18;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava;

        r1 := @parameter0: kodkod.ast.UnaryExpression;

        $r2 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String makename(kodkod.ast.Node)>(r1);

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r1.<kodkod.ast.UnaryExpression: kodkod.ast.Expression expression()>();

        $r4 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r3);

        $r5 = <edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava$2: int[] $SwitchMap$kodkod$ast$operator$ExprOperator>;

        $r6 = virtualinvoke r1.<kodkod.ast.UnaryExpression: kodkod.ast.operator.ExprOperator op()>();

        $i0 = virtualinvoke $r6.<kodkod.ast.operator.ExprOperator: int ordinal()>();

        $i1 = $r5[$i0];

        tableswitch($i1)
        {
            case 7: goto label2;
            case 8: goto label3;
            case 9: goto label4;
            default: goto label5;
        };

     label2:
        $r12 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = $r2;

        $r11[1] = $r4;

        virtualinvoke $r12.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Expression %s=%s.closure();%n", $r11);

        goto label6;

     label3:
        $r10 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = $r2;

        $r9[1] = $r4;

        virtualinvoke $r10.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Expression %s=%s.reflexiveClosure();%n", $r9);

        goto label6;

     label4:
        $r8 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = $r2;

        $r7[1] = $r4;

        virtualinvoke $r8.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Expression %s=%s.transpose();%n", $r7);

        goto label6;

     label5:
        $r13 = new java.lang.RuntimeException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown kodkod operator \"");

        $r16 = virtualinvoke r1.<kodkod.ast.UnaryExpression: kodkod.ast.operator.ExprOperator op()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" encountered");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>($r19);

        throw $r13;

     label6:
        return;
    }

    public void visit(kodkod.ast.IfExpression)
    {
        java.io.PrintWriter $r10;
        java.lang.Object[] $r9;
        kodkod.ast.Formula $r3;
        kodkod.ast.Expression $r5, $r7;
        java.lang.String $r2, $r4, $r6, $r8;
        kodkod.ast.IfExpression r1;
        edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava r0;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava;

        r1 := @parameter0: kodkod.ast.IfExpression;

        $r2 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String makename(kodkod.ast.Node)>(r1);

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r1.<kodkod.ast.IfExpression: kodkod.ast.Formula condition()>();

        $r4 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r3);

        $r5 = virtualinvoke r1.<kodkod.ast.IfExpression: kodkod.ast.Expression thenExpr()>();

        $r6 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r5);

        $r7 = virtualinvoke r1.<kodkod.ast.IfExpression: kodkod.ast.Expression elseExpr()>();

        $r8 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r7);

        $r10 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r9 = newarray (java.lang.Object)[4];

        $r9[0] = $r2;

        $r9[1] = $r4;

        $r9[2] = $r6;

        $r9[3] = $r8;

        virtualinvoke $r10.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Expression %s=%s.thenElse(%s,%s);%n", $r9);

        return;
    }

    public void visit(kodkod.ast.IfIntExpression)
    {
        java.io.PrintWriter $r10;
        kodkod.ast.IntExpression $r5, $r7;
        java.lang.Object[] $r9;
        kodkod.ast.Formula $r3;
        kodkod.ast.IfIntExpression r1;
        java.lang.String $r2, $r4, $r6, $r8;
        edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava r0;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava;

        r1 := @parameter0: kodkod.ast.IfIntExpression;

        $r2 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String makename(kodkod.ast.Node)>(r1);

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r1.<kodkod.ast.IfIntExpression: kodkod.ast.Formula condition()>();

        $r4 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r3);

        $r5 = virtualinvoke r1.<kodkod.ast.IfIntExpression: kodkod.ast.IntExpression thenExpr()>();

        $r6 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r5);

        $r7 = virtualinvoke r1.<kodkod.ast.IfIntExpression: kodkod.ast.IntExpression elseExpr()>();

        $r8 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r7);

        $r10 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r9 = newarray (java.lang.Object)[4];

        $r9[0] = $r2;

        $r9[1] = $r4;

        $r9[2] = $r6;

        $r9[3] = $r8;

        virtualinvoke $r10.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("IntExpression %s=%s.thenElse(%s,%s);%n", $r9);

        return;
    }

    public void visit(kodkod.ast.NotFormula)
    {
        java.io.PrintWriter $r6;
        java.lang.Object[] $r5;
        kodkod.ast.NotFormula r1;
        kodkod.ast.Formula $r3;
        java.lang.String $r2, $r4;
        edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava r0;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava;

        r1 := @parameter0: kodkod.ast.NotFormula;

        $r2 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String makename(kodkod.ast.Node)>(r1);

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r1.<kodkod.ast.NotFormula: kodkod.ast.Formula formula()>();

        $r4 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r3);

        $r6 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = $r2;

        $r5[1] = $r4;

        virtualinvoke $r6.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Formula %s=%s.not();%n", $r5);

        return;
    }

    public void visit(kodkod.ast.IntToExprCast)
    {
        java.lang.Object[] $r7, $r9;
        int[] $r5;
        kodkod.ast.operator.IntCastOperator $r6, $r14;
        int $i0, $i1;
        java.lang.String $r2, $r4, $r17;
        edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava r0;
        java.io.PrintWriter $r8, $r10;
        kodkod.ast.IntExpression $r3;
        java.lang.RuntimeException $r11;
        kodkod.ast.IntToExprCast r1;
        java.lang.StringBuilder $r12, $r13, $r15, $r16;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava;

        r1 := @parameter0: kodkod.ast.IntToExprCast;

        $r2 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String makename(kodkod.ast.Node)>(r1);

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r1.<kodkod.ast.IntToExprCast: kodkod.ast.IntExpression intExpr()>();

        $r4 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r3);

        $r5 = <edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava$2: int[] $SwitchMap$kodkod$ast$operator$IntCastOperator>;

        $r6 = virtualinvoke r1.<kodkod.ast.IntToExprCast: kodkod.ast.operator.IntCastOperator op()>();

        $i0 = virtualinvoke $r6.<kodkod.ast.operator.IntCastOperator: int ordinal()>();

        $i1 = $r5[$i0];

        lookupswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label2:
        $r10 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = $r2;

        $r9[1] = $r4;

        virtualinvoke $r10.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Expression %s=%s.toExpression();%n", $r9);

        goto label5;

     label3:
        $r8 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = $r2;

        $r7[1] = $r4;

        virtualinvoke $r8.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Expression %s=%s.toBitset();%n", $r7);

        goto label5;

     label4:
        $r11 = new java.lang.RuntimeException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown kodkod operator \"");

        $r14 = virtualinvoke r1.<kodkod.ast.IntToExprCast: kodkod.ast.operator.IntCastOperator op()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" encountered");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>($r17);

        throw $r11;

     label5:
        return;
    }

    public void visit(kodkod.ast.ExprToIntCast)
    {
        java.lang.Object[] $r7, $r9;
        kodkod.ast.operator.ExprCastOperator $r6, $r14;
        int[] $r5;
        kodkod.ast.ExprToIntCast r1;
        int $i0, $i1;
        java.lang.String $r2, $r4, $r17;
        edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava r0;
        java.io.PrintWriter $r8, $r10;
        kodkod.ast.Expression $r3;
        java.lang.RuntimeException $r11;
        java.lang.StringBuilder $r12, $r13, $r15, $r16;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava;

        r1 := @parameter0: kodkod.ast.ExprToIntCast;

        $r2 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String makename(kodkod.ast.Node)>(r1);

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r1.<kodkod.ast.ExprToIntCast: kodkod.ast.Expression expression()>();

        $r4 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r3);

        $r5 = <edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava$2: int[] $SwitchMap$kodkod$ast$operator$ExprCastOperator>;

        $r6 = virtualinvoke r1.<kodkod.ast.ExprToIntCast: kodkod.ast.operator.ExprCastOperator op()>();

        $i0 = virtualinvoke $r6.<kodkod.ast.operator.ExprCastOperator: int ordinal()>();

        $i1 = $r5[$i0];

        lookupswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label2:
        $r10 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = $r2;

        $r9[1] = $r4;

        virtualinvoke $r10.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("IntExpression %s=%s.count();%n", $r9);

        goto label5;

     label3:
        $r8 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = $r2;

        $r7[1] = $r4;

        virtualinvoke $r8.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("IntExpression %s=%s.sum();%n", $r7);

        goto label5;

     label4:
        $r11 = new java.lang.RuntimeException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown kodkod operator \"");

        $r14 = virtualinvoke r1.<kodkod.ast.ExprToIntCast: kodkod.ast.operator.ExprCastOperator op()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" encountered");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>($r17);

        throw $r11;

     label5:
        return;
    }

    public void visit(kodkod.ast.IntConstant)
    {
        java.io.PrintWriter $r4;
        java.lang.Object[] $r3;
        kodkod.ast.IntConstant r1;
        int $i0;
        java.lang.String $r2;
        java.lang.Integer $r5;
        edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava r0;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava;

        r1 := @parameter0: kodkod.ast.IntConstant;

        $r2 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String makename(kodkod.ast.Node)>(r1);

        if $r2 != null goto label1;

        return;

     label1:
        $r4 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = $r2;

        $i0 = virtualinvoke r1.<kodkod.ast.IntConstant: int value()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3[1] = $r5;

        virtualinvoke $r4.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("IntExpression %s=IntConstant.constant(%d);%n", $r3);

        return;
    }

    public void visit(kodkod.ast.ConstantFormula)
    {
        java.util.IdentityHashMap $r2, $r3;
        kodkod.ast.ConstantFormula r1;
        java.lang.String $r4;
        edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava r0;
        boolean $z0, $z1;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava;

        r1 := @parameter0: kodkod.ast.ConstantFormula;

        $r2 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.util.IdentityHashMap map>;

        $z0 = virtualinvoke $r2.<java.util.IdentityHashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = virtualinvoke r1.<kodkod.ast.ConstantFormula: boolean booleanValue()>();

        if $z1 == 0 goto label2;

        $r4 = "Formula.TRUE";

        goto label3;

     label2:
        $r4 = "Formula.FALSE";

     label3:
        $r3 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.util.IdentityHashMap map>;

        virtualinvoke $r3.<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

        return;
    }

    public void visit(kodkod.ast.ConstantExpression)
    {
        kodkod.ast.ConstantExpression r1;
        java.lang.String $r12, r13;
        edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava r0;
        boolean $z0;
        java.util.IdentityHashMap $r2, $r14;
        kodkod.ast.Expression $r3, $r4, $r5, $r6;
        java.lang.RuntimeException $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava;

        r1 := @parameter0: kodkod.ast.ConstantExpression;

        $r2 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.util.IdentityHashMap map>;

        $z0 = virtualinvoke $r2.<java.util.IdentityHashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = <kodkod.ast.Expression: kodkod.ast.Expression NONE>;

        if r1 != $r3 goto label2;

        r13 = "Expression.NONE";

        goto label6;

     label2:
        $r4 = <kodkod.ast.Expression: kodkod.ast.Expression UNIV>;

        if r1 != $r4 goto label3;

        r13 = "Expression.UNIV";

        goto label6;

     label3:
        $r5 = <kodkod.ast.Expression: kodkod.ast.Expression IDEN>;

        if r1 != $r5 goto label4;

        r13 = "Expression.IDEN";

        goto label6;

     label4:
        $r6 = <kodkod.ast.Expression: kodkod.ast.Expression INTS>;

        if r1 != $r6 goto label5;

        r13 = "Expression.INTS";

        goto label6;

     label5:
        $r7 = new java.lang.RuntimeException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown kodkod ConstantExpression \"");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" encountered");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label6:
        $r14 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.util.IdentityHashMap map>;

        virtualinvoke $r14.<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r13);

        return;
    }

    public void visit(kodkod.ast.Variable)
    {
        java.io.PrintWriter $r4, $r8;
        java.lang.Object[] $r3, $r7;
        java.lang.Integer $r6;
        kodkod.ast.Variable r1;
        int $i0;
        java.lang.String $r2, $r5, $r9;
        edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava r0;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava;

        r1 := @parameter0: kodkod.ast.Variable;

        $r2 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String makename(kodkod.ast.Node)>(r1);

        if $r2 != null goto label1;

        return;

     label1:
        $i0 = virtualinvoke r1.<kodkod.ast.Variable: int arity()>();

        if $i0 != 1 goto label2;

        $r8 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = $r2;

        $r9 = virtualinvoke r1.<kodkod.ast.Variable: java.lang.String name()>();

        $r7[1] = $r9;

        virtualinvoke $r8.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Variable %s=Variable.unary(\"%s\");%n", $r7);

        goto label3;

     label2:
        $r4 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r3 = newarray (java.lang.Object)[3];

        $r3[0] = $r2;

        $r5 = virtualinvoke r1.<kodkod.ast.Variable: java.lang.String name()>();

        $r3[1] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r3[2] = $r6;

        virtualinvoke $r4.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Variable %s=Variable.nary(\"%s\",%d);%n", $r3);

     label3:
        return;
    }

    public void visit(kodkod.ast.Comprehension)
    {
        java.io.PrintWriter $r8;
        java.lang.Object[] $r7;
        kodkod.ast.Formula $r5;
        kodkod.ast.Decls $r3;
        java.lang.String $r2, $r4, $r6;
        kodkod.ast.Comprehension r1;
        edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava r0;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava;

        r1 := @parameter0: kodkod.ast.Comprehension;

        $r2 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String makename(kodkod.ast.Node)>(r1);

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r1.<kodkod.ast.Comprehension: kodkod.ast.Decls decls()>();

        $r4 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r3);

        $r5 = virtualinvoke r1.<kodkod.ast.Comprehension: kodkod.ast.Formula formula()>();

        $r6 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r5);

        $r8 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r7 = newarray (java.lang.Object)[3];

        $r7[0] = $r2;

        $r7[1] = $r6;

        $r7[2] = $r4;

        virtualinvoke $r8.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Expression %s=%s.comprehension(%s);%n", $r7);

        return;
    }

    public void visit(kodkod.ast.QuantifiedFormula)
    {
        java.lang.Object[] $r9, $r11;
        kodkod.ast.QuantifiedFormula r1;
        int[] $r7;
        int $i0, $i1;
        java.lang.String $r2, $r4, $r6, $r19;
        edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava r0;
        java.io.PrintWriter $r10, $r12;
        kodkod.ast.Formula $r5;
        kodkod.ast.Decls $r3;
        java.lang.RuntimeException $r13;
        java.lang.StringBuilder $r14, $r15, $r17, $r18;
        kodkod.ast.operator.Quantifier $r8, $r16;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava;

        r1 := @parameter0: kodkod.ast.QuantifiedFormula;

        $r2 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String makename(kodkod.ast.Node)>(r1);

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r1.<kodkod.ast.QuantifiedFormula: kodkod.ast.Decls decls()>();

        $r4 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r3);

        $r5 = virtualinvoke r1.<kodkod.ast.QuantifiedFormula: kodkod.ast.Formula formula()>();

        $r6 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r5);

        $r7 = <edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava$2: int[] $SwitchMap$kodkod$ast$operator$Quantifier>;

        $r8 = virtualinvoke r1.<kodkod.ast.QuantifiedFormula: kodkod.ast.operator.Quantifier quantifier()>();

        $i0 = virtualinvoke $r8.<kodkod.ast.operator.Quantifier: int ordinal()>();

        $i1 = $r7[$i0];

        lookupswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label2:
        $r12 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r11 = newarray (java.lang.Object)[3];

        $r11[0] = $r2;

        $r11[1] = $r6;

        $r11[2] = $r4;

        virtualinvoke $r12.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Formula %s=%s.forAll(%s);%n", $r11);

        goto label5;

     label3:
        $r10 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r9 = newarray (java.lang.Object)[3];

        $r9[0] = $r2;

        $r9[1] = $r6;

        $r9[2] = $r4;

        virtualinvoke $r10.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Formula %s=%s.forSome(%s);%n", $r9);

        goto label5;

     label4:
        $r13 = new java.lang.RuntimeException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown kodkod quantifier \"");

        $r16 = virtualinvoke r1.<kodkod.ast.QuantifiedFormula: kodkod.ast.operator.Quantifier quantifier()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" encountered");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>($r19);

        throw $r13;

     label5:
        return;
    }

    public void visit(kodkod.ast.SumExpression)
    {
        java.io.PrintWriter $r8;
        kodkod.ast.IntExpression $r5;
        java.lang.Object[] $r7;
        kodkod.ast.Decls $r3;
        kodkod.ast.SumExpression r1;
        java.lang.String $r2, $r4, $r6;
        edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava r0;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava;

        r1 := @parameter0: kodkod.ast.SumExpression;

        $r2 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String makename(kodkod.ast.Node)>(r1);

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r1.<kodkod.ast.SumExpression: kodkod.ast.Decls decls()>();

        $r4 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r3);

        $r5 = virtualinvoke r1.<kodkod.ast.SumExpression: kodkod.ast.IntExpression intExpr()>();

        $r6 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r5);

        $r8 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r7 = newarray (java.lang.Object)[3];

        $r7[0] = $r2;

        $r7[1] = $r6;

        $r7[2] = $r4;

        virtualinvoke $r8.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("IntExpression %s=%s.sum(%s);%n", $r7);

        return;
    }

    public void visit(kodkod.ast.MultiplicityFormula)
    {
        kodkod.ast.MultiplicityFormula r1;
        kodkod.ast.operator.Multiplicity $r6, $r18;
        java.lang.Object[] $r7, $r9, $r11, $r13;
        int[] $r5;
        int $i0, $i1;
        java.lang.String $r2, $r4, $r21;
        edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava r0;
        java.io.PrintWriter $r8, $r10, $r12, $r14;
        kodkod.ast.Expression $r3;
        java.lang.RuntimeException $r15;
        java.lang.StringBuilder $r16, $r17, $r19, $r20;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava;

        r1 := @parameter0: kodkod.ast.MultiplicityFormula;

        $r2 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String makename(kodkod.ast.Node)>(r1);

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r1.<kodkod.ast.MultiplicityFormula: kodkod.ast.Expression expression()>();

        $r4 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r3);

        $r5 = <edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava$2: int[] $SwitchMap$kodkod$ast$operator$Multiplicity>;

        $r6 = virtualinvoke r1.<kodkod.ast.MultiplicityFormula: kodkod.ast.operator.Multiplicity multiplicity()>();

        $i0 = virtualinvoke $r6.<kodkod.ast.operator.Multiplicity: int ordinal()>();

        $i1 = $r5[$i0];

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            default: goto label6;
        };

     label2:
        $r14 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r13 = newarray (java.lang.Object)[2];

        $r13[0] = $r2;

        $r13[1] = $r4;

        virtualinvoke $r14.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Formula %s=%s.lone();%n", $r13);

        goto label7;

     label3:
        $r12 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = $r2;

        $r11[1] = $r4;

        virtualinvoke $r12.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Formula %s=%s.one();%n", $r11);

        goto label7;

     label4:
        $r10 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = $r2;

        $r9[1] = $r4;

        virtualinvoke $r10.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Formula %s=%s.some();%n", $r9);

        goto label7;

     label5:
        $r8 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = $r2;

        $r7[1] = $r4;

        virtualinvoke $r8.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Formula %s=%s.no();%n", $r7);

        goto label7;

     label6:
        $r15 = new java.lang.RuntimeException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown kodkod multiplicity \"");

        $r18 = virtualinvoke r1.<kodkod.ast.MultiplicityFormula: kodkod.ast.operator.Multiplicity multiplicity()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" encountered");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>($r21);

        throw $r15;

     label7:
        return;
    }

    public void visit(kodkod.ast.Decl)
    {
        kodkod.ast.operator.Multiplicity $r8, $r20;
        java.lang.Object[] $r9, $r11, $r13, $r15;
        int[] $r7;
        int $i0, $i1;
        java.lang.String $r2, $r4, $r6, $r23;
        edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava r0;
        java.io.PrintWriter $r10, $r12, $r14, $r16;
        kodkod.ast.Decl r1;
        kodkod.ast.Expression $r5;
        java.lang.RuntimeException $r17;
        kodkod.ast.Variable $r3;
        java.lang.StringBuilder $r18, $r19, $r21, $r22;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava;

        r1 := @parameter0: kodkod.ast.Decl;

        $r2 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String makename(kodkod.ast.Node)>(r1);

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r1.<kodkod.ast.Decl: kodkod.ast.Variable variable()>();

        $r4 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r3);

        $r5 = virtualinvoke r1.<kodkod.ast.Decl: kodkod.ast.Expression expression()>();

        $r6 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r5);

        $r7 = <edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava$2: int[] $SwitchMap$kodkod$ast$operator$Multiplicity>;

        $r8 = virtualinvoke r1.<kodkod.ast.Decl: kodkod.ast.operator.Multiplicity multiplicity()>();

        $i0 = virtualinvoke $r8.<kodkod.ast.operator.Multiplicity: int ordinal()>();

        $i1 = $r7[$i0];

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label6;
            case 5: goto label5;
            default: goto label6;
        };

     label2:
        $r16 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r15 = newarray (java.lang.Object)[3];

        $r15[0] = $r2;

        $r15[1] = $r4;

        $r15[2] = $r6;

        virtualinvoke $r16.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Decls %s=%s.loneOf(%s);%n", $r15);

        goto label7;

     label3:
        $r14 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r13 = newarray (java.lang.Object)[3];

        $r13[0] = $r2;

        $r13[1] = $r4;

        $r13[2] = $r6;

        virtualinvoke $r14.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Decls %s=%s.oneOf(%s);%n", $r13);

        goto label7;

     label4:
        $r12 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r11 = newarray (java.lang.Object)[3];

        $r11[0] = $r2;

        $r11[1] = $r4;

        $r11[2] = $r6;

        virtualinvoke $r12.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Decls %s=%s.someOf(%s);%n", $r11);

        goto label7;

     label5:
        $r10 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r9 = newarray (java.lang.Object)[3];

        $r9[0] = $r2;

        $r9[1] = $r4;

        $r9[2] = $r6;

        virtualinvoke $r10.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Decls %s=%s.setOf(%s);%n", $r9);

        goto label7;

     label6:
        $r17 = new java.lang.RuntimeException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown kodkod multiplicity \"");

        $r20 = virtualinvoke r1.<kodkod.ast.Decl: kodkod.ast.operator.Multiplicity multiplicity()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" encountered");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String)>($r23);

        throw $r17;

     label7:
        return;
    }

    public void visit(kodkod.ast.Decls)
    {
        java.lang.Object[] $r4, $r7, $r14, $r16;
        java.lang.String $r2, r13;
        edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava r0;
        boolean $z0, $z1, z2;
        java.io.PrintWriter $r5, $r8, $r15, $r17;
        java.util.IdentityHashMap $r11;
        java.util.Iterator $r3, $r6;
        kodkod.ast.Decl r10, r19;
        kodkod.ast.Decls r1;
        java.lang.Object $r9, $r12, $r18;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava;

        r1 := @parameter0: kodkod.ast.Decls;

        $r2 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String makename(kodkod.ast.Node)>(r1);

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r1.<kodkod.ast.Decls: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r18 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r19 = (kodkod.ast.Decl) $r18;

        virtualinvoke r19.<kodkod.ast.Decl: void accept(kodkod.ast.visitor.VoidVisitor)>(r0);

        goto label2;

     label3:
        z2 = 1;

        $r5 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r2;

        virtualinvoke $r5.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Decls %s=", $r4);

        $r6 = virtualinvoke r1.<kodkod.ast.Decls: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r9 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r10 = (kodkod.ast.Decl) $r9;

        $r11 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.util.IdentityHashMap map>;

        $r12 = virtualinvoke $r11.<java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>(r10);

        r13 = (java.lang.String) $r12;

        if z2 == 0 goto label5;

        $r17 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r16 = newarray (java.lang.Object)[1];

        $r16[0] = r13;

        virtualinvoke $r17.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("%s", $r16);

        z2 = 0;

        goto label6;

     label5:
        $r15 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r14 = newarray (java.lang.Object)[1];

        $r14[0] = r13;

        virtualinvoke $r15.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>(".and(%s)", $r14);

     label6:
        goto label4;

     label7:
        $r8 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r7 = newarray (java.lang.Object)[0];

        virtualinvoke $r8.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>(";%n", $r7);

        return;
    }

    public void visit(kodkod.ast.RelationPredicate)
    {
        kodkod.ast.operator.Multiplicity $r15;
        int[] $r5, $r14;
        kodkod.ast.RelationPredicate$Name $r6;
        java.io.PrintWriter $r8, $r17, $r19, $r28;
        kodkod.ast.Expression $r9, $r11;
        kodkod.ast.RelationPredicate$TotalOrdering r35;
        java.lang.StringBuilder $r30, $r31, $r32, $r33;
        kodkod.ast.Relation $r3, $r21, $r23, $r25;
        java.lang.Object[] $r7, $r16, $r18, $r27;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2, $r4, $r10, $r12, $r22, $r24, $r26, $r34;
        edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava r0;
        kodkod.ast.RelationPredicate$Function $r13, r36;
        java.lang.RuntimeException $r20, $r29;
        kodkod.ast.RelationPredicate r1;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava;

        r1 := @parameter0: kodkod.ast.RelationPredicate;

        $r2 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String makename(kodkod.ast.Node)>(r1);

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = virtualinvoke r1.<kodkod.ast.RelationPredicate: kodkod.ast.Relation relation()>();

        $r4 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r3);

        $r5 = <edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava$2: int[] $SwitchMap$kodkod$ast$RelationPredicate$Name>;

        $r6 = virtualinvoke r1.<kodkod.ast.RelationPredicate: kodkod.ast.RelationPredicate$Name name()>();

        $i0 = virtualinvoke $r6.<kodkod.ast.RelationPredicate$Name: int ordinal()>();

        $i1 = $r5[$i0];

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label7;
            default: goto label8;
        };

     label2:
        r35 = (kodkod.ast.RelationPredicate$TotalOrdering) r1;

        $r21 = virtualinvoke r35.<kodkod.ast.RelationPredicate$TotalOrdering: kodkod.ast.Relation ordered()>();

        $r22 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r21);

        $r23 = virtualinvoke r35.<kodkod.ast.RelationPredicate$TotalOrdering: kodkod.ast.Relation first()>();

        $r24 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r23);

        $r25 = virtualinvoke r35.<kodkod.ast.RelationPredicate$TotalOrdering: kodkod.ast.Relation last()>();

        $r26 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r25);

        $r28 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r27 = newarray (java.lang.Object)[5];

        $r27[0] = $r2;

        $r27[1] = $r4;

        $r27[2] = $r22;

        $r27[3] = $r24;

        $r27[4] = $r26;

        virtualinvoke $r28.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Formula %s=%s.totalOrder(%s,%s,%s);%n", $r27);

        return;

     label3:
        r36 = (kodkod.ast.RelationPredicate$Function) r1;

        $r9 = virtualinvoke r36.<kodkod.ast.RelationPredicate$Function: kodkod.ast.Expression domain()>();

        $r10 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r9);

        $r11 = virtualinvoke r36.<kodkod.ast.RelationPredicate$Function: kodkod.ast.Expression range()>();

        $r12 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r11);

        $r14 = <edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava$2: int[] $SwitchMap$kodkod$ast$operator$Multiplicity>;

        $r13 = (kodkod.ast.RelationPredicate$Function) r1;

        $r15 = virtualinvoke $r13.<kodkod.ast.RelationPredicate$Function: kodkod.ast.operator.Multiplicity targetMult()>();

        $i2 = virtualinvoke $r15.<kodkod.ast.operator.Multiplicity: int ordinal()>();

        $i3 = $r14[$i2];

        lookupswitch($i3)
        {
            case 1: goto label5;
            case 2: goto label4;
            default: goto label6;
        };

     label4:
        $r17 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r16 = newarray (java.lang.Object)[4];

        $r16[0] = $r2;

        $r16[1] = $r4;

        $r16[2] = $r10;

        $r16[3] = $r12;

        virtualinvoke $r17.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Formula %s=%s.function(%s,%s);%n", $r16);

        return;

     label5:
        $r19 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r18 = newarray (java.lang.Object)[4];

        $r18[0] = $r2;

        $r18[1] = $r4;

        $r18[2] = $r10;

        $r18[3] = $r12;

        virtualinvoke $r19.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Formula %s=%s.partialFunction(%s,%s);%n", $r18);

        return;

     label6:
        $r20 = new java.lang.RuntimeException;

        specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String)>("Illegal multiplicity encountered in RelationPredicate.Function");

        throw $r20;

     label7:
        $r8 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = $r2;

        $r7[1] = $r4;

        virtualinvoke $r8.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Formula %s=%s.acyclic();%n", $r7);

        return;

     label8:
        $r29 = new java.lang.RuntimeException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown RelationPredicate \"");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" encountered");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<java.lang.RuntimeException: void <init>(java.lang.String)>($r34);

        throw $r29;
    }

    public void visit(kodkod.ast.NaryExpression)
    {
        int[] $r6;
        java.io.PrintWriter $r5, $r8, $r10, $r13, $r14, $r15, $r16;
        kodkod.ast.Expression $r24;
        kodkod.ast.operator.ExprOperator $r7, $r20;
        kodkod.ast.NaryExpression r1;
        java.lang.StringBuilder $r18, $r19, $r21, $r22;
        java.lang.Object[] $r4, $r9, $r11;
        java.lang.String[] r3;
        int $i0, $i1, $i2, $i3, i4, i5, $i6;
        java.lang.String $r2, $r12, $r23, $r25;
        edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava r0;
        java.lang.RuntimeException $r17;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava;

        r1 := @parameter0: kodkod.ast.NaryExpression;

        $r2 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String makename(kodkod.ast.Node)>(r1);

        if $r2 != null goto label01;

        return;

     label01:
        $i0 = virtualinvoke r1.<kodkod.ast.NaryExpression: int size()>();

        r3 = newarray (java.lang.String)[$i0];

        i4 = 0;

     label02:
        $i1 = lengthof r3;

        if i4 >= $i1 goto label03;

        $r24 = virtualinvoke r1.<kodkod.ast.NaryExpression: kodkod.ast.Expression child(int)>(i4);

        $r25 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r24);

        r3[i4] = $r25;

        i4 = i4 + 1;

        goto label02;

     label03:
        $r5 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r2;

        virtualinvoke $r5.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Expression %s=Expression.compose(ExprOperator.", $r4);

        $r6 = <edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava$2: int[] $SwitchMap$kodkod$ast$operator$ExprOperator>;

        $r7 = virtualinvoke r1.<kodkod.ast.NaryExpression: kodkod.ast.operator.ExprOperator op()>();

        $i2 = virtualinvoke $r7.<kodkod.ast.operator.ExprOperator: int ordinal()>();

        $i3 = $r6[$i2];

        tableswitch($i3)
        {
            case 2: goto label04;
            case 3: goto label08;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            default: goto label08;
        };

     label04:
        $r16 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        virtualinvoke $r16.<java.io.PrintWriter: void print(java.lang.String)>("INTERSECTION");

        goto label09;

     label05:
        $r15 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        virtualinvoke $r15.<java.io.PrintWriter: void print(java.lang.String)>("OVERRIDE");

        goto label09;

     label06:
        $r14 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        virtualinvoke $r14.<java.io.PrintWriter: void print(java.lang.String)>("PRODUCT");

        goto label09;

     label07:
        $r8 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        virtualinvoke $r8.<java.io.PrintWriter: void print(java.lang.String)>("UNION");

        goto label09;

     label08:
        $r17 = new java.lang.RuntimeException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown kodkod operator \"");

        $r20 = virtualinvoke r1.<kodkod.ast.NaryExpression: kodkod.ast.operator.ExprOperator op()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" encountered");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String)>($r23);

        throw $r17;

     label09:
        i5 = 0;

     label10:
        $i6 = lengthof r3;

        if i5 >= $i6 goto label11;

        $r13 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r11 = newarray (java.lang.Object)[1];

        $r12 = r3[i5];

        $r11[0] = $r12;

        virtualinvoke $r13.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>(", %s", $r11);

        i5 = i5 + 1;

        goto label10;

     label11:
        $r10 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r9 = newarray (java.lang.Object)[0];

        virtualinvoke $r10.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>(");%n", $r9);

        return;
    }

    public void visit(kodkod.ast.NaryIntExpression)
    {
        int[] $r6;
        java.io.PrintWriter $r5, $r8, $r10, $r13, $r14, $r15, $r16;
        kodkod.ast.NaryIntExpression r1;
        kodkod.ast.operator.IntOperator $r7, $r20;
        java.lang.StringBuilder $r18, $r19, $r21, $r22;
        java.lang.Object[] $r4, $r9, $r11;
        java.lang.String[] r3;
        int $i0, $i1, $i2, $i3, i4, i5, $i6;
        java.lang.String $r2, $r12, $r23, $r25;
        edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava r0;
        kodkod.ast.IntExpression $r24;
        java.lang.RuntimeException $r17;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava;

        r1 := @parameter0: kodkod.ast.NaryIntExpression;

        $r2 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String makename(kodkod.ast.Node)>(r1);

        if $r2 != null goto label01;

        return;

     label01:
        $i0 = virtualinvoke r1.<kodkod.ast.NaryIntExpression: int size()>();

        r3 = newarray (java.lang.String)[$i0];

        i4 = 0;

     label02:
        $i1 = lengthof r3;

        if i4 >= $i1 goto label03;

        $r24 = virtualinvoke r1.<kodkod.ast.NaryIntExpression: kodkod.ast.IntExpression child(int)>(i4);

        $r25 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r24);

        r3[i4] = $r25;

        i4 = i4 + 1;

        goto label02;

     label03:
        $r5 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r2;

        virtualinvoke $r5.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("IntExpression %s=IntExpression.compose(IntOperator.", $r4);

        $r6 = <edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava$2: int[] $SwitchMap$kodkod$ast$operator$IntOperator>;

        $r7 = virtualinvoke r1.<kodkod.ast.NaryIntExpression: kodkod.ast.operator.IntOperator op()>();

        $i2 = virtualinvoke $r7.<kodkod.ast.operator.IntOperator: int ordinal()>();

        $i3 = $r6[$i2];

        tableswitch($i3)
        {
            case 1: goto label04;
            case 2: goto label08;
            case 3: goto label05;
            case 4: goto label08;
            case 5: goto label08;
            case 6: goto label06;
            case 7: goto label07;
            default: goto label08;
        };

     label04:
        $r16 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        virtualinvoke $r16.<java.io.PrintWriter: void print(java.lang.String)>("PLUS");

        goto label09;

     label05:
        $r15 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        virtualinvoke $r15.<java.io.PrintWriter: void print(java.lang.String)>("MULTIPLY");

        goto label09;

     label06:
        $r14 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        virtualinvoke $r14.<java.io.PrintWriter: void print(java.lang.String)>("AND");

        goto label09;

     label07:
        $r8 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        virtualinvoke $r8.<java.io.PrintWriter: void print(java.lang.String)>("OR");

        goto label09;

     label08:
        $r17 = new java.lang.RuntimeException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown kodkod operator \"");

        $r20 = virtualinvoke r1.<kodkod.ast.NaryIntExpression: kodkod.ast.operator.IntOperator op()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" encountered");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String)>($r23);

        throw $r17;

     label09:
        i5 = 0;

     label10:
        $i6 = lengthof r3;

        if i5 >= $i6 goto label11;

        $r13 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r11 = newarray (java.lang.Object)[1];

        $r12 = r3[i5];

        $r11[0] = $r12;

        virtualinvoke $r13.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>(", %s", $r11);

        i5 = i5 + 1;

        goto label10;

     label11:
        $r10 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r9 = newarray (java.lang.Object)[0];

        virtualinvoke $r10.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>(");%n", $r9);

        return;
    }

    public void visit(kodkod.ast.NaryFormula)
    {
        java.lang.Object[] $r4, $r9, $r11;
        java.lang.String[] r3;
        int[] $r6;
        kodkod.ast.operator.FormulaOperator $r7, $r18;
        int $i0, $i1, $i2, $i3, i4, i5, $i6;
        kodkod.ast.NaryFormula r1;
        java.lang.String $r2, $r12, $r21, $r23;
        edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava r0;
        java.io.PrintWriter $r5, $r8, $r10, $r13, $r14;
        kodkod.ast.Formula $r22;
        java.lang.RuntimeException $r15;
        java.lang.StringBuilder $r16, $r17, $r19, $r20;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava;

        r1 := @parameter0: kodkod.ast.NaryFormula;

        $r2 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String makename(kodkod.ast.Node)>(r1);

        if $r2 != null goto label1;

        return;

     label1:
        $i0 = virtualinvoke r1.<kodkod.ast.NaryFormula: int size()>();

        r3 = newarray (java.lang.String)[$i0];

        i4 = 0;

     label2:
        $i1 = lengthof r3;

        if i4 >= $i1 goto label3;

        $r22 = virtualinvoke r1.<kodkod.ast.NaryFormula: kodkod.ast.Formula child(int)>(i4);

        $r23 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.lang.String make(kodkod.ast.Node)>($r22);

        r3[i4] = $r23;

        i4 = i4 + 1;

        goto label2;

     label3:
        $r5 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r2;

        virtualinvoke $r5.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>("Formula %s=Formula.compose(FormulaOperator.", $r4);

        $r6 = <edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava$2: int[] $SwitchMap$kodkod$ast$operator$FormulaOperator>;

        $r7 = virtualinvoke r1.<kodkod.ast.NaryFormula: kodkod.ast.operator.FormulaOperator op()>();

        $i2 = virtualinvoke $r7.<kodkod.ast.operator.FormulaOperator: int ordinal()>();

        $i3 = $r6[$i2];

        lookupswitch($i3)
        {
            case 1: goto label4;
            case 2: goto label5;
            default: goto label6;
        };

     label4:
        $r14 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        virtualinvoke $r14.<java.io.PrintWriter: void print(java.lang.String)>("AND");

        goto label7;

     label5:
        $r8 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        virtualinvoke $r8.<java.io.PrintWriter: void print(java.lang.String)>("OR");

        goto label7;

     label6:
        $r15 = new java.lang.RuntimeException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown kodkod operator \"");

        $r18 = virtualinvoke r1.<kodkod.ast.NaryFormula: kodkod.ast.operator.FormulaOperator op()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" encountered");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>($r21);

        throw $r15;

     label7:
        i5 = 0;

     label8:
        $i6 = lengthof r3;

        if i5 >= $i6 goto label9;

        $r13 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r11 = newarray (java.lang.Object)[1];

        $r12 = r3[i5];

        $r11[0] = $r12;

        virtualinvoke $r13.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>(", %s", $r11);

        i5 = i5 + 1;

        goto label8;

     label9:
        $r10 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.TranslateKodkodToJava: java.io.PrintWriter file>;

        $r9 = newarray (java.lang.Object)[0];

        virtualinvoke $r10.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>(");%n", $r9);

        return;
    }
}
