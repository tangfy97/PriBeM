final class org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1 extends java.lang.Object implements org.waveprotocol.wave.model.document.operation.DocOpCursor
{
    final org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] val$accu;
    final org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton val$a;
    final org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector val$v;

    void <init>(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[], org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton, org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton r2;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector r3;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] r1;
        org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1 r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[];

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton;

        r3 := @parameter2: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector;

        r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] val$accu> = r1;

        r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton val$a> = r2;

        r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector val$v> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void abortIfIllFormed()
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] $r1;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r2;
        org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$IllFormed $r3;
        org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1 r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] val$accu>;

        $r2 = $r1[0];

        $z0 = virtualinvoke $r2.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: boolean isIllFormed()>();

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.DocOpValidator: org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$IllFormed access$000()>();

        throw $r3;

     label1:
        return;
    }

    public void characters(java.lang.String)
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton $r4, $r9;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] $r1, $r5;
        org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1 r0;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector $r3;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r6, $r7, $r8;
        java.lang.String r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1;

        r2 := @parameter0: java.lang.String;

        $r5 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] val$accu>;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] val$accu>;

        $r6 = $r1[0];

        $r4 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton val$a>;

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector val$v>;

        $r7 = virtualinvoke $r4.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult checkCharacters(java.lang.String,org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)>(r2, $r3);

        $r8 = virtualinvoke $r6.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult mergeWith(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult)>($r7);

        $r5[0] = $r8;

        virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: void abortIfIllFormed()>();

        $r9 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton val$a>;

        virtualinvoke $r9.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: void doCharacters(java.lang.String)>(r2);

        return;
    }

    public void deleteCharacters(java.lang.String)
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton $r4, $r9;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] $r1, $r5;
        org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1 r0;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector $r3;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r6, $r7, $r8;
        java.lang.String r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1;

        r2 := @parameter0: java.lang.String;

        $r5 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] val$accu>;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] val$accu>;

        $r6 = $r1[0];

        $r4 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton val$a>;

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector val$v>;

        $r7 = virtualinvoke $r4.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult checkDeleteCharacters(java.lang.String,org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)>(r2, $r3);

        $r8 = virtualinvoke $r6.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult mergeWith(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult)>($r7);

        $r5[0] = $r8;

        virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: void abortIfIllFormed()>();

        $r9 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton val$a>;

        virtualinvoke $r9.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: void doDeleteCharacters(java.lang.String)>(r2);

        return;
    }

    public void deleteElementEnd()
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton $r3, $r8;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] $r1, $r4;
        org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1 r0;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector $r2;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r5, $r6, $r7;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1;

        $r4 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] val$accu>;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] val$accu>;

        $r5 = $r1[0];

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton val$a>;

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector val$v>;

        $r6 = virtualinvoke $r3.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult checkDeleteElementEnd(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)>($r2);

        $r7 = virtualinvoke $r5.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult mergeWith(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult)>($r6);

        $r4[0] = $r7;

        virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: void abortIfIllFormed()>();

        $r8 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton val$a>;

        virtualinvoke $r8.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: void doDeleteElementEnd()>();

        return;
    }

    public void deleteElementStart(java.lang.String, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton $r5, $r10;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] $r1, $r6;
        org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1 r0;
        org.waveprotocol.wave.model.document.operation.Attributes r3;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector $r4;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r7, $r8, $r9;
        java.lang.String r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        $r6 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] val$accu>;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] val$accu>;

        $r7 = $r1[0];

        $r5 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton val$a>;

        $r4 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector val$v>;

        $r8 = virtualinvoke $r5.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult checkDeleteElementStart(java.lang.String,org.waveprotocol.wave.model.document.operation.Attributes,org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)>(r2, r3, $r4);

        $r9 = virtualinvoke $r7.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult mergeWith(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult)>($r8);

        $r6[0] = $r9;

        virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: void abortIfIllFormed()>();

        $r10 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton val$a>;

        virtualinvoke $r10.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: void doDeleteElementStart(java.lang.String,org.waveprotocol.wave.model.document.operation.Attributes)>(r2, r3);

        return;
    }

    public void replaceAttributes(org.waveprotocol.wave.model.document.operation.Attributes, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton $r5, $r10;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] $r1, $r6;
        org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1 r0;
        org.waveprotocol.wave.model.document.operation.Attributes r2, r3;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector $r4;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r7, $r8, $r9;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1;

        r2 := @parameter0: org.waveprotocol.wave.model.document.operation.Attributes;

        r3 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        $r6 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] val$accu>;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] val$accu>;

        $r7 = $r1[0];

        $r5 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton val$a>;

        $r4 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector val$v>;

        $r8 = virtualinvoke $r5.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult checkReplaceAttributes(org.waveprotocol.wave.model.document.operation.Attributes,org.waveprotocol.wave.model.document.operation.Attributes,org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)>(r2, r3, $r4);

        $r9 = virtualinvoke $r7.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult mergeWith(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult)>($r8);

        $r6[0] = $r9;

        virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: void abortIfIllFormed()>();

        $r10 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton val$a>;

        virtualinvoke $r10.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: void doReplaceAttributes(org.waveprotocol.wave.model.document.operation.Attributes,org.waveprotocol.wave.model.document.operation.Attributes)>(r2, r3);

        return;
    }

    public void retain(int)
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton $r3, $r8;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] $r1, $r4;
        org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1 r0;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector $r2;
        int i0;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r5, $r6, $r7;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1;

        i0 := @parameter0: int;

        $r4 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] val$accu>;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] val$accu>;

        $r5 = $r1[0];

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton val$a>;

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector val$v>;

        $r6 = virtualinvoke $r3.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult checkRetain(int,org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)>(i0, $r2);

        $r7 = virtualinvoke $r5.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult mergeWith(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult)>($r6);

        $r4[0] = $r7;

        virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: void abortIfIllFormed()>();

        $r8 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton val$a>;

        virtualinvoke $r8.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: void doRetain(int)>(i0);

        return;
    }

    public void updateAttributes(org.waveprotocol.wave.model.document.operation.AttributesUpdate)
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton $r4, $r9;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] $r1, $r5;
        org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1 r0;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector $r3;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r6, $r7, $r8;
        org.waveprotocol.wave.model.document.operation.AttributesUpdate r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1;

        r2 := @parameter0: org.waveprotocol.wave.model.document.operation.AttributesUpdate;

        $r5 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] val$accu>;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] val$accu>;

        $r6 = $r1[0];

        $r4 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton val$a>;

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector val$v>;

        $r7 = virtualinvoke $r4.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult checkUpdateAttributes(org.waveprotocol.wave.model.document.operation.AttributesUpdate,org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)>(r2, $r3);

        $r8 = virtualinvoke $r6.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult mergeWith(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult)>($r7);

        $r5[0] = $r8;

        virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: void abortIfIllFormed()>();

        $r9 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton val$a>;

        virtualinvoke $r9.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: void doUpdateAttributes(org.waveprotocol.wave.model.document.operation.AttributesUpdate)>(r2);

        return;
    }

    public void annotationBoundary(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap)
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton $r4, $r9;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] $r1, $r5;
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap r2;
        org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1 r0;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector $r3;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r6, $r7, $r8;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1;

        r2 := @parameter0: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap;

        $r5 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] val$accu>;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] val$accu>;

        $r6 = $r1[0];

        $r4 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton val$a>;

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector val$v>;

        $r7 = virtualinvoke $r4.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult checkAnnotationBoundary(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap,org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)>(r2, $r3);

        $r8 = virtualinvoke $r6.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult mergeWith(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult)>($r7);

        $r5[0] = $r8;

        virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: void abortIfIllFormed()>();

        $r9 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton val$a>;

        virtualinvoke $r9.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: void doAnnotationBoundary(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap)>(r2);

        return;
    }

    public void elementEnd()
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton $r3, $r8;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] $r1, $r4;
        org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1 r0;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector $r2;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r5, $r6, $r7;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1;

        $r4 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] val$accu>;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] val$accu>;

        $r5 = $r1[0];

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton val$a>;

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector val$v>;

        $r6 = virtualinvoke $r3.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult checkElementEnd(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)>($r2);

        $r7 = virtualinvoke $r5.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult mergeWith(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult)>($r6);

        $r4[0] = $r7;

        virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: void abortIfIllFormed()>();

        $r8 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton val$a>;

        virtualinvoke $r8.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: void doElementEnd()>();

        return;
    }

    public void elementStart(java.lang.String, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton $r5, $r10;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] $r1, $r6;
        org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1 r0;
        org.waveprotocol.wave.model.document.operation.Attributes r3;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector $r4;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r7, $r8, $r9;
        java.lang.String r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        $r6 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] val$accu>;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult[] val$accu>;

        $r7 = $r1[0];

        $r5 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton val$a>;

        $r4 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector val$v>;

        $r8 = virtualinvoke $r5.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult checkElementStart(java.lang.String,org.waveprotocol.wave.model.document.operation.Attributes,org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)>(r2, r3, $r4);

        $r9 = virtualinvoke $r7.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult mergeWith(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult)>($r8);

        $r6[0] = $r9;

        virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: void abortIfIllFormed()>();

        $r10 = r0.<org.waveprotocol.wave.model.document.operation.impl.DocOpValidator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton val$a>;

        virtualinvoke $r10.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: void doElementStart(java.lang.String,org.waveprotocol.wave.model.document.operation.Attributes)>(r2, r3);

        return;
    }
}
