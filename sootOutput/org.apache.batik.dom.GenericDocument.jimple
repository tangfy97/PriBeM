public class org.apache.batik.dom.GenericDocument extends org.apache.batik.dom.AbstractDocument
{
    protected static final java.lang.String ATTR_ID;
    protected boolean readonly;

    protected void <init>()
    {
        org.apache.batik.dom.GenericDocument r0;

        r0 := @this: org.apache.batik.dom.GenericDocument;

        specialinvoke r0.<org.apache.batik.dom.AbstractDocument: void <init>()>();

        return;
    }

    public void <init>(org.w3c.dom.DocumentType, org.w3c.dom.DOMImplementation)
    {
        org.w3c.dom.DOMImplementation r2;
        org.apache.batik.dom.GenericDocument r0;
        org.w3c.dom.DocumentType r1;

        r0 := @this: org.apache.batik.dom.GenericDocument;

        r1 := @parameter0: org.w3c.dom.DocumentType;

        r2 := @parameter1: org.w3c.dom.DOMImplementation;

        specialinvoke r0.<org.apache.batik.dom.AbstractDocument: void <init>(org.w3c.dom.DocumentType,org.w3c.dom.DOMImplementation)>(r1, r2);

        return;
    }

    public boolean isReadonly()
    {
        org.apache.batik.dom.GenericDocument r0;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.GenericDocument;

        $z0 = r0.<org.apache.batik.dom.GenericDocument: boolean readonly>;

        return $z0;
    }

    public void setReadonly(boolean)
    {
        org.apache.batik.dom.GenericDocument r0;
        boolean z0;

        r0 := @this: org.apache.batik.dom.GenericDocument;

        z0 := @parameter0: boolean;

        r0.<org.apache.batik.dom.GenericDocument: boolean readonly> = z0;

        return;
    }

    public boolean isId(org.w3c.dom.Attr)
    {
        java.lang.String $r1, $r2, $r3;
        org.w3c.dom.Attr r0;
        boolean $z0;
        org.apache.batik.dom.GenericDocument r4;

        r4 := @this: org.apache.batik.dom.GenericDocument;

        r0 := @parameter0: org.w3c.dom.Attr;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNamespaceURI()>();

        if $r1 == null goto label1;

        return 0;

     label1:
        $r2 = "id";

        $r3 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }

    public org.w3c.dom.Element createElement(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.GenericElement $r0;
        java.lang.String r1, $r2;
        org.apache.batik.dom.GenericDocument r3;

        r3 := @this: org.apache.batik.dom.GenericDocument;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.apache.batik.dom.GenericElement;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String intern()>();

        specialinvoke $r0.<org.apache.batik.dom.GenericElement: void <init>(java.lang.String,org.apache.batik.dom.AbstractDocument)>($r2, r3);

        return $r0;
    }

    public org.w3c.dom.DocumentFragment createDocumentFragment()
    {
        org.apache.batik.dom.GenericDocumentFragment $r0;
        org.apache.batik.dom.GenericDocument r1;

        r1 := @this: org.apache.batik.dom.GenericDocument;

        $r0 = new org.apache.batik.dom.GenericDocumentFragment;

        specialinvoke $r0.<org.apache.batik.dom.GenericDocumentFragment: void <init>(org.apache.batik.dom.AbstractDocument)>(r1);

        return $r0;
    }

    public org.w3c.dom.Text createTextNode(java.lang.String)
    {
        java.lang.String r1;
        org.apache.batik.dom.GenericText $r0;
        org.apache.batik.dom.GenericDocument r2;

        r2 := @this: org.apache.batik.dom.GenericDocument;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.apache.batik.dom.GenericText;

        specialinvoke $r0.<org.apache.batik.dom.GenericText: void <init>(java.lang.String,org.apache.batik.dom.AbstractDocument)>(r1, r2);

        return $r0;
    }

    public org.w3c.dom.Comment createComment(java.lang.String)
    {
        org.apache.batik.dom.GenericComment $r0;
        java.lang.String r1;
        org.apache.batik.dom.GenericDocument r2;

        r2 := @this: org.apache.batik.dom.GenericDocument;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.apache.batik.dom.GenericComment;

        specialinvoke $r0.<org.apache.batik.dom.GenericComment: void <init>(java.lang.String,org.apache.batik.dom.AbstractDocument)>(r1, r2);

        return $r0;
    }

    public org.w3c.dom.CDATASection createCDATASection(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.GenericCDATASection $r0;
        java.lang.String r1;
        org.apache.batik.dom.GenericDocument r2;

        r2 := @this: org.apache.batik.dom.GenericDocument;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.apache.batik.dom.GenericCDATASection;

        specialinvoke $r0.<org.apache.batik.dom.GenericCDATASection: void <init>(java.lang.String,org.apache.batik.dom.AbstractDocument)>(r1, r2);

        return $r0;
    }

    public org.w3c.dom.ProcessingInstruction createProcessingInstruction(java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.GenericProcessingInstruction $r0;
        java.lang.String r1, r2;
        org.apache.batik.dom.GenericDocument r3;

        r3 := @this: org.apache.batik.dom.GenericDocument;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r0 = new org.apache.batik.dom.GenericProcessingInstruction;

        specialinvoke $r0.<org.apache.batik.dom.GenericProcessingInstruction: void <init>(java.lang.String,java.lang.String,org.apache.batik.dom.AbstractDocument)>(r1, r2, r3);

        return $r0;
    }

    public org.w3c.dom.Attr createAttribute(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.GenericAttr $r0;
        java.lang.String r1, $r2;
        org.apache.batik.dom.GenericDocument r3;

        r3 := @this: org.apache.batik.dom.GenericDocument;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.apache.batik.dom.GenericAttr;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String intern()>();

        specialinvoke $r0.<org.apache.batik.dom.GenericAttr: void <init>(java.lang.String,org.apache.batik.dom.AbstractDocument)>($r2, r3);

        return $r0;
    }

    public org.w3c.dom.EntityReference createEntityReference(java.lang.String) throws org.w3c.dom.DOMException
    {
        java.lang.String r1;
        org.apache.batik.dom.GenericEntityReference $r0;
        org.apache.batik.dom.GenericDocument r2;

        r2 := @this: org.apache.batik.dom.GenericDocument;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.apache.batik.dom.GenericEntityReference;

        specialinvoke $r0.<org.apache.batik.dom.GenericEntityReference: void <init>(java.lang.String,org.apache.batik.dom.AbstractDocument)>(r1, r2);

        return $r0;
    }

    public org.w3c.dom.Element createElementNS(java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.GenericElementNS $r0;
        org.apache.batik.dom.GenericElement $r5;
        int $i0;
        java.lang.String $r1, r2, $r3, $r6, r7;
        org.apache.batik.dom.GenericDocument r4;

        r4 := @this: org.apache.batik.dom.GenericDocument;

        r7 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r7 == null goto label1;

        $i0 = virtualinvoke r7.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        r7 = null;

     label1:
        if r7 != null goto label2;

        $r5 = new org.apache.batik.dom.GenericElement;

        $r6 = virtualinvoke r2.<java.lang.String: java.lang.String intern()>();

        specialinvoke $r5.<org.apache.batik.dom.GenericElement: void <init>(java.lang.String,org.apache.batik.dom.AbstractDocument)>($r6, r4);

        return $r5;

     label2:
        $r0 = new org.apache.batik.dom.GenericElementNS;

        $r1 = virtualinvoke r7.<java.lang.String: java.lang.String intern()>();

        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String intern()>();

        specialinvoke $r0.<org.apache.batik.dom.GenericElementNS: void <init>(java.lang.String,java.lang.String,org.apache.batik.dom.AbstractDocument)>($r1, $r3, r4);

        return $r0;
    }

    public org.w3c.dom.Attr createAttributeNS(java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.GenericAttrNS $r0;
        int $i0;
        org.apache.batik.dom.GenericAttr $r5;
        java.lang.String $r1, r2, $r3, $r6, r7;
        org.apache.batik.dom.GenericDocument r4;

        r4 := @this: org.apache.batik.dom.GenericDocument;

        r7 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r7 == null goto label1;

        $i0 = virtualinvoke r7.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        r7 = null;

     label1:
        if r7 != null goto label2;

        $r5 = new org.apache.batik.dom.GenericAttr;

        $r6 = virtualinvoke r2.<java.lang.String: java.lang.String intern()>();

        specialinvoke $r5.<org.apache.batik.dom.GenericAttr: void <init>(java.lang.String,org.apache.batik.dom.AbstractDocument)>($r6, r4);

        return $r5;

     label2:
        $r0 = new org.apache.batik.dom.GenericAttrNS;

        $r1 = virtualinvoke r7.<java.lang.String: java.lang.String intern()>();

        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String intern()>();

        specialinvoke $r0.<org.apache.batik.dom.GenericAttrNS: void <init>(java.lang.String,java.lang.String,org.apache.batik.dom.AbstractDocument)>($r1, $r3, r4);

        return $r0;
    }

    protected org.w3c.dom.Node newNode()
    {
        org.apache.batik.dom.GenericDocument $r0, r1;

        r1 := @this: org.apache.batik.dom.GenericDocument;

        $r0 = new org.apache.batik.dom.GenericDocument;

        specialinvoke $r0.<org.apache.batik.dom.GenericDocument: void <init>()>();

        return $r0;
    }

    public static void <clinit>()
    {
        <org.apache.batik.dom.GenericDocument: java.lang.String ATTR_ID> = "id";

        return;
    }
}
