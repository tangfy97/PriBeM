public class org.apache.lucene.collation.CollationKeyFilterFactory extends org.apache.lucene.analysis.util.TokenFilterFactory implements org.apache.lucene.analysis.util.MultiTermAwareComponent, org.apache.lucene.analysis.util.ResourceLoaderAware
{
    private java.text.Collator collator;
    private final java.lang.String custom;
    private final java.lang.String language;
    private final java.lang.String country;
    private final java.lang.String variant;
    private final java.lang.String strength;
    private final java.lang.String decomposition;

    public void <init>(java.util.Map)
    {
        java.util.Map r1;
        java.lang.String $r3, $r5, $r7, $r9, $r11, $r13, $r14, $r15, $r20, $r21, $r22, $r23, $r24;
        boolean $z0;
        java.lang.IllegalArgumentException $r16, $r25, $r26;
        org.apache.lucene.collation.CollationKeyFilterFactory r0;
        java.lang.Object $r2, $r4, $r6, $r8, $r10, $r12;
        java.lang.StringBuilder $r17, $r18, $r19;

        r0 := @this: org.apache.lucene.collation.CollationKeyFilterFactory;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<org.apache.lucene.analysis.util.TokenFilterFactory: void <init>(java.util.Map)>(r1);

        $r2 = interfaceinvoke r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>("custom");

        $r3 = (java.lang.String) $r2;

        r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.lang.String custom> = $r3;

        $r4 = interfaceinvoke r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>("language");

        $r5 = (java.lang.String) $r4;

        r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.lang.String language> = $r5;

        $r6 = interfaceinvoke r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>("country");

        $r7 = (java.lang.String) $r6;

        r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.lang.String country> = $r7;

        $r8 = interfaceinvoke r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>("variant");

        $r9 = (java.lang.String) $r8;

        r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.lang.String variant> = $r9;

        $r10 = interfaceinvoke r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>("strength");

        $r11 = (java.lang.String) $r10;

        r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.lang.String strength> = $r11;

        $r12 = interfaceinvoke r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>("decomposition");

        $r13 = (java.lang.String) $r12;

        r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.lang.String decomposition> = $r13;

        $r14 = r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.lang.String custom>;

        if $r14 != null goto label1;

        $r24 = r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.lang.String language>;

        if $r24 != null goto label1;

        $r25 = new java.lang.IllegalArgumentException;

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Either custom or language is required.");

        throw $r25;

     label1:
        $r15 = r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.lang.String custom>;

        if $r15 == null goto label3;

        $r21 = r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.lang.String language>;

        if $r21 != null goto label2;

        $r22 = r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.lang.String country>;

        if $r22 != null goto label2;

        $r23 = r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.lang.String variant>;

        if $r23 == null goto label3;

     label2:
        $r26 = new java.lang.IllegalArgumentException;

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot specify both language and custom. To tailor rules for a built-in language, see the javadocs for RuleBasedCollator. Then save the entire customized ruleset to a file, and use with the custom parameter");

        throw $r26;

     label3:
        $z0 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        $r16 = new java.lang.IllegalArgumentException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown parameters: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r16;

     label4:
        return;
    }

    public void inform(org.apache.lucene.analysis.util.ResourceLoader) throws java.io.IOException
    {
        org.apache.lucene.analysis.util.ResourceLoader r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.lucene.collation.CollationKeyFilterFactory r0;
        java.lang.StringBuilder $r10, $r11, $r13, $r23, $r24, $r26;
        java.lang.String $r1, $r3, $r5, $r6, $r7, $r8, $r12, $r14, $r18, $r19, $r20, $r21, $r25, $r27, $r32, $r33, $r34, $r36;
        java.text.Collator $r4, $r15, $r16, $r17, $r28, $r29, $r30, $r31, $r35;
        java.lang.IllegalArgumentException $r9, $r22;

        r0 := @this: org.apache.lucene.collation.CollationKeyFilterFactory;

        r2 := @parameter0: org.apache.lucene.analysis.util.ResourceLoader;

        $r1 = r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.lang.String language>;

        if $r1 == null goto label01;

        $r34 = r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.lang.String language>;

        $r33 = r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.lang.String country>;

        $r32 = r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.lang.String variant>;

        $r35 = specialinvoke r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.text.Collator createFromLocale(java.lang.String,java.lang.String,java.lang.String)>($r34, $r33, $r32);

        r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.text.Collator collator> = $r35;

        goto label02;

     label01:
        $r3 = r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.lang.String custom>;

        $r4 = specialinvoke r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.text.Collator createFromRules(java.lang.String,org.apache.lucene.analysis.util.ResourceLoader)>($r3, r2);

        r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.text.Collator collator> = $r4;

     label02:
        $r5 = r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.lang.String strength>;

        if $r5 == null goto label07;

        $r18 = r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.lang.String strength>;

        $z3 = virtualinvoke $r18.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("primary");

        if $z3 == 0 goto label03;

        $r31 = r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.text.Collator collator>;

        virtualinvoke $r31.<java.text.Collator: void setStrength(int)>(0);

        goto label07;

     label03:
        $r19 = r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.lang.String strength>;

        $z4 = virtualinvoke $r19.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("secondary");

        if $z4 == 0 goto label04;

        $r30 = r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.text.Collator collator>;

        virtualinvoke $r30.<java.text.Collator: void setStrength(int)>(1);

        goto label07;

     label04:
        $r20 = r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.lang.String strength>;

        $z5 = virtualinvoke $r20.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("tertiary");

        if $z5 == 0 goto label05;

        $r29 = r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.text.Collator collator>;

        virtualinvoke $r29.<java.text.Collator: void setStrength(int)>(2);

        goto label07;

     label05:
        $r21 = r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.lang.String strength>;

        $z6 = virtualinvoke $r21.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("identical");

        if $z6 == 0 goto label06;

        $r28 = r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.text.Collator collator>;

        virtualinvoke $r28.<java.text.Collator: void setStrength(int)>(3);

        goto label07;

     label06:
        $r22 = new java.lang.IllegalArgumentException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid strength: ");

        $r25 = r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.lang.String strength>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r27);

        throw $r22;

     label07:
        $r36 = r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.lang.String decomposition>;

        if $r36 == null goto label11;

        $r6 = r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.lang.String decomposition>;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("no");

        if $z0 == 0 goto label08;

        $r17 = r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.text.Collator collator>;

        virtualinvoke $r17.<java.text.Collator: void setDecomposition(int)>(0);

        goto label11;

     label08:
        $r7 = r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.lang.String decomposition>;

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("canonical");

        if $z1 == 0 goto label09;

        $r16 = r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.text.Collator collator>;

        virtualinvoke $r16.<java.text.Collator: void setDecomposition(int)>(1);

        goto label11;

     label09:
        $r8 = r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.lang.String decomposition>;

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("full");

        if $z2 == 0 goto label10;

        $r15 = r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.text.Collator collator>;

        virtualinvoke $r15.<java.text.Collator: void setDecomposition(int)>(2);

        goto label11;

     label10:
        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid decomposition: ");

        $r12 = r0.<org.apache.lucene.collation.CollationKeyFilterFactory: java.lang.String decomposition>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r9;

     label11:
        return;
    }

    public org.apache.lucene.analysis.TokenStream create(org.apache.lucene.analysis.TokenStream)
    {
        org.apache.lucene.collation.CollationKeyFilterFactory r2;
        org.apache.lucene.analysis.TokenStream r1;
        org.apache.lucene.collation.CollationKeyFilter $r0;
        java.text.Collator $r3;

        r2 := @this: org.apache.lucene.collation.CollationKeyFilterFactory;

        r1 := @parameter0: org.apache.lucene.analysis.TokenStream;

        $r0 = new org.apache.lucene.collation.CollationKeyFilter;

        $r3 = r2.<org.apache.lucene.collation.CollationKeyFilterFactory: java.text.Collator collator>;

        specialinvoke $r0.<org.apache.lucene.collation.CollationKeyFilter: void <init>(org.apache.lucene.analysis.TokenStream,java.text.Collator)>(r1, $r3);

        return $r0;
    }

    private java.text.Collator createFromLocale(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.IllegalArgumentException $r6;
        org.apache.lucene.collation.CollationKeyFilterFactory r7;
        java.util.Locale $r1, $r3, $r5, r8;
        java.lang.String r0, r2, r4;
        java.text.Collator $r9;

        r7 := @this: org.apache.lucene.collation.CollationKeyFilterFactory;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        if r0 == null goto label1;

        if r2 != null goto label1;

        if r4 == null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("To specify variant, country is required");

        throw $r6;

     label1:
        if r0 == null goto label2;

        if r2 == null goto label2;

        if r4 == null goto label2;

        $r5 = new java.util.Locale;

        specialinvoke $r5.<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r0, r2, r4);

        r8 = $r5;

        goto label4;

     label2:
        if r0 == null goto label3;

        if r2 == null goto label3;

        $r3 = new java.util.Locale;

        specialinvoke $r3.<java.util.Locale: void <init>(java.lang.String,java.lang.String)>(r0, r2);

        r8 = $r3;

        goto label4;

     label3:
        $r1 = new java.util.Locale;

        specialinvoke $r1.<java.util.Locale: void <init>(java.lang.String)>(r0);

        r8 = $r1;

     label4:
        $r9 = staticinvoke <java.text.Collator: java.text.Collator getInstance(java.util.Locale)>(r8);

        return $r9;
    }

    private java.text.Collator createFromRules(java.lang.String, org.apache.lucene.analysis.util.ResourceLoader) throws java.io.IOException
    {
        java.lang.Throwable $r7;
        java.text.RuleBasedCollator $r5;
        java.io.IOException $r10;
        org.apache.lucene.collation.CollationKeyFilterFactory r3;
        java.io.Closeable[] $r6, $r8;
        org.apache.lucene.analysis.util.ResourceLoader r0;
        java.lang.String r1, $r4;
        java.text.ParseException $r9;
        java.io.InputStream $r2, r11;

        r3 := @this: org.apache.lucene.collation.CollationKeyFilterFactory;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: org.apache.lucene.analysis.util.ResourceLoader;

        r11 = null;

     label1:
        $r2 = interfaceinvoke r0.<org.apache.lucene.analysis.util.ResourceLoader: java.io.InputStream openResource(java.lang.String)>(r1);

        r11 = $r2;

        $r4 = specialinvoke r3.<org.apache.lucene.collation.CollationKeyFilterFactory: java.lang.String toUTF8String(java.io.InputStream)>($r2);

        $r5 = new java.text.RuleBasedCollator;

        specialinvoke $r5.<java.text.RuleBasedCollator: void <init>(java.lang.String)>($r4);

     label2:
        $r6 = newarray (java.io.Closeable)[1];

        $r6[0] = $r2;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r6);

        return $r5;

     label3:
        $r9 := @caughtexception;

        $r10 = new java.io.IOException;

        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("ParseException thrown while parsing rules", $r9);

        throw $r10;

     label4:
        $r7 := @caughtexception;

     label5:
        $r8 = newarray (java.io.Closeable)[1];

        $r8[0] = r11;

        staticinvoke <org.apache.lucene.util.IOUtils: void closeWhileHandlingException(java.io.Closeable[])>($r8);

        throw $r7;

        catch java.text.ParseException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label5 with label4;
    }

    public org.apache.lucene.analysis.util.AbstractAnalysisFactory getMultiTermComponent()
    {
        org.apache.lucene.collation.CollationKeyFilterFactory r0;

        r0 := @this: org.apache.lucene.collation.CollationKeyFilterFactory;

        return r0;
    }

    private java.lang.String toUTF8String(java.io.InputStream) throws java.io.IOException
    {
        java.io.Reader $r4;
        org.apache.lucene.collation.CollationKeyFilterFactory r6;
        java.nio.charset.Charset $r3;
        int $i0;
        char[] r1;
        java.lang.StringBuilder $r0;
        java.lang.String $r5;
        java.io.InputStream r2;

        r6 := @this: org.apache.lucene.collation.CollationKeyFilterFactory;

        r2 := @parameter0: java.io.InputStream;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        r1 = newarray (char)[1024];

        $r3 = <org.apache.lucene.util.IOUtils: java.nio.charset.Charset CHARSET_UTF_8>;

        $r4 = staticinvoke <org.apache.lucene.util.IOUtils: java.io.Reader getDecodingReader(java.io.InputStream,java.nio.charset.Charset)>(r2, $r3);

     label1:
        $i0 = virtualinvoke $r4.<java.io.Reader: int read(char[])>(r1);

        if $i0 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(r1, 0, $i0);

        goto label1;

     label2:
        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }
}
