public class groovy.swing.factory.DialogFactory extends groovy.swing.factory.RootPaneContainerFactory
{
    public static java.lang.Long __timeStamp;
    public static java.lang.Long __timeStamp__239_neverHappen1239119697169;
    static java.lang.Class class$javax$swing$JDialog;
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;
    static java.lang.Class class$java$lang$Object;
    static java.lang.Class class$java$awt$Dialog;
    static java.lang.Class class$groovy$util$FactoryBuilderSupport;
    static java.lang.Class class$java$awt$Frame;
    static java.lang.Class class$java$util$LinkedList;

    public void <init>()
    {
        groovy.swing.factory.DialogFactory r0;
        java.lang.Class $r1, $r2, $r3, $r4;

        r0 := @this: groovy.swing.factory.DialogFactory;

        specialinvoke r0.<groovy.swing.factory.RootPaneContainerFactory: void <init>()>();

        $r1 = <groovy.swing.factory.DialogFactory: java.lang.Class class$0>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <groovy.swing.factory.DialogFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.DialogFactory");

        <groovy.swing.factory.DialogFactory: java.lang.Class class$0> = $r3;

        goto label2;

     label1:
        $r3 = <groovy.swing.factory.DialogFactory: java.lang.Class class$0>;

     label2:
        $r2 = <groovy.swing.factory.DialogFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r4 = staticinvoke <groovy.swing.factory.DialogFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.DialogFactory: java.lang.Class class$groovy$lang$MetaClass> = $r4;

        goto label4;

     label3:
        $r4 = <groovy.swing.factory.DialogFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        return;
    }

    public java.lang.Object newInstance(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object, java.util.Map) throws java.lang.InstantiationException, java.lang.IllegalAccessException
    {
        java.util.Map r9;
        java.awt.Dialog $r63;
        java.awt.Frame $r52;
        java.lang.Object[] $r10, $r37, $r47, $r58, $r69;
        groovy.swing.factory.DialogFactory r17;
        javax.swing.JDialog $r32;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        groovy.util.FactoryBuilderSupport r12;
        org.codehaus.groovy.runtime.wrappers.Wrapper $r56, $r67;
        java.lang.Boolean $r45;
        java.util.LinkedList $r28;
        java.lang.Class $r0, r1, $r2, $r3, $r5, $r8, $r14, $r16, $r21, $r22, $r23, $r24, $r25, $r26, $r29, $r31, $r33, $r34, $r35, $r36, $r38, $r39, $r41, $r44, $r46, $r49, $r50, $r53, $r54, $r55, $r57, $r60, $r61, $r64, $r65, $r66, $r68, $r70, $r71;
        java.lang.Object $r4, r6, r7, $r11, $r13, $r15, $r18, $r19, $r20, $r27, $r30, $r40, r42, r43, $r48, $r51, $r59, $r62;

        r17 := @this: groovy.swing.factory.DialogFactory;

        r12 := @parameter0: groovy.util.FactoryBuilderSupport;

        r7 := @parameter1: java.lang.Object;

        r6 := @parameter2: java.lang.Object;

        r9 := @parameter3: java.util.Map;

        $r0 = <groovy.swing.factory.DialogFactory: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r33 = staticinvoke <groovy.swing.factory.DialogFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.DialogFactory");

        <groovy.swing.factory.DialogFactory: java.lang.Class class$0> = $r33;

        goto label02;

     label01:
        $r33 = <groovy.swing.factory.DialogFactory: java.lang.Class class$0>;

     label02:
        r1 = $r33;

        $r2 = <groovy.swing.factory.DialogFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r34 = staticinvoke <groovy.swing.factory.DialogFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.DialogFactory: java.lang.Class class$groovy$lang$MetaClass> = $r34;

        goto label04;

     label03:
        $r34 = <groovy.swing.factory.DialogFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r3 = <groovy.swing.factory.DialogFactory: java.lang.Class class$javax$swing$JDialog>;

        if $r3 != null goto label05;

        $r35 = staticinvoke <groovy.swing.factory.DialogFactory: java.lang.Class class$(java.lang.String)>("javax.swing.JDialog");

        <groovy.swing.factory.DialogFactory: java.lang.Class class$javax$swing$JDialog> = $r35;

        goto label06;

     label05:
        $r35 = <groovy.swing.factory.DialogFactory: java.lang.Class class$javax$swing$JDialog>;

     label06:
        $r4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(null, $r35);

        $r32 = (javax.swing.JDialog) $r4;

        $r5 = <groovy.swing.factory.DialogFactory: java.lang.Class class$groovy$util$FactoryBuilderSupport>;

        if $r5 != null goto label07;

        $r31 = staticinvoke <groovy.swing.factory.DialogFactory: java.lang.Class class$(java.lang.String)>("groovy.util.FactoryBuilderSupport");

        $r36 = $r31;

        <groovy.swing.factory.DialogFactory: java.lang.Class class$groovy$util$FactoryBuilderSupport> = $r31;

        goto label08;

     label07:
        $r36 = <groovy.swing.factory.DialogFactory: java.lang.Class class$groovy$util$FactoryBuilderSupport>;

     label08:
        $r37 = newarray (java.lang.Object)[3];

        $r37[0] = r6;

        $r37[1] = r7;

        $r8 = <groovy.swing.factory.DialogFactory: java.lang.Class class$javax$swing$JDialog>;

        if $r8 != null goto label09;

        $r38 = staticinvoke <groovy.swing.factory.DialogFactory: java.lang.Class class$(java.lang.String)>("javax.swing.JDialog");

        $r39 = $r38;

        <groovy.swing.factory.DialogFactory: java.lang.Class class$javax$swing$JDialog> = $r38;

        goto label10;

     label09:
        $r39 = <groovy.swing.factory.DialogFactory: java.lang.Class class$javax$swing$JDialog>;

     label10:
        $r37[2] = $r39;

        $r40 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r36, "checkValueIsType", $r37);

        $z4 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r40);

        if $z4 == 0 goto label13;

        $r29 = <groovy.swing.factory.DialogFactory: java.lang.Class class$javax$swing$JDialog>;

        if $r29 != null goto label11;

        $r41 = staticinvoke <groovy.swing.factory.DialogFactory: java.lang.Class class$(java.lang.String)>("javax.swing.JDialog");

        <groovy.swing.factory.DialogFactory: java.lang.Class class$javax$swing$JDialog> = $r41;

        goto label12;

     label11:
        $r41 = <groovy.swing.factory.DialogFactory: java.lang.Class class$javax$swing$JDialog>;

     label12:
        $r30 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(r6, $r41);

        r42 = (javax.swing.JDialog) $r30;

        goto label37;

     label13:
        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = "owner";

        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r9, "remove", $r10);

        r43 = $r11;

        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r12, "containingWindows");

        $r14 = <groovy.swing.factory.DialogFactory: java.lang.Class class$java$util$LinkedList>;

        if $r14 != null goto label14;

        $r44 = staticinvoke <groovy.swing.factory.DialogFactory: java.lang.Class class$(java.lang.String)>("java.util.LinkedList");

        <groovy.swing.factory.DialogFactory: java.lang.Class class$java$util$LinkedList> = $r44;

        goto label15;

     label14:
        $r44 = <groovy.swing.factory.DialogFactory: java.lang.Class class$java$util$LinkedList>;

     label15:
        $r15 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r13, $r44);

        $r28 = (java.util.LinkedList) $r15;

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r11, null);

        if $z0 == 0 goto label18;

        $r27 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r28, "isEmpty");

        $z3 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r27);

        if $z3 != 0 goto label16;

        $z5 = 1;

        goto label17;

     label16:
        $z5 = 0;

     label17:
        if $z5 == 0 goto label18;

        $r45 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label19;

     label18:
        $r45 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label19:
        $z6 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r45);

        if $z6 == 0 goto label20;

        r43 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r28, "getLast");

        goto label20;

     label20:
        $z1 = r43 instanceof java.awt.Frame;

        if $z1 == 0 goto label27;

        $r24 = <groovy.swing.factory.DialogFactory: java.lang.Class class$javax$swing$JDialog>;

        if $r24 != null goto label21;

        $r26 = staticinvoke <groovy.swing.factory.DialogFactory: java.lang.Class class$(java.lang.String)>("javax.swing.JDialog");

        $r46 = $r26;

        <groovy.swing.factory.DialogFactory: java.lang.Class class$javax$swing$JDialog> = $r26;

        goto label22;

     label21:
        $r46 = <groovy.swing.factory.DialogFactory: java.lang.Class class$javax$swing$JDialog>;

     label22:
        $r47 = newarray (java.lang.Object)[1];

        $r48 = r43;

        $r25 = <groovy.swing.factory.DialogFactory: java.lang.Class class$java$awt$Frame>;

        if $r25 != null goto label23;

        $r49 = staticinvoke <groovy.swing.factory.DialogFactory: java.lang.Class class$(java.lang.String)>("java.awt.Frame");

        $r50 = $r49;

        <groovy.swing.factory.DialogFactory: java.lang.Class class$java$awt$Frame> = $r49;

        goto label24;

     label23:
        $r50 = <groovy.swing.factory.DialogFactory: java.lang.Class class$java$awt$Frame>;

     label24:
        $r51 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r48, $r50);

        $r52 = (java.awt.Frame) $r51;

        $r53 = <groovy.swing.factory.DialogFactory: java.lang.Class class$java$awt$Frame>;

        if $r53 != null goto label25;

        $r54 = staticinvoke <groovy.swing.factory.DialogFactory: java.lang.Class class$(java.lang.String)>("java.awt.Frame");

        $r55 = $r54;

        <groovy.swing.factory.DialogFactory: java.lang.Class class$java$awt$Frame> = $r54;

        goto label26;

     label25:
        $r55 = <groovy.swing.factory.DialogFactory: java.lang.Class class$java$awt$Frame>;

     label26:
        $r56 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: org.codehaus.groovy.runtime.wrappers.Wrapper createPojoWrapper(java.lang.Object,java.lang.Class)>($r52, $r55);

        $r47[0] = $r56;

        r42 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r46, $r47);

        goto label37;

     label27:
        $z2 = r43 instanceof java.awt.Dialog;

        if $z2 == 0 goto label34;

        $r21 = <groovy.swing.factory.DialogFactory: java.lang.Class class$javax$swing$JDialog>;

        if $r21 != null goto label28;

        $r23 = staticinvoke <groovy.swing.factory.DialogFactory: java.lang.Class class$(java.lang.String)>("javax.swing.JDialog");

        $r57 = $r23;

        <groovy.swing.factory.DialogFactory: java.lang.Class class$javax$swing$JDialog> = $r23;

        goto label29;

     label28:
        $r57 = <groovy.swing.factory.DialogFactory: java.lang.Class class$javax$swing$JDialog>;

     label29:
        $r58 = newarray (java.lang.Object)[1];

        $r59 = r43;

        $r22 = <groovy.swing.factory.DialogFactory: java.lang.Class class$java$awt$Dialog>;

        if $r22 != null goto label30;

        $r60 = staticinvoke <groovy.swing.factory.DialogFactory: java.lang.Class class$(java.lang.String)>("java.awt.Dialog");

        $r61 = $r60;

        <groovy.swing.factory.DialogFactory: java.lang.Class class$java$awt$Dialog> = $r60;

        goto label31;

     label30:
        $r61 = <groovy.swing.factory.DialogFactory: java.lang.Class class$java$awt$Dialog>;

     label31:
        $r62 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r59, $r61);

        $r63 = (java.awt.Dialog) $r62;

        $r64 = <groovy.swing.factory.DialogFactory: java.lang.Class class$java$awt$Dialog>;

        if $r64 != null goto label32;

        $r65 = staticinvoke <groovy.swing.factory.DialogFactory: java.lang.Class class$(java.lang.String)>("java.awt.Dialog");

        $r66 = $r65;

        <groovy.swing.factory.DialogFactory: java.lang.Class class$java$awt$Dialog> = $r65;

        goto label33;

     label32:
        $r66 = <groovy.swing.factory.DialogFactory: java.lang.Class class$java$awt$Dialog>;

     label33:
        $r67 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: org.codehaus.groovy.runtime.wrappers.Wrapper createPojoWrapper(java.lang.Object,java.lang.Class)>($r63, $r66);

        $r58[0] = $r67;

        r42 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r57, $r58);

        goto label37;

     label34:
        $r16 = <groovy.swing.factory.DialogFactory: java.lang.Class class$javax$swing$JDialog>;

        if $r16 != null goto label35;

        $r68 = staticinvoke <groovy.swing.factory.DialogFactory: java.lang.Class class$(java.lang.String)>("javax.swing.JDialog");

        <groovy.swing.factory.DialogFactory: java.lang.Class class$javax$swing$JDialog> = $r68;

        goto label36;

     label35:
        $r68 = <groovy.swing.factory.DialogFactory: java.lang.Class class$javax$swing$JDialog>;

     label36:
        r42 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r68);

     label37:
        $r69 = newarray (java.lang.Object)[3];

        $r69[0] = r12;

        $r69[1] = r42;

        $r69[2] = r9;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r17, "handleRootPaneTasks", $r69);

        $r20 = r42;

        $r70 = <groovy.swing.factory.DialogFactory: java.lang.Class class$java$lang$Object>;

        if $r70 != null goto label38;

        $r71 = staticinvoke <groovy.swing.factory.DialogFactory: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <groovy.swing.factory.DialogFactory: java.lang.Class class$java$lang$Object> = $r71;

        goto label39;

     label38:
        $r71 = <groovy.swing.factory.DialogFactory: java.lang.Class class$java$lang$Object>;

     label39:
        $r18 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r20, $r71);

        $r19 = (java.lang.Object) $r18;

        return $r19;
    }

    static void <clinit>()
    {
        java.lang.Long $r2, $r3, $r4, $r5;
        java.lang.Class $r0, $r1, $r6, $r7;

        $r0 = <groovy.swing.factory.DialogFactory: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <groovy.swing.factory.DialogFactory: java.lang.Class class$(java.lang.String)>("groovy.swing.factory.DialogFactory");

        <groovy.swing.factory.DialogFactory: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <groovy.swing.factory.DialogFactory: java.lang.Class class$0>;

     label2:
        $r1 = <groovy.swing.factory.DialogFactory: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <groovy.swing.factory.DialogFactory: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <groovy.swing.factory.DialogFactory: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <groovy.swing.factory.DialogFactory: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r2 = new java.lang.Long;

        specialinvoke $r2.<java.lang.Long: void <init>(long)>(1239119697169L);

        $r3 = (java.lang.Long) $r2;

        <groovy.swing.factory.DialogFactory: java.lang.Long __timeStamp> = $r3;

        $r4 = new java.lang.Long;

        specialinvoke $r4.<java.lang.Long: void <init>(long)>(0L);

        $r5 = (java.lang.Long) $r4;

        <groovy.swing.factory.DialogFactory: java.lang.Long __timeStamp__239_neverHappen1239119697169> = $r5;

        return;
    }

    java.lang.Object super$3$getProperty(java.lang.String)
    {
        java.lang.Object $r2;
        java.lang.String r1;
        groovy.swing.factory.DialogFactory r0;

        r0 := @this: groovy.swing.factory.DialogFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<groovy.swing.factory.RootPaneContainerFactory: java.lang.Object getProperty(java.lang.String)>(r1);

        return $r2;
    }

    java.lang.String super$1$toString()
    {
        java.lang.String $r1;
        groovy.swing.factory.DialogFactory r0;

        r0 := @this: groovy.swing.factory.DialogFactory;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    boolean super$2$isLeaf()
    {
        groovy.swing.factory.DialogFactory r0;
        boolean $z0;

        r0 := @this: groovy.swing.factory.DialogFactory;

        $z0 = specialinvoke r0.<groovy.util.AbstractFactory: boolean isLeaf()>();

        return $z0;
    }

    void super$3$setChild(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object)
    {
        groovy.util.FactoryBuilderSupport r1;
        groovy.swing.factory.DialogFactory r0;
        java.lang.Object r2, r3;

        r0 := @this: groovy.swing.factory.DialogFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<groovy.swing.factory.RootPaneContainerFactory: void setChild(groovy.util.FactoryBuilderSupport,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return;
    }

    void super$3$setProperty(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2;
        java.lang.String r1;
        groovy.swing.factory.DialogFactory r0;

        r0 := @this: groovy.swing.factory.DialogFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<groovy.swing.factory.RootPaneContainerFactory: void setProperty(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    void super$1$notify()
    {
        groovy.swing.factory.DialogFactory r0;

        r0 := @this: groovy.swing.factory.DialogFactory;

        specialinvoke r0.<java.lang.Object: void notify()>();

        return;
    }

    void super$1$notifyAll()
    {
        groovy.swing.factory.DialogFactory r0;

        r0 := @this: groovy.swing.factory.DialogFactory;

        specialinvoke r0.<java.lang.Object: void notifyAll()>();

        return;
    }

    void super$2$setParent(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object)
    {
        groovy.util.FactoryBuilderSupport r1;
        groovy.swing.factory.DialogFactory r0;
        java.lang.Object r2, r3;

        r0 := @this: groovy.swing.factory.DialogFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<groovy.util.AbstractFactory: void setParent(groovy.util.FactoryBuilderSupport,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return;
    }

    java.lang.Object super$1$clone()
    {
        java.lang.Object $r1;
        groovy.swing.factory.DialogFactory r0;

        r0 := @this: groovy.swing.factory.DialogFactory;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }

    void super$1$wait()
    {
        groovy.swing.factory.DialogFactory r0;

        r0 := @this: groovy.swing.factory.DialogFactory;

        specialinvoke r0.<java.lang.Object: void wait()>();

        return;
    }

    groovy.lang.MetaClass super$3$getMetaClass()
    {
        groovy.lang.MetaClass $r1;
        groovy.swing.factory.DialogFactory r0;

        r0 := @this: groovy.swing.factory.DialogFactory;

        $r1 = specialinvoke r0.<groovy.swing.factory.RootPaneContainerFactory: groovy.lang.MetaClass getMetaClass()>();

        return $r1;
    }

    void super$3$handleRootPaneTasks(groovy.util.FactoryBuilderSupport, java.awt.Window, java.util.Map)
    {
        groovy.util.FactoryBuilderSupport r1;
        groovy.swing.factory.DialogFactory r0;
        java.awt.Window r2;
        java.util.Map r3;

        r0 := @this: groovy.swing.factory.DialogFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.awt.Window;

        r3 := @parameter2: java.util.Map;

        specialinvoke r0.<groovy.swing.factory.RootPaneContainerFactory: void handleRootPaneTasks(groovy.util.FactoryBuilderSupport,java.awt.Window,java.util.Map)>(r1, r2, r3);

        return;
    }

    void super$1$wait(long, int)
    {
        int i1;
        long l0;
        groovy.swing.factory.DialogFactory r0;

        r0 := @this: groovy.swing.factory.DialogFactory;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void wait(long,int)>(l0, i1);

        return;
    }

    void super$3$setMetaClass(groovy.lang.MetaClass)
    {
        groovy.lang.MetaClass r1;
        groovy.swing.factory.DialogFactory r0;

        r0 := @this: groovy.swing.factory.DialogFactory;

        r1 := @parameter0: groovy.lang.MetaClass;

        specialinvoke r0.<groovy.swing.factory.RootPaneContainerFactory: void setMetaClass(groovy.lang.MetaClass)>(r1);

        return;
    }

    java.lang.Class super$1$getClass()
    {
        java.lang.Class $r1;
        groovy.swing.factory.DialogFactory r0;

        r0 := @this: groovy.swing.factory.DialogFactory;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        return $r1;
    }

    void super$3$onNodeCompleted(groovy.util.FactoryBuilderSupport, java.lang.Object, java.lang.Object)
    {
        groovy.util.FactoryBuilderSupport r1;
        groovy.swing.factory.DialogFactory r0;
        java.lang.Object r2, r3;

        r0 := @this: groovy.swing.factory.DialogFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<groovy.swing.factory.RootPaneContainerFactory: void onNodeCompleted(groovy.util.FactoryBuilderSupport,java.lang.Object,java.lang.Object)>(r1, r2, r3);

        return;
    }

    void super$1$finalize()
    {
        groovy.swing.factory.DialogFactory r0;

        r0 := @this: groovy.swing.factory.DialogFactory;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    void super$1$wait(long)
    {
        long l0;
        groovy.swing.factory.DialogFactory r0;

        r0 := @this: groovy.swing.factory.DialogFactory;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void wait(long)>(l0);

        return;
    }

    boolean super$2$onHandleNodeAttributes(groovy.util.FactoryBuilderSupport, java.lang.Object, java.util.Map)
    {
        groovy.util.FactoryBuilderSupport r1;
        groovy.swing.factory.DialogFactory r0;
        java.util.Map r3;
        java.lang.Object r2;
        boolean $z0;

        r0 := @this: groovy.swing.factory.DialogFactory;

        r1 := @parameter0: groovy.util.FactoryBuilderSupport;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.util.Map;

        $z0 = specialinvoke r0.<groovy.util.AbstractFactory: boolean onHandleNodeAttributes(groovy.util.FactoryBuilderSupport,java.lang.Object,java.util.Map)>(r1, r2, r3);

        return $z0;
    }

    boolean super$1$equals(java.lang.Object)
    {
        java.lang.Object r1;
        groovy.swing.factory.DialogFactory r0;
        boolean $z0;

        r0 := @this: groovy.swing.factory.DialogFactory;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    java.lang.Object super$3$invokeMethod(java.lang.String, java.lang.Object)
    {
        groovy.swing.factory.DialogFactory r0;
        java.lang.Object r2, $r3;
        java.lang.String r1;

        r0 := @this: groovy.swing.factory.DialogFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = specialinvoke r0.<groovy.swing.factory.RootPaneContainerFactory: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>(r1, r2);

        return $r3;
    }

    int super$1$hashCode()
    {
        int $i0;
        groovy.swing.factory.DialogFactory r0;

        r0 := @this: groovy.swing.factory.DialogFactory;

        $i0 = specialinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
