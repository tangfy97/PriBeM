public class org.apache.lucene.index.FieldSortedTermVectorMapper extends org.apache.lucene.index.TermVectorMapper
{
    private java.util.Map fieldToTerms;
    private java.util.SortedSet currentSet;
    private java.lang.String currentField;
    private java.util.Comparator comparator;

    public void <init>(java.util.Comparator)
    {
        java.util.Comparator r1;
        org.apache.lucene.index.FieldSortedTermVectorMapper r0;

        r0 := @this: org.apache.lucene.index.FieldSortedTermVectorMapper;

        r1 := @parameter0: java.util.Comparator;

        specialinvoke r0.<org.apache.lucene.index.FieldSortedTermVectorMapper: void <init>(boolean,boolean,java.util.Comparator)>(0, 0, r1);

        return;
    }

    public void <init>(boolean, boolean, java.util.Comparator)
    {
        java.util.HashMap $r1;
        java.util.Comparator r2;
        org.apache.lucene.index.FieldSortedTermVectorMapper r0;
        boolean z0, z1;

        r0 := @this: org.apache.lucene.index.FieldSortedTermVectorMapper;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r2 := @parameter2: java.util.Comparator;

        specialinvoke r0.<org.apache.lucene.index.TermVectorMapper: void <init>(boolean,boolean)>(z0, z1);

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.lucene.index.FieldSortedTermVectorMapper: java.util.Map fieldToTerms> = $r1;

        r0.<org.apache.lucene.index.FieldSortedTermVectorMapper: java.util.Comparator comparator> = r2;

        return;
    }

    public void map(java.lang.String, int, org.apache.lucene.index.TermVectorOffsetInfo[], int[])
    {
        java.util.SortedSet $r6;
        org.apache.lucene.index.TermVectorOffsetInfo[] r3;
        int[] r4;
        int i0;
        org.apache.lucene.index.TermVectorEntry $r0;
        java.lang.String r2, $r5;
        org.apache.lucene.index.FieldSortedTermVectorMapper r1;

        r1 := @this: org.apache.lucene.index.FieldSortedTermVectorMapper;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r3 := @parameter2: org.apache.lucene.index.TermVectorOffsetInfo[];

        r4 := @parameter3: int[];

        $r0 = new org.apache.lucene.index.TermVectorEntry;

        $r5 = r1.<org.apache.lucene.index.FieldSortedTermVectorMapper: java.lang.String currentField>;

        specialinvoke $r0.<org.apache.lucene.index.TermVectorEntry: void <init>(java.lang.String,java.lang.String,int,org.apache.lucene.index.TermVectorOffsetInfo[],int[])>($r5, r2, i0, r3, r4);

        $r6 = r1.<org.apache.lucene.index.FieldSortedTermVectorMapper: java.util.SortedSet currentSet>;

        interfaceinvoke $r6.<java.util.SortedSet: boolean add(java.lang.Object)>($r0);

        return;
    }

    public void setExpectations(java.lang.String, int, boolean, boolean)
    {
        java.util.SortedSet $r4;
        java.util.TreeSet $r1;
        java.util.Map $r5;
        int i0;
        java.lang.String r3;
        java.util.Comparator $r2;
        org.apache.lucene.index.FieldSortedTermVectorMapper r0;
        boolean z0, z1;

        r0 := @this: org.apache.lucene.index.FieldSortedTermVectorMapper;

        r3 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r1 = new java.util.TreeSet;

        $r2 = r0.<org.apache.lucene.index.FieldSortedTermVectorMapper: java.util.Comparator comparator>;

        specialinvoke $r1.<java.util.TreeSet: void <init>(java.util.Comparator)>($r2);

        r0.<org.apache.lucene.index.FieldSortedTermVectorMapper: java.util.SortedSet currentSet> = $r1;

        r0.<org.apache.lucene.index.FieldSortedTermVectorMapper: java.lang.String currentField> = r3;

        $r5 = r0.<org.apache.lucene.index.FieldSortedTermVectorMapper: java.util.Map fieldToTerms>;

        $r4 = r0.<org.apache.lucene.index.FieldSortedTermVectorMapper: java.util.SortedSet currentSet>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r4);

        return;
    }

    public java.util.Map getFieldToTerms()
    {
        org.apache.lucene.index.FieldSortedTermVectorMapper r0;
        java.util.Map $r1;

        r0 := @this: org.apache.lucene.index.FieldSortedTermVectorMapper;

        $r1 = r0.<org.apache.lucene.index.FieldSortedTermVectorMapper: java.util.Map fieldToTerms>;

        return $r1;
    }

    public java.util.Comparator getComparator()
    {
        java.util.Comparator $r1;
        org.apache.lucene.index.FieldSortedTermVectorMapper r0;

        r0 := @this: org.apache.lucene.index.FieldSortedTermVectorMapper;

        $r1 = r0.<org.apache.lucene.index.FieldSortedTermVectorMapper: java.util.Comparator comparator>;

        return $r1;
    }
}
