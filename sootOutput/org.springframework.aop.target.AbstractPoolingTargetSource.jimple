public abstract class org.springframework.aop.target.AbstractPoolingTargetSource extends org.springframework.aop.target.AbstractPrototypeBasedTargetSource implements org.springframework.aop.target.PoolingConfig, org.springframework.beans.factory.DisposableBean
{
    private int maxSize;

    public void <init>()
    {
        int $i1;
        org.springframework.aop.target.AbstractPoolingTargetSource r0;

        r0 := @this: org.springframework.aop.target.AbstractPoolingTargetSource;

        specialinvoke r0.<org.springframework.aop.target.AbstractPrototypeBasedTargetSource: void <init>()>();

        $i1 = (int) -1;

        r0.<org.springframework.aop.target.AbstractPoolingTargetSource: int maxSize> = $i1;

        return;
    }

    public void setMaxSize(int)
    {
        int i0;
        org.springframework.aop.target.AbstractPoolingTargetSource r0;

        r0 := @this: org.springframework.aop.target.AbstractPoolingTargetSource;

        i0 := @parameter0: int;

        r0.<org.springframework.aop.target.AbstractPoolingTargetSource: int maxSize> = i0;

        return;
    }

    public int getMaxSize()
    {
        int $i0;
        org.springframework.aop.target.AbstractPoolingTargetSource r0;

        r0 := @this: org.springframework.aop.target.AbstractPoolingTargetSource;

        $i0 = r0.<org.springframework.aop.target.AbstractPoolingTargetSource: int maxSize>;

        return $i0;
    }

    public final void setBeanFactory(org.springframework.beans.factory.BeanFactory) throws org.springframework.beans.BeansException
    {
        java.lang.Throwable $r2;
        org.springframework.aop.target.AbstractPoolingTargetSource r0;
        org.springframework.beans.factory.BeanFactory r1;
        org.springframework.beans.factory.BeanInitializationException $r3;

        r0 := @this: org.springframework.aop.target.AbstractPoolingTargetSource;

        r1 := @parameter0: org.springframework.beans.factory.BeanFactory;

        specialinvoke r0.<org.springframework.aop.target.AbstractPrototypeBasedTargetSource: void setBeanFactory(org.springframework.beans.factory.BeanFactory)>(r1);

     label1:
        virtualinvoke r0.<org.springframework.aop.target.AbstractPoolingTargetSource: void createPool()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new org.springframework.beans.factory.BeanInitializationException;

        specialinvoke $r3.<org.springframework.beans.factory.BeanInitializationException: void <init>(java.lang.String,java.lang.Throwable)>("Could not create instance pool for TargetSource", $r2);

        throw $r3;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected abstract void createPool() throws java.lang.Exception;

    public abstract java.lang.Object getTarget() throws java.lang.Exception;

    public abstract void releaseTarget(java.lang.Object) throws java.lang.Exception;

    public org.springframework.aop.support.DefaultIntroductionAdvisor getPoolingConfigMixin()
    {
        org.springframework.aop.support.DelegatingIntroductionInterceptor $r0;
        org.springframework.aop.target.AbstractPoolingTargetSource r1;
        org.springframework.aop.support.DefaultIntroductionAdvisor $r2;

        r1 := @this: org.springframework.aop.target.AbstractPoolingTargetSource;

        $r0 = new org.springframework.aop.support.DelegatingIntroductionInterceptor;

        specialinvoke $r0.<org.springframework.aop.support.DelegatingIntroductionInterceptor: void <init>(java.lang.Object)>(r1);

        $r2 = new org.springframework.aop.support.DefaultIntroductionAdvisor;

        specialinvoke $r2.<org.springframework.aop.support.DefaultIntroductionAdvisor: void <init>(org.springframework.aop.DynamicIntroductionAdvice,java.lang.Class)>($r0, class "Lorg/springframework/aop/target/PoolingConfig;");

        return $r2;
    }
}
