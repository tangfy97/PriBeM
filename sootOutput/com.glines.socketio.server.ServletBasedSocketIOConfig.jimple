public final class com.glines.socketio.server.ServletBasedSocketIOConfig extends java.lang.Object implements com.glines.socketio.server.SocketIOConfig
{
    private static final java.util.logging.Logger LOGGER;
    private static final java.lang.String KEY_TRANSPORT;
    private final javax.servlet.ServletConfig config;
    private final java.lang.String namespace;

    static void <clinit>()
    {
        java.util.logging.Logger $r2;
        java.lang.Class $r0, $r4;
        java.lang.StringBuilder $r3, $r7;
        java.lang.String $r1, $r5, $r6, $r8;

        $r0 = class "Lcom/glines/socketio/server/ServletBasedSocketIOConfig;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.glines.socketio.server.ServletBasedSocketIOConfig: java.util.logging.Logger LOGGER> = $r2;

        $r3 = new java.lang.StringBuilder;

        $r4 = class "Lcom/glines/socketio/server/SocketIOConfig;";

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".TRANSPORTS");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.glines.socketio.server.ServletBasedSocketIOConfig: java.lang.String KEY_TRANSPORT> = $r8;

        return;
    }

    public void <init>(javax.servlet.ServletConfig, java.lang.String)
    {
        com.glines.socketio.server.ServletBasedSocketIOConfig r0;
        java.lang.String r1;
        javax.servlet.ServletConfig r2;

        r0 := @this: com.glines.socketio.server.ServletBasedSocketIOConfig;

        r2 := @parameter0: javax.servlet.ServletConfig;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.glines.socketio.server.ServletBasedSocketIOConfig: java.lang.String namespace> = r1;

        r0.<com.glines.socketio.server.ServletBasedSocketIOConfig: javax.servlet.ServletConfig config> = r2;

        return;
    }

    public long getHeartbeatDelay(long)
    {
        com.glines.socketio.server.ServletBasedSocketIOConfig r0;
        long l0, $l1;

        r0 := @this: com.glines.socketio.server.ServletBasedSocketIOConfig;

        l0 := @parameter0: long;

        $l1 = virtualinvoke r0.<com.glines.socketio.server.ServletBasedSocketIOConfig: long getLong(java.lang.String,long)>("heartbeat-delay", l0);

        return $l1;
    }

    public long getHeartbeatTimeout(long)
    {
        com.glines.socketio.server.ServletBasedSocketIOConfig r0;
        long l0, $l1;

        r0 := @this: com.glines.socketio.server.ServletBasedSocketIOConfig;

        l0 := @parameter0: long;

        $l1 = virtualinvoke r0.<com.glines.socketio.server.ServletBasedSocketIOConfig: long getLong(java.lang.String,long)>("heartbeat-timeout", l0);

        return $l1;
    }

    public long getTimeout(long)
    {
        com.glines.socketio.server.ServletBasedSocketIOConfig r0;
        long l0, $l1;

        r0 := @this: com.glines.socketio.server.ServletBasedSocketIOConfig;

        l0 := @parameter0: long;

        $l1 = virtualinvoke r0.<com.glines.socketio.server.ServletBasedSocketIOConfig: long getLong(java.lang.String,long)>("timeout", l0);

        return $l1;
    }

    public int getBufferSize()
    {
        int $i0;
        com.glines.socketio.server.ServletBasedSocketIOConfig r0;

        r0 := @this: com.glines.socketio.server.ServletBasedSocketIOConfig;

        $i0 = virtualinvoke r0.<com.glines.socketio.server.ServletBasedSocketIOConfig: int getInt(java.lang.String,int)>("bufferSize", 8192);

        return $i0;
    }

    public int getMaxIdle()
    {
        int $i0;
        com.glines.socketio.server.ServletBasedSocketIOConfig r0;

        r0 := @this: com.glines.socketio.server.ServletBasedSocketIOConfig;

        $i0 = virtualinvoke r0.<com.glines.socketio.server.ServletBasedSocketIOConfig: int getInt(java.lang.String,int)>("maxIdleTime", 300000);

        return $i0;
    }

    public void addTransport(com.glines.socketio.server.Transport)
    {
        com.glines.socketio.server.Transport r2;
        java.util.Map $r1;
        com.glines.socketio.server.TransportType $r3;
        com.glines.socketio.server.ServletBasedSocketIOConfig r0;

        r0 := @this: com.glines.socketio.server.ServletBasedSocketIOConfig;

        r2 := @parameter0: com.glines.socketio.server.Transport;

        $r1 = specialinvoke r0.<com.glines.socketio.server.ServletBasedSocketIOConfig: java.util.Map getTransportMap()>();

        $r3 = interfaceinvoke r2.<com.glines.socketio.server.Transport: com.glines.socketio.server.TransportType getType()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r2);

        return;
    }

    public java.util.Collection getTransports()
    {
        com.glines.socketio.server.ServletBasedSocketIOConfig r0;
        java.util.Map $r1;
        java.util.Collection $r2;

        r0 := @this: com.glines.socketio.server.ServletBasedSocketIOConfig;

        $r1 = specialinvoke r0.<com.glines.socketio.server.ServletBasedSocketIOConfig: java.util.Map getTransportMap()>();

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        return $r2;
    }

    public com.glines.socketio.server.Transport getTransport(com.glines.socketio.server.TransportType)
    {
        com.glines.socketio.server.Transport $r4;
        java.util.Map $r1;
        com.glines.socketio.server.TransportType r2;
        com.glines.socketio.server.ServletBasedSocketIOConfig r0;
        java.lang.Object $r3;

        r0 := @this: com.glines.socketio.server.ServletBasedSocketIOConfig;

        r2 := @parameter0: com.glines.socketio.server.TransportType;

        $r1 = specialinvoke r0.<com.glines.socketio.server.ServletBasedSocketIOConfig: java.util.Map getTransportMap()>();

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r4 = (com.glines.socketio.server.Transport) $r3;

        return $r4;
    }

    public void removeTransport(com.glines.socketio.server.TransportType)
    {
        com.glines.socketio.server.TransportType r2;
        com.glines.socketio.server.ServletBasedSocketIOConfig r0;
        java.util.Map $r1;

        r0 := @this: com.glines.socketio.server.ServletBasedSocketIOConfig;

        r2 := @parameter0: com.glines.socketio.server.TransportType;

        $r1 = specialinvoke r0.<com.glines.socketio.server.ServletBasedSocketIOConfig: java.util.Map getTransportMap()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);

        return;
    }

    public com.glines.socketio.server.Transport getWebSocketTransport()
    {
        com.glines.socketio.server.TransportType $r1;
        com.glines.socketio.server.Transport $r2;
        com.glines.socketio.server.ServletBasedSocketIOConfig r0;

        r0 := @this: com.glines.socketio.server.ServletBasedSocketIOConfig;

        $r1 = <com.glines.socketio.server.TransportType: com.glines.socketio.server.TransportType WEB_SOCKET>;

        $r2 = virtualinvoke r0.<com.glines.socketio.server.ServletBasedSocketIOConfig: com.glines.socketio.server.Transport getTransport(com.glines.socketio.server.TransportType)>($r1);

        return $r2;
    }

    public int getInt(java.lang.String, int)
    {
        int i0, $i1;
        com.glines.socketio.server.ServletBasedSocketIOConfig r0;
        java.lang.String r1, $r2;

        r0 := @this: com.glines.socketio.server.ServletBasedSocketIOConfig;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.glines.socketio.server.ServletBasedSocketIOConfig: java.lang.String getString(java.lang.String)>(r1);

        if $r2 != null goto label1;

        $i1 = i0;

        goto label2;

     label1:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

     label2:
        return $i1;
    }

    public long getLong(java.lang.String, long)
    {
        com.glines.socketio.server.ServletBasedSocketIOConfig r0;
        long l0, $l1;
        java.lang.String r1, $r2;

        r0 := @this: com.glines.socketio.server.ServletBasedSocketIOConfig;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r2 = virtualinvoke r0.<com.glines.socketio.server.ServletBasedSocketIOConfig: java.lang.String getString(java.lang.String)>(r1);

        if $r2 != null goto label1;

        $l1 = l0;

        goto label2;

     label1:
        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r2);

     label2:
        return $l1;
    }

    public java.lang.String getNamespace()
    {
        com.glines.socketio.server.ServletBasedSocketIOConfig r0;
        java.lang.String $r1;

        r0 := @this: com.glines.socketio.server.ServletBasedSocketIOConfig;

        $r1 = r0.<com.glines.socketio.server.ServletBasedSocketIOConfig: java.lang.String namespace>;

        return $r1;
    }

    public java.lang.String getString(java.lang.String)
    {
        com.glines.socketio.server.ServletBasedSocketIOConfig r2;
        java.util.logging.Level $r0, $r12;
        java.lang.String $r4, $r6, r8, $r10, $r11, $r18, $r21, $r25, r26;
        boolean $z0, $z1;
        javax.servlet.ServletConfig $r5, $r14;
        java.util.logging.Logger $r1, $r13, $r16, $r20;
        java.lang.StringBuilder $r3, $r7, $r9, $r15, $r17, $r19, $r22, $r23, $r24;

        r2 := @this: com.glines.socketio.server.ServletBasedSocketIOConfig;

        r8 := @parameter0: java.lang.String;

        $r1 = <com.glines.socketio.server.ServletBasedSocketIOConfig: java.util.logging.Logger LOGGER>;

        $r0 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r1.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r0);

        if $z0 == 0 goto label1;

        $r20 = <com.glines.socketio.server.ServletBasedSocketIOConfig: java.util.logging.Logger LOGGER>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>("Getting InitParameter: ");

        $r21 = r2.<com.glines.socketio.server.ServletBasedSocketIOConfig: java.lang.String namespace>;

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<java.util.logging.Logger: void fine(java.lang.String)>($r25);

     label1:
        $r5 = r2.<com.glines.socketio.server.ServletBasedSocketIOConfig: javax.servlet.ServletConfig config>;

        $r3 = new java.lang.StringBuilder;

        $r4 = r2.<com.glines.socketio.server.ServletBasedSocketIOConfig: java.lang.String namespace>;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = interfaceinvoke $r5.<javax.servlet.ServletConfig: java.lang.String getInitParameter(java.lang.String)>($r10);

        r26 = $r11;

        if $r11 != null goto label3;

        $r13 = <com.glines.socketio.server.ServletBasedSocketIOConfig: java.util.logging.Logger LOGGER>;

        $r12 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z1 = virtualinvoke $r13.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r12);

        if $z1 == 0 goto label2;

        $r16 = <com.glines.socketio.server.ServletBasedSocketIOConfig: java.util.logging.Logger LOGGER>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("Fallback to InitParameter: ");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.util.logging.Logger: void fine(java.lang.String)>($r18);

     label2:
        $r14 = r2.<com.glines.socketio.server.ServletBasedSocketIOConfig: javax.servlet.ServletConfig config>;

        r26 = interfaceinvoke $r14.<javax.servlet.ServletConfig: java.lang.String getInitParameter(java.lang.String)>(r8);

     label3:
        return r26;
    }

    public java.lang.String getString(java.lang.String, java.lang.String)
    {
        com.glines.socketio.server.ServletBasedSocketIOConfig r0;
        java.lang.String r1, $r2, r3, $r4;

        r0 := @this: com.glines.socketio.server.ServletBasedSocketIOConfig;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<com.glines.socketio.server.ServletBasedSocketIOConfig: java.lang.String getString(java.lang.String)>(r1);

        if $r2 != null goto label1;

        $r4 = r3;

        goto label2;

     label1:
        $r4 = $r2;

     label2:
        return $r4;
    }

    private java.util.Map getTransportMap()
    {
        javax.servlet.ServletConfig $r1, $r5;
        java.util.concurrent.ConcurrentHashMap $r7;
        com.glines.socketio.server.ServletBasedSocketIOConfig r0;
        java.util.Map r9;
        javax.servlet.ServletContext $r2, $r6;
        java.lang.Object $r4;
        java.lang.String $r3, $r8;

        r0 := @this: com.glines.socketio.server.ServletBasedSocketIOConfig;

        $r1 = r0.<com.glines.socketio.server.ServletBasedSocketIOConfig: javax.servlet.ServletConfig config>;

        $r2 = interfaceinvoke $r1.<javax.servlet.ServletConfig: javax.servlet.ServletContext getServletContext()>();

        $r3 = <com.glines.socketio.server.ServletBasedSocketIOConfig: java.lang.String KEY_TRANSPORT>;

        $r4 = interfaceinvoke $r2.<javax.servlet.ServletContext: java.lang.Object getAttribute(java.lang.String)>($r3);

        r9 = (java.util.Map) $r4;

        if r9 != null goto label1;

        $r5 = r0.<com.glines.socketio.server.ServletBasedSocketIOConfig: javax.servlet.ServletConfig config>;

        $r6 = interfaceinvoke $r5.<javax.servlet.ServletConfig: javax.servlet.ServletContext getServletContext()>();

        $r8 = <com.glines.socketio.server.ServletBasedSocketIOConfig: java.lang.String KEY_TRANSPORT>;

        $r7 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r7.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r9 = $r7;

        interfaceinvoke $r6.<javax.servlet.ServletContext: void setAttribute(java.lang.String,java.lang.Object)>($r8, $r7);

     label1:
        return r9;
    }
}
