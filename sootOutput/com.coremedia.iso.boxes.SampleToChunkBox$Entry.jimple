public class com.coremedia.iso.boxes.SampleToChunkBox$Entry extends java.lang.Object
{
    long firstChunk;
    long samplesPerChunk;
    long sampleDescriptionIndex;

    public void <init>(long, long, long)
    {
        long l0, l1, l2;
        com.coremedia.iso.boxes.SampleToChunkBox$Entry r0;

        r0 := @this: com.coremedia.iso.boxes.SampleToChunkBox$Entry;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long firstChunk> = l0;

        r0.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long samplesPerChunk> = l1;

        r0.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long sampleDescriptionIndex> = l2;

        return;
    }

    public long getFirstChunk()
    {
        long $l0;
        com.coremedia.iso.boxes.SampleToChunkBox$Entry r0;

        r0 := @this: com.coremedia.iso.boxes.SampleToChunkBox$Entry;

        $l0 = r0.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long firstChunk>;

        return $l0;
    }

    public void setFirstChunk(long)
    {
        long l0;
        com.coremedia.iso.boxes.SampleToChunkBox$Entry r0;

        r0 := @this: com.coremedia.iso.boxes.SampleToChunkBox$Entry;

        l0 := @parameter0: long;

        r0.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long firstChunk> = l0;

        return;
    }

    public long getSamplesPerChunk()
    {
        long $l0;
        com.coremedia.iso.boxes.SampleToChunkBox$Entry r0;

        r0 := @this: com.coremedia.iso.boxes.SampleToChunkBox$Entry;

        $l0 = r0.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long samplesPerChunk>;

        return $l0;
    }

    public void setSamplesPerChunk(long)
    {
        long l0;
        com.coremedia.iso.boxes.SampleToChunkBox$Entry r0;

        r0 := @this: com.coremedia.iso.boxes.SampleToChunkBox$Entry;

        l0 := @parameter0: long;

        r0.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long samplesPerChunk> = l0;

        return;
    }

    public long getSampleDescriptionIndex()
    {
        long $l0;
        com.coremedia.iso.boxes.SampleToChunkBox$Entry r0;

        r0 := @this: com.coremedia.iso.boxes.SampleToChunkBox$Entry;

        $l0 = r0.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long sampleDescriptionIndex>;

        return $l0;
    }

    public void setSampleDescriptionIndex(long)
    {
        long l0;
        com.coremedia.iso.boxes.SampleToChunkBox$Entry r0;

        r0 := @this: com.coremedia.iso.boxes.SampleToChunkBox$Entry;

        l0 := @parameter0: long;

        r0.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long sampleDescriptionIndex> = l0;

        return;
    }

    public java.lang.String toString()
    {
        long $l0, $l1, $l2;
        java.lang.StringBuilder $r0, $r2, $r3, $r4, $r5, $r6, $r7;
        com.coremedia.iso.boxes.SampleToChunkBox$Entry r1;
        java.lang.String $r8;

        r1 := @this: com.coremedia.iso.boxes.SampleToChunkBox$Entry;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Entry{firstChunk=");

        $l0 = r1.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long firstChunk>;

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", samplesPerChunk=");

        $l1 = r1.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long samplesPerChunk>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", sampleDescriptionIndex=");

        $l2 = r1.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long sampleDescriptionIndex>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public boolean equals(java.lang.Object)
    {
        long $l0, $l1, $l3, $l4, $l6, $l7;
        byte $b2, $b5, $b8;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        com.coremedia.iso.boxes.SampleToChunkBox$Entry r0, r4;

        r0 := @this: com.coremedia.iso.boxes.SampleToChunkBox$Entry;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

     label2:
        return 0;

     label3:
        r4 = (com.coremedia.iso.boxes.SampleToChunkBox$Entry) r1;

        $l1 = r0.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long firstChunk>;

        $l0 = r4.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long firstChunk>;

        $b2 = $l1 cmp $l0;

        if $b2 == 0 goto label4;

        return 0;

     label4:
        $l4 = r0.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long sampleDescriptionIndex>;

        $l3 = r4.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long sampleDescriptionIndex>;

        $b5 = $l4 cmp $l3;

        if $b5 == 0 goto label5;

        return 0;

     label5:
        $l7 = r0.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long samplesPerChunk>;

        $l6 = r4.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long samplesPerChunk>;

        $b8 = $l7 cmp $l6;

        if $b8 == 0 goto label6;

        return 0;

     label6:
        return 1;
    }

    public int hashCode()
    {
        long $l0, $l1, $l2, $l3, $l4, $l5, $l6, $l7, $l10, $l11, $l12, $l13;
        int $i8, $i9, $i14, $i15, i16, i17, i18;
        com.coremedia.iso.boxes.SampleToChunkBox$Entry r0;

        r0 := @this: com.coremedia.iso.boxes.SampleToChunkBox$Entry;

        $l2 = r0.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long firstChunk>;

        $l0 = r0.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long firstChunk>;

        $l1 = $l0 >>> 32;

        $l3 = $l2 ^ $l1;

        i16 = (int) $l3;

        $i9 = 31 * i16;

        $l6 = r0.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long samplesPerChunk>;

        $l4 = r0.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long samplesPerChunk>;

        $l5 = $l4 >>> 32;

        $l7 = $l6 ^ $l5;

        $i8 = (int) $l7;

        i17 = $i9 + $i8;

        $i15 = 31 * i17;

        $l12 = r0.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long sampleDescriptionIndex>;

        $l10 = r0.<com.coremedia.iso.boxes.SampleToChunkBox$Entry: long sampleDescriptionIndex>;

        $l11 = $l10 >>> 32;

        $l13 = $l12 ^ $l11;

        $i14 = (int) $l13;

        i18 = $i15 + $i14;

        return i18;
    }
}
