public class org.apache.cxf.jaxrs.impl.UriBuilderImpl extends javax.ws.rs.core.UriBuilder implements java.lang.Cloneable
{
    private java.lang.String scheme;
    private java.lang.String userInfo;
    private int port;
    private java.lang.String host;
    private java.util.List paths;
    private boolean leadingSlash;
    private java.lang.String fragment;
    private java.lang.String schemeSpecificPart;
    private javax.ws.rs.core.MultivaluedMap query;
    private javax.ws.rs.core.MultivaluedMap matrix;
    private java.util.Map resolvedTemplates;
    private java.util.Map resolvedTemplatesPathEnc;
    private java.util.Map resolvedEncodedTemplates;

    public void <init>()
    {
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r0;
        org.apache.cxf.jaxrs.impl.MetadataMap $r5, $r6;
        int $i1;
        java.util.ArrayList $r4;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        specialinvoke r0.<javax.ws.rs.core.UriBuilder: void <init>()>();

        $i1 = (int) -1;

        r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: int port> = $i1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.List paths> = $r4;

        $r5 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        specialinvoke $r5.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>()>();

        r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.MultivaluedMap query> = $r5;

        $r6 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        specialinvoke $r6.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>()>();

        r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.MultivaluedMap matrix> = $r6;

        return;
    }

    public void <init>(java.net.URI) throws java.lang.IllegalArgumentException
    {
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r0;
        org.apache.cxf.jaxrs.impl.MetadataMap $r6, $r7;
        int $i1;
        java.net.URI r4;
        java.util.ArrayList $r5;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r4 := @parameter0: java.net.URI;

        specialinvoke r0.<javax.ws.rs.core.UriBuilder: void <init>()>();

        $i1 = (int) -1;

        r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: int port> = $i1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.List paths> = $r5;

        $r6 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        specialinvoke $r6.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>()>();

        r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.MultivaluedMap query> = $r6;

        $r7 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        specialinvoke $r7.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>()>();

        r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.MultivaluedMap matrix> = $r7;

        specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: void setUriParts(java.net.URI)>(r4);

        return;
    }

    public transient java.net.URI build(java.lang.Object[]) throws java.lang.IllegalArgumentException, javax.ws.rs.core.UriBuilderException
    {
        java.lang.Object[] r1;
        java.net.URI $r2;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r1 := @parameter0: java.lang.Object[];

        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.net.URI doBuild(boolean,boolean,java.lang.Object[])>(0, 1, r1);

        return $r2;
    }

    private static java.util.Map getResolvedTemplates(java.util.Map)
    {
        java.util.LinkedHashMap $r2;
        java.util.Map r0, $r1;

        r0 := @parameter0: java.util.Map;

        if r0 != null goto label1;

        $r1 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        goto label2;

     label1:
        $r2 = new java.util.LinkedHashMap;

        $r1 = $r2;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>(java.util.Map)>(r0);

     label2:
        return $r1;
    }

    private transient java.net.URI doBuild(boolean, boolean, java.lang.Object[])
    {
        java.lang.Object[] r0;
        java.net.URISyntaxException $r10;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl$UriParts $r2;
        int $i0, i1;
        java.lang.String $r3, $r4, $r5;
        java.net.URI $r6;
        boolean z0, z1;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r1;
        javax.ws.rs.core.UriBuilderException $r11;
        java.lang.IllegalArgumentException $r8, $r9;
        java.lang.Object $r7;

        r1 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r0 := @parameter2: java.lang.Object[];

        if r0 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Template parameter values are set to null");

        throw $r9;

     label1:
        i1 = 0;

     label2:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label4;

        $r7 = r0[i1];

        if $r7 != null goto label3;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Template parameter value is set to null");

        throw $r8;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        $r2 = specialinvoke r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: org.apache.cxf.jaxrs.impl.UriBuilderImpl$UriParts doBuildUriParts(boolean,boolean,boolean,java.lang.Object[])>(z0, z1, 0, r0);

     label5:
        $r5 = $r2.<org.apache.cxf.jaxrs.impl.UriBuilderImpl$UriParts: java.lang.String path>;

        $r4 = $r2.<org.apache.cxf.jaxrs.impl.UriBuilderImpl$UriParts: java.lang.String query>;

        $r3 = $r2.<org.apache.cxf.jaxrs.impl.UriBuilderImpl$UriParts: java.lang.String fragment>;

        $r6 = specialinvoke r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.net.URI buildURI(boolean,java.lang.String,java.lang.String,java.lang.String)>(z0, $r5, $r4, $r3);

     label6:
        return $r6;

     label7:
        $r10 := @caughtexception;

        $r11 = new javax.ws.rs.core.UriBuilderException;

        specialinvoke $r11.<javax.ws.rs.core.UriBuilderException: void <init>(java.lang.String,java.lang.Throwable)>("URI can not be built", $r10);

        throw $r11;

        catch java.net.URISyntaxException from label5 to label6 with label7;
    }

    private transient org.apache.cxf.jaxrs.impl.UriBuilderImpl$UriParts doBuildUriParts(boolean, boolean, boolean, java.lang.Object[])
    {
        org.apache.cxf.jaxrs.impl.UriBuilderImpl$UriParts $r20;
        java.util.Map $r1, $r2, $r3, $r4, $r5, $r6;
        boolean z0, z1, z2;
        java.util.List $r11, $r14, $r16;
        java.lang.Object[] r9;
        org.apache.cxf.jaxrs.model.URITemplate $r8, $r13, $r15;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, i30, i31;
        java.lang.String $r7, $r10, $r12, r17, $r18, r19;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        z0 := @parameter0: boolean;

        z2 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r9 := @parameter3: java.lang.Object[];

        $r1 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.Map resolvedTemplates>;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.Map getResolvedTemplates(java.util.Map)>($r1);

        $r3 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.Map resolvedTemplatesPathEnc>;

        $r4 = staticinvoke <org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.Map getResolvedTemplates(java.util.Map)>($r3);

        $r5 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.Map resolvedEncodedTemplates>;

        $r6 = staticinvoke <org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.Map getResolvedTemplates(java.util.Map)>($r5);

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        $i1 = interfaceinvoke $r6.<java.util.Map: int size()>();

        $i2 = $i0 + $i1;

        $i3 = interfaceinvoke $r4.<java.util.Map: int size()>();

        i4 = $i2 + $i3;

        $r7 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String buildPath()>();

        $r8 = new org.apache.cxf.jaxrs.model.URITemplate;

        specialinvoke $r8.<org.apache.cxf.jaxrs.model.URITemplate: void <init>(java.lang.String)>($r7);

        $r10 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String substituteVarargs(org.apache.cxf.jaxrs.model.URITemplate,java.util.Map,java.util.Map,java.util.Map,java.lang.Object[],int,boolean,boolean,boolean,boolean)>($r8, $r2, $r4, $r6, r9, 0, 0, z0, z1, z2);

        $r11 = virtualinvoke $r8.<org.apache.cxf.jaxrs.model.URITemplate: java.util.List getVariables()>();

        $i5 = interfaceinvoke $r11.<java.util.List: int size()>();

        $r12 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String buildQuery()>();

        r17 = $r12;

        i30 = 0;

        if $r12 == null goto label1;

        $r15 = new org.apache.cxf.jaxrs.model.URITemplate;

        specialinvoke $r15.<org.apache.cxf.jaxrs.model.URITemplate: void <init>(java.lang.String)>($r12);

        $r16 = virtualinvoke $r15.<org.apache.cxf.jaxrs.model.URITemplate: java.util.List getVariables()>();

        $i19 = interfaceinvoke $r16.<java.util.List: int size()>();

        i30 = $i19;

        if $i19 <= 0 goto label1;

        $i20 = lengthof r9;

        $i21 = $i20 + i4;

        $i22 = interfaceinvoke $r2.<java.util.Map: int size()>();

        $i23 = $i21 - $i22;

        $i24 = interfaceinvoke $r4.<java.util.Map: int size()>();

        $i25 = $i23 - $i24;

        $i26 = interfaceinvoke $r6.<java.util.Map: int size()>();

        $i27 = $i25 - $i26;

        i31 = $i27 - $i5;

        $i28 = lengthof r9;

        $i29 = $i28 - i31;

        r17 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String substituteVarargs(org.apache.cxf.jaxrs.model.URITemplate,java.util.Map,java.util.Map,java.util.Map,java.lang.Object[],int,boolean,boolean,boolean,boolean)>($r15, $r2, $r4, $r6, r9, $i29, 1, z0, z1, 0);

     label1:
        $r18 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String fragment>;

        r19 = $r18;

        if $r18 == null goto label2;

        $r13 = new org.apache.cxf.jaxrs.model.URITemplate;

        specialinvoke $r13.<org.apache.cxf.jaxrs.model.URITemplate: void <init>(java.lang.String)>($r18);

        $r14 = virtualinvoke $r13.<org.apache.cxf.jaxrs.model.URITemplate: java.util.List getVariables()>();

        $i6 = interfaceinvoke $r14.<java.util.List: int size()>();

        if $i6 <= 0 goto label2;

        $i7 = lengthof r9;

        $i8 = $i7 + i4;

        $i9 = interfaceinvoke $r2.<java.util.Map: int size()>();

        $i10 = $i8 - $i9;

        $i11 = interfaceinvoke $r4.<java.util.Map: int size()>();

        $i12 = $i10 - $i11;

        $i13 = interfaceinvoke $r6.<java.util.Map: int size()>();

        $i14 = $i12 - $i13;

        $i15 = $i14 - $i5;

        i16 = $i15 - i30;

        $i17 = lengthof r9;

        $i18 = $i17 - i16;

        r19 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String substituteVarargs(org.apache.cxf.jaxrs.model.URITemplate,java.util.Map,java.util.Map,java.util.Map,java.lang.Object[],int,boolean,boolean,boolean,boolean)>($r13, $r2, $r4, $r6, r9, $i18, 1, z0, z1, 0);

     label2:
        $r20 = new org.apache.cxf.jaxrs.impl.UriBuilderImpl$UriParts;

        specialinvoke $r20.<org.apache.cxf.jaxrs.impl.UriBuilderImpl$UriParts: void <init>(org.apache.cxf.jaxrs.impl.UriBuilderImpl,java.lang.String,java.lang.String,java.lang.String)>(r0, $r10, r17, r19);

        return $r20;
    }

    private java.net.URI buildURI(boolean, java.lang.String, java.lang.String, java.lang.String) throws java.net.URISyntaxException
    {
        int $i0, $i1;
        java.net.URI $r1, $r12, $r14, $r23, r24;
        java.lang.String r2, $r3, $r4, $r5, r6, $r10, $r11, $r15, $r16, $r17, $r18, $r19, $r20, $r21, r22;
        boolean z0, $z1, $z2, $z3;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r0;
        java.lang.Exception $r13;
        java.lang.StringBuilder $r7, $r8, $r9;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        z0 := @parameter0: boolean;

        r22 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        if z0 == 0 goto label1;

        $r12 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.net.URI buildURIFromEncoded(java.lang.String,java.lang.String,java.lang.String)>(r22, r6, r2);

        return $r12;

     label1:
        $z1 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: boolean isSchemeOpaque()>();

        if $z1 != 0 goto label7;

        $r5 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String scheme>;

        if $r5 != null goto label2;

        $r10 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String host>;

        if $r10 != null goto label2;

        $r11 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String userInfo>;

        if $r11 == null goto label3;

     label2:
        $i1 = virtualinvoke r22.<java.lang.String: int length()>();

        if $i1 == 0 goto label3;

        $z2 = virtualinvoke r22.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z2 != 0 goto label3;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        r22 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $r23 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.net.URI buildURIFromEncoded(java.lang.String,java.lang.String,java.lang.String)>(r22, r6, r2);

     label4:
        return $r23;

     label5:
        $r13 := @caughtexception;

        $r14 = new java.net.URI;

        $r17 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String scheme>;

        $r16 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String userInfo>;

        $r15 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String host>;

        $i0 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: int port>;

        specialinvoke $r14.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>($r17, $r16, $r15, $i0, r22, r6, r2);

        r24 = $r14;

        $z3 = virtualinvoke r22.<java.lang.String: boolean contains(java.lang.CharSequence)>("%2F");

        if $z3 == 0 goto label6;

        $r18 = virtualinvoke $r14.<java.net.URI: java.lang.String getRawPath()>();

        $r19 = virtualinvoke $r18.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("%252F", "%2F");

        $r20 = virtualinvoke $r14.<java.net.URI: java.lang.String getRawQuery()>();

        $r21 = virtualinvoke $r14.<java.net.URI: java.lang.String getRawFragment()>();

        r24 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.net.URI buildURIFromEncoded(java.lang.String,java.lang.String,java.lang.String)>($r19, $r20, $r21);

     label6:
        return r24;

     label7:
        $r1 = new java.net.URI;

        $r4 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String scheme>;

        $r3 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String schemeSpecificPart>;

        specialinvoke $r1.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r4, $r3, r2);

        return $r1;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    private java.net.URI buildURIFromEncoded(java.lang.String, java.lang.String, java.lang.String) throws java.net.URISyntaxException
    {
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r1;
        java.net.URI $r0;
        java.lang.String r2, r3, r4, $r5;

        r1 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r0 = new java.net.URI;

        $r5 = specialinvoke r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String buildUriString(java.lang.String,java.lang.String,java.lang.String)>(r2, r3, r4);

        specialinvoke $r0.<java.net.URI: void <init>(java.lang.String)>($r5);

        return $r0;
    }

    private java.lang.String buildUriString(java.lang.String, java.lang.String, java.lang.String)
    {
        int $i0, $i1, $i2, $i3, $i4, $i6;
        java.lang.String $r2, $r3, r4, $r5, $r7, $r8, $r9, r10, r11, $r17, $r18, $r20, $r22;
        boolean $z0, $z1;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r1;
        java.lang.StringBuilder $r6, $r12, $r14, $r15, $r16, $r19, $r21, $r23, $r24;

        r1 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r10 := @parameter0: java.lang.String;

        r11 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String scheme>;

        if $r2 == null goto label01;

        $r20 = r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String scheme>;

        $r21 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

     label01:
        $z0 = specialinvoke r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: boolean isSchemeOpaque()>();

        if $z0 != 0 goto label10;

        $r7 = r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String scheme>;

        if $r7 == null goto label02;

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("//");

     label02:
        $r8 = r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String userInfo>;

        if $r8 == null goto label03;

        $r18 = r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String userInfo>;

        $r19 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(64);

     label03:
        $r9 = r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String host>;

        if $r9 == null goto label04;

        $r17 = r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String host>;

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

     label04:
        $i0 = r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: int port>;

        $i6 = (int) -1;

        if $i0 == $i6 goto label05;

        $r16 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $i4 = r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: int port>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

     label05:
        if r10 == null goto label09;

        $i2 = virtualinvoke r10.<java.lang.String: int length()>();

        if $i2 <= 0 goto label09;

        $z1 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z1 != 0 goto label06;

        $i3 = virtualinvoke $r23.<java.lang.StringBuilder: int length()>();

        if $i3 != 0 goto label07;

     label06:
        $r22 = r10;

        goto label08;

     label07:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r22 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

     label08:
        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

     label09:
        if r11 == null goto label11;

        $i1 = virtualinvoke r11.<java.lang.String: int length()>();

        if $i1 == 0 goto label11;

        $r12 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(63);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        goto label11;

     label10:
        $r3 = r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String schemeSpecificPart>;

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label11:
        if r4 == null goto label12;

        $r6 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(35);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

     label12:
        $r5 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    private boolean isSchemeOpaque()
    {
        java.lang.String $r1;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        $r1 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String schemeSpecificPart>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public transient java.net.URI buildFromEncoded(java.lang.Object[]) throws java.lang.IllegalArgumentException, javax.ws.rs.core.UriBuilderException
    {
        java.lang.Object[] r1;
        java.net.URI $r2;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r1 := @parameter0: java.lang.Object[];

        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.net.URI doBuild(boolean,boolean,java.lang.Object[])>(1, 0, r1);

        return $r2;
    }

    public java.net.URI buildFromMap(java.util.Map) throws java.lang.IllegalArgumentException, javax.ws.rs.core.UriBuilderException
    {
        java.net.URI $r2;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r0;
        java.util.Map r1;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r1 := @parameter0: java.util.Map;

        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.net.URI doBuildFromMap(java.util.Map,boolean,boolean)>(r1, 0, 1);

        return $r2;
    }

    private java.net.URI doBuildFromMap(java.util.Map, boolean, boolean) throws java.lang.IllegalArgumentException, javax.ws.rs.core.UriBuilderException
    {
        java.net.URISyntaxException $r14;
        java.util.Map $r1, $r2, $r3, $r4, $r5, $r6, r8;
        java.lang.String $r7, $r9, $r10, $r11, $r12, r16, $r17;
        java.net.URI $r13;
        boolean z0, z1;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r0;
        javax.ws.rs.core.UriBuilderException $r15;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r8 := @parameter0: java.util.Map;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

     label1:
        $r1 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.Map resolvedTemplates>;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.Map getResolvedTemplates(java.util.Map)>($r1);

        $r3 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.Map resolvedTemplatesPathEnc>;

        $r4 = staticinvoke <org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.Map getResolvedTemplates(java.util.Map)>($r3);

        $r5 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.Map resolvedEncodedTemplates>;

        $r6 = staticinvoke <org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.Map getResolvedTemplates(java.util.Map)>($r5);

        $r7 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String buildPath()>();

        $r9 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String substituteMapped(java.lang.String,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean,boolean)>($r7, r8, $r2, $r4, $r6, 0, z0, z1);

        $r10 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String buildQuery()>();

        r16 = $r10;

        if $r10 == null goto label2;

        r16 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String substituteMapped(java.lang.String,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean,boolean)>($r10, r8, $r2, $r4, $r6, 1, z0, 0);

     label2:
        $r11 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String fragment>;

        if $r11 != null goto label3;

        $r17 = null;

        goto label4;

     label3:
        $r12 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String fragment>;

        $r17 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String substituteMapped(java.lang.String,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean,boolean,boolean)>($r12, r8, $r2, $r4, $r6, 1, z0, z1);

     label4:
        $r13 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.net.URI buildURI(boolean,java.lang.String,java.lang.String,java.lang.String)>(z0, $r9, r16, $r17);

     label5:
        return $r13;

     label6:
        $r14 := @caughtexception;

        $r15 = new javax.ws.rs.core.UriBuilderException;

        specialinvoke $r15.<javax.ws.rs.core.UriBuilderException: void <init>(java.lang.String,java.lang.Throwable)>("URI can not be built", $r14);

        throw $r15;

        catch java.net.URISyntaxException from label1 to label5 with label6;
    }

    private java.lang.String substituteVarargs(org.apache.cxf.jaxrs.model.URITemplate, java.util.Map, java.util.Map, java.util.Map, java.lang.Object[], int, boolean, boolean, boolean, boolean)
    {
        java.util.Map r4, r9, r17, $r29;
        boolean z0, $z1, z2, z3, z4, z5, $z6, $z7, $z8, $z10, $z11, $z12, $z13;
        java.util.Set r5, $r27;
        java.util.List $r3;
        java.lang.StringBuilder $r13, $r14, $r20, $r21, $r22, $r23, $r24, $r36, $r39;
        java.lang.Object[] r16;
        org.apache.cxf.jaxrs.model.URITemplate r2;
        java.util.HashMap $r34;
        java.util.HashSet $r38;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12;
        java.lang.String $r6, r8, $r10, $r15, $r25, r32, $r33;
        java.util.LinkedHashSet $r35;
        java.util.Iterator $r28;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r26;
        java.lang.IllegalArgumentException $r37, $r40;
        java.lang.Object $r7, $r30, r31;

        r26 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r2 := @parameter0: org.apache.cxf.jaxrs.model.URITemplate;

        r9 := @parameter1: java.util.Map;

        r4 := @parameter2: java.util.Map;

        r17 := @parameter3: java.util.Map;

        r16 := @parameter4: java.lang.Object[];

        i0 := @parameter5: int;

        z2 := @parameter6: boolean;

        z4 := @parameter7: boolean;

        z0 := @parameter8: boolean;

        z5 := @parameter9: boolean;

        $r34 = new java.util.HashMap;

        specialinvoke $r34.<java.util.HashMap: void <init>()>();

        $r35 = new java.util.LinkedHashSet;

        $r3 = virtualinvoke r2.<org.apache.cxf.jaxrs.model.URITemplate: java.util.List getVariables()>();

        specialinvoke $r35.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r3);

        if z0 != 0 goto label01;

        $i2 = lengthof r16;

        $i3 = interfaceinvoke r9.<java.util.Map: int size()>();

        $i4 = $i2 + $i3;

        $i5 = interfaceinvoke r17.<java.util.Map: int size()>();

        $i6 = $i4 + $i5;

        $i7 = interfaceinvoke r4.<java.util.Map: int size()>();

        $i8 = $i6 + $i7;

        $i9 = interfaceinvoke $r35.<java.util.Set: int size()>();

        if $i8 >= $i9 goto label01;

        $r37 = new java.lang.IllegalArgumentException;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unresolved variables; only ");

        $i10 = lengthof r16;

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" value(s) given for ");

        $i11 = interfaceinvoke $r35.<java.util.Set: int size()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unique variable(s)");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r25);

        throw $r37;

     label01:
        i12 = i0;

        $z1 = interfaceinvoke r4.<java.util.Map: boolean isEmpty()>();

        if $z1 == 0 goto label02;

        if z5 != 0 goto label02;

        $r27 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        goto label03;

     label02:
        $r38 = new java.util.HashSet;

        $r27 = $r38;

        specialinvoke $r38.<java.util.HashSet: void <init>()>();

     label03:
        r5 = $r27;

        $r28 = interfaceinvoke $r35.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z8 = interfaceinvoke $r28.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label24;

        $r7 = interfaceinvoke $r28.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r7;

        if z2 != 0 goto label05;

        $z7 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r8);

        if $z7 == 0 goto label05;

        $z13 = 1;

        $z12 = 1;

        goto label06;

     label05:
        $z13 = 0;

        $z12 = 0;

     label06:
        z3 = $z12;

        if $z13 != 0 goto label07;

        $z6 = interfaceinvoke r9.<java.util.Map: boolean containsKey(java.lang.Object)>(r8);

        if $z6 == 0 goto label08;

     label07:
        $z10 = 0;

        goto label09;

     label08:
        $z10 = 1;

     label09:
        if $z10 == 0 goto label10;

        $r29 = r17;

        goto label12;

     label10:
        if z3 == 0 goto label11;

        $r29 = r4;

        goto label12;

     label11:
        $r29 = r9;

     label12:
        $z11 = interfaceinvoke $r29.<java.util.Map: boolean isEmpty()>();

        if $z11 == 0 goto label13;

        $r30 = null;

        goto label14;

     label13:
        $r30 = interfaceinvoke $r29.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r8);

     label14:
        r31 = $r30;

        if $r30 != null goto label16;

        if z0 == 0 goto label15;

        goto label04;

     label15:
        $i1 = i12;

        i12 = i12 + 1;

        r31 = r16[$i1];

     label16:
        if r31 != null goto label17;

        $r40 = new java.lang.IllegalArgumentException;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No object for ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r40.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r40;

     label17:
        $r10 = virtualinvoke r31.<java.lang.Object: java.lang.String toString()>();

        if z4 == 0 goto label18;

        r32 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String encodePartiallyEncoded(java.lang.String,boolean)>($r10, z2);

        goto label21;

     label18:
        if z2 == 0 goto label19;

        $r33 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String queryEncode(java.lang.String)>($r10);

        goto label20;

     label19:
        $r33 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String pathEncode(java.lang.String)>($r10);

     label20:
        r32 = $r33;

     label21:
        interfaceinvoke $r34.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, r32);

        if z2 != 0 goto label23;

        if z3 != 0 goto label22;

        if z5 == 0 goto label23;

     label22:
        interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>(r8);

     label23:
        goto label04;

     label24:
        $r6 = virtualinvoke r2.<org.apache.cxf.jaxrs.model.URITemplate: java.lang.String substitute(java.util.Map,java.util.Set,boolean)>($r34, r5, z0);

        return $r6;
    }

    private java.lang.String substituteMapped(java.lang.String, java.util.Map, java.util.Map, java.util.Map, java.util.Map, boolean, boolean, boolean)
    {
        java.util.Map r4, r5, r6, r7, $r32;
        boolean $z0, z1, z2, z3, z4, $z5, $z6, $z7, $z9, $z10, $z11, $z12;
        java.util.Set r8, $r29;
        java.util.List $r3;
        java.lang.StringBuilder $r17, $r18, $r22, $r23, $r24, $r25, $r26, $r39, $r43;
        org.apache.cxf.jaxrs.model.URITemplate $r37;
        java.util.HashSet $r38, $r41;
        java.util.LinkedHashMap $r42;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String r1, $r9, r11, $r12, $r13, $r14, $r19, $r27, r35, $r36;
        java.util.Iterator $r31;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r28;
        java.lang.IllegalArgumentException $r40, $r44;
        java.lang.Object $r10, $r33, r34;

        r28 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.util.Map;

        r5 := @parameter2: java.util.Map;

        r7 := @parameter3: java.util.Map;

        r6 := @parameter4: java.util.Map;

        z1 := @parameter5: boolean;

        z3 := @parameter6: boolean;

        z4 := @parameter7: boolean;

        $r37 = new org.apache.cxf.jaxrs.model.URITemplate;

        specialinvoke $r37.<org.apache.cxf.jaxrs.model.URITemplate: void <init>(java.lang.String)>(r1);

        $r38 = new java.util.HashSet;

        $r3 = virtualinvoke $r37.<org.apache.cxf.jaxrs.model.URITemplate: java.util.List getVariables()>();

        specialinvoke $r38.<java.util.HashSet: void <init>(java.util.Collection)>($r3);

        $i0 = interfaceinvoke r4.<java.util.Map: int size()>();

        $i1 = interfaceinvoke r5.<java.util.Map: int size()>();

        $i2 = $i0 + $i1;

        $i3 = interfaceinvoke r6.<java.util.Map: int size()>();

        $i4 = $i2 + $i3;

        $i5 = interfaceinvoke r7.<java.util.Map: int size()>();

        $i6 = $i4 + $i5;

        $i7 = interfaceinvoke $r38.<java.util.Set: int size()>();

        if $i6 >= $i7 goto label01;

        $r40 = new java.lang.IllegalArgumentException;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unresolved variables; only ");

        $i8 = interfaceinvoke r4.<java.util.Map: int size()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" value(s) given for ");

        $i9 = interfaceinvoke $r38.<java.util.Set: int size()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unique variable(s)");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r40.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r27);

        throw $r40;

     label01:
        $z0 = interfaceinvoke r7.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label02;

        if z4 != 0 goto label02;

        $r29 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        goto label03;

     label02:
        $r41 = new java.util.HashSet;

        $r29 = $r41;

        specialinvoke $r41.<java.util.HashSet: void <init>()>();

     label03:
        r8 = $r29;

        $r42 = new java.util.LinkedHashMap;

        specialinvoke $r42.<java.util.LinkedHashMap: void <init>()>();

        $r31 = interfaceinvoke $r38.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z7 = interfaceinvoke $r31.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label23;

        $r10 = interfaceinvoke $r31.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.lang.String) $r10;

        if z1 != 0 goto label05;

        $z6 = interfaceinvoke r7.<java.util.Map: boolean containsKey(java.lang.Object)>(r11);

        if $z6 == 0 goto label05;

        $z12 = 1;

        $z11 = 1;

        goto label06;

     label05:
        $z12 = 0;

        $z11 = 0;

     label06:
        z2 = $z12;

        if $z11 != 0 goto label07;

        $z5 = interfaceinvoke r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r11);

        if $z5 == 0 goto label08;

     label07:
        $z9 = 0;

        goto label09;

     label08:
        $z9 = 1;

     label09:
        if $z9 == 0 goto label10;

        $r32 = r6;

        goto label12;

     label10:
        if z2 == 0 goto label11;

        $r32 = r7;

        goto label12;

     label11:
        $r32 = r5;

     label12:
        $z10 = interfaceinvoke $r32.<java.util.Map: boolean isEmpty()>();

        if $z10 == 0 goto label13;

        $r33 = null;

        goto label14;

     label13:
        $r33 = interfaceinvoke $r32.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r11);

     label14:
        r34 = $r33;

        if $r33 != null goto label15;

        r34 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r11);

     label15:
        if r34 != null goto label16;

        $r44 = new java.lang.IllegalArgumentException;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No object for ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r44.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r44;

     label16:
        if z3 == 0 goto label17;

        $r14 = virtualinvoke r34.<java.lang.Object: java.lang.String toString()>();

        r35 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String encodePartiallyEncoded(java.lang.String,boolean)>($r14, z1);

        goto label20;

     label17:
        if z1 == 0 goto label18;

        $r13 = virtualinvoke r34.<java.lang.Object: java.lang.String toString()>();

        $r36 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String queryEncode(java.lang.String)>($r13);

        goto label19;

     label18:
        $r12 = virtualinvoke r34.<java.lang.Object: java.lang.String toString()>();

        $r36 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String pathEncode(java.lang.String)>($r12);

     label19:
        r35 = $r36;

     label20:
        interfaceinvoke $r42.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, r35);

        if z1 != 0 goto label22;

        if z2 != 0 goto label21;

        if z4 == 0 goto label22;

     label21:
        interfaceinvoke r8.<java.util.Set: boolean add(java.lang.Object)>(r11);

     label22:
        goto label04;

     label23:
        $r9 = virtualinvoke $r37.<org.apache.cxf.jaxrs.model.URITemplate: java.lang.String substitute(java.util.Map,java.util.Set,boolean)>($r42, r8, 0);

        return $r9;
    }

    public java.net.URI buildFromEncodedMap(java.util.Map) throws java.lang.IllegalArgumentException, javax.ws.rs.core.UriBuilderException
    {
        java.util.HashMap $r0;
        java.lang.String[] $r14;
        java.util.Map r1;
        int $i0, $i1, $i2, $i3, i4;
        java.net.URI $r5;
        java.lang.String $r10, $r12, $r16, $r17, $r18;
        boolean $z0, $z1;
        java.util.Map$Entry r7;
        java.util.Iterator $r3;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r4;
        java.util.Set $r2;
        java.lang.IllegalArgumentException $r19;
        java.lang.Object $r6, $r8, $r9, $r11, $r15;
        java.lang.StringBuilder $r13;

        r4 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r1 := @parameter0: java.util.Map;

        $r0 = new java.util.HashMap;

        $i0 = interfaceinvoke r1.<java.util.Map: int size()>();

        specialinvoke $r0.<java.util.HashMap: void <init>(int)>($i0);

        $r2 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r6 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r8 != null goto label2;

        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Value is null");

        throw $r19;

     label2:
        $r9 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean contains(java.lang.CharSequence)>("/");

        if $z1 == 0 goto label6;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = staticinvoke <org.apache.cxf.common.util.StringUtils: java.lang.String[] split(java.lang.String,java.lang.String)>($r10, "/");

        i4 = 0;

     label3:
        $i1 = lengthof $r14;

        if i4 >= $i1 goto label5;

        $r17 = $r14[i4];

        $r18 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String encodePartiallyEncoded(java.lang.String,boolean)>($r17, 0);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $i3 = i4 + 1;

        $i2 = lengthof $r14;

        if $i3 >= $i2 goto label4;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

     label4:
        i4 = i4 + 1;

        goto label3;

     label5:
        $r15 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r16);

        goto label7;

     label6:
        $r11 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String encodePartiallyEncoded(java.lang.String,boolean)>($r10, 0);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r12);

     label7:
        goto label1;

     label8:
        $r5 = specialinvoke r4.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.net.URI doBuildFromMap(java.util.Map,boolean,boolean)>($r0, 1, 0);

        return $r5;
    }

    public javax.ws.rs.core.UriBuilder clone()
    {
        org.apache.cxf.jaxrs.impl.UriBuilderImpl $r0, r1;
        org.apache.cxf.jaxrs.impl.MetadataMap $r8, $r10;
        java.util.ArrayList $r5;
        javax.ws.rs.core.MultivaluedMap $r9, $r11;
        java.util.List $r6;
        int $i0;
        java.lang.String $r2, $r3, $r4, $r7, $r12;
        boolean $z0;

        r1 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        $r0 = new org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        specialinvoke $r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: void <init>()>();

        $r2 = r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String scheme>;

        $r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String scheme> = $r2;

        $r3 = r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String userInfo>;

        $r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String userInfo> = $r3;

        $i0 = r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: int port>;

        $r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: int port> = $i0;

        $r4 = r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String host>;

        $r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String host> = $r4;

        $r5 = new java.util.ArrayList;

        $r6 = r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.List paths>;

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r6);

        $r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.List paths> = $r5;

        $r7 = r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String fragment>;

        $r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String fragment> = $r7;

        $r8 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        $r9 = r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.MultivaluedMap query>;

        specialinvoke $r8.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>(java.util.Map)>($r9);

        $r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.MultivaluedMap query> = $r8;

        $r10 = new org.apache.cxf.jaxrs.impl.MetadataMap;

        $r11 = r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.MultivaluedMap matrix>;

        specialinvoke $r10.<org.apache.cxf.jaxrs.impl.MetadataMap: void <init>(java.util.Map)>($r11);

        $r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.MultivaluedMap matrix> = $r10;

        $r12 = r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String schemeSpecificPart>;

        $r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String schemeSpecificPart> = $r12;

        $z0 = r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: boolean leadingSlash>;

        $r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: boolean leadingSlash> = $z0;

        return $r0;
    }

    public javax.ws.rs.core.UriBuilder fragment(java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.lang.String r1;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String fragment> = r1;

        return r0;
    }

    public javax.ws.rs.core.UriBuilder host(java.lang.String) throws java.lang.IllegalArgumentException
    {
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r2;
        java.lang.String r0, $r1;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;

        r2 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r0 := @parameter0: java.lang.String;

        $r1 = "";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Host cannot be empty");

        throw $r3;

     label1:
        r2.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String host> = r0;

        return r2;
    }

    public javax.ws.rs.core.UriBuilder path(java.lang.Class) throws java.lang.IllegalArgumentException
    {
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r3;
        javax.ws.rs.Path r2;
        java.lang.IllegalArgumentException $r6, $r13;
        java.lang.'annotation'.Annotation $r1;
        java.lang.Class r0;
        javax.ws.rs.core.UriBuilder $r5;
        java.lang.StringBuilder $r7, $r8, $r10, $r11;
        java.lang.String $r4, $r9, $r12;

        r3 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r0 := @parameter0: java.lang.Class;

        if r0 != null goto label1;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("resource is null");

        throw $r13;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Ljavax/ws/rs/Path;");

        r2 = (javax.ws.rs.Path) $r1;

        if r2 != null goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Class \'");

        $r9 = virtualinvoke r0.<java.lang.Class: java.lang.String getCanonicalName()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is not annotated with Path");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r6;

     label2:
        $r4 = interfaceinvoke r2.<javax.ws.rs.Path: java.lang.String value()>();

        $r5 = virtualinvoke r3.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.UriBuilder path(java.lang.String)>($r4);

        return $r5;
    }

    public javax.ws.rs.core.UriBuilder path(java.lang.Class, java.lang.String) throws java.lang.IllegalArgumentException
    {
        javax.ws.rs.Path r15, r24;
        java.lang.reflect.Method[] $r2;
        int i0, i1;
        javax.ws.rs.core.UriBuilder $r5;
        java.lang.String r1, $r4, $r11, $r13, $r21;
        java.lang.reflect.Method r12;
        boolean $z0;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r3;
        java.lang.IllegalArgumentException $r6, $r16, $r22, $r23;
        java.lang.'annotation'.Annotation $r14;
        java.lang.Class r0;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r17, $r18, $r19, $r20;

        r3 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r23 = new java.lang.IllegalArgumentException;

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("resource is null");

        throw $r23;

     label1:
        if r1 != null goto label2;

        $r22 = new java.lang.IllegalArgumentException;

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("method is null");

        throw $r22;

     label2:
        r24 = null;

        $r2 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        i0 = lengthof $r2;

        i1 = 0;

     label3:
        if i1 >= i0 goto label6;

        r12 = $r2[i1];

        $r13 = virtualinvoke r12.<java.lang.reflect.Method: java.lang.String getName()>();

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label5;

        $r14 = virtualinvoke r12.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Ljavax/ws/rs/Path;");

        r15 = (javax.ws.rs.Path) $r14;

        if r24 == null goto label4;

        if r15 == null goto label4;

        $r16 = new java.lang.IllegalArgumentException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Multiple Path annotations for \'");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' overloaded method");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw $r16;

     label4:
        r24 = r15;

     label5:
        i1 = i1 + 1;

        goto label3;

     label6:
        if r24 != null goto label7;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No Path annotation for \'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' method");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label7:
        $r4 = interfaceinvoke r24.<javax.ws.rs.Path: java.lang.String value()>();

        $r5 = virtualinvoke r3.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.UriBuilder path(java.lang.String)>($r4);

        return $r5;
    }

    public javax.ws.rs.core.UriBuilder path(java.lang.reflect.Method) throws java.lang.IllegalArgumentException
    {
        javax.ws.rs.Path r2;
        javax.ws.rs.core.UriBuilder $r5;
        java.lang.String $r4, $r10, $r13, $r16;
        java.lang.reflect.Method r0;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r3;
        java.lang.IllegalArgumentException $r6, $r17;
        java.lang.'annotation'.Annotation $r1;
        java.lang.StringBuilder $r7, $r8, $r11, $r12, $r14, $r15;
        java.lang.Class $r9;

        r3 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r0 := @parameter0: java.lang.reflect.Method;

        if r0 != null goto label1;

        $r17 = new java.lang.IllegalArgumentException;

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("method is null");

        throw $r17;

     label1:
        $r1 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Ljavax/ws/rs/Path;");

        r2 = (javax.ws.rs.Path) $r1;

        if r2 != null goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Method \'");

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getCanonicalName()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r13 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.String getName()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is not annotated with Path");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r6;

     label2:
        $r4 = interfaceinvoke r2.<javax.ws.rs.Path: java.lang.String value()>();

        $r5 = virtualinvoke r3.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.UriBuilder path(java.lang.String)>($r4);

        return $r5;
    }

    public javax.ws.rs.core.UriBuilder path(java.lang.String) throws java.lang.IllegalArgumentException
    {
        javax.ws.rs.core.UriBuilder $r2;
        java.lang.String r1;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.UriBuilder doPath(java.lang.String,boolean)>(r1, 1);

        return $r2;
    }

    private javax.ws.rs.core.UriBuilder doPath(java.lang.String, boolean)
    {
        java.net.URI $r18;
        boolean $z0, $z1, z2, $z3, $z4, $z5, $z6;
        java.util.List $r1, $r5, $r6, $r7, $r12, $r13, $r16, r21, $r22, $r24;
        org.apache.cxf.jaxrs.impl.PathSegmentImpl $r4;
        java.util.ArrayList $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r3, r20;
        javax.ws.rs.core.PathSegment $r9, r15, $r17;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r0;
        java.lang.IllegalArgumentException $r19;
        javax.ws.rs.core.MultivaluedMap $r10, $r11, $r23;
        java.lang.Object $r8, $r14;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r20 := @parameter0: java.lang.String;

        z2 := @parameter1: boolean;

        if r20 != null goto label1;

        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("path is null");

        throw $r19;

     label1:
        $z0 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: boolean isAbsoluteUriPath(java.lang.String)>(r20);

        if $z0 == 0 goto label2;

        $r18 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(r20);

        virtualinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.UriBuilder uri(java.net.URI)>($r18);

        return r0;

     label2:
        $r1 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.List paths>;

        $z1 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label3;

        $z5 = virtualinvoke r20.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: boolean leadingSlash> = $z5;

     label3:
        if z2 == 0 goto label4;

        r21 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List getPathSegments(java.lang.String,boolean,boolean)>(r20, 0, 0);

        goto label5;

     label4:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r21 = $r2;

        $r3 = virtualinvoke r20.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("/", "%2F");

        $r4 = new org.apache.cxf.jaxrs.impl.PathSegmentImpl;

        specialinvoke $r4.<org.apache.cxf.jaxrs.impl.PathSegmentImpl: void <init>(java.lang.String,boolean)>($r3, 0);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r4);

     label5:
        $r5 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.List paths>;

        $z3 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z3 != 0 goto label6;

        $r11 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.MultivaluedMap matrix>;

        $z4 = interfaceinvoke $r11.<javax.ws.rs.core.MultivaluedMap: boolean isEmpty()>();

        if $z4 != 0 goto label6;

        $r13 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.List paths>;

        $r12 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.List paths>;

        $i2 = interfaceinvoke $r12.<java.util.List: int size()>();

        $i3 = $i2 - 1;

        $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object remove(int)>($i3);

        r15 = (javax.ws.rs.core.PathSegment) $r14;

        $r16 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.List paths>;

        $r17 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.PathSegment replacePathSegment(javax.ws.rs.core.PathSegment)>(r15);

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r17);

     label6:
        $r22 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.List paths>;

        interfaceinvoke $r22.<java.util.List: boolean addAll(java.util.Collection)>(r21);

        $r23 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.MultivaluedMap matrix>;

        interfaceinvoke $r23.<javax.ws.rs.core.MultivaluedMap: void clear()>();

        $r24 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.List paths>;

        $z6 = interfaceinvoke $r24.<java.util.List: boolean isEmpty()>();

        if $z6 != 0 goto label7;

        $r7 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.List paths>;

        $r6 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.List paths>;

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i1);

        $r9 = (javax.ws.rs.core.PathSegment) $r8;

        $r10 = interfaceinvoke $r9.<javax.ws.rs.core.PathSegment: javax.ws.rs.core.MultivaluedMap getMatrixParameters()>();

        r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.MultivaluedMap matrix> = $r10;

     label7:
        return r0;
    }

    public javax.ws.rs.core.UriBuilder port(int) throws java.lang.IllegalArgumentException
    {
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r0;
        int i0, $i2;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        $i2 = (int) -1;

        if i0 == $i2 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Port cannot be negative");

        throw $r2;

     label1:
        r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: int port> = i0;

        return r0;
    }

    public javax.ws.rs.core.UriBuilder scheme(java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.lang.String r1;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String scheme> = r1;

        return r0;
    }

    public javax.ws.rs.core.UriBuilder schemeSpecificPart(java.lang.String) throws java.lang.IllegalArgumentException
    {
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r0;
        java.net.URISyntaxException $r6;
        java.lang.IllegalArgumentException $r7;
        java.lang.String $r1, r3, $r4, $r5;
        java.net.URI $r2;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r3 := @parameter0: java.lang.String;

     label1:
        $r1 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String scheme>;

        if $r1 != null goto label2;

        r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String scheme> = "http";

     label2:
        $r2 = new java.net.URI;

        $r5 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String scheme>;

        $r4 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String fragment>;

        specialinvoke $r2.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r5, r3, $r4);

        specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: void setUriParts(java.net.URI)>($r2);

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("Wrong syntax of scheme-specific part", $r6);

        throw $r7;

     label5:
        return r0;

        catch java.net.URISyntaxException from label1 to label3 with label4;
    }

    public javax.ws.rs.core.UriBuilder uri(java.net.URI) throws java.lang.IllegalArgumentException
    {
        java.net.URI r1;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r1 := @parameter0: java.net.URI;

        specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: void setUriParts(java.net.URI)>(r1);

        return r0;
    }

    public javax.ws.rs.core.UriBuilder userInfo(java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.lang.String r1;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String userInfo> = r1;

        return r0;
    }

    private void setUriParts(java.net.URI)
    {
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r3;
        java.lang.IllegalArgumentException $r9;
        javax.ws.rs.core.MultivaluedMap $r7;
        int $i0;
        java.net.URI r0;
        java.lang.String $r1, $r2, $r4, $r5, $r6, $r8, $r10, $r11;
        boolean $z0, $z1;

        r3 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r0 := @parameter0: java.net.URI;

        if r0 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("uri is null");

        throw $r9;

     label1:
        $r1 = virtualinvoke r0.<java.net.URI: java.lang.String getScheme()>();

        if $r1 == null goto label2;

        r3.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String scheme> = $r1;

     label2:
        $r2 = virtualinvoke r0.<java.net.URI: java.lang.String getRawPath()>();

        $z0 = virtualinvoke r0.<java.net.URI: boolean isOpaque()>();

        if $z0 != 0 goto label6;

        if $r1 != null goto label3;

        if $r2 == null goto label6;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z1 == 0 goto label6;

     label3:
        $i0 = virtualinvoke r0.<java.net.URI: int getPort()>();

        r3.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: int port> = $i0;

        $r4 = virtualinvoke r0.<java.net.URI: java.lang.String getHost()>();

        r3.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String host> = $r4;

        if $r2 == null goto label4;

        $r8 = virtualinvoke r0.<java.net.URI: java.lang.String getRawPath()>();

        specialinvoke r3.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: void setPathAndMatrix(java.lang.String)>($r8);

     label4:
        $r5 = virtualinvoke r0.<java.net.URI: java.lang.String getRawQuery()>();

        if $r5 == null goto label5;

        $r7 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.MultivaluedMap getStructuredParams(java.lang.String,java.lang.String,boolean,boolean)>($r5, "&", 0, 0);

        r3.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.MultivaluedMap query> = $r7;

     label5:
        $r6 = virtualinvoke r0.<java.net.URI: java.lang.String getUserInfo()>();

        r3.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String userInfo> = $r6;

        r3.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String schemeSpecificPart> = null;

        goto label7;

     label6:
        $r10 = virtualinvoke r0.<java.net.URI: java.lang.String getSchemeSpecificPart()>();

        r3.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String schemeSpecificPart> = $r10;

     label7:
        $r11 = virtualinvoke r0.<java.net.URI: java.lang.String getFragment()>();

        if $r11 == null goto label8;

        r3.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String fragment> = $r11;

     label8:
        return;
    }

    private void setPathAndMatrix(java.lang.String)
    {
        javax.ws.rs.core.PathSegment $r8;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r0;
        javax.ws.rs.core.MultivaluedMap $r4, $r9;
        java.util.List $r2, $r3, $r5, $r6;
        int $i0, $i1;
        java.lang.Object $r7;
        java.lang.String r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: boolean leadingSlash> = $z0;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: java.util.List getPathSegments(java.lang.String,boolean,boolean)>(r1, 0, 0);

        r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.List paths> = $r2;

        $r3 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.List paths>;

        $z1 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        $r6 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.List paths>;

        $r5 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.List paths>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i1);

        $r8 = (javax.ws.rs.core.PathSegment) $r7;

        $r9 = interfaceinvoke $r8.<javax.ws.rs.core.PathSegment: javax.ws.rs.core.MultivaluedMap getMatrixParameters()>();

        r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.MultivaluedMap matrix> = $r9;

        goto label2;

     label1:
        $r4 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.MultivaluedMap matrix>;

        interfaceinvoke $r4.<javax.ws.rs.core.MultivaluedMap: void clear()>();

     label2:
        return;
    }

    private java.lang.String buildPath()
    {
        org.apache.cxf.jaxrs.model.URITemplate $r9;
        int $i0, $i1, $i2;
        java.lang.String $r5, $r8, $r10;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Iterator $r3;
        javax.ws.rs.core.PathSegment r7;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r1;
        javax.ws.rs.core.MultivaluedMap $r4, $r11;
        java.util.List $r2;
        java.lang.StringBuilder $r0;
        java.lang.Object $r6;

        r1 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.List paths>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r6 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r7 = (javax.ws.rs.core.PathSegment) $r6;

        $r8 = interfaceinvoke r7.<javax.ws.rs.core.PathSegment: java.lang.String getPath()>();

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        $z3 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label5;

     label2:
        $r9 = new org.apache.cxf.jaxrs.model.URITemplate;

        specialinvoke $r9.<org.apache.cxf.jaxrs.model.URITemplate: void <init>(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<org.apache.cxf.jaxrs.model.URITemplate: java.lang.String encodeLiteralCharacters(boolean)>(0);

        $i1 = virtualinvoke $r0.<java.lang.StringBuilder: int length()>();

        if $i1 != 0 goto label3;

        $z2 = r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: boolean leadingSlash>;

        if $z2 == 0 goto label3;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        goto label4;

     label3:
        $z1 = virtualinvoke $r10.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z1 != 0 goto label4;

        $i2 = virtualinvoke $r0.<java.lang.StringBuilder: int length()>();

        if $i2 <= 0 goto label4;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

     label4:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $z4 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label5;

        $r11 = interfaceinvoke r7.<javax.ws.rs.core.PathSegment: javax.ws.rs.core.MultivaluedMap getMatrixParameters()>();

        specialinvoke r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: void buildMatrix(java.lang.StringBuilder,javax.ws.rs.core.MultivaluedMap)>($r0, $r11);

     label5:
        goto label1;

     label6:
        $r4 = r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.MultivaluedMap matrix>;

        specialinvoke r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: void buildMatrix(java.lang.StringBuilder,javax.ws.rs.core.MultivaluedMap)>($r0, $r4);

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    private java.lang.String buildQuery()
    {
        javax.ws.rs.core.MultivaluedMap $r1;
        java.lang.String $r2;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        $r1 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.MultivaluedMap query>;

        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String buildParams(javax.ws.rs.core.MultivaluedMap,char)>($r1, 38);

        return $r2;
    }

    public transient javax.ws.rs.core.UriBuilder matrixParam(java.lang.String, java.lang.Object[]) throws java.lang.IllegalArgumentException
    {
        java.lang.Object[] r2;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r3;
        java.lang.IllegalArgumentException $r1;
        javax.ws.rs.core.MultivaluedMap $r4, $r8;
        java.util.List r6, $r7, $r9;
        java.lang.Object $r5;
        java.lang.String r0;

        r3 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        if r0 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("name or values is null");

        throw $r1;

     label2:
        $r4 = r3.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.MultivaluedMap matrix>;

        $r5 = interfaceinvoke $r4.<javax.ws.rs.core.MultivaluedMap: java.lang.Object get(java.lang.Object)>(r0);

        r6 = (java.util.List) $r5;

        if r6 != null goto label3;

        $r8 = r3.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.MultivaluedMap matrix>;

        $r9 = specialinvoke r3.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.List toStringList(java.lang.Object[])>(r2);

        interfaceinvoke $r8.<javax.ws.rs.core.MultivaluedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r9);

        goto label4;

     label3:
        $r7 = specialinvoke r3.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.List toStringList(java.lang.Object[])>(r2);

        interfaceinvoke r6.<java.util.List: boolean addAll(java.util.Collection)>($r7);

     label4:
        return r3;
    }

    public transient javax.ws.rs.core.UriBuilder queryParam(java.lang.String, java.lang.Object[]) throws java.lang.IllegalArgumentException
    {
        java.lang.Object[] r2;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r3;
        java.lang.IllegalArgumentException $r1;
        javax.ws.rs.core.MultivaluedMap $r4, $r8;
        java.util.List r6, $r7, $r9;
        java.lang.Object $r5;
        java.lang.String r0;

        r3 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        if r0 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("name or values is null");

        throw $r1;

     label2:
        $r4 = r3.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.MultivaluedMap query>;

        $r5 = interfaceinvoke $r4.<javax.ws.rs.core.MultivaluedMap: java.lang.Object get(java.lang.Object)>(r0);

        r6 = (java.util.List) $r5;

        if r6 != null goto label3;

        $r8 = r3.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.MultivaluedMap query>;

        $r9 = specialinvoke r3.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.List toStringList(java.lang.Object[])>(r2);

        interfaceinvoke $r8.<javax.ws.rs.core.MultivaluedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r9);

        goto label4;

     label3:
        $r7 = specialinvoke r3.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.List toStringList(java.lang.Object[])>(r2);

        interfaceinvoke r6.<java.util.List: boolean addAll(java.util.Collection)>($r7);

     label4:
        return r3;
    }

    public javax.ws.rs.core.UriBuilder replaceMatrix(java.lang.String) throws java.lang.IllegalArgumentException
    {
        javax.ws.rs.core.MultivaluedMap $r2;
        java.lang.String r1;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.MultivaluedMap getStructuredParams(java.lang.String,java.lang.String,boolean,boolean)>(r1, ";", 1, 0);

        r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.MultivaluedMap matrix> = $r2;

        return r0;
    }

    public transient javax.ws.rs.core.UriBuilder replaceMatrixParam(java.lang.String, java.lang.Object[]) throws java.lang.IllegalArgumentException
    {
        java.lang.Object[] r1;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r2;
        java.lang.IllegalArgumentException $r6;
        javax.ws.rs.core.MultivaluedMap $r4, $r7;
        java.util.List $r5;
        int $i0;
        java.lang.Object $r3;
        java.lang.String r0;

        r2 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        if r0 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("name is null");

        throw $r6;

     label1:
        if r1 == null goto label2;

        $i0 = lengthof r1;

        if $i0 < 1 goto label2;

        $r3 = r1[0];

        if $r3 == null goto label2;

        $r4 = r2.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.MultivaluedMap matrix>;

        $r5 = specialinvoke r2.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.List toStringList(java.lang.Object[])>(r1);

        interfaceinvoke $r4.<javax.ws.rs.core.MultivaluedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r5);

        goto label3;

     label2:
        $r7 = r2.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.MultivaluedMap matrix>;

        interfaceinvoke $r7.<javax.ws.rs.core.MultivaluedMap: java.lang.Object remove(java.lang.Object)>(r0);

     label3:
        return r2;
    }

    public javax.ws.rs.core.UriBuilder replacePath(java.lang.String)
    {
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r1;
        java.lang.String r0;
        java.net.URI $r2;
        boolean $z0;

        r1 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        specialinvoke r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: void clearPathAndMatrix()>();

        goto label3;

     label1:
        $z0 = specialinvoke r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: boolean isAbsoluteUriPath(java.lang.String)>(r0);

        if $z0 == 0 goto label2;

        specialinvoke r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: void clearPathAndMatrix()>();

        $r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(r0);

        virtualinvoke r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.UriBuilder uri(java.net.URI)>($r2);

        goto label3;

     label2:
        specialinvoke r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: void setPathAndMatrix(java.lang.String)>(r0);

     label3:
        return r1;
    }

    private void clearPathAndMatrix()
    {
        javax.ws.rs.core.MultivaluedMap $r2;
        java.util.List $r1;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        $r1 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.List paths>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r2 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.MultivaluedMap matrix>;

        interfaceinvoke $r2.<javax.ws.rs.core.MultivaluedMap: void clear()>();

        return;
    }

    private boolean isAbsoluteUriPath(java.lang.String)
    {
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r1;
        java.lang.String r0;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("http:");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("https:");

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public javax.ws.rs.core.UriBuilder replaceQuery(java.lang.String) throws java.lang.IllegalArgumentException
    {
        javax.ws.rs.core.MultivaluedMap $r1;
        java.lang.String r2;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r2 := @parameter0: java.lang.String;

        if r2 == null goto label1;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(" ", "%20");

     label1:
        $r1 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.MultivaluedMap getStructuredParams(java.lang.String,java.lang.String,boolean,boolean)>(r2, "&", 0, 1);

        r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.MultivaluedMap query> = $r1;

        return r0;
    }

    public transient javax.ws.rs.core.UriBuilder replaceQueryParam(java.lang.String, java.lang.Object[]) throws java.lang.IllegalArgumentException
    {
        java.lang.Object[] r1;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r2;
        java.lang.IllegalArgumentException $r6;
        javax.ws.rs.core.MultivaluedMap $r4, $r7;
        java.util.List $r5;
        int $i0;
        java.lang.Object $r3;
        java.lang.String r0;

        r2 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        if r0 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("name is null");

        throw $r6;

     label1:
        if r1 == null goto label2;

        $i0 = lengthof r1;

        if $i0 < 1 goto label2;

        $r3 = r1[0];

        if $r3 == null goto label2;

        $r4 = r2.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.MultivaluedMap query>;

        $r5 = specialinvoke r2.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.List toStringList(java.lang.Object[])>(r1);

        interfaceinvoke $r4.<javax.ws.rs.core.MultivaluedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r5);

        goto label3;

     label2:
        $r7 = r2.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.MultivaluedMap query>;

        interfaceinvoke $r7.<javax.ws.rs.core.MultivaluedMap: java.lang.Object remove(java.lang.Object)>(r0);

     label3:
        return r2;
    }

    public transient javax.ws.rs.core.UriBuilder segment(java.lang.String[]) throws java.lang.IllegalArgumentException
    {
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r1;
        int i0, i1;
        java.lang.String[] r0;
        java.lang.String r2;
        java.lang.IllegalArgumentException $r3;

        r1 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r0 := @parameter0: java.lang.String[];

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Segments should not be null");

        throw $r3;

     label1:
        i0 = lengthof r0;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r2 = r0[i1];

        specialinvoke r1.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.UriBuilder doPath(java.lang.String,boolean)>(r2, 0);

        i1 = i1 + 1;

        goto label2;

     label3:
        return r1;
    }

    private transient java.util.List toStringList(java.lang.Object[]) throws java.lang.IllegalArgumentException
    {
        java.lang.Object[] r1;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r10;
        java.lang.IllegalArgumentException $r4;
        java.util.ArrayList $r0;
        int $i0, i1;
        java.lang.Object r2;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.String $r3, $r9;
        boolean $z0;

        r10 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r1 := @parameter0: java.lang.Object[];

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        if r1 == null goto label3;

        i1 = 0;

     label1:
        $i0 = lengthof r1;

        if i1 >= $i0 goto label3;

        r2 = r1[i1];

        if r2 != null goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Null value on ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" position");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label2:
        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r3);

        i1 = i1 + 1;

        goto label1;

     label3:
        $z0 = interfaceinvoke $r0.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label4;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>("");

     label4:
        return $r0;
    }

    private java.lang.String buildParams(javax.ws.rs.core.MultivaluedMap, char)
    {
        org.apache.cxf.jaxrs.model.URITemplate $r19;
        int $i1, $i2, $i3;
        java.lang.String $r12, r15, r16, $r17;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.util.Map$Entry r5;
        java.util.Iterator $r3, $r8;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r14;
        java.util.Set $r2;
        char c0;
        javax.ws.rs.core.MultivaluedMap r1;
        java.util.List $r7;
        java.lang.Object $r4, $r6, $r9, $r11;
        java.lang.StringBuilder $r13, $r18;

        r14 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r1 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        c0 := @parameter1: char;

        $i3 = (int) c0;

        if $i3 != 38 goto label01;

        $z6 = 1;

        goto label02;

     label01:
        $z6 = 0;

     label02:
        z0 = $z6;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r2 = interfaceinvoke r1.<javax.ws.rs.core.MultivaluedMap: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z7 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label13;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r6 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (java.util.List) $r6;

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label12;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r15 = (java.lang.String) $r9;

        $z2 = virtualinvoke r15.<java.lang.String: boolean startsWith(java.lang.String)>("{");

        if $z2 == 0 goto label05;

        $z5 = virtualinvoke r15.<java.lang.String: boolean endsWith(java.lang.String)>("}");

        if $z5 == 0 goto label05;

        $z8 = 1;

        goto label06;

     label05:
        $z8 = 0;

     label06:
        if $z8 != 0 goto label07;

        r16 = staticinvoke <org.apache.cxf.jaxrs.utils.HttpUtils: java.lang.String encodePartiallyEncoded(java.lang.String,boolean)>(r15, z0);

        goto label08;

     label07:
        $r19 = new org.apache.cxf.jaxrs.model.URITemplate;

        specialinvoke $r19.<org.apache.cxf.jaxrs.model.URITemplate: void <init>(java.lang.String)>(r15);

        r16 = virtualinvoke $r19.<org.apache.cxf.jaxrs.model.URITemplate: java.lang.String encodeLiteralCharacters(boolean)>(z0);

     label08:
        $r11 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = (java.lang.String) $r11;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $i2 = virtualinvoke r16.<java.lang.String: int length()>();

        if $i2 == 0 goto label09;

        $r13 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

     label09:
        $z3 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label10;

        $z4 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label11;

     label10:
        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

     label11:
        goto label04;

     label12:
        goto label03;

     label13:
        $i1 = virtualinvoke $r18.<java.lang.StringBuilder: int length()>();

        if $i1 <= 0 goto label14;

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label15;

     label14:
        $r17 = null;

     label15:
        return $r17;
    }

    private void buildMatrix(java.lang.StringBuilder, javax.ws.rs.core.MultivaluedMap)
    {
        javax.ws.rs.core.MultivaluedMap r0;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r2;
        java.lang.StringBuilder r1;
        java.lang.String $r3;
        boolean $z0;

        r2 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r1 := @parameter0: java.lang.StringBuilder;

        r0 := @parameter1: javax.ws.rs.core.MultivaluedMap;

        $z0 = interfaceinvoke r0.<javax.ws.rs.core.MultivaluedMap: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(59);

        $r3 = specialinvoke r2.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String buildParams(javax.ws.rs.core.MultivaluedMap,char)>(r0, 59);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label1:
        return;
    }

    private javax.ws.rs.core.PathSegment replacePathSegment(javax.ws.rs.core.PathSegment)
    {
        javax.ws.rs.core.MultivaluedMap $r4;
        javax.ws.rs.core.PathSegment r1;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r3;
        org.apache.cxf.jaxrs.impl.PathSegmentImpl $r5;
        java.lang.StringBuilder $r0;
        java.lang.String $r2, $r6;

        r3 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r1 := @parameter0: javax.ws.rs.core.PathSegment;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = interfaceinvoke r1.<javax.ws.rs.core.PathSegment: java.lang.String getPath()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = r3.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.MultivaluedMap matrix>;

        specialinvoke r3.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: void buildMatrix(java.lang.StringBuilder,javax.ws.rs.core.MultivaluedMap)>($r0, $r4);

        $r5 = new org.apache.cxf.jaxrs.impl.PathSegmentImpl;

        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.apache.cxf.jaxrs.impl.PathSegmentImpl: void <init>(java.lang.String)>($r6);

        return $r5;
    }

    public javax.ws.rs.core.UriBuilder uri(java.lang.String) throws java.lang.IllegalArgumentException
    {
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r0;
        javax.ws.rs.core.UriBuilder $r3;
        java.lang.String r1;
        java.net.URI $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.Exception $r4;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r1 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(r1);

        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.UriBuilder uri(java.net.URI)>($r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public javax.ws.rs.core.UriBuilder uriAsTemplate(java.lang.String)
    {
        java.lang.String[] $r5;
        java.lang.Integer $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9, $i11;
        java.lang.String $r1, $r2, $r3, $r4, $r6, $r7, r9;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r9 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r9.<java.lang.String: int indexOf(java.lang.String)>(":");

        $i7 = (int) -1;

        if $i0 == $i7 goto label4;

        $r1 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String scheme> = $r1;

        $i1 = $i0 + 1;

        $r2 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int)>($i1);

        r9 = $r2;

        $i2 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>("//");

        if $i2 != 0 goto label4;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>(2);

        $i3 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>("/");

        $i9 = (int) -1;

        if $i3 == $i9 goto label3;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $r6 = $r5[0];

        r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String host> = $r6;

        $i4 = lengthof $r5;

        if $i4 != 2 goto label1;

        $r7 = $r5[1];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r7);

        $i5 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        goto label2;

     label1:
        $i11 = (int) -1;

        $i5 = $i11;

     label2:
        r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: int port> = $i5;

     label3:
        r9 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i3);

     label4:
        specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: void setPathAndMatrix(java.lang.String)>(r9);

        return r0;
    }

    public java.net.URI build(java.lang.Object[], boolean) throws java.lang.IllegalArgumentException, javax.ws.rs.core.UriBuilderException
    {
        java.lang.Object[] r1;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r0;
        java.net.URI $r2;
        boolean z0;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r1 := @parameter0: java.lang.Object[];

        z0 := @parameter1: boolean;

        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.net.URI doBuild(boolean,boolean,java.lang.Object[])>(0, z0, r1);

        return $r2;
    }

    public java.net.URI buildFromMap(java.util.Map, boolean) throws java.lang.IllegalArgumentException, javax.ws.rs.core.UriBuilderException
    {
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r0;
        java.util.Map r1;
        java.net.URI $r2;
        boolean z0;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r1 := @parameter0: java.util.Map;

        z0 := @parameter1: boolean;

        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.net.URI doBuildFromMap(java.util.Map,boolean,boolean)>(r1, 0, z0);

        return $r2;
    }

    public java.lang.String toTemplate()
    {
        java.lang.Object[] $r1;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl$UriParts $r2;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r0;
        java.lang.String $r3, $r4, $r5, $r6;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        $r1 = newarray (java.lang.Object)[0];

        $r2 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: org.apache.cxf.jaxrs.impl.UriBuilderImpl$UriParts doBuildUriParts(boolean,boolean,boolean,java.lang.Object[])>(0, 0, 1, $r1);

        $r5 = $r2.<org.apache.cxf.jaxrs.impl.UriBuilderImpl$UriParts: java.lang.String path>;

        $r4 = $r2.<org.apache.cxf.jaxrs.impl.UriBuilderImpl$UriParts: java.lang.String query>;

        $r3 = $r2.<org.apache.cxf.jaxrs.impl.UriBuilderImpl$UriParts: java.lang.String fragment>;

        $r6 = specialinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.lang.String buildUriString(java.lang.String,java.lang.String,java.lang.String)>($r5, $r4, $r3);

        return $r6;
    }

    public javax.ws.rs.core.UriBuilder resolveTemplate(java.lang.String, java.lang.Object) throws java.lang.IllegalArgumentException
    {
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r0;
        java.lang.Object r2;
        javax.ws.rs.core.UriBuilder $r3;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.UriBuilder resolveTemplate(java.lang.String,java.lang.Object,boolean)>(r1, r2, 1);

        return $r3;
    }

    public javax.ws.rs.core.UriBuilder resolveTemplate(java.lang.String, java.lang.Object, boolean) throws java.lang.IllegalArgumentException
    {
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r0;
        java.util.Map $r3;
        java.lang.Object r2;
        javax.ws.rs.core.UriBuilder $r4;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        z0 := @parameter2: boolean;

        $r3 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r1, r2);

        $r4 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.UriBuilder resolveTemplates(java.util.Map,boolean)>($r3, z0);

        return $r4;
    }

    public javax.ws.rs.core.UriBuilder resolveTemplates(java.util.Map) throws java.lang.IllegalArgumentException
    {
        javax.ws.rs.core.UriBuilder $r2;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r0;
        java.util.Map r1;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r1 := @parameter0: java.util.Map;

        $r2 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.UriBuilder resolveTemplates(java.util.Map,boolean)>(r1, 1);

        return $r2;
    }

    public javax.ws.rs.core.UriBuilder resolveTemplates(java.util.Map, boolean) throws java.lang.IllegalArgumentException
    {
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r0;
        java.util.Map r1, $r2, $r3, $r4, $r5;
        boolean z0;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r1 := @parameter0: java.util.Map;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r4 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.Map resolvedTemplatesPathEnc>;

        $r5 = staticinvoke <org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.Map fillInResolveTemplates(java.util.Map,java.util.Map)>($r4, r1);

        r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.Map resolvedTemplatesPathEnc> = $r5;

        goto label2;

     label1:
        $r2 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.Map resolvedTemplates>;

        $r3 = staticinvoke <org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.Map fillInResolveTemplates(java.util.Map,java.util.Map)>($r2, r1);

        r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.Map resolvedTemplates> = $r3;

     label2:
        return r0;
    }

    public javax.ws.rs.core.UriBuilder resolveTemplateFromEncoded(java.lang.String, java.lang.Object) throws java.lang.IllegalArgumentException
    {
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r0;
        java.util.Map $r3;
        java.lang.Object r2;
        javax.ws.rs.core.UriBuilder $r4;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r1, r2);

        $r4 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.UriBuilder resolveTemplatesFromEncoded(java.util.Map)>($r3);

        return $r4;
    }

    public javax.ws.rs.core.UriBuilder resolveTemplatesFromEncoded(java.util.Map) throws java.lang.IllegalArgumentException
    {
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r0;
        java.util.Map r1, $r2, $r3;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        r1 := @parameter0: java.util.Map;

        $r2 = r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.Map resolvedEncodedTemplates>;

        $r3 = staticinvoke <org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.Map fillInResolveTemplates(java.util.Map,java.util.Map)>($r2, r1);

        r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: java.util.Map resolvedEncodedTemplates> = $r3;

        return r0;
    }

    private static java.util.Map fillInResolveTemplates(java.util.Map, java.util.Map) throws java.lang.IllegalArgumentException
    {
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        java.util.Set $r1;
        java.lang.IllegalArgumentException $r6, $r11;
        java.util.LinkedHashMap $r10;
        java.util.Map r0, r12;
        java.lang.Object $r3, $r5, $r7, $r8, $r9;
        boolean $z0;

        r12 := @parameter0: java.util.Map;

        r0 := @parameter1: java.util.Map;

        if r0 != null goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r11;

     label1:
        if r12 != null goto label2;

        $r10 = new java.util.LinkedHashMap;

        specialinvoke $r10.<java.util.LinkedHashMap: void <init>()>();

        r12 = $r10;

     label2:
        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r5 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        if $r5 == null goto label4;

        $r7 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r7 != null goto label5;

     label4:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r6;

     label5:
        $r8 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);

        goto label3;

     label6:
        return r12;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        javax.ws.rs.core.UriBuilder $r1;
        org.apache.cxf.jaxrs.impl.UriBuilderImpl r0;

        r0 := @this: org.apache.cxf.jaxrs.impl.UriBuilderImpl;

        $r1 = virtualinvoke r0.<org.apache.cxf.jaxrs.impl.UriBuilderImpl: javax.ws.rs.core.UriBuilder clone()>();

        return $r1;
    }
}
