public class org.springframework.validation.DirectFieldBindingResult extends org.springframework.validation.AbstractPropertyBindingResult
{
    private final java.lang.Object target;
    private transient org.springframework.beans.ConfigurablePropertyAccessor directFieldAccessor;

    public void <init>(java.lang.Object, java.lang.String)
    {
        org.springframework.validation.DirectFieldBindingResult r0;
        java.lang.Object r2;
        java.lang.String r1;

        r0 := @this: org.springframework.validation.DirectFieldBindingResult;

        r2 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<org.springframework.validation.AbstractPropertyBindingResult: void <init>(java.lang.String)>(r1);

        r0.<org.springframework.validation.DirectFieldBindingResult: java.lang.Object target> = r2;

        return;
    }

    public final java.lang.Object getTarget()
    {
        org.springframework.validation.DirectFieldBindingResult r0;
        java.lang.Object $r1;

        r0 := @this: org.springframework.validation.DirectFieldBindingResult;

        $r1 = r0.<org.springframework.validation.DirectFieldBindingResult: java.lang.Object target>;

        return $r1;
    }

    public final org.springframework.beans.ConfigurablePropertyAccessor getPropertyAccessor()
    {
        org.springframework.validation.DirectFieldBindingResult r0;
        org.springframework.beans.ConfigurablePropertyAccessor $r1, $r2, $r3, $r4;

        r0 := @this: org.springframework.validation.DirectFieldBindingResult;

        $r1 = r0.<org.springframework.validation.DirectFieldBindingResult: org.springframework.beans.ConfigurablePropertyAccessor directFieldAccessor>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.springframework.validation.DirectFieldBindingResult: org.springframework.beans.ConfigurablePropertyAccessor createDirectFieldAccessor()>();

        r0.<org.springframework.validation.DirectFieldBindingResult: org.springframework.beans.ConfigurablePropertyAccessor directFieldAccessor> = $r3;

        $r4 = r0.<org.springframework.validation.DirectFieldBindingResult: org.springframework.beans.ConfigurablePropertyAccessor directFieldAccessor>;

        interfaceinvoke $r4.<org.springframework.beans.ConfigurablePropertyAccessor: void setExtractOldValueForEditor(boolean)>(1);

     label1:
        $r2 = r0.<org.springframework.validation.DirectFieldBindingResult: org.springframework.beans.ConfigurablePropertyAccessor directFieldAccessor>;

        return $r2;
    }

    protected org.springframework.beans.ConfigurablePropertyAccessor createDirectFieldAccessor()
    {
        org.springframework.validation.DirectFieldBindingResult r0;
        java.lang.Object $r1, $r7;
        java.lang.StringBuilder $r2, $r4, $r5;
        java.lang.String $r3, $r6;
        org.springframework.beans.ConfigurablePropertyAccessor $r8;
        boolean $z0;

        r0 := @this: org.springframework.validation.DirectFieldBindingResult;

        $r1 = r0.<org.springframework.validation.DirectFieldBindingResult: java.lang.Object target>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Cannot access fields on null target instance \'");

        $r3 = virtualinvoke r0.<org.springframework.validation.DirectFieldBindingResult: java.lang.String getObjectName()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'!");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.springframework.util.Assert: void state(boolean,java.lang.String)>($z0, $r6);

        $r7 = r0.<org.springframework.validation.DirectFieldBindingResult: java.lang.Object target>;

        $r8 = staticinvoke <org.springframework.beans.PropertyAccessorFactory: org.springframework.beans.ConfigurablePropertyAccessor forDirectFieldAccess(java.lang.Object)>($r7);

        return $r8;
    }
}
