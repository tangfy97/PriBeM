final class com.mycila.inject.internal.asm.xml.ASMContentHandler$ExceptionRule extends com.mycila.inject.internal.asm.xml.ASMContentHandler$Rule
{
    private final com.mycila.inject.internal.asm.xml.ASMContentHandler this$0;

    void <init>(com.mycila.inject.internal.asm.xml.ASMContentHandler)
    {
        com.mycila.inject.internal.asm.xml.ASMContentHandler$ExceptionRule r0;
        com.mycila.inject.internal.asm.xml.ASMContentHandler r1;

        r0 := @this: com.mycila.inject.internal.asm.xml.ASMContentHandler$ExceptionRule;

        r1 := @parameter0: com.mycila.inject.internal.asm.xml.ASMContentHandler;

        specialinvoke r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$Rule: void <init>(com.mycila.inject.internal.asm.xml.ASMContentHandler)>(r1);

        r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$ExceptionRule: com.mycila.inject.internal.asm.xml.ASMContentHandler this$0> = r1;

        return;
    }

    public final void begin(java.lang.String, org.xml.sax.Attributes)
    {
        com.mycila.inject.internal.asm.xml.ASMContentHandler$ExceptionRule r0;
        java.util.HashMap $r3;
        com.mycila.inject.internal.asm.xml.ASMContentHandler $r1;
        java.util.List $r6;
        org.xml.sax.Attributes r5;
        java.lang.Object $r2, $r4;
        java.lang.String $r7, r8;

        r0 := @this: com.mycila.inject.internal.asm.xml.ASMContentHandler$ExceptionRule;

        r8 := @parameter0: java.lang.String;

        r5 := @parameter1: org.xml.sax.Attributes;

        $r1 = r0.<com.mycila.inject.internal.asm.xml.ASMContentHandler$ExceptionRule: com.mycila.inject.internal.asm.xml.ASMContentHandler this$0>;

        $r2 = virtualinvoke $r1.<com.mycila.inject.internal.asm.xml.ASMContentHandler: java.lang.Object peek()>();

        $r3 = (java.util.HashMap) $r2;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("exceptions");

        $r6 = (java.util.List) $r4;

        $r7 = interfaceinvoke r5.<org.xml.sax.Attributes: java.lang.String getValue(java.lang.String)>("name");

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r7);

        return;
    }
}
