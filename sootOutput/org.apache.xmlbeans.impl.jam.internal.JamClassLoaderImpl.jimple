public class org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl extends java.lang.Object implements org.apache.xmlbeans.impl.jam.JamClassLoader
{
    private java.util.Map mName2Package;
    private java.util.Map mFd2ClassCache;
    private org.apache.xmlbeans.impl.jam.provider.JamClassBuilder mBuilder;
    private org.apache.xmlbeans.impl.jam.visitor.MVisitor mInitializer;
    private org.apache.xmlbeans.impl.jam.internal.elements.ElementContext mContext;
    private java.util.Stack mInitializeStack;
    private boolean mAlreadyInitializing;

    public void <init>(org.apache.xmlbeans.impl.jam.internal.elements.ElementContext, org.apache.xmlbeans.impl.jam.provider.JamClassBuilder, org.apache.xmlbeans.impl.jam.visitor.MVisitor)
    {
        org.apache.xmlbeans.impl.jam.visitor.MVisitor r6;
        org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor $r9;
        java.util.HashMap $r1, $r2;
        java.lang.IllegalArgumentException $r7, $r8;
        java.util.Stack $r3;
        org.apache.xmlbeans.impl.jam.provider.JamClassBuilder r4;
        org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl r0;
        org.apache.xmlbeans.impl.jam.internal.elements.ElementContext r5;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl;

        r5 := @parameter0: org.apache.xmlbeans.impl.jam.internal.elements.ElementContext;

        r4 := @parameter1: org.apache.xmlbeans.impl.jam.provider.JamClassBuilder;

        r6 := @parameter2: org.apache.xmlbeans.impl.jam.visitor.MVisitor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: java.util.Map mName2Package> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: java.util.Map mFd2ClassCache> = $r2;

        r0.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: org.apache.xmlbeans.impl.jam.visitor.MVisitor mInitializer> = null;

        $r3 = new java.util.Stack;

        specialinvoke $r3.<java.util.Stack: void <init>()>();

        r0.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: java.util.Stack mInitializeStack> = $r3;

        r0.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: boolean mAlreadyInitializing> = 0;

        if r4 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null builder");

        throw $r8;

     label1:
        if r5 != null goto label2;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null builder");

        throw $r7;

     label2:
        r0.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: org.apache.xmlbeans.impl.jam.provider.JamClassBuilder mBuilder> = r4;

        if r6 != null goto label3;

        $r9 = null;

        goto label4;

     label3:
        $r9 = new org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor;

        specialinvoke $r9.<org.apache.xmlbeans.impl.jam.visitor.TraversingMVisitor: void <init>(org.apache.xmlbeans.impl.jam.visitor.MVisitor)>(r6);

     label4:
        r0.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: org.apache.xmlbeans.impl.jam.visitor.MVisitor mInitializer> = $r9;

        r0.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: org.apache.xmlbeans.impl.jam.internal.elements.ElementContext mContext> = r5;

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: void initCache()>();

        return;
    }

    public final org.apache.xmlbeans.impl.jam.JClass loadClass(java.lang.String)
    {
        org.apache.xmlbeans.impl.jam.provider.JamClassBuilder $r3;
        org.apache.xmlbeans.impl.jam.JClass $r2, $r13, $r15, $r24, $r25, r27, r28;
        org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl r1;
        org.apache.xmlbeans.impl.jam.mutable.MClass $r4;
        java.lang.StringBuffer $r9, $r10, $r20, $r21, $r34, $r36;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9, $i11, $i13;
        java.lang.String $r0, $r11, $r12, $r22, $r23, r26, r29, r30, r31, r32;
        org.apache.xmlbeans.impl.jam.internal.elements.ElementContext $r6, $r8, $r17, $r19;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl $r14;
        org.apache.xmlbeans.impl.jam.internal.elements.UnresolvedClassImpl $r33, $r35;

        r1 := @this: org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl;

        r26 := @parameter0: java.lang.String;

        $r0 = virtualinvoke r26.<java.lang.String: java.lang.String trim()>();

        $r2 = specialinvoke r1.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: org.apache.xmlbeans.impl.jam.JClass cacheGet(java.lang.String)>($r0);

        if $r2 == null goto label01;

        return $r2;

     label01:
        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(91);

        $i7 = (int) -1;

        if $i0 == $i7 goto label03;

        $r23 = staticinvoke <org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl: java.lang.String normalizeArrayName(java.lang.String)>($r0);

        $r24 = specialinvoke r1.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: org.apache.xmlbeans.impl.jam.JClass cacheGet(java.lang.String)>($r23);

        r27 = $r24;

        if $r24 != null goto label02;

        $r25 = staticinvoke <org.apache.xmlbeans.impl.jam.internal.elements.ArrayClassImpl: org.apache.xmlbeans.impl.jam.JClass createClassForFD(java.lang.String,org.apache.xmlbeans.impl.jam.JamClassLoader)>($r23, r1);

        r27 = $r25;

        specialinvoke r1.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: void cachePut(org.apache.xmlbeans.impl.jam.JClass,java.lang.String)>($r25, $r23);

     label02:
        specialinvoke r1.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: void cachePut(org.apache.xmlbeans.impl.jam.JClass,java.lang.String)>(r27, $r0);

        return r27;

     label03:
        $i1 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(36);

        $i9 = (int) -1;

        if $i1 == $i9 goto label07;

        $r12 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r13 = virtualinvoke r1.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: org.apache.xmlbeans.impl.jam.JClass loadClass(java.lang.String)>($r12);

        $r14 = (org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl) $r13;

        virtualinvoke $r14.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void ensureLoaded()>();

        $r15 = specialinvoke r1.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: org.apache.xmlbeans.impl.jam.JClass cacheGet(java.lang.String)>($r0);

        r28 = $r15;

        $i4 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(int)>(46);

        if $r15 != null goto label06;

        $i11 = (int) -1;

        if $i4 != $i11 goto label04;

        r29 = "";

        r30 = $r0;

        goto label05;

     label04:
        r29 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i4);

        $i5 = $i4 + 1;

        r30 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i5);

     label05:
        $r33 = new org.apache.xmlbeans.impl.jam.internal.elements.UnresolvedClassImpl;

        $r17 = r1.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: org.apache.xmlbeans.impl.jam.internal.elements.ElementContext mContext>;

        specialinvoke $r33.<org.apache.xmlbeans.impl.jam.internal.elements.UnresolvedClassImpl: void <init>(java.lang.String,java.lang.String,org.apache.xmlbeans.impl.jam.internal.elements.ElementContext)>(r29, r30, $r17);

        r28 = $r33;

        $r19 = r1.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: org.apache.xmlbeans.impl.jam.internal.elements.ElementContext mContext>;

        $r34 = new java.lang.StringBuffer;

        specialinvoke $r34.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("failed to resolve class ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r19.<org.apache.xmlbeans.impl.jam.internal.elements.ElementContext: void warning(java.lang.String)>($r22);

        specialinvoke r1.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: void cachePut(org.apache.xmlbeans.impl.jam.JClass)>($r33);

     label06:
        return r28;

     label07:
        $i2 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(int)>(46);

        $i13 = (int) -1;

        if $i2 != $i13 goto label08;

        r31 = "";

        r32 = $r0;

        goto label09;

     label08:
        r31 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        $i3 = $i2 + 1;

        r32 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i3);

     label09:
        $r3 = r1.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: org.apache.xmlbeans.impl.jam.provider.JamClassBuilder mBuilder>;

        $r4 = virtualinvoke $r3.<org.apache.xmlbeans.impl.jam.provider.JamClassBuilder: org.apache.xmlbeans.impl.jam.mutable.MClass build(java.lang.String,java.lang.String)>(r31, r32);

        if $r4 != null goto label10;

        $r35 = new org.apache.xmlbeans.impl.jam.internal.elements.UnresolvedClassImpl;

        $r6 = r1.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: org.apache.xmlbeans.impl.jam.internal.elements.ElementContext mContext>;

        specialinvoke $r35.<org.apache.xmlbeans.impl.jam.internal.elements.UnresolvedClassImpl: void <init>(java.lang.String,java.lang.String,org.apache.xmlbeans.impl.jam.internal.elements.ElementContext)>(r31, r32, $r6);

        $r8 = r1.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: org.apache.xmlbeans.impl.jam.internal.elements.ElementContext mContext>;

        $r36 = new java.lang.StringBuffer;

        specialinvoke $r36.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("failed to resolve class ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r8.<org.apache.xmlbeans.impl.jam.internal.elements.ElementContext: void warning(java.lang.String)>($r11);

        specialinvoke r1.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: void cachePut(org.apache.xmlbeans.impl.jam.JClass)>($r35);

        return $r35;

     label10:
        specialinvoke r1.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: void cachePut(org.apache.xmlbeans.impl.jam.JClass)>($r4);

        return $r4;
    }

    public org.apache.xmlbeans.impl.jam.JPackage getPackage(java.lang.String)
    {
        org.apache.xmlbeans.impl.jam.JPackage r7;
        org.apache.xmlbeans.impl.jam.internal.elements.PackageImpl $r4;
        org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl r0;
        java.util.Map $r2, $r6;
        java.lang.Object $r3;
        java.lang.String r1;
        org.apache.xmlbeans.impl.jam.internal.elements.ElementContext $r5;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: java.util.Map mName2Package>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r7 = (org.apache.xmlbeans.impl.jam.JPackage) $r3;

        if r7 != null goto label1;

        $r4 = new org.apache.xmlbeans.impl.jam.internal.elements.PackageImpl;

        $r5 = r0.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: org.apache.xmlbeans.impl.jam.internal.elements.ElementContext mContext>;

        specialinvoke $r4.<org.apache.xmlbeans.impl.jam.internal.elements.PackageImpl: void <init>(org.apache.xmlbeans.impl.jam.internal.elements.ElementContext,java.lang.String)>($r5, r1);

        r7 = $r4;

        $r6 = r0.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: java.util.Map mName2Package>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

     label1:
        return r7;
    }

    private void initCache()
    {
        org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl r0;
        java.util.Map $r1, $r5;
        org.apache.xmlbeans.impl.jam.internal.elements.VoidClassImpl $r3;
        org.apache.xmlbeans.impl.jam.internal.elements.ElementContext $r2, $r4;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl;

        $r2 = r0.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: org.apache.xmlbeans.impl.jam.internal.elements.ElementContext mContext>;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: java.util.Map mFd2ClassCache>;

        staticinvoke <org.apache.xmlbeans.impl.jam.internal.elements.PrimitiveClassImpl: void mapNameToPrimitive(org.apache.xmlbeans.impl.jam.internal.elements.ElementContext,java.util.Map)>($r2, $r1);

        $r5 = r0.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: java.util.Map mFd2ClassCache>;

        $r3 = new org.apache.xmlbeans.impl.jam.internal.elements.VoidClassImpl;

        $r4 = r0.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: org.apache.xmlbeans.impl.jam.internal.elements.ElementContext mContext>;

        specialinvoke $r3.<org.apache.xmlbeans.impl.jam.internal.elements.VoidClassImpl: void <init>(org.apache.xmlbeans.impl.jam.internal.elements.ElementContext)>($r4);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("void", $r3);

        return;
    }

    private void cachePut(org.apache.xmlbeans.impl.jam.JClass)
    {
        org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl r0;
        java.util.Map $r2;
        java.lang.String $r3, $r4;
        org.apache.xmlbeans.impl.jam.JClass r1;
        java.lang.ref.WeakReference $r5;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.JClass;

        $r2 = r0.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: java.util.Map mFd2ClassCache>;

        $r3 = interfaceinvoke r1.<org.apache.xmlbeans.impl.jam.JClass: java.lang.String getFieldDescriptor()>();

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $r5 = new java.lang.ref.WeakReference;

        specialinvoke $r5.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5);

        return;
    }

    private void cachePut(org.apache.xmlbeans.impl.jam.JClass, java.lang.String)
    {
        org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl r0;
        java.util.Map $r4;
        java.lang.String r1;
        java.lang.ref.WeakReference $r2;
        org.apache.xmlbeans.impl.jam.JClass r3;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl;

        r3 := @parameter0: org.apache.xmlbeans.impl.jam.JClass;

        r1 := @parameter1: java.lang.String;

        $r4 = r0.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: java.util.Map mFd2ClassCache>;

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r3);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r2);

        return;
    }

    private org.apache.xmlbeans.impl.jam.JClass cacheGet(java.lang.String)
    {
        java.lang.IllegalStateException $r5;
        org.apache.xmlbeans.impl.jam.JClass $r8, $r11;
        org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl r0;
        java.util.Map $r2, $r9;
        java.lang.Object $r4, $r7;
        java.lang.String r1, $r3, $r10;
        java.lang.ref.WeakReference $r6;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: java.util.Map mFd2ClassCache>;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        if $r4 != null goto label1;

        return null;

     label1:
        $z0 = $r4 instanceof org.apache.xmlbeans.impl.jam.JClass;

        if $z0 == 0 goto label2;

        $r11 = (org.apache.xmlbeans.impl.jam.JClass) $r4;

        return $r11;

     label2:
        $z1 = $r4 instanceof java.lang.ref.WeakReference;

        if $z1 == 0 goto label4;

        $r6 = (java.lang.ref.WeakReference) $r4;

        $r7 = virtualinvoke $r6.<java.lang.ref.WeakReference: java.lang.Object get()>();

        if $r7 != null goto label3;

        $r9 = r0.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: java.util.Map mFd2ClassCache>;

        $r10 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        interfaceinvoke $r9.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r10);

        return null;

     label3:
        $r8 = (org.apache.xmlbeans.impl.jam.JClass) $r7;

        return $r8;

     label4:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();

        throw $r5;
    }

    public void initialize(org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl)
    {
        org.apache.xmlbeans.impl.jam.visitor.MVisitor $r1, $r3, $r8;
        org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl r2, r7;
        java.util.Stack $r4, $r5, $r9;
        org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl r0;
        java.lang.Object $r6;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl;

        r2 := @parameter0: org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: org.apache.xmlbeans.impl.jam.visitor.MVisitor mInitializer>;

        if $r1 == null goto label4;

        $z0 = r0.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: boolean mAlreadyInitializing>;

        if $z0 == 0 goto label1;

        $r9 = r0.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: java.util.Stack mInitializeStack>;

        virtualinvoke $r9.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r2);

        goto label4;

     label1:
        $r3 = r0.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: org.apache.xmlbeans.impl.jam.visitor.MVisitor mInitializer>;

        virtualinvoke r2.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void accept(org.apache.xmlbeans.impl.jam.visitor.MVisitor)>($r3);

     label2:
        $r4 = r0.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: java.util.Stack mInitializeStack>;

        $z1 = virtualinvoke $r4.<java.util.Stack: boolean isEmpty()>();

        if $z1 != 0 goto label3;

        $r5 = r0.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: java.util.Stack mInitializeStack>;

        $r6 = virtualinvoke $r5.<java.util.Stack: java.lang.Object pop()>();

        r7 = (org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl) $r6;

        $r8 = r0.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: org.apache.xmlbeans.impl.jam.visitor.MVisitor mInitializer>;

        virtualinvoke r7.<org.apache.xmlbeans.impl.jam.internal.elements.ClassImpl: void accept(org.apache.xmlbeans.impl.jam.visitor.MVisitor)>($r8);

        goto label2;

     label3:
        r0.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: boolean mAlreadyInitializing> = 0;

     label4:
        return;
    }

    public java.util.Collection getResolvedClasses()
    {
        org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl r0;
        java.util.Map $r1;
        java.util.Collection $r2, $r3;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: java.util.Map mFd2ClassCache>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r2);

        return $r3;
    }

    public void addToCache(org.apache.xmlbeans.impl.jam.JClass)
    {
        org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl r0;
        org.apache.xmlbeans.impl.jam.JClass r1;
        org.apache.xmlbeans.impl.jam.mutable.MClass $r2;

        r0 := @this: org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl;

        r1 := @parameter0: org.apache.xmlbeans.impl.jam.JClass;

        $r2 = (org.apache.xmlbeans.impl.jam.mutable.MClass) r1;

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.internal.JamClassLoaderImpl: void cachePut(org.apache.xmlbeans.impl.jam.JClass)>($r2);

        return;
    }
}
