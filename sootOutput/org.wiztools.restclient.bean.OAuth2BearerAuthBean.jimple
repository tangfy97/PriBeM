public class org.wiztools.restclient.bean.OAuth2BearerAuthBean extends org.wiztools.restclient.bean.AuthorizationHeaderAuthBean implements org.wiztools.restclient.bean.OAuth2BearerAuth
{
    private static final java.util.regex.Pattern p;

    public void <init>()
    {
        org.wiztools.restclient.bean.OAuth2BearerAuthBean r0;

        r0 := @this: org.wiztools.restclient.bean.OAuth2BearerAuthBean;

        specialinvoke r0.<org.wiztools.restclient.bean.AuthorizationHeaderAuthBean: void <init>()>();

        return;
    }

    public void setOAuth2BearerToken(java.lang.String)
    {
        org.wiztools.restclient.bean.OAuth2BearerAuthBean r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String r3, $r5;

        r0 := @this: org.wiztools.restclient.bean.OAuth2BearerAuthBean;

        r3 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bearer ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.wiztools.restclient.bean.OAuth2BearerAuthBean: void setAuthorizationHeaderValue(java.lang.String)>($r5);

        return;
    }

    public java.lang.String getOAuth2BearerToken()
    {
        java.lang.IllegalStateException $r4;
        org.wiztools.restclient.bean.OAuth2BearerAuthBean r0;
        java.util.regex.Matcher $r3;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r1, $r9, $r10;
        java.util.regex.Pattern $r2, $r7;
        boolean $z0;

        r0 := @this: org.wiztools.restclient.bean.OAuth2BearerAuthBean;

        $r1 = virtualinvoke r0.<org.wiztools.restclient.bean.OAuth2BearerAuthBean: java.lang.String getAuthorizationHeaderValue()>();

        $r2 = <org.wiztools.restclient.bean.OAuth2BearerAuthBean: java.util.regex.Pattern p>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label1;

        $r10 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        return $r10;

     label1:
        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OAuth2 Header does not match pattern: ");

        $r7 = <org.wiztools.restclient.bean.OAuth2BearerAuthBean: java.util.regex.Pattern p>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r4;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("Bearer\\s(.*)");

        <org.wiztools.restclient.bean.OAuth2BearerAuthBean: java.util.regex.Pattern p> = $r0;

        return;
    }
}
