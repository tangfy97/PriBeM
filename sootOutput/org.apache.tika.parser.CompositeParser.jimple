public class org.apache.tika.parser.CompositeParser extends org.apache.tika.parser.AbstractParser
{
    private static final long serialVersionUID;
    private org.apache.tika.mime.MediaTypeRegistry registry;
    private java.util.List parsers;
    private org.apache.tika.parser.Parser fallback;

    public void <init>(org.apache.tika.mime.MediaTypeRegistry, java.util.List)
    {
        java.util.List r2;
        org.apache.tika.mime.MediaTypeRegistry r3;
        org.apache.tika.parser.CompositeParser r0;
        org.apache.tika.parser.EmptyParser $r1;

        r0 := @this: org.apache.tika.parser.CompositeParser;

        r3 := @parameter0: org.apache.tika.mime.MediaTypeRegistry;

        r2 := @parameter1: java.util.List;

        specialinvoke r0.<org.apache.tika.parser.AbstractParser: void <init>()>();

        $r1 = new org.apache.tika.parser.EmptyParser;

        specialinvoke $r1.<org.apache.tika.parser.EmptyParser: void <init>()>();

        r0.<org.apache.tika.parser.CompositeParser: org.apache.tika.parser.Parser fallback> = $r1;

        r0.<org.apache.tika.parser.CompositeParser: java.util.List parsers> = r2;

        r0.<org.apache.tika.parser.CompositeParser: org.apache.tika.mime.MediaTypeRegistry registry> = r3;

        return;
    }

    public transient void <init>(org.apache.tika.mime.MediaTypeRegistry, org.apache.tika.parser.Parser[])
    {
        org.apache.tika.parser.Parser[] r2;
        java.util.List $r3;
        org.apache.tika.mime.MediaTypeRegistry r1;
        org.apache.tika.parser.CompositeParser r0;

        r0 := @this: org.apache.tika.parser.CompositeParser;

        r1 := @parameter0: org.apache.tika.mime.MediaTypeRegistry;

        r2 := @parameter1: org.apache.tika.parser.Parser[];

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2);

        specialinvoke r0.<org.apache.tika.parser.CompositeParser: void <init>(org.apache.tika.mime.MediaTypeRegistry,java.util.List)>(r1, $r3);

        return;
    }

    public void <init>()
    {
        org.apache.tika.parser.Parser[] $r2;
        org.apache.tika.parser.CompositeParser r0;
        org.apache.tika.mime.MediaTypeRegistry $r1;

        r0 := @this: org.apache.tika.parser.CompositeParser;

        $r1 = new org.apache.tika.mime.MediaTypeRegistry;

        specialinvoke $r1.<org.apache.tika.mime.MediaTypeRegistry: void <init>()>();

        $r2 = newarray (org.apache.tika.parser.Parser)[0];

        specialinvoke r0.<org.apache.tika.parser.CompositeParser: void <init>(org.apache.tika.mime.MediaTypeRegistry,org.apache.tika.parser.Parser[])>($r1, $r2);

        return;
    }

    public java.util.Map getParsers(org.apache.tika.parser.ParseContext)
    {
        java.util.Iterator $r3, $r8;
        org.apache.tika.parser.Parser r5;
        org.apache.tika.mime.MediaTypeRegistry $r11;
        java.util.Set $r7;
        java.util.HashMap $r0;
        org.apache.tika.parser.CompositeParser r1;
        org.apache.tika.mime.MediaType r10, $r12;
        java.util.List $r2;
        org.apache.tika.parser.ParseContext r6;
        java.lang.Object $r4, $r9;
        boolean $z0, $z1;

        r1 := @this: org.apache.tika.parser.CompositeParser;

        r6 := @parameter0: org.apache.tika.parser.ParseContext;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r2 = r1.<org.apache.tika.parser.CompositeParser: java.util.List parsers>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.tika.parser.Parser) $r4;

        $r7 = interfaceinvoke r5.<org.apache.tika.parser.Parser: java.util.Set getSupportedTypes(org.apache.tika.parser.ParseContext)>(r6);

        $r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.apache.tika.mime.MediaType) $r9;

        $r11 = r1.<org.apache.tika.parser.CompositeParser: org.apache.tika.mime.MediaTypeRegistry registry>;

        $r12 = virtualinvoke $r11.<org.apache.tika.mime.MediaTypeRegistry: org.apache.tika.mime.MediaType normalize(org.apache.tika.mime.MediaType)>(r10);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, r5);

        goto label2;

     label3:
        goto label1;

     label4:
        return $r0;
    }

    public java.util.Map findDuplicateParsers(org.apache.tika.parser.ParseContext)
    {
        org.apache.tika.parser.Parser r6;
        org.apache.tika.mime.MediaTypeRegistry $r12;
        java.util.HashMap $r0, $r1;
        org.apache.tika.mime.MediaType r11, $r13;
        java.util.ArrayList $r15;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r4, $r9;
        java.util.Set $r8;
        org.apache.tika.parser.CompositeParser r2;
        java.util.List $r3, r17;
        org.apache.tika.parser.ParseContext r7;
        java.lang.Object $r5, $r10, $r14, $r16;

        r2 := @this: org.apache.tika.parser.CompositeParser;

        r7 := @parameter0: org.apache.tika.parser.ParseContext;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r3 = r2.<org.apache.tika.parser.CompositeParser: java.util.List parsers>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.tika.parser.Parser) $r5;

        $r8 = interfaceinvoke r6.<org.apache.tika.parser.Parser: java.util.Set getSupportedTypes(org.apache.tika.parser.ParseContext)>(r7);

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (org.apache.tika.mime.MediaType) $r10;

        $r12 = r2.<org.apache.tika.parser.CompositeParser: org.apache.tika.mime.MediaTypeRegistry registry>;

        $r13 = virtualinvoke $r12.<org.apache.tika.mime.MediaTypeRegistry: org.apache.tika.mime.MediaType normalize(org.apache.tika.mime.MediaType)>(r11);

        $z2 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r13);

        if $z2 == 0 goto label4;

        $r14 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13);

        r17 = (java.util.List) $r14;

        if r17 != null goto label3;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        r17 = $r15;

        $r16 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13);

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r16);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r15);

     label3:
        interfaceinvoke r17.<java.util.List: boolean add(java.lang.Object)>(r6);

        goto label5;

     label4:
        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, r6);

     label5:
        goto label2;

     label6:
        goto label1;

     label7:
        return $r1;
    }

    public org.apache.tika.mime.MediaTypeRegistry getMediaTypeRegistry()
    {
        org.apache.tika.parser.CompositeParser r0;
        org.apache.tika.mime.MediaTypeRegistry $r1;

        r0 := @this: org.apache.tika.parser.CompositeParser;

        $r1 = r0.<org.apache.tika.parser.CompositeParser: org.apache.tika.mime.MediaTypeRegistry registry>;

        return $r1;
    }

    public void setMediaTypeRegistry(org.apache.tika.mime.MediaTypeRegistry)
    {
        org.apache.tika.parser.CompositeParser r0;
        org.apache.tika.mime.MediaTypeRegistry r1;

        r0 := @this: org.apache.tika.parser.CompositeParser;

        r1 := @parameter0: org.apache.tika.mime.MediaTypeRegistry;

        r0.<org.apache.tika.parser.CompositeParser: org.apache.tika.mime.MediaTypeRegistry registry> = r1;

        return;
    }

    public java.util.Map getParsers()
    {
        org.apache.tika.parser.CompositeParser r0;
        org.apache.tika.parser.ParseContext $r1;
        java.util.Map $r2;

        r0 := @this: org.apache.tika.parser.CompositeParser;

        $r1 = new org.apache.tika.parser.ParseContext;

        specialinvoke $r1.<org.apache.tika.parser.ParseContext: void <init>()>();

        $r2 = virtualinvoke r0.<org.apache.tika.parser.CompositeParser: java.util.Map getParsers(org.apache.tika.parser.ParseContext)>($r1);

        return $r2;
    }

    public void setParsers(java.util.Map)
    {
        java.util.Map$Entry r6;
        java.util.Iterator $r4;
        org.apache.tika.parser.Parser $r9, $r12;
        java.util.Set $r3, $r11;
        org.apache.tika.parser.CompositeParser r0;
        java.util.ArrayList $r1;
        java.util.List $r7;
        java.util.Map r2;
        int $i0;
        java.lang.Object $r5, $r8, $r10;
        boolean $z0;

        r0 := @this: org.apache.tika.parser.CompositeParser;

        r2 := @parameter0: java.util.Map;

        $r1 = new java.util.ArrayList;

        $i0 = interfaceinvoke r2.<java.util.Map: int size()>();

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0);

        r0.<org.apache.tika.parser.CompositeParser: java.util.List parsers> = $r1;

        $r3 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r7 = r0.<org.apache.tika.parser.CompositeParser: java.util.List parsers>;

        $r8 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (org.apache.tika.parser.Parser) $r8;

        $r10 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r10);

        $r12 = staticinvoke <org.apache.tika.parser.ParserDecorator: org.apache.tika.parser.Parser withTypes(org.apache.tika.parser.Parser,java.util.Set)>($r9, $r11);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r12);

        goto label1;

     label2:
        return;
    }

    public org.apache.tika.parser.Parser getFallback()
    {
        org.apache.tika.parser.CompositeParser r0;
        org.apache.tika.parser.Parser $r1;

        r0 := @this: org.apache.tika.parser.CompositeParser;

        $r1 = r0.<org.apache.tika.parser.CompositeParser: org.apache.tika.parser.Parser fallback>;

        return $r1;
    }

    public void setFallback(org.apache.tika.parser.Parser)
    {
        org.apache.tika.parser.CompositeParser r0;
        org.apache.tika.parser.Parser r1;

        r0 := @this: org.apache.tika.parser.CompositeParser;

        r1 := @parameter0: org.apache.tika.parser.Parser;

        r0.<org.apache.tika.parser.CompositeParser: org.apache.tika.parser.Parser fallback> = r1;

        return;
    }

    protected org.apache.tika.parser.Parser getParser(org.apache.tika.metadata.Metadata)
    {
        org.apache.tika.metadata.Metadata r1;
        org.apache.tika.parser.Parser $r3;
        org.apache.tika.parser.ParseContext $r2;
        org.apache.tika.parser.CompositeParser r0;

        r0 := @this: org.apache.tika.parser.CompositeParser;

        r1 := @parameter0: org.apache.tika.metadata.Metadata;

        $r2 = new org.apache.tika.parser.ParseContext;

        specialinvoke $r2.<org.apache.tika.parser.ParseContext: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.tika.parser.CompositeParser: org.apache.tika.parser.Parser getParser(org.apache.tika.metadata.Metadata,org.apache.tika.parser.ParseContext)>(r1, $r2);

        return $r3;
    }

    protected org.apache.tika.parser.Parser getParser(org.apache.tika.metadata.Metadata, org.apache.tika.parser.ParseContext)
    {
        org.apache.tika.parser.Parser $r6, r8;
        org.apache.tika.mime.MediaTypeRegistry $r9, $r10;
        org.apache.tika.parser.CompositeParser r0;
        org.apache.tika.mime.MediaType $r5, r11;
        org.apache.tika.metadata.Metadata r3;
        org.apache.tika.parser.ParseContext r1;
        java.util.Map $r2;
        java.lang.Object $r7;
        java.lang.String $r4;

        r0 := @this: org.apache.tika.parser.CompositeParser;

        r3 := @parameter0: org.apache.tika.metadata.Metadata;

        r1 := @parameter1: org.apache.tika.parser.ParseContext;

        $r2 = virtualinvoke r0.<org.apache.tika.parser.CompositeParser: java.util.Map getParsers(org.apache.tika.parser.ParseContext)>(r1);

        $r4 = virtualinvoke r3.<org.apache.tika.metadata.Metadata: java.lang.String get(java.lang.String)>("Content-Type");

        $r5 = staticinvoke <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType parse(java.lang.String)>($r4);

        r11 = $r5;

        if $r5 == null goto label1;

        $r10 = r0.<org.apache.tika.parser.CompositeParser: org.apache.tika.mime.MediaTypeRegistry registry>;

        r11 = virtualinvoke $r10.<org.apache.tika.mime.MediaTypeRegistry: org.apache.tika.mime.MediaType normalize(org.apache.tika.mime.MediaType)>($r5);

     label1:
        if r11 == null goto label3;

        $r7 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r11);

        r8 = (org.apache.tika.parser.Parser) $r7;

        if r8 == null goto label2;

        return r8;

     label2:
        $r9 = r0.<org.apache.tika.parser.CompositeParser: org.apache.tika.mime.MediaTypeRegistry registry>;

        r11 = virtualinvoke $r9.<org.apache.tika.mime.MediaTypeRegistry: org.apache.tika.mime.MediaType getSupertype(org.apache.tika.mime.MediaType)>(r11);

        goto label1;

     label3:
        $r6 = r0.<org.apache.tika.parser.CompositeParser: org.apache.tika.parser.Parser fallback>;

        return $r6;
    }

    public java.util.Set getSupportedTypes(org.apache.tika.parser.ParseContext)
    {
        org.apache.tika.parser.ParseContext r1;
        java.util.Map $r2;
        java.util.Set $r3;
        org.apache.tika.parser.CompositeParser r0;

        r0 := @this: org.apache.tika.parser.CompositeParser;

        r1 := @parameter0: org.apache.tika.parser.ParseContext;

        $r2 = virtualinvoke r0.<org.apache.tika.parser.CompositeParser: java.util.Map getParsers(org.apache.tika.parser.ParseContext)>(r1);

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        return $r3;
    }

    public void parse(java.io.InputStream, org.xml.sax.ContentHandler, org.apache.tika.metadata.Metadata, org.apache.tika.parser.ParseContext) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        java.lang.Throwable $r11;
        org.apache.tika.parser.Parser $r3;
        org.apache.tika.metadata.Metadata r1;
        org.apache.tika.sax.TaggedContentHandler r8, $r30;
        org.apache.tika.exception.TikaException $r13, $r19, $r25;
        org.apache.tika.io.TikaInputStream $r6;
        org.xml.sax.ContentHandler r7;
        java.lang.String $r10, $r17, $r23, $r29;
        org.apache.tika.io.TemporaryResources $r4;
        org.apache.tika.parser.CompositeParser r0;
        java.io.IOException $r18;
        java.lang.RuntimeException $r24;
        org.apache.tika.parser.ParseContext r2;
        org.xml.sax.SAXException $r12;
        java.lang.Class $r9;
        java.lang.StringBuilder $r14, $r15, $r16, $r20, $r21, $r22, $r26, $r27, $r28;
        java.io.InputStream r5;

        r0 := @this: org.apache.tika.parser.CompositeParser;

        r5 := @parameter0: java.io.InputStream;

        r7 := @parameter1: org.xml.sax.ContentHandler;

        r1 := @parameter2: org.apache.tika.metadata.Metadata;

        r2 := @parameter3: org.apache.tika.parser.ParseContext;

        $r3 = virtualinvoke r0.<org.apache.tika.parser.CompositeParser: org.apache.tika.parser.Parser getParser(org.apache.tika.metadata.Metadata,org.apache.tika.parser.ParseContext)>(r1, r2);

        $r4 = new org.apache.tika.io.TemporaryResources;

        specialinvoke $r4.<org.apache.tika.io.TemporaryResources: void <init>()>();

     label01:
        $r6 = staticinvoke <org.apache.tika.io.TikaInputStream: org.apache.tika.io.TikaInputStream get(java.io.InputStream,org.apache.tika.io.TemporaryResources)>(r5, $r4);

        if r7 == null goto label02;

        $r30 = new org.apache.tika.sax.TaggedContentHandler;

        specialinvoke $r30.<org.apache.tika.sax.TaggedContentHandler: void <init>(org.xml.sax.ContentHandler)>(r7);

        goto label03;

     label02:
        $r30 = null;

     label03:
        r8 = $r30;

        $r9 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<org.apache.tika.metadata.Metadata: void add(java.lang.String,java.lang.String)>("X-Parsed-By", $r10);

     label04:
        interfaceinvoke $r3.<org.apache.tika.parser.Parser: void parse(java.io.InputStream,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,org.apache.tika.parser.ParseContext)>($r6, $r30, r1, r2);

     label05:
        goto label10;

     label06:
        $r24 := @caughtexception;

        $r25 = new org.apache.tika.exception.TikaException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected RuntimeException from ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<org.apache.tika.exception.TikaException: void <init>(java.lang.String,java.lang.Throwable)>($r29, $r24);

        throw $r25;

     label07:
        $r18 := @caughtexception;

        virtualinvoke $r6.<org.apache.tika.io.TikaInputStream: void throwIfCauseOf(java.lang.Exception)>($r18);

        $r19 = new org.apache.tika.exception.TikaException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TIKA-198: Illegal IOException from ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<org.apache.tika.exception.TikaException: void <init>(java.lang.String,java.lang.Throwable)>($r23, $r18);

        throw $r19;

     label08:
        $r12 := @caughtexception;

        if r8 == null goto label09;

        virtualinvoke r8.<org.apache.tika.sax.TaggedContentHandler: void throwIfCauseOf(java.lang.Exception)>($r12);

     label09:
        $r13 = new org.apache.tika.exception.TikaException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TIKA-237: Illegal SAXException from ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<org.apache.tika.exception.TikaException: void <init>(java.lang.String,java.lang.Throwable)>($r17, $r12);

        throw $r13;

     label10:
        virtualinvoke $r4.<org.apache.tika.io.TemporaryResources: void dispose()>();

        goto label13;

     label11:
        $r11 := @caughtexception;

     label12:
        virtualinvoke $r4.<org.apache.tika.io.TemporaryResources: void dispose()>();

        throw $r11;

     label13:
        return;

        catch java.lang.RuntimeException from label04 to label05 with label06;
        catch java.io.IOException from label04 to label05 with label07;
        catch org.xml.sax.SAXException from label04 to label05 with label08;
        catch java.lang.Throwable from label01 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public static void <clinit>()
    {
        <org.apache.tika.parser.CompositeParser: long serialVersionUID> = 2192845797749627824L;

        return;
    }
}
