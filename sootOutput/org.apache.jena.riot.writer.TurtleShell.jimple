public abstract class org.apache.jena.riot.writer.TurtleShell extends java.lang.Object
{
    protected final org.apache.jena.atlas.io.IndentedWriter out;
    protected final org.apache.jena.riot.out.NodeFormatter nodeFmt;
    protected final org.apache.jena.riot.system.PrefixMap prefixMap;
    protected final java.lang.String baseURI;
    private static java.util.Comparator compPredicates;

    protected void <init>(org.apache.jena.atlas.io.IndentedWriter, org.apache.jena.riot.system.PrefixMap, java.lang.String)
    {
        org.apache.jena.riot.out.NodeToLabel $r4;
        org.apache.jena.riot.system.PrefixMap r5;
        org.apache.jena.riot.writer.TurtleShell r0;
        org.apache.jena.riot.out.NodeFormatterTTL $r2;
        java.lang.String r3;
        org.apache.jena.atlas.io.IndentedWriter r1;

        r0 := @this: org.apache.jena.riot.writer.TurtleShell;

        r1 := @parameter0: org.apache.jena.atlas.io.IndentedWriter;

        r5 := @parameter1: org.apache.jena.riot.system.PrefixMap;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jena.riot.writer.TurtleShell: org.apache.jena.atlas.io.IndentedWriter out> = r1;

        if r5 != null goto label1;

        r5 = staticinvoke <org.apache.jena.riot.system.PrefixMapFactory: org.apache.jena.riot.system.PrefixMap emptyPrefixMap()>();

     label1:
        $r2 = new org.apache.jena.riot.out.NodeFormatterTTL;

        $r4 = staticinvoke <org.apache.jena.riot.out.NodeToLabel: org.apache.jena.riot.out.NodeToLabel createScopeByDocument()>();

        specialinvoke $r2.<org.apache.jena.riot.out.NodeFormatterTTL: void <init>(java.lang.String,org.apache.jena.riot.system.PrefixMap,org.apache.jena.riot.out.NodeToLabel)>(r3, r5, $r4);

        r0.<org.apache.jena.riot.writer.TurtleShell: org.apache.jena.riot.out.NodeFormatter nodeFmt> = $r2;

        r0.<org.apache.jena.riot.writer.TurtleShell: org.apache.jena.riot.system.PrefixMap prefixMap> = r5;

        r0.<org.apache.jena.riot.writer.TurtleShell: java.lang.String baseURI> = r3;

        return;
    }

    protected void writeBase(java.lang.String)
    {
        org.apache.jena.riot.writer.TurtleShell r0;
        java.lang.String r1;
        org.apache.jena.atlas.io.IndentedWriter $r2;

        r0 := @this: org.apache.jena.riot.writer.TurtleShell;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.jena.riot.writer.TurtleShell: org.apache.jena.atlas.io.IndentedWriter out>;

        staticinvoke <org.apache.jena.riot.system.RiotLib: void writeBase(org.apache.jena.atlas.io.IndentedWriter,java.lang.String)>($r2, r1);

        return;
    }

    protected void writePrefixes(org.apache.jena.riot.system.PrefixMap)
    {
        org.apache.jena.riot.writer.TurtleShell r0;
        org.apache.jena.riot.system.PrefixMap r1;
        org.apache.jena.atlas.io.IndentedWriter $r2;

        r0 := @this: org.apache.jena.riot.writer.TurtleShell;

        r1 := @parameter0: org.apache.jena.riot.system.PrefixMap;

        $r2 = r0.<org.apache.jena.riot.writer.TurtleShell: org.apache.jena.atlas.io.IndentedWriter out>;

        staticinvoke <org.apache.jena.riot.system.RiotLib: void writePrefixes(org.apache.jena.atlas.io.IndentedWriter,org.apache.jena.riot.system.PrefixMap)>($r2, r1);

        return;
    }

    protected void writeGraphTTL(com.hp.hpl.jena.graph.Graph)
    {
        org.apache.jena.riot.writer.TurtleShell r1;
        org.apache.jena.riot.writer.TurtleShell$ShellGraph $r0;
        com.hp.hpl.jena.graph.Graph r2;

        r1 := @this: org.apache.jena.riot.writer.TurtleShell;

        r2 := @parameter0: com.hp.hpl.jena.graph.Graph;

        $r0 = new org.apache.jena.riot.writer.TurtleShell$ShellGraph;

        specialinvoke $r0.<org.apache.jena.riot.writer.TurtleShell$ShellGraph: void <init>(org.apache.jena.riot.writer.TurtleShell,com.hp.hpl.jena.graph.Graph,org.apache.jena.riot.writer.TurtleShell$1)>(r1, r2, null);

        staticinvoke <org.apache.jena.riot.writer.TurtleShell$ShellGraph: void access$100(org.apache.jena.riot.writer.TurtleShell$ShellGraph)>($r0);

        return;
    }

    protected final void writeNode(com.hp.hpl.jena.graph.Node)
    {
        org.apache.jena.riot.writer.TurtleShell r0;
        com.hp.hpl.jena.graph.Node r1;
        org.apache.jena.riot.out.NodeFormatter $r3;
        org.apache.jena.atlas.io.IndentedWriter $r2;

        r0 := @this: org.apache.jena.riot.writer.TurtleShell;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r3 = r0.<org.apache.jena.riot.writer.TurtleShell: org.apache.jena.riot.out.NodeFormatter nodeFmt>;

        $r2 = r0.<org.apache.jena.riot.writer.TurtleShell: org.apache.jena.atlas.io.IndentedWriter out>;

        interfaceinvoke $r3.<org.apache.jena.riot.out.NodeFormatter: void format(org.apache.jena.atlas.io.AWriter,com.hp.hpl.jena.graph.Node)>($r2, r1);

        return;
    }

    private void print(java.lang.String)
    {
        org.apache.jena.riot.writer.TurtleShell r0;
        java.lang.String r1;
        org.apache.jena.atlas.io.IndentedWriter $r2;

        r0 := @this: org.apache.jena.riot.writer.TurtleShell;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.jena.riot.writer.TurtleShell: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r2.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(r1);

        return;
    }

    private void gap(int)
    {
        org.apache.jena.riot.writer.TurtleShell r0;
        int i0;
        org.apache.jena.atlas.io.IndentedWriter $r1;

        r0 := @this: org.apache.jena.riot.writer.TurtleShell;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.jena.riot.writer.TurtleShell: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r1.<org.apache.jena.atlas.io.IndentedWriter: void print(char,int)>(32, i0);

        return;
    }

    private void println()
    {
        org.apache.jena.riot.writer.TurtleShell r0;
        org.apache.jena.atlas.io.IndentedWriter $r1;

        r0 := @this: org.apache.jena.riot.writer.TurtleShell;

        $r1 = r0.<org.apache.jena.riot.writer.TurtleShell: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r1.<org.apache.jena.atlas.io.IndentedWriter: void println()>();

        return;
    }

    static void access$200(org.apache.jena.riot.writer.TurtleShell)
    {
        org.apache.jena.riot.writer.TurtleShell r0;

        r0 := @parameter0: org.apache.jena.riot.writer.TurtleShell;

        specialinvoke r0.<org.apache.jena.riot.writer.TurtleShell: void println()>();

        return;
    }

    static void access$300(org.apache.jena.riot.writer.TurtleShell, int)
    {
        org.apache.jena.riot.writer.TurtleShell r0;
        int i0;

        r0 := @parameter0: org.apache.jena.riot.writer.TurtleShell;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.jena.riot.writer.TurtleShell: void gap(int)>(i0);

        return;
    }

    static void access$400(org.apache.jena.riot.writer.TurtleShell, java.lang.String)
    {
        org.apache.jena.riot.writer.TurtleShell r0;
        java.lang.String r1;

        r0 := @parameter0: org.apache.jena.riot.writer.TurtleShell;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.jena.riot.writer.TurtleShell: void print(java.lang.String)>(r1);

        return;
    }

    static java.util.Comparator access$500()
    {
        java.util.Comparator $r0;

        $r0 = <org.apache.jena.riot.writer.TurtleShell: java.util.Comparator compPredicates>;

        return $r0;
    }

    static void <clinit>()
    {
        org.apache.jena.riot.writer.TurtleShell$ComparePredicates $r0;

        $r0 = new org.apache.jena.riot.writer.TurtleShell$ComparePredicates;

        specialinvoke $r0.<org.apache.jena.riot.writer.TurtleShell$ComparePredicates: void <init>(org.apache.jena.riot.writer.TurtleShell$1)>(null);

        <org.apache.jena.riot.writer.TurtleShell: java.util.Comparator compPredicates> = $r0;

        return;
    }
}
