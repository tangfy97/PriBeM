class org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$Not extends java.lang.Object implements org.apache.pdfbox.pdmodel.common.function.type4.Operator
{

    void <init>()
    {
        org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$Not r0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$Not;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)
    {
        org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$Not r8;
        org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext r0;
        java.lang.ClassCastException $r3;
        java.lang.Integer $r4, $r5;
        java.util.Stack $r1;
        int $i0, i1;
        java.lang.Boolean $r6, $r7;
        java.lang.Object $r2;
        boolean $z0, $z1, $z2, $z3;

        r8 := @this: org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$Not;

        r0 := @parameter0: org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext: java.util.Stack getStack()>();

        $r2 = virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        $z0 = $r2 instanceof java.lang.Boolean;

        if $z0 == 0 goto label3;

        $r6 = (java.lang.Boolean) $r2;

        $z2 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);

        virtualinvoke $r1.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r7);

        goto label5;

     label3:
        $z1 = $r2 instanceof java.lang.Integer;

        if $z1 == 0 goto label4;

        $r4 = (java.lang.Integer) $r2;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        i1 = neg $i0;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke $r1.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r5);

        goto label5;

     label4:
        $r3 = new java.lang.ClassCastException;

        specialinvoke $r3.<java.lang.ClassCastException: void <init>(java.lang.String)>("Operand must be bool or int");

        throw $r3;

     label5:
        return;
    }
}
