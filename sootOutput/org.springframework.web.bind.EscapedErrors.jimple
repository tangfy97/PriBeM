public class org.springframework.web.bind.EscapedErrors extends java.lang.Object implements org.springframework.validation.Errors
{
    private final org.springframework.validation.Errors source;

    public void <init>(org.springframework.validation.Errors)
    {
        org.springframework.validation.Errors r1;
        java.lang.IllegalArgumentException $r2;
        org.springframework.web.bind.EscapedErrors r0;

        r0 := @this: org.springframework.web.bind.EscapedErrors;

        r1 := @parameter0: org.springframework.validation.Errors;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot wrap a null instance");

        throw $r2;

     label1:
        r0.<org.springframework.web.bind.EscapedErrors: org.springframework.validation.Errors source> = r1;

        return;
    }

    public org.springframework.validation.Errors getSource()
    {
        org.springframework.validation.Errors $r1;
        org.springframework.web.bind.EscapedErrors r0;

        r0 := @this: org.springframework.web.bind.EscapedErrors;

        $r1 = r0.<org.springframework.web.bind.EscapedErrors: org.springframework.validation.Errors source>;

        return $r1;
    }

    public java.lang.String getObjectName()
    {
        org.springframework.validation.Errors $r1;
        java.lang.String $r2;
        org.springframework.web.bind.EscapedErrors r0;

        r0 := @this: org.springframework.web.bind.EscapedErrors;

        $r1 = r0.<org.springframework.web.bind.EscapedErrors: org.springframework.validation.Errors source>;

        $r2 = interfaceinvoke $r1.<org.springframework.validation.Errors: java.lang.String getObjectName()>();

        return $r2;
    }

    public void setNestedPath(java.lang.String)
    {
        org.springframework.validation.Errors $r2;
        java.lang.String r1;
        org.springframework.web.bind.EscapedErrors r0;

        r0 := @this: org.springframework.web.bind.EscapedErrors;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.web.bind.EscapedErrors: org.springframework.validation.Errors source>;

        interfaceinvoke $r2.<org.springframework.validation.Errors: void setNestedPath(java.lang.String)>(r1);

        return;
    }

    public java.lang.String getNestedPath()
    {
        org.springframework.validation.Errors $r1;
        java.lang.String $r2;
        org.springframework.web.bind.EscapedErrors r0;

        r0 := @this: org.springframework.web.bind.EscapedErrors;

        $r1 = r0.<org.springframework.web.bind.EscapedErrors: org.springframework.validation.Errors source>;

        $r2 = interfaceinvoke $r1.<org.springframework.validation.Errors: java.lang.String getNestedPath()>();

        return $r2;
    }

    public void pushNestedPath(java.lang.String)
    {
        org.springframework.validation.Errors $r2;
        java.lang.String r1;
        org.springframework.web.bind.EscapedErrors r0;

        r0 := @this: org.springframework.web.bind.EscapedErrors;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.web.bind.EscapedErrors: org.springframework.validation.Errors source>;

        interfaceinvoke $r2.<org.springframework.validation.Errors: void pushNestedPath(java.lang.String)>(r1);

        return;
    }

    public void popNestedPath() throws java.lang.IllegalStateException
    {
        org.springframework.validation.Errors $r1;
        org.springframework.web.bind.EscapedErrors r0;

        r0 := @this: org.springframework.web.bind.EscapedErrors;

        $r1 = r0.<org.springframework.web.bind.EscapedErrors: org.springframework.validation.Errors source>;

        interfaceinvoke $r1.<org.springframework.validation.Errors: void popNestedPath()>();

        return;
    }

    public void reject(java.lang.String)
    {
        org.springframework.validation.Errors $r2;
        java.lang.String r1;
        org.springframework.web.bind.EscapedErrors r0;

        r0 := @this: org.springframework.web.bind.EscapedErrors;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.web.bind.EscapedErrors: org.springframework.validation.Errors source>;

        interfaceinvoke $r2.<org.springframework.validation.Errors: void reject(java.lang.String)>(r1);

        return;
    }

    public void reject(java.lang.String, java.lang.String)
    {
        org.springframework.validation.Errors $r3;
        org.springframework.web.bind.EscapedErrors r0;
        java.lang.String r1, r2;

        r0 := @this: org.springframework.web.bind.EscapedErrors;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.springframework.web.bind.EscapedErrors: org.springframework.validation.Errors source>;

        interfaceinvoke $r3.<org.springframework.validation.Errors: void reject(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void reject(java.lang.String, java.lang.Object[], java.lang.String)
    {
        org.springframework.validation.Errors $r4;
        java.lang.Object[] r2;
        org.springframework.web.bind.EscapedErrors r0;
        java.lang.String r1, r3;

        r0 := @this: org.springframework.web.bind.EscapedErrors;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<org.springframework.web.bind.EscapedErrors: org.springframework.validation.Errors source>;

        interfaceinvoke $r4.<org.springframework.validation.Errors: void reject(java.lang.String,java.lang.Object[],java.lang.String)>(r1, r2, r3);

        return;
    }

    public void rejectValue(java.lang.String, java.lang.String)
    {
        org.springframework.validation.Errors $r3;
        org.springframework.web.bind.EscapedErrors r0;
        java.lang.String r1, r2;

        r0 := @this: org.springframework.web.bind.EscapedErrors;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.springframework.web.bind.EscapedErrors: org.springframework.validation.Errors source>;

        interfaceinvoke $r3.<org.springframework.validation.Errors: void rejectValue(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void rejectValue(java.lang.String, java.lang.String, java.lang.String)
    {
        org.springframework.validation.Errors $r4;
        org.springframework.web.bind.EscapedErrors r0;
        java.lang.String r1, r2, r3;

        r0 := @this: org.springframework.web.bind.EscapedErrors;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<org.springframework.web.bind.EscapedErrors: org.springframework.validation.Errors source>;

        interfaceinvoke $r4.<org.springframework.validation.Errors: void rejectValue(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        return;
    }

    public void rejectValue(java.lang.String, java.lang.String, java.lang.Object[], java.lang.String)
    {
        org.springframework.validation.Errors $r5;
        java.lang.Object[] r3;
        org.springframework.web.bind.EscapedErrors r0;
        java.lang.String r1, r2, r4;

        r0 := @this: org.springframework.web.bind.EscapedErrors;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        r4 := @parameter3: java.lang.String;

        $r5 = r0.<org.springframework.web.bind.EscapedErrors: org.springframework.validation.Errors source>;

        interfaceinvoke $r5.<org.springframework.validation.Errors: void rejectValue(java.lang.String,java.lang.String,java.lang.Object[],java.lang.String)>(r1, r2, r3, r4);

        return;
    }

    public void addAllErrors(org.springframework.validation.Errors)
    {
        org.springframework.validation.Errors r1, $r2;
        org.springframework.web.bind.EscapedErrors r0;

        r0 := @this: org.springframework.web.bind.EscapedErrors;

        r1 := @parameter0: org.springframework.validation.Errors;

        $r2 = r0.<org.springframework.web.bind.EscapedErrors: org.springframework.validation.Errors source>;

        interfaceinvoke $r2.<org.springframework.validation.Errors: void addAllErrors(org.springframework.validation.Errors)>(r1);

        return;
    }

    public boolean hasErrors()
    {
        org.springframework.validation.Errors $r1;
        org.springframework.web.bind.EscapedErrors r0;
        boolean $z0;

        r0 := @this: org.springframework.web.bind.EscapedErrors;

        $r1 = r0.<org.springframework.web.bind.EscapedErrors: org.springframework.validation.Errors source>;

        $z0 = interfaceinvoke $r1.<org.springframework.validation.Errors: boolean hasErrors()>();

        return $z0;
    }

    public int getErrorCount()
    {
        int $i0;
        org.springframework.validation.Errors $r1;
        org.springframework.web.bind.EscapedErrors r0;

        r0 := @this: org.springframework.web.bind.EscapedErrors;

        $r1 = r0.<org.springframework.web.bind.EscapedErrors: org.springframework.validation.Errors source>;

        $i0 = interfaceinvoke $r1.<org.springframework.validation.Errors: int getErrorCount()>();

        return $i0;
    }

    public java.util.List getAllErrors()
    {
        org.springframework.validation.Errors $r1;
        java.util.List $r2, $r3;
        org.springframework.web.bind.EscapedErrors r0;

        r0 := @this: org.springframework.web.bind.EscapedErrors;

        $r1 = r0.<org.springframework.web.bind.EscapedErrors: org.springframework.validation.Errors source>;

        $r2 = interfaceinvoke $r1.<org.springframework.validation.Errors: java.util.List getAllErrors()>();

        $r3 = specialinvoke r0.<org.springframework.web.bind.EscapedErrors: java.util.List escapeObjectErrors(java.util.List)>($r2);

        return $r3;
    }

    public boolean hasGlobalErrors()
    {
        org.springframework.validation.Errors $r1;
        org.springframework.web.bind.EscapedErrors r0;
        boolean $z0;

        r0 := @this: org.springframework.web.bind.EscapedErrors;

        $r1 = r0.<org.springframework.web.bind.EscapedErrors: org.springframework.validation.Errors source>;

        $z0 = interfaceinvoke $r1.<org.springframework.validation.Errors: boolean hasGlobalErrors()>();

        return $z0;
    }

    public int getGlobalErrorCount()
    {
        int $i0;
        org.springframework.validation.Errors $r1;
        org.springframework.web.bind.EscapedErrors r0;

        r0 := @this: org.springframework.web.bind.EscapedErrors;

        $r1 = r0.<org.springframework.web.bind.EscapedErrors: org.springframework.validation.Errors source>;

        $i0 = interfaceinvoke $r1.<org.springframework.validation.Errors: int getGlobalErrorCount()>();

        return $i0;
    }

    public java.util.List getGlobalErrors()
    {
        org.springframework.validation.Errors $r1;
        java.util.List $r2, $r3;
        org.springframework.web.bind.EscapedErrors r0;

        r0 := @this: org.springframework.web.bind.EscapedErrors;

        $r1 = r0.<org.springframework.web.bind.EscapedErrors: org.springframework.validation.Errors source>;

        $r2 = interfaceinvoke $r1.<org.springframework.validation.Errors: java.util.List getGlobalErrors()>();

        $r3 = specialinvoke r0.<org.springframework.web.bind.EscapedErrors: java.util.List escapeObjectErrors(java.util.List)>($r2);

        return $r3;
    }

    public org.springframework.validation.ObjectError getGlobalError()
    {
        org.springframework.validation.Errors $r1;
        org.springframework.validation.ObjectError $r2, $r3;
        org.springframework.web.bind.EscapedErrors r0;

        r0 := @this: org.springframework.web.bind.EscapedErrors;

        $r1 = r0.<org.springframework.web.bind.EscapedErrors: org.springframework.validation.Errors source>;

        $r2 = interfaceinvoke $r1.<org.springframework.validation.Errors: org.springframework.validation.ObjectError getGlobalError()>();

        $r3 = specialinvoke r0.<org.springframework.web.bind.EscapedErrors: org.springframework.validation.ObjectError escapeObjectError(org.springframework.validation.ObjectError)>($r2);

        return $r3;
    }

    public boolean hasFieldErrors()
    {
        org.springframework.validation.Errors $r1;
        org.springframework.web.bind.EscapedErrors r0;
        boolean $z0;

        r0 := @this: org.springframework.web.bind.EscapedErrors;

        $r1 = r0.<org.springframework.web.bind.EscapedErrors: org.springframework.validation.Errors source>;

        $z0 = interfaceinvoke $r1.<org.springframework.validation.Errors: boolean hasFieldErrors()>();

        return $z0;
    }

    public int getFieldErrorCount()
    {
        int $i0;
        org.springframework.validation.Errors $r1;
        org.springframework.web.bind.EscapedErrors r0;

        r0 := @this: org.springframework.web.bind.EscapedErrors;

        $r1 = r0.<org.springframework.web.bind.EscapedErrors: org.springframework.validation.Errors source>;

        $i0 = interfaceinvoke $r1.<org.springframework.validation.Errors: int getFieldErrorCount()>();

        return $i0;
    }

    public java.util.List getFieldErrors()
    {
        org.springframework.validation.Errors $r1;
        java.util.List $r2;
        org.springframework.web.bind.EscapedErrors r0;

        r0 := @this: org.springframework.web.bind.EscapedErrors;

        $r1 = r0.<org.springframework.web.bind.EscapedErrors: org.springframework.validation.Errors source>;

        $r2 = interfaceinvoke $r1.<org.springframework.validation.Errors: java.util.List getFieldErrors()>();

        return $r2;
    }

    public org.springframework.validation.FieldError getFieldError()
    {
        org.springframework.validation.Errors $r1;
        org.springframework.validation.FieldError $r2;
        org.springframework.web.bind.EscapedErrors r0;

        r0 := @this: org.springframework.web.bind.EscapedErrors;

        $r1 = r0.<org.springframework.web.bind.EscapedErrors: org.springframework.validation.Errors source>;

        $r2 = interfaceinvoke $r1.<org.springframework.validation.Errors: org.springframework.validation.FieldError getFieldError()>();

        return $r2;
    }

    public boolean hasFieldErrors(java.lang.String)
    {
        org.springframework.validation.Errors $r2;
        org.springframework.web.bind.EscapedErrors r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.springframework.web.bind.EscapedErrors;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.web.bind.EscapedErrors: org.springframework.validation.Errors source>;

        $z0 = interfaceinvoke $r2.<org.springframework.validation.Errors: boolean hasFieldErrors(java.lang.String)>(r1);

        return $z0;
    }

    public int getFieldErrorCount(java.lang.String)
    {
        org.springframework.validation.Errors $r2;
        org.springframework.web.bind.EscapedErrors r0;
        int $i0;
        java.lang.String r1;

        r0 := @this: org.springframework.web.bind.EscapedErrors;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.web.bind.EscapedErrors: org.springframework.validation.Errors source>;

        $i0 = interfaceinvoke $r2.<org.springframework.validation.Errors: int getFieldErrorCount(java.lang.String)>(r1);

        return $i0;
    }

    public java.util.List getFieldErrors(java.lang.String)
    {
        org.springframework.validation.Errors $r2;
        java.util.List $r3, $r4;
        org.springframework.web.bind.EscapedErrors r0;
        java.lang.String r1;

        r0 := @this: org.springframework.web.bind.EscapedErrors;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.web.bind.EscapedErrors: org.springframework.validation.Errors source>;

        $r3 = interfaceinvoke $r2.<org.springframework.validation.Errors: java.util.List getFieldErrors(java.lang.String)>(r1);

        $r4 = specialinvoke r0.<org.springframework.web.bind.EscapedErrors: java.util.List escapeObjectErrors(java.util.List)>($r3);

        return $r4;
    }

    public org.springframework.validation.FieldError getFieldError(java.lang.String)
    {
        org.springframework.validation.Errors $r2;
        org.springframework.validation.FieldError $r3, $r5;
        org.springframework.validation.ObjectError $r4;
        org.springframework.web.bind.EscapedErrors r0;
        java.lang.String r1;

        r0 := @this: org.springframework.web.bind.EscapedErrors;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.web.bind.EscapedErrors: org.springframework.validation.Errors source>;

        $r3 = interfaceinvoke $r2.<org.springframework.validation.Errors: org.springframework.validation.FieldError getFieldError(java.lang.String)>(r1);

        $r4 = specialinvoke r0.<org.springframework.web.bind.EscapedErrors: org.springframework.validation.ObjectError escapeObjectError(org.springframework.validation.ObjectError)>($r3);

        $r5 = (org.springframework.validation.FieldError) $r4;

        return $r5;
    }

    public java.lang.Object getFieldValue(java.lang.String)
    {
        org.springframework.validation.Errors $r2;
        org.springframework.web.bind.EscapedErrors r0;
        java.lang.Object $r3, $r5;
        java.lang.String r1, $r4;
        boolean $z0;

        r0 := @this: org.springframework.web.bind.EscapedErrors;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.web.bind.EscapedErrors: org.springframework.validation.Errors source>;

        $r3 = interfaceinvoke $r2.<org.springframework.validation.Errors: java.lang.Object getFieldValue(java.lang.String)>(r1);

        $z0 = $r3 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $r4 = (java.lang.String) $r3;

        $r5 = staticinvoke <org.springframework.web.util.HtmlUtils: java.lang.String htmlEscape(java.lang.String)>($r4);

        goto label2;

     label1:
        $r5 = $r3;

     label2:
        return $r5;
    }

    public java.lang.Class getFieldType(java.lang.String)
    {
        org.springframework.validation.Errors $r2;
        org.springframework.web.bind.EscapedErrors r0;
        java.lang.Class $r3;
        java.lang.String r1;

        r0 := @this: org.springframework.web.bind.EscapedErrors;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.web.bind.EscapedErrors: org.springframework.validation.Errors source>;

        $r3 = interfaceinvoke $r2.<org.springframework.validation.Errors: java.lang.Class getFieldType(java.lang.String)>(r1);

        return $r3;
    }

    private org.springframework.validation.ObjectError escapeObjectError(org.springframework.validation.ObjectError)
    {
        java.lang.Object[] $r4, $r13;
        java.lang.String[] $r3, $r12;
        org.springframework.validation.ObjectError r0, $r1;
        java.lang.String $r2, $r5, $r6, $r10, $r11, $r14, $r15, $r16;
        boolean $z0, $z1, $z2;
        org.springframework.validation.FieldError r7, $r9;
        org.springframework.web.bind.EscapedErrors r17;
        java.lang.Object $r8, r18;

        r17 := @this: org.springframework.web.bind.EscapedErrors;

        r0 := @parameter0: org.springframework.validation.ObjectError;

        if r0 != null goto label1;

        return null;

     label1:
        $z0 = r0 instanceof org.springframework.validation.FieldError;

        if $z0 == 0 goto label3;

        r7 = (org.springframework.validation.FieldError) r0;

        $r8 = virtualinvoke r7.<org.springframework.validation.FieldError: java.lang.Object getRejectedValue()>();

        r18 = $r8;

        $z1 = $r8 instanceof java.lang.String;

        if $z1 == 0 goto label2;

        $r16 = (java.lang.String) $r8;

        r18 = staticinvoke <org.springframework.web.util.HtmlUtils: java.lang.String htmlEscape(java.lang.String)>($r16);

     label2:
        $r9 = new org.springframework.validation.FieldError;

        $r10 = virtualinvoke r7.<org.springframework.validation.FieldError: java.lang.String getObjectName()>();

        $r11 = virtualinvoke r7.<org.springframework.validation.FieldError: java.lang.String getField()>();

        $z2 = virtualinvoke r7.<org.springframework.validation.FieldError: boolean isBindingFailure()>();

        $r12 = virtualinvoke r7.<org.springframework.validation.FieldError: java.lang.String[] getCodes()>();

        $r13 = virtualinvoke r7.<org.springframework.validation.FieldError: java.lang.Object[] getArguments()>();

        $r14 = virtualinvoke r7.<org.springframework.validation.FieldError: java.lang.String getDefaultMessage()>();

        $r15 = staticinvoke <org.springframework.web.util.HtmlUtils: java.lang.String htmlEscape(java.lang.String)>($r14);

        specialinvoke $r9.<org.springframework.validation.FieldError: void <init>(java.lang.String,java.lang.String,java.lang.Object,boolean,java.lang.String[],java.lang.Object[],java.lang.String)>($r10, $r11, r18, $z2, $r12, $r13, $r15);

        return $r9;

     label3:
        $r1 = new org.springframework.validation.ObjectError;

        $r2 = virtualinvoke r0.<org.springframework.validation.ObjectError: java.lang.String getObjectName()>();

        $r3 = virtualinvoke r0.<org.springframework.validation.ObjectError: java.lang.String[] getCodes()>();

        $r4 = virtualinvoke r0.<org.springframework.validation.ObjectError: java.lang.Object[] getArguments()>();

        $r5 = virtualinvoke r0.<org.springframework.validation.ObjectError: java.lang.String getDefaultMessage()>();

        $r6 = staticinvoke <org.springframework.web.util.HtmlUtils: java.lang.String htmlEscape(java.lang.String)>($r5);

        specialinvoke $r1.<org.springframework.validation.ObjectError: void <init>(java.lang.String,java.lang.String[],java.lang.Object[],java.lang.String)>($r2, $r3, $r4, $r6);

        return $r1;
    }

    private java.util.List escapeObjectErrors(java.util.List)
    {
        java.util.Iterator $r2;
        java.util.ArrayList $r0;
        java.util.List r1;
        org.springframework.validation.ObjectError r4, $r6;
        org.springframework.web.bind.EscapedErrors r5;
        int $i0;
        java.lang.Object $r3;
        boolean $z0;

        r5 := @this: org.springframework.web.bind.EscapedErrors;

        r1 := @parameter0: java.util.List;

        $r0 = new java.util.ArrayList;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.springframework.validation.ObjectError) $r3;

        $r6 = specialinvoke r5.<org.springframework.web.bind.EscapedErrors: org.springframework.validation.ObjectError escapeObjectError(org.springframework.validation.ObjectError)>(r4);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return $r0;
    }
}
