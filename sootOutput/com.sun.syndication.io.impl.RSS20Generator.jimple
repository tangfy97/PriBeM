public class com.sun.syndication.io.impl.RSS20Generator extends com.sun.syndication.io.impl.RSS094Generator
{

    public void <init>()
    {
        com.sun.syndication.io.impl.RSS20Generator r0;

        r0 := @this: com.sun.syndication.io.impl.RSS20Generator;

        specialinvoke r0.<com.sun.syndication.io.impl.RSS20Generator: void <init>(java.lang.String,java.lang.String)>("rss_2.0", "2.0");

        return;
    }

    protected void <init>(java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2;
        com.sun.syndication.io.impl.RSS20Generator r0;

        r0 := @this: com.sun.syndication.io.impl.RSS20Generator;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.sun.syndication.io.impl.RSS094Generator: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    protected void populateChannel(com.sun.syndication.feed.rss.Channel, org.jdom.Element)
    {
        com.sun.syndication.io.impl.RSS20Generator r0;
        com.sun.syndication.feed.rss.Channel r1;
        java.util.List $r4;
        int $i0, i1, $i2, $i4;
        java.lang.Object $r5;
        java.lang.String $r3, $r8;
        com.sun.syndication.feed.rss.Category $r6;
        org.jdom.Element r2, $r7, $r9, $r10;

        r0 := @this: com.sun.syndication.io.impl.RSS20Generator;

        r1 := @parameter0: com.sun.syndication.feed.rss.Channel;

        r2 := @parameter1: org.jdom.Element;

        specialinvoke r0.<com.sun.syndication.io.impl.RSS094Generator: void populateChannel(com.sun.syndication.feed.rss.Channel,org.jdom.Element)>(r1, r2);

        $r3 = virtualinvoke r1.<com.sun.syndication.feed.rss.Channel: java.lang.String getGenerator()>();

        if $r3 == null goto label1;

        $r10 = virtualinvoke r0.<com.sun.syndication.io.impl.RSS20Generator: org.jdom.Element generateSimpleElement(java.lang.String,java.lang.String)>("generator", $r3);

        virtualinvoke r2.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r10);

     label1:
        $i0 = virtualinvoke r1.<com.sun.syndication.feed.rss.Channel: int getTtl()>();

        $i4 = (int) -1;

        if $i0 <= $i4 goto label2;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        $r9 = virtualinvoke r0.<com.sun.syndication.io.impl.RSS20Generator: org.jdom.Element generateSimpleElement(java.lang.String,java.lang.String)>("ttl", $r8);

        virtualinvoke r2.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r9);

     label2:
        $r4 = virtualinvoke r1.<com.sun.syndication.feed.rss.Channel: java.util.List getCategories()>();

        i1 = 0;

     label3:
        $i2 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i1 >= $i2 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        $r6 = (com.sun.syndication.feed.rss.Category) $r5;

        $r7 = virtualinvoke r0.<com.sun.syndication.io.impl.RSS20Generator: org.jdom.Element generateCategoryElement(com.sun.syndication.feed.rss.Category)>($r6);

        virtualinvoke r2.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r7);

        i1 = i1 + 1;

        goto label3;

     label4:
        return;
    }

    public void populateItem(com.sun.syndication.feed.rss.Item, org.jdom.Element, int)
    {
        com.sun.syndication.feed.rss.Item r1;
        com.sun.syndication.io.impl.RSS20Generator r0;
        int i0;
        org.jdom.Namespace $r3;
        java.lang.String $r5, $r6, $r8;
        com.sun.syndication.feed.rss.Guid $r7;
        org.jdom.Element r2, $r4, $r9, $r10, $r11;
        boolean $z0;

        r0 := @this: com.sun.syndication.io.impl.RSS20Generator;

        r1 := @parameter0: com.sun.syndication.feed.rss.Item;

        r2 := @parameter1: org.jdom.Element;

        i0 := @parameter2: int;

        specialinvoke r0.<com.sun.syndication.io.impl.RSS094Generator: void populateItem(com.sun.syndication.feed.rss.Item,org.jdom.Element,int)>(r1, r2, i0);

        $r3 = virtualinvoke r0.<com.sun.syndication.io.impl.RSS20Generator: org.jdom.Namespace getFeedNamespace()>();

        $r4 = virtualinvoke r2.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("description", $r3);

        if $r4 == null goto label1;

        virtualinvoke $r4.<org.jdom.Element: boolean removeAttribute(java.lang.String)>("type");

     label1:
        $r5 = virtualinvoke r1.<com.sun.syndication.feed.rss.Item: java.lang.String getAuthor()>();

        if $r5 == null goto label2;

        $r11 = virtualinvoke r0.<com.sun.syndication.io.impl.RSS20Generator: org.jdom.Element generateSimpleElement(java.lang.String,java.lang.String)>("author", $r5);

        virtualinvoke r2.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r11);

     label2:
        $r6 = virtualinvoke r1.<com.sun.syndication.feed.rss.Item: java.lang.String getComments()>();

        if $r6 == null goto label3;

        $r10 = virtualinvoke r0.<com.sun.syndication.io.impl.RSS20Generator: org.jdom.Element generateSimpleElement(java.lang.String,java.lang.String)>("comments", $r6);

        virtualinvoke r2.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r10);

     label3:
        $r7 = virtualinvoke r1.<com.sun.syndication.feed.rss.Item: com.sun.syndication.feed.rss.Guid getGuid()>();

        if $r7 == null goto label5;

        $r8 = virtualinvoke $r7.<com.sun.syndication.feed.rss.Guid: java.lang.String getValue()>();

        $r9 = virtualinvoke r0.<com.sun.syndication.io.impl.RSS20Generator: org.jdom.Element generateSimpleElement(java.lang.String,java.lang.String)>("guid", $r8);

        $z0 = virtualinvoke $r7.<com.sun.syndication.feed.rss.Guid: boolean isPermaLink()>();

        if $z0 != 0 goto label4;

        virtualinvoke $r9.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("isPermaLink", "false");

     label4:
        virtualinvoke r2.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r9);

     label5:
        return;
    }
}
