class org.apache.log4j.CategoryKey extends java.lang.Object
{
    java.lang.String name;
    int hashCache;
    static java.lang.Class class$org$apache$log4j$CategoryKey;

    void <init>(java.lang.String)
    {
        int $i0;
        java.lang.String r1;
        org.apache.log4j.CategoryKey r0;

        r0 := @this: org.apache.log4j.CategoryKey;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.log4j.CategoryKey: java.lang.String name> = r1;

        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        r0.<org.apache.log4j.CategoryKey: int hashCache> = $i0;

        return;
    }

    public final int hashCode()
    {
        int $i0;
        org.apache.log4j.CategoryKey r0;

        r0 := @this: org.apache.log4j.CategoryKey;

        $i0 = r0.<org.apache.log4j.CategoryKey: int hashCache>;

        return $i0;
    }

    public final boolean equals(java.lang.Object)
    {
        org.apache.log4j.CategoryKey r0, $r4;
        java.lang.Object r1;
        java.lang.Class $r2, $r3, $r7;
        java.lang.String $r5, $r6;
        boolean $z0;

        r0 := @this: org.apache.log4j.CategoryKey;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label4;

        $r2 = <org.apache.log4j.CategoryKey: java.lang.Class class$org$apache$log4j$CategoryKey>;

        if $r2 != null goto label2;

        $r7 = staticinvoke <org.apache.log4j.CategoryKey: java.lang.Class class$(java.lang.String)>("org.apache.log4j.CategoryKey");

        <org.apache.log4j.CategoryKey: java.lang.Class class$org$apache$log4j$CategoryKey> = $r7;

        goto label3;

     label2:
        $r7 = <org.apache.log4j.CategoryKey: java.lang.Class class$org$apache$log4j$CategoryKey>;

     label3:
        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r7 != $r3 goto label4;

        $r6 = r0.<org.apache.log4j.CategoryKey: java.lang.String name>;

        $r4 = (org.apache.log4j.CategoryKey) r1;

        $r5 = $r4.<org.apache.log4j.CategoryKey: java.lang.String name>;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        return $z0;

     label4:
        return 0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
