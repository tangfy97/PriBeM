public abstract class org.codehaus.jackson.map.ser.std.NonTypedScalarSerializerBase extends org.codehaus.jackson.map.ser.std.ScalarSerializerBase
{

    protected void <init>(java.lang.Class)
    {
        org.codehaus.jackson.map.ser.std.NonTypedScalarSerializerBase r0;
        java.lang.Class r1;

        r0 := @this: org.codehaus.jackson.map.ser.std.NonTypedScalarSerializerBase;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.codehaus.jackson.map.ser.std.ScalarSerializerBase: void <init>(java.lang.Class)>(r1);

        return;
    }

    public final void serializeWithType(java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider, org.codehaus.jackson.map.TypeSerializer) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.map.ser.std.NonTypedScalarSerializerBase r0;
        org.codehaus.jackson.JsonGenerator r2;
        org.codehaus.jackson.map.TypeSerializer r4;
        org.codehaus.jackson.map.SerializerProvider r3;
        java.lang.Object r1;

        r0 := @this: org.codehaus.jackson.map.ser.std.NonTypedScalarSerializerBase;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r3 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        r4 := @parameter3: org.codehaus.jackson.map.TypeSerializer;

        virtualinvoke r0.<org.codehaus.jackson.map.ser.std.NonTypedScalarSerializerBase: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>(r1, r2, r3);

        return;
    }
}
