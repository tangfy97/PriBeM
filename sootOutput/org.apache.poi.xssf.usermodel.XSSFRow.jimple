public class org.apache.poi.xssf.usermodel.XSSFRow extends java.lang.Object implements org.apache.poi.ss.usermodel.Row, java.lang.Comparable
{
    private final org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow _row;
    private final java.util.TreeMap _cells;
    private final org.apache.poi.xssf.usermodel.XSSFSheet _sheet;

    protected void <init>(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow, org.apache.poi.xssf.usermodel.XSSFSheet)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell r5;
        java.lang.Integer $r8;
        org.apache.poi.xssf.usermodel.XSSFRow r0;
        java.util.TreeMap $r3, $r7;
        org.apache.poi.xssf.usermodel.XSSFSheet r2;
        int i0, $i1, i2;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell[] $r4;
        org.apache.poi.xssf.usermodel.XSSFCell $r6;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        r1 := @parameter0: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow;

        r2 := @parameter1: org.apache.poi.xssf.usermodel.XSSFSheet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow _row> = r1;

        r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.apache.poi.xssf.usermodel.XSSFSheet _sheet> = r2;

        $r3 = new java.util.TreeMap;

        specialinvoke $r3.<java.util.TreeMap: void <init>()>();

        r0.<org.apache.poi.xssf.usermodel.XSSFRow: java.util.TreeMap _cells> = $r3;

        $r4 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell[] getCArray()>();

        i0 = lengthof $r4;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        r5 = $r4[i2];

        $r6 = new org.apache.poi.xssf.usermodel.XSSFCell;

        specialinvoke $r6.<org.apache.poi.xssf.usermodel.XSSFCell: void <init>(org.apache.poi.xssf.usermodel.XSSFRow,org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell)>(r0, r5);

        $r7 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: java.util.TreeMap _cells>;

        $i1 = virtualinvoke $r6.<org.apache.poi.xssf.usermodel.XSSFCell: int getColumnIndex()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r7.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r6);

        virtualinvoke r2.<org.apache.poi.xssf.usermodel.XSSFSheet: void onReadCell(org.apache.poi.xssf.usermodel.XSSFCell)>($r6);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public org.apache.poi.xssf.usermodel.XSSFSheet getSheet()
    {
        org.apache.poi.xssf.usermodel.XSSFSheet $r1;
        org.apache.poi.xssf.usermodel.XSSFRow r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.apache.poi.xssf.usermodel.XSSFSheet _sheet>;

        return $r1;
    }

    public java.util.Iterator cellIterator()
    {
        java.util.TreeMap $r1;
        java.util.Iterator $r3;
        java.util.Collection $r2;
        org.apache.poi.xssf.usermodel.XSSFRow r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: java.util.TreeMap _cells>;

        $r2 = virtualinvoke $r1.<java.util.TreeMap: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

        return $r3;
    }

    public java.util.Iterator iterator()
    {
        java.util.Iterator $r1;
        org.apache.poi.xssf.usermodel.XSSFRow r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRow: java.util.Iterator cellIterator()>();

        return $r1;
    }

    public int compareTo(org.apache.poi.xssf.usermodel.XSSFRow)
    {
        java.lang.IllegalArgumentException $r4;
        org.apache.poi.xssf.usermodel.XSSFRow r0, r1;
        byte $b2;
        int $i0, $i1;
        org.apache.poi.xssf.usermodel.XSSFSheet $r2, $r3;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        r1 := @parameter0: org.apache.poi.xssf.usermodel.XSSFRow;

        $i0 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRow: int getRowNum()>();

        $r2 = virtualinvoke r1.<org.apache.poi.xssf.usermodel.XSSFRow: org.apache.poi.xssf.usermodel.XSSFSheet getSheet()>();

        $r3 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.apache.poi.xssf.usermodel.XSSFSheet getSheet()>();

        if $r2 == $r3 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The compared rows must belong to the same XSSFSheet");

        throw $r4;

     label1:
        $i1 = virtualinvoke r1.<org.apache.poi.xssf.usermodel.XSSFRow: int getRowNum()>();

        if $i0 >= $i1 goto label2;

        $b2 = -1;

        goto label4;

     label2:
        if $i0 != $i1 goto label3;

        $b2 = 0;

        goto label4;

     label3:
        $b2 = 1;

     label4:
        return $b2;
    }

    public org.apache.poi.xssf.usermodel.XSSFCell createCell(int)
    {
        int i0;
        org.apache.poi.xssf.usermodel.XSSFCell $r1;
        org.apache.poi.xssf.usermodel.XSSFRow r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.apache.poi.xssf.usermodel.XSSFCell createCell(int,int)>(i0, 3);

        return $r1;
    }

    public org.apache.poi.xssf.usermodel.XSSFCell createCell(int, int)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell $r9, $r10, r11;
        java.lang.Integer $r2, $r8;
        org.apache.poi.xssf.usermodel.XSSFRow r0;
        java.util.TreeMap $r1, $r7;
        int i0, i1;
        java.lang.Object $r3;
        org.apache.poi.xssf.usermodel.XSSFCell r4, $r6;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow $r5;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: java.util.TreeMap _cells>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = virtualinvoke $r1.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r2);

        r4 = (org.apache.poi.xssf.usermodel.XSSFCell) $r3;

        if r4 == null goto label1;

        $r9 = virtualinvoke r4.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell getCTCell()>();

        r11 = $r9;

        $r10 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell newInstance()>();

        interfaceinvoke $r9.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>($r10);

        goto label2;

     label1:
        $r5 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow _row>;

        r11 = interfaceinvoke $r5.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell addNewC()>();

     label2:
        $r6 = new org.apache.poi.xssf.usermodel.XSSFCell;

        specialinvoke $r6.<org.apache.poi.xssf.usermodel.XSSFCell: void <init>(org.apache.poi.xssf.usermodel.XSSFRow,org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell)>(r0, r11);

        virtualinvoke $r6.<org.apache.poi.xssf.usermodel.XSSFCell: void setCellNum(int)>(i0);

        if i1 == 3 goto label3;

        virtualinvoke $r6.<org.apache.poi.xssf.usermodel.XSSFCell: void setCellType(int)>(i1);

     label3:
        $r7 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: java.util.TreeMap _cells>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r7.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r6);

        return $r6;
    }

    public org.apache.poi.xssf.usermodel.XSSFCell getCell(int)
    {
        org.apache.poi.xssf.usermodel.XSSFWorkbook $r2;
        org.apache.poi.ss.usermodel.Row$MissingCellPolicy $r3;
        int i0;
        org.apache.poi.xssf.usermodel.XSSFSheet $r1;
        org.apache.poi.xssf.usermodel.XSSFCell $r4;
        org.apache.poi.xssf.usermodel.XSSFRow r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.apache.poi.xssf.usermodel.XSSFSheet _sheet>;

        $r2 = virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.xssf.usermodel.XSSFWorkbook getWorkbook()>();

        $r3 = virtualinvoke $r2.<org.apache.poi.xssf.usermodel.XSSFWorkbook: org.apache.poi.ss.usermodel.Row$MissingCellPolicy getMissingCellPolicy()>();

        $r4 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.apache.poi.xssf.usermodel.XSSFCell getCell(int,org.apache.poi.ss.usermodel.Row$MissingCellPolicy)>(i0, $r3);

        return $r4;
    }

    public org.apache.poi.xssf.usermodel.XSSFCell getCell(int, org.apache.poi.ss.usermodel.Row$MissingCellPolicy)
    {
        java.lang.Integer $r2;
        org.apache.poi.xssf.usermodel.XSSFRow r0;
        org.apache.poi.ss.usermodel.Row$MissingCellPolicy r5, $r6, $r7, $r8;
        short $s2;
        int i0, $i1, $i3, $i4;
        java.lang.String $r16;
        java.lang.IllegalArgumentException $r19, $r21;
        java.util.TreeMap $r1;
        java.lang.Object $r3;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15, $r20;
        org.apache.poi.xssf.usermodel.XSSFCell r4, $r17;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        i0 := @parameter0: int;

        r5 := @parameter1: org.apache.poi.ss.usermodel.Row$MissingCellPolicy;

        if i0 >= 0 goto label1;

        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cell index must be >= 0");

        throw $r19;

     label1:
        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: java.util.TreeMap _cells>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = virtualinvoke $r1.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r2);

        r4 = (org.apache.poi.xssf.usermodel.XSSFCell) $r3;

        $r6 = <org.apache.poi.xssf.usermodel.XSSFRow: org.apache.poi.ss.usermodel.Row$MissingCellPolicy RETURN_NULL_AND_BLANK>;

        if r5 != $r6 goto label2;

        return r4;

     label2:
        $r7 = <org.apache.poi.xssf.usermodel.XSSFRow: org.apache.poi.ss.usermodel.Row$MissingCellPolicy RETURN_BLANK_AS_NULL>;

        if r5 != $r7 goto label5;

        if r4 != null goto label3;

        return r4;

     label3:
        $i3 = virtualinvoke r4.<org.apache.poi.xssf.usermodel.XSSFCell: int getCellType()>();

        if $i3 != 3 goto label4;

        return null;

     label4:
        return r4;

     label5:
        $r8 = <org.apache.poi.xssf.usermodel.XSSFRow: org.apache.poi.ss.usermodel.Row$MissingCellPolicy CREATE_NULL_AS_BLANK>;

        if r5 != $r8 goto label7;

        if r4 != null goto label6;

        $s2 = (short) i0;

        $i4 = (int) $s2;

        $r17 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.apache.poi.xssf.usermodel.XSSFCell createCell(int,int)>($i4, 3);

        return $r17;

     label6:
        return r4;

     label7:
        $r21 = new java.lang.IllegalArgumentException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal policy ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i1 = r5.<org.apache.poi.ss.usermodel.Row$MissingCellPolicy: int id>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r21;
    }

    public short getFirstCellNum()
    {
        java.lang.Integer $r4;
        org.apache.poi.xssf.usermodel.XSSFRow r0;
        short $s1, $s2;
        java.util.TreeMap $r1, $r2;
        int $i0, $i3;
        java.lang.Object $r3;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: java.util.TreeMap _cells>;

        $i0 = virtualinvoke $r1.<java.util.TreeMap: int size()>();

        if $i0 != 0 goto label1;

        $s2 = (short) -1;

        return $s2;

     label1:
        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: java.util.TreeMap _cells>;

        $r3 = virtualinvoke $r2.<java.util.TreeMap: java.lang.Object firstKey()>();

        $r4 = (java.lang.Integer) $r3;

        $i3 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $s1 = (short) $i3;

        return $s1;
    }

    public short getLastCellNum()
    {
        java.lang.Integer $r4;
        org.apache.poi.xssf.usermodel.XSSFRow r0;
        short $s2, $s3;
        java.util.TreeMap $r1, $r2;
        int $i0, $i1, $i4;
        java.lang.Object $r3;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: java.util.TreeMap _cells>;

        $i0 = virtualinvoke $r1.<java.util.TreeMap: int size()>();

        if $i0 != 0 goto label1;

        $s3 = (short) -1;

        return $s3;

     label1:
        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: java.util.TreeMap _cells>;

        $r3 = virtualinvoke $r2.<java.util.TreeMap: java.lang.Object lastKey()>();

        $r4 = (java.lang.Integer) $r3;

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $i4 = $i1 + 1;

        $s2 = (short) $i4;

        return $s2;
    }

    public short getHeight()
    {
        short $s1;
        int $i0;
        float $f0, $f1;
        org.apache.poi.xssf.usermodel.XSSFRow r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        $f0 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRow: float getHeightInPoints()>();

        $f1 = $f0 * 20.0F;

        $i0 = (int) $f1;

        $s1 = (short) $i0;

        return $s1;
    }

    public float getHeightInPoints()
    {
        org.apache.poi.xssf.usermodel.XSSFRow r0;
        org.apache.poi.xssf.usermodel.XSSFSheet $r2;
        float $f0, $f1;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow $r1, $r3;
        boolean $z0;
        double $d0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow _row>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow: boolean isSetHt()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow _row>;

        $d0 = interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow: double getHt()>();

        $f1 = (float) $d0;

        return $f1;

     label1:
        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.apache.poi.xssf.usermodel.XSSFSheet _sheet>;

        $f0 = virtualinvoke $r2.<org.apache.poi.xssf.usermodel.XSSFSheet: float getDefaultRowHeightInPoints()>();

        return $f0;
    }

    public void setHeight(short)
    {
        org.apache.poi.xssf.usermodel.XSSFRow r0;
        short s0;
        int $i1, $i3;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow $r1, $r2, $r3, $r4, $r5, $r6;
        double $d0, $d1;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        s0 := @parameter0: short;

        $i1 = (int) s0;

        $i3 = (int) -1;

        if $i1 != $i3 goto label2;

        $r3 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow _row>;

        $z0 = interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow: boolean isSetHt()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow _row>;

        interfaceinvoke $r6.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow: void unsetHt()>();

     label1:
        $r4 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow _row>;

        $z1 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow: boolean isSetCustomHeight()>();

        if $z1 == 0 goto label3;

        $r5 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow _row>;

        interfaceinvoke $r5.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow: void unsetCustomHeight()>();

        goto label3;

     label2:
        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow _row>;

        $d0 = (double) s0;

        $d1 = $d0 / 20.0;

        interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow: void setHt(double)>($d1);

        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow _row>;

        interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow: void setCustomHeight(boolean)>(1);

     label3:
        return;
    }

    public void setHeightInPoints(float)
    {
        short $s2;
        byte $b0;
        int $i1;
        float f0, $f1;
        org.apache.poi.xssf.usermodel.XSSFRow r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        f0 := @parameter0: float;

        $b0 = f0 cmpl -1.0F;

        if $b0 != 0 goto label1;

        $f1 = -1.0F;

        goto label2;

     label1:
        $f1 = f0 * 20.0F;

     label2:
        $i1 = (int) $f1;

        $s2 = (short) $i1;

        virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRow: void setHeight(short)>($s2);

        return;
    }

    public int getPhysicalNumberOfCells()
    {
        int $i0;
        java.util.TreeMap $r1;
        org.apache.poi.xssf.usermodel.XSSFRow r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: java.util.TreeMap _cells>;

        $i0 = virtualinvoke $r1.<java.util.TreeMap: int size()>();

        return $i0;
    }

    public int getRowNum()
    {
        int $i2;
        long $l0, $l1;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow $r1;
        org.apache.poi.xssf.usermodel.XSSFRow r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow _row>;

        $l0 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow: long getR()>();

        $l1 = $l0 - 1L;

        $i2 = (int) $l1;

        return $i2;
    }

    public void setRowNum(int)
    {
        long $l3;
        java.lang.IllegalArgumentException $r1;
        org.apache.poi.xssf.usermodel.XSSFRow r9;
        org.apache.poi.ss.SpreadsheetVersion $r0;
        int $i0, i1, $i2;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7;
        java.lang.String $r8;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow $r10;

        r9 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        i1 := @parameter0: int;

        $r0 = <org.apache.poi.ss.SpreadsheetVersion: org.apache.poi.ss.SpreadsheetVersion EXCEL2007>;

        $i0 = virtualinvoke $r0.<org.apache.poi.ss.SpreadsheetVersion: int getLastRowIndex()>();

        if i1 < 0 goto label1;

        if i1 <= $i0 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid row number (");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") outside allowable range (0..");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r1;

     label2:
        $r10 = r9.<org.apache.poi.xssf.usermodel.XSSFRow: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow _row>;

        $i2 = i1 + 1;

        $l3 = (long) $i2;

        interfaceinvoke $r10.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow: void setR(long)>($l3);

        return;
    }

    public boolean getZeroHeight()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow $r1;
        org.apache.poi.xssf.usermodel.XSSFRow r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow _row>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow: boolean getHidden()>();

        return $z0;
    }

    public void setZeroHeight(boolean)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow $r1;
        org.apache.poi.xssf.usermodel.XSSFRow r0;
        boolean z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow _row>;

        interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow: void setHidden(boolean)>(z0);

        return;
    }

    public boolean isFormatted()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow $r1;
        org.apache.poi.xssf.usermodel.XSSFRow r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow _row>;

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow: boolean isSetS()>();

        return $z0;
    }

    public org.apache.poi.xssf.usermodel.XSSFCellStyle getRowStyle()
    {
        long $l1;
        org.apache.poi.xssf.model.StylesTable $r3;
        org.apache.poi.xssf.usermodel.XSSFCellStyle $r5;
        org.apache.poi.xssf.usermodel.XSSFRow r0;
        org.apache.poi.xssf.usermodel.XSSFWorkbook $r2;
        org.apache.poi.xssf.usermodel.XSSFSheet $r1;
        int $i0, $i2;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow $r4;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        $z0 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRow: boolean isFormatted()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.apache.poi.xssf.usermodel.XSSFSheet getSheet()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.xssf.usermodel.XSSFWorkbook getWorkbook()>();

        $r3 = virtualinvoke $r2.<org.apache.poi.xssf.usermodel.XSSFWorkbook: org.apache.poi.xssf.model.StylesTable getStylesSource()>();

        $i0 = virtualinvoke $r3.<org.apache.poi.xssf.model.StylesTable: int getNumCellStyles()>();

        if $i0 <= 0 goto label2;

        $r4 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow _row>;

        $l1 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow: long getS()>();

        $i2 = (int) $l1;

        $r5 = virtualinvoke $r3.<org.apache.poi.xssf.model.StylesTable: org.apache.poi.xssf.usermodel.XSSFCellStyle getStyleAt(int)>($i2);

        return $r5;

     label2:
        return null;
    }

    public void setRowStyle(org.apache.poi.ss.usermodel.CellStyle)
    {
        long l1;
        org.apache.poi.xssf.model.StylesTable $r4;
        org.apache.poi.xssf.usermodel.XSSFCellStyle r5;
        org.apache.poi.xssf.usermodel.XSSFRow r1;
        org.apache.poi.xssf.usermodel.XSSFWorkbook $r3;
        org.apache.poi.xssf.usermodel.XSSFSheet $r2;
        int $i0;
        org.apache.poi.ss.usermodel.CellStyle r0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow $r6, $r7, $r8, $r9, $r10;
        boolean $z0;

        r1 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        r0 := @parameter0: org.apache.poi.ss.usermodel.CellStyle;

        if r0 != null goto label1;

        $r8 = r1.<org.apache.poi.xssf.usermodel.XSSFRow: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow _row>;

        $z0 = interfaceinvoke $r8.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow: boolean isSetS()>();

        if $z0 == 0 goto label2;

        $r9 = r1.<org.apache.poi.xssf.usermodel.XSSFRow: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow _row>;

        interfaceinvoke $r9.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow: void unsetS()>();

        $r10 = r1.<org.apache.poi.xssf.usermodel.XSSFRow: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow _row>;

        interfaceinvoke $r10.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow: void unsetCustomFormat()>();

        goto label2;

     label1:
        $r2 = virtualinvoke r1.<org.apache.poi.xssf.usermodel.XSSFRow: org.apache.poi.xssf.usermodel.XSSFSheet getSheet()>();

        $r3 = virtualinvoke $r2.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.xssf.usermodel.XSSFWorkbook getWorkbook()>();

        $r4 = virtualinvoke $r3.<org.apache.poi.xssf.usermodel.XSSFWorkbook: org.apache.poi.xssf.model.StylesTable getStylesSource()>();

        r5 = (org.apache.poi.xssf.usermodel.XSSFCellStyle) r0;

        virtualinvoke r5.<org.apache.poi.xssf.usermodel.XSSFCellStyle: void verifyBelongsToStylesSource(org.apache.poi.xssf.model.StylesTable)>($r4);

        $i0 = virtualinvoke $r4.<org.apache.poi.xssf.model.StylesTable: int putStyle(org.apache.poi.xssf.usermodel.XSSFCellStyle)>(r5);

        l1 = (long) $i0;

        $r6 = r1.<org.apache.poi.xssf.usermodel.XSSFRow: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow _row>;

        interfaceinvoke $r6.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow: void setS(long)>(l1);

        $r7 = r1.<org.apache.poi.xssf.usermodel.XSSFRow: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow _row>;

        interfaceinvoke $r7.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow: void setCustomFormat(boolean)>(1);

     label2:
        return;
    }

    public void removeCell(org.apache.poi.ss.usermodel.Cell)
    {
        java.lang.IllegalArgumentException $r8;
        java.lang.Integer $r5;
        org.apache.poi.xssf.usermodel.XSSFRow r2;
        org.apache.poi.xssf.usermodel.XSSFWorkbook $r7;
        java.util.TreeMap $r4;
        org.apache.poi.ss.usermodel.Cell r0;
        int $i0, $i1;
        org.apache.poi.xssf.usermodel.XSSFSheet $r6;
        org.apache.poi.ss.usermodel.Row $r1;
        org.apache.poi.xssf.usermodel.XSSFCell r3;
        boolean $z0;

        r2 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        r0 := @parameter0: org.apache.poi.ss.usermodel.Cell;

        $r1 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Cell: org.apache.poi.ss.usermodel.Row getRow()>();

        if $r1 == r2 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Specified cell does not belong to this row");

        throw $r8;

     label1:
        r3 = (org.apache.poi.xssf.usermodel.XSSFCell) r0;

        $z0 = virtualinvoke r3.<org.apache.poi.xssf.usermodel.XSSFCell: boolean isPartOfArrayFormulaGroup()>();

        if $z0 == 0 goto label2;

        virtualinvoke r3.<org.apache.poi.xssf.usermodel.XSSFCell: void notifyArrayFormulaChanging()>();

     label2:
        $i0 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Cell: int getCellType()>();

        if $i0 != 2 goto label3;

        $r6 = r2.<org.apache.poi.xssf.usermodel.XSSFRow: org.apache.poi.xssf.usermodel.XSSFSheet _sheet>;

        $r7 = virtualinvoke $r6.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.xssf.usermodel.XSSFWorkbook getWorkbook()>();

        virtualinvoke $r7.<org.apache.poi.xssf.usermodel.XSSFWorkbook: void onDeleteFormula(org.apache.poi.xssf.usermodel.XSSFCell)>(r3);

     label3:
        $r4 = r2.<org.apache.poi.xssf.usermodel.XSSFRow: java.util.TreeMap _cells>;

        $i1 = interfaceinvoke r0.<org.apache.poi.ss.usermodel.Cell: int getColumnIndex()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r4.<java.util.TreeMap: java.lang.Object remove(java.lang.Object)>($r5);

        return;
    }

    public org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow getCTRow()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow $r1;
        org.apache.poi.xssf.usermodel.XSSFRow r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow _row>;

        return $r1;
    }

    protected void onDocumentWrite()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell $r14, $r16, $r18, $r21, $r23;
        boolean $z0, $z1, $z2, z3;
        java.util.Collection $r4;
        java.util.Set $r8;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell[] r27;
        org.apache.poi.xssf.usermodel.XSSFRow r0;
        int $i0, $i1, $i2, $i3, i4, i5;
        org.apache.xmlbeans.XmlObject $r15;
        java.lang.String $r24, $r25;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow $r1, $r10, $r22;
        java.util.Map$Entry r28;
        java.util.Iterator $r5, $r9;
        java.util.TreeMap $r2, $r3, $r6, $r7;
        java.lang.Object $r11, $r12, $r17, $r20;
        org.apache.poi.xssf.usermodel.XSSFCell $r13, $r19, r26;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        z3 = 1;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow _row>;

        $i0 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow: int sizeOfCArray()>();

        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: java.util.TreeMap _cells>;

        $i1 = virtualinvoke $r2.<java.util.TreeMap: int size()>();

        if $i0 == $i1 goto label1;

        z3 = 0;

        goto label6;

     label1:
        i4 = 0;

        $r3 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: java.util.TreeMap _cells>;

        $r4 = virtualinvoke $r3.<java.util.TreeMap: java.util.Collection values()>();

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r20 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r26 = (org.apache.poi.xssf.usermodel.XSSFCell) $r20;

        $r21 = virtualinvoke r26.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell getCTCell()>();

        $r22 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow _row>;

        $i3 = i4;

        i4 = i4 + 1;

        $r23 = interfaceinvoke $r22.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell getCArray(int)>($i3);

        $r24 = interfaceinvoke $r21.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: java.lang.String getR()>();

        $r25 = interfaceinvoke $r23.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: java.lang.String getR()>();

        if $r24 != null goto label3;

        if $r25 != null goto label4;

        goto label5;

     label3:
        $z2 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>($r25);

        if $z2 != 0 goto label5;

     label4:
        z3 = 0;

        goto label6;

     label5:
        goto label2;

     label6:
        if z3 != 0 goto label9;

        $r6 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: java.util.TreeMap _cells>;

        $i2 = virtualinvoke $r6.<java.util.TreeMap: int size()>();

        r27 = newarray (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell)[$i2];

        i5 = 0;

        $r7 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: java.util.TreeMap _cells>;

        $r8 = virtualinvoke $r7.<java.util.TreeMap: java.util.Set entrySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label7:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r11 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r28 = (java.util.Map$Entry) $r11;

        $r12 = interfaceinvoke r28.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (org.apache.poi.xssf.usermodel.XSSFCell) $r12;

        $r14 = virtualinvoke $r13.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell getCTCell()>();

        $r15 = interfaceinvoke $r14.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: org.apache.xmlbeans.XmlObject copy()>();

        $r16 = (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell) $r15;

        r27[i5] = $r16;

        $r17 = interfaceinvoke r28.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r19 = (org.apache.poi.xssf.usermodel.XSSFCell) $r17;

        $r18 = r27[i5];

        virtualinvoke $r19.<org.apache.poi.xssf.usermodel.XSSFCell: void setCTCell(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell)>($r18);

        i5 = i5 + 1;

        goto label7;

     label8:
        $r10 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow _row>;

        interfaceinvoke $r10.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow: void setCArray(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell[])>(r27);

     label9:
        return;
    }

    public java.lang.String toString()
    {
        java.lang.String $r2;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow $r1;
        org.apache.poi.xssf.usermodel.XSSFRow r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRow _row>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    protected void shift(int)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell $r16;
        long $l3;
        org.apache.poi.xssf.usermodel.XSSFRow r0;
        org.apache.poi.ss.util.CellReference $r17;
        org.apache.poi.xssf.usermodel.XSSFWorkbook $r2;
        int $i0, i1, i2, i4, $i5, $i6;
        org.apache.poi.ss.usermodel.Cell r14;
        java.lang.String $r11, $r18, $r19;
        boolean $z0, $z1;
        java.util.Iterator $r12;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSheet $r5;
        org.apache.poi.xssf.usermodel.XSSFSheet $r1, $r4;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10;
        java.lang.Object $r13;
        org.apache.poi.xssf.usermodel.XSSFCell r15;
        org.apache.poi.xssf.model.CalculationChain $r3;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        i1 := @parameter0: int;

        $i0 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRow: int getRowNum()>();

        i2 = $i0 + i1;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.apache.poi.xssf.usermodel.XSSFSheet _sheet>;

        $r2 = virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.xssf.usermodel.XSSFWorkbook getWorkbook()>();

        $r3 = virtualinvoke $r2.<org.apache.poi.xssf.usermodel.XSSFWorkbook: org.apache.poi.xssf.model.CalculationChain getCalculationChain()>();

        $r4 = r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.apache.poi.xssf.usermodel.XSSFSheet _sheet>;

        $r5 = $r4.<org.apache.poi.xssf.usermodel.XSSFSheet: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSheet sheet>;

        $l3 = interfaceinvoke $r5.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTSheet: long getSheetId()>();

        i4 = (int) $l3;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Row[rownum=");

        $i5 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRow: int getRowNum()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] contains cell(s) included in a multi-cell array formula. ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("You cannot change part of an array.");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRow: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (org.apache.poi.ss.usermodel.Cell) $r13;

        r15 = (org.apache.poi.xssf.usermodel.XSSFCell) r14;

        $z1 = virtualinvoke r15.<org.apache.poi.xssf.usermodel.XSSFCell: boolean isPartOfArrayFormulaGroup()>();

        if $z1 == 0 goto label2;

        virtualinvoke r15.<org.apache.poi.xssf.usermodel.XSSFCell: void notifyArrayFormulaChanging(java.lang.String)>($r11);

     label2:
        if $r3 == null goto label3;

        $r19 = virtualinvoke r15.<org.apache.poi.xssf.usermodel.XSSFCell: java.lang.String getReference()>();

        virtualinvoke $r3.<org.apache.poi.xssf.model.CalculationChain: void removeItem(int,java.lang.String)>(i4, $r19);

     label3:
        $r16 = virtualinvoke r15.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell getCTCell()>();

        $r17 = new org.apache.poi.ss.util.CellReference;

        $i6 = virtualinvoke r15.<org.apache.poi.xssf.usermodel.XSSFCell: int getColumnIndex()>();

        specialinvoke $r17.<org.apache.poi.ss.util.CellReference: void <init>(int,int)>(i2, $i6);

        $r18 = virtualinvoke $r17.<org.apache.poi.ss.util.CellReference: java.lang.String formatAsString()>();

        interfaceinvoke $r16.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: void setR(java.lang.String)>($r18);

        goto label1;

     label4:
        virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRow: void setRowNum(int)>(i2);

        return;
    }

    public volatile org.apache.poi.ss.usermodel.Sheet getSheet()
    {
        org.apache.poi.xssf.usermodel.XSSFSheet $r1;
        org.apache.poi.xssf.usermodel.XSSFRow r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.apache.poi.xssf.usermodel.XSSFSheet getSheet()>();

        return $r1;
    }

    public volatile org.apache.poi.ss.usermodel.CellStyle getRowStyle()
    {
        org.apache.poi.xssf.usermodel.XSSFCellStyle $r1;
        org.apache.poi.xssf.usermodel.XSSFRow r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.apache.poi.xssf.usermodel.XSSFCellStyle getRowStyle()>();

        return $r1;
    }

    public volatile org.apache.poi.ss.usermodel.Cell getCell(int, org.apache.poi.ss.usermodel.Row$MissingCellPolicy)
    {
        org.apache.poi.ss.usermodel.Row$MissingCellPolicy r1;
        int i0;
        org.apache.poi.xssf.usermodel.XSSFCell $r2;
        org.apache.poi.xssf.usermodel.XSSFRow r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.poi.ss.usermodel.Row$MissingCellPolicy;

        $r2 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.apache.poi.xssf.usermodel.XSSFCell getCell(int,org.apache.poi.ss.usermodel.Row$MissingCellPolicy)>(i0, r1);

        return $r2;
    }

    public volatile org.apache.poi.ss.usermodel.Cell getCell(int)
    {
        int i0;
        org.apache.poi.xssf.usermodel.XSSFCell $r1;
        org.apache.poi.xssf.usermodel.XSSFRow r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.apache.poi.xssf.usermodel.XSSFCell getCell(int)>(i0);

        return $r1;
    }

    public volatile org.apache.poi.ss.usermodel.Cell createCell(int, int)
    {
        int i0, i1;
        org.apache.poi.xssf.usermodel.XSSFCell $r1;
        org.apache.poi.xssf.usermodel.XSSFRow r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.apache.poi.xssf.usermodel.XSSFCell createCell(int,int)>(i0, i1);

        return $r1;
    }

    public volatile org.apache.poi.ss.usermodel.Cell createCell(int)
    {
        int i0;
        org.apache.poi.xssf.usermodel.XSSFCell $r1;
        org.apache.poi.xssf.usermodel.XSSFRow r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.apache.poi.xssf.usermodel.XSSFCell createCell(int)>(i0);

        return $r1;
    }

    public volatile int compareTo(java.lang.Object)
    {
        int $i0;
        java.lang.Object r1;
        org.apache.poi.xssf.usermodel.XSSFRow r0, $r2;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRow;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.poi.xssf.usermodel.XSSFRow) r1;

        $i0 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRow: int compareTo(org.apache.poi.xssf.usermodel.XSSFRow)>($r2);

        return $i0;
    }
}
