public class org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl extends java.lang.Object implements org.waveprotocol.wave.federation.ProtocolSignature
{
    private org.waveprotocol.wave.communication.Blob signatureBytes;
    private org.waveprotocol.wave.communication.Blob signerId;
    private org.waveprotocol.wave.federation.ProtocolSignature$SignatureAlgorithm signatureAlgorithm;

    public void <init>()
    {
        org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(org.waveprotocol.wave.federation.ProtocolSignature)
    {
        org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl r0;
        org.waveprotocol.wave.federation.ProtocolSignature r1;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolSignature;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl: void copyFrom(org.waveprotocol.wave.federation.ProtocolSignature)>(r1);

        return;
    }

    public void copyFrom(org.waveprotocol.wave.federation.ProtocolSignature)
    {
        org.waveprotocol.wave.federation.ProtocolSignature$SignatureAlgorithm $r4;
        org.waveprotocol.wave.federation.ProtocolSignature r1;
        org.waveprotocol.wave.communication.Blob $r2, $r3;
        org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolSignature;

        $r2 = interfaceinvoke r1.<org.waveprotocol.wave.federation.ProtocolSignature: org.waveprotocol.wave.communication.Blob getSignatureBytes()>();

        virtualinvoke r0.<org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl: void setSignatureBytes(org.waveprotocol.wave.communication.Blob)>($r2);

        $r3 = interfaceinvoke r1.<org.waveprotocol.wave.federation.ProtocolSignature: org.waveprotocol.wave.communication.Blob getSignerId()>();

        virtualinvoke r0.<org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl: void setSignerId(org.waveprotocol.wave.communication.Blob)>($r3);

        $r4 = interfaceinvoke r1.<org.waveprotocol.wave.federation.ProtocolSignature: org.waveprotocol.wave.federation.ProtocolSignature$SignatureAlgorithm getSignatureAlgorithm()>();

        virtualinvoke r0.<org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl: void setSignatureAlgorithm(org.waveprotocol.wave.federation.ProtocolSignature$SignatureAlgorithm)>($r4);

        return;
    }

    public org.waveprotocol.wave.communication.Blob getSignatureBytes()
    {
        org.waveprotocol.wave.communication.Blob $r1;
        org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl: org.waveprotocol.wave.communication.Blob signatureBytes>;

        return $r1;
    }

    public void setSignatureBytes(org.waveprotocol.wave.communication.Blob)
    {
        org.waveprotocol.wave.communication.Blob r1;
        org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl;

        r1 := @parameter0: org.waveprotocol.wave.communication.Blob;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl: org.waveprotocol.wave.communication.Blob signatureBytes> = r1;

        return;
    }

    public org.waveprotocol.wave.communication.Blob getSignerId()
    {
        org.waveprotocol.wave.communication.Blob $r1;
        org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl: org.waveprotocol.wave.communication.Blob signerId>;

        return $r1;
    }

    public void setSignerId(org.waveprotocol.wave.communication.Blob)
    {
        org.waveprotocol.wave.communication.Blob r1;
        org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl;

        r1 := @parameter0: org.waveprotocol.wave.communication.Blob;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl: org.waveprotocol.wave.communication.Blob signerId> = r1;

        return;
    }

    public org.waveprotocol.wave.federation.ProtocolSignature$SignatureAlgorithm getSignatureAlgorithm()
    {
        org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl r0;
        org.waveprotocol.wave.federation.ProtocolSignature$SignatureAlgorithm $r1;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl;

        $r1 = r0.<org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl: org.waveprotocol.wave.federation.ProtocolSignature$SignatureAlgorithm signatureAlgorithm>;

        return $r1;
    }

    public void setSignatureAlgorithm(org.waveprotocol.wave.federation.ProtocolSignature$SignatureAlgorithm)
    {
        org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl r0;
        org.waveprotocol.wave.federation.ProtocolSignature$SignatureAlgorithm r1;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolSignature$SignatureAlgorithm;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl: org.waveprotocol.wave.federation.ProtocolSignature$SignatureAlgorithm signatureAlgorithm> = r1;

        return;
    }

    protected void reset()
    {
        org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl: org.waveprotocol.wave.communication.Blob signatureBytes> = null;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl: org.waveprotocol.wave.communication.Blob signerId> = null;

        r0.<org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl: org.waveprotocol.wave.federation.ProtocolSignature$SignatureAlgorithm signatureAlgorithm> = null;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl r1;
        boolean $z0, $z1, $z2;

        r1 := @this: org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl;

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r1.<org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl: boolean isEqualTo(java.lang.Object)>(r0);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean isEqualTo(java.lang.Object)
    {
        org.waveprotocol.wave.federation.ProtocolSignature $r2;
        java.lang.Object r0;
        org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl r1;
        boolean $z0, $z1;

        r1 := @this: org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof org.waveprotocol.wave.federation.ProtocolSignature;

        if $z0 == 0 goto label2;

        $r2 = (org.waveprotocol.wave.federation.ProtocolSignature) r0;

        $z1 = staticinvoke <org.waveprotocol.wave.federation.ProtocolSignatureUtil: boolean isEqual(org.waveprotocol.wave.federation.ProtocolSignature,org.waveprotocol.wave.federation.ProtocolSignature)>(r1, $r2);

        return $z1;

     label2:
        return 0;
    }

    public int hashCode()
    {
        int $i0;
        org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl r0;

        r0 := @this: org.waveprotocol.wave.federation.impl.ProtocolSignatureImpl;

        $i0 = staticinvoke <org.waveprotocol.wave.federation.ProtocolSignatureUtil: int getHashCode(org.waveprotocol.wave.federation.ProtocolSignature)>(r0);

        return $i0;
    }
}
