public class org.apache.cxf.jaxrs.ext.search.SearchContextImpl extends java.lang.Object implements org.apache.cxf.jaxrs.ext.search.SearchContext
{
    public static final java.lang.String SEARCH_QUERY;
    public static final java.lang.String SHORT_SEARCH_QUERY;
    private static final java.util.logging.Logger LOG;
    private org.apache.cxf.message.Message message;

    public void <init>(org.apache.cxf.message.Message)
    {
        org.apache.cxf.jaxrs.ext.search.SearchContextImpl r0;
        org.apache.cxf.message.Message r1;

        r0 := @this: org.apache.cxf.jaxrs.ext.search.SearchContextImpl;

        r1 := @parameter0: org.apache.cxf.message.Message;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.jaxrs.ext.search.SearchContextImpl: org.apache.cxf.message.Message message> = r1;

        return;
    }

    public org.apache.cxf.jaxrs.ext.search.SearchCondition getCondition(java.lang.Class)
    {
        org.apache.cxf.jaxrs.ext.search.FiqlParseException $r7;
        org.apache.cxf.jaxrs.ext.search.FiqlParser $r2;
        org.apache.cxf.jaxrs.ext.search.SearchContextImpl r1;
        java.util.logging.Logger $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.Class r0;
        java.lang.String $r3;
        org.apache.cxf.jaxrs.ext.search.SearchCondition $r4;
        boolean $z0;

        r1 := @this: org.apache.cxf.jaxrs.ext.search.SearchContextImpl;

        r0 := @parameter0: java.lang.Class;

        $z0 = staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: boolean isPrimitive(java.lang.Class)>(r0);

        if $z0 == 0 goto label1;

        $r5 = <org.apache.cxf.jaxrs.ext.search.SearchContextImpl: java.util.logging.Logger LOG>;

        virtualinvoke $r5.<java.util.logging.Logger: void warning(java.lang.String)>("Primitive condition types are not supported");

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Primitive condition types are not supported");

        throw $r6;

     label1:
        $r2 = specialinvoke r1.<org.apache.cxf.jaxrs.ext.search.SearchContextImpl: org.apache.cxf.jaxrs.ext.search.FiqlParser getParser(java.lang.Class)>(r0);

        $r3 = virtualinvoke r1.<org.apache.cxf.jaxrs.ext.search.SearchContextImpl: java.lang.String getSearchExpression()>();

        if $r3 == null goto label5;

     label2:
        $r4 = virtualinvoke $r2.<org.apache.cxf.jaxrs.ext.search.FiqlParser: org.apache.cxf.jaxrs.ext.search.SearchCondition parse(java.lang.String)>($r3);

     label3:
        return $r4;

     label4:
        $r7 := @caughtexception;

        return null;

     label5:
        return null;

        catch org.apache.cxf.jaxrs.ext.search.FiqlParseException from label2 to label3 with label4;
    }

    public java.lang.String getSearchExpression()
    {
        org.apache.cxf.message.Message $r2;
        org.apache.cxf.jaxrs.ext.search.SearchContextImpl r0;
        javax.ws.rs.core.MultivaluedMap $r5;
        java.lang.Object $r3, $r6, $r8;
        java.lang.String $r1, r4, $r7, $r9;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.cxf.jaxrs.ext.search.SearchContextImpl;

        $r2 = r0.<org.apache.cxf.jaxrs.ext.search.SearchContextImpl: org.apache.cxf.message.Message message>;

        $r1 = <org.apache.cxf.message.Message: java.lang.String QUERY_STRING>;

        $r3 = interfaceinvoke $r2.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r1);

        r4 = (java.lang.String) $r3;

        if r4 == null goto label3;

        $z0 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("_s");

        if $z0 != 0 goto label1;

        $z2 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("_search");

        if $z2 == 0 goto label3;

     label1:
        $r5 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.MultivaluedMap getStructuredParams(java.lang.String,java.lang.String,boolean,boolean)>(r4, "&", 1, 0);

        $z1 = interfaceinvoke $r5.<javax.ws.rs.core.MultivaluedMap: boolean containsKey(java.lang.Object)>("_s");

        if $z1 == 0 goto label2;

        $r8 = interfaceinvoke $r5.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("_s");

        $r9 = (java.lang.String) $r8;

        return $r9;

     label2:
        $r6 = interfaceinvoke $r5.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("_search");

        $r7 = (java.lang.String) $r6;

        return $r7;

     label3:
        return null;
    }

    private org.apache.cxf.jaxrs.ext.search.FiqlParser getParser(java.lang.Class)
    {
        org.apache.cxf.jaxrs.ext.search.FiqlParser $r8;
        org.apache.cxf.message.Message $r2, $r5;
        org.apache.cxf.jaxrs.ext.search.SearchContextImpl r1;
        java.util.LinkedHashMap $r0;
        java.lang.Object $r3, $r6;
        java.lang.Class r9;
        java.lang.String $r4, $r7;

        r1 := @this: org.apache.cxf.jaxrs.ext.search.SearchContextImpl;

        r9 := @parameter0: java.lang.Class;

        $r0 = new java.util.LinkedHashMap;

        specialinvoke $r0.<java.util.LinkedHashMap: void <init>(int)>(2);

        $r2 = r1.<org.apache.cxf.jaxrs.ext.search.SearchContextImpl: org.apache.cxf.message.Message message>;

        $r3 = interfaceinvoke $r2.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>("search.date-format");

        $r4 = (java.lang.String) $r3;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("search.date-format", $r4);

        $r5 = r1.<org.apache.cxf.jaxrs.ext.search.SearchContextImpl: org.apache.cxf.message.Message message>;

        $r6 = interfaceinvoke $r5.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>("search.timezone.support");

        $r7 = (java.lang.String) $r6;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("search.timezone.support", $r7);

        $r8 = new org.apache.cxf.jaxrs.ext.search.FiqlParser;

        specialinvoke $r8.<org.apache.cxf.jaxrs.ext.search.FiqlParser: void <init>(java.lang.Class,java.util.Map)>(r9, $r0);

        return $r8;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        <org.apache.cxf.jaxrs.ext.search.SearchContextImpl: java.lang.String SHORT_SEARCH_QUERY> = "_s";

        <org.apache.cxf.jaxrs.ext.search.SearchContextImpl: java.lang.String SEARCH_QUERY> = "_search";

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/ext/search/SearchContextImpl;");

        <org.apache.cxf.jaxrs.ext.search.SearchContextImpl: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
