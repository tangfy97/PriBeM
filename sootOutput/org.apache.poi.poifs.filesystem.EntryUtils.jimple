public class org.apache.poi.poifs.filesystem.EntryUtils extends java.lang.Object
{

    public void <init>()
    {
        org.apache.poi.poifs.filesystem.EntryUtils r0;

        r0 := @this: org.apache.poi.poifs.filesystem.EntryUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void copyNodeRecursively(org.apache.poi.poifs.filesystem.Entry, org.apache.poi.poifs.filesystem.DirectoryEntry) throws java.io.IOException
    {
        org.apache.poi.poifs.filesystem.Entry r0, $r9;
        java.util.Iterator $r7;
        org.apache.poi.poifs.filesystem.DirectoryEntry r2, $r5, r10;
        org.apache.poi.hpsf.ClassID $r6;
        java.lang.Object $r8;
        java.lang.String $r3, $r4;
        org.apache.poi.poifs.filesystem.DocumentEntry r11;
        org.apache.poi.poifs.filesystem.DocumentInputStream $r1;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.poi.poifs.filesystem.Entry;

        r2 := @parameter1: org.apache.poi.poifs.filesystem.DirectoryEntry;

        $z0 = interfaceinvoke r0.<org.apache.poi.poifs.filesystem.Entry: boolean isDirectoryEntry()>();

        if $z0 == 0 goto label3;

        r10 = (org.apache.poi.poifs.filesystem.DirectoryEntry) r0;

        $r4 = interfaceinvoke r0.<org.apache.poi.poifs.filesystem.Entry: java.lang.String getName()>();

        $r5 = interfaceinvoke r2.<org.apache.poi.poifs.filesystem.DirectoryEntry: org.apache.poi.poifs.filesystem.DirectoryEntry createDirectory(java.lang.String)>($r4);

        $r6 = interfaceinvoke r10.<org.apache.poi.poifs.filesystem.DirectoryEntry: org.apache.poi.hpsf.ClassID getStorageClsid()>();

        interfaceinvoke $r5.<org.apache.poi.poifs.filesystem.DirectoryEntry: void setStorageClsid(org.apache.poi.hpsf.ClassID)>($r6);

        $r7 = interfaceinvoke r10.<org.apache.poi.poifs.filesystem.DirectoryEntry: java.util.Iterator getEntries()>();

     label1:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (org.apache.poi.poifs.filesystem.Entry) $r8;

        staticinvoke <org.apache.poi.poifs.filesystem.EntryUtils: void copyNodeRecursively(org.apache.poi.poifs.filesystem.Entry,org.apache.poi.poifs.filesystem.DirectoryEntry)>($r9, $r5);

        goto label1;

     label2:
        goto label4;

     label3:
        r11 = (org.apache.poi.poifs.filesystem.DocumentEntry) r0;

        $r1 = new org.apache.poi.poifs.filesystem.DocumentInputStream;

        specialinvoke $r1.<org.apache.poi.poifs.filesystem.DocumentInputStream: void <init>(org.apache.poi.poifs.filesystem.DocumentEntry)>(r11);

        $r3 = interfaceinvoke r11.<org.apache.poi.poifs.filesystem.DocumentEntry: java.lang.String getName()>();

        interfaceinvoke r2.<org.apache.poi.poifs.filesystem.DirectoryEntry: org.apache.poi.poifs.filesystem.DocumentEntry createDocument(java.lang.String,java.io.InputStream)>($r3, $r1);

        virtualinvoke $r1.<org.apache.poi.poifs.filesystem.DocumentInputStream: void close()>();

     label4:
        return;
    }

    public static void copyNodes(org.apache.poi.poifs.filesystem.DirectoryEntry, org.apache.poi.poifs.filesystem.DirectoryEntry) throws java.io.IOException
    {
        java.util.Iterator $r1;
        org.apache.poi.poifs.filesystem.Entry r3;
        org.apache.poi.poifs.filesystem.DirectoryEntry r0, r4;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @parameter0: org.apache.poi.poifs.filesystem.DirectoryEntry;

        r4 := @parameter1: org.apache.poi.poifs.filesystem.DirectoryEntry;

        $r1 = interfaceinvoke r0.<org.apache.poi.poifs.filesystem.DirectoryEntry: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.poi.poifs.filesystem.Entry) $r2;

        staticinvoke <org.apache.poi.poifs.filesystem.EntryUtils: void copyNodeRecursively(org.apache.poi.poifs.filesystem.Entry,org.apache.poi.poifs.filesystem.DirectoryEntry)>(r3, r4);

        goto label1;

     label2:
        return;
    }

    public static void copyNodes(org.apache.poi.poifs.filesystem.FilteringDirectoryNode, org.apache.poi.poifs.filesystem.FilteringDirectoryNode) throws java.io.IOException
    {
        org.apache.poi.poifs.filesystem.FilteringDirectoryNode r0, r1;

        r0 := @parameter0: org.apache.poi.poifs.filesystem.FilteringDirectoryNode;

        r1 := @parameter1: org.apache.poi.poifs.filesystem.FilteringDirectoryNode;

        staticinvoke <org.apache.poi.poifs.filesystem.EntryUtils: void copyNodes(org.apache.poi.poifs.filesystem.DirectoryEntry,org.apache.poi.poifs.filesystem.DirectoryEntry)>(r0, r1);

        return;
    }

    public static void copyNodes(org.apache.poi.poifs.filesystem.DirectoryEntry, org.apache.poi.poifs.filesystem.DirectoryEntry, java.util.List) throws java.io.IOException
    {
        java.util.Iterator $r1;
        org.apache.poi.poifs.filesystem.Entry r3;
        org.apache.poi.poifs.filesystem.DirectoryEntry r0, r6;
        java.util.List r4;
        java.lang.Object $r2;
        java.lang.String $r5;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.poi.poifs.filesystem.DirectoryEntry;

        r6 := @parameter1: org.apache.poi.poifs.filesystem.DirectoryEntry;

        r4 := @parameter2: java.util.List;

        $r1 = interfaceinvoke r0.<org.apache.poi.poifs.filesystem.DirectoryEntry: java.util.Iterator getEntries()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.poi.poifs.filesystem.Entry) $r2;

        $r5 = interfaceinvoke r3.<org.apache.poi.poifs.filesystem.Entry: java.lang.String getName()>();

        $z1 = interfaceinvoke r4.<java.util.List: boolean contains(java.lang.Object)>($r5);

        if $z1 != 0 goto label2;

        staticinvoke <org.apache.poi.poifs.filesystem.EntryUtils: void copyNodeRecursively(org.apache.poi.poifs.filesystem.Entry,org.apache.poi.poifs.filesystem.DirectoryEntry)>(r3, r6);

     label2:
        goto label1;

     label3:
        return;
    }

    public static void copyNodes(org.apache.poi.poifs.filesystem.POIFSFileSystem, org.apache.poi.poifs.filesystem.POIFSFileSystem) throws java.io.IOException
    {
        org.apache.poi.poifs.filesystem.DirectoryNode $r1, $r3;
        org.apache.poi.poifs.filesystem.POIFSFileSystem r0, r2;

        r0 := @parameter0: org.apache.poi.poifs.filesystem.POIFSFileSystem;

        r2 := @parameter1: org.apache.poi.poifs.filesystem.POIFSFileSystem;

        $r1 = virtualinvoke r0.<org.apache.poi.poifs.filesystem.POIFSFileSystem: org.apache.poi.poifs.filesystem.DirectoryNode getRoot()>();

        $r3 = virtualinvoke r2.<org.apache.poi.poifs.filesystem.POIFSFileSystem: org.apache.poi.poifs.filesystem.DirectoryNode getRoot()>();

        staticinvoke <org.apache.poi.poifs.filesystem.EntryUtils: void copyNodes(org.apache.poi.poifs.filesystem.DirectoryEntry,org.apache.poi.poifs.filesystem.DirectoryEntry)>($r1, $r3);

        return;
    }

    public static void copyNodes(org.apache.poi.poifs.filesystem.POIFSFileSystem, org.apache.poi.poifs.filesystem.POIFSFileSystem, java.util.List) throws java.io.IOException
    {
        org.apache.poi.poifs.filesystem.DirectoryNode $r2, $r6;
        java.util.List r3;
        org.apache.poi.poifs.filesystem.POIFSFileSystem r1, r5;
        org.apache.poi.poifs.filesystem.FilteringDirectoryNode $r0, $r4;

        r1 := @parameter0: org.apache.poi.poifs.filesystem.POIFSFileSystem;

        r5 := @parameter1: org.apache.poi.poifs.filesystem.POIFSFileSystem;

        r3 := @parameter2: java.util.List;

        $r0 = new org.apache.poi.poifs.filesystem.FilteringDirectoryNode;

        $r2 = virtualinvoke r1.<org.apache.poi.poifs.filesystem.POIFSFileSystem: org.apache.poi.poifs.filesystem.DirectoryNode getRoot()>();

        specialinvoke $r0.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: void <init>(org.apache.poi.poifs.filesystem.DirectoryEntry,java.util.Collection)>($r2, r3);

        $r4 = new org.apache.poi.poifs.filesystem.FilteringDirectoryNode;

        $r6 = virtualinvoke r5.<org.apache.poi.poifs.filesystem.POIFSFileSystem: org.apache.poi.poifs.filesystem.DirectoryNode getRoot()>();

        specialinvoke $r4.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: void <init>(org.apache.poi.poifs.filesystem.DirectoryEntry,java.util.Collection)>($r6, r3);

        staticinvoke <org.apache.poi.poifs.filesystem.EntryUtils: void copyNodes(org.apache.poi.poifs.filesystem.FilteringDirectoryNode,org.apache.poi.poifs.filesystem.FilteringDirectoryNode)>($r0, $r4);

        return;
    }

    public static boolean areDirectoriesIdentical(org.apache.poi.poifs.filesystem.DirectoryEntry, org.apache.poi.poifs.filesystem.DirectoryEntry)
    {
        org.apache.poi.poifs.filesystem.Entry $r10, r27, r28, r29;
        java.lang.Integer $r19, $r23, $r24;
        org.apache.poi.poifs.filesystem.DocumentEntry $r11, $r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9;
        org.apache.poi.poifs.filesystem.DirectoryEntry r0, r2, $r13, $r14;
        java.io.FileNotFoundException $r26;
        java.util.HashMap $r30;
        org.apache.poi.poifs.filesystem.DocumentNode $r17, $r22;
        int $i0, $i1, $i2, $i3, i4, $i6, $i8;
        java.lang.String $r1, $r3, $r9, $r16, $r21;
        java.util.Iterator $r5, $r6, $r7;
        java.io.IOException $r25;
        java.lang.Object $r8, $r15, $r18, $r20;

        r0 := @parameter0: org.apache.poi.poifs.filesystem.DirectoryEntry;

        r2 := @parameter1: org.apache.poi.poifs.filesystem.DirectoryEntry;

        $r1 = interfaceinvoke r0.<org.apache.poi.poifs.filesystem.DirectoryEntry: java.lang.String getName()>();

        $r3 = interfaceinvoke r2.<org.apache.poi.poifs.filesystem.DirectoryEntry: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label01;

        return 0;

     label01:
        $i0 = interfaceinvoke r0.<org.apache.poi.poifs.filesystem.DirectoryEntry: int getEntryCount()>();

        $i1 = interfaceinvoke r2.<org.apache.poi.poifs.filesystem.DirectoryEntry: int getEntryCount()>();

        if $i0 == $i1 goto label02;

        return 0;

     label02:
        $r30 = new java.util.HashMap;

        specialinvoke $r30.<java.util.HashMap: void <init>()>();

        $r5 = interfaceinvoke r0.<org.apache.poi.poifs.filesystem.DirectoryEntry: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $r20 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r27 = (org.apache.poi.poifs.filesystem.Entry) $r20;

        $r21 = interfaceinvoke r27.<org.apache.poi.poifs.filesystem.Entry: java.lang.String getName()>();

        $z8 = interfaceinvoke r27.<org.apache.poi.poifs.filesystem.Entry: boolean isDirectoryEntry()>();

        if $z8 == 0 goto label04;

        $i6 = (int) -12345;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        interfaceinvoke $r30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r24);

        goto label05;

     label04:
        $r22 = (org.apache.poi.poifs.filesystem.DocumentNode) r27;

        $i3 = virtualinvoke $r22.<org.apache.poi.poifs.filesystem.DocumentNode: int getSize()>();

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        interfaceinvoke $r30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r23);

     label05:
        goto label03;

     label06:
        $r6 = interfaceinvoke r2.<org.apache.poi.poifs.filesystem.DirectoryEntry: java.util.Iterator iterator()>();

     label07:
        $z2 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label12;

        $r15 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r28 = (org.apache.poi.poifs.filesystem.Entry) $r15;

        $r16 = interfaceinvoke r28.<org.apache.poi.poifs.filesystem.Entry: java.lang.String getName()>();

        $z6 = interfaceinvoke $r30.<java.util.Map: boolean containsKey(java.lang.Object)>($r16);

        if $z6 != 0 goto label08;

        return 0;

     label08:
        $z7 = interfaceinvoke r28.<org.apache.poi.poifs.filesystem.Entry: boolean isDirectoryEntry()>();

        if $z7 == 0 goto label09;

        $i8 = (int) -12345;

        i4 = $i8;

        goto label10;

     label09:
        $r17 = (org.apache.poi.poifs.filesystem.DocumentNode) r28;

        i4 = virtualinvoke $r17.<org.apache.poi.poifs.filesystem.DocumentNode: int getSize()>();

     label10:
        $r18 = interfaceinvoke $r30.<java.util.Map: java.lang.Object get(java.lang.Object)>($r16);

        $r19 = (java.lang.Integer) $r18;

        $i2 = virtualinvoke $r19.<java.lang.Integer: int intValue()>();

        if i4 == $i2 goto label11;

        return 0;

     label11:
        interfaceinvoke $r30.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r16);

        goto label07;

     label12:
        $z3 = interfaceinvoke $r30.<java.util.Map: boolean isEmpty()>();

        if $z3 != 0 goto label13;

        return 0;

     label13:
        $r7 = interfaceinvoke r0.<org.apache.poi.poifs.filesystem.DirectoryEntry: java.util.Iterator iterator()>();

     label14:
        $z4 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label23;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r29 = (org.apache.poi.poifs.filesystem.Entry) $r8;

     label15:
        $r9 = interfaceinvoke r29.<org.apache.poi.poifs.filesystem.Entry: java.lang.String getName()>();

        $r10 = interfaceinvoke r2.<org.apache.poi.poifs.filesystem.DirectoryEntry: org.apache.poi.poifs.filesystem.Entry getEntry(java.lang.String)>($r9);

        $z5 = interfaceinvoke r29.<org.apache.poi.poifs.filesystem.Entry: boolean isDirectoryEntry()>();

        if $z5 == 0 goto label16;

        $r14 = (org.apache.poi.poifs.filesystem.DirectoryEntry) r29;

        $r13 = (org.apache.poi.poifs.filesystem.DirectoryEntry) $r10;

        z9 = staticinvoke <org.apache.poi.poifs.filesystem.EntryUtils: boolean areDirectoriesIdentical(org.apache.poi.poifs.filesystem.DirectoryEntry,org.apache.poi.poifs.filesystem.DirectoryEntry)>($r14, $r13);

        goto label17;

     label16:
        $r12 = (org.apache.poi.poifs.filesystem.DocumentEntry) r29;

        $r11 = (org.apache.poi.poifs.filesystem.DocumentEntry) $r10;

        z9 = staticinvoke <org.apache.poi.poifs.filesystem.EntryUtils: boolean areDocumentsIdentical(org.apache.poi.poifs.filesystem.DocumentEntry,org.apache.poi.poifs.filesystem.DocumentEntry)>($r12, $r11);

     label17:
        if z9 != 0 goto label19;

     label18:
        return 0;

     label19:
        goto label22;

     label20:
        $r26 := @caughtexception;

        return 0;

     label21:
        $r25 := @caughtexception;

        return 0;

     label22:
        goto label14;

     label23:
        return 1;

        catch java.io.FileNotFoundException from label15 to label18 with label20;
        catch java.io.IOException from label15 to label18 with label21;
    }

    public static boolean areDocumentsIdentical(org.apache.poi.poifs.filesystem.DocumentEntry, org.apache.poi.poifs.filesystem.DocumentEntry) throws java.io.IOException
    {
        java.lang.Throwable $r6;
        int $i0, $i1, $i2, $i3, $i5, $i7;
        java.lang.String $r1, $r3;
        org.apache.poi.poifs.filesystem.DocumentEntry r0, r2;
        boolean $z0, z1;
        org.apache.poi.poifs.filesystem.DocumentInputStream r7, r8, $r9, $r10;

        r0 := @parameter0: org.apache.poi.poifs.filesystem.DocumentEntry;

        r2 := @parameter1: org.apache.poi.poifs.filesystem.DocumentEntry;

        $r1 = interfaceinvoke r0.<org.apache.poi.poifs.filesystem.DocumentEntry: java.lang.String getName()>();

        $r3 = interfaceinvoke r2.<org.apache.poi.poifs.filesystem.DocumentEntry: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label01;

        return 0;

     label01:
        $i0 = interfaceinvoke r0.<org.apache.poi.poifs.filesystem.DocumentEntry: int getSize()>();

        $i1 = interfaceinvoke r2.<org.apache.poi.poifs.filesystem.DocumentEntry: int getSize()>();

        if $i0 == $i1 goto label02;

        return 0;

     label02:
        z1 = 1;

        r7 = null;

        r8 = null;

     label03:
        $r9 = new org.apache.poi.poifs.filesystem.DocumentInputStream;

        specialinvoke $r9.<org.apache.poi.poifs.filesystem.DocumentInputStream: void <init>(org.apache.poi.poifs.filesystem.DocumentEntry)>(r0);

        r7 = $r9;

        $r10 = new org.apache.poi.poifs.filesystem.DocumentInputStream;

        specialinvoke $r10.<org.apache.poi.poifs.filesystem.DocumentInputStream: void <init>(org.apache.poi.poifs.filesystem.DocumentEntry)>(r2);

        r8 = $r10;

     label04:
        $i2 = virtualinvoke $r9.<org.apache.poi.poifs.filesystem.DocumentInputStream: int read()>();

        $i3 = virtualinvoke $r10.<org.apache.poi.poifs.filesystem.DocumentInputStream: int read()>();

        if $i2 == $i3 goto label05;

        z1 = 0;

        goto label06;

     label05:
        $i5 = (int) -1;

        if $i2 == $i5 goto label06;

        $i7 = (int) -1;

        if $i3 != $i7 goto label04;

     label06:
        if $r9 == null goto label07;

        virtualinvoke $r9.<org.apache.poi.poifs.filesystem.DocumentInputStream: void close()>();

     label07:
        if $r10 == null goto label12;

        virtualinvoke $r10.<org.apache.poi.poifs.filesystem.DocumentInputStream: void close()>();

        goto label12;

     label08:
        $r6 := @caughtexception;

     label09:
        if r7 == null goto label10;

        virtualinvoke r7.<org.apache.poi.poifs.filesystem.DocumentInputStream: void close()>();

     label10:
        if r8 == null goto label11;

        virtualinvoke r8.<org.apache.poi.poifs.filesystem.DocumentInputStream: void close()>();

     label11:
        throw $r6;

     label12:
        return z1;

        catch java.lang.Throwable from label03 to label06 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }
}
