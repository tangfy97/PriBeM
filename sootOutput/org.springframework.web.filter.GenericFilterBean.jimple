public abstract class org.springframework.web.filter.GenericFilterBean extends java.lang.Object implements javax.servlet.Filter, org.springframework.beans.factory.BeanNameAware, org.springframework.web.context.ServletContextAware, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean
{
    protected final org.apache.commons.logging.Log logger;
    private final java.util.Set requiredProperties;
    private javax.servlet.FilterConfig filterConfig;
    private java.lang.String beanName;
    private javax.servlet.ServletContext servletContext;

    public void <init>()
    {
        java.util.HashSet $r3;
        org.springframework.web.filter.GenericFilterBean r0;
        java.lang.Class $r1;
        org.apache.commons.logging.Log $r2;

        r0 := @this: org.springframework.web.filter.GenericFilterBean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        r0.<org.springframework.web.filter.GenericFilterBean: org.apache.commons.logging.Log logger> = $r2;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r0.<org.springframework.web.filter.GenericFilterBean: java.util.Set requiredProperties> = $r3;

        return;
    }

    public final void setBeanName(java.lang.String)
    {
        java.lang.String r1;
        org.springframework.web.filter.GenericFilterBean r0;

        r0 := @this: org.springframework.web.filter.GenericFilterBean;

        r1 := @parameter0: java.lang.String;

        r0.<org.springframework.web.filter.GenericFilterBean: java.lang.String beanName> = r1;

        return;
    }

    public final void setServletContext(javax.servlet.ServletContext)
    {
        javax.servlet.ServletContext r1;
        org.springframework.web.filter.GenericFilterBean r0;

        r0 := @this: org.springframework.web.filter.GenericFilterBean;

        r1 := @parameter0: javax.servlet.ServletContext;

        r0.<org.springframework.web.filter.GenericFilterBean: javax.servlet.ServletContext servletContext> = r1;

        return;
    }

    public void afterPropertiesSet() throws javax.servlet.ServletException
    {
        org.springframework.web.filter.GenericFilterBean r0;

        r0 := @this: org.springframework.web.filter.GenericFilterBean;

        virtualinvoke r0.<org.springframework.web.filter.GenericFilterBean: void initFilterBean()>();

        return;
    }

    protected final void addRequiredProperty(java.lang.String)
    {
        java.util.Set $r2;
        java.lang.String r1;
        org.springframework.web.filter.GenericFilterBean r0;

        r0 := @this: org.springframework.web.filter.GenericFilterBean;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.springframework.web.filter.GenericFilterBean: java.util.Set requiredProperties>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return;
    }

    public final void init(javax.servlet.FilterConfig) throws javax.servlet.ServletException
    {
        org.springframework.core.io.ResourceEditor $r8;
        org.springframework.web.filter.GenericFilterBean r1;
        boolean $z0, $z1;
        java.util.Set $r4;
        org.springframework.web.filter.GenericFilterBean$FilterConfigPropertyValues $r3;
        java.lang.StringBuilder $r10, $r13, $r14, $r16, $r19, $r20, $r23, $r25, $r26, $r28;
        org.springframework.beans.BeanWrapper $r5;
        org.springframework.web.util.NestedServletException $r31;
        java.lang.String $r12, $r15, $r18, $r21, $r24, $r27, $r29;
        org.springframework.beans.BeansException $r22;
        javax.servlet.FilterConfig r0;
        org.apache.commons.logging.Log $r2, $r9, $r11, $r17, $r30;
        javax.servlet.ServletContext $r7;
        org.springframework.web.context.support.ServletContextResourceLoader $r6;

        r1 := @this: org.springframework.web.filter.GenericFilterBean;

        r0 := @parameter0: javax.servlet.FilterConfig;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "FilterConfig must not be null");

        $r2 = r1.<org.springframework.web.filter.GenericFilterBean: org.apache.commons.logging.Log logger>;

        $z0 = interfaceinvoke $r2.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r17 = r1.<org.springframework.web.filter.GenericFilterBean: org.apache.commons.logging.Log logger>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("Initializing filter \'");

        $r18 = interfaceinvoke r0.<javax.servlet.FilterConfig: java.lang.String getFilterName()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r17.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r21);

     label1:
        r1.<org.springframework.web.filter.GenericFilterBean: javax.servlet.FilterConfig filterConfig> = r0;

     label2:
        $r3 = new org.springframework.web.filter.GenericFilterBean$FilterConfigPropertyValues;

        $r4 = r1.<org.springframework.web.filter.GenericFilterBean: java.util.Set requiredProperties>;

        specialinvoke $r3.<org.springframework.web.filter.GenericFilterBean$FilterConfigPropertyValues: void <init>(javax.servlet.FilterConfig,java.util.Set)>(r0, $r4);

        $r5 = staticinvoke <org.springframework.beans.PropertyAccessorFactory: org.springframework.beans.BeanWrapper forBeanPropertyAccess(java.lang.Object)>(r1);

        $r6 = new org.springframework.web.context.support.ServletContextResourceLoader;

        $r7 = interfaceinvoke r0.<javax.servlet.FilterConfig: javax.servlet.ServletContext getServletContext()>();

        specialinvoke $r6.<org.springframework.web.context.support.ServletContextResourceLoader: void <init>(javax.servlet.ServletContext)>($r7);

        $r8 = new org.springframework.core.io.ResourceEditor;

        specialinvoke $r8.<org.springframework.core.io.ResourceEditor: void <init>(org.springframework.core.io.ResourceLoader)>($r6);

        interfaceinvoke $r5.<org.springframework.beans.BeanWrapper: void registerCustomEditor(java.lang.Class,java.beans.PropertyEditor)>(class "Lorg/springframework/core/io/Resource;", $r8);

        virtualinvoke r1.<org.springframework.web.filter.GenericFilterBean: void initBeanWrapper(org.springframework.beans.BeanWrapper)>($r5);

        interfaceinvoke $r5.<org.springframework.beans.BeanWrapper: void setPropertyValues(org.springframework.beans.PropertyValues,boolean)>($r3, 1);

     label3:
        goto label5;

     label4:
        $r22 := @caughtexception;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to set bean properties on filter \'");

        $r24 = interfaceinvoke r0.<javax.servlet.FilterConfig: java.lang.String getFilterName()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': ");

        $r27 = virtualinvoke $r22.<org.springframework.beans.BeansException: java.lang.String getMessage()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        $r30 = r1.<org.springframework.web.filter.GenericFilterBean: org.apache.commons.logging.Log logger>;

        interfaceinvoke $r30.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r29, $r22);

        $r31 = new org.springframework.web.util.NestedServletException;

        specialinvoke $r31.<org.springframework.web.util.NestedServletException: void <init>(java.lang.String,java.lang.Throwable)>($r29, $r22);

        throw $r31;

     label5:
        virtualinvoke r1.<org.springframework.web.filter.GenericFilterBean: void initFilterBean()>();

        $r9 = r1.<org.springframework.web.filter.GenericFilterBean: org.apache.commons.logging.Log logger>;

        $z1 = interfaceinvoke $r9.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label6;

        $r11 = r1.<org.springframework.web.filter.GenericFilterBean: org.apache.commons.logging.Log logger>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Filter \'");

        $r12 = interfaceinvoke r0.<javax.servlet.FilterConfig: java.lang.String getFilterName()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' configured successfully");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r11.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r15);

     label6:
        return;

        catch org.springframework.beans.BeansException from label2 to label3 with label4;
    }

    protected void initBeanWrapper(org.springframework.beans.BeanWrapper) throws org.springframework.beans.BeansException
    {
        org.springframework.beans.BeanWrapper r1;
        org.springframework.web.filter.GenericFilterBean r0;

        r0 := @this: org.springframework.web.filter.GenericFilterBean;

        r1 := @parameter0: org.springframework.beans.BeanWrapper;

        return;
    }

    public final javax.servlet.FilterConfig getFilterConfig()
    {
        org.springframework.web.filter.GenericFilterBean r0;
        javax.servlet.FilterConfig $r1;

        r0 := @this: org.springframework.web.filter.GenericFilterBean;

        $r1 = r0.<org.springframework.web.filter.GenericFilterBean: javax.servlet.FilterConfig filterConfig>;

        return $r1;
    }

    protected final java.lang.String getFilterName()
    {
        org.springframework.web.filter.GenericFilterBean r0;
        javax.servlet.FilterConfig $r1, $r2;
        java.lang.String $r3;

        r0 := @this: org.springframework.web.filter.GenericFilterBean;

        $r1 = r0.<org.springframework.web.filter.GenericFilterBean: javax.servlet.FilterConfig filterConfig>;

        if $r1 == null goto label1;

        $r2 = r0.<org.springframework.web.filter.GenericFilterBean: javax.servlet.FilterConfig filterConfig>;

        $r3 = interfaceinvoke $r2.<javax.servlet.FilterConfig: java.lang.String getFilterName()>();

        goto label2;

     label1:
        $r3 = r0.<org.springframework.web.filter.GenericFilterBean: java.lang.String beanName>;

     label2:
        return $r3;
    }

    protected final javax.servlet.ServletContext getServletContext()
    {
        org.springframework.web.filter.GenericFilterBean r0;
        javax.servlet.FilterConfig $r1, $r2;
        javax.servlet.ServletContext $r3;

        r0 := @this: org.springframework.web.filter.GenericFilterBean;

        $r1 = r0.<org.springframework.web.filter.GenericFilterBean: javax.servlet.FilterConfig filterConfig>;

        if $r1 == null goto label1;

        $r2 = r0.<org.springframework.web.filter.GenericFilterBean: javax.servlet.FilterConfig filterConfig>;

        $r3 = interfaceinvoke $r2.<javax.servlet.FilterConfig: javax.servlet.ServletContext getServletContext()>();

        goto label2;

     label1:
        $r3 = r0.<org.springframework.web.filter.GenericFilterBean: javax.servlet.ServletContext servletContext>;

     label2:
        return $r3;
    }

    protected void initFilterBean() throws javax.servlet.ServletException
    {
        org.springframework.web.filter.GenericFilterBean r0;

        r0 := @this: org.springframework.web.filter.GenericFilterBean;

        return;
    }

    public void destroy()
    {
        org.springframework.web.filter.GenericFilterBean r0;

        r0 := @this: org.springframework.web.filter.GenericFilterBean;

        return;
    }
}
