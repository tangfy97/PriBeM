final class org.waveprotocol.wave.client.gadget.Gadget$1 extends java.lang.Object implements org.waveprotocol.wave.client.doodad.DoodadInstallers$BlipInstaller
{
    final org.waveprotocol.wave.model.supplement.ObservableSupplementedWave val$supplement;
    final org.waveprotocol.wave.client.account.ProfileManager val$profileManager;
    final org.waveprotocol.wave.model.wave.ParticipantId val$signedInUser;

    void <init>(org.waveprotocol.wave.model.supplement.ObservableSupplementedWave, org.waveprotocol.wave.client.account.ProfileManager, org.waveprotocol.wave.model.wave.ParticipantId)
    {
        org.waveprotocol.wave.client.gadget.Gadget$1 r0;
        org.waveprotocol.wave.model.supplement.ObservableSupplementedWave r1;
        org.waveprotocol.wave.model.wave.ParticipantId r3;
        org.waveprotocol.wave.client.account.ProfileManager r2;

        r0 := @this: org.waveprotocol.wave.client.gadget.Gadget$1;

        r1 := @parameter0: org.waveprotocol.wave.model.supplement.ObservableSupplementedWave;

        r2 := @parameter1: org.waveprotocol.wave.client.account.ProfileManager;

        r3 := @parameter2: org.waveprotocol.wave.model.wave.ParticipantId;

        r0.<org.waveprotocol.wave.client.gadget.Gadget$1: org.waveprotocol.wave.model.supplement.ObservableSupplementedWave val$supplement> = r1;

        r0.<org.waveprotocol.wave.client.gadget.Gadget$1: org.waveprotocol.wave.client.account.ProfileManager val$profileManager> = r2;

        r0.<org.waveprotocol.wave.client.gadget.Gadget$1: org.waveprotocol.wave.model.wave.ParticipantId val$signedInUser> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void install(org.waveprotocol.wave.model.wave.Wavelet, org.waveprotocol.wave.model.conversation.Conversation, org.waveprotocol.wave.model.conversation.ConversationBlip, org.waveprotocol.wave.client.editor.content.Registries)
    {
        org.waveprotocol.wave.model.id.WaveletName $r3;
        org.waveprotocol.wave.model.id.WaveId $r1;
        org.waveprotocol.wave.client.gadget.Gadget$1 r7;
        org.waveprotocol.wave.model.supplement.ObservableSupplementedWave $r9;
        org.waveprotocol.wave.model.id.WaveletId $r2;
        org.waveprotocol.wave.model.wave.ParticipantId $r8;
        org.waveprotocol.wave.client.editor.ElementHandlerRegistry $r5;
        org.waveprotocol.wave.model.wave.Wavelet r0;
        org.waveprotocol.wave.model.conversation.ConversationBlip r6;
        org.waveprotocol.wave.model.conversation.Conversation r12;
        java.lang.String $r11;
        org.waveprotocol.wave.client.account.ProfileManager $r10;
        org.waveprotocol.wave.client.editor.content.Registries r4;

        r7 := @this: org.waveprotocol.wave.client.gadget.Gadget$1;

        r0 := @parameter0: org.waveprotocol.wave.model.wave.Wavelet;

        r12 := @parameter1: org.waveprotocol.wave.model.conversation.Conversation;

        r6 := @parameter2: org.waveprotocol.wave.model.conversation.ConversationBlip;

        r4 := @parameter3: org.waveprotocol.wave.client.editor.content.Registries;

        $r1 = interfaceinvoke r0.<org.waveprotocol.wave.model.wave.Wavelet: org.waveprotocol.wave.model.id.WaveId getWaveId()>();

        $r2 = interfaceinvoke r0.<org.waveprotocol.wave.model.wave.Wavelet: org.waveprotocol.wave.model.id.WaveletId getId()>();

        $r3 = staticinvoke <org.waveprotocol.wave.model.id.WaveletName: org.waveprotocol.wave.model.id.WaveletName of(org.waveprotocol.wave.model.id.WaveId,org.waveprotocol.wave.model.id.WaveletId)>($r1, $r2);

        $r5 = interfaceinvoke r4.<org.waveprotocol.wave.client.editor.content.Registries: org.waveprotocol.wave.client.editor.ElementHandlerRegistry getElementHandlerRegistry()>();

        $r9 = r7.<org.waveprotocol.wave.client.gadget.Gadget$1: org.waveprotocol.wave.model.supplement.ObservableSupplementedWave val$supplement>;

        $r10 = r7.<org.waveprotocol.wave.client.gadget.Gadget$1: org.waveprotocol.wave.client.account.ProfileManager val$profileManager>;

        $r8 = r7.<org.waveprotocol.wave.client.gadget.Gadget$1: org.waveprotocol.wave.model.wave.ParticipantId val$signedInUser>;

        $r11 = virtualinvoke $r8.<org.waveprotocol.wave.model.wave.ParticipantId: java.lang.String getAddress()>();

        staticinvoke <org.waveprotocol.wave.client.gadget.Gadget: void register(org.waveprotocol.wave.client.editor.ElementHandlerRegistry,org.waveprotocol.wave.model.id.WaveletName,org.waveprotocol.wave.model.conversation.ConversationBlip,org.waveprotocol.wave.model.supplement.ObservableSupplementedWave,org.waveprotocol.wave.client.account.ProfileManager,java.lang.String)>($r5, $r3, r6, $r9, $r10, $r11);

        return;
    }
}
