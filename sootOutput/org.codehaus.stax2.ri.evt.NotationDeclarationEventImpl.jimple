public class org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl extends org.codehaus.stax2.ri.evt.BaseEventImpl implements org.codehaus.stax2.evt.NotationDeclaration2
{
    final java.lang.String mName;
    final java.lang.String mPublicId;
    final java.lang.String mSystemId;

    public void <init>(javax.xml.stream.Location, java.lang.String, java.lang.String, java.lang.String)
    {
        javax.xml.stream.Location r1;
        org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl r0;
        java.lang.String r2, r3, r4;

        r0 := @this: org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl;

        r1 := @parameter0: javax.xml.stream.Location;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        specialinvoke r0.<org.codehaus.stax2.ri.evt.BaseEventImpl: void <init>(javax.xml.stream.Location)>(r1);

        r0.<org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl: java.lang.String mName> = r2;

        r0.<org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl: java.lang.String mPublicId> = r3;

        r0.<org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl: java.lang.String mSystemId> = r4;

        return;
    }

    public java.lang.String getName()
    {
        org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl;

        $r1 = r0.<org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl: java.lang.String mName>;

        return $r1;
    }

    public java.lang.String getPublicId()
    {
        org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl;

        $r1 = r0.<org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl: java.lang.String mPublicId>;

        return $r1;
    }

    public java.lang.String getSystemId()
    {
        org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl;

        $r1 = r0.<org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl: java.lang.String mSystemId>;

        return $r1;
    }

    public java.lang.String getBaseURI()
    {
        org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl r0;

        r0 := @this: org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl;

        return "";
    }

    public int getEventType()
    {
        org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl r0;

        r0 := @this: org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl;

        return 14;
    }

    public void writeAsEncodedUnicode(java.io.Writer) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl r1;
        java.io.IOException $r7;
        java.io.Writer r0;
        java.lang.String $r2, $r3, $r4, $r5, $r6;

        r1 := @this: org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl;

        r0 := @parameter0: java.io.Writer;

     label1:
        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>("<!NOTATION ");

        $r2 = r1.<org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl: java.lang.String mName>;

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>($r2);

        $r3 = r1.<org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl: java.lang.String mPublicId>;

        if $r3 == null goto label2;

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>("PUBLIC \"");

        $r6 = r1.<org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl: java.lang.String mPublicId>;

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>($r6);

        virtualinvoke r0.<java.io.Writer: void write(int)>(34);

        goto label3;

     label2:
        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>("SYSTEM");

     label3:
        $r4 = r1.<org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl: java.lang.String mSystemId>;

        if $r4 == null goto label4;

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>(" \"");

        $r5 = r1.<org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl: java.lang.String mSystemId>;

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>($r5);

        virtualinvoke r0.<java.io.Writer: void write(int)>(34);

     label4:
        virtualinvoke r0.<java.io.Writer: void write(int)>(62);

     label5:
        goto label7;

     label6:
        $r7 := @caughtexception;

        virtualinvoke r1.<org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl: void throwFromIOE(java.io.IOException)>($r7);

     label7:
        return;

        catch java.io.IOException from label1 to label5 with label6;
    }

    public void writeUsing(org.codehaus.stax2.XMLStreamWriter2) throws javax.xml.stream.XMLStreamException
    {
        org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl r1;
        org.codehaus.stax2.XMLStreamWriter2 r2;
        javax.xml.stream.XMLStreamException $r0;

        r1 := @this: org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl;

        r2 := @parameter0: org.codehaus.stax2.XMLStreamWriter2;

        $r0 = new javax.xml.stream.XMLStreamException;

        specialinvoke $r0.<javax.xml.stream.XMLStreamException: void <init>(java.lang.String)>("Can not write notation declarations using an XMLStreamWriter");

        throw $r0;
    }

    public boolean equals(java.lang.Object)
    {
        org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl r1;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Object r0;
        org.codehaus.stax2.evt.NotationDeclaration2 r2;

        r1 := @this: org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r0 != null goto label2;

        return 0;

     label2:
        $z0 = r0 instanceof org.codehaus.stax2.evt.NotationDeclaration2;

        if $z0 != 0 goto label3;

        return 0;

     label3:
        r2 = (org.codehaus.stax2.evt.NotationDeclaration2) r0;

        $r3 = virtualinvoke r1.<org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl: java.lang.String getName()>();

        $r4 = interfaceinvoke r2.<org.codehaus.stax2.evt.NotationDeclaration2: java.lang.String getName()>();

        $z1 = staticinvoke <org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl: boolean stringsWithNullsEqual(java.lang.String,java.lang.String)>($r3, $r4);

        if $z1 == 0 goto label4;

        $r5 = virtualinvoke r1.<org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl: java.lang.String getPublicId()>();

        $r6 = interfaceinvoke r2.<org.codehaus.stax2.evt.NotationDeclaration2: java.lang.String getPublicId()>();

        $z2 = staticinvoke <org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl: boolean stringsWithNullsEqual(java.lang.String,java.lang.String)>($r5, $r6);

        if $z2 == 0 goto label4;

        $r7 = virtualinvoke r1.<org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl: java.lang.String getSystemId()>();

        $r8 = interfaceinvoke r2.<org.codehaus.stax2.evt.NotationDeclaration2: java.lang.String getSystemId()>();

        $z3 = staticinvoke <org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl: boolean stringsWithNullsEqual(java.lang.String,java.lang.String)>($r7, $r8);

        if $z3 == 0 goto label4;

        $r9 = virtualinvoke r1.<org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl: java.lang.String getBaseURI()>();

        $r10 = interfaceinvoke r2.<org.codehaus.stax2.evt.NotationDeclaration2: java.lang.String getBaseURI()>();

        $z4 = staticinvoke <org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl: boolean stringsWithNullsEqual(java.lang.String,java.lang.String)>($r9, $r10);

        if $z4 == 0 goto label4;

        $z5 = 1;

        goto label5;

     label4:
        $z5 = 0;

     label5:
        return $z5;
    }

    public int hashCode()
    {
        org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl r0;
        int $i0, $i1, $i2, i3;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl;

        i3 = 0;

        $r1 = r0.<org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl: java.lang.String mName>;

        if $r1 == null goto label1;

        $r6 = r0.<org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl: java.lang.String mName>;

        $i2 = virtualinvoke $r6.<java.lang.String: int hashCode()>();

        i3 = 0 ^ $i2;

     label1:
        $r2 = r0.<org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl: java.lang.String mPublicId>;

        if $r2 == null goto label2;

        $r5 = r0.<org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl: java.lang.String mPublicId>;

        $i1 = virtualinvoke $r5.<java.lang.String: int hashCode()>();

        i3 = i3 ^ $i1;

     label2:
        $r3 = r0.<org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl: java.lang.String mSystemId>;

        if $r3 == null goto label3;

        $r4 = r0.<org.codehaus.stax2.ri.evt.NotationDeclarationEventImpl: java.lang.String mSystemId>;

        $i0 = virtualinvoke $r4.<java.lang.String: int hashCode()>();

        i3 = i3 ^ $i0;

     label3:
        return i3;
    }
}
