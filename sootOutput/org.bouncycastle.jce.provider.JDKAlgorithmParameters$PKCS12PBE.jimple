public class org.bouncycastle.jce.provider.JDKAlgorithmParameters$PKCS12PBE extends org.bouncycastle.jce.provider.JDKAlgorithmParameters
{
    org.bouncycastle.asn1.pkcs.PKCS12PBEParams params;

    public void <init>()
    {
        org.bouncycastle.jce.provider.JDKAlgorithmParameters$PKCS12PBE r0;

        r0 := @this: org.bouncycastle.jce.provider.JDKAlgorithmParameters$PKCS12PBE;

        specialinvoke r0.<org.bouncycastle.jce.provider.JDKAlgorithmParameters: void <init>()>();

        return;
    }

    protected byte[] engineGetEncoded()
    {
        byte[] $r2;
        org.bouncycastle.jce.provider.JDKAlgorithmParameters$PKCS12PBE r0;
        java.io.IOException $r3;
        java.lang.RuntimeException $r4;
        org.bouncycastle.asn1.pkcs.PKCS12PBEParams $r1;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r7, $r9;

        r0 := @this: org.bouncycastle.jce.provider.JDKAlgorithmParameters$PKCS12PBE;

     label1:
        $r1 = r0.<org.bouncycastle.jce.provider.JDKAlgorithmParameters$PKCS12PBE: org.bouncycastle.asn1.pkcs.PKCS12PBEParams params>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.pkcs.PKCS12PBEParams: byte[] getEncoded(java.lang.String)>("DER");

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Oooops! ");

        $r7 = virtualinvoke $r3.<java.io.IOException: java.lang.String toString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected byte[] engineGetEncoded(java.lang.String)
    {
        byte[] $r2;
        org.bouncycastle.jce.provider.JDKAlgorithmParameters$PKCS12PBE r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.bouncycastle.jce.provider.JDKAlgorithmParameters$PKCS12PBE;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.bouncycastle.jce.provider.JDKAlgorithmParameters$PKCS12PBE: boolean isASN1FormatString(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<org.bouncycastle.jce.provider.JDKAlgorithmParameters$PKCS12PBE: byte[] engineGetEncoded()>();

        return $r2;

     label1:
        return null;
    }

    protected java.security.spec.AlgorithmParameterSpec localEngineGetParameterSpec(java.lang.Class) throws java.security.spec.InvalidParameterSpecException
    {
        byte[] $r5;
        org.bouncycastle.jce.provider.JDKAlgorithmParameters$PKCS12PBE r3;
        javax.crypto.spec.PBEParameterSpec $r2;
        org.bouncycastle.asn1.pkcs.PKCS12PBEParams $r4, $r6;
        int $i0;
        java.security.spec.InvalidParameterSpecException $r1;
        java.lang.Class r0;
        java.math.BigInteger $r7;

        r3 := @this: org.bouncycastle.jce.provider.JDKAlgorithmParameters$PKCS12PBE;

        r0 := @parameter0: java.lang.Class;

        if r0 != class "Ljavax/crypto/spec/PBEParameterSpec;" goto label1;

        $r2 = new javax.crypto.spec.PBEParameterSpec;

        $r4 = r3.<org.bouncycastle.jce.provider.JDKAlgorithmParameters$PKCS12PBE: org.bouncycastle.asn1.pkcs.PKCS12PBEParams params>;

        $r5 = virtualinvoke $r4.<org.bouncycastle.asn1.pkcs.PKCS12PBEParams: byte[] getIV()>();

        $r6 = r3.<org.bouncycastle.jce.provider.JDKAlgorithmParameters$PKCS12PBE: org.bouncycastle.asn1.pkcs.PKCS12PBEParams params>;

        $r7 = virtualinvoke $r6.<org.bouncycastle.asn1.pkcs.PKCS12PBEParams: java.math.BigInteger getIterations()>();

        $i0 = virtualinvoke $r7.<java.math.BigInteger: int intValue()>();

        specialinvoke $r2.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r5, $i0);

        return $r2;

     label1:
        $r1 = new java.security.spec.InvalidParameterSpecException;

        specialinvoke $r1.<java.security.spec.InvalidParameterSpecException: void <init>(java.lang.String)>("unknown parameter spec passed to PKCS12 PBE parameters object.");

        throw $r1;
    }

    protected void engineInit(java.security.spec.AlgorithmParameterSpec) throws java.security.spec.InvalidParameterSpecException
    {
        byte[] $r4;
        org.bouncycastle.jce.provider.JDKAlgorithmParameters$PKCS12PBE r2;
        javax.crypto.spec.PBEParameterSpec r1;
        org.bouncycastle.asn1.pkcs.PKCS12PBEParams $r3;
        int $i0;
        java.security.spec.InvalidParameterSpecException $r5;
        java.security.spec.AlgorithmParameterSpec r0;
        boolean $z0;

        r2 := @this: org.bouncycastle.jce.provider.JDKAlgorithmParameters$PKCS12PBE;

        r0 := @parameter0: java.security.spec.AlgorithmParameterSpec;

        $z0 = r0 instanceof javax.crypto.spec.PBEParameterSpec;

        if $z0 != 0 goto label1;

        $r5 = new java.security.spec.InvalidParameterSpecException;

        specialinvoke $r5.<java.security.spec.InvalidParameterSpecException: void <init>(java.lang.String)>("PBEParameterSpec required to initialise a PKCS12 PBE parameters algorithm parameters object");

        throw $r5;

     label1:
        r1 = (javax.crypto.spec.PBEParameterSpec) r0;

        $r3 = new org.bouncycastle.asn1.pkcs.PKCS12PBEParams;

        $r4 = virtualinvoke r1.<javax.crypto.spec.PBEParameterSpec: byte[] getSalt()>();

        $i0 = virtualinvoke r1.<javax.crypto.spec.PBEParameterSpec: int getIterationCount()>();

        specialinvoke $r3.<org.bouncycastle.asn1.pkcs.PKCS12PBEParams: void <init>(byte[],int)>($r4, $i0);

        r2.<org.bouncycastle.jce.provider.JDKAlgorithmParameters$PKCS12PBE: org.bouncycastle.asn1.pkcs.PKCS12PBEParams params> = $r3;

        return;
    }

    protected void engineInit(byte[]) throws java.io.IOException
    {
        byte[] r1;
        org.bouncycastle.asn1.pkcs.PKCS12PBEParams $r3;
        org.bouncycastle.jce.provider.JDKAlgorithmParameters$PKCS12PBE r0;
        org.bouncycastle.asn1.ASN1Object $r2;

        r0 := @this: org.bouncycastle.jce.provider.JDKAlgorithmParameters$PKCS12PBE;

        r1 := @parameter0: byte[];

        $r2 = staticinvoke <org.bouncycastle.asn1.ASN1Object: org.bouncycastle.asn1.ASN1Object fromByteArray(byte[])>(r1);

        $r3 = staticinvoke <org.bouncycastle.asn1.pkcs.PKCS12PBEParams: org.bouncycastle.asn1.pkcs.PKCS12PBEParams getInstance(java.lang.Object)>($r2);

        r0.<org.bouncycastle.jce.provider.JDKAlgorithmParameters$PKCS12PBE: org.bouncycastle.asn1.pkcs.PKCS12PBEParams params> = $r3;

        return;
    }

    protected void engineInit(byte[], java.lang.String) throws java.io.IOException
    {
        byte[] r3;
        org.bouncycastle.jce.provider.JDKAlgorithmParameters$PKCS12PBE r0;
        java.io.IOException $r2;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.bouncycastle.jce.provider.JDKAlgorithmParameters$PKCS12PBE;

        r3 := @parameter0: byte[];

        r1 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<org.bouncycastle.jce.provider.JDKAlgorithmParameters$PKCS12PBE: boolean isASN1FormatString(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.bouncycastle.jce.provider.JDKAlgorithmParameters$PKCS12PBE: void engineInit(byte[])>(r3);

        return;

     label1:
        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("Unknown parameters format in PKCS12 PBE parameters object");

        throw $r2;
    }

    protected java.lang.String engineToString()
    {
        org.bouncycastle.jce.provider.JDKAlgorithmParameters$PKCS12PBE r0;

        r0 := @this: org.bouncycastle.jce.provider.JDKAlgorithmParameters$PKCS12PBE;

        return "PKCS12 PBE Parameters";
    }
}
