public class ucar.nc2.ft.point.standard.JoinMuiltdimStructure extends java.lang.Object implements ucar.nc2.ft.point.standard.Join
{
    ucar.nc2.dataset.StructureDS parentStructure;
    ucar.ma2.ArrayStructure parentData;
    int dimLength;

    public void <init>(ucar.nc2.dataset.StructureDS, int)
    {
        ucar.nc2.dataset.StructureDS r1;
        ucar.ma2.ArrayStructure $r3;
        int i0;
        ucar.nc2.ft.point.standard.JoinMuiltdimStructure r0;
        java.io.IOException $r4;
        ucar.ma2.Array $r2;

        r0 := @this: ucar.nc2.ft.point.standard.JoinMuiltdimStructure;

        r1 := @parameter0: ucar.nc2.dataset.StructureDS;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.ft.point.standard.JoinMuiltdimStructure: ucar.nc2.dataset.StructureDS parentStructure> = r1;

        r0.<ucar.nc2.ft.point.standard.JoinMuiltdimStructure: int dimLength> = i0;

     label1:
        $r2 = virtualinvoke r1.<ucar.nc2.dataset.StructureDS: ucar.ma2.Array read()>();

        $r3 = (ucar.ma2.ArrayStructure) $r2;

        r0.<ucar.nc2.ft.point.standard.JoinMuiltdimStructure: ucar.ma2.ArrayStructure parentData> = $r3;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r4.<java.io.IOException: void printStackTrace()>();

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public ucar.ma2.StructureData getJoinData(ucar.nc2.ft.point.standard.Cursor)
    {
        ucar.ma2.ArrayStructure $r3;
        ucar.ma2.StructureData $r4;
        int[] $r1;
        int $i0, $i1, i2;
        ucar.nc2.ft.point.standard.Cursor r0;
        ucar.nc2.ft.point.standard.JoinMuiltdimStructure r2;

        r2 := @this: ucar.nc2.ft.point.standard.JoinMuiltdimStructure;

        r0 := @parameter0: ucar.nc2.ft.point.standard.Cursor;

        $r1 = r0.<ucar.nc2.ft.point.standard.Cursor: int[] recnum>;

        $i1 = $r1[0];

        $i0 = r2.<ucar.nc2.ft.point.standard.JoinMuiltdimStructure: int dimLength>;

        i2 = $i1 / $i0;

        $r3 = r2.<ucar.nc2.ft.point.standard.JoinMuiltdimStructure: ucar.ma2.ArrayStructure parentData>;

        $r4 = virtualinvoke $r3.<ucar.ma2.ArrayStructure: ucar.ma2.StructureData getStructureData(int)>(i2);

        return $r4;
    }

    public ucar.nc2.dataset.VariableDS findVariable(java.lang.String)
    {
        ucar.nc2.dataset.StructureDS $r2;
        ucar.nc2.dataset.VariableDS $r4;
        ucar.nc2.ft.point.standard.JoinMuiltdimStructure r0;
        ucar.nc2.Variable $r3;
        java.lang.String r1;

        r0 := @this: ucar.nc2.ft.point.standard.JoinMuiltdimStructure;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.nc2.ft.point.standard.JoinMuiltdimStructure: ucar.nc2.dataset.StructureDS parentStructure>;

        $r3 = virtualinvoke $r2.<ucar.nc2.dataset.StructureDS: ucar.nc2.Variable findVariable(java.lang.String)>(r1);

        $r4 = (ucar.nc2.dataset.VariableDS) $r3;

        return $r4;
    }

    public java.lang.String toString()
    {
        ucar.nc2.dataset.StructureDS $r3;
        int $i0;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r6, $r7;
        ucar.nc2.ft.point.standard.JoinMuiltdimStructure r2;
        java.lang.String $r8;

        r2 := @this: ucar.nc2.ft.point.standard.JoinMuiltdimStructure;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JoinMuiltdimStructure{parentStructure=");

        $r3 = r2.<ucar.nc2.ft.point.standard.JoinMuiltdimStructure: ucar.nc2.dataset.StructureDS parentStructure>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", dimLength=\'");

        $i0 = r2.<ucar.nc2.ft.point.standard.JoinMuiltdimStructure: int dimLength>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }
}
