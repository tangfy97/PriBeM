public class org.apache.batik.bridge.BridgeContext$EventListenerMememto extends java.lang.Object
{
    public java.lang.ref.SoftReference target;
    public java.lang.ref.SoftReference listener;
    public boolean useCapture;
    public java.lang.String namespaceURI;
    public java.lang.String eventType;
    public boolean namespaced;

    public void <init>(org.w3c.dom.events.EventTarget, java.lang.String, org.w3c.dom.events.EventListener, boolean, org.apache.batik.bridge.BridgeContext)
    {
        org.apache.batik.bridge.BridgeContext$SoftReferenceMememto $r3, $r5;
        java.util.Set r2;
        org.apache.batik.bridge.BridgeContext r1;
        org.w3c.dom.events.EventTarget r4;
        org.w3c.dom.events.EventListener r6;
        java.lang.String r7;
        org.apache.batik.bridge.BridgeContext$EventListenerMememto r0;
        boolean z0;

        r0 := @this: org.apache.batik.bridge.BridgeContext$EventListenerMememto;

        r4 := @parameter0: org.w3c.dom.events.EventTarget;

        r7 := @parameter1: java.lang.String;

        r6 := @parameter2: org.w3c.dom.events.EventListener;

        z0 := @parameter3: boolean;

        r1 := @parameter4: org.apache.batik.bridge.BridgeContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r2 = r1.<org.apache.batik.bridge.BridgeContext: java.util.Set eventListenerSet>;

        $r3 = new org.apache.batik.bridge.BridgeContext$SoftReferenceMememto;

        specialinvoke $r3.<org.apache.batik.bridge.BridgeContext$SoftReferenceMememto: void <init>(java.lang.Object,java.lang.Object,java.util.Set)>(r4, r0, r2);

        r0.<org.apache.batik.bridge.BridgeContext$EventListenerMememto: java.lang.ref.SoftReference target> = $r3;

        $r5 = new org.apache.batik.bridge.BridgeContext$SoftReferenceMememto;

        specialinvoke $r5.<org.apache.batik.bridge.BridgeContext$SoftReferenceMememto: void <init>(java.lang.Object,java.lang.Object,java.util.Set)>(r6, r0, r2);

        r0.<org.apache.batik.bridge.BridgeContext$EventListenerMememto: java.lang.ref.SoftReference listener> = $r5;

        r0.<org.apache.batik.bridge.BridgeContext$EventListenerMememto: java.lang.String eventType> = r7;

        r0.<org.apache.batik.bridge.BridgeContext$EventListenerMememto: boolean useCapture> = z0;

        return;
    }

    public void <init>(org.w3c.dom.events.EventTarget, java.lang.String, java.lang.String, org.w3c.dom.events.EventListener, boolean, org.apache.batik.bridge.BridgeContext)
    {
        org.w3c.dom.events.EventTarget r1;
        org.w3c.dom.events.EventListener r3;
        org.apache.batik.bridge.BridgeContext r4;
        java.lang.String r2, r5;
        org.apache.batik.bridge.BridgeContext$EventListenerMememto r0;
        boolean z0;

        r0 := @this: org.apache.batik.bridge.BridgeContext$EventListenerMememto;

        r1 := @parameter0: org.w3c.dom.events.EventTarget;

        r5 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: org.w3c.dom.events.EventListener;

        z0 := @parameter4: boolean;

        r4 := @parameter5: org.apache.batik.bridge.BridgeContext;

        specialinvoke r0.<org.apache.batik.bridge.BridgeContext$EventListenerMememto: void <init>(org.w3c.dom.events.EventTarget,java.lang.String,org.w3c.dom.events.EventListener,boolean,org.apache.batik.bridge.BridgeContext)>(r1, r2, r3, z0, r4);

        r0.<org.apache.batik.bridge.BridgeContext$EventListenerMememto: java.lang.String namespaceURI> = r5;

        r0.<org.apache.batik.bridge.BridgeContext$EventListenerMememto: boolean namespaced> = 1;

        return;
    }

    public org.w3c.dom.events.EventListener getListener()
    {
        org.w3c.dom.events.EventListener $r3;
        java.lang.Object $r2;
        java.lang.ref.SoftReference $r1;
        org.apache.batik.bridge.BridgeContext$EventListenerMememto r0;

        r0 := @this: org.apache.batik.bridge.BridgeContext$EventListenerMememto;

        $r1 = r0.<org.apache.batik.bridge.BridgeContext$EventListenerMememto: java.lang.ref.SoftReference listener>;

        $r2 = virtualinvoke $r1.<java.lang.ref.SoftReference: java.lang.Object get()>();

        $r3 = (org.w3c.dom.events.EventListener) $r2;

        return $r3;
    }

    public org.apache.batik.dom.events.NodeEventTarget getTarget()
    {
        java.lang.Object $r2;
        java.lang.ref.SoftReference $r1;
        org.apache.batik.bridge.BridgeContext$EventListenerMememto r0;
        org.apache.batik.dom.events.NodeEventTarget $r3;

        r0 := @this: org.apache.batik.bridge.BridgeContext$EventListenerMememto;

        $r1 = r0.<org.apache.batik.bridge.BridgeContext$EventListenerMememto: java.lang.ref.SoftReference target>;

        $r2 = virtualinvoke $r1.<java.lang.ref.SoftReference: java.lang.Object get()>();

        $r3 = (org.apache.batik.dom.events.NodeEventTarget) $r2;

        return $r3;
    }

    public boolean getUseCapture()
    {
        org.apache.batik.bridge.BridgeContext$EventListenerMememto r0;
        boolean $z0;

        r0 := @this: org.apache.batik.bridge.BridgeContext$EventListenerMememto;

        $z0 = r0.<org.apache.batik.bridge.BridgeContext$EventListenerMememto: boolean useCapture>;

        return $z0;
    }

    public java.lang.String getNamespaceURI()
    {
        java.lang.String $r1;
        org.apache.batik.bridge.BridgeContext$EventListenerMememto r0;

        r0 := @this: org.apache.batik.bridge.BridgeContext$EventListenerMememto;

        $r1 = r0.<org.apache.batik.bridge.BridgeContext$EventListenerMememto: java.lang.String namespaceURI>;

        return $r1;
    }

    public java.lang.String getEventType()
    {
        java.lang.String $r1;
        org.apache.batik.bridge.BridgeContext$EventListenerMememto r0;

        r0 := @this: org.apache.batik.bridge.BridgeContext$EventListenerMememto;

        $r1 = r0.<org.apache.batik.bridge.BridgeContext$EventListenerMememto: java.lang.String eventType>;

        return $r1;
    }

    public boolean getNamespaced()
    {
        org.apache.batik.bridge.BridgeContext$EventListenerMememto r0;
        boolean $z0;

        r0 := @this: org.apache.batik.bridge.BridgeContext$EventListenerMememto;

        $z0 = r0.<org.apache.batik.bridge.BridgeContext$EventListenerMememto: boolean namespaced>;

        return $z0;
    }
}
