public class com.jidesoft.plaf.basic.BasicJideButtonUI extends com.jidesoft.plaf.JideButtonUI
{
    protected int defaultTextIconGap;
    private int shiftOffset;
    protected int defaultTextShiftOffset;
    private boolean defaults_initialized;
    private static final java.lang.String propertyPrefix;
    protected com.jidesoft.plaf.basic.ThemePainter _painter;
    protected java.awt.Color _shadowColor;
    protected java.awt.Color _darkShadowColor;
    protected java.awt.Color _highlight;
    protected java.awt.Color _lightHighlightColor;
    protected java.awt.Color _focusColor;
    protected boolean _isFloatingIcon;
    protected static java.awt.Rectangle viewRect;
    protected static java.awt.Rectangle textRect;
    protected static java.awt.Rectangle iconRect;

    public void <init>()
    {
        com.jidesoft.plaf.basic.BasicJideButtonUI r0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideButtonUI;

        specialinvoke r0.<com.jidesoft.plaf.JideButtonUI: void <init>()>();

        r0.<com.jidesoft.plaf.basic.BasicJideButtonUI: int shiftOffset> = 0;

        r0.<com.jidesoft.plaf.basic.BasicJideButtonUI: boolean defaults_initialized> = 0;

        r0.<com.jidesoft.plaf.basic.BasicJideButtonUI: boolean _isFloatingIcon> = 0;

        return;
    }

    public static javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        com.jidesoft.plaf.basic.BasicJideButtonUI $r0;

        r1 := @parameter0: javax.swing.JComponent;

        $r0 = new com.jidesoft.plaf.basic.BasicJideButtonUI;

        specialinvoke $r0.<com.jidesoft.plaf.basic.BasicJideButtonUI: void <init>()>();

        return $r0;
    }

    protected java.lang.String getPropertyPrefix()
    {
        com.jidesoft.plaf.basic.BasicJideButtonUI r0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideButtonUI;

        return "JideButton.";
    }

    public void installUI(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        com.jidesoft.plaf.basic.BasicJideButtonUI r0;
        javax.swing.AbstractButton $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideButtonUI;

        r1 := @parameter0: javax.swing.JComponent;

        $r2 = (javax.swing.AbstractButton) r1;

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideButtonUI: void installDefaults(javax.swing.AbstractButton)>($r2);

        $r3 = (javax.swing.AbstractButton) r1;

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideButtonUI: void installListeners(javax.swing.AbstractButton)>($r3);

        $r4 = (javax.swing.AbstractButton) r1;

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideButtonUI: void installKeyboardActions(javax.swing.AbstractButton)>($r4);

        $r5 = (javax.swing.AbstractButton) r1;

        $r6 = virtualinvoke $r5.<javax.swing.AbstractButton: java.lang.String getText()>();

        staticinvoke <javax.swing.plaf.basic.BasicHTML: void updateRenderer(javax.swing.JComponent,java.lang.String)>(r1, $r6);

        return;
    }

    protected void installDefaults(javax.swing.AbstractButton)
    {
        java.awt.Color $r29, $r30, $r31, $r32, $r33;
        com.jidesoft.plaf.basic.ThemePainter $r34;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r5, $r6, $r7, $r9, $r10, $r11, $r13, $r14, $r15, $r17, $r18, $r19, $r21, $r22, $r23, $r25, $r26, $r27;
        int $i0, $i1;
        com.jidesoft.plaf.basic.BasicJideButtonUI r1;
        java.lang.String $r3, $r8, $r12, $r16, $r20, $r24, $r28;
        javax.swing.AbstractButton r4;
        com.jidesoft.plaf.basic.BasicPainter $r2;
        java.lang.Object $r0;

        r1 := @this: com.jidesoft.plaf.basic.BasicJideButtonUI;

        r4 := @parameter0: javax.swing.AbstractButton;

        $r0 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("Theme.painter");

        $z0 = $r0 instanceof com.jidesoft.plaf.basic.ThemePainter;

        if $z0 == 0 goto label1;

        $r34 = (com.jidesoft.plaf.basic.ThemePainter) $r0;

        r1.<com.jidesoft.plaf.basic.BasicJideButtonUI: com.jidesoft.plaf.basic.ThemePainter _painter> = $r34;

        goto label2;

     label1:
        $r2 = new com.jidesoft.plaf.basic.BasicPainter;

        specialinvoke $r2.<com.jidesoft.plaf.basic.BasicPainter: void <init>()>();

        r1.<com.jidesoft.plaf.basic.BasicJideButtonUI: com.jidesoft.plaf.basic.ThemePainter _painter> = $r2;

     label2:
        $r3 = virtualinvoke r1.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.lang.String getPropertyPrefix()>();

        $z1 = r1.<com.jidesoft.plaf.basic.BasicJideButtonUI: boolean defaults_initialized>;

        if $z1 != 0 goto label3;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("textIconGap");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>($r24);

        r1.<com.jidesoft.plaf.basic.BasicJideButtonUI: int defaultTextIconGap> = $i0;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("textShiftOffset");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>($r28);

        r1.<com.jidesoft.plaf.basic.BasicJideButtonUI: int defaultTextShiftOffset> = $i1;

        $r29 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("Button.focus");

        r1.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _focusColor> = $r29;

        $r30 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("JideButton.shadow");

        r1.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _shadowColor> = $r30;

        $r31 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("JideButton.darkShadow");

        r1.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _darkShadowColor> = $r31;

        $r32 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("JideButton.highlight");

        r1.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _highlight> = $r32;

        $r33 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("JideButton.light");

        r1.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _lightHighlightColor> = $r33;

        r1.<com.jidesoft.plaf.basic.BasicJideButtonUI: boolean defaults_initialized> = 1;

     label3:
        virtualinvoke r1.<com.jidesoft.plaf.basic.BasicJideButtonUI: void updateMargin(javax.swing.AbstractButton)>(r4);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("background");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("foreground");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("font");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.swing.LookAndFeel: void installColorsAndFont(javax.swing.JComponent,java.lang.String,java.lang.String,java.lang.String)>(r4, $r8, $r12, $r16);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("border");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.swing.LookAndFeel: void installBorder(javax.swing.JComponent,java.lang.String)>(r4, $r20);

        $z2 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: boolean getBoolean(java.lang.Object)>("Icon.floating");

        r1.<com.jidesoft.plaf.basic.BasicJideButtonUI: boolean _isFloatingIcon> = $z2;

        return;
    }

    protected void installListeners(javax.swing.AbstractButton)
    {
        com.jidesoft.plaf.basic.BasicJideButtonUI r0;
        javax.swing.AbstractButton r1;
        javax.swing.plaf.basic.BasicButtonListener $r2;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideButtonUI;

        r1 := @parameter0: javax.swing.AbstractButton;

        $r2 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideButtonUI: javax.swing.plaf.basic.BasicButtonListener createButtonListener(javax.swing.AbstractButton)>(r1);

        if $r2 == null goto label1;

        virtualinvoke r1.<javax.swing.AbstractButton: void putClientProperty(java.lang.Object,java.lang.Object)>(r0, $r2);

        virtualinvoke r1.<javax.swing.AbstractButton: void addMouseListener(java.awt.event.MouseListener)>($r2);

        virtualinvoke r1.<javax.swing.AbstractButton: void addMouseMotionListener(java.awt.event.MouseMotionListener)>($r2);

        virtualinvoke r1.<javax.swing.AbstractButton: void addFocusListener(java.awt.event.FocusListener)>($r2);

        virtualinvoke r1.<javax.swing.AbstractButton: void addPropertyChangeListener(java.beans.PropertyChangeListener)>($r2);

        virtualinvoke r1.<javax.swing.AbstractButton: void addChangeListener(javax.swing.event.ChangeListener)>($r2);

     label1:
        return;
    }

    protected void installKeyboardActions(javax.swing.AbstractButton)
    {
        javax.swing.plaf.basic.BasicButtonListener r3;
        com.jidesoft.plaf.basic.BasicJideButtonUI r1;
        java.lang.Object $r2;
        javax.swing.AbstractButton r0;

        r1 := @this: com.jidesoft.plaf.basic.BasicJideButtonUI;

        r0 := @parameter0: javax.swing.AbstractButton;

        $r2 = virtualinvoke r0.<javax.swing.AbstractButton: java.lang.Object getClientProperty(java.lang.Object)>(r1);

        r3 = (javax.swing.plaf.basic.BasicButtonListener) $r2;

        if r3 == null goto label1;

        virtualinvoke r3.<javax.swing.plaf.basic.BasicButtonListener: void installKeyboardActions(javax.swing.JComponent)>(r0);

     label1:
        return;
    }

    public void uninstallUI(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        com.jidesoft.plaf.basic.BasicJideButtonUI r0;
        javax.swing.AbstractButton $r2, $r3, $r4;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideButtonUI;

        r1 := @parameter0: javax.swing.JComponent;

        $r2 = (javax.swing.AbstractButton) r1;

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideButtonUI: void uninstallKeyboardActions(javax.swing.AbstractButton)>($r2);

        $r3 = (javax.swing.AbstractButton) r1;

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideButtonUI: void uninstallListeners(javax.swing.AbstractButton)>($r3);

        $r4 = (javax.swing.AbstractButton) r1;

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideButtonUI: void uninstallDefaults(javax.swing.AbstractButton)>($r4);

        staticinvoke <javax.swing.plaf.basic.BasicHTML: void updateRenderer(javax.swing.JComponent,java.lang.String)>(r1, "");

        return;
    }

    protected void uninstallKeyboardActions(javax.swing.AbstractButton)
    {
        javax.swing.plaf.basic.BasicButtonListener r3;
        com.jidesoft.plaf.basic.BasicJideButtonUI r1;
        java.lang.Object $r2;
        javax.swing.AbstractButton r0;

        r1 := @this: com.jidesoft.plaf.basic.BasicJideButtonUI;

        r0 := @parameter0: javax.swing.AbstractButton;

        $r2 = virtualinvoke r0.<javax.swing.AbstractButton: java.lang.Object getClientProperty(java.lang.Object)>(r1);

        r3 = (javax.swing.plaf.basic.BasicButtonListener) $r2;

        if r3 == null goto label1;

        virtualinvoke r3.<javax.swing.plaf.basic.BasicButtonListener: void uninstallKeyboardActions(javax.swing.JComponent)>(r0);

     label1:
        return;
    }

    protected void uninstallListeners(javax.swing.AbstractButton)
    {
        javax.swing.plaf.basic.BasicButtonListener r3;
        com.jidesoft.plaf.basic.BasicJideButtonUI r1;
        java.lang.Object $r2;
        javax.swing.AbstractButton r0;

        r1 := @this: com.jidesoft.plaf.basic.BasicJideButtonUI;

        r0 := @parameter0: javax.swing.AbstractButton;

        $r2 = virtualinvoke r0.<javax.swing.AbstractButton: java.lang.Object getClientProperty(java.lang.Object)>(r1);

        r3 = (javax.swing.plaf.basic.BasicButtonListener) $r2;

        virtualinvoke r0.<javax.swing.AbstractButton: void putClientProperty(java.lang.Object,java.lang.Object)>(r1, null);

        if r3 == null goto label1;

        virtualinvoke r0.<javax.swing.AbstractButton: void removeMouseListener(java.awt.event.MouseListener)>(r3);

        virtualinvoke r0.<javax.swing.AbstractButton: void removeMouseMotionListener(java.awt.event.MouseMotionListener)>(r3);

        virtualinvoke r0.<javax.swing.AbstractButton: void removeFocusListener(java.awt.event.FocusListener)>(r3);

        virtualinvoke r0.<javax.swing.AbstractButton: void removeChangeListener(javax.swing.event.ChangeListener)>(r3);

        virtualinvoke r0.<javax.swing.AbstractButton: void removePropertyChangeListener(java.beans.PropertyChangeListener)>(r3);

     label1:
        return;
    }

    protected void uninstallDefaults(javax.swing.AbstractButton)
    {
        com.jidesoft.plaf.basic.BasicJideButtonUI r0;
        javax.swing.AbstractButton r1;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideButtonUI;

        r1 := @parameter0: javax.swing.AbstractButton;

        r0.<com.jidesoft.plaf.basic.BasicJideButtonUI: com.jidesoft.plaf.basic.ThemePainter _painter> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _focusColor> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _shadowColor> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _highlight> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _lightHighlightColor> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _darkShadowColor> = null;

        r0.<com.jidesoft.plaf.basic.BasicJideButtonUI: boolean defaults_initialized> = 0;

        return;
    }

    protected javax.swing.plaf.basic.BasicButtonListener createButtonListener(javax.swing.AbstractButton)
    {
        com.jidesoft.plaf.basic.BasicJideButtonUI r2;
        javax.swing.AbstractButton r1;
        com.jidesoft.plaf.basic.BasicJideButtonListener $r0;

        r2 := @this: com.jidesoft.plaf.basic.BasicJideButtonUI;

        r1 := @parameter0: javax.swing.AbstractButton;

        $r0 = new com.jidesoft.plaf.basic.BasicJideButtonListener;

        specialinvoke $r0.<com.jidesoft.plaf.basic.BasicJideButtonListener: void <init>(javax.swing.AbstractButton)>(r1);

        return $r0;
    }

    public int getDefaultTextIconGap(javax.swing.AbstractButton)
    {
        int $i0;
        com.jidesoft.plaf.basic.BasicJideButtonUI r0;
        javax.swing.AbstractButton r1;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideButtonUI;

        r1 := @parameter0: javax.swing.AbstractButton;

        $i0 = r0.<com.jidesoft.plaf.basic.BasicJideButtonUI: int defaultTextIconGap>;

        return $i0;
    }

    protected java.awt.Color getFocusColor()
    {
        java.awt.Color $r1;
        com.jidesoft.plaf.basic.BasicJideButtonUI r0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideButtonUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _focusColor>;

        return $r1;
    }

    public void paint(java.awt.Graphics, javax.swing.JComponent)
    {
        boolean $z0, $z1, $z2, $z3, z4;
        java.awt.Font $r20;
        javax.swing.Icon $r22;
        java.awt.Graphics r2;
        javax.swing.text.View r30;
        java.awt.Rectangle $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r23, $r24, $r25, $r31, $r32, $r33, $r34;
        java.awt.Insets $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        java.lang.Boolean $r28;
        com.jidesoft.plaf.basic.BasicJideButtonUI r19;
        javax.swing.AbstractButton r1;
        java.lang.String $r21, $r26, $r27;
        javax.swing.JComponent r0;
        java.awt.FontMetrics $r3;
        java.lang.Object $r29;

        r19 := @this: com.jidesoft.plaf.basic.BasicJideButtonUI;

        r2 := @parameter0: java.awt.Graphics;

        r0 := @parameter1: javax.swing.JComponent;

        r1 = (javax.swing.AbstractButton) r0;

        z4 = 1;

        $i0 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: int getOrientationOf(java.awt.Component)>(r0);

        if $i0 != 1 goto label1;

        z4 = 0;

     label1:
        $r3 = virtualinvoke r2.<java.awt.Graphics: java.awt.FontMetrics getFontMetrics()>();

        $r4 = virtualinvoke r0.<javax.swing.JComponent: java.awt.Insets getInsets()>();

        $r5 = <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle viewRect>;

        $i1 = $r4.<java.awt.Insets: int left>;

        $r5.<java.awt.Rectangle: int x> = $i1;

        $r6 = <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle viewRect>;

        $i2 = $r4.<java.awt.Insets: int top>;

        $r6.<java.awt.Rectangle: int y> = $i2;

        $r7 = <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle viewRect>;

        $i3 = virtualinvoke r1.<javax.swing.AbstractButton: int getWidth()>();

        $i5 = $r4.<java.awt.Insets: int right>;

        $r8 = <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle viewRect>;

        $i4 = $r8.<java.awt.Rectangle: int x>;

        $i6 = $i5 + $i4;

        $i7 = $i3 - $i6;

        $r7.<java.awt.Rectangle: int width> = $i7;

        $r9 = <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle viewRect>;

        $i8 = virtualinvoke r1.<javax.swing.AbstractButton: int getHeight()>();

        $i10 = $r4.<java.awt.Insets: int bottom>;

        $r10 = <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle viewRect>;

        $i9 = $r10.<java.awt.Rectangle: int y>;

        $i11 = $i10 + $i9;

        $i12 = $i8 - $i11;

        $r9.<java.awt.Rectangle: int height> = $i12;

        $r12 = <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle textRect>;

        $r13 = <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle textRect>;

        $r14 = <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle textRect>;

        $r11 = <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle textRect>;

        $r11.<java.awt.Rectangle: int height> = 0;

        $r14.<java.awt.Rectangle: int width> = 0;

        $r13.<java.awt.Rectangle: int y> = 0;

        $r12.<java.awt.Rectangle: int x> = 0;

        $r16 = <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle iconRect>;

        $r17 = <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle iconRect>;

        $r18 = <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle iconRect>;

        $r15 = <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle iconRect>;

        $r15.<java.awt.Rectangle: int height> = 0;

        $r18.<java.awt.Rectangle: int width> = 0;

        $r17.<java.awt.Rectangle: int y> = 0;

        $r16.<java.awt.Rectangle: int x> = 0;

        virtualinvoke r19.<com.jidesoft.plaf.basic.BasicJideButtonUI: void paintBackground(java.awt.Graphics,javax.swing.AbstractButton)>(r2, r1);

        $r20 = virtualinvoke r0.<javax.swing.JComponent: java.awt.Font getFont()>();

        virtualinvoke r2.<java.awt.Graphics: void setFont(java.awt.Font)>($r20);

        $r21 = virtualinvoke r1.<javax.swing.AbstractButton: java.lang.String getText()>();

        $r22 = virtualinvoke r1.<javax.swing.AbstractButton: javax.swing.Icon getIcon()>();

        $z3 = z4;

        $i13 = virtualinvoke r1.<javax.swing.AbstractButton: int getVerticalAlignment()>();

        $i14 = virtualinvoke r1.<javax.swing.AbstractButton: int getHorizontalAlignment()>();

        $i15 = virtualinvoke r1.<javax.swing.AbstractButton: int getVerticalTextPosition()>();

        $i16 = virtualinvoke r1.<javax.swing.AbstractButton: int getHorizontalTextPosition()>();

        $r23 = <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle viewRect>;

        $r24 = <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle iconRect>;

        $r25 = <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle textRect>;

        $r26 = virtualinvoke r1.<javax.swing.AbstractButton: java.lang.String getText()>();

        if $r26 != null goto label2;

        $i22 = 0;

        goto label3;

     label2:
        $i22 = virtualinvoke r1.<javax.swing.AbstractButton: int getIconTextGap()>();

     label3:
        $r27 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: java.lang.String layoutCompoundLabel(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String,javax.swing.Icon,boolean,int,int,int,int,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,int)>(r0, $r3, $r21, $r22, $z3, $i13, $i14, $i15, $i16, $r23, $r24, $r25, $i22);

        virtualinvoke r19.<com.jidesoft.plaf.basic.BasicJideButtonUI: void clearTextShiftOffset()>();

        virtualinvoke r19.<com.jidesoft.plaf.basic.BasicJideButtonUI: void paintIcon(javax.swing.AbstractButton,java.awt.Graphics)>(r1, r2);

        $z0 = staticinvoke <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>("Theme.highContrast");

        $r28 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z1 = virtualinvoke $r28.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label4;

        $i17 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: int getButtonState(javax.swing.AbstractButton)>(r1);

        if $i17 != 1 goto label4;

        $r33 = <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle textRect>;

        $i18 = $r33.<java.awt.Rectangle: int x>;

        $i19 = $i18 + 1;

        $r33.<java.awt.Rectangle: int x> = $i19;

        $r34 = <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle textRect>;

        $i20 = $r34.<java.awt.Rectangle: int y>;

        $i21 = $i20 + 1;

        $r34.<java.awt.Rectangle: int y> = $i21;

     label4:
        if $r27 == null goto label6;

        $z2 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z2 != 0 goto label6;

        $r29 = virtualinvoke r0.<javax.swing.JComponent: java.lang.Object getClientProperty(java.lang.Object)>("html");

        r30 = (javax.swing.text.View) $r29;

        if r30 == null goto label5;

        $r32 = <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle textRect>;

        virtualinvoke r30.<javax.swing.text.View: void paint(java.awt.Graphics,java.awt.Shape)>(r2, $r32);

        goto label6;

     label5:
        $r31 = <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle textRect>;

        virtualinvoke r19.<com.jidesoft.plaf.basic.BasicJideButtonUI: void paintText(java.awt.Graphics,javax.swing.AbstractButton,java.awt.Rectangle,java.lang.String)>(r2, r1, $r31, $r27);

     label6:
        return;
    }

    protected void paintIcon(javax.swing.AbstractButton, java.awt.Graphics)
    {
        com.jidesoft.swing.JideButton $r10;
        javax.swing.ButtonModel $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.awt.Image $r17;
        javax.swing.Icon $r1, $r3;
        java.awt.Graphics r5;
        java.awt.Rectangle $r6, $r7, $r12, $r13, $r14, $r15, $r19, $r20, $r21, $r22, $r23, $r24;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        javax.swing.ImageIcon $r11, $r16, $r18;
        com.jidesoft.plaf.basic.BasicJideButtonUI r2;
        javax.swing.AbstractButton r0;
        java.lang.String $r8, $r9;

        r2 := @this: com.jidesoft.plaf.basic.BasicJideButtonUI;

        r0 := @parameter0: javax.swing.AbstractButton;

        r5 := @parameter1: java.awt.Graphics;

        $r1 = virtualinvoke r0.<javax.swing.AbstractButton: javax.swing.Icon getIcon()>();

        if $r1 == null goto label6;

        $r3 = virtualinvoke r2.<com.jidesoft.plaf.basic.BasicJideButtonUI: javax.swing.Icon getIcon(javax.swing.AbstractButton)>(r0);

        $r4 = virtualinvoke r0.<javax.swing.AbstractButton: javax.swing.ButtonModel getModel()>();

        if $r3 == null goto label6;

        $z0 = virtualinvoke r2.<com.jidesoft.plaf.basic.BasicJideButtonUI: boolean isFloatingIcon()>();

        if $z0 == 0 goto label5;

        $z1 = interfaceinvoke $r4.<javax.swing.ButtonModel: boolean isEnabled()>();

        if $z1 == 0 goto label5;

        $z2 = interfaceinvoke $r4.<javax.swing.ButtonModel: boolean isRollover()>();

        if $z2 == 0 goto label4;

        $z3 = interfaceinvoke $r4.<javax.swing.ButtonModel: boolean isPressed()>();

        if $z3 != 0 goto label4;

        $z4 = interfaceinvoke $r4.<javax.swing.ButtonModel: boolean isSelected()>();

        if $z4 != 0 goto label4;

        $r8 = "true";

        $r9 = staticinvoke <com.jidesoft.utils.SecurityUtils: java.lang.String getProperty(java.lang.String,java.lang.String)>("shadingtheme", "false");

        $z5 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z5 != 0 goto label3;

        $z6 = r0 instanceof com.jidesoft.swing.JideButton;

        if $z6 == 0 goto label3;

        $r10 = (com.jidesoft.swing.JideButton) r0;

        $i2 = virtualinvoke $r10.<com.jidesoft.swing.JideButton: int getButtonStyle()>();

        if $i2 != 0 goto label3;

        $z7 = $r3 instanceof javax.swing.ImageIcon;

        if $z7 == 0 goto label1;

        $r16 = (javax.swing.ImageIcon) $r3;

        $r17 = virtualinvoke $r16.<javax.swing.ImageIcon: java.awt.Image getImage()>();

        $r18 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon createGrayImage(java.awt.Image)>($r17);

        $r19 = <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle iconRect>;

        $i11 = $r19.<java.awt.Rectangle: int x>;

        $i14 = $i11 + 1;

        $r20 = <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle iconRect>;

        $i12 = $r20.<java.awt.Rectangle: int y>;

        $i13 = $i12 + 1;

        virtualinvoke $r18.<javax.swing.ImageIcon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>(r0, r5, $i14, $i13);

        goto label2;

     label1:
        $r11 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon createGrayImage(java.awt.Component,javax.swing.Icon)>(r0, $r3);

        $r12 = <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle iconRect>;

        $i3 = $r12.<java.awt.Rectangle: int x>;

        $i6 = $i3 + 1;

        $r13 = <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle iconRect>;

        $i4 = $r13.<java.awt.Rectangle: int y>;

        $i5 = $i4 + 1;

        virtualinvoke $r11.<javax.swing.ImageIcon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>(r0, r5, $i6, $i5);

     label2:
        $r14 = <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle iconRect>;

        $i7 = $r14.<java.awt.Rectangle: int x>;

        $i10 = $i7 - 1;

        $r15 = <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle iconRect>;

        $i8 = $r15.<java.awt.Rectangle: int y>;

        $i9 = $i8 - 1;

        interfaceinvoke $r3.<javax.swing.Icon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>(r0, r5, $i10, $i9);

        goto label6;

     label3:
        $r21 = <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle iconRect>;

        $i15 = $r21.<java.awt.Rectangle: int x>;

        $r22 = <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle iconRect>;

        $i16 = $r22.<java.awt.Rectangle: int y>;

        interfaceinvoke $r3.<javax.swing.Icon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>(r0, r5, $i15, $i16);

        goto label6;

     label4:
        $r23 = <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle iconRect>;

        $i17 = $r23.<java.awt.Rectangle: int x>;

        $r24 = <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle iconRect>;

        $i18 = $r24.<java.awt.Rectangle: int y>;

        interfaceinvoke $r3.<javax.swing.Icon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>(r0, r5, $i17, $i18);

        goto label6;

     label5:
        $r6 = <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle iconRect>;

        $i1 = $r6.<java.awt.Rectangle: int x>;

        $r7 = <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle iconRect>;

        $i0 = $r7.<java.awt.Rectangle: int y>;

        interfaceinvoke $r3.<javax.swing.Icon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>(r0, r5, $i1, $i0);

     label6:
        return;
    }

    protected javax.swing.Icon getIcon(javax.swing.AbstractButton)
    {
        javax.swing.ImageIcon $r5;
        com.jidesoft.plaf.basic.BasicJideButtonUI r4;
        javax.swing.AbstractButton r0;
        javax.swing.ButtonModel $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.awt.Image $r6;
        javax.swing.Icon $r2, $r3, r7, r8;

        r4 := @this: com.jidesoft.plaf.basic.BasicJideButtonUI;

        r0 := @parameter0: javax.swing.AbstractButton;

        $r1 = virtualinvoke r0.<javax.swing.AbstractButton: javax.swing.ButtonModel getModel()>();

        $r2 = virtualinvoke r0.<javax.swing.AbstractButton: javax.swing.Icon getIcon()>();

        r7 = $r2;

        r8 = null;

        $z0 = interfaceinvoke $r1.<javax.swing.ButtonModel: boolean isEnabled()>();

        if $z0 != 0 goto label4;

        $z7 = interfaceinvoke $r1.<javax.swing.ButtonModel: boolean isSelected()>();

        if $z7 == 0 goto label1;

        r8 = virtualinvoke r0.<javax.swing.AbstractButton: javax.swing.Icon getDisabledSelectedIcon()>();

        goto label2;

     label1:
        r8 = virtualinvoke r0.<javax.swing.AbstractButton: javax.swing.Icon getDisabledIcon()>();

     label2:
        if r8 != null goto label8;

        $z8 = $r2 instanceof javax.swing.ImageIcon;

        if $z8 == 0 goto label3;

        $r5 = (javax.swing.ImageIcon) $r2;

        $r6 = virtualinvoke $r5.<javax.swing.ImageIcon: java.awt.Image getImage()>();

        r7 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon createGrayImage(java.awt.Image)>($r6);

        goto label8;

     label3:
        r7 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon createGrayImage(java.awt.Component,javax.swing.Icon)>(r0, $r2);

        goto label8;

     label4:
        $z1 = interfaceinvoke $r1.<javax.swing.ButtonModel: boolean isPressed()>();

        if $z1 == 0 goto label5;

        $z6 = interfaceinvoke $r1.<javax.swing.ButtonModel: boolean isArmed()>();

        if $z6 == 0 goto label5;

        $r3 = virtualinvoke r0.<javax.swing.AbstractButton: javax.swing.Icon getPressedIcon()>();

        r8 = $r3;

        if $r3 == null goto label8;

        virtualinvoke r4.<com.jidesoft.plaf.basic.BasicJideButtonUI: void clearTextShiftOffset()>();

        goto label8;

     label5:
        $z2 = virtualinvoke r0.<javax.swing.AbstractButton: boolean isRolloverEnabled()>();

        if $z2 == 0 goto label7;

        $z4 = interfaceinvoke $r1.<javax.swing.ButtonModel: boolean isRollover()>();

        if $z4 == 0 goto label7;

        $z5 = interfaceinvoke $r1.<javax.swing.ButtonModel: boolean isSelected()>();

        if $z5 == 0 goto label6;

        r8 = virtualinvoke r0.<javax.swing.AbstractButton: javax.swing.Icon getRolloverSelectedIcon()>();

        goto label8;

     label6:
        r8 = virtualinvoke r0.<javax.swing.AbstractButton: javax.swing.Icon getRolloverIcon()>();

        goto label8;

     label7:
        $z3 = interfaceinvoke $r1.<javax.swing.ButtonModel: boolean isSelected()>();

        if $z3 == 0 goto label8;

        r8 = virtualinvoke r0.<javax.swing.AbstractButton: javax.swing.Icon getSelectedIcon()>();

     label8:
        if r8 == null goto label9;

        r7 = r8;

     label9:
        return r7;
    }

    protected boolean isFloatingIcon()
    {
        com.jidesoft.plaf.basic.BasicJideButtonUI r0;
        boolean $z0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideButtonUI;

        $z0 = r0.<com.jidesoft.plaf.basic.BasicJideButtonUI: boolean _isFloatingIcon>;

        return $z0;
    }

    protected void paintText(java.awt.Graphics, javax.swing.JComponent, java.awt.Rectangle, java.lang.String)
    {
        java.awt.Color $r5, $r6, $r12, $r14, $r16, $r20, $r21, $r23, $r24;
        javax.swing.ButtonModel $r2, $r11, $r19;
        javax.swing.AbstractButton r1;
        java.lang.String r7;
        java.awt.FontMetrics $r4;
        com.jidesoft.swing.JideButton $r9, $r10, $r17, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, $z7, $z8;
        java.awt.Graphics r3, $r15;
        java.awt.Rectangle r8;
        java.awt.Graphics2D r22;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48;
        com.jidesoft.plaf.basic.BasicJideButtonUI r13;
        javax.swing.JComponent r0;

        r13 := @this: com.jidesoft.plaf.basic.BasicJideButtonUI;

        r3 := @parameter0: java.awt.Graphics;

        r0 := @parameter1: javax.swing.JComponent;

        r8 := @parameter2: java.awt.Rectangle;

        r7 := @parameter3: java.lang.String;

        r1 = (javax.swing.AbstractButton) r0;

        z6 = 1;

        $i0 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: int getOrientationOf(java.awt.Component)>(r0);

        if $i0 != 1 goto label01;

        z6 = 0;

     label01:
        $r2 = virtualinvoke r1.<javax.swing.AbstractButton: javax.swing.ButtonModel getModel()>();

        $r4 = virtualinvoke r3.<java.awt.Graphics: java.awt.FontMetrics getFontMetrics()>();

        $i1 = virtualinvoke r1.<javax.swing.AbstractButton: int getDisplayedMnemonicIndex()>();

        if z6 != 0 goto label08;

        $r15 = virtualinvoke r3.<java.awt.Graphics: java.awt.Graphics create()>();

        r22 = (java.awt.Graphics2D) $r15;

        virtualinvoke r22.<java.awt.Graphics2D: void rotate(double)>(1.5707963267948966);

        $i27 = virtualinvoke r0.<javax.swing.JComponent: int getWidth()>();

        $i28 = neg $i27;

        $i29 = $i28 + 1;

        virtualinvoke r22.<java.awt.Graphics2D: void translate(int,int)>(0, $i29);

        $z3 = interfaceinvoke $r2.<javax.swing.ButtonModel: boolean isEnabled()>();

        if $z3 == 0 goto label02;

        $r21 = virtualinvoke r13.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color getForegroundOfState(javax.swing.AbstractButton)>(r1);

        virtualinvoke r22.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r21);

        $i41 = r8.<java.awt.Rectangle: int y>;

        $i42 = virtualinvoke r13.<com.jidesoft.plaf.basic.BasicJideButtonUI: int getTextShiftOffset()>();

        $i43 = $i41 + $i42;

        $i44 = r8.<java.awt.Rectangle: int x>;

        $i45 = virtualinvoke $r4.<java.awt.FontMetrics: int getAscent()>();

        $i46 = $i44 + $i45;

        $i47 = virtualinvoke r13.<com.jidesoft.plaf.basic.BasicJideButtonUI: int getTextShiftOffset()>();

        $i48 = $i46 + $i47;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void drawStringUnderlineCharAt(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int,int)>(r1, r22, r7, $i1, $i43, $i48);

        goto label05;

     label02:
        $r16 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("Button.disabledForeground");

        if $r16 != null goto label03;

        $r20 = virtualinvoke r1.<javax.swing.AbstractButton: java.awt.Color getBackground()>();

        $r23 = virtualinvoke $r20.<java.awt.Color: java.awt.Color darker()>();

        goto label04;

     label03:
        $r23 = $r16;

     label04:
        virtualinvoke r22.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r23);

        $i30 = r8.<java.awt.Rectangle: int y>;

        $i31 = r8.<java.awt.Rectangle: int x>;

        $i32 = virtualinvoke $r4.<java.awt.FontMetrics: int getAscent()>();

        $i33 = $i31 + $i32;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void drawStringUnderlineCharAt(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int,int)>(r1, r22, r7, $i1, $i30, $i33);

     label05:
        $z7 = r1 instanceof com.jidesoft.swing.JideButton;

        if $z7 == 0 goto label07;

        $r17 = (com.jidesoft.swing.JideButton) r1;

        $i34 = virtualinvoke $r17.<com.jidesoft.swing.JideButton: int getButtonStyle()>();

        if $i34 != 3 goto label07;

        $r18 = (com.jidesoft.swing.JideButton) r1;

        $z4 = virtualinvoke $r18.<com.jidesoft.swing.JideButton: boolean isAlwaysShowHyperlink()>();

        if $z4 != 0 goto label06;

        $r19 = virtualinvoke r1.<javax.swing.AbstractButton: javax.swing.ButtonModel getModel()>();

        $z5 = interfaceinvoke $r19.<javax.swing.ButtonModel: boolean isRollover()>();

        if $z5 == 0 goto label07;

     label06:
        $i40 = r8.<java.awt.Rectangle: int x>;

        $i39 = r8.<java.awt.Rectangle: int y>;

        $i38 = r8.<java.awt.Rectangle: int x>;

        $i36 = r8.<java.awt.Rectangle: int y>;

        $i35 = r8.<java.awt.Rectangle: int height>;

        $i37 = $i36 + $i35;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i40, $i39, $i38, $i37);

     label07:
        virtualinvoke r22.<java.awt.Graphics2D: void dispose()>();

        goto label15;

     label08:
        $r5 = virtualinvoke r3.<java.awt.Graphics: java.awt.Color getColor()>();

        $z0 = interfaceinvoke $r2.<javax.swing.ButtonModel: boolean isEnabled()>();

        if $z0 == 0 goto label09;

        $r14 = virtualinvoke r13.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color getForegroundOfState(javax.swing.AbstractButton)>(r1);

        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r14);

        $i19 = r8.<java.awt.Rectangle: int x>;

        $i20 = virtualinvoke r13.<com.jidesoft.plaf.basic.BasicJideButtonUI: int getTextShiftOffset()>();

        $i21 = $i19 + $i20;

        $i22 = r8.<java.awt.Rectangle: int y>;

        $i23 = virtualinvoke $r4.<java.awt.FontMetrics: int getAscent()>();

        $i24 = $i22 + $i23;

        $i25 = virtualinvoke r13.<com.jidesoft.plaf.basic.BasicJideButtonUI: int getTextShiftOffset()>();

        $i26 = $i24 + $i25;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void drawStringUnderlineCharAt(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int,int)>(r1, r3, r7, $i1, $i21, $i26);

        goto label12;

     label09:
        $r6 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("Button.disabledForeground");

        if $r6 != null goto label10;

        $r12 = virtualinvoke r1.<javax.swing.AbstractButton: java.awt.Color getBackground()>();

        $r24 = virtualinvoke $r12.<java.awt.Color: java.awt.Color darker()>();

        goto label11;

     label10:
        $r24 = $r6;

     label11:
        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r24);

        $i2 = r8.<java.awt.Rectangle: int x>;

        $i3 = r8.<java.awt.Rectangle: int y>;

        $i4 = virtualinvoke $r4.<java.awt.FontMetrics: int getAscent()>();

        $i5 = $i3 + $i4;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void drawStringUnderlineCharAt(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int,int)>(r1, r3, r7, $i1, $i2, $i5);

     label12:
        $z8 = r1 instanceof com.jidesoft.swing.JideButton;

        if $z8 == 0 goto label14;

        $r9 = (com.jidesoft.swing.JideButton) r1;

        $i6 = virtualinvoke $r9.<com.jidesoft.swing.JideButton: int getButtonStyle()>();

        if $i6 != 3 goto label14;

        $r10 = (com.jidesoft.swing.JideButton) r1;

        $z1 = virtualinvoke $r10.<com.jidesoft.swing.JideButton: boolean isAlwaysShowHyperlink()>();

        if $z1 != 0 goto label13;

        $r11 = virtualinvoke r1.<javax.swing.AbstractButton: javax.swing.ButtonModel getModel()>();

        $z2 = interfaceinvoke $r11.<javax.swing.ButtonModel: boolean isRollover()>();

        if $z2 == 0 goto label14;

     label13:
        $i18 = r8.<java.awt.Rectangle: int x>;

        $i8 = r8.<java.awt.Rectangle: int y>;

        $i7 = r8.<java.awt.Rectangle: int height>;

        $i9 = $i8 + $i7;

        $i17 = $i9 - 2;

        $i11 = r8.<java.awt.Rectangle: int x>;

        $i10 = r8.<java.awt.Rectangle: int width>;

        $i16 = $i11 + $i10;

        $i13 = r8.<java.awt.Rectangle: int y>;

        $i12 = r8.<java.awt.Rectangle: int height>;

        $i14 = $i13 + $i12;

        $i15 = $i14 - 2;

        virtualinvoke r3.<java.awt.Graphics: void drawLine(int,int,int,int)>($i18, $i17, $i16, $i15);

     label14:
        virtualinvoke r3.<java.awt.Graphics: void setColor(java.awt.Color)>($r5);

     label15:
        return;
    }

    protected java.awt.Color getForegroundOfState(javax.swing.AbstractButton)
    {
        java.awt.Color r3;
        com.jidesoft.swing.ComponentStateSupport $r1;
        int $i0;
        com.jidesoft.plaf.basic.BasicJideButtonUI r2;
        javax.swing.AbstractButton r0;
        boolean $z0, $z1;

        r2 := @this: com.jidesoft.plaf.basic.BasicJideButtonUI;

        r0 := @parameter0: javax.swing.AbstractButton;

        $i0 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: int getButtonState(javax.swing.AbstractButton)>(r0);

        r3 = null;

        $z0 = r0 instanceof com.jidesoft.swing.ComponentStateSupport;

        if $z0 == 0 goto label1;

        $r1 = (com.jidesoft.swing.ComponentStateSupport) r0;

        r3 = interfaceinvoke $r1.<com.jidesoft.swing.ComponentStateSupport: java.awt.Color getForegroundOfState(int)>($i0);

     label1:
        if r3 == null goto label2;

        $z1 = r3 instanceof javax.swing.plaf.UIResource;

        if $z1 == 0 goto label3;

     label2:
        r3 = virtualinvoke r0.<javax.swing.AbstractButton: java.awt.Color getForeground()>();

     label3:
        return r3;
    }

    protected void paintText(java.awt.Graphics, javax.swing.AbstractButton, java.awt.Rectangle, java.lang.String)
    {
        java.awt.Rectangle r3;
        java.awt.Graphics r1;
        com.jidesoft.plaf.basic.BasicJideButtonUI r0;
        javax.swing.AbstractButton r2;
        java.lang.String r4;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideButtonUI;

        r1 := @parameter0: java.awt.Graphics;

        r2 := @parameter1: javax.swing.AbstractButton;

        r3 := @parameter2: java.awt.Rectangle;

        r4 := @parameter3: java.lang.String;

        virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideButtonUI: void paintText(java.awt.Graphics,javax.swing.JComponent,java.awt.Rectangle,java.lang.String)>(r1, r2, r3, r4);

        return;
    }

    protected void paintBackground(java.awt.Graphics, javax.swing.AbstractButton)
    {
        java.awt.Color $r13;
        com.jidesoft.swing.JideButton $r3, $r6, $r7;
        com.jidesoft.plaf.basic.ThemePainter $r9, $r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, z8;
        java.awt.Graphics r5;
        java.awt.Rectangle $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.Boolean $r14, $r15;
        com.jidesoft.plaf.basic.BasicJideButtonUI r4;
        javax.swing.AbstractButton r0;
        java.lang.String $r10, $r11;
        java.lang.Object $r1, $r2;

        r4 := @this: com.jidesoft.plaf.basic.BasicJideButtonUI;

        r5 := @parameter0: java.awt.Graphics;

        r0 := @parameter1: javax.swing.AbstractButton;

        z7 = 1;

        $r1 = virtualinvoke r0.<javax.swing.AbstractButton: java.lang.Object getClientProperty(java.lang.Object)>("JideButton.paintDefaultBorder");

        $z0 = $r1 instanceof java.lang.Boolean;

        if $z0 == 0 goto label1;

        $r15 = (java.lang.Boolean) $r1;

        z7 = virtualinvoke $r15.<java.lang.Boolean: boolean booleanValue()>();

     label1:
        $r2 = virtualinvoke r0.<javax.swing.AbstractButton: java.lang.Object getClientProperty(java.lang.Object)>("JideButton.alwaysPaintBackground");

        $z1 = $r2 instanceof java.lang.Boolean;

        if $z1 == 0 goto label2;

        $r14 = (java.lang.Boolean) $r2;

        z8 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>();

        goto label3;

     label2:
        z8 = virtualinvoke r0.<javax.swing.AbstractButton: boolean isOpaque()>();

     label3:
        if z8 == 0 goto label4;

        $r13 = virtualinvoke r0.<javax.swing.AbstractButton: java.awt.Color getBackground()>();

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r13);

        $i8 = virtualinvoke r0.<javax.swing.AbstractButton: int getWidth()>();

        $i9 = virtualinvoke r0.<javax.swing.AbstractButton: int getHeight()>();

        virtualinvoke r5.<java.awt.Graphics: void fillRect(int,int,int,int)>(0, 0, $i8, $i9);

     label4:
        $z2 = virtualinvoke r0.<javax.swing.AbstractButton: boolean isContentAreaFilled()>();

        if $z2 == 0 goto label9;

        $z3 = r0 instanceof com.jidesoft.swing.JideButton;

        if $z3 == 0 goto label7;

        $r7 = (com.jidesoft.swing.JideButton) r0;

        $i2 = virtualinvoke $r7.<com.jidesoft.swing.JideButton: int getButtonStyle()>();

        if $i2 != 0 goto label7;

        $r8 = new java.awt.Rectangle;

        $i3 = virtualinvoke r0.<javax.swing.AbstractButton: int getWidth()>();

        $i4 = virtualinvoke r0.<javax.swing.AbstractButton: int getHeight()>();

        specialinvoke $r8.<java.awt.Rectangle: void <init>(int,int,int,int)>(0, 0, $i3, $i4);

        $i5 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: int getButtonState(javax.swing.AbstractButton)>(r0);

        if $i5 == 0 goto label5;

        $r12 = virtualinvoke r4.<com.jidesoft.plaf.basic.BasicJideButtonUI: com.jidesoft.plaf.basic.ThemePainter getPainter()>();

        interfaceinvoke $r12.<com.jidesoft.plaf.basic.ThemePainter: void paintButtonBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r0, r5, $r8, 0, $i5);

        goto label6;

     label5:
        if z8 == 0 goto label6;

        $r9 = virtualinvoke r4.<com.jidesoft.plaf.basic.BasicJideButtonUI: com.jidesoft.plaf.basic.ThemePainter getPainter()>();

        $i6 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: int getOrientationOf(java.awt.Component)>(r0);

        interfaceinvoke $r9.<com.jidesoft.plaf.basic.ThemePainter: void paintButtonBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r0, r5, $r8, $i6, $i5);

        $r10 = "true";

        $r11 = staticinvoke <com.jidesoft.utils.SecurityUtils: java.lang.String getProperty(java.lang.String,java.lang.String)>("shadingtheme", "false");

        $z6 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z6 == 0 goto label6;

        $i7 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: int getOrientationOf(java.awt.Component)>(r0);

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void fillGradient(java.awt.Graphics,java.awt.Rectangle,int)>(r5, $r8, $i7);

     label6:
        goto label9;

     label7:
        $z4 = r0 instanceof com.jidesoft.swing.JideButton;

        if $z4 == 0 goto label8;

        $r6 = (com.jidesoft.swing.JideButton) r0;

        $i1 = virtualinvoke $r6.<com.jidesoft.swing.JideButton: int getButtonStyle()>();

        if $i1 != 2 goto label8;

        specialinvoke r4.<com.jidesoft.plaf.basic.BasicJideButtonUI: void paintBackgroundInFlatStyle(java.awt.Graphics,javax.swing.AbstractButton,boolean)>(r5, r0, z8);

        goto label9;

     label8:
        $z5 = r0 instanceof com.jidesoft.swing.JideButton;

        if $z5 == 0 goto label9;

        $r3 = (com.jidesoft.swing.JideButton) r0;

        $i0 = virtualinvoke $r3.<com.jidesoft.swing.JideButton: int getButtonStyle()>();

        if $i0 != 1 goto label9;

        specialinvoke r4.<com.jidesoft.plaf.basic.BasicJideButtonUI: void paintBackgroundInToolboxStyle(java.awt.Graphics,javax.swing.AbstractButton,boolean,boolean)>(r5, r0, z8, z7);

     label9:
        return;
    }

    private void paintBackgroundInFlatStyle(java.awt.Graphics, javax.swing.AbstractButton, boolean)
    {
        java.awt.Color $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;
        javax.swing.AbstractButton r1;
        com.jidesoft.plaf.basic.ThemePainter $r20;
        boolean z0;
        java.awt.Graphics r2;
        java.awt.Rectangle $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99;
        com.jidesoft.plaf.basic.BasicJideButtonUI r3;

        r3 := @this: com.jidesoft.plaf.basic.BasicJideButtonUI;

        r2 := @parameter0: java.awt.Graphics;

        r1 := @parameter1: javax.swing.AbstractButton;

        z0 := @parameter2: boolean;

        $r0 = new java.awt.Rectangle;

        $i0 = virtualinvoke r1.<javax.swing.AbstractButton: int getWidth()>();

        $i1 = virtualinvoke r1.<javax.swing.AbstractButton: int getHeight()>();

        specialinvoke $r0.<java.awt.Rectangle: void <init>(int,int,int,int)>(0, 0, $i0, $i1);

        $i2 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: int getButtonState(javax.swing.AbstractButton)>(r1);

        tableswitch($i2)
        {
            case 0: goto label5;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label1;
            case 4: goto label4;
            case 5: goto label4;
            default: goto label6;
        };

     label1:
        $r9 = r3.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _highlight>;

        $r8 = r3.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _highlight>;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void paintBackground(java.awt.Graphics,java.awt.Rectangle,java.awt.Color,java.awt.Color)>(r2, $r0, $r9, $r8);

        $r10 = r3.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _shadowColor>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r10);

        $i31 = $r0.<java.awt.Rectangle: int x>;

        $i30 = $r0.<java.awt.Rectangle: int y>;

        $i27 = $r0.<java.awt.Rectangle: int width>;

        $i29 = $i27 - 1;

        $i28 = $r0.<java.awt.Rectangle: int y>;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i31, $i30, $i29, $i28);

        $i36 = $r0.<java.awt.Rectangle: int x>;

        $i35 = $r0.<java.awt.Rectangle: int y>;

        $i34 = $r0.<java.awt.Rectangle: int x>;

        $i32 = $r0.<java.awt.Rectangle: int height>;

        $i33 = $i32 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i36, $i35, $i34, $i33);

        $r11 = r3.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _lightHighlightColor>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r11);

        $i43 = $r0.<java.awt.Rectangle: int x>;

        $i37 = $r0.<java.awt.Rectangle: int height>;

        $i42 = $i37 - 1;

        $i38 = $r0.<java.awt.Rectangle: int width>;

        $i41 = $i38 - 1;

        $i39 = $r0.<java.awt.Rectangle: int height>;

        $i40 = $i39 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i43, $i42, $i41, $i40);

        $i44 = $r0.<java.awt.Rectangle: int width>;

        $i50 = $i44 - 1;

        $i49 = $r0.<java.awt.Rectangle: int y>;

        $i45 = $r0.<java.awt.Rectangle: int width>;

        $i48 = $i45 - 1;

        $i46 = $r0.<java.awt.Rectangle: int height>;

        $i47 = $i46 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i50, $i49, $i48, $i47);

        goto label6;

     label2:
        $r17 = r3.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _highlight>;

        $r16 = r3.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _highlight>;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void paintBackground(java.awt.Graphics,java.awt.Rectangle,java.awt.Color,java.awt.Color)>(r2, $r0, $r17, $r16);

        $r18 = r3.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _shadowColor>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r18);

        $i79 = $r0.<java.awt.Rectangle: int x>;

        $i78 = $r0.<java.awt.Rectangle: int y>;

        $i75 = $r0.<java.awt.Rectangle: int width>;

        $i77 = $i75 - 1;

        $i76 = $r0.<java.awt.Rectangle: int y>;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i79, $i78, $i77, $i76);

        $i84 = $r0.<java.awt.Rectangle: int x>;

        $i83 = $r0.<java.awt.Rectangle: int y>;

        $i82 = $r0.<java.awt.Rectangle: int x>;

        $i80 = $r0.<java.awt.Rectangle: int height>;

        $i81 = $i80 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i84, $i83, $i82, $i81);

        $r19 = r3.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _lightHighlightColor>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r19);

        $i91 = $r0.<java.awt.Rectangle: int x>;

        $i85 = $r0.<java.awt.Rectangle: int height>;

        $i90 = $i85 - 1;

        $i86 = $r0.<java.awt.Rectangle: int width>;

        $i89 = $i86 - 1;

        $i87 = $r0.<java.awt.Rectangle: int height>;

        $i88 = $i87 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i91, $i90, $i89, $i88);

        $i92 = $r0.<java.awt.Rectangle: int width>;

        $i98 = $i92 - 1;

        $i97 = $r0.<java.awt.Rectangle: int y>;

        $i93 = $r0.<java.awt.Rectangle: int width>;

        $i96 = $i93 - 1;

        $i94 = $r0.<java.awt.Rectangle: int height>;

        $i95 = $i94 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i98, $i97, $i96, $i95);

        goto label6;

     label3:
        $r13 = r3.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _highlight>;

        $r12 = r3.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _highlight>;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void paintBackground(java.awt.Graphics,java.awt.Rectangle,java.awt.Color,java.awt.Color)>(r2, $r0, $r13, $r12);

        $r14 = r3.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _lightHighlightColor>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r14);

        $i55 = $r0.<java.awt.Rectangle: int x>;

        $i54 = $r0.<java.awt.Rectangle: int y>;

        $i51 = $r0.<java.awt.Rectangle: int width>;

        $i53 = $i51 - 1;

        $i52 = $r0.<java.awt.Rectangle: int y>;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i55, $i54, $i53, $i52);

        $i60 = $r0.<java.awt.Rectangle: int x>;

        $i59 = $r0.<java.awt.Rectangle: int y>;

        $i58 = $r0.<java.awt.Rectangle: int x>;

        $i56 = $r0.<java.awt.Rectangle: int height>;

        $i57 = $i56 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i60, $i59, $i58, $i57);

        $r15 = r3.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _shadowColor>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r15);

        $i67 = $r0.<java.awt.Rectangle: int x>;

        $i61 = $r0.<java.awt.Rectangle: int height>;

        $i66 = $i61 - 1;

        $i62 = $r0.<java.awt.Rectangle: int width>;

        $i65 = $i62 - 1;

        $i63 = $r0.<java.awt.Rectangle: int height>;

        $i64 = $i63 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i67, $i66, $i65, $i64);

        $i68 = $r0.<java.awt.Rectangle: int width>;

        $i74 = $i68 - 1;

        $i73 = $r0.<java.awt.Rectangle: int y>;

        $i69 = $r0.<java.awt.Rectangle: int width>;

        $i72 = $i69 - 1;

        $i70 = $r0.<java.awt.Rectangle: int height>;

        $i71 = $i70 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i74, $i73, $i72, $i71);

        goto label6;

     label4:
        if z0 == 0 goto label6;

        $r5 = r3.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _highlight>;

        $r4 = r3.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _highlight>;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void paintBackground(java.awt.Graphics,java.awt.Rectangle,java.awt.Color,java.awt.Color)>(r2, $r0, $r5, $r4);

        $r6 = r3.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _lightHighlightColor>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r6);

        $i7 = $r0.<java.awt.Rectangle: int x>;

        $i6 = $r0.<java.awt.Rectangle: int y>;

        $i3 = $r0.<java.awt.Rectangle: int width>;

        $i5 = $i3 - 1;

        $i4 = $r0.<java.awt.Rectangle: int y>;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i7, $i6, $i5, $i4);

        $i12 = $r0.<java.awt.Rectangle: int x>;

        $i11 = $r0.<java.awt.Rectangle: int y>;

        $i10 = $r0.<java.awt.Rectangle: int x>;

        $i8 = $r0.<java.awt.Rectangle: int height>;

        $i9 = $i8 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i12, $i11, $i10, $i9);

        $r7 = r3.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _shadowColor>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r7);

        $i19 = $r0.<java.awt.Rectangle: int x>;

        $i13 = $r0.<java.awt.Rectangle: int height>;

        $i18 = $i13 - 1;

        $i14 = $r0.<java.awt.Rectangle: int width>;

        $i17 = $i14 - 1;

        $i15 = $r0.<java.awt.Rectangle: int height>;

        $i16 = $i15 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i19, $i18, $i17, $i16);

        $i20 = $r0.<java.awt.Rectangle: int width>;

        $i26 = $i20 - 1;

        $i25 = $r0.<java.awt.Rectangle: int y>;

        $i21 = $r0.<java.awt.Rectangle: int width>;

        $i24 = $i21 - 1;

        $i22 = $r0.<java.awt.Rectangle: int height>;

        $i23 = $i22 - 1;

        virtualinvoke r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i26, $i25, $i24, $i23);

        goto label6;

     label5:
        if z0 == 0 goto label6;

        $r20 = virtualinvoke r3.<com.jidesoft.plaf.basic.BasicJideButtonUI: com.jidesoft.plaf.basic.ThemePainter getPainter()>();

        $i99 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: int getOrientationOf(java.awt.Component)>(r1);

        interfaceinvoke $r20.<com.jidesoft.plaf.basic.ThemePainter: void paintButtonBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r1, r2, $r0, $i99, $i2);

     label6:
        return;
    }

    private void paintBackgroundInToolboxStyle(java.awt.Graphics, javax.swing.AbstractButton, boolean, boolean)
    {
        java.awt.Color $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r18, $r19, $r20, $r23, $r24, $r25, $r27, $r28, $r29;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126;
        javax.swing.ButtonModel $r2, $r3, $r4, $r5, $r21;
        javax.swing.AbstractButton r1;
        com.jidesoft.plaf.basic.ThemePainter $r7, $r16, $r17, $r22, $r26;
        boolean $z0, $z1, $z2, $z3, z4, z5, $z6, $z7, $z8;
        java.awt.Graphics r8;
        java.awt.Rectangle $r0;
        com.jidesoft.plaf.basic.BasicJideButtonUI r6;

        r6 := @this: com.jidesoft.plaf.basic.BasicJideButtonUI;

        r8 := @parameter0: java.awt.Graphics;

        r1 := @parameter1: javax.swing.AbstractButton;

        z5 := @parameter2: boolean;

        z4 := @parameter3: boolean;

        $r0 = new java.awt.Rectangle;

        $i0 = virtualinvoke r1.<javax.swing.AbstractButton: int getWidth()>();

        $i1 = virtualinvoke r1.<javax.swing.AbstractButton: int getHeight()>();

        specialinvoke $r0.<java.awt.Rectangle: void <init>(int,int,int,int)>(0, 0, $i0, $i1);

        $r2 = virtualinvoke r1.<javax.swing.AbstractButton: javax.swing.ButtonModel getModel()>();

        $z0 = interfaceinvoke $r2.<javax.swing.ButtonModel: boolean isPressed()>();

        if $z0 == 0 goto label1;

        $r26 = virtualinvoke r6.<com.jidesoft.plaf.basic.BasicJideButtonUI: com.jidesoft.plaf.basic.ThemePainter getPainter()>();

        $i106 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: int getOrientationOf(java.awt.Component)>(r1);

        interfaceinvoke $r26.<com.jidesoft.plaf.basic.ThemePainter: void paintButtonBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r1, r8, $r0, $i106, 1);

        if z4 == 0 goto label7;

        $r27 = r6.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _darkShadowColor>;

        virtualinvoke r8.<java.awt.Graphics: void setColor(java.awt.Color)>($r27);

        $i107 = virtualinvoke r1.<javax.swing.AbstractButton: int getWidth()>();

        $i108 = $i107 - 2;

        virtualinvoke r8.<java.awt.Graphics: void drawLine(int,int,int,int)>(0, 0, $i108, 0);

        $i109 = virtualinvoke r1.<javax.swing.AbstractButton: int getHeight()>();

        $i110 = $i109 - 2;

        virtualinvoke r8.<java.awt.Graphics: void drawLine(int,int,int,int)>(0, 0, 0, $i110);

        $r28 = r6.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _shadowColor>;

        virtualinvoke r8.<java.awt.Graphics: void setColor(java.awt.Color)>($r28);

        $i111 = virtualinvoke r1.<javax.swing.AbstractButton: int getWidth()>();

        $i112 = $i111 - 3;

        virtualinvoke r8.<java.awt.Graphics: void drawLine(int,int,int,int)>(1, 1, $i112, 1);

        $i113 = virtualinvoke r1.<javax.swing.AbstractButton: int getHeight()>();

        $i114 = $i113 - 3;

        virtualinvoke r8.<java.awt.Graphics: void drawLine(int,int,int,int)>(1, 1, 1, $i114);

        $r29 = r6.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _lightHighlightColor>;

        virtualinvoke r8.<java.awt.Graphics: void setColor(java.awt.Color)>($r29);

        $i115 = virtualinvoke r1.<javax.swing.AbstractButton: int getHeight()>();

        $i116 = $i115 - 1;

        $i117 = virtualinvoke r1.<javax.swing.AbstractButton: int getWidth()>();

        $i118 = $i117 - 1;

        $i119 = virtualinvoke r1.<javax.swing.AbstractButton: int getHeight()>();

        $i120 = $i119 - 1;

        virtualinvoke r8.<java.awt.Graphics: void drawLine(int,int,int,int)>(0, $i116, $i118, $i120);

        $i121 = virtualinvoke r1.<javax.swing.AbstractButton: int getWidth()>();

        $i122 = $i121 - 1;

        $i123 = virtualinvoke r1.<javax.swing.AbstractButton: int getWidth()>();

        $i124 = $i123 - 1;

        $i125 = virtualinvoke r1.<javax.swing.AbstractButton: int getHeight()>();

        $i126 = $i125 - 1;

        virtualinvoke r8.<java.awt.Graphics: void drawLine(int,int,int,int)>($i122, 0, $i124, $i126);

        goto label7;

     label1:
        $r3 = virtualinvoke r1.<javax.swing.AbstractButton: javax.swing.ButtonModel getModel()>();

        $z1 = interfaceinvoke $r3.<javax.swing.ButtonModel: boolean isSelected()>();

        if $z1 == 0 goto label2;

        $r21 = virtualinvoke r1.<javax.swing.AbstractButton: javax.swing.ButtonModel getModel()>();

        $z8 = interfaceinvoke $r21.<javax.swing.ButtonModel: boolean isRollover()>();

        if $z8 == 0 goto label2;

        $r22 = virtualinvoke r6.<com.jidesoft.plaf.basic.BasicJideButtonUI: com.jidesoft.plaf.basic.ThemePainter getPainter()>();

        $i85 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: int getOrientationOf(java.awt.Component)>(r1);

        interfaceinvoke $r22.<com.jidesoft.plaf.basic.ThemePainter: void paintButtonBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r1, r8, $r0, $i85, 1);

        if z4 == 0 goto label7;

        $r23 = r6.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _darkShadowColor>;

        virtualinvoke r8.<java.awt.Graphics: void setColor(java.awt.Color)>($r23);

        $i86 = virtualinvoke r1.<javax.swing.AbstractButton: int getWidth()>();

        $i87 = $i86 - 2;

        virtualinvoke r8.<java.awt.Graphics: void drawLine(int,int,int,int)>(0, 0, $i87, 0);

        $i88 = virtualinvoke r1.<javax.swing.AbstractButton: int getHeight()>();

        $i89 = $i88 - 2;

        virtualinvoke r8.<java.awt.Graphics: void drawLine(int,int,int,int)>(0, 0, 0, $i89);

        $r24 = r6.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _shadowColor>;

        virtualinvoke r8.<java.awt.Graphics: void setColor(java.awt.Color)>($r24);

        $i90 = virtualinvoke r1.<javax.swing.AbstractButton: int getWidth()>();

        $i91 = $i90 - 3;

        virtualinvoke r8.<java.awt.Graphics: void drawLine(int,int,int,int)>(1, 1, $i91, 1);

        $i92 = virtualinvoke r1.<javax.swing.AbstractButton: int getHeight()>();

        $i93 = $i92 - 3;

        virtualinvoke r8.<java.awt.Graphics: void drawLine(int,int,int,int)>(1, 1, 1, $i93);

        $r25 = r6.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _lightHighlightColor>;

        virtualinvoke r8.<java.awt.Graphics: void setColor(java.awt.Color)>($r25);

        $i94 = virtualinvoke r1.<javax.swing.AbstractButton: int getHeight()>();

        $i95 = $i94 - 1;

        $i96 = virtualinvoke r1.<javax.swing.AbstractButton: int getWidth()>();

        $i97 = $i96 - 1;

        $i98 = virtualinvoke r1.<javax.swing.AbstractButton: int getHeight()>();

        $i99 = $i98 - 1;

        virtualinvoke r8.<java.awt.Graphics: void drawLine(int,int,int,int)>(0, $i95, $i97, $i99);

        $i100 = virtualinvoke r1.<javax.swing.AbstractButton: int getWidth()>();

        $i101 = $i100 - 1;

        $i102 = virtualinvoke r1.<javax.swing.AbstractButton: int getWidth()>();

        $i103 = $i102 - 1;

        $i104 = virtualinvoke r1.<javax.swing.AbstractButton: int getHeight()>();

        $i105 = $i104 - 1;

        virtualinvoke r8.<java.awt.Graphics: void drawLine(int,int,int,int)>($i101, 0, $i103, $i105);

        goto label7;

     label2:
        $r4 = virtualinvoke r1.<javax.swing.AbstractButton: javax.swing.ButtonModel getModel()>();

        $z2 = interfaceinvoke $r4.<javax.swing.ButtonModel: boolean isSelected()>();

        if $z2 == 0 goto label3;

        $r17 = virtualinvoke r6.<com.jidesoft.plaf.basic.BasicJideButtonUI: com.jidesoft.plaf.basic.ThemePainter getPainter()>();

        $i64 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: int getOrientationOf(java.awt.Component)>(r1);

        interfaceinvoke $r17.<com.jidesoft.plaf.basic.ThemePainter: void paintButtonBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r1, r8, $r0, $i64, 3);

        if z4 == 0 goto label7;

        $r18 = r6.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _darkShadowColor>;

        virtualinvoke r8.<java.awt.Graphics: void setColor(java.awt.Color)>($r18);

        $i65 = virtualinvoke r1.<javax.swing.AbstractButton: int getWidth()>();

        $i66 = $i65 - 2;

        virtualinvoke r8.<java.awt.Graphics: void drawLine(int,int,int,int)>(0, 0, $i66, 0);

        $i67 = virtualinvoke r1.<javax.swing.AbstractButton: int getHeight()>();

        $i68 = $i67 - 2;

        virtualinvoke r8.<java.awt.Graphics: void drawLine(int,int,int,int)>(0, 0, 0, $i68);

        $r19 = r6.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _shadowColor>;

        virtualinvoke r8.<java.awt.Graphics: void setColor(java.awt.Color)>($r19);

        $i69 = virtualinvoke r1.<javax.swing.AbstractButton: int getWidth()>();

        $i70 = $i69 - 3;

        virtualinvoke r8.<java.awt.Graphics: void drawLine(int,int,int,int)>(1, 1, $i70, 1);

        $i71 = virtualinvoke r1.<javax.swing.AbstractButton: int getHeight()>();

        $i72 = $i71 - 3;

        virtualinvoke r8.<java.awt.Graphics: void drawLine(int,int,int,int)>(1, 1, 1, $i72);

        $r20 = r6.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _lightHighlightColor>;

        virtualinvoke r8.<java.awt.Graphics: void setColor(java.awt.Color)>($r20);

        $i73 = virtualinvoke r1.<javax.swing.AbstractButton: int getHeight()>();

        $i74 = $i73 - 1;

        $i75 = virtualinvoke r1.<javax.swing.AbstractButton: int getWidth()>();

        $i76 = $i75 - 1;

        $i77 = virtualinvoke r1.<javax.swing.AbstractButton: int getHeight()>();

        $i78 = $i77 - 1;

        virtualinvoke r8.<java.awt.Graphics: void drawLine(int,int,int,int)>(0, $i74, $i76, $i78);

        $i79 = virtualinvoke r1.<javax.swing.AbstractButton: int getWidth()>();

        $i80 = $i79 - 1;

        $i81 = virtualinvoke r1.<javax.swing.AbstractButton: int getWidth()>();

        $i82 = $i81 - 1;

        $i83 = virtualinvoke r1.<javax.swing.AbstractButton: int getHeight()>();

        $i84 = $i83 - 1;

        virtualinvoke r8.<java.awt.Graphics: void drawLine(int,int,int,int)>($i80, 0, $i82, $i84);

        goto label7;

     label3:
        $r5 = virtualinvoke r1.<javax.swing.AbstractButton: javax.swing.ButtonModel getModel()>();

        $z3 = interfaceinvoke $r5.<javax.swing.ButtonModel: boolean isRollover()>();

        if $z3 != 0 goto label4;

        $z6 = virtualinvoke r1.<javax.swing.AbstractButton: boolean hasFocus()>();

        if $z6 == 0 goto label5;

        $z7 = virtualinvoke r1.<javax.swing.AbstractButton: boolean isFocusPainted()>();

        if $z7 == 0 goto label5;

     label4:
        $r7 = virtualinvoke r6.<com.jidesoft.plaf.basic.BasicJideButtonUI: com.jidesoft.plaf.basic.ThemePainter getPainter()>();

        $i2 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: int getOrientationOf(java.awt.Component)>(r1);

        interfaceinvoke $r7.<com.jidesoft.plaf.basic.ThemePainter: void paintButtonBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r1, r8, $r0, $i2, 2);

        if z4 == 0 goto label7;

        $r11 = r6.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _lightHighlightColor>;

        virtualinvoke r8.<java.awt.Graphics: void setColor(java.awt.Color)>($r11);

        $i19 = virtualinvoke r1.<javax.swing.AbstractButton: int getWidth()>();

        $i20 = $i19 - 1;

        virtualinvoke r8.<java.awt.Graphics: void drawLine(int,int,int,int)>(0, 0, $i20, 0);

        $i21 = virtualinvoke r1.<javax.swing.AbstractButton: int getHeight()>();

        $i22 = $i21 - 1;

        virtualinvoke r8.<java.awt.Graphics: void drawLine(int,int,int,int)>(0, 0, 0, $i22);

        $r12 = r6.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _shadowColor>;

        virtualinvoke r8.<java.awt.Graphics: void setColor(java.awt.Color)>($r12);

        $i23 = virtualinvoke r1.<javax.swing.AbstractButton: int getHeight()>();

        $i24 = $i23 - 2;

        $i25 = virtualinvoke r1.<javax.swing.AbstractButton: int getWidth()>();

        $i26 = $i25 - 2;

        $i27 = virtualinvoke r1.<javax.swing.AbstractButton: int getHeight()>();

        $i28 = $i27 - 2;

        virtualinvoke r8.<java.awt.Graphics: void drawLine(int,int,int,int)>(1, $i24, $i26, $i28);

        $i29 = virtualinvoke r1.<javax.swing.AbstractButton: int getWidth()>();

        $i30 = $i29 - 2;

        $i31 = virtualinvoke r1.<javax.swing.AbstractButton: int getWidth()>();

        $i32 = $i31 - 2;

        $i33 = virtualinvoke r1.<javax.swing.AbstractButton: int getHeight()>();

        $i34 = $i33 - 2;

        virtualinvoke r8.<java.awt.Graphics: void drawLine(int,int,int,int)>($i30, 1, $i32, $i34);

        $r13 = r6.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _darkShadowColor>;

        virtualinvoke r8.<java.awt.Graphics: void setColor(java.awt.Color)>($r13);

        $i35 = virtualinvoke r1.<javax.swing.AbstractButton: int getHeight()>();

        $i36 = $i35 - 1;

        $i37 = virtualinvoke r1.<javax.swing.AbstractButton: int getWidth()>();

        $i38 = $i37 - 1;

        $i39 = virtualinvoke r1.<javax.swing.AbstractButton: int getHeight()>();

        $i40 = $i39 - 1;

        virtualinvoke r8.<java.awt.Graphics: void drawLine(int,int,int,int)>(0, $i36, $i38, $i40);

        $i41 = virtualinvoke r1.<javax.swing.AbstractButton: int getWidth()>();

        $i42 = $i41 - 1;

        $i43 = virtualinvoke r1.<javax.swing.AbstractButton: int getWidth()>();

        $i44 = $i43 - 1;

        $i45 = virtualinvoke r1.<javax.swing.AbstractButton: int getHeight()>();

        $i46 = $i45 - 1;

        virtualinvoke r8.<java.awt.Graphics: void drawLine(int,int,int,int)>($i42, 0, $i44, $i46);

        goto label7;

     label5:
        if z5 == 0 goto label6;

        $r16 = virtualinvoke r6.<com.jidesoft.plaf.basic.BasicJideButtonUI: com.jidesoft.plaf.basic.ThemePainter getPainter()>();

        $i63 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: int getOrientationOf(java.awt.Component)>(r1);

        interfaceinvoke $r16.<com.jidesoft.plaf.basic.ThemePainter: void paintButtonBackground(javax.swing.JComponent,java.awt.Graphics,java.awt.Rectangle,int,int)>(r1, r8, $r0, $i63, 0);

        goto label7;

     label6:
        $r14 = r6.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _lightHighlightColor>;

        virtualinvoke r8.<java.awt.Graphics: void setColor(java.awt.Color)>($r14);

        $i47 = virtualinvoke r1.<javax.swing.AbstractButton: int getWidth()>();

        $i48 = $i47 - 1;

        virtualinvoke r8.<java.awt.Graphics: void drawLine(int,int,int,int)>(0, 0, $i48, 0);

        $i49 = virtualinvoke r1.<javax.swing.AbstractButton: int getHeight()>();

        $i50 = $i49 - 1;

        virtualinvoke r8.<java.awt.Graphics: void drawLine(int,int,int,int)>(0, 0, 0, $i50);

        $r15 = r6.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _shadowColor>;

        virtualinvoke r8.<java.awt.Graphics: void setColor(java.awt.Color)>($r15);

        $i51 = virtualinvoke r1.<javax.swing.AbstractButton: int getHeight()>();

        $i52 = $i51 - 1;

        $i53 = virtualinvoke r1.<javax.swing.AbstractButton: int getWidth()>();

        $i54 = $i53 - 1;

        $i55 = virtualinvoke r1.<javax.swing.AbstractButton: int getHeight()>();

        $i56 = $i55 - 1;

        virtualinvoke r8.<java.awt.Graphics: void drawLine(int,int,int,int)>(0, $i52, $i54, $i56);

        $i57 = virtualinvoke r1.<javax.swing.AbstractButton: int getWidth()>();

        $i58 = $i57 - 1;

        $i59 = virtualinvoke r1.<javax.swing.AbstractButton: int getWidth()>();

        $i60 = $i59 - 1;

        $i61 = virtualinvoke r1.<javax.swing.AbstractButton: int getHeight()>();

        $i62 = $i61 - 1;

        virtualinvoke r8.<java.awt.Graphics: void drawLine(int,int,int,int)>($i58, 0, $i60, $i62);

     label7:
        if z5 == 0 goto label8;

        $r9 = r6.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _lightHighlightColor>;

        virtualinvoke r8.<java.awt.Graphics: void setColor(java.awt.Color)>($r9);

        $i3 = virtualinvoke r1.<javax.swing.AbstractButton: int getWidth()>();

        $i4 = $i3 - 1;

        virtualinvoke r8.<java.awt.Graphics: void drawLine(int,int,int,int)>(0, 0, $i4, 0);

        $i5 = virtualinvoke r1.<javax.swing.AbstractButton: int getHeight()>();

        $i6 = $i5 - 1;

        virtualinvoke r8.<java.awt.Graphics: void drawLine(int,int,int,int)>(0, 0, 0, $i6);

        $r10 = r6.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Color _shadowColor>;

        virtualinvoke r8.<java.awt.Graphics: void setColor(java.awt.Color)>($r10);

        $i7 = virtualinvoke r1.<javax.swing.AbstractButton: int getHeight()>();

        $i8 = $i7 - 1;

        $i9 = virtualinvoke r1.<javax.swing.AbstractButton: int getWidth()>();

        $i10 = $i9 - 1;

        $i11 = virtualinvoke r1.<javax.swing.AbstractButton: int getHeight()>();

        $i12 = $i11 - 1;

        virtualinvoke r8.<java.awt.Graphics: void drawLine(int,int,int,int)>(0, $i8, $i10, $i12);

        $i13 = virtualinvoke r1.<javax.swing.AbstractButton: int getWidth()>();

        $i14 = $i13 - 1;

        $i15 = virtualinvoke r1.<javax.swing.AbstractButton: int getWidth()>();

        $i16 = $i15 - 1;

        $i17 = virtualinvoke r1.<javax.swing.AbstractButton: int getHeight()>();

        $i18 = $i17 - 1;

        virtualinvoke r8.<java.awt.Graphics: void drawLine(int,int,int,int)>($i14, 0, $i16, $i18);

     label8:
        return;
    }

    protected void clearTextShiftOffset()
    {
        com.jidesoft.plaf.basic.BasicJideButtonUI r0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideButtonUI;

        r0.<com.jidesoft.plaf.basic.BasicJideButtonUI: int shiftOffset> = 0;

        return;
    }

    protected void setTextShiftOffset()
    {
        int $i0;
        com.jidesoft.plaf.basic.BasicJideButtonUI r0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideButtonUI;

        $i0 = r0.<com.jidesoft.plaf.basic.BasicJideButtonUI: int defaultTextShiftOffset>;

        r0.<com.jidesoft.plaf.basic.BasicJideButtonUI: int shiftOffset> = $i0;

        return;
    }

    protected int getTextShiftOffset()
    {
        int $i0;
        com.jidesoft.plaf.basic.BasicJideButtonUI r0;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideButtonUI;

        $i0 = r0.<com.jidesoft.plaf.basic.BasicJideButtonUI: int shiftOffset>;

        return $i0;
    }

    public java.awt.Dimension getMinimumSize(javax.swing.JComponent)
    {
        int $i0, $i1, $i2, $i3, $i4;
        com.jidesoft.plaf.basic.BasicJideButtonUI r0;
        javax.swing.JComponent r1;
        java.awt.Dimension $r2;
        javax.swing.text.View r4;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        java.lang.Object $r3;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideButtonUI;

        r1 := @parameter0: javax.swing.JComponent;

        $r2 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)>(r1);

        $r3 = virtualinvoke r1.<javax.swing.JComponent: java.lang.Object getClientProperty(java.lang.Object)>("html");

        r4 = (javax.swing.text.View) $r3;

        if r4 == null goto label2;

        $i0 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: int getOrientationOf(java.awt.Component)>(r1);

        if $i0 != 0 goto label1;

        $i3 = $r2.<java.awt.Dimension: int width>;

        $f5 = (float) $i3;

        $f6 = virtualinvoke r4.<javax.swing.text.View: float getPreferredSpan(int)>(0);

        $f7 = virtualinvoke r4.<javax.swing.text.View: float getMinimumSpan(int)>(0);

        $f8 = $f6 - $f7;

        $f9 = $f5 - $f8;

        $i4 = (int) $f9;

        $r2.<java.awt.Dimension: int width> = $i4;

        goto label2;

     label1:
        $i1 = $r2.<java.awt.Dimension: int height>;

        $f0 = (float) $i1;

        $f1 = virtualinvoke r4.<javax.swing.text.View: float getPreferredSpan(int)>(0);

        $f2 = virtualinvoke r4.<javax.swing.text.View: float getMinimumSpan(int)>(0);

        $f3 = $f1 - $f2;

        $f4 = $f0 - $f3;

        $i2 = (int) $f4;

        $r2.<java.awt.Dimension: int height> = $i2;

     label2:
        return $r2;
    }

    public java.awt.Dimension getPreferredSize(javax.swing.JComponent)
    {
        javax.swing.JComponent r0;
        java.awt.Dimension $r2, $r3;
        int $i0, $i1, $i2, $i3;
        com.jidesoft.plaf.basic.BasicJideButtonUI r4;
        javax.swing.AbstractButton r1;

        r4 := @this: com.jidesoft.plaf.basic.BasicJideButtonUI;

        r0 := @parameter0: javax.swing.JComponent;

        r1 = (javax.swing.AbstractButton) r0;

        $i0 = virtualinvoke r1.<javax.swing.AbstractButton: int getIconTextGap()>();

        $r2 = staticinvoke <javax.swing.plaf.basic.BasicGraphicsUtils: java.awt.Dimension getPreferredButtonSize(javax.swing.AbstractButton,int)>(r1, $i0);

        $i1 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: int getOrientationOf(java.awt.Component)>(r0);

        if $i1 != 0 goto label1;

        return $r2;

     label1:
        $r3 = new java.awt.Dimension;

        $i3 = $r2.<java.awt.Dimension: int height>;

        $i2 = $r2.<java.awt.Dimension: int width>;

        specialinvoke $r3.<java.awt.Dimension: void <init>(int,int)>($i3, $i2);

        return $r3;
    }

    public java.awt.Dimension getMaximumSize(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        java.awt.Dimension $r2;
        int $i0, $i1;
        javax.swing.text.View r4;
        float $f0, $f1, $f2, $f3, $f4;
        com.jidesoft.plaf.basic.BasicJideButtonUI r0;
        java.lang.Object $r3;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideButtonUI;

        r1 := @parameter0: javax.swing.JComponent;

        $r2 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)>(r1);

        $r3 = virtualinvoke r1.<javax.swing.JComponent: java.lang.Object getClientProperty(java.lang.Object)>("html");

        r4 = (javax.swing.text.View) $r3;

        if r4 == null goto label1;

        $i0 = $r2.<java.awt.Dimension: int width>;

        $f0 = (float) $i0;

        $f1 = virtualinvoke r4.<javax.swing.text.View: float getMaximumSpan(int)>(0);

        $f2 = virtualinvoke r4.<javax.swing.text.View: float getPreferredSpan(int)>(0);

        $f3 = $f1 - $f2;

        $f4 = $f0 + $f3;

        $i1 = (int) $f4;

        $r2.<java.awt.Dimension: int width> = $i1;

     label1:
        return $r2;
    }

    public com.jidesoft.plaf.basic.ThemePainter getPainter()
    {
        com.jidesoft.plaf.basic.BasicJideButtonUI r0;
        com.jidesoft.plaf.basic.ThemePainter $r1;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideButtonUI;

        $r1 = r0.<com.jidesoft.plaf.basic.BasicJideButtonUI: com.jidesoft.plaf.basic.ThemePainter _painter>;

        return $r1;
    }

    protected void updateMargin(javax.swing.AbstractButton)
    {
        javax.swing.plaf.synth.SynthStyle $r16;
        java.awt.Insets $r3, $r8, $r13, $r14, $r20;
        com.jidesoft.plaf.basic.BasicJideButtonUI r0;
        java.lang.String $r1, $r7, $r12;
        javax.swing.AbstractButton r2;
        boolean $z0, $z1, $z2;
        javax.swing.plaf.synth.Region $r15, $r18;
        java.lang.StringBuilder $r4, $r5, $r6, $r9, $r10, $r11;
        javax.swing.plaf.InsetsUIResource $r19;
        javax.swing.plaf.synth.SynthContext $r17;

        r0 := @this: com.jidesoft.plaf.basic.BasicJideButtonUI;

        r2 := @parameter0: javax.swing.AbstractButton;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.basic.BasicJideButtonUI: java.lang.String getPropertyPrefix()>();

        $z0 = staticinvoke <com.jidesoft.plaf.LookAndFeelFactory: boolean isLnfInUse(java.lang.String)>("javax.swing.plaf.synth.SynthLookAndFeel");

        if $z0 == 0 goto label2;

        $r15 = <javax.swing.plaf.synth.Region: javax.swing.plaf.synth.Region BUTTON>;

        $r16 = staticinvoke <javax.swing.plaf.synth.SynthLookAndFeel: javax.swing.plaf.synth.SynthStyle getStyle(javax.swing.JComponent,javax.swing.plaf.synth.Region)>(r2, $r15);

        $r17 = new javax.swing.plaf.synth.SynthContext;

        $r18 = <javax.swing.plaf.synth.Region: javax.swing.plaf.synth.Region BUTTON>;

        specialinvoke $r17.<javax.swing.plaf.synth.SynthContext: void <init>(javax.swing.JComponent,javax.swing.plaf.synth.Region,javax.swing.plaf.synth.SynthStyle,int)>(r2, $r18, $r16, 0);

        $r19 = new javax.swing.plaf.InsetsUIResource;

        specialinvoke $r19.<javax.swing.plaf.InsetsUIResource: void <init>(int,int,int,int)>(0, 0, 0, 0);

        $r20 = virtualinvoke $r16.<javax.swing.plaf.synth.SynthStyle: java.awt.Insets getInsets(javax.swing.plaf.synth.SynthContext,java.awt.Insets)>($r17, $r19);

        if $r20 == null goto label1;

        virtualinvoke r2.<javax.swing.AbstractButton: void setMargin(java.awt.Insets)>($r20);

     label1:
        goto label5;

     label2:
        $r3 = virtualinvoke r2.<javax.swing.AbstractButton: java.awt.Insets getMargin()>();

        if $r3 == null goto label3;

        $r14 = virtualinvoke r2.<javax.swing.AbstractButton: java.awt.Insets getMargin()>();

        $z2 = $r14 instanceof javax.swing.plaf.UIResource;

        if $z2 == 0 goto label5;

     label3:
        $z1 = staticinvoke <com.jidesoft.plaf.basic.BasicJideButtonUI: boolean shouldWrapText(java.awt.Component)>(r2);

        if $z1 == 0 goto label4;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("margin.vertical");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Insets getInsets(java.lang.Object)>($r12);

        virtualinvoke r2.<javax.swing.AbstractButton: void setMargin(java.awt.Insets)>($r13);

        goto label5;

     label4:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("margin");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Insets getInsets(java.lang.Object)>($r7);

        virtualinvoke r2.<javax.swing.AbstractButton: void setMargin(java.awt.Insets)>($r8);

     label5:
        return;
    }

    public static boolean shouldWrapText(java.awt.Component)
    {
        java.awt.Component r0;

        r0 := @parameter0: java.awt.Component;

        return 0;
    }

    static void <clinit>()
    {
        java.awt.Rectangle $r0, $r1, $r2;

        <com.jidesoft.plaf.basic.BasicJideButtonUI: java.lang.String propertyPrefix> = "JideButton.";

        $r0 = new java.awt.Rectangle;

        specialinvoke $r0.<java.awt.Rectangle: void <init>()>();

        <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle viewRect> = $r0;

        $r1 = new java.awt.Rectangle;

        specialinvoke $r1.<java.awt.Rectangle: void <init>()>();

        <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle textRect> = $r1;

        $r2 = new java.awt.Rectangle;

        specialinvoke $r2.<java.awt.Rectangle: void <init>()>();

        <com.jidesoft.plaf.basic.BasicJideButtonUI: java.awt.Rectangle iconRect> = $r2;

        return;
    }
}
