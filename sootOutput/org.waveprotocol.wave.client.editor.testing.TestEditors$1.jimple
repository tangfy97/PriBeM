final class org.waveprotocol.wave.client.editor.testing.TestEditors$1 extends java.lang.Object implements org.waveprotocol.wave.client.editor.content.Renderer
{
    final java.lang.String val$tag;

    void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.waveprotocol.wave.client.editor.testing.TestEditors$1 r0;

        r0 := @this: org.waveprotocol.wave.client.editor.testing.TestEditors$1;

        r1 := @parameter0: java.lang.String;

        r0.<org.waveprotocol.wave.client.editor.testing.TestEditors$1: java.lang.String val$tag> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.google.gwt.dom.client.Element createDomImpl(org.waveprotocol.wave.client.editor.content.Renderer$Renderable)
    {
        org.waveprotocol.wave.client.editor.content.Renderer$Renderable r0;
        com.google.gwt.dom.client.Element $r4, $r5;
        java.lang.String $r3;
        org.waveprotocol.wave.client.editor.testing.TestEditors$1 r2;
        com.google.gwt.dom.client.Document $r1;

        r2 := @this: org.waveprotocol.wave.client.editor.testing.TestEditors$1;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.Renderer$Renderable;

        $r1 = staticinvoke <com.google.gwt.dom.client.Document: com.google.gwt.dom.client.Document get()>();

        $r3 = r2.<org.waveprotocol.wave.client.editor.testing.TestEditors$1: java.lang.String val$tag>;

        $r4 = virtualinvoke $r1.<com.google.gwt.dom.client.Document: com.google.gwt.dom.client.Element createElement(java.lang.String)>($r3);

        $r5 = interfaceinvoke r0.<org.waveprotocol.wave.client.editor.content.Renderer$Renderable: com.google.gwt.dom.client.Element setAutoAppendContainer(com.google.gwt.dom.client.Element)>($r4);

        return $r5;
    }
}
