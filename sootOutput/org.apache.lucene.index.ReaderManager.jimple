public final class org.apache.lucene.index.ReaderManager extends org.apache.lucene.search.ReferenceManager
{

    public void <init>(org.apache.lucene.index.IndexWriter, boolean) throws java.io.IOException
    {
        org.apache.lucene.index.IndexWriter r1;
        org.apache.lucene.index.DirectoryReader $r2;
        org.apache.lucene.index.ReaderManager r0;
        boolean z0;

        r0 := @this: org.apache.lucene.index.ReaderManager;

        r1 := @parameter0: org.apache.lucene.index.IndexWriter;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.lucene.search.ReferenceManager: void <init>()>();

        $r2 = staticinvoke <org.apache.lucene.index.DirectoryReader: org.apache.lucene.index.DirectoryReader open(org.apache.lucene.index.IndexWriter,boolean)>(r1, z0);

        r0.<org.apache.lucene.index.ReaderManager: java.lang.Object current> = $r2;

        return;
    }

    public void <init>(org.apache.lucene.store.Directory) throws java.io.IOException
    {
        org.apache.lucene.index.ReaderManager r0;
        org.apache.lucene.store.Directory r1;
        org.apache.lucene.index.DirectoryReader $r2;

        r0 := @this: org.apache.lucene.index.ReaderManager;

        r1 := @parameter0: org.apache.lucene.store.Directory;

        specialinvoke r0.<org.apache.lucene.search.ReferenceManager: void <init>()>();

        $r2 = staticinvoke <org.apache.lucene.index.DirectoryReader: org.apache.lucene.index.DirectoryReader open(org.apache.lucene.store.Directory)>(r1);

        r0.<org.apache.lucene.index.ReaderManager: java.lang.Object current> = $r2;

        return;
    }

    protected void decRef(org.apache.lucene.index.DirectoryReader) throws java.io.IOException
    {
        org.apache.lucene.index.ReaderManager r1;
        org.apache.lucene.index.DirectoryReader r0;

        r1 := @this: org.apache.lucene.index.ReaderManager;

        r0 := @parameter0: org.apache.lucene.index.DirectoryReader;

        virtualinvoke r0.<org.apache.lucene.index.DirectoryReader: void decRef()>();

        return;
    }

    protected org.apache.lucene.index.DirectoryReader refreshIfNeeded(org.apache.lucene.index.DirectoryReader) throws java.io.IOException
    {
        org.apache.lucene.index.ReaderManager r2;
        org.apache.lucene.index.DirectoryReader r0, $r1;

        r2 := @this: org.apache.lucene.index.ReaderManager;

        r0 := @parameter0: org.apache.lucene.index.DirectoryReader;

        $r1 = staticinvoke <org.apache.lucene.index.DirectoryReader: org.apache.lucene.index.DirectoryReader openIfChanged(org.apache.lucene.index.DirectoryReader)>(r0);

        return $r1;
    }

    protected boolean tryIncRef(org.apache.lucene.index.DirectoryReader)
    {
        org.apache.lucene.index.ReaderManager r1;
        org.apache.lucene.index.DirectoryReader r0;
        boolean $z0;

        r1 := @this: org.apache.lucene.index.ReaderManager;

        r0 := @parameter0: org.apache.lucene.index.DirectoryReader;

        $z0 = virtualinvoke r0.<org.apache.lucene.index.DirectoryReader: boolean tryIncRef()>();

        return $z0;
    }

    protected volatile boolean tryIncRef(java.lang.Object) throws java.io.IOException
    {
        org.apache.lucene.index.DirectoryReader $r2;
        java.lang.Object r1;
        org.apache.lucene.index.ReaderManager r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.ReaderManager;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.lucene.index.DirectoryReader) r1;

        $z0 = virtualinvoke r0.<org.apache.lucene.index.ReaderManager: boolean tryIncRef(org.apache.lucene.index.DirectoryReader)>($r2);

        return $z0;
    }

    protected volatile java.lang.Object refreshIfNeeded(java.lang.Object) throws java.io.IOException
    {
        org.apache.lucene.index.DirectoryReader $r2, $r3;
        java.lang.Object r1;
        org.apache.lucene.index.ReaderManager r0;

        r0 := @this: org.apache.lucene.index.ReaderManager;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.lucene.index.DirectoryReader) r1;

        $r3 = virtualinvoke r0.<org.apache.lucene.index.ReaderManager: org.apache.lucene.index.DirectoryReader refreshIfNeeded(org.apache.lucene.index.DirectoryReader)>($r2);

        return $r3;
    }

    protected volatile void decRef(java.lang.Object) throws java.io.IOException
    {
        java.lang.Object r1;
        org.apache.lucene.index.ReaderManager r0;
        org.apache.lucene.index.DirectoryReader $r2;

        r0 := @this: org.apache.lucene.index.ReaderManager;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.lucene.index.DirectoryReader) r1;

        virtualinvoke r0.<org.apache.lucene.index.ReaderManager: void decRef(org.apache.lucene.index.DirectoryReader)>($r2);

        return;
    }
}
