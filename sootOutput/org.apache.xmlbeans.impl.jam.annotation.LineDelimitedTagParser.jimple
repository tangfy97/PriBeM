public class org.apache.xmlbeans.impl.jam.'annotation'.LineDelimitedTagParser extends org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser
{
    private static final java.lang.String VALUE_QUOTE;
    private static final java.lang.String LINE_DELIMS;

    public void <init>()
    {
        org.apache.xmlbeans.impl.jam.'annotation'.LineDelimitedTagParser r0;

        r0 := @this: org.apache.xmlbeans.impl.jam.'annotation'.LineDelimitedTagParser;

        specialinvoke r0.<org.apache.xmlbeans.impl.jam.'annotation'.JavadocTagParser: void <init>()>();

        return;
    }

    public void parse(org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement, com.sun.javadoc.Tag)
    {
        com.sun.javadoc.Tag r1;
        java.util.StringTokenizer $r5;
        int $i0, $i1, $i2, $i3;
        org.apache.xmlbeans.impl.jam.'annotation'.LineDelimitedTagParser r2;
        java.lang.String $r4, $r6, $r7, $r8, $r9, $r10, $r11, r14;
        boolean $z0, $z1;
        org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement r0;
        java.lang.IllegalArgumentException $r12, $r13;
        org.apache.xmlbeans.impl.jam.mutable.MAnnotation[] $r3;

        r2 := @this: org.apache.xmlbeans.impl.jam.'annotation'.LineDelimitedTagParser;

        r0 := @parameter0: org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement;

        r1 := @parameter1: com.sun.javadoc.Tag;

        if r0 != null goto label1;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null tagText");

        throw $r13;

     label1:
        if r1 != null goto label2;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null tagName");

        throw $r12;

     label2:
        $r3 = virtualinvoke r2.<org.apache.xmlbeans.impl.jam.'annotation'.LineDelimitedTagParser: org.apache.xmlbeans.impl.jam.mutable.MAnnotation[] createAnnotations(org.apache.xmlbeans.impl.jam.mutable.MAnnotatedElement,com.sun.javadoc.Tag)>(r0, r1);

        $r4 = interfaceinvoke r1.<com.sun.javadoc.Tag: java.lang.String text()>();

        $r5 = new java.util.StringTokenizer;

        specialinvoke $r5.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r4, "\n\f\r");

     label3:
        $z1 = virtualinvoke $r5.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label7;

        $r6 = virtualinvoke $r5.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i0 = virtualinvoke $r6.<java.lang.String: int indexOf(int)>(61);

        if $i0 > 0 goto label4;

        goto label3;

     label4:
        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        if $i0 >= $i2 goto label6;

        $i3 = $i0 + 1;

        $r9 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int)>($i3);

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>();

        r14 = $r10;

        $z0 = virtualinvoke $r10.<java.lang.String: boolean startsWith(java.lang.String)>("\"");

        if $z0 == 0 goto label5;

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int)>(1);

        r14 = specialinvoke r2.<org.apache.xmlbeans.impl.jam.'annotation'.LineDelimitedTagParser: java.lang.String parseQuotedValue(java.lang.String,java.util.StringTokenizer)>($r11, $r5);

     label5:
        virtualinvoke r2.<org.apache.xmlbeans.impl.jam.'annotation'.LineDelimitedTagParser: void setValue(org.apache.xmlbeans.impl.jam.mutable.MAnnotation[],java.lang.String,java.lang.String)>($r3, $r8, r14);

     label6:
        goto label3;

     label7:
        return;
    }

    private java.lang.String parseQuotedValue(java.lang.String, java.util.StringTokenizer)
    {
        java.io.StringWriter $r9;
        java.util.StringTokenizer r4;
        int $i0, $i2;
        org.apache.xmlbeans.impl.jam.'annotation'.LineDelimitedTagParser r7;
        java.lang.String $r1, $r2, $r3, $r5, $r6, r8;
        boolean $z0;

        r7 := @this: org.apache.xmlbeans.impl.jam.'annotation'.LineDelimitedTagParser;

        r8 := @parameter0: java.lang.String;

        r4 := @parameter1: java.util.StringTokenizer;

        $r9 = new java.io.StringWriter;

        specialinvoke $r9.<java.io.StringWriter: void <init>()>();

     label1:
        $i0 = virtualinvoke r8.<java.lang.String: int indexOf(java.lang.String)>("\"");

        $i2 = (int) -1;

        if $i0 != $i2 goto label3;

        virtualinvoke $r9.<java.io.StringWriter: void write(java.lang.String)>(r8);

        $z0 = virtualinvoke r4.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 != 0 goto label2;

        $r6 = virtualinvoke $r9.<java.io.StringWriter: java.lang.String toString()>();

        return $r6;

     label2:
        virtualinvoke $r9.<java.io.StringWriter: void write(int)>(10);

        $r5 = virtualinvoke r4.<java.util.StringTokenizer: java.lang.String nextToken()>();

        r8 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        goto label1;

     label3:
        $r1 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $r9.<java.io.StringWriter: void write(java.lang.String)>($r2);

        $r3 = virtualinvoke $r9.<java.io.StringWriter: java.lang.String toString()>();

        return $r3;
    }

    public static void <clinit>()
    {
        <org.apache.xmlbeans.impl.jam.'annotation'.LineDelimitedTagParser: java.lang.String LINE_DELIMS> = "\n\f\r";

        <org.apache.xmlbeans.impl.jam.'annotation'.LineDelimitedTagParser: java.lang.String VALUE_QUOTE> = "\"";

        return;
    }
}
