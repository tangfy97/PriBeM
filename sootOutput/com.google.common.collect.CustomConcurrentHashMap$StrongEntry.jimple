class com.google.common.collect.CustomConcurrentHashMap$StrongEntry extends java.lang.Object implements com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry
{
    final java.lang.Object key;
    final com.google.common.collect.CustomConcurrentHashMap map;
    final int hash;
    final com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry next;
    volatile com.google.common.collect.CustomConcurrentHashMap$ValueReference valueReference;

    void <init>(com.google.common.collect.CustomConcurrentHashMap, java.lang.Object, int, com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry)
    {
        com.google.common.collect.CustomConcurrentHashMap$ValueReference $r1;
        com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry r4;
        int i0;
        com.google.common.collect.CustomConcurrentHashMap r2;
        java.lang.Object r3;
        com.google.common.collect.CustomConcurrentHashMap$StrongEntry r0;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$StrongEntry;

        r2 := @parameter0: com.google.common.collect.CustomConcurrentHashMap;

        r3 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        r4 := @parameter3: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.google.common.collect.CustomConcurrentHashMap: com.google.common.collect.CustomConcurrentHashMap$ValueReference unset()>();

        r0.<com.google.common.collect.CustomConcurrentHashMap$StrongEntry: com.google.common.collect.CustomConcurrentHashMap$ValueReference valueReference> = $r1;

        r0.<com.google.common.collect.CustomConcurrentHashMap$StrongEntry: com.google.common.collect.CustomConcurrentHashMap map> = r2;

        r0.<com.google.common.collect.CustomConcurrentHashMap$StrongEntry: java.lang.Object key> = r3;

        r0.<com.google.common.collect.CustomConcurrentHashMap$StrongEntry: int hash> = i0;

        r0.<com.google.common.collect.CustomConcurrentHashMap$StrongEntry: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry next> = r4;

        return;
    }

    public java.lang.Object getKey()
    {
        java.lang.Object $r1;
        com.google.common.collect.CustomConcurrentHashMap$StrongEntry r0;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$StrongEntry;

        $r1 = r0.<com.google.common.collect.CustomConcurrentHashMap$StrongEntry: java.lang.Object key>;

        return $r1;
    }

    public void notifyKeyReclaimed()
    {
        com.google.common.collect.CustomConcurrentHashMap$StrongEntry r0;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$StrongEntry;

        return;
    }

    public long getExpirationTime()
    {
        java.lang.UnsupportedOperationException $r0;
        com.google.common.collect.CustomConcurrentHashMap$StrongEntry r1;

        r1 := @this: com.google.common.collect.CustomConcurrentHashMap$StrongEntry;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void setExpirationTime(long)
    {
        java.lang.UnsupportedOperationException $r0;
        long l0;
        com.google.common.collect.CustomConcurrentHashMap$StrongEntry r1;

        r1 := @this: com.google.common.collect.CustomConcurrentHashMap$StrongEntry;

        l0 := @parameter0: long;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNextExpirable()
    {
        java.lang.UnsupportedOperationException $r0;
        com.google.common.collect.CustomConcurrentHashMap$StrongEntry r1;

        r1 := @this: com.google.common.collect.CustomConcurrentHashMap$StrongEntry;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void setNextExpirable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry)
    {
        java.lang.UnsupportedOperationException $r0;
        com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry r2;
        com.google.common.collect.CustomConcurrentHashMap$StrongEntry r1;

        r1 := @this: com.google.common.collect.CustomConcurrentHashMap$StrongEntry;

        r2 := @parameter0: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getPreviousExpirable()
    {
        java.lang.UnsupportedOperationException $r0;
        com.google.common.collect.CustomConcurrentHashMap$StrongEntry r1;

        r1 := @this: com.google.common.collect.CustomConcurrentHashMap$StrongEntry;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void setPreviousExpirable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry)
    {
        java.lang.UnsupportedOperationException $r0;
        com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry r2;
        com.google.common.collect.CustomConcurrentHashMap$StrongEntry r1;

        r1 := @this: com.google.common.collect.CustomConcurrentHashMap$StrongEntry;

        r2 := @parameter0: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNextEvictable()
    {
        java.lang.UnsupportedOperationException $r0;
        com.google.common.collect.CustomConcurrentHashMap$StrongEntry r1;

        r1 := @this: com.google.common.collect.CustomConcurrentHashMap$StrongEntry;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void setNextEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry)
    {
        java.lang.UnsupportedOperationException $r0;
        com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry r2;
        com.google.common.collect.CustomConcurrentHashMap$StrongEntry r1;

        r1 := @this: com.google.common.collect.CustomConcurrentHashMap$StrongEntry;

        r2 := @parameter0: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getPreviousEvictable()
    {
        java.lang.UnsupportedOperationException $r0;
        com.google.common.collect.CustomConcurrentHashMap$StrongEntry r1;

        r1 := @this: com.google.common.collect.CustomConcurrentHashMap$StrongEntry;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void setPreviousEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry)
    {
        java.lang.UnsupportedOperationException $r0;
        com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry r2;
        com.google.common.collect.CustomConcurrentHashMap$StrongEntry r1;

        r1 := @this: com.google.common.collect.CustomConcurrentHashMap$StrongEntry;

        r2 := @parameter0: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public com.google.common.collect.CustomConcurrentHashMap$ValueReference getValueReference()
    {
        com.google.common.collect.CustomConcurrentHashMap$ValueReference $r1;
        com.google.common.collect.CustomConcurrentHashMap$StrongEntry r0;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$StrongEntry;

        $r1 = r0.<com.google.common.collect.CustomConcurrentHashMap$StrongEntry: com.google.common.collect.CustomConcurrentHashMap$ValueReference valueReference>;

        return $r1;
    }

    public void setValueReference(com.google.common.collect.CustomConcurrentHashMap$ValueReference)
    {
        com.google.common.collect.CustomConcurrentHashMap$ValueReference r1, r2;
        com.google.common.collect.CustomConcurrentHashMap$StrongEntry r0;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$StrongEntry;

        r2 := @parameter0: com.google.common.collect.CustomConcurrentHashMap$ValueReference;

        r1 = r0.<com.google.common.collect.CustomConcurrentHashMap$StrongEntry: com.google.common.collect.CustomConcurrentHashMap$ValueReference valueReference>;

        r0.<com.google.common.collect.CustomConcurrentHashMap$StrongEntry: com.google.common.collect.CustomConcurrentHashMap$ValueReference valueReference> = r2;

        interfaceinvoke r1.<com.google.common.collect.CustomConcurrentHashMap$ValueReference: void clear()>();

        return;
    }

    public void notifyValueReclaimed(com.google.common.collect.CustomConcurrentHashMap$ValueReference)
    {
        com.google.common.collect.CustomConcurrentHashMap$ValueReference r1;
        com.google.common.collect.CustomConcurrentHashMap $r2;
        com.google.common.collect.CustomConcurrentHashMap$StrongEntry r0;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$StrongEntry;

        r1 := @parameter0: com.google.common.collect.CustomConcurrentHashMap$ValueReference;

        $r2 = r0.<com.google.common.collect.CustomConcurrentHashMap$StrongEntry: com.google.common.collect.CustomConcurrentHashMap map>;

        virtualinvoke $r2.<com.google.common.collect.CustomConcurrentHashMap: void reclaimValue(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry,com.google.common.collect.CustomConcurrentHashMap$ValueReference)>(r0, r1);

        return;
    }

    public int getHash()
    {
        int $i0;
        com.google.common.collect.CustomConcurrentHashMap$StrongEntry r0;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$StrongEntry;

        $i0 = r0.<com.google.common.collect.CustomConcurrentHashMap$StrongEntry: int hash>;

        return $i0;
    }

    public com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNext()
    {
        com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry $r1;
        com.google.common.collect.CustomConcurrentHashMap$StrongEntry r0;

        r0 := @this: com.google.common.collect.CustomConcurrentHashMap$StrongEntry;

        $r1 = r0.<com.google.common.collect.CustomConcurrentHashMap$StrongEntry: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry next>;

        return $r1;
    }
}
