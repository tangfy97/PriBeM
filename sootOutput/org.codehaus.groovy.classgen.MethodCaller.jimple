public class org.codehaus.groovy.classgen.MethodCaller extends java.lang.Object implements groovyjarjarasm.asm.Opcodes
{
    private int opcode;
    private java.lang.String internalName;
    private java.lang.String name;
    private java.lang.Class theClass;
    private java.lang.String methodDescriptor;

    public static org.codehaus.groovy.classgen.MethodCaller newStatic(java.lang.Class, java.lang.String)
    {
        java.lang.Class r1;
        java.lang.String r2;
        org.codehaus.groovy.classgen.MethodCaller $r0;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        $r0 = new org.codehaus.groovy.classgen.MethodCaller;

        specialinvoke $r0.<org.codehaus.groovy.classgen.MethodCaller: void <init>(int,java.lang.Class,java.lang.String)>(184, r1, r2);

        return $r0;
    }

    public static org.codehaus.groovy.classgen.MethodCaller newInterface(java.lang.Class, java.lang.String)
    {
        java.lang.Class r1;
        java.lang.String r2;
        org.codehaus.groovy.classgen.MethodCaller $r0;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        $r0 = new org.codehaus.groovy.classgen.MethodCaller;

        specialinvoke $r0.<org.codehaus.groovy.classgen.MethodCaller: void <init>(int,java.lang.Class,java.lang.String)>(185, r1, r2);

        return $r0;
    }

    public static org.codehaus.groovy.classgen.MethodCaller newVirtual(java.lang.Class, java.lang.String)
    {
        java.lang.Class r1;
        java.lang.String r2;
        org.codehaus.groovy.classgen.MethodCaller $r0;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        $r0 = new org.codehaus.groovy.classgen.MethodCaller;

        specialinvoke $r0.<org.codehaus.groovy.classgen.MethodCaller: void <init>(int,java.lang.Class,java.lang.String)>(182, r1, r2);

        return $r0;
    }

    public void <init>(int, java.lang.Class, java.lang.String)
    {
        int i0;
        java.lang.Class r1;
        java.lang.String $r2, r3;
        org.codehaus.groovy.classgen.MethodCaller r0;

        r0 := @this: org.codehaus.groovy.classgen.MethodCaller;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.groovy.classgen.MethodCaller: int opcode> = i0;

        $r2 = staticinvoke <groovyjarjarasm.asm.Type: java.lang.String getInternalName(java.lang.Class)>(r1);

        r0.<org.codehaus.groovy.classgen.MethodCaller: java.lang.String internalName> = $r2;

        r0.<org.codehaus.groovy.classgen.MethodCaller: java.lang.Class theClass> = r1;

        r0.<org.codehaus.groovy.classgen.MethodCaller: java.lang.String name> = r3;

        return;
    }

    public void call(groovyjarjarasm.asm.MethodVisitor)
    {
        int $i0;
        java.lang.String $r2, $r3, $r4;
        org.codehaus.groovy.classgen.MethodCaller r1;
        groovyjarjarasm.asm.MethodVisitor r0;

        r1 := @this: org.codehaus.groovy.classgen.MethodCaller;

        r0 := @parameter0: groovyjarjarasm.asm.MethodVisitor;

        $i0 = r1.<org.codehaus.groovy.classgen.MethodCaller: int opcode>;

        $r2 = r1.<org.codehaus.groovy.classgen.MethodCaller: java.lang.String internalName>;

        $r3 = r1.<org.codehaus.groovy.classgen.MethodCaller: java.lang.String name>;

        $r4 = virtualinvoke r1.<org.codehaus.groovy.classgen.MethodCaller: java.lang.String getMethodDescriptor()>();

        interfaceinvoke r0.<groovyjarjarasm.asm.MethodVisitor: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)>($i0, $r2, $r3, $r4);

        return;
    }

    public java.lang.String getMethodDescriptor()
    {
        java.lang.String $r1, $r2, $r4;
        org.codehaus.groovy.classgen.MethodCaller r0;
        java.lang.reflect.Method $r3;

        r0 := @this: org.codehaus.groovy.classgen.MethodCaller;

        $r1 = r0.<org.codehaus.groovy.classgen.MethodCaller: java.lang.String methodDescriptor>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.codehaus.groovy.classgen.MethodCaller: java.lang.reflect.Method getMethod()>();

        $r4 = staticinvoke <groovyjarjarasm.asm.Type: java.lang.String getMethodDescriptor(java.lang.reflect.Method)>($r3);

        r0.<org.codehaus.groovy.classgen.MethodCaller: java.lang.String methodDescriptor> = $r4;

     label1:
        $r2 = r0.<org.codehaus.groovy.classgen.MethodCaller: java.lang.String methodDescriptor>;

        return $r2;
    }

    protected java.lang.reflect.Method getMethod()
    {
        org.codehaus.groovy.classgen.ClassGeneratorException $r3;
        java.lang.reflect.Method[] $r2;
        java.lang.StringBuffer $r4, $r5, $r7, $r8, $r10;
        int $i0, i1;
        java.lang.String $r6, $r11, $r13, $r14;
        java.lang.reflect.Method r12;
        boolean $z0;
        org.codehaus.groovy.classgen.MethodCaller r0;
        java.lang.Class $r1, $r9;

        r0 := @this: org.codehaus.groovy.classgen.MethodCaller;

        $r1 = r0.<org.codehaus.groovy.classgen.MethodCaller: java.lang.Class theClass>;

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        i1 = 0;

     label1:
        $i0 = lengthof $r2;

        if i1 >= $i0 goto label3;

        r12 = $r2[i1];

        $r13 = virtualinvoke r12.<java.lang.reflect.Method: java.lang.String getName()>();

        $r14 = r0.<org.codehaus.groovy.classgen.MethodCaller: java.lang.String name>;

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z0 == 0 goto label2;

        return r12;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r3 = new org.codehaus.groovy.classgen.ClassGeneratorException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not find method: ");

        $r6 = r0.<org.codehaus.groovy.classgen.MethodCaller: java.lang.String name>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" on class: ");

        $r9 = r0.<org.codehaus.groovy.classgen.MethodCaller: java.lang.Class theClass>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<org.codehaus.groovy.classgen.ClassGeneratorException: void <init>(java.lang.String)>($r11);

        throw $r3;
    }
}
