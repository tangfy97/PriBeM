public class org.apache.xmlbeans.impl.schema.StscState extends java.lang.Object
{
    private java.lang.String _givenStsName;
    private java.util.Collection _errorListener;
    private org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl _target;
    private org.apache.xmlbeans.BindingConfig _config;
    private java.util.Map _compatMap;
    private boolean _doingDownloads;
    private byte[] _digest;
    private boolean _noDigest;
    private boolean _allowPartial;
    private int _recoveredErrors;
    private org.apache.xmlbeans.SchemaTypeLoader _importingLoader;
    private java.util.Map _containers;
    private org.apache.xmlbeans.impl.schema.SchemaDependencies _dependencies;
    private java.util.Map _redefinedGlobalTypes;
    private java.util.Map _redefinedModelGroups;
    private java.util.Map _redefinedAttributeGroups;
    private java.util.Map _globalTypes;
    private java.util.Map _globalElements;
    private java.util.Map _globalAttributes;
    private java.util.Map _modelGroups;
    private java.util.Map _attributeGroups;
    private java.util.Map _documentTypes;
    private java.util.Map _attributeTypes;
    private java.util.Map _typesByClassname;
    private java.util.Map _misspelledNames;
    private java.util.Set _processingGroups;
    private java.util.Map _idConstraints;
    private java.util.Set _namespaces;
    private java.util.List _annotations;
    private boolean _noUpa;
    private boolean _noPvr;
    private boolean _noAnn;
    private boolean _mdefAll;
    private java.util.Set _mdefNamespaces;
    private org.xml.sax.EntityResolver _entityResolver;
    private java.io.File _schemasDir;
    public static final java.lang.Object CHAMELEON_INCLUDE_URI;
    private static java.lang.ThreadLocal tl_stscStack;
    private static final org.apache.xmlbeans.impl.schema.XmlValueRef XMLSTR_PRESERVE;
    private static final org.apache.xmlbeans.impl.schema.XmlValueRef XMLSTR_REPLACE;
    private static final org.apache.xmlbeans.impl.schema.XmlValueRef XMLSTR_COLLAPSE;
    static final org.apache.xmlbeans.SchemaType[] EMPTY_ST_ARRAY;
    static final org.apache.xmlbeans.SchemaType$Ref[] EMPTY_STREF_ARRAY;
    private static final org.apache.xmlbeans.impl.schema.XmlValueRef[] FACETS_NONE;
    private static final boolean[] FIXED_FACETS_NONE;
    private static final org.apache.xmlbeans.impl.schema.XmlValueRef[] FACETS_WS_COLLAPSE;
    private static final boolean[] FIXED_FACETS_WS;
    static final org.apache.xmlbeans.impl.schema.XmlValueRef[] FACETS_UNION;
    static final boolean[] FIXED_FACETS_UNION;
    static final org.apache.xmlbeans.impl.schema.XmlValueRef[] FACETS_LIST;
    static final boolean[] FIXED_FACETS_LIST;
    private static final java.lang.String PROJECT_URL_PREFIX;
    java.util.Map _sourceForUri;
    java.net.URI _baseURI;
    org.apache.xmlbeans.SchemaTypeLoader _s4sloader;
    static final boolean $assertionsDisabled;
    static java.lang.Class class$org$apache$xmlbeans$impl$schema$StscState;
    static java.lang.Class class$org$apache$xmlbeans$impl$xb$xsdschema$SchemaDocument;

    private static java.util.Set buildDefaultMdefNamespaces()
    {
        java.util.HashSet $r0;
        java.lang.String[] $r1;
        java.util.List $r2;

        $r0 = new java.util.HashSet;

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = "http://www.openuri.org/2002/04/soap/conversation/";

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        specialinvoke $r0.<java.util.HashSet: void <init>(java.util.Collection)>($r2);

        return $r0;
    }

    private void <init>()
    {
        java.util.HashMap $r13, $r19;
        java.util.ArrayList $r17;
        java.util.LinkedHashMap $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r15;
        java.util.HashSet $r16;
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.net.URI $r20;
        java.util.LinkedHashSet $r14;
        org.apache.xmlbeans.SchemaTypeLoader $r23;
        java.util.Set $r18;
        java.lang.Class $r21, $r24;
        java.lang.ClassLoader $r22;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.StscState: byte[] _digest> = null;

        r0.<org.apache.xmlbeans.impl.schema.StscState: boolean _noDigest> = 0;

        r0.<org.apache.xmlbeans.impl.schema.StscState: boolean _allowPartial> = 0;

        r0.<org.apache.xmlbeans.impl.schema.StscState: int _recoveredErrors> = 0;

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _containers> = $r1;

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _redefinedGlobalTypes> = $r2;

        $r3 = new java.util.LinkedHashMap;

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _redefinedModelGroups> = $r3;

        $r4 = new java.util.LinkedHashMap;

        specialinvoke $r4.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _redefinedAttributeGroups> = $r4;

        $r5 = new java.util.LinkedHashMap;

        specialinvoke $r5.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _globalTypes> = $r5;

        $r6 = new java.util.LinkedHashMap;

        specialinvoke $r6.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _globalElements> = $r6;

        $r7 = new java.util.LinkedHashMap;

        specialinvoke $r7.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _globalAttributes> = $r7;

        $r8 = new java.util.LinkedHashMap;

        specialinvoke $r8.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _modelGroups> = $r8;

        $r9 = new java.util.LinkedHashMap;

        specialinvoke $r9.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _attributeGroups> = $r9;

        $r10 = new java.util.LinkedHashMap;

        specialinvoke $r10.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _documentTypes> = $r10;

        $r11 = new java.util.LinkedHashMap;

        specialinvoke $r11.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _attributeTypes> = $r11;

        $r12 = new java.util.LinkedHashMap;

        specialinvoke $r12.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _typesByClassname> = $r12;

        $r13 = new java.util.HashMap;

        specialinvoke $r13.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _misspelledNames> = $r13;

        $r14 = new java.util.LinkedHashSet;

        specialinvoke $r14.<java.util.LinkedHashSet: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Set _processingGroups> = $r14;

        $r15 = new java.util.LinkedHashMap;

        specialinvoke $r15.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _idConstraints> = $r15;

        $r16 = new java.util.HashSet;

        specialinvoke $r16.<java.util.HashSet: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Set _namespaces> = $r16;

        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.List _annotations> = $r17;

        $r18 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: java.util.Set buildDefaultMdefNamespaces()>();

        r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Set _mdefNamespaces> = $r18;

        $r19 = new java.util.HashMap;

        specialinvoke $r19.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _sourceForUri> = $r19;

        $r20 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>("project://local/");

        r0.<org.apache.xmlbeans.impl.schema.StscState: java.net.URI _baseURI> = $r20;

        $r21 = <org.apache.xmlbeans.impl.schema.StscState: java.lang.Class class$org$apache$xmlbeans$impl$xb$xsdschema$SchemaDocument>;

        if $r21 != null goto label1;

        $r24 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.xb.xsdschema.SchemaDocument");

        <org.apache.xmlbeans.impl.schema.StscState: java.lang.Class class$org$apache$xmlbeans$impl$xb$xsdschema$SchemaDocument> = $r24;

        goto label2;

     label1:
        $r24 = <org.apache.xmlbeans.impl.schema.StscState: java.lang.Class class$org$apache$xmlbeans$impl$xb$xsdschema$SchemaDocument>;

     label2:
        $r22 = virtualinvoke $r24.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r23 = staticinvoke <org.apache.xmlbeans.XmlBeans: org.apache.xmlbeans.SchemaTypeLoader typeLoaderForClassLoader(java.lang.ClassLoader)>($r22);

        r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.SchemaTypeLoader _s4sloader> = $r23;

        return;
    }

    public void initFromTypeSystem(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl, java.util.Set)
    {
        java.util.Set r2;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r0;
        org.apache.xmlbeans.impl.schema.StscState r5;
        org.apache.xmlbeans.impl.schema.SchemaContainer $r3, $r6;
        org.apache.xmlbeans.impl.schema.SchemaContainer[] $r1;
        int $i0, i1;
        java.lang.String $r4;
        boolean $z0;

        r5 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r0 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r2 := @parameter1: java.util.Set;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: org.apache.xmlbeans.impl.schema.SchemaContainer[] containers()>();

        i1 = 0;

     label1:
        $i0 = lengthof $r1;

        if i1 >= $i0 goto label3;

        $r3 = $r1[i1];

        $r4 = virtualinvoke $r3.<org.apache.xmlbeans.impl.schema.SchemaContainer: java.lang.String getNamespace()>();

        $z0 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>($r4);

        if $z0 != 0 goto label2;

        $r6 = $r1[i1];

        specialinvoke r5.<org.apache.xmlbeans.impl.schema.StscState: void addContainer(org.apache.xmlbeans.impl.schema.SchemaContainer)>($r6);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    void addNewContainer(java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        org.apache.xmlbeans.impl.schema.SchemaContainer $r3;
        java.util.Map $r2, $r5;
        java.lang.String r1;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r4;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _containers>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = new org.apache.xmlbeans.impl.schema.SchemaContainer;

        specialinvoke $r3.<org.apache.xmlbeans.impl.schema.SchemaContainer: void <init>(java.lang.String)>(r1);

        $r4 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl sts()>();

        virtualinvoke $r3.<org.apache.xmlbeans.impl.schema.SchemaContainer: void setTypeSystem(org.apache.xmlbeans.SchemaTypeSystem)>($r4);

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.StscState: void addNamespace(java.lang.String)>(r1);

        $r5 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _containers>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        return;
    }

    private void addContainer(org.apache.xmlbeans.impl.schema.SchemaContainer)
    {
        org.apache.xmlbeans.SchemaProperty[] $r25, $r32;
        org.apache.xmlbeans.SchemaProperty $r26, $r33;
        java.util.Map $r2, $r22, $r28, $r35, $r40, $r46, $r51, $r56, $r61, $r66, $r71, $r76;
        org.apache.xmlbeans.SchemaType $r64, r78, r79, r80;
        java.util.Set $r17;
        org.apache.xmlbeans.SchemaModelGroup $r49, $r74;
        javax.xml.namespace.QName $r21, $r27, $r34, $r39, $r45, $r50, $r55, $r60, $r65, $r70, $r75;
        java.lang.String $r3, $r18, $r29, $r30, $r36, $r37, $r41, $r42;
        org.apache.xmlbeans.SchemaGlobalElement $r59;
        org.apache.xmlbeans.SchemaIdentityConstraint $r20;
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.util.List $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        org.apache.xmlbeans.impl.schema.SchemaContainer r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21;
        org.apache.xmlbeans.SchemaAttributeGroup $r44, $r69;
        org.apache.xmlbeans.SchemaGlobalAttribute $r54;
        java.lang.Object $r19, $r23, $r24, $r31, $r38, $r43, $r47, $r48, $r52, $r53, $r57, $r58, $r62, $r63, $r67, $r68, $r72, $r73, $r77;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaContainer;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _containers>;

        $r3 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaContainer: java.lang.String getNamespace()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1);

        $r4 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaContainer: java.util.List redefinedModelGroups()>();

        i11 = 0;

     label01:
        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i11 >= $i0 goto label02;

        $r73 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i11);

        $r74 = (org.apache.xmlbeans.SchemaModelGroup) $r73;

        $r75 = interfaceinvoke $r74.<org.apache.xmlbeans.SchemaModelGroup: javax.xml.namespace.QName getName()>();

        $r76 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _redefinedModelGroups>;

        $r77 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i11);

        interfaceinvoke $r76.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r75, $r77);

        i11 = i11 + 1;

        goto label01;

     label02:
        $r5 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaContainer: java.util.List redefinedAttributeGroups()>();

        i12 = 0;

     label03:
        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if i12 >= $i1 goto label04;

        $r68 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i12);

        $r69 = (org.apache.xmlbeans.SchemaAttributeGroup) $r68;

        $r70 = interfaceinvoke $r69.<org.apache.xmlbeans.SchemaAttributeGroup: javax.xml.namespace.QName getName()>();

        $r71 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _redefinedAttributeGroups>;

        $r72 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i12);

        interfaceinvoke $r71.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r70, $r72);

        i12 = i12 + 1;

        goto label03;

     label04:
        $r6 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaContainer: java.util.List redefinedGlobalTypes()>();

        i13 = 0;

     label05:
        $i2 = interfaceinvoke $r6.<java.util.List: int size()>();

        if i13 >= $i2 goto label06;

        $r63 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i13);

        $r64 = (org.apache.xmlbeans.SchemaType) $r63;

        $r65 = interfaceinvoke $r64.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $r66 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _redefinedGlobalTypes>;

        $r67 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i13);

        interfaceinvoke $r66.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r65, $r67);

        i13 = i13 + 1;

        goto label05;

     label06:
        $r7 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaContainer: java.util.List globalElements()>();

        i14 = 0;

     label07:
        $i3 = interfaceinvoke $r7.<java.util.List: int size()>();

        if i14 >= $i3 goto label08;

        $r58 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i14);

        $r59 = (org.apache.xmlbeans.SchemaGlobalElement) $r58;

        $r60 = interfaceinvoke $r59.<org.apache.xmlbeans.SchemaGlobalElement: javax.xml.namespace.QName getName()>();

        $r61 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _globalElements>;

        $r62 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i14);

        interfaceinvoke $r61.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r60, $r62);

        i14 = i14 + 1;

        goto label07;

     label08:
        $r8 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaContainer: java.util.List globalAttributes()>();

        i15 = 0;

     label09:
        $i4 = interfaceinvoke $r8.<java.util.List: int size()>();

        if i15 >= $i4 goto label10;

        $r53 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i15);

        $r54 = (org.apache.xmlbeans.SchemaGlobalAttribute) $r53;

        $r55 = interfaceinvoke $r54.<org.apache.xmlbeans.SchemaGlobalAttribute: javax.xml.namespace.QName getName()>();

        $r56 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _globalAttributes>;

        $r57 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i15);

        interfaceinvoke $r56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r55, $r57);

        i15 = i15 + 1;

        goto label09;

     label10:
        $r9 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaContainer: java.util.List modelGroups()>();

        i16 = 0;

     label11:
        $i5 = interfaceinvoke $r9.<java.util.List: int size()>();

        if i16 >= $i5 goto label12;

        $r48 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i16);

        $r49 = (org.apache.xmlbeans.SchemaModelGroup) $r48;

        $r50 = interfaceinvoke $r49.<org.apache.xmlbeans.SchemaModelGroup: javax.xml.namespace.QName getName()>();

        $r51 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _modelGroups>;

        $r52 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i16);

        interfaceinvoke $r51.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r50, $r52);

        i16 = i16 + 1;

        goto label11;

     label12:
        $r10 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaContainer: java.util.List attributeGroups()>();

        i17 = 0;

     label13:
        $i6 = interfaceinvoke $r10.<java.util.List: int size()>();

        if i17 >= $i6 goto label14;

        $r43 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i17);

        $r44 = (org.apache.xmlbeans.SchemaAttributeGroup) $r43;

        $r45 = interfaceinvoke $r44.<org.apache.xmlbeans.SchemaAttributeGroup: javax.xml.namespace.QName getName()>();

        $r46 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _attributeGroups>;

        $r47 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i17);

        interfaceinvoke $r46.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r45, $r47);

        i17 = i17 + 1;

        goto label13;

     label14:
        $r11 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaContainer: java.util.List globalTypes()>();

        i18 = 0;

     label15:
        $i7 = interfaceinvoke $r11.<java.util.List: int size()>();

        if i18 >= $i7 goto label17;

        $r38 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i18);

        r78 = (org.apache.xmlbeans.SchemaType) $r38;

        $r39 = interfaceinvoke r78.<org.apache.xmlbeans.SchemaType: javax.xml.namespace.QName getName()>();

        $r40 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _globalTypes>;

        interfaceinvoke $r40.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r39, r78);

        $r41 = interfaceinvoke r78.<org.apache.xmlbeans.SchemaType: java.lang.String getFullJavaName()>();

        if $r41 == null goto label16;

        $r42 = interfaceinvoke r78.<org.apache.xmlbeans.SchemaType: java.lang.String getFullJavaName()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.StscState: void addClassname(java.lang.String,org.apache.xmlbeans.SchemaType)>($r42, r78);

     label16:
        i18 = i18 + 1;

        goto label15;

     label17:
        $r12 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaContainer: java.util.List documentTypes()>();

        i19 = 0;

     label18:
        $i8 = interfaceinvoke $r12.<java.util.List: int size()>();

        if i19 >= $i8 goto label20;

        $r31 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(i19);

        r79 = (org.apache.xmlbeans.SchemaType) $r31;

        $r32 = interfaceinvoke r79.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaProperty[] getProperties()>();

        $r33 = $r32[0];

        $r34 = interfaceinvoke $r33.<org.apache.xmlbeans.SchemaProperty: javax.xml.namespace.QName getName()>();

        $r35 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _documentTypes>;

        interfaceinvoke $r35.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r34, r79);

        $r36 = interfaceinvoke r79.<org.apache.xmlbeans.SchemaType: java.lang.String getFullJavaName()>();

        if $r36 == null goto label19;

        $r37 = interfaceinvoke r79.<org.apache.xmlbeans.SchemaType: java.lang.String getFullJavaName()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.StscState: void addClassname(java.lang.String,org.apache.xmlbeans.SchemaType)>($r37, r79);

     label19:
        i19 = i19 + 1;

        goto label18;

     label20:
        $r13 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaContainer: java.util.List attributeTypes()>();

        i20 = 0;

     label21:
        $i9 = interfaceinvoke $r13.<java.util.List: int size()>();

        if i20 >= $i9 goto label23;

        $r24 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i20);

        r80 = (org.apache.xmlbeans.SchemaType) $r24;

        $r25 = interfaceinvoke r80.<org.apache.xmlbeans.SchemaType: org.apache.xmlbeans.SchemaProperty[] getProperties()>();

        $r26 = $r25[0];

        $r27 = interfaceinvoke $r26.<org.apache.xmlbeans.SchemaProperty: javax.xml.namespace.QName getName()>();

        $r28 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _attributeTypes>;

        interfaceinvoke $r28.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, r80);

        $r29 = interfaceinvoke r80.<org.apache.xmlbeans.SchemaType: java.lang.String getFullJavaName()>();

        if $r29 == null goto label22;

        $r30 = interfaceinvoke r80.<org.apache.xmlbeans.SchemaType: java.lang.String getFullJavaName()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.StscState: void addClassname(java.lang.String,org.apache.xmlbeans.SchemaType)>($r30, r80);

     label22:
        i20 = i20 + 1;

        goto label21;

     label23:
        $r14 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaContainer: java.util.List identityConstraints()>();

        i21 = 0;

     label24:
        $i10 = interfaceinvoke $r14.<java.util.List: int size()>();

        if i21 >= $i10 goto label25;

        $r19 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>(i21);

        $r20 = (org.apache.xmlbeans.SchemaIdentityConstraint) $r19;

        $r21 = interfaceinvoke $r20.<org.apache.xmlbeans.SchemaIdentityConstraint: javax.xml.namespace.QName getName()>();

        $r22 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _idConstraints>;

        $r23 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>(i21);

        interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r23);

        i21 = i21 + 1;

        goto label24;

     label25:
        $r15 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.List _annotations>;

        $r16 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaContainer: java.util.List annotations()>();

        interfaceinvoke $r15.<java.util.List: boolean addAll(java.util.Collection)>($r16);

        $r17 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Set _namespaces>;

        $r18 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaContainer: java.lang.String getNamespace()>();

        interfaceinvoke $r17.<java.util.Set: boolean add(java.lang.Object)>($r18);

        virtualinvoke r1.<org.apache.xmlbeans.impl.schema.SchemaContainer: void unsetImmutable()>();

        return;
    }

    org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        org.apache.xmlbeans.impl.schema.SchemaContainer $r4;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _containers>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.xmlbeans.impl.schema.SchemaContainer) $r3;

        return $r4;
    }

    java.util.Map getContainerMap()
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.util.Map $r1, $r2;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _containers>;

        $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r2;
    }

    void registerDependency(java.lang.String, java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.lang.String r1, r2;
        org.apache.xmlbeans.impl.schema.SchemaDependencies $r3;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaDependencies _dependencies>;

        virtualinvoke $r3.<org.apache.xmlbeans.impl.schema.SchemaDependencies: void registerDependency(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    void registerContribution(java.lang.String, java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.lang.String r1, r2;
        org.apache.xmlbeans.impl.schema.SchemaDependencies $r3;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaDependencies _dependencies>;

        virtualinvoke $r3.<org.apache.xmlbeans.impl.schema.SchemaDependencies: void registerContribution(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    org.apache.xmlbeans.impl.schema.SchemaDependencies getDependencies()
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        org.apache.xmlbeans.impl.schema.SchemaDependencies $r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaDependencies _dependencies>;

        return $r1;
    }

    void setDependencies(org.apache.xmlbeans.impl.schema.SchemaDependencies)
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        org.apache.xmlbeans.impl.schema.SchemaDependencies r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaDependencies;

        r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaDependencies _dependencies> = r1;

        return;
    }

    boolean isFileProcessed(java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.lang.String r1;
        org.apache.xmlbeans.impl.schema.SchemaDependencies $r2;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaDependencies _dependencies>;

        $z0 = virtualinvoke $r2.<org.apache.xmlbeans.impl.schema.SchemaDependencies: boolean isFileRepresented(java.lang.String)>(r1);

        return $z0;
    }

    public void setImportingTypeLoader(org.apache.xmlbeans.SchemaTypeLoader)
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        org.apache.xmlbeans.SchemaTypeLoader r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: org.apache.xmlbeans.SchemaTypeLoader;

        r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.SchemaTypeLoader _importingLoader> = r1;

        return;
    }

    public void setErrorListener(java.util.Collection)
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.util.Collection r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: java.util.Collection;

        r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Collection _errorListener> = r1;

        return;
    }

    public void error(java.lang.String, int, org.apache.xmlbeans.XmlObject)
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.util.Collection $r3;
        int i0;
        java.lang.String r1;
        org.apache.xmlbeans.XmlObject r2;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.xmlbeans.XmlObject;

        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Collection _errorListener>;

        staticinvoke <org.apache.xmlbeans.impl.schema.StscState: void addError(java.util.Collection,java.lang.String,int,org.apache.xmlbeans.XmlObject)>($r3, r1, i0, r2);

        return;
    }

    public void error(java.lang.String, java.lang.Object[], org.apache.xmlbeans.XmlObject)
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.lang.Object[] r2;
        java.util.Collection $r4;
        java.lang.String r1;
        org.apache.xmlbeans.XmlObject r3;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        r3 := @parameter2: org.apache.xmlbeans.XmlObject;

        $r4 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Collection _errorListener>;

        staticinvoke <org.apache.xmlbeans.impl.schema.StscState: void addError(java.util.Collection,java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>($r4, r1, r2, r3);

        return;
    }

    public void recover(java.lang.String, java.lang.Object[], org.apache.xmlbeans.XmlObject)
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.lang.Object[] r2;
        java.util.Collection $r4;
        int $i0, $i1;
        java.lang.String r1;
        org.apache.xmlbeans.XmlObject r3;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        r3 := @parameter2: org.apache.xmlbeans.XmlObject;

        $r4 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Collection _errorListener>;

        staticinvoke <org.apache.xmlbeans.impl.schema.StscState: void addError(java.util.Collection,java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>($r4, r1, r2, r3);

        $i0 = r0.<org.apache.xmlbeans.impl.schema.StscState: int _recoveredErrors>;

        $i1 = $i0 + 1;

        r0.<org.apache.xmlbeans.impl.schema.StscState: int _recoveredErrors> = $i1;

        return;
    }

    public void warning(java.lang.String, int, org.apache.xmlbeans.XmlObject)
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.util.Collection $r3;
        int i0;
        java.lang.String r1;
        org.apache.xmlbeans.XmlObject r2;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.xmlbeans.XmlObject;

        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Collection _errorListener>;

        staticinvoke <org.apache.xmlbeans.impl.schema.StscState: void addWarning(java.util.Collection,java.lang.String,int,org.apache.xmlbeans.XmlObject)>($r3, r1, i0, r2);

        return;
    }

    public void warning(java.lang.String, java.lang.Object[], org.apache.xmlbeans.XmlObject)
    {
        java.lang.Object[] r2;
        java.util.Collection $r8;
        org.apache.xmlbeans.impl.schema.StscState r1;
        org.apache.xmlbeans.XmlDocumentProperties $r4, $r6;
        int $i0;
        java.lang.String r0, $r5, $r7;
        org.apache.xmlbeans.XmlObject r3;

        r1 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        r3 := @parameter2: org.apache.xmlbeans.XmlObject;

        if r0 != "reserved-type-name" goto label1;

        $r4 = interfaceinvoke r3.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlDocumentProperties documentProperties()>();

        $r5 = virtualinvoke $r4.<org.apache.xmlbeans.XmlDocumentProperties: java.lang.String getSourceName()>();

        if $r5 == null goto label1;

        $r6 = interfaceinvoke r3.<org.apache.xmlbeans.XmlObject: org.apache.xmlbeans.XmlDocumentProperties documentProperties()>();

        $r7 = virtualinvoke $r6.<org.apache.xmlbeans.XmlDocumentProperties: java.lang.String getSourceName()>();

        $i0 = virtualinvoke $r7.<java.lang.String: int indexOf(java.lang.String)>("XMLSchema.xsd");

        if $i0 <= 0 goto label1;

        return;

     label1:
        $r8 = r1.<org.apache.xmlbeans.impl.schema.StscState: java.util.Collection _errorListener>;

        staticinvoke <org.apache.xmlbeans.impl.schema.StscState: void addWarning(java.util.Collection,java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>($r8, r0, r2, r3);

        return;
    }

    public void info(java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.lang.String r1;
        java.util.Collection $r2;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Collection _errorListener>;

        staticinvoke <org.apache.xmlbeans.impl.schema.StscState: void addInfo(java.util.Collection,java.lang.String)>($r2, r1);

        return;
    }

    public void info(java.lang.String, java.lang.Object[])
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.lang.Object[] r2;
        java.util.Collection $r3;
        java.lang.String r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Collection _errorListener>;

        staticinvoke <org.apache.xmlbeans.impl.schema.StscState: void addInfo(java.util.Collection,java.lang.String,java.lang.Object[])>($r3, r1, r2);

        return;
    }

    public static void addError(java.util.Collection, java.lang.String, int, org.apache.xmlbeans.XmlObject)
    {
        java.util.Collection r3;
        int i0;
        org.apache.xmlbeans.XmlError $r2;
        java.lang.String r0;
        org.apache.xmlbeans.XmlObject r1;

        r3 := @parameter0: java.util.Collection;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r1 := @parameter3: org.apache.xmlbeans.XmlObject;

        $r2 = staticinvoke <org.apache.xmlbeans.XmlError: org.apache.xmlbeans.XmlError forObject(java.lang.String,int,org.apache.xmlbeans.XmlObject)>(r0, 0, r1);

        interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>($r2);

        return;
    }

    public static void addError(java.util.Collection, java.lang.String, java.lang.Object[], org.apache.xmlbeans.XmlObject)
    {
        java.lang.Object[] r1;
        java.util.Collection r4;
        org.apache.xmlbeans.XmlError $r3;
        java.lang.String r0;
        org.apache.xmlbeans.XmlObject r2;

        r4 := @parameter0: java.util.Collection;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.Object[];

        r2 := @parameter3: org.apache.xmlbeans.XmlObject;

        $r3 = staticinvoke <org.apache.xmlbeans.XmlError: org.apache.xmlbeans.XmlError forObject(java.lang.String,java.lang.Object[],int,org.apache.xmlbeans.XmlObject)>(r0, r1, 0, r2);

        interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>($r3);

        return;
    }

    public static void addError(java.util.Collection, java.lang.String, java.lang.Object[], java.io.File)
    {
        java.lang.Object[] r1;
        java.util.Collection r6;
        org.apache.xmlbeans.XmlError $r5;
        java.lang.String r0, $r4;
        java.net.URI $r3;
        java.io.File r2;

        r6 := @parameter0: java.util.Collection;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.Object[];

        r2 := @parameter3: java.io.File;

        $r3 = virtualinvoke r2.<java.io.File: java.net.URI toURI()>();

        $r4 = virtualinvoke $r3.<java.net.URI: java.lang.String toString()>();

        $r5 = staticinvoke <org.apache.xmlbeans.XmlError: org.apache.xmlbeans.XmlError forLocation(java.lang.String,java.lang.Object[],int,java.lang.String,int,int,int)>(r0, r1, 0, $r4, 0, 0, 0);

        interfaceinvoke r6.<java.util.Collection: boolean add(java.lang.Object)>($r5);

        return;
    }

    public static void addError(java.util.Collection, java.lang.String, java.lang.Object[], java.net.URL)
    {
        java.lang.Object[] r1;
        java.net.URL r2;
        java.util.Collection r5;
        org.apache.xmlbeans.XmlError $r4;
        java.lang.String r0, $r3;

        r5 := @parameter0: java.util.Collection;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.Object[];

        r2 := @parameter3: java.net.URL;

        $r3 = virtualinvoke r2.<java.net.URL: java.lang.String toString()>();

        $r4 = staticinvoke <org.apache.xmlbeans.XmlError: org.apache.xmlbeans.XmlError forLocation(java.lang.String,java.lang.Object[],int,java.lang.String,int,int,int)>(r0, r1, 0, $r3, 0, 0, 0);

        interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        return;
    }

    public static void addWarning(java.util.Collection, java.lang.String, int, org.apache.xmlbeans.XmlObject)
    {
        java.util.Collection r3;
        int i0;
        org.apache.xmlbeans.XmlError $r2;
        java.lang.String r0;
        org.apache.xmlbeans.XmlObject r1;

        r3 := @parameter0: java.util.Collection;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r1 := @parameter3: org.apache.xmlbeans.XmlObject;

        $r2 = staticinvoke <org.apache.xmlbeans.XmlError: org.apache.xmlbeans.XmlError forObject(java.lang.String,int,org.apache.xmlbeans.XmlObject)>(r0, 1, r1);

        interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>($r2);

        return;
    }

    public static void addWarning(java.util.Collection, java.lang.String, java.lang.Object[], org.apache.xmlbeans.XmlObject)
    {
        java.lang.Object[] r1;
        java.util.Collection r4;
        org.apache.xmlbeans.XmlError $r3;
        java.lang.String r0;
        org.apache.xmlbeans.XmlObject r2;

        r4 := @parameter0: java.util.Collection;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.Object[];

        r2 := @parameter3: org.apache.xmlbeans.XmlObject;

        $r3 = staticinvoke <org.apache.xmlbeans.XmlError: org.apache.xmlbeans.XmlError forObject(java.lang.String,java.lang.Object[],int,org.apache.xmlbeans.XmlObject)>(r0, r1, 1, r2);

        interfaceinvoke r4.<java.util.Collection: boolean add(java.lang.Object)>($r3);

        return;
    }

    public static void addInfo(java.util.Collection, java.lang.String)
    {
        org.apache.xmlbeans.XmlError $r1;
        java.lang.String r0;
        java.util.Collection r2;

        r2 := @parameter0: java.util.Collection;

        r0 := @parameter1: java.lang.String;

        $r1 = staticinvoke <org.apache.xmlbeans.XmlError: org.apache.xmlbeans.XmlError forMessage(java.lang.String,int)>(r0, 2);

        interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r1);

        return;
    }

    public static void addInfo(java.util.Collection, java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r1;
        java.util.Collection r3;
        org.apache.xmlbeans.XmlError $r2;
        java.lang.String r0;

        r3 := @parameter0: java.util.Collection;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.Object[];

        $r2 = staticinvoke <org.apache.xmlbeans.XmlError: org.apache.xmlbeans.XmlError forMessage(java.lang.String,java.lang.Object[],int)>(r0, r1, 2);

        interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>($r2);

        return;
    }

    public void setGivenTypeSystemName(java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.lang.String r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xmlbeans.impl.schema.StscState: java.lang.String _givenStsName> = r1;

        return;
    }

    public void setTargetSchemaTypeSystem(org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl)
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl _target> = r1;

        return;
    }

    public void addSchemaDigest(byte[])
    {
        byte[] r1, $r2, $r3, $r4, $r5;
        org.apache.xmlbeans.impl.schema.StscState r0;
        byte $b1, $b2, $b3, $b4;
        int $i0, $i5, i6, i7;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: byte[];

        $z0 = r0.<org.apache.xmlbeans.impl.schema.StscState: boolean _noDigest>;

        if $z0 == 0 goto label1;

        return;

     label1:
        if r1 != null goto label2;

        r0.<org.apache.xmlbeans.impl.schema.StscState: boolean _noDigest> = 1;

        r0.<org.apache.xmlbeans.impl.schema.StscState: byte[] _digest> = null;

        return;

     label2:
        $r2 = r0.<org.apache.xmlbeans.impl.schema.StscState: byte[] _digest>;

        if $r2 != null goto label3;

        $r5 = newarray (byte)[16];

        r0.<org.apache.xmlbeans.impl.schema.StscState: byte[] _digest> = $r5;

     label3:
        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscState: byte[] _digest>;

        $i5 = lengthof $r3;

        i6 = $i5;

        $i0 = lengthof r1;

        if $i0 >= $i5 goto label4;

        i6 = lengthof r1;

     label4:
        i7 = 0;

     label5:
        if i7 >= i6 goto label6;

        $r4 = r0.<org.apache.xmlbeans.impl.schema.StscState: byte[] _digest>;

        $b2 = $r4[i7];

        $b1 = r1[i7];

        $b3 = $b2 ^ $b1;

        $b4 = (byte) $b3;

        $r4[i7] = $b4;

        i7 = i7 + 1;

        goto label5;

     label6:
        return;
    }

    public org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl sts()
    {
        byte[] $r2, $r6, $r7;
        org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl $r1, $r9, $r11, $r12;
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.lang.StringBuffer $r3, $r4, $r8;
        java.lang.String $r5, r10;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl _target>;

        if $r1 == null goto label1;

        $r9 = r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl _target>;

        return $r9;

     label1:
        r10 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.lang.String _givenStsName>;

        if r10 != null goto label2;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.StscState: byte[] _digest>;

        if $r2 == null goto label2;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("s");

        $r5 = new java.lang.String;

        $r6 = r0.<org.apache.xmlbeans.impl.schema.StscState: byte[] _digest>;

        $r7 = staticinvoke <org.apache.xmlbeans.impl.util.HexBin: byte[] encode(byte[])>($r6);

        specialinvoke $r5.<java.lang.String: void <init>(byte[])>($r7);

        $r8 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        $r11 = new org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl;

        specialinvoke $r11.<org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl: void <init>(java.lang.String)>(r10);

        r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl _target> = $r11;

        $r12 = r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaTypeSystemImpl _target>;

        return $r12;
    }

    public boolean shouldDownloadURI(java.lang.String)
    {
        java.lang.Exception $r7;
        org.apache.xmlbeans.impl.schema.StscState r0;
        int $i0;
        java.lang.String r1, $r3, $r4, $r5, $r6, $r8;
        java.net.URI $r2;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<org.apache.xmlbeans.impl.schema.StscState: boolean _doingDownloads>;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r2 = new java.net.URI;

        specialinvoke $r2.<java.net.URI: void <init>(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("jar");

        if $z1 != 0 goto label3;

        $r5 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>();

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("zip");

        if $z3 == 0 goto label7;

     label3:
        $r4 = virtualinvoke $r2.<java.net.URI: java.lang.String getSchemeSpecificPart()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int lastIndexOf(int)>(33);

        if $i0 <= 0 goto label4;

        $r8 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        goto label5;

     label4:
        $r8 = $r4;

     label5:
        $z2 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.StscState: boolean shouldDownloadURI(java.lang.String)>($r8);

     label6:
        return $z2;

     label7:
        $r6 = virtualinvoke $r2.<java.net.URI: java.lang.String getScheme()>();

        $z4 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("file");

     label8:
        return $z4;

     label9:
        $r7 := @caughtexception;

        return 0;

        catch java.lang.Exception from label2 to label6 with label9;
        catch java.lang.Exception from label7 to label8 with label9;
    }

    public void setOptions(org.apache.xmlbeans.XmlOptions)
    {
        org.apache.xmlbeans.impl.schema.StscState r1;
        java.util.Map $r3;
        org.xml.sax.EntityResolver $r13, $r14, $r15, $r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        java.util.Collection $r18;
        java.util.Set $r16, $r19, $r20, $r21, $r22, $r23;
        java.lang.String $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        org.apache.xmlbeans.XmlOptions r0;
        java.lang.Object $r2, $r12, $r17;

        r1 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r0 := @parameter0: org.apache.xmlbeans.XmlOptions;

        if r0 != null goto label01;

        return;

     label01:
        $z0 = virtualinvoke r0.<org.apache.xmlbeans.XmlOptions: boolean hasOption(java.lang.Object)>("COMPILE_PARTIAL_TYPESYSTEM");

        r1.<org.apache.xmlbeans.impl.schema.StscState: boolean _allowPartial> = $z0;

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.XmlOptions: java.lang.Object get(java.lang.Object)>("COMPILE_SUBSTITUTE_NAMES");

        $r3 = (java.util.Map) $r2;

        r1.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _compatMap> = $r3;

        $z1 = virtualinvoke r0.<org.apache.xmlbeans.XmlOptions: boolean hasOption(java.lang.Object)>("COMPILE_NO_UPA_RULE");

        if $z1 == 0 goto label02;

        $z8 = 1;

        goto label04;

     label02:
        $r4 = "true";

        $r5 = staticinvoke <org.apache.xmlbeans.SystemProperties: java.lang.String getProperty(java.lang.String,java.lang.String)>("xmlbean.uniqueparticleattribution", "true");

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z2 != 0 goto label03;

        $z8 = 1;

        goto label04;

     label03:
        $z8 = 0;

     label04:
        r1.<org.apache.xmlbeans.impl.schema.StscState: boolean _noUpa> = $z8;

        $z9 = virtualinvoke r0.<org.apache.xmlbeans.XmlOptions: boolean hasOption(java.lang.Object)>("COMPILE_NO_PVR_RULE");

        if $z9 == 0 goto label05;

        $z10 = 1;

        goto label07;

     label05:
        $r6 = "true";

        $r7 = staticinvoke <org.apache.xmlbeans.SystemProperties: java.lang.String getProperty(java.lang.String,java.lang.String)>("xmlbean.particlerestriction", "true");

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z3 != 0 goto label06;

        $z10 = 1;

        goto label07;

     label06:
        $z10 = 0;

     label07:
        r1.<org.apache.xmlbeans.impl.schema.StscState: boolean _noPvr> = $z10;

        $z11 = virtualinvoke r0.<org.apache.xmlbeans.XmlOptions: boolean hasOption(java.lang.Object)>("COMPILE_NO_ANNOTATIONS");

        if $z11 == 0 goto label08;

        $z12 = 1;

        goto label10;

     label08:
        $r8 = "true";

        $r9 = staticinvoke <org.apache.xmlbeans.SystemProperties: java.lang.String getProperty(java.lang.String,java.lang.String)>("xmlbean.schemaannotations", "true");

        $z4 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z4 != 0 goto label09;

        $z12 = 1;

        goto label10;

     label09:
        $z12 = 0;

     label10:
        r1.<org.apache.xmlbeans.impl.schema.StscState: boolean _noAnn> = $z12;

        $z13 = virtualinvoke r0.<org.apache.xmlbeans.XmlOptions: boolean hasOption(java.lang.Object)>("COMPILE_DOWNLOAD_URLS");

        if $z13 == 0 goto label11;

        $z14 = 1;

        goto label12;

     label11:
        $r10 = "true";

        $r11 = staticinvoke <org.apache.xmlbeans.SystemProperties: java.lang.String getProperty(java.lang.String,java.lang.String)>("xmlbean.downloadurls", "false");

        $z14 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11);

     label12:
        r1.<org.apache.xmlbeans.impl.schema.StscState: boolean _doingDownloads> = $z14;

        $r12 = virtualinvoke r0.<org.apache.xmlbeans.XmlOptions: java.lang.Object get(java.lang.Object)>("ENTITY_RESOLVER");

        $r13 = (org.xml.sax.EntityResolver) $r12;

        r1.<org.apache.xmlbeans.impl.schema.StscState: org.xml.sax.EntityResolver _entityResolver> = $r13;

        $r14 = r1.<org.apache.xmlbeans.impl.schema.StscState: org.xml.sax.EntityResolver _entityResolver>;

        if $r14 != null goto label13;

        $r24 = staticinvoke <org.apache.xmlbeans.impl.common.ResolverUtil: org.xml.sax.EntityResolver getGlobalEntityResolver()>();

        r1.<org.apache.xmlbeans.impl.schema.StscState: org.xml.sax.EntityResolver _entityResolver> = $r24;

     label13:
        $r15 = r1.<org.apache.xmlbeans.impl.schema.StscState: org.xml.sax.EntityResolver _entityResolver>;

        if $r15 == null goto label14;

        r1.<org.apache.xmlbeans.impl.schema.StscState: boolean _doingDownloads> = 1;

     label14:
        $z5 = virtualinvoke r0.<org.apache.xmlbeans.XmlOptions: boolean hasOption(java.lang.Object)>("COMPILE_MDEF_NAMESPACES");

        if $z5 == 0 goto label16;

        $r16 = r1.<org.apache.xmlbeans.impl.schema.StscState: java.util.Set _mdefNamespaces>;

        $r17 = virtualinvoke r0.<org.apache.xmlbeans.XmlOptions: java.lang.Object get(java.lang.Object)>("COMPILE_MDEF_NAMESPACES");

        $r18 = (java.util.Collection) $r17;

        interfaceinvoke $r16.<java.util.Set: boolean addAll(java.util.Collection)>($r18);

        $r19 = r1.<org.apache.xmlbeans.impl.schema.StscState: java.util.Set _mdefNamespaces>;

        $z6 = interfaceinvoke $r19.<java.util.Set: boolean contains(java.lang.Object)>("##local");

        if $z6 == 0 goto label15;

        $r22 = r1.<org.apache.xmlbeans.impl.schema.StscState: java.util.Set _mdefNamespaces>;

        interfaceinvoke $r22.<java.util.Set: boolean remove(java.lang.Object)>("##local");

        $r23 = r1.<org.apache.xmlbeans.impl.schema.StscState: java.util.Set _mdefNamespaces>;

        interfaceinvoke $r23.<java.util.Set: boolean add(java.lang.Object)>("");

     label15:
        $r20 = r1.<org.apache.xmlbeans.impl.schema.StscState: java.util.Set _mdefNamespaces>;

        $z7 = interfaceinvoke $r20.<java.util.Set: boolean contains(java.lang.Object)>("##any");

        if $z7 == 0 goto label16;

        $r21 = r1.<org.apache.xmlbeans.impl.schema.StscState: java.util.Set _mdefNamespaces>;

        interfaceinvoke $r21.<java.util.Set: boolean remove(java.lang.Object)>("##any");

        r1.<org.apache.xmlbeans.impl.schema.StscState: boolean _mdefAll> = 1;

     label16:
        return;
    }

    public org.xml.sax.EntityResolver getEntityResolver()
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        org.xml.sax.EntityResolver $r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscState: org.xml.sax.EntityResolver _entityResolver>;

        return $r1;
    }

    public boolean noUpa()
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        $z0 = r0.<org.apache.xmlbeans.impl.schema.StscState: boolean _noUpa>;

        return $z0;
    }

    public boolean noPvr()
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        $z0 = r0.<org.apache.xmlbeans.impl.schema.StscState: boolean _noPvr>;

        return $z0;
    }

    public boolean noAnn()
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        $z0 = r0.<org.apache.xmlbeans.impl.schema.StscState: boolean _noAnn>;

        return $z0;
    }

    public boolean allowPartial()
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        $z0 = r0.<org.apache.xmlbeans.impl.schema.StscState: boolean _allowPartial>;

        return $z0;
    }

    public int getRecovered()
    {
        int $i0;
        org.apache.xmlbeans.impl.schema.StscState r0;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        $i0 = r0.<org.apache.xmlbeans.impl.schema.StscState: int _recoveredErrors>;

        return $i0;
    }

    private javax.xml.namespace.QName compatName(javax.xml.namespace.QName, java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.StscState r1;
        java.util.Map $r2, $r9;
        int $i0, $i1;
        java.lang.Object $r3;
        java.lang.String $r0, r5, $r7;
        javax.xml.namespace.QName r4, $r6, r8;

        r1 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r8 := @parameter0: javax.xml.namespace.QName;

        r5 := @parameter1: java.lang.String;

        $r0 = virtualinvoke r8.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        if r5 == null goto label1;

        $i1 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i1 <= 0 goto label1;

        $r6 = new javax.xml.namespace.QName;

        $r7 = virtualinvoke r8.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke $r6.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>(r5, $r7);

        r8 = $r6;

     label1:
        $r9 = r1.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _compatMap>;

        if $r9 != null goto label2;

        return r8;

     label2:
        $r2 = r1.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _compatMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8);

        r4 = (javax.xml.namespace.QName) $r3;

        if r4 != null goto label3;

        return r8;

     label3:
        return r4;
    }

    public void setBindingConfig(org.apache.xmlbeans.BindingConfig) throws java.lang.IllegalArgumentException
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        org.apache.xmlbeans.BindingConfig r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: org.apache.xmlbeans.BindingConfig;

        r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.BindingConfig _config> = r1;

        return;
    }

    public org.apache.xmlbeans.BindingConfig getBindingConfig() throws java.lang.IllegalArgumentException
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        org.apache.xmlbeans.BindingConfig $r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.BindingConfig _config>;

        return $r1;
    }

    public java.lang.String getPackageOverride(java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        org.apache.xmlbeans.BindingConfig $r1, $r3;
        java.lang.String r2, $r4;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.BindingConfig _config>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.BindingConfig _config>;

        $r4 = virtualinvoke $r3.<org.apache.xmlbeans.BindingConfig: java.lang.String lookupPackageForNamespace(java.lang.String)>(r2);

        return $r4;
    }

    public java.lang.String getJavaPrefix(java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        org.apache.xmlbeans.BindingConfig $r1, $r3;
        java.lang.String r2, $r4;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.BindingConfig _config>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.BindingConfig _config>;

        $r4 = virtualinvoke $r3.<org.apache.xmlbeans.BindingConfig: java.lang.String lookupPrefixForNamespace(java.lang.String)>(r2);

        return $r4;
    }

    public java.lang.String getJavaSuffix(java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        org.apache.xmlbeans.BindingConfig $r1, $r3;
        java.lang.String r2, $r4;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.BindingConfig _config>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.BindingConfig _config>;

        $r4 = virtualinvoke $r3.<org.apache.xmlbeans.BindingConfig: java.lang.String lookupSuffixForNamespace(java.lang.String)>(r2);

        return $r4;
    }

    public java.lang.String getJavaname(javax.xml.namespace.QName, int)
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        org.apache.xmlbeans.BindingConfig $r1, $r3;
        int i0;
        javax.xml.namespace.QName r2;
        java.lang.String $r4;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r2 := @parameter0: javax.xml.namespace.QName;

        i0 := @parameter1: int;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.BindingConfig _config>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.BindingConfig _config>;

        $r4 = virtualinvoke $r3.<org.apache.xmlbeans.BindingConfig: java.lang.String lookupJavanameForQName(javax.xml.namespace.QName,int)>(r2, i0);

        return $r4;
    }

    private static java.lang.String crunchName(javax.xml.namespace.QName)
    {
        javax.xml.namespace.QName r0;
        java.lang.String $r1, $r2;

        r0 := @parameter0: javax.xml.namespace.QName;

        $r1 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        return $r2;
    }

    void addSpelling(javax.xml.namespace.QName, org.apache.xmlbeans.SchemaComponent)
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.util.Map $r2;
        org.apache.xmlbeans.SchemaComponent r4;
        javax.xml.namespace.QName r1;
        java.lang.String $r3;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: javax.xml.namespace.QName;

        r4 := @parameter1: org.apache.xmlbeans.SchemaComponent;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _misspelledNames>;

        $r3 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: java.lang.String crunchName(javax.xml.namespace.QName)>(r1);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r4);

        return;
    }

    org.apache.xmlbeans.SchemaComponent findSpelling(javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.util.Map $r2;
        java.lang.Object $r4;
        org.apache.xmlbeans.SchemaComponent $r5;
        javax.xml.namespace.QName r1;
        java.lang.String $r3;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: javax.xml.namespace.QName;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _misspelledNames>;

        $r3 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: java.lang.String crunchName(javax.xml.namespace.QName)>(r1);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (org.apache.xmlbeans.SchemaComponent) $r4;

        return $r5;
    }

    void addNamespace(java.lang.String)
    {
        java.util.Set $r2;
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.lang.String r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Set _namespaces>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return;
    }

    java.lang.String[] getNamespaces()
    {
        java.lang.Object[] $r4;
        java.util.Set $r1, $r2;
        java.lang.String[] $r3, $r5, $r6;
        org.apache.xmlbeans.impl.schema.StscState r0;
        int $i0;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Set _namespaces>;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Set _namespaces>;

        $i0 = interfaceinvoke $r1.<java.util.Set: int size()>();

        $r3 = newarray (java.lang.String)[$i0];

        $r4 = interfaceinvoke $r2.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (java.lang.String[]) $r4;

        $r6 = (java.lang.String[]) $r5;

        return $r6;
    }

    boolean linkerDefinesNamespace(java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        org.apache.xmlbeans.SchemaTypeLoader $r2;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.SchemaTypeLoader _importingLoader>;

        $z0 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaTypeLoader: boolean isNamespaceDefined(java.lang.String)>(r1);

        return $z0;
    }

    org.apache.xmlbeans.impl.schema.SchemaTypeImpl findGlobalType(javax.xml.namespace.QName, java.lang.String, java.lang.String)
    {
        org.apache.xmlbeans.SchemaTypeLoader $r7;
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.util.Map $r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl r10;
        java.lang.Object $r4;
        java.lang.String r1, r5, $r6;
        javax.xml.namespace.QName $r2, r9;
        org.apache.xmlbeans.SchemaType $r8;
        boolean z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r9 := @parameter0: javax.xml.namespace.QName;

        r1 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.StscState: javax.xml.namespace.QName compatName(javax.xml.namespace.QName,java.lang.String)>(r9, r1);

        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _globalTypes>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r10 = (org.apache.xmlbeans.impl.schema.SchemaTypeImpl) $r4;

        z0 = 0;

        if r10 != null goto label3;

        $r7 = r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.SchemaTypeLoader _importingLoader>;

        $r8 = interfaceinvoke $r7.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaType findType(javax.xml.namespace.QName)>($r2);

        r10 = (org.apache.xmlbeans.impl.schema.SchemaTypeImpl) $r8;

        if r10 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

     label3:
        if z0 != 0 goto label4;

        if r5 == null goto label4;

        $r6 = virtualinvoke $r2.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.StscState: void registerDependency(java.lang.String,java.lang.String)>(r5, $r6);

     label4:
        return r10;
    }

    org.apache.xmlbeans.impl.schema.SchemaTypeImpl findRedefinedGlobalType(javax.xml.namespace.QName, java.lang.String, org.apache.xmlbeans.impl.schema.SchemaTypeImpl)
    {
        org.apache.xmlbeans.SchemaTypeLoader $r7;
        org.apache.xmlbeans.impl.schema.StscState r2;
        java.util.Map $r5, $r9;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl r0, $r11, r13;
        java.lang.Object $r6, $r10;
        javax.xml.namespace.QName $r1, $r4, r12;
        java.lang.String r3;
        org.apache.xmlbeans.SchemaType $r8;
        boolean $z0;

        r2 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r12 := @parameter0: javax.xml.namespace.QName;

        r3 := @parameter1: java.lang.String;

        r0 := @parameter2: org.apache.xmlbeans.impl.schema.SchemaTypeImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: javax.xml.namespace.QName getName()>();

        $r4 = specialinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: javax.xml.namespace.QName compatName(javax.xml.namespace.QName,java.lang.String)>(r12, r3);

        $z0 = virtualinvoke $r4.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r9 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _redefinedGlobalTypes>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r11 = (org.apache.xmlbeans.impl.schema.SchemaTypeImpl) $r10;

        return $r11;

     label1:
        $r5 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _globalTypes>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r13 = (org.apache.xmlbeans.impl.schema.SchemaTypeImpl) $r6;

        if r13 != null goto label2;

        $r7 = r2.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.SchemaTypeLoader _importingLoader>;

        $r8 = interfaceinvoke $r7.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaType findType(javax.xml.namespace.QName)>($r4);

        r13 = (org.apache.xmlbeans.impl.schema.SchemaTypeImpl) $r8;

     label2:
        return r13;
    }

    void addGlobalType(org.apache.xmlbeans.impl.schema.SchemaTypeImpl, org.apache.xmlbeans.impl.schema.SchemaTypeImpl)
    {
        org.apache.xmlbeans.impl.schema.StscState r2;
        java.util.Map $r6, $r7, $r11, $r18, $r23, $r24, $r28, $r35;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl r0, r5;
        org.apache.xmlbeans.SchemaType $r13, $r20, $r30, $r37;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        javax.xml.namespace.QName $r1;
        java.lang.Object[] $r9, $r16, $r26, $r33;
        java.lang.AssertionError $r40;
        org.apache.xmlbeans.impl.schema.SchemaContainer $r4, $r41;
        org.apache.xmlbeans.SchemaType$Ref $r8, $r25;
        java.lang.String $r3, $r10, $r14, $r17, $r21, $r27, $r31, $r34, $r38;
        org.apache.xmlbeans.XmlObject $r15, $r22, $r32, $r39;
        java.lang.Object $r12, $r19, $r29, $r36;

        r2 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r0 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaTypeImpl;

        r5 := @parameter1: org.apache.xmlbeans.impl.schema.SchemaTypeImpl;

        if r0 == null goto label8;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: javax.xml.namespace.QName getName()>();

        $r3 = virtualinvoke $r1.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r4 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)>($r3);

        $z0 = <org.apache.xmlbeans.impl.schema.StscState: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if $r4 == null goto label1;

        $r41 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer()>();

        if $r4 == $r41 goto label2;

     label1:
        $r40 = new java.lang.AssertionError;

        specialinvoke $r40.<java.lang.AssertionError: void <init>()>();

        throw $r40;

     label2:
        if r5 == null goto label5;

        $r23 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _redefinedGlobalTypes>;

        $z4 = interfaceinvoke $r23.<java.util.Map: boolean containsKey(java.lang.Object)>(r5);

        if $z4 == 0 goto label4;

        $z5 = specialinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: boolean ignoreMdef(javax.xml.namespace.QName)>($r1);

        if $z5 != 0 goto label8;

        $z6 = r2.<org.apache.xmlbeans.impl.schema.StscState: boolean _mdefAll>;

        if $z6 == 0 goto label3;

        $r33 = newarray (java.lang.Object)[3];

        $r33[0] = "global type";

        $r34 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>($r1);

        $r33[1] = $r34;

        $r35 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _redefinedGlobalTypes>;

        $r36 = interfaceinvoke $r35.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        $r37 = (org.apache.xmlbeans.SchemaType) $r36;

        $r38 = interfaceinvoke $r37.<org.apache.xmlbeans.SchemaType: java.lang.String getSourceName()>();

        $r33[2] = $r38;

        $r39 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: org.apache.xmlbeans.XmlObject getParseObject()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: void warning(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("sch-props-correct.2", $r33, $r39);

        goto label8;

     label3:
        $r26 = newarray (java.lang.Object)[3];

        $r26[0] = "global type";

        $r27 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>($r1);

        $r26[1] = $r27;

        $r28 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _redefinedGlobalTypes>;

        $r29 = interfaceinvoke $r28.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        $r30 = (org.apache.xmlbeans.SchemaType) $r29;

        $r31 = interfaceinvoke $r30.<org.apache.xmlbeans.SchemaType: java.lang.String getSourceName()>();

        $r26[2] = $r31;

        $r32 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: org.apache.xmlbeans.XmlObject getParseObject()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("sch-props-correct.2", $r26, $r32);

        goto label8;

     label4:
        $r24 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _redefinedGlobalTypes>;

        interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r0);

        $r25 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: org.apache.xmlbeans.SchemaType$Ref getRef()>();

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaContainer: void addRedefinedType(org.apache.xmlbeans.SchemaType$Ref)>($r25);

        goto label8;

     label5:
        $r6 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _globalTypes>;

        $z1 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        if $z1 == 0 goto label7;

        $z2 = specialinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: boolean ignoreMdef(javax.xml.namespace.QName)>($r1);

        if $z2 != 0 goto label8;

        $z3 = r2.<org.apache.xmlbeans.impl.schema.StscState: boolean _mdefAll>;

        if $z3 == 0 goto label6;

        $r16 = newarray (java.lang.Object)[3];

        $r16[0] = "global type";

        $r17 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>($r1);

        $r16[1] = $r17;

        $r18 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _globalTypes>;

        $r19 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r20 = (org.apache.xmlbeans.SchemaType) $r19;

        $r21 = interfaceinvoke $r20.<org.apache.xmlbeans.SchemaType: java.lang.String getSourceName()>();

        $r16[2] = $r21;

        $r22 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: org.apache.xmlbeans.XmlObject getParseObject()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: void warning(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("sch-props-correct.2", $r16, $r22);

        goto label8;

     label6:
        $r9 = newarray (java.lang.Object)[3];

        $r9[0] = "global type";

        $r10 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>($r1);

        $r9[1] = $r10;

        $r11 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _globalTypes>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r13 = (org.apache.xmlbeans.SchemaType) $r12;

        $r14 = interfaceinvoke $r13.<org.apache.xmlbeans.SchemaType: java.lang.String getSourceName()>();

        $r9[2] = $r14;

        $r15 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: org.apache.xmlbeans.XmlObject getParseObject()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("sch-props-correct.2", $r9, $r15);

        goto label8;

     label7:
        $r7 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _globalTypes>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r0);

        $r8 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: org.apache.xmlbeans.SchemaType$Ref getRef()>();

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaContainer: void addGlobalType(org.apache.xmlbeans.SchemaType$Ref)>($r8);

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: void addSpelling(javax.xml.namespace.QName,org.apache.xmlbeans.SchemaComponent)>($r1, r0);

     label8:
        return;
    }

    private boolean ignoreMdef(javax.xml.namespace.QName)
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.util.Set $r2;
        javax.xml.namespace.QName r1;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: javax.xml.namespace.QName;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Set _mdefNamespaces>;

        $r3 = virtualinvoke r1.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        return $z0;
    }

    org.apache.xmlbeans.SchemaType[] globalTypes()
    {
        org.apache.xmlbeans.SchemaType[] $r4, $r6, $r7;
        java.lang.Object[] $r5;
        java.util.Collection $r2;
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.util.Map $r1, $r3;
        int $i0;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _globalTypes>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _globalTypes>;

        $i0 = interfaceinvoke $r3.<java.util.Map: int size()>();

        $r4 = newarray (org.apache.xmlbeans.SchemaType)[$i0];

        $r5 = interfaceinvoke $r2.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (org.apache.xmlbeans.SchemaType[]) $r5;

        $r7 = (org.apache.xmlbeans.SchemaType[]) $r6;

        return $r7;
    }

    org.apache.xmlbeans.SchemaType[] redefinedGlobalTypes()
    {
        org.apache.xmlbeans.SchemaType[] $r4, $r6, $r7;
        java.lang.Object[] $r5;
        java.util.Collection $r2;
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.util.Map $r1, $r3;
        int $i0;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _redefinedGlobalTypes>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _redefinedGlobalTypes>;

        $i0 = interfaceinvoke $r3.<java.util.Map: int size()>();

        $r4 = newarray (org.apache.xmlbeans.SchemaType)[$i0];

        $r5 = interfaceinvoke $r2.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (org.apache.xmlbeans.SchemaType[]) $r5;

        $r7 = (org.apache.xmlbeans.SchemaType[]) $r6;

        return $r7;
    }

    org.apache.xmlbeans.impl.schema.SchemaTypeImpl findDocumentType(javax.xml.namespace.QName, java.lang.String, java.lang.String)
    {
        org.apache.xmlbeans.SchemaTypeLoader $r7;
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.util.Map $r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl r10;
        java.lang.Object $r4;
        java.lang.String r1, r5, $r6;
        javax.xml.namespace.QName $r2, r9;
        org.apache.xmlbeans.SchemaType $r8;
        boolean z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r9 := @parameter0: javax.xml.namespace.QName;

        r1 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.StscState: javax.xml.namespace.QName compatName(javax.xml.namespace.QName,java.lang.String)>(r9, r1);

        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _documentTypes>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r10 = (org.apache.xmlbeans.impl.schema.SchemaTypeImpl) $r4;

        z0 = 0;

        if r10 != null goto label3;

        $r7 = r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.SchemaTypeLoader _importingLoader>;

        $r8 = interfaceinvoke $r7.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaType findDocumentType(javax.xml.namespace.QName)>($r2);

        r10 = (org.apache.xmlbeans.impl.schema.SchemaTypeImpl) $r8;

        if r10 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

     label3:
        if z0 != 0 goto label4;

        if r5 == null goto label4;

        $r6 = virtualinvoke $r2.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.StscState: void registerDependency(java.lang.String,java.lang.String)>(r5, $r6);

     label4:
        return r10;
    }

    void addDocumentType(org.apache.xmlbeans.impl.schema.SchemaTypeImpl, javax.xml.namespace.QName)
    {
        java.lang.Object[] $r10, $r17;
        java.lang.AssertionError $r8;
        org.apache.xmlbeans.impl.schema.StscState r0;
        org.apache.xmlbeans.impl.schema.SchemaContainer $r6, $r9;
        java.util.Map $r2, $r4, $r12, $r19;
        org.apache.xmlbeans.SchemaType$Ref $r7;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl r3;
        org.apache.xmlbeans.SchemaComponent $r14, $r21;
        java.lang.String $r5, $r11, $r15, $r18, $r22;
        org.apache.xmlbeans.XmlObject $r16, $r23;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r13, $r20;
        javax.xml.namespace.QName r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r3 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaTypeImpl;

        r1 := @parameter1: javax.xml.namespace.QName;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _documentTypes>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $z2 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.StscState: boolean ignoreMdef(javax.xml.namespace.QName)>(r1);

        if $z2 != 0 goto label5;

        $z3 = r0.<org.apache.xmlbeans.impl.schema.StscState: boolean _mdefAll>;

        if $z3 == 0 goto label1;

        $r17 = newarray (java.lang.Object)[3];

        $r17[0] = "global element";

        $r18 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>(r1);

        $r17[1] = $r18;

        $r19 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _documentTypes>;

        $r20 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r21 = (org.apache.xmlbeans.SchemaComponent) $r20;

        $r22 = interfaceinvoke $r21.<org.apache.xmlbeans.SchemaComponent: java.lang.String getSourceName()>();

        $r17[2] = $r22;

        $r23 = virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: org.apache.xmlbeans.XmlObject getParseObject()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.StscState: void warning(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("sch-props-correct.2", $r17, $r23);

        goto label5;

     label1:
        $r10 = newarray (java.lang.Object)[3];

        $r10[0] = "global element";

        $r11 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>(r1);

        $r10[1] = $r11;

        $r12 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _documentTypes>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r14 = (org.apache.xmlbeans.SchemaComponent) $r13;

        $r15 = interfaceinvoke $r14.<org.apache.xmlbeans.SchemaComponent: java.lang.String getSourceName()>();

        $r10[2] = $r15;

        $r16 = virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: org.apache.xmlbeans.XmlObject getParseObject()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("sch-props-correct.2", $r10, $r16);

        goto label5;

     label2:
        $r4 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _documentTypes>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);

        $r5 = virtualinvoke r1.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)>($r5);

        $z1 = <org.apache.xmlbeans.impl.schema.StscState: boolean $assertionsDisabled>;

        if $z1 != 0 goto label4;

        if $r6 == null goto label3;

        $r9 = virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer()>();

        if $r6 == $r9 goto label4;

     label3:
        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label4:
        $r7 = virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: org.apache.xmlbeans.SchemaType$Ref getRef()>();

        virtualinvoke $r6.<org.apache.xmlbeans.impl.schema.SchemaContainer: void addDocumentType(org.apache.xmlbeans.SchemaType$Ref)>($r7);

     label5:
        return;
    }

    org.apache.xmlbeans.SchemaType[] documentTypes()
    {
        org.apache.xmlbeans.SchemaType[] $r4, $r6, $r7;
        java.lang.Object[] $r5;
        java.util.Collection $r2;
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.util.Map $r1, $r3;
        int $i0;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _documentTypes>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _documentTypes>;

        $i0 = interfaceinvoke $r3.<java.util.Map: int size()>();

        $r4 = newarray (org.apache.xmlbeans.SchemaType)[$i0];

        $r5 = interfaceinvoke $r2.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (org.apache.xmlbeans.SchemaType[]) $r5;

        $r7 = (org.apache.xmlbeans.SchemaType[]) $r6;

        return $r7;
    }

    org.apache.xmlbeans.impl.schema.SchemaTypeImpl findAttributeType(javax.xml.namespace.QName, java.lang.String, java.lang.String)
    {
        org.apache.xmlbeans.SchemaTypeLoader $r7;
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.util.Map $r3;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl r10;
        java.lang.Object $r4;
        java.lang.String r1, r5, $r6;
        javax.xml.namespace.QName $r2, r9;
        org.apache.xmlbeans.SchemaType $r8;
        boolean z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r9 := @parameter0: javax.xml.namespace.QName;

        r1 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.StscState: javax.xml.namespace.QName compatName(javax.xml.namespace.QName,java.lang.String)>(r9, r1);

        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _attributeTypes>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r10 = (org.apache.xmlbeans.impl.schema.SchemaTypeImpl) $r4;

        z0 = 0;

        if r10 != null goto label3;

        $r7 = r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.SchemaTypeLoader _importingLoader>;

        $r8 = interfaceinvoke $r7.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaType findAttributeType(javax.xml.namespace.QName)>($r2);

        r10 = (org.apache.xmlbeans.impl.schema.SchemaTypeImpl) $r8;

        if r10 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

     label3:
        if z0 != 0 goto label4;

        if r5 == null goto label4;

        $r6 = virtualinvoke $r2.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.StscState: void registerDependency(java.lang.String,java.lang.String)>(r5, $r6);

     label4:
        return r10;
    }

    void addAttributeType(org.apache.xmlbeans.impl.schema.SchemaTypeImpl, javax.xml.namespace.QName)
    {
        java.lang.Object[] $r10, $r17;
        java.lang.AssertionError $r8;
        org.apache.xmlbeans.impl.schema.StscState r0;
        org.apache.xmlbeans.impl.schema.SchemaContainer $r6, $r9;
        java.util.Map $r2, $r4, $r12, $r19;
        org.apache.xmlbeans.SchemaType$Ref $r7;
        org.apache.xmlbeans.impl.schema.SchemaTypeImpl r3;
        org.apache.xmlbeans.SchemaComponent $r14, $r21;
        java.lang.String $r5, $r11, $r15, $r18, $r22;
        org.apache.xmlbeans.XmlObject $r16, $r23;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r13, $r20;
        javax.xml.namespace.QName r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r3 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaTypeImpl;

        r1 := @parameter1: javax.xml.namespace.QName;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _attributeTypes>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $z2 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.StscState: boolean ignoreMdef(javax.xml.namespace.QName)>(r1);

        if $z2 != 0 goto label5;

        $z3 = r0.<org.apache.xmlbeans.impl.schema.StscState: boolean _mdefAll>;

        if $z3 == 0 goto label1;

        $r17 = newarray (java.lang.Object)[3];

        $r17[0] = "global attribute";

        $r18 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>(r1);

        $r17[1] = $r18;

        $r19 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _attributeTypes>;

        $r20 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r21 = (org.apache.xmlbeans.SchemaComponent) $r20;

        $r22 = interfaceinvoke $r21.<org.apache.xmlbeans.SchemaComponent: java.lang.String getSourceName()>();

        $r17[2] = $r22;

        $r23 = virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: org.apache.xmlbeans.XmlObject getParseObject()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.StscState: void warning(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("sch-props-correct.2", $r17, $r23);

        goto label5;

     label1:
        $r10 = newarray (java.lang.Object)[3];

        $r10[0] = "global attribute";

        $r11 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>(r1);

        $r10[1] = $r11;

        $r12 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _attributeTypes>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r14 = (org.apache.xmlbeans.SchemaComponent) $r13;

        $r15 = interfaceinvoke $r14.<org.apache.xmlbeans.SchemaComponent: java.lang.String getSourceName()>();

        $r10[2] = $r15;

        $r16 = virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: org.apache.xmlbeans.XmlObject getParseObject()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("sch-props-correct.2", $r10, $r16);

        goto label5;

     label2:
        $r4 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _attributeTypes>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);

        $r5 = virtualinvoke r1.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)>($r5);

        $z1 = <org.apache.xmlbeans.impl.schema.StscState: boolean $assertionsDisabled>;

        if $z1 != 0 goto label4;

        if $r6 == null goto label3;

        $r9 = virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer()>();

        if $r6 == $r9 goto label4;

     label3:
        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label4:
        $r7 = virtualinvoke r3.<org.apache.xmlbeans.impl.schema.SchemaTypeImpl: org.apache.xmlbeans.SchemaType$Ref getRef()>();

        virtualinvoke $r6.<org.apache.xmlbeans.impl.schema.SchemaContainer: void addAttributeType(org.apache.xmlbeans.SchemaType$Ref)>($r7);

     label5:
        return;
    }

    org.apache.xmlbeans.SchemaType[] attributeTypes()
    {
        org.apache.xmlbeans.SchemaType[] $r4, $r6, $r7;
        java.lang.Object[] $r5;
        java.util.Collection $r2;
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.util.Map $r1, $r3;
        int $i0;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _attributeTypes>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _attributeTypes>;

        $i0 = interfaceinvoke $r3.<java.util.Map: int size()>();

        $r4 = newarray (org.apache.xmlbeans.SchemaType)[$i0];

        $r5 = interfaceinvoke $r2.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (org.apache.xmlbeans.SchemaType[]) $r5;

        $r7 = (org.apache.xmlbeans.SchemaType[]) $r6;

        return $r7;
    }

    org.apache.xmlbeans.impl.schema.SchemaGlobalAttributeImpl findGlobalAttribute(javax.xml.namespace.QName, java.lang.String, java.lang.String)
    {
        org.apache.xmlbeans.SchemaTypeLoader $r7;
        org.apache.xmlbeans.SchemaGlobalAttribute $r8;
        org.apache.xmlbeans.impl.schema.StscState r0;
        org.apache.xmlbeans.impl.schema.SchemaGlobalAttributeImpl r10;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.lang.String r1, r5, $r6;
        javax.xml.namespace.QName $r2, r9;
        boolean z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r9 := @parameter0: javax.xml.namespace.QName;

        r1 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.StscState: javax.xml.namespace.QName compatName(javax.xml.namespace.QName,java.lang.String)>(r9, r1);

        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _globalAttributes>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r10 = (org.apache.xmlbeans.impl.schema.SchemaGlobalAttributeImpl) $r4;

        z0 = 0;

        if r10 != null goto label3;

        $r7 = r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.SchemaTypeLoader _importingLoader>;

        $r8 = interfaceinvoke $r7.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaGlobalAttribute findAttribute(javax.xml.namespace.QName)>($r2);

        r10 = (org.apache.xmlbeans.impl.schema.SchemaGlobalAttributeImpl) $r8;

        if r10 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

     label3:
        if z0 != 0 goto label4;

        if r5 == null goto label4;

        $r6 = virtualinvoke $r2.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.StscState: void registerDependency(java.lang.String,java.lang.String)>(r5, $r6);

     label4:
        return r10;
    }

    void addGlobalAttribute(org.apache.xmlbeans.impl.schema.SchemaGlobalAttributeImpl)
    {
        java.lang.AssertionError $r7;
        org.apache.xmlbeans.SchemaGlobalAttribute$Ref $r6;
        org.apache.xmlbeans.impl.schema.SchemaGlobalAttributeImpl r0;
        org.apache.xmlbeans.impl.schema.StscState r2;
        org.apache.xmlbeans.impl.schema.SchemaContainer $r5, $r8;
        java.util.Map $r3;
        javax.xml.namespace.QName $r1;
        java.lang.String $r4;
        boolean $z0;

        r2 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r0 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaGlobalAttributeImpl;

        if r0 == null goto label3;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaGlobalAttributeImpl: javax.xml.namespace.QName getName()>();

        $r3 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _globalAttributes>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r0);

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: void addSpelling(javax.xml.namespace.QName,org.apache.xmlbeans.SchemaComponent)>($r1, r0);

        $r4 = virtualinvoke $r1.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r5 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)>($r4);

        $z0 = <org.apache.xmlbeans.impl.schema.StscState: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if $r5 == null goto label1;

        $r8 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaGlobalAttributeImpl: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer()>();

        if $r5 == $r8 goto label2;

     label1:
        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label2:
        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaGlobalAttributeImpl: org.apache.xmlbeans.SchemaGlobalAttribute$Ref getRef()>();

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaContainer: void addGlobalAttribute(org.apache.xmlbeans.SchemaGlobalAttribute$Ref)>($r6);

     label3:
        return;
    }

    org.apache.xmlbeans.SchemaGlobalAttribute[] globalAttributes()
    {
        java.lang.Object[] $r5;
        java.util.Collection $r2;
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.util.Map $r1, $r3;
        int $i0;
        org.apache.xmlbeans.SchemaGlobalAttribute[] $r4, $r6, $r7;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _globalAttributes>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _globalAttributes>;

        $i0 = interfaceinvoke $r3.<java.util.Map: int size()>();

        $r4 = newarray (org.apache.xmlbeans.SchemaGlobalAttribute)[$i0];

        $r5 = interfaceinvoke $r2.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (org.apache.xmlbeans.SchemaGlobalAttribute[]) $r5;

        $r7 = (org.apache.xmlbeans.SchemaGlobalAttribute[]) $r6;

        return $r7;
    }

    org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl findGlobalElement(javax.xml.namespace.QName, java.lang.String, java.lang.String)
    {
        org.apache.xmlbeans.SchemaTypeLoader $r7;
        org.apache.xmlbeans.SchemaGlobalElement $r8;
        org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl r10;
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.lang.String r1, r5, $r6;
        javax.xml.namespace.QName $r2, r9;
        boolean z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r9 := @parameter0: javax.xml.namespace.QName;

        r1 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.StscState: javax.xml.namespace.QName compatName(javax.xml.namespace.QName,java.lang.String)>(r9, r1);

        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _globalElements>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r10 = (org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl) $r4;

        z0 = 0;

        if r10 != null goto label3;

        $r7 = r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.SchemaTypeLoader _importingLoader>;

        $r8 = interfaceinvoke $r7.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaGlobalElement findElement(javax.xml.namespace.QName)>($r2);

        r10 = (org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl) $r8;

        if r10 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

     label3:
        if z0 != 0 goto label4;

        if r5 == null goto label4;

        $r6 = virtualinvoke $r2.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.StscState: void registerDependency(java.lang.String,java.lang.String)>(r5, $r6);

     label4:
        return r10;
    }

    void addGlobalElement(org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl)
    {
        org.apache.xmlbeans.SchemaGlobalElement$Ref $r6;
        java.lang.AssertionError $r7;
        org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl r0;
        org.apache.xmlbeans.impl.schema.StscState r2;
        org.apache.xmlbeans.impl.schema.SchemaContainer $r5, $r8;
        java.util.Map $r3;
        javax.xml.namespace.QName $r1;
        java.lang.String $r4;
        boolean $z0;

        r2 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r0 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl;

        if r0 == null goto label3;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl: javax.xml.namespace.QName getName()>();

        $r3 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _globalElements>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r0);

        $r4 = virtualinvoke $r1.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r5 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)>($r4);

        $z0 = <org.apache.xmlbeans.impl.schema.StscState: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if $r5 == null goto label1;

        $r8 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer()>();

        if $r5 == $r8 goto label2;

     label1:
        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label2:
        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaGlobalElementImpl: org.apache.xmlbeans.SchemaGlobalElement$Ref getRef()>();

        virtualinvoke $r5.<org.apache.xmlbeans.impl.schema.SchemaContainer: void addGlobalElement(org.apache.xmlbeans.SchemaGlobalElement$Ref)>($r6);

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: void addSpelling(javax.xml.namespace.QName,org.apache.xmlbeans.SchemaComponent)>($r1, r0);

     label3:
        return;
    }

    org.apache.xmlbeans.SchemaGlobalElement[] globalElements()
    {
        java.lang.Object[] $r5;
        java.util.Collection $r2;
        org.apache.xmlbeans.impl.schema.StscState r0;
        org.apache.xmlbeans.SchemaGlobalElement[] $r4, $r6, $r7;
        java.util.Map $r1, $r3;
        int $i0;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _globalElements>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _globalElements>;

        $i0 = interfaceinvoke $r3.<java.util.Map: int size()>();

        $r4 = newarray (org.apache.xmlbeans.SchemaGlobalElement)[$i0];

        $r5 = interfaceinvoke $r2.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (org.apache.xmlbeans.SchemaGlobalElement[]) $r5;

        $r7 = (org.apache.xmlbeans.SchemaGlobalElement[]) $r6;

        return $r7;
    }

    org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl findAttributeGroup(javax.xml.namespace.QName, java.lang.String, java.lang.String)
    {
        org.apache.xmlbeans.SchemaAttributeGroup $r8;
        org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl r10;
        org.apache.xmlbeans.SchemaTypeLoader $r7;
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.lang.String r1, r5, $r6;
        javax.xml.namespace.QName $r2, r9;
        boolean z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r9 := @parameter0: javax.xml.namespace.QName;

        r1 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.StscState: javax.xml.namespace.QName compatName(javax.xml.namespace.QName,java.lang.String)>(r9, r1);

        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _attributeGroups>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r10 = (org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl) $r4;

        z0 = 0;

        if r10 != null goto label3;

        $r7 = r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.SchemaTypeLoader _importingLoader>;

        $r8 = interfaceinvoke $r7.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaAttributeGroup findAttributeGroup(javax.xml.namespace.QName)>($r2);

        r10 = (org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl) $r8;

        if r10 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

     label3:
        if z0 != 0 goto label4;

        if r5 == null goto label4;

        $r6 = virtualinvoke $r2.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.StscState: void registerDependency(java.lang.String,java.lang.String)>(r5, $r6);

     label4:
        return r10;
    }

    org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl findRedefinedAttributeGroup(javax.xml.namespace.QName, java.lang.String, org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl)
    {
        org.apache.xmlbeans.SchemaAttributeGroup $r8;
        org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl r0, $r11, r13;
        org.apache.xmlbeans.SchemaTypeLoader $r7;
        org.apache.xmlbeans.impl.schema.StscState r2;
        java.util.Map $r5, $r9;
        java.lang.Object $r6, $r10;
        javax.xml.namespace.QName $r1, $r4, r12;
        java.lang.String r3;
        boolean $z0;

        r2 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r12 := @parameter0: javax.xml.namespace.QName;

        r3 := @parameter1: java.lang.String;

        r0 := @parameter2: org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl: javax.xml.namespace.QName getName()>();

        $r4 = specialinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: javax.xml.namespace.QName compatName(javax.xml.namespace.QName,java.lang.String)>(r12, r3);

        $z0 = virtualinvoke $r4.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r9 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _redefinedAttributeGroups>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r11 = (org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl) $r10;

        return $r11;

     label1:
        $r5 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _attributeGroups>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r13 = (org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl) $r6;

        if r13 != null goto label2;

        $r7 = r2.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.SchemaTypeLoader _importingLoader>;

        $r8 = interfaceinvoke $r7.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaAttributeGroup findAttributeGroup(javax.xml.namespace.QName)>($r4);

        r13 = (org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl) $r8;

     label2:
        return r13;
    }

    void addAttributeGroup(org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl, org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl)
    {
        org.apache.xmlbeans.impl.schema.StscState r2;
        java.util.Map $r6, $r7, $r13, $r20, $r25, $r26, $r30, $r37;
        org.apache.xmlbeans.SchemaAttributeGroup$Ref $r10, $r27;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl r0, r5;
        javax.xml.namespace.QName $r1, $r8, $r9;
        java.lang.Object[] $r11, $r18, $r28, $r35;
        java.lang.AssertionError $r42;
        org.apache.xmlbeans.impl.schema.SchemaContainer $r4, $r43;
        org.apache.xmlbeans.SchemaComponent $r15, $r22, $r32, $r39;
        java.lang.String $r3, $r12, $r16, $r19, $r23, $r29, $r33, $r36, $r40;
        org.apache.xmlbeans.XmlObject $r17, $r24, $r34, $r41;
        java.lang.Object $r14, $r21, $r31, $r38;

        r2 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r0 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl;

        r5 := @parameter1: org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl;

        if r0 == null goto label8;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl: javax.xml.namespace.QName getName()>();

        $r3 = virtualinvoke $r1.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r4 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)>($r3);

        $z0 = <org.apache.xmlbeans.impl.schema.StscState: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if $r4 == null goto label1;

        $r43 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer()>();

        if $r4 == $r43 goto label2;

     label1:
        $r42 = new java.lang.AssertionError;

        specialinvoke $r42.<java.lang.AssertionError: void <init>()>();

        throw $r42;

     label2:
        if r5 == null goto label5;

        $r25 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _redefinedAttributeGroups>;

        $z4 = interfaceinvoke $r25.<java.util.Map: boolean containsKey(java.lang.Object)>(r5);

        if $z4 == 0 goto label4;

        $z5 = specialinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: boolean ignoreMdef(javax.xml.namespace.QName)>($r1);

        if $z5 != 0 goto label8;

        $z6 = r2.<org.apache.xmlbeans.impl.schema.StscState: boolean _mdefAll>;

        if $z6 == 0 goto label3;

        $r35 = newarray (java.lang.Object)[3];

        $r35[0] = "attribute group";

        $r36 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>($r1);

        $r35[1] = $r36;

        $r37 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _redefinedAttributeGroups>;

        $r38 = interfaceinvoke $r37.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        $r39 = (org.apache.xmlbeans.SchemaComponent) $r38;

        $r40 = interfaceinvoke $r39.<org.apache.xmlbeans.SchemaComponent: java.lang.String getSourceName()>();

        $r35[2] = $r40;

        $r41 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl: org.apache.xmlbeans.XmlObject getParseObject()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: void warning(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("sch-props-correct.2", $r35, $r41);

        goto label8;

     label3:
        $r28 = newarray (java.lang.Object)[3];

        $r28[0] = "attribute group";

        $r29 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>($r1);

        $r28[1] = $r29;

        $r30 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _redefinedAttributeGroups>;

        $r31 = interfaceinvoke $r30.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        $r32 = (org.apache.xmlbeans.SchemaComponent) $r31;

        $r33 = interfaceinvoke $r32.<org.apache.xmlbeans.SchemaComponent: java.lang.String getSourceName()>();

        $r28[2] = $r33;

        $r34 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl: org.apache.xmlbeans.XmlObject getParseObject()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("sch-props-correct.2", $r28, $r34);

        goto label8;

     label4:
        $r26 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _redefinedAttributeGroups>;

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r0);

        $r27 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl: org.apache.xmlbeans.SchemaAttributeGroup$Ref getRef()>();

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaContainer: void addRedefinedAttributeGroup(org.apache.xmlbeans.SchemaAttributeGroup$Ref)>($r27);

        goto label8;

     label5:
        $r6 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _attributeGroups>;

        $z1 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        if $z1 == 0 goto label7;

        $z2 = specialinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: boolean ignoreMdef(javax.xml.namespace.QName)>($r1);

        if $z2 != 0 goto label8;

        $z3 = r2.<org.apache.xmlbeans.impl.schema.StscState: boolean _mdefAll>;

        if $z3 == 0 goto label6;

        $r18 = newarray (java.lang.Object)[3];

        $r18[0] = "attribute group";

        $r19 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>($r1);

        $r18[1] = $r19;

        $r20 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _attributeGroups>;

        $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r22 = (org.apache.xmlbeans.SchemaComponent) $r21;

        $r23 = interfaceinvoke $r22.<org.apache.xmlbeans.SchemaComponent: java.lang.String getSourceName()>();

        $r18[2] = $r23;

        $r24 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl: org.apache.xmlbeans.XmlObject getParseObject()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: void warning(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("sch-props-correct.2", $r18, $r24);

        goto label8;

     label6:
        $r11 = newarray (java.lang.Object)[3];

        $r11[0] = "attribute group";

        $r12 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>($r1);

        $r11[1] = $r12;

        $r13 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _attributeGroups>;

        $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r15 = (org.apache.xmlbeans.SchemaComponent) $r14;

        $r16 = interfaceinvoke $r15.<org.apache.xmlbeans.SchemaComponent: java.lang.String getSourceName()>();

        $r11[2] = $r16;

        $r17 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl: org.apache.xmlbeans.XmlObject getParseObject()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("sch-props-correct.2", $r11, $r17);

        goto label8;

     label7:
        $r7 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _attributeGroups>;

        $r8 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl: javax.xml.namespace.QName getName()>();

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r0);

        $r9 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl: javax.xml.namespace.QName getName()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: void addSpelling(javax.xml.namespace.QName,org.apache.xmlbeans.SchemaComponent)>($r9, r0);

        $r10 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaAttributeGroupImpl: org.apache.xmlbeans.SchemaAttributeGroup$Ref getRef()>();

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaContainer: void addAttributeGroup(org.apache.xmlbeans.SchemaAttributeGroup$Ref)>($r10);

     label8:
        return;
    }

    org.apache.xmlbeans.SchemaAttributeGroup[] attributeGroups()
    {
        java.lang.Object[] $r5;
        java.util.Collection $r2;
        org.apache.xmlbeans.SchemaAttributeGroup[] $r4, $r6, $r7;
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.util.Map $r1, $r3;
        int $i0;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _attributeGroups>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _attributeGroups>;

        $i0 = interfaceinvoke $r3.<java.util.Map: int size()>();

        $r4 = newarray (org.apache.xmlbeans.SchemaAttributeGroup)[$i0];

        $r5 = interfaceinvoke $r2.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (org.apache.xmlbeans.SchemaAttributeGroup[]) $r5;

        $r7 = (org.apache.xmlbeans.SchemaAttributeGroup[]) $r6;

        return $r7;
    }

    org.apache.xmlbeans.SchemaAttributeGroup[] redefinedAttributeGroups()
    {
        java.lang.Object[] $r5;
        java.util.Collection $r2;
        org.apache.xmlbeans.SchemaAttributeGroup[] $r4, $r6, $r7;
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.util.Map $r1, $r3;
        int $i0;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _redefinedAttributeGroups>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _redefinedAttributeGroups>;

        $i0 = interfaceinvoke $r3.<java.util.Map: int size()>();

        $r4 = newarray (org.apache.xmlbeans.SchemaAttributeGroup)[$i0];

        $r5 = interfaceinvoke $r2.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (org.apache.xmlbeans.SchemaAttributeGroup[]) $r5;

        $r7 = (org.apache.xmlbeans.SchemaAttributeGroup[]) $r6;

        return $r7;
    }

    org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl findModelGroup(javax.xml.namespace.QName, java.lang.String, java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl r10;
        org.apache.xmlbeans.SchemaTypeLoader $r7;
        org.apache.xmlbeans.SchemaModelGroup $r8;
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.lang.String r1, r5, $r6;
        javax.xml.namespace.QName $r2, r9;
        boolean z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r9 := @parameter0: javax.xml.namespace.QName;

        r1 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.StscState: javax.xml.namespace.QName compatName(javax.xml.namespace.QName,java.lang.String)>(r9, r1);

        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _modelGroups>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        r10 = (org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl) $r4;

        z0 = 0;

        if r10 != null goto label3;

        $r7 = r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.SchemaTypeLoader _importingLoader>;

        $r8 = interfaceinvoke $r7.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaModelGroup findModelGroup(javax.xml.namespace.QName)>($r2);

        r10 = (org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl) $r8;

        if r10 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

     label3:
        if z0 != 0 goto label4;

        if r5 == null goto label4;

        $r6 = virtualinvoke $r2.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.StscState: void registerDependency(java.lang.String,java.lang.String)>(r5, $r6);

     label4:
        return r10;
    }

    org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl findRedefinedModelGroup(javax.xml.namespace.QName, java.lang.String, org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl)
    {
        org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl r0, $r11, r13;
        org.apache.xmlbeans.SchemaTypeLoader $r7;
        org.apache.xmlbeans.SchemaModelGroup $r8;
        org.apache.xmlbeans.impl.schema.StscState r2;
        java.util.Map $r5, $r9;
        java.lang.Object $r6, $r10;
        javax.xml.namespace.QName $r1, $r4, r12;
        java.lang.String r3;
        boolean $z0;

        r2 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r12 := @parameter0: javax.xml.namespace.QName;

        r3 := @parameter1: java.lang.String;

        r0 := @parameter2: org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl: javax.xml.namespace.QName getName()>();

        $r4 = specialinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: javax.xml.namespace.QName compatName(javax.xml.namespace.QName,java.lang.String)>(r12, r3);

        $z0 = virtualinvoke $r4.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r9 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _redefinedModelGroups>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r11 = (org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl) $r10;

        return $r11;

     label1:
        $r5 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _modelGroups>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r13 = (org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl) $r6;

        if r13 != null goto label2;

        $r7 = r2.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.SchemaTypeLoader _importingLoader>;

        $r8 = interfaceinvoke $r7.<org.apache.xmlbeans.SchemaTypeLoader: org.apache.xmlbeans.SchemaModelGroup findModelGroup(javax.xml.namespace.QName)>($r4);

        r13 = (org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl) $r8;

     label2:
        return r13;
    }

    void addModelGroup(org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl, org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl)
    {
        org.apache.xmlbeans.impl.schema.StscState r2;
        java.util.Map $r6, $r7, $r13, $r20, $r25, $r26, $r30, $r37;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        javax.xml.namespace.QName $r1, $r8, $r9;
        java.lang.Object[] $r11, $r18, $r28, $r35;
        java.lang.AssertionError $r42;
        org.apache.xmlbeans.SchemaModelGroup$Ref $r10, $r27;
        org.apache.xmlbeans.impl.schema.SchemaContainer $r4, $r43;
        org.apache.xmlbeans.SchemaComponent $r15, $r22, $r32, $r39;
        java.lang.String $r3, $r12, $r16, $r19, $r23, $r29, $r33, $r36, $r40;
        org.apache.xmlbeans.XmlObject $r17, $r24, $r34, $r41;
        org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl r0, r5;
        java.lang.Object $r14, $r21, $r31, $r38;

        r2 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r0 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl;

        r5 := @parameter1: org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl;

        if r0 == null goto label8;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl: javax.xml.namespace.QName getName()>();

        $r3 = virtualinvoke $r1.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r4 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)>($r3);

        $z0 = <org.apache.xmlbeans.impl.schema.StscState: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if $r4 == null goto label1;

        $r43 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer()>();

        if $r4 == $r43 goto label2;

     label1:
        $r42 = new java.lang.AssertionError;

        specialinvoke $r42.<java.lang.AssertionError: void <init>()>();

        throw $r42;

     label2:
        if r5 == null goto label5;

        $r25 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _redefinedModelGroups>;

        $z4 = interfaceinvoke $r25.<java.util.Map: boolean containsKey(java.lang.Object)>(r5);

        if $z4 == 0 goto label4;

        $z5 = specialinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: boolean ignoreMdef(javax.xml.namespace.QName)>($r1);

        if $z5 != 0 goto label8;

        $z6 = r2.<org.apache.xmlbeans.impl.schema.StscState: boolean _mdefAll>;

        if $z6 == 0 goto label3;

        $r35 = newarray (java.lang.Object)[3];

        $r35[0] = "model group";

        $r36 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>($r1);

        $r35[1] = $r36;

        $r37 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _redefinedModelGroups>;

        $r38 = interfaceinvoke $r37.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        $r39 = (org.apache.xmlbeans.SchemaComponent) $r38;

        $r40 = interfaceinvoke $r39.<org.apache.xmlbeans.SchemaComponent: java.lang.String getSourceName()>();

        $r35[2] = $r40;

        $r41 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl: org.apache.xmlbeans.XmlObject getParseObject()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: void warning(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("sch-props-correct.2", $r35, $r41);

        goto label8;

     label3:
        $r28 = newarray (java.lang.Object)[3];

        $r28[0] = "model group";

        $r29 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>($r1);

        $r28[1] = $r29;

        $r30 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _redefinedModelGroups>;

        $r31 = interfaceinvoke $r30.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        $r32 = (org.apache.xmlbeans.SchemaComponent) $r31;

        $r33 = interfaceinvoke $r32.<org.apache.xmlbeans.SchemaComponent: java.lang.String getSourceName()>();

        $r28[2] = $r33;

        $r34 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl: org.apache.xmlbeans.XmlObject getParseObject()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("sch-props-correct.2", $r28, $r34);

        goto label8;

     label4:
        $r26 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _redefinedModelGroups>;

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r0);

        $r27 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl: org.apache.xmlbeans.SchemaModelGroup$Ref getRef()>();

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaContainer: void addRedefinedModelGroup(org.apache.xmlbeans.SchemaModelGroup$Ref)>($r27);

        goto label8;

     label5:
        $r6 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _modelGroups>;

        $z1 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        if $z1 == 0 goto label7;

        $z2 = specialinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: boolean ignoreMdef(javax.xml.namespace.QName)>($r1);

        if $z2 != 0 goto label8;

        $z3 = r2.<org.apache.xmlbeans.impl.schema.StscState: boolean _mdefAll>;

        if $z3 == 0 goto label6;

        $r18 = newarray (java.lang.Object)[3];

        $r18[0] = "model group";

        $r19 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>($r1);

        $r18[1] = $r19;

        $r20 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _modelGroups>;

        $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r22 = (org.apache.xmlbeans.SchemaComponent) $r21;

        $r23 = interfaceinvoke $r22.<org.apache.xmlbeans.SchemaComponent: java.lang.String getSourceName()>();

        $r18[2] = $r23;

        $r24 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl: org.apache.xmlbeans.XmlObject getParseObject()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: void warning(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("sch-props-correct.2", $r18, $r24);

        goto label8;

     label6:
        $r11 = newarray (java.lang.Object)[3];

        $r11[0] = "model group";

        $r12 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>($r1);

        $r11[1] = $r12;

        $r13 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _modelGroups>;

        $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r15 = (org.apache.xmlbeans.SchemaComponent) $r14;

        $r16 = interfaceinvoke $r15.<org.apache.xmlbeans.SchemaComponent: java.lang.String getSourceName()>();

        $r11[2] = $r16;

        $r17 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl: org.apache.xmlbeans.XmlObject getParseObject()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("sch-props-correct.2", $r11, $r17);

        goto label8;

     label7:
        $r7 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _modelGroups>;

        $r8 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl: javax.xml.namespace.QName getName()>();

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r0);

        $r9 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl: javax.xml.namespace.QName getName()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: void addSpelling(javax.xml.namespace.QName,org.apache.xmlbeans.SchemaComponent)>($r9, r0);

        $r10 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaModelGroupImpl: org.apache.xmlbeans.SchemaModelGroup$Ref getRef()>();

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaContainer: void addModelGroup(org.apache.xmlbeans.SchemaModelGroup$Ref)>($r10);

     label8:
        return;
    }

    org.apache.xmlbeans.SchemaModelGroup[] modelGroups()
    {
        java.lang.Object[] $r5;
        java.util.Collection $r2;
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.util.Map $r1, $r3;
        int $i0;
        org.apache.xmlbeans.SchemaModelGroup[] $r4, $r6, $r7;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _modelGroups>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _modelGroups>;

        $i0 = interfaceinvoke $r3.<java.util.Map: int size()>();

        $r4 = newarray (org.apache.xmlbeans.SchemaModelGroup)[$i0];

        $r5 = interfaceinvoke $r2.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (org.apache.xmlbeans.SchemaModelGroup[]) $r5;

        $r7 = (org.apache.xmlbeans.SchemaModelGroup[]) $r6;

        return $r7;
    }

    org.apache.xmlbeans.SchemaModelGroup[] redefinedModelGroups()
    {
        java.lang.Object[] $r5;
        java.util.Collection $r2;
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.util.Map $r1, $r3;
        int $i0;
        org.apache.xmlbeans.SchemaModelGroup[] $r4, $r6, $r7;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _redefinedModelGroups>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _redefinedModelGroups>;

        $i0 = interfaceinvoke $r3.<java.util.Map: int size()>();

        $r4 = newarray (org.apache.xmlbeans.SchemaModelGroup)[$i0];

        $r5 = interfaceinvoke $r2.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (org.apache.xmlbeans.SchemaModelGroup[]) $r5;

        $r7 = (org.apache.xmlbeans.SchemaModelGroup[]) $r6;

        return $r7;
    }

    org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl findIdConstraint(javax.xml.namespace.QName, java.lang.String, java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl $r6;
        java.util.Map $r4;
        java.lang.Object $r5;
        java.lang.String r1, r3, $r7;
        javax.xml.namespace.QName $r2, r8;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r8 := @parameter0: javax.xml.namespace.QName;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.StscState: javax.xml.namespace.QName compatName(javax.xml.namespace.QName,java.lang.String)>(r8, r1);

        if r3 == null goto label1;

        $r7 = virtualinvoke $r2.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        virtualinvoke r0.<org.apache.xmlbeans.impl.schema.StscState: void registerDependency(java.lang.String,java.lang.String)>(r3, $r7);

     label1:
        $r4 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _idConstraints>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r6 = (org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl) $r5;

        return $r6;
    }

    void addIdConstraint(org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl)
    {
        java.lang.Object[] $r9;
        org.apache.xmlbeans.SchemaIdentityConstraint$Ref $r8;
        java.lang.AssertionError $r16;
        org.apache.xmlbeans.impl.schema.StscState r2;
        org.apache.xmlbeans.impl.schema.SchemaContainer $r4, $r17;
        org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl r0;
        java.util.Map $r5, $r6, $r11;
        org.apache.xmlbeans.SchemaComponent $r13;
        java.lang.String $r3, $r10, $r14;
        org.apache.xmlbeans.XmlObject $r15;
        boolean $z0, $z1, $z2;
        java.lang.Object $r12;
        javax.xml.namespace.QName $r1, $r7;

        r2 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r0 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl;

        if r0 == null goto label4;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl: javax.xml.namespace.QName getName()>();

        $r3 = virtualinvoke $r1.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r4 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)>($r3);

        $z0 = <org.apache.xmlbeans.impl.schema.StscState: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if $r4 == null goto label1;

        $r17 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer()>();

        if $r4 == $r17 goto label2;

     label1:
        $r16 = new java.lang.AssertionError;

        specialinvoke $r16.<java.lang.AssertionError: void <init>()>();

        throw $r16;

     label2:
        $r5 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _idConstraints>;

        $z1 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        if $z1 == 0 goto label3;

        $z2 = specialinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: boolean ignoreMdef(javax.xml.namespace.QName)>($r1);

        if $z2 != 0 goto label4;

        $r9 = newarray (java.lang.Object)[3];

        $r9[0] = "identity constraint";

        $r10 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>($r1);

        $r9[1] = $r10;

        $r11 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _idConstraints>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r13 = (org.apache.xmlbeans.SchemaComponent) $r12;

        $r14 = interfaceinvoke $r13.<org.apache.xmlbeans.SchemaComponent: java.lang.String getSourceName()>();

        $r9[2] = $r14;

        $r15 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl: org.apache.xmlbeans.XmlObject getParseObject()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: void warning(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("sch-props-correct.2", $r9, $r15);

        goto label4;

     label3:
        $r6 = r2.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _idConstraints>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, r0);

        $r7 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl: javax.xml.namespace.QName getName()>();

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: void addSpelling(javax.xml.namespace.QName,org.apache.xmlbeans.SchemaComponent)>($r7, r0);

        $r8 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl: org.apache.xmlbeans.SchemaIdentityConstraint$Ref getRef()>();

        virtualinvoke $r4.<org.apache.xmlbeans.impl.schema.SchemaContainer: void addIdentityConstraint(org.apache.xmlbeans.SchemaIdentityConstraint$Ref)>($r8);

     label4:
        return;
    }

    org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl[] idConstraints()
    {
        java.lang.Object[] $r5;
        java.util.Collection $r2;
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.util.Map $r1, $r3;
        org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl[] $r4, $r6, $r7;
        int $i0;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _idConstraints>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _idConstraints>;

        $i0 = interfaceinvoke $r3.<java.util.Map: int size()>();

        $r4 = newarray (org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl)[$i0];

        $r5 = interfaceinvoke $r2.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl[]) $r5;

        $r7 = (org.apache.xmlbeans.impl.schema.SchemaIdentityConstraintImpl[]) $r6;

        return $r7;
    }

    void addAnnotation(org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl, java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl r0;
        java.lang.AssertionError $r5;
        org.apache.xmlbeans.impl.schema.StscState r1;
        java.util.List $r4;
        org.apache.xmlbeans.impl.schema.SchemaContainer $r3, $r6;
        java.lang.String r2;
        boolean $z0;

        r1 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r0 := @parameter0: org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl;

        r2 := @parameter1: java.lang.String;

        if r0 == null goto label3;

        $r3 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer(java.lang.String)>(r2);

        $z0 = <org.apache.xmlbeans.impl.schema.StscState: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if $r3 == null goto label1;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.schema.SchemaAnnotationImpl: org.apache.xmlbeans.impl.schema.SchemaContainer getContainer()>();

        if $r3 == $r6 goto label2;

     label1:
        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label2:
        $r4 = r1.<org.apache.xmlbeans.impl.schema.StscState: java.util.List _annotations>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r0);

        virtualinvoke $r3.<org.apache.xmlbeans.impl.schema.SchemaContainer: void addAnnotation(org.apache.xmlbeans.SchemaAnnotation)>(r0);

     label3:
        return;
    }

    java.util.List annotations()
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.util.List $r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.List _annotations>;

        return $r1;
    }

    boolean isProcessing(java.lang.Object)
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.util.Set $r2;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Set _processingGroups>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    void startProcessing(java.lang.Object)
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.util.Set $r2, $r3;
        java.lang.Object r1;
        java.lang.AssertionError $r4;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: java.lang.Object;

        $z0 = <org.apache.xmlbeans.impl.schema.StscState: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Set _processingGroups>;

        $z1 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Set _processingGroups>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return;
    }

    void finishProcessing(java.lang.Object)
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.util.Set $r2, $r3;
        java.lang.Object r1;
        java.lang.AssertionError $r4;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: java.lang.Object;

        $z0 = <org.apache.xmlbeans.impl.schema.StscState: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Set _processingGroups>;

        $z1 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z1 != 0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $r2 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Set _processingGroups>;

        interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>(r1);

        return;
    }

    java.lang.Object[] getCurrentProcessing()
    {
        java.util.Set $r1;
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.lang.Object[] $r2;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Set _processingGroups>;

        $r2 = interfaceinvoke $r1.<java.util.Set: java.lang.Object[] toArray()>();

        return $r2;
    }

    java.util.Map typesByClassname()
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.util.Map $r1, $r2;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _typesByClassname>;

        $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r2;
    }

    void addClassname(java.lang.String, org.apache.xmlbeans.SchemaType)
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.util.Map $r3;
        java.lang.String r1;
        org.apache.xmlbeans.SchemaType r2;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.xmlbeans.SchemaType;

        $r3 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _typesByClassname>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public static org.apache.xmlbeans.impl.schema.StscState start()
    {
        java.lang.ThreadLocal $r0, $r4;
        org.apache.xmlbeans.impl.schema.StscState $r2;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.schema.StscState$StscStack $r3, r5;

        $r0 = <org.apache.xmlbeans.impl.schema.StscState: java.lang.ThreadLocal tl_stscStack>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        r5 = (org.apache.xmlbeans.impl.schema.StscState$StscStack) $r1;

        if r5 != null goto label1;

        $r3 = new org.apache.xmlbeans.impl.schema.StscState$StscStack;

        specialinvoke $r3.<org.apache.xmlbeans.impl.schema.StscState$StscStack: void <init>(org.apache.xmlbeans.impl.schema.StscState$1)>(null);

        r5 = $r3;

        $r4 = <org.apache.xmlbeans.impl.schema.StscState: java.lang.ThreadLocal tl_stscStack>;

        virtualinvoke $r4.<java.lang.ThreadLocal: void set(java.lang.Object)>($r3);

     label1:
        $r2 = virtualinvoke r5.<org.apache.xmlbeans.impl.schema.StscState$StscStack: org.apache.xmlbeans.impl.schema.StscState push()>();

        return $r2;
    }

    public static org.apache.xmlbeans.impl.schema.StscState get()
    {
        java.lang.ThreadLocal $r0;
        org.apache.xmlbeans.impl.schema.StscState $r3;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.schema.StscState$StscStack $r2;

        $r0 = <org.apache.xmlbeans.impl.schema.StscState: java.lang.ThreadLocal tl_stscStack>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r2 = (org.apache.xmlbeans.impl.schema.StscState$StscStack) $r1;

        $r3 = $r2.<org.apache.xmlbeans.impl.schema.StscState$StscStack: org.apache.xmlbeans.impl.schema.StscState current>;

        return $r3;
    }

    public static void end()
    {
        java.lang.ThreadLocal $r0, $r4;
        int $i0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.schema.StscState$StscStack r2;
        java.util.ArrayList $r3;

        $r0 = <org.apache.xmlbeans.impl.schema.StscState: java.lang.ThreadLocal tl_stscStack>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        r2 = (org.apache.xmlbeans.impl.schema.StscState$StscStack) $r1;

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState$StscStack: void pop()>();

        $r3 = r2.<org.apache.xmlbeans.impl.schema.StscState$StscStack: java.util.ArrayList stack>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label1;

        $r4 = <org.apache.xmlbeans.impl.schema.StscState: java.lang.ThreadLocal tl_stscStack>;

        virtualinvoke $r4.<java.lang.ThreadLocal: void set(java.lang.Object)>(null);

     label1:
        return;
    }

    static org.apache.xmlbeans.impl.schema.XmlValueRef build_wsstring(int)
    {
        int i0;
        org.apache.xmlbeans.impl.schema.XmlValueRef $r0, $r1, $r2;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $r2 = <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.XmlValueRef XMLSTR_PRESERVE>;

        return $r2;

     label2:
        $r1 = <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.XmlValueRef XMLSTR_REPLACE>;

        return $r1;

     label3:
        $r0 = <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.XmlValueRef XMLSTR_COLLAPSE>;

        return $r0;

     label4:
        return null;
    }

    static org.apache.xmlbeans.impl.schema.XmlValueRef buildString(java.lang.String)
    {
        org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException $r3;
        java.lang.String r0;
        org.apache.xmlbeans.impl.schema.XmlValueRef $r2;
        org.apache.xmlbeans.impl.values.XmlStringImpl $r1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new org.apache.xmlbeans.impl.values.XmlStringImpl;

        specialinvoke $r1.<org.apache.xmlbeans.impl.values.XmlStringImpl: void <init>()>();

        virtualinvoke $r1.<org.apache.xmlbeans.impl.values.XmlStringImpl: void set(java.lang.String)>(r0);

        virtualinvoke $r1.<org.apache.xmlbeans.impl.values.XmlStringImpl: void setImmutable()>();

        $r2 = new org.apache.xmlbeans.impl.schema.XmlValueRef;

        specialinvoke $r2.<org.apache.xmlbeans.impl.schema.XmlValueRef: void <init>(org.apache.xmlbeans.XmlAnySimpleType)>($r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        return null;

        catch org.apache.xmlbeans.impl.values.XmlValueOutOfRangeException from label1 to label2 with label3;
    }

    public void notFoundError(javax.xml.namespace.QName, int, org.apache.xmlbeans.XmlObject, boolean)
    {
        java.lang.Object[] $r3, $r5;
        java.lang.AssertionError $r10;
        java.lang.Integer $r16, $r17;
        org.apache.xmlbeans.impl.schema.StscState r2;
        int i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.xmlbeans.SchemaComponent $r15;
        java.lang.String $r1, r11, r12, r13, r14, r18, r19, r20, r21;
        org.apache.xmlbeans.XmlObject r4;
        org.apache.xmlbeans.SchemaType $r9;
        boolean z0, $z1, $z2;
        org.apache.xmlbeans.SchemaGlobalElement $r8;
        org.apache.xmlbeans.SchemaGlobalAttribute $r7;
        javax.xml.namespace.QName r0, $r6;

        r2 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r0 := @parameter0: javax.xml.namespace.QName;

        i0 := @parameter1: int;

        r4 := @parameter2: org.apache.xmlbeans.XmlObject;

        z0 := @parameter3: boolean;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>(r0);

        r11 = null;

        r21 = null;

        r20 = null;

        r12 = null;

        r13 = null;

        if z0 == 0 goto label01;

        $i4 = r2.<org.apache.xmlbeans.impl.schema.StscState: int _recoveredErrors>;

        $i5 = $i4 + 1;

        r2.<org.apache.xmlbeans.impl.schema.StscState: int _recoveredErrors> = $i5;

     label01:
        tableswitch(i0)
        {
            case 0: goto label02;
            case 1: goto label03;
            case 2: goto label08;
            case 3: goto label04;
            case 4: goto label06;
            case 5: goto label07;
            case 6: goto label05;
            default: goto label08;
        };

     label02:
        r14 = "type";

        r19 = "type";

        r18 = "type";

        goto label10;

     label03:
        r14 = "element";

        r19 = "element";

        r18 = "element";

        goto label10;

     label04:
        r14 = "attribute";

        r19 = "attribute";

        r18 = "attribute";

        goto label10;

     label05:
        r14 = "model group";

        r19 = "model group";

        r18 = "model group";

        goto label10;

     label06:
        r14 = "attribute group";

        r19 = "attribute group";

        r18 = "attribute group";

        goto label10;

     label07:
        r14 = "identity constraint";

        r19 = "identity constraint";

        r18 = "identity constraint";

        goto label10;

     label08:
        $z2 = <org.apache.xmlbeans.impl.schema.StscState: boolean $assertionsDisabled>;

        if $z2 != 0 goto label09;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label09:
        r14 = "definition";

        r19 = "definition";

        r18 = "definition";

     label10:
        $r15 = virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.SchemaComponent findSpelling(javax.xml.namespace.QName)>(r0);

        if $r15 == null goto label18;

        $r6 = interfaceinvoke $r15.<org.apache.xmlbeans.SchemaComponent: javax.xml.namespace.QName getName()>();

        if $r6 == null goto label18;

        $i1 = interfaceinvoke $r15.<org.apache.xmlbeans.SchemaComponent: int getComponentType()>();

        tableswitch($i1)
        {
            case 0: goto label11;
            case 1: goto label12;
            case 2: goto label16;
            case 3: goto label13;
            case 4: goto label14;
            case 5: goto label16;
            case 6: goto label15;
            default: goto label16;
        };

     label11:
        r11 = "type";

        r21 = "type";

        r20 = "type";

        $r9 = (org.apache.xmlbeans.SchemaType) $r15;

        r13 = interfaceinvoke $r9.<org.apache.xmlbeans.SchemaType: java.lang.String getSourceName()>();

        goto label16;

     label12:
        r11 = "element";

        r21 = "element";

        r20 = "element";

        $r8 = (org.apache.xmlbeans.SchemaGlobalElement) $r15;

        r13 = interfaceinvoke $r8.<org.apache.xmlbeans.SchemaGlobalElement: java.lang.String getSourceName()>();

        goto label16;

     label13:
        r11 = "attribute";

        r21 = "attribute";

        r20 = "attribute";

        $r7 = (org.apache.xmlbeans.SchemaGlobalAttribute) $r15;

        r13 = interfaceinvoke $r7.<org.apache.xmlbeans.SchemaGlobalAttribute: java.lang.String getSourceName()>();

        goto label16;

     label14:
        r11 = "attribute group";

        r21 = "attribute group";

        r20 = "attribute group";

        goto label16;

     label15:
        r11 = "model group";

        r21 = "model group";

        r20 = "model group";

     label16:
        if r13 == null goto label17;

        $i2 = virtualinvoke r13.<java.lang.String: int lastIndexOf(int)>(47);

        $i3 = $i2 + 1;

        r13 = virtualinvoke r13.<java.lang.String: java.lang.String substring(int)>($i3);

     label17:
        $z1 = virtualinvoke $r6.<javax.xml.namespace.QName: boolean equals(java.lang.Object)>(r0);

        if $z1 != 0 goto label18;

        r12 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String pretty(javax.xml.namespace.QName)>($r6);

     label18:
        if r20 != null goto label19;

        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = r19;

        $r5[1] = $r1;

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("src-resolve", $r5, r4);

        goto label24;

     label19:
        $r3 = newarray (java.lang.Object)[7];

        $r3[0] = r18;

        $r3[1] = $r1;

        $r3[2] = r21;

        if r12 != null goto label20;

        $r16 = new java.lang.Integer;

        specialinvoke $r16.<java.lang.Integer: void <init>(int)>(0);

        goto label21;

     label20:
        $r16 = new java.lang.Integer;

        specialinvoke $r16.<java.lang.Integer: void <init>(int)>(1);

     label21:
        $r3[3] = $r16;

        $r3[4] = r12;

        if r13 != null goto label22;

        $r17 = new java.lang.Integer;

        specialinvoke $r17.<java.lang.Integer: void <init>(int)>(0);

        goto label23;

     label22:
        $r17 = new java.lang.Integer;

        specialinvoke $r17.<java.lang.Integer: void <init>(int)>(1);

     label23:
        $r3[5] = $r17;

        $r3[6] = r13;

        virtualinvoke r2.<org.apache.xmlbeans.impl.schema.StscState: void error(java.lang.String,java.lang.Object[],org.apache.xmlbeans.XmlObject)>("src-resolve.a", $r3, r4);

     label24:
        return;
    }

    public java.lang.String sourceNameForUri(java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1, $r4;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _sourceForUri>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public java.util.Map sourceCopyMap()
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.util.Map $r1, $r2;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _sourceForUri>;

        $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r2;
    }

    public void setBaseUri(java.net.URI)
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.net.URI r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: java.net.URI;

        r0.<org.apache.xmlbeans.impl.schema.StscState: java.net.URI _baseURI> = r1;

        return;
    }

    public java.lang.String relativize(java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.StscState: java.lang.String relativize(java.lang.String,boolean)>(r1, 0);

        return $r2;
    }

    public java.lang.String computeSavedFilename(java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.apache.xmlbeans.impl.schema.StscState: java.lang.String relativize(java.lang.String,boolean)>(r1, 1);

        return $r2;
    }

    private java.lang.String relativize(java.lang.String, boolean)
    {
        java.net.URISyntaxException $r35;
        org.apache.xmlbeans.impl.schema.StscState r4;
        java.net.URI $r27, $r28, $r37, $r42;
        boolean $z0, z1, $z2, $z3, $z4;
        java.lang.StringBuffer $r1, $r3, $r8, $r9, $r11, $r12, $r15, $r16, $r18, $r21, $r22, $r24, $r32, $r34, $r40, $r41, $r43, $r44, $r45;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i10, $i12;
        java.lang.String $r2, $r5, $r6, $r10, $r13, $r17, $r19, $r23, $r25, $r29, $r30, $r33, r36, $r38, $r39;

        r4 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r36 := @parameter0: java.lang.String;

        z1 := @parameter1: boolean;

        if r36 != null goto label01;

        return null;

     label01:
        $z0 = virtualinvoke r36.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 == 0 goto label02;

        $r40 = new java.lang.StringBuffer;

        specialinvoke $r40.<java.lang.StringBuffer: void <init>()>();

        $r32 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("project://local");

        $r33 = virtualinvoke r36.<java.lang.String: java.lang.String replace(char,char)>(92, 47);

        $r34 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r33);

        r36 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label04;

     label02:
        $i0 = virtualinvoke r36.<java.lang.String: int indexOf(int)>(58);

        if $i0 <= 1 goto label03;

        $r30 = virtualinvoke r36.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $z4 = virtualinvoke $r30.<java.lang.String: boolean matches(java.lang.String)>("^\\w+$");

        if $z4 != 0 goto label04;

     label03:
        $r41 = new java.lang.StringBuffer;

        specialinvoke $r41.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("project://local/");

        $r2 = virtualinvoke r36.<java.lang.String: java.lang.String replace(char,char)>(92, 47);

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        r36 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

     label04:
        $r37 = r4.<org.apache.xmlbeans.impl.schema.StscState: java.net.URI _baseURI>;

        if $r37 == null goto label10;

     label05:
        $r27 = r4.<org.apache.xmlbeans.impl.schema.StscState: java.net.URI _baseURI>;

        $r42 = new java.net.URI;

        specialinvoke $r42.<java.net.URI: void <init>(java.lang.String)>(r36);

        $r28 = virtualinvoke $r27.<java.net.URI: java.net.URI relativize(java.net.URI)>($r42);

        $z3 = virtualinvoke $r28.<java.net.URI: boolean isAbsolute()>();

        if $z3 != 0 goto label07;

        $r29 = virtualinvoke $r28.<java.net.URI: java.lang.String toString()>();

     label06:
        return $r29;

     label07:
        r36 = virtualinvoke $r28.<java.net.URI: java.lang.String toString()>();

     label08:
        goto label10;

     label09:
        $r35 := @caughtexception;

     label10:
        if z1 != 0 goto label11;

        return r36;

     label11:
        $i1 = virtualinvoke r36.<java.lang.String: int lastIndexOf(int)>(47);

        $i8 = (int) -1;

        if $i1 != $i8 goto label12;

        $r38 = "";

        goto label13;

     label12:
        $r38 = virtualinvoke r36.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label13:
        $r5 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String hexsafe(java.lang.String)>($r38);

        $i2 = $i1 + 1;

        $i3 = virtualinvoke r36.<java.lang.String: int indexOf(int,int)>(63, $i2);

        $i10 = (int) -1;

        if $i3 != $i10 goto label14;

        $r43 = new java.lang.StringBuffer;

        specialinvoke $r43.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $i6 = $i1 + 1;

        $r23 = virtualinvoke r36.<java.lang.String: java.lang.String substring(int)>($i6);

        $r24 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r25;

     label14:
        $i12 = (int) -1;

        if $i3 != $i12 goto label15;

        $r39 = "";

        goto label16;

     label15:
        $r39 = virtualinvoke r36.<java.lang.String: java.lang.String substring(int)>($i3);

     label16:
        $r6 = staticinvoke <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String hexsafe(java.lang.String)>($r39);

        $z2 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("URI_SHA_1_");

        if $z2 == 0 goto label17;

        $r44 = new java.lang.StringBuffer;

        specialinvoke $r44.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $i5 = $i1 + 1;

        $r17 = virtualinvoke r36.<java.lang.String: java.lang.String substring(int,int)>($i5, $i3);

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r19;

     label17:
        $r45 = new java.lang.StringBuffer;

        specialinvoke $r45.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $i4 = $i1 + 1;

        $r10 = virtualinvoke r36.<java.lang.String: java.lang.String substring(int,int)>($i4, $i3);

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r13;

        catch java.net.URISyntaxException from label05 to label06 with label09;
        catch java.net.URISyntaxException from label07 to label08 with label09;
    }

    public void addSourceUri(java.lang.String, java.lang.String)
    {
        org.apache.xmlbeans.impl.schema.StscState r1;
        java.util.Map $r2;
        java.lang.String r0, r3;

        r1 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        return;

     label1:
        if r3 != null goto label2;

        r3 = virtualinvoke r1.<org.apache.xmlbeans.impl.schema.StscState: java.lang.String computeSavedFilename(java.lang.String)>(r0);

     label2:
        $r2 = r1.<org.apache.xmlbeans.impl.schema.StscState: java.util.Map _sourceForUri>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r3);

        return;
    }

    public java.util.Collection getErrorListener()
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.util.Collection $r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.util.Collection _errorListener>;

        return $r1;
    }

    public org.apache.xmlbeans.SchemaTypeLoader getS4SLoader()
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        org.apache.xmlbeans.SchemaTypeLoader $r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.SchemaTypeLoader _s4sloader>;

        return $r1;
    }

    public java.io.File getSchemasDir()
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.io.File $r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        $r1 = r0.<org.apache.xmlbeans.impl.schema.StscState: java.io.File _schemasDir>;

        return $r1;
    }

    public void setSchemasDir(java.io.File)
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        java.io.File r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: java.io.File;

        r0.<org.apache.xmlbeans.impl.schema.StscState: java.io.File _schemasDir> = r1;

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    void <init>(org.apache.xmlbeans.impl.schema.StscState$1)
    {
        org.apache.xmlbeans.impl.schema.StscState r0;
        org.apache.xmlbeans.impl.schema.StscState$1 r1;

        r0 := @this: org.apache.xmlbeans.impl.schema.StscState;

        r1 := @parameter0: org.apache.xmlbeans.impl.schema.StscState$1;

        specialinvoke r0.<org.apache.xmlbeans.impl.schema.StscState: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        org.apache.xmlbeans.SchemaType[] $r6;
        org.apache.xmlbeans.impl.schema.XmlValueRef[] $r8, $r10, $r13, $r15;
        boolean $z0, $z1;
        java.lang.ThreadLocal $r2;
        boolean[] $r9, $r12, $r14, $r16;
        org.apache.xmlbeans.SchemaType$Ref[] $r7;
        java.lang.Class $r0, $r17;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.schema.XmlValueRef $r3, $r4, $r5, $r11;

        <org.apache.xmlbeans.impl.schema.StscState: java.lang.String PROJECT_URL_PREFIX> = "project://local";

        $r0 = <org.apache.xmlbeans.impl.schema.StscState: java.lang.Class class$org$apache$xmlbeans$impl$schema$StscState>;

        if $r0 != null goto label1;

        $r17 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.schema.StscState");

        <org.apache.xmlbeans.impl.schema.StscState: java.lang.Class class$org$apache$xmlbeans$impl$schema$StscState> = $r17;

        goto label2;

     label1:
        $r17 = <org.apache.xmlbeans.impl.schema.StscState: java.lang.Class class$org$apache$xmlbeans$impl$schema$StscState>;

     label2:
        $z0 = virtualinvoke $r17.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.impl.schema.StscState: boolean $assertionsDisabled> = $z1;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        <org.apache.xmlbeans.impl.schema.StscState: java.lang.Object CHAMELEON_INCLUDE_URI> = $r1;

        $r2 = new java.lang.ThreadLocal;

        specialinvoke $r2.<java.lang.ThreadLocal: void <init>()>();

        <org.apache.xmlbeans.impl.schema.StscState: java.lang.ThreadLocal tl_stscStack> = $r2;

        $r3 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.XmlValueRef buildString(java.lang.String)>("preserve");

        <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.XmlValueRef XMLSTR_PRESERVE> = $r3;

        $r4 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.XmlValueRef buildString(java.lang.String)>("preserve");

        <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.XmlValueRef XMLSTR_REPLACE> = $r4;

        $r5 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.XmlValueRef buildString(java.lang.String)>("preserve");

        <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.XmlValueRef XMLSTR_COLLAPSE> = $r5;

        $r6 = newarray (org.apache.xmlbeans.SchemaType)[0];

        <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.SchemaType[] EMPTY_ST_ARRAY> = $r6;

        $r7 = newarray (org.apache.xmlbeans.SchemaType$Ref)[0];

        <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.SchemaType$Ref[] EMPTY_STREF_ARRAY> = $r7;

        $r8 = newarray (org.apache.xmlbeans.impl.schema.XmlValueRef)[12];

        $r8[0] = null;

        $r8[1] = null;

        $r8[2] = null;

        $r8[3] = null;

        $r8[4] = null;

        $r8[5] = null;

        $r8[6] = null;

        $r8[7] = null;

        $r8[8] = null;

        $r8[9] = null;

        $r8[10] = null;

        $r8[11] = null;

        <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.XmlValueRef[] FACETS_NONE> = $r8;

        $r9 = newarray (boolean)[12];

        $r9[0] = 0;

        $r9[1] = 0;

        $r9[2] = 0;

        $r9[3] = 0;

        $r9[4] = 0;

        $r9[5] = 0;

        $r9[6] = 0;

        $r9[7] = 0;

        $r9[8] = 0;

        $r9[9] = 0;

        $r9[10] = 0;

        $r9[11] = 0;

        <org.apache.xmlbeans.impl.schema.StscState: boolean[] FIXED_FACETS_NONE> = $r9;

        $r10 = newarray (org.apache.xmlbeans.impl.schema.XmlValueRef)[12];

        $r10[0] = null;

        $r10[1] = null;

        $r10[2] = null;

        $r10[3] = null;

        $r10[4] = null;

        $r10[5] = null;

        $r10[6] = null;

        $r10[7] = null;

        $r10[8] = null;

        $r11 = staticinvoke <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.XmlValueRef build_wsstring(int)>(3);

        $r10[9] = $r11;

        $r10[10] = null;

        $r10[11] = null;

        <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.XmlValueRef[] FACETS_WS_COLLAPSE> = $r10;

        $r12 = newarray (boolean)[12];

        $r12[0] = 0;

        $r12[1] = 0;

        $r12[2] = 0;

        $r12[3] = 0;

        $r12[4] = 0;

        $r12[5] = 0;

        $r12[6] = 0;

        $r12[7] = 0;

        $r12[8] = 0;

        $r12[9] = 1;

        $r12[10] = 0;

        $r12[11] = 0;

        <org.apache.xmlbeans.impl.schema.StscState: boolean[] FIXED_FACETS_WS> = $r12;

        $r13 = <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.XmlValueRef[] FACETS_NONE>;

        <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.XmlValueRef[] FACETS_UNION> = $r13;

        $r14 = <org.apache.xmlbeans.impl.schema.StscState: boolean[] FIXED_FACETS_NONE>;

        <org.apache.xmlbeans.impl.schema.StscState: boolean[] FIXED_FACETS_UNION> = $r14;

        $r15 = <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.XmlValueRef[] FACETS_WS_COLLAPSE>;

        <org.apache.xmlbeans.impl.schema.StscState: org.apache.xmlbeans.impl.schema.XmlValueRef[] FACETS_LIST> = $r15;

        $r16 = <org.apache.xmlbeans.impl.schema.StscState: boolean[] FIXED_FACETS_WS>;

        <org.apache.xmlbeans.impl.schema.StscState: boolean[] FIXED_FACETS_LIST> = $r16;

        return;
    }
}
