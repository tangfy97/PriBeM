public class org.apache.batik.dom.svg.SVGOMAnimatedString extends org.apache.batik.dom.svg.AbstractSVGAnimatedValue implements org.w3c.dom.svg.SVGAnimatedString
{
    protected java.lang.String animVal;

    public void <init>(org.apache.batik.dom.svg.AbstractElement, java.lang.String, java.lang.String)
    {
        java.lang.String r2, r3;
        org.apache.batik.dom.svg.AbstractElement r1;
        org.apache.batik.dom.svg.SVGOMAnimatedString r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedString;

        r1 := @parameter0: org.apache.batik.dom.svg.AbstractElement;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void <init>(org.apache.batik.dom.svg.AbstractElement,java.lang.String,java.lang.String)>(r1, r2, r3);

        return;
    }

    public java.lang.String getBaseVal()
    {
        java.lang.String $r1, $r2, $r4;
        org.apache.batik.dom.svg.AbstractElement $r3;
        org.apache.batik.dom.svg.SVGOMAnimatedString r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedString;

        $r3 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r2 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: java.lang.String namespaceURI>;

        $r1 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: java.lang.String localName>;

        $r4 = virtualinvoke $r3.<org.apache.batik.dom.AbstractElement: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>($r2, $r1);

        return $r4;
    }

    public void setBaseVal(java.lang.String) throws org.w3c.dom.DOMException
    {
        java.lang.String r1, $r2, $r3;
        org.apache.batik.dom.svg.AbstractElement $r4;
        org.apache.batik.dom.svg.SVGOMAnimatedString r0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedString;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r3 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: java.lang.String namespaceURI>;

        $r2 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: java.lang.String localName>;

        virtualinvoke $r4.<org.apache.batik.dom.AbstractElement: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>($r3, $r2, r1);

        return;
    }

    public java.lang.String getAnimVal()
    {
        java.lang.String $r1, $r2, $r4, $r5;
        org.apache.batik.dom.svg.AbstractElement $r3;
        org.apache.batik.dom.svg.SVGOMAnimatedString r0;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedString;

        $z0 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal>;

        if $z0 == 0 goto label1;

        $r5 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedString: java.lang.String animVal>;

        return $r5;

     label1:
        $r3 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r2 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: java.lang.String namespaceURI>;

        $r1 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: java.lang.String localName>;

        $r4 = virtualinvoke $r3.<org.apache.batik.dom.AbstractElement: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>($r2, $r1);

        return $r4;
    }

    public org.apache.batik.anim.values.AnimatableValue getUnderlyingValue(org.apache.batik.dom.anim.AnimationTarget)
    {
        org.apache.batik.dom.anim.AnimationTarget r1;
        org.apache.batik.anim.values.AnimatableStringValue $r0;
        java.lang.String $r3;
        org.apache.batik.dom.svg.SVGOMAnimatedString r2;

        r2 := @this: org.apache.batik.dom.svg.SVGOMAnimatedString;

        r1 := @parameter0: org.apache.batik.dom.anim.AnimationTarget;

        $r0 = new org.apache.batik.anim.values.AnimatableStringValue;

        $r3 = virtualinvoke r2.<org.apache.batik.dom.svg.SVGOMAnimatedString: java.lang.String getBaseVal()>();

        specialinvoke $r0.<org.apache.batik.anim.values.AnimatableStringValue: void <init>(org.apache.batik.dom.anim.AnimationTarget,java.lang.String)>(r1, $r3);

        return $r0;
    }

    protected void updateAnimatedValue(org.apache.batik.anim.values.AnimatableValue)
    {
        org.apache.batik.anim.values.AnimatableStringValue $r2;
        java.lang.String $r3;
        org.apache.batik.anim.values.AnimatableValue r0;
        org.apache.batik.dom.svg.SVGOMAnimatedString r1;

        r1 := @this: org.apache.batik.dom.svg.SVGOMAnimatedString;

        r0 := @parameter0: org.apache.batik.anim.values.AnimatableValue;

        if r0 != null goto label1;

        r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal> = 0;

        goto label2;

     label1:
        r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal> = 1;

        $r2 = (org.apache.batik.anim.values.AnimatableStringValue) r0;

        $r3 = virtualinvoke $r2.<org.apache.batik.anim.values.AnimatableStringValue: java.lang.String getString()>();

        r1.<org.apache.batik.dom.svg.SVGOMAnimatedString: java.lang.String animVal> = $r3;

     label2:
        virtualinvoke r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireAnimatedAttributeListeners()>();

        return;
    }

    public void attrAdded(org.w3c.dom.Attr, java.lang.String)
    {
        java.lang.String r2;
        org.w3c.dom.Attr r1;
        org.apache.batik.dom.svg.SVGOMAnimatedString r0;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedString;

        r1 := @parameter0: org.w3c.dom.Attr;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireBaseAttributeListeners()>();

        $z0 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireAnimatedAttributeListeners()>();

     label1:
        return;
    }

    public void attrModified(org.w3c.dom.Attr, java.lang.String, java.lang.String)
    {
        java.lang.String r2, r3;
        org.w3c.dom.Attr r1;
        org.apache.batik.dom.svg.SVGOMAnimatedString r0;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedString;

        r1 := @parameter0: org.w3c.dom.Attr;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireBaseAttributeListeners()>();

        $z0 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireAnimatedAttributeListeners()>();

     label1:
        return;
    }

    public void attrRemoved(org.w3c.dom.Attr, java.lang.String)
    {
        java.lang.String r2;
        org.w3c.dom.Attr r1;
        org.apache.batik.dom.svg.SVGOMAnimatedString r0;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedString;

        r1 := @parameter0: org.w3c.dom.Attr;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireBaseAttributeListeners()>();

        $z0 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireAnimatedAttributeListeners()>();

     label1:
        return;
    }
}
