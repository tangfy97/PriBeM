public final class org.xml.sax.helpers.XMLReaderFactory extends java.lang.Object
{
    private static final java.lang.String property;
    private static final int DEFAULT_LINE_LENGTH;
    static java.lang.Class class$org$xml$sax$helpers$XMLReaderFactory;

    private void <init>()
    {
        org.xml.sax.helpers.XMLReaderFactory r0;

        r0 := @this: org.xml.sax.helpers.XMLReaderFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.xml.sax.XMLReader createXMLReader() throws org.xml.sax.SAXException
    {
        java.lang.Throwable $r17;
        org.xml.sax.helpers.ParserAdapter $r4;
        org.xml.sax.XMLReader $r6;
        int $i0;
        java.lang.String r23;
        java.io.IOException $r12, $r13, $r14;
        java.io.InputStreamReader $r8, $r21;
        java.lang.Exception $r15, $r18, $r22;
        org.xml.sax.Parser $r5;
        org.xml.sax.SAXException $r16;
        java.lang.Class $r2, $r10, $r25, $r26;
        java.lang.ClassLoader $r0, $r1, $r3, $r11;
        java.io.BufferedReader $r7, $r20, r27;
        java.io.UnsupportedEncodingException $r19;
        java.io.InputStream $r9, r24;

        r23 = null;

        $r0 = staticinvoke <org.xml.sax.helpers.NewInstance: java.lang.ClassLoader getClassLoader()>();

     label01:
        r23 = staticinvoke <org.xml.sax.helpers.SecuritySupport: java.lang.String getSystemProperty(java.lang.String)>("org.xml.sax.driver");

     label02:
        goto label04;

     label03:
        $r22 := @caughtexception;

     label04:
        if r23 == null goto label05;

        $i0 = virtualinvoke r23.<java.lang.String: int length()>();

        if $i0 != 0 goto label22;

     label05:
        r23 = null;

        $r1 = staticinvoke <org.xml.sax.helpers.SecuritySupport: java.lang.ClassLoader getContextClassLoader()>();

        if $r1 == null goto label08;

        $r9 = staticinvoke <org.xml.sax.helpers.SecuritySupport: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)>($r1, "META-INF/services/org.xml.sax.driver");

        r24 = $r9;

        if $r9 != null goto label11;

        $r10 = <org.xml.sax.helpers.XMLReaderFactory: java.lang.Class class$org$xml$sax$helpers$XMLReaderFactory>;

        if $r10 != null goto label06;

        $r25 = staticinvoke <org.xml.sax.helpers.XMLReaderFactory: java.lang.Class class$(java.lang.String)>("org.xml.sax.helpers.XMLReaderFactory");

        <org.xml.sax.helpers.XMLReaderFactory: java.lang.Class class$org$xml$sax$helpers$XMLReaderFactory> = $r25;

        goto label07;

     label06:
        $r25 = <org.xml.sax.helpers.XMLReaderFactory: java.lang.Class class$org$xml$sax$helpers$XMLReaderFactory>;

     label07:
        $r11 = virtualinvoke $r25.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r24 = staticinvoke <org.xml.sax.helpers.SecuritySupport: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)>($r11, "META-INF/services/org.xml.sax.driver");

        goto label11;

     label08:
        $r2 = <org.xml.sax.helpers.XMLReaderFactory: java.lang.Class class$org$xml$sax$helpers$XMLReaderFactory>;

        if $r2 != null goto label09;

        $r26 = staticinvoke <org.xml.sax.helpers.XMLReaderFactory: java.lang.Class class$(java.lang.String)>("org.xml.sax.helpers.XMLReaderFactory");

        <org.xml.sax.helpers.XMLReaderFactory: java.lang.Class class$org$xml$sax$helpers$XMLReaderFactory> = $r26;

        goto label10;

     label09:
        $r26 = <org.xml.sax.helpers.XMLReaderFactory: java.lang.Class class$org$xml$sax$helpers$XMLReaderFactory>;

     label10:
        $r3 = virtualinvoke $r26.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r24 = staticinvoke <org.xml.sax.helpers.SecuritySupport: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)>($r3, "META-INF/services/org.xml.sax.driver");

     label11:
        if r24 == null goto label22;

     label12:
        $r7 = new java.io.BufferedReader;

        $r8 = new java.io.InputStreamReader;

        specialinvoke $r8.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r24, "UTF-8");

        specialinvoke $r7.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r8, 80);

        r27 = $r7;

     label13:
        goto label15;

     label14:
        $r19 := @caughtexception;

        $r20 = new java.io.BufferedReader;

        $r21 = new java.io.InputStreamReader;

        specialinvoke $r21.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r24);

        specialinvoke $r20.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r21, 80);

        r27 = $r20;

     label15:
        r23 = virtualinvoke r27.<java.io.BufferedReader: java.lang.String readLine()>();

     label16:
        goto label26;

     label17:
        goto label22;

     label18:
        $r18 := @caughtexception;

        goto label30;

     label19:
        goto label22;

     label20:
        $r17 := @caughtexception;

        goto label34;

     label21:
        throw $r17;

     label22:
        if r23 != null goto label23;

        r23 = "org.apache.xerces.parsers.SAXParser";

     label23:
        if r23 == null goto label24;

        $r6 = staticinvoke <org.xml.sax.helpers.XMLReaderFactory: org.xml.sax.XMLReader loadClass(java.lang.ClassLoader,java.lang.String)>($r0, r23);

        return $r6;

     label24:
        $r4 = new org.xml.sax.helpers.ParserAdapter;

        $r5 = staticinvoke <org.xml.sax.helpers.ParserFactory: org.xml.sax.Parser makeParser()>();

        specialinvoke $r4.<org.xml.sax.helpers.ParserAdapter: void <init>(org.xml.sax.Parser)>($r5);

        return $r4;

     label25:
        $r15 := @caughtexception;

        $r16 = new org.xml.sax.SAXException;

        specialinvoke $r16.<org.xml.sax.SAXException: void <init>(java.lang.String)>("Can\'t create default XMLReader; is system property org.xml.sax.driver set?");

        throw $r16;

     label26:
        virtualinvoke r27.<java.io.BufferedReader: void close()>();

     label27:
        goto label29;

     label28:
        $r14 := @caughtexception;

     label29:
        goto label17;

     label30:
        virtualinvoke r27.<java.io.BufferedReader: void close()>();

     label31:
        goto label33;

     label32:
        $r13 := @caughtexception;

     label33:
        goto label19;

     label34:
        virtualinvoke r27.<java.io.BufferedReader: void close()>();

     label35:
        goto label37;

     label36:
        $r12 := @caughtexception;

     label37:
        goto label21;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.io.UnsupportedEncodingException from label12 to label13 with label14;
        catch java.lang.Exception from label15 to label16 with label18;
        catch java.lang.Throwable from label15 to label20 with label20;
        catch java.lang.Exception from label24 to label25 with label25;
        catch java.io.IOException from label26 to label27 with label28;
        catch java.io.IOException from label30 to label31 with label32;
        catch java.io.IOException from label34 to label35 with label36;
    }

    public static org.xml.sax.XMLReader createXMLReader(java.lang.String) throws org.xml.sax.SAXException
    {
        org.xml.sax.XMLReader $r2;
        java.lang.ClassLoader $r0;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <org.xml.sax.helpers.NewInstance: java.lang.ClassLoader getClassLoader()>();

        $r2 = staticinvoke <org.xml.sax.helpers.XMLReaderFactory: org.xml.sax.XMLReader loadClass(java.lang.ClassLoader,java.lang.String)>($r0, r1);

        return $r2;
    }

    private static org.xml.sax.XMLReader loadClass(java.lang.ClassLoader, java.lang.String) throws org.xml.sax.SAXException
    {
        java.lang.InstantiationException $r11;
        java.lang.IllegalAccessException $r18;
        org.xml.sax.SAXException $r5, $r12, $r19, $r26;
        java.lang.ClassLoader r0;
        java.lang.ClassCastException $r4;
        org.xml.sax.XMLReader $r3;
        java.lang.StringBuffer $r6, $r7, $r8, $r9, $r13, $r14, $r15, $r16, $r20, $r21, $r22, $r23, $r27, $r28, $r29, $r30;
        java.lang.String r1, $r10, $r17, $r24, $r31;
        java.lang.Object $r2;
        java.lang.ClassNotFoundException $r25;

        r0 := @parameter0: java.lang.ClassLoader;

        r1 := @parameter1: java.lang.String;

     label1:
        $r2 = staticinvoke <org.xml.sax.helpers.NewInstance: java.lang.Object newInstance(java.lang.ClassLoader,java.lang.String)>(r0, r1);

        $r3 = (org.xml.sax.XMLReader) $r2;

        return $r3;

     label2:
        $r25 := @caughtexception;

        $r26 = new org.xml.sax.SAXException;

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("SAX2 driver class ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" not found");

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r26.<org.xml.sax.SAXException: void <init>(java.lang.String,java.lang.Exception)>($r31, $r25);

        throw $r26;

     label3:
        $r18 := @caughtexception;

        $r19 = new org.xml.sax.SAXException;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("SAX2 driver class ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" found but cannot be loaded");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r19.<org.xml.sax.SAXException: void <init>(java.lang.String,java.lang.Exception)>($r24, $r18);

        throw $r19;

     label4:
        $r11 := @caughtexception;

        $r12 = new org.xml.sax.SAXException;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("SAX2 driver class ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" loaded but cannot be instantiated (no empty public constructor?)");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r12.<org.xml.sax.SAXException: void <init>(java.lang.String,java.lang.Exception)>($r17, $r11);

        throw $r12;

     label5:
        $r4 := @caughtexception;

        $r5 = new org.xml.sax.SAXException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("SAX2 driver class ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" does not implement XMLReader");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.String,java.lang.Exception)>($r10, $r4);

        throw $r5;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.InstantiationException from label1 to label2 with label4;
        catch java.lang.ClassCastException from label1 to label2 with label5;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }

    public static void <clinit>()
    {
        <org.xml.sax.helpers.XMLReaderFactory: int DEFAULT_LINE_LENGTH> = 80;

        <org.xml.sax.helpers.XMLReaderFactory: java.lang.String property> = "org.xml.sax.driver";

        return;
    }
}
