public abstract class org.apache.batik.dom.svg.AbstractSVGAnimatedLength extends org.apache.batik.dom.svg.AbstractSVGAnimatedValue implements org.w3c.dom.svg.SVGAnimatedLength, org.apache.batik.dom.svg.LiveAttributeValue
{
    public static final short HORIZONTAL_LENGTH;
    public static final short VERTICAL_LENGTH;
    public static final short OTHER_LENGTH;
    protected short direction;
    protected org.apache.batik.dom.svg.AbstractSVGAnimatedLength$BaseSVGLength baseVal;
    protected org.apache.batik.dom.svg.AbstractSVGAnimatedLength$AnimSVGLength animVal;
    protected boolean changing;
    protected boolean nonNegative;

    public void <init>(org.apache.batik.dom.svg.AbstractElement, java.lang.String, java.lang.String, short, boolean)
    {
        short s0;
        java.lang.String r2, r3;
        org.apache.batik.dom.svg.AbstractSVGAnimatedLength r0;
        org.apache.batik.dom.svg.AbstractElement r1;
        boolean z0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGAnimatedLength;

        r1 := @parameter0: org.apache.batik.dom.svg.AbstractElement;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        s0 := @parameter3: short;

        z0 := @parameter4: boolean;

        specialinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void <init>(org.apache.batik.dom.svg.AbstractElement,java.lang.String,java.lang.String)>(r1, r2, r3);

        r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: short direction> = s0;

        r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: boolean nonNegative> = z0;

        return;
    }

    protected abstract java.lang.String getDefaultValue();

    public org.w3c.dom.svg.SVGLength getBaseVal()
    {
        org.apache.batik.dom.svg.AbstractSVGAnimatedLength$BaseSVGLength $r1, $r2, $r3;
        short $s0;
        org.apache.batik.dom.svg.AbstractSVGAnimatedLength r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGAnimatedLength;

        $r1 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: org.apache.batik.dom.svg.AbstractSVGAnimatedLength$BaseSVGLength baseVal>;

        if $r1 != null goto label1;

        $r3 = new org.apache.batik.dom.svg.AbstractSVGAnimatedLength$BaseSVGLength;

        $s0 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: short direction>;

        specialinvoke $r3.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength$BaseSVGLength: void <init>(org.apache.batik.dom.svg.AbstractSVGAnimatedLength,short)>(r0, $s0);

        r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: org.apache.batik.dom.svg.AbstractSVGAnimatedLength$BaseSVGLength baseVal> = $r3;

     label1:
        $r2 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: org.apache.batik.dom.svg.AbstractSVGAnimatedLength$BaseSVGLength baseVal>;

        return $r2;
    }

    public org.w3c.dom.svg.SVGLength getAnimVal()
    {
        short $s0;
        org.apache.batik.dom.svg.AbstractSVGAnimatedLength$AnimSVGLength $r1, $r2, $r3;
        org.apache.batik.dom.svg.AbstractSVGAnimatedLength r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGAnimatedLength;

        $r1 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: org.apache.batik.dom.svg.AbstractSVGAnimatedLength$AnimSVGLength animVal>;

        if $r1 != null goto label1;

        $r3 = new org.apache.batik.dom.svg.AbstractSVGAnimatedLength$AnimSVGLength;

        $s0 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: short direction>;

        specialinvoke $r3.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength$AnimSVGLength: void <init>(org.apache.batik.dom.svg.AbstractSVGAnimatedLength,short)>(r0, $s0);

        r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: org.apache.batik.dom.svg.AbstractSVGAnimatedLength$AnimSVGLength animVal> = $r3;

     label1:
        $r2 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: org.apache.batik.dom.svg.AbstractSVGAnimatedLength$AnimSVGLength animVal>;

        return $r2;
    }

    public float getCheckedValue()
    {
        org.apache.batik.dom.svg.AbstractSVGAnimatedLength$AnimSVGLength $r21, $r22, $r23, $r25, $r30;
        byte $b1, $b3;
        org.apache.batik.dom.svg.AbstractElement $r9, $r14, $r19, $r26;
        boolean $z0, $z1, $z2, $z3;
        float $f0, $f1, $f2, $f3;
        org.apache.batik.dom.svg.AbstractSVGAnimatedLength r0;
        org.apache.batik.dom.svg.LiveAttributeException $r31, $r33, $r34, $r35;
        short $s0, $s2, $s4;
        int $i5, $i6;
        java.lang.String $r10, $r11, $r15, $r16, $r18, $r27, $r28;
        org.apache.batik.dom.svg.AbstractSVGAnimatedLength$BaseSVGLength $r1, $r2, $r3, $r4, $r5, $r6, $r8, $r13, $r32;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGAnimatedLength;

        $z0 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal>;

        if $z0 == 0 goto label3;

        $r21 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: org.apache.batik.dom.svg.AbstractSVGAnimatedLength$AnimSVGLength animVal>;

        if $r21 != null goto label1;

        $r30 = new org.apache.batik.dom.svg.AbstractSVGAnimatedLength$AnimSVGLength;

        $s4 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: short direction>;

        specialinvoke $r30.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength$AnimSVGLength: void <init>(org.apache.batik.dom.svg.AbstractSVGAnimatedLength,short)>(r0, $s4);

        r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: org.apache.batik.dom.svg.AbstractSVGAnimatedLength$AnimSVGLength animVal> = $r30;

     label1:
        $z3 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: boolean nonNegative>;

        if $z3 == 0 goto label2;

        $r23 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: org.apache.batik.dom.svg.AbstractSVGAnimatedLength$AnimSVGLength animVal>;

        $f3 = $r23.<org.apache.batik.dom.svg.AbstractSVGLength: float value>;

        $b3 = $f3 cmpg 0.0F;

        $i5 = (int) $b3;

        if $i5 >= 0 goto label2;

        $r31 = new org.apache.batik.dom.svg.LiveAttributeException;

        $r26 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r27 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: java.lang.String localName>;

        $r25 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: org.apache.batik.dom.svg.AbstractSVGAnimatedLength$AnimSVGLength animVal>;

        $r28 = virtualinvoke $r25.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength$AnimSVGLength: java.lang.String getValueAsString()>();

        specialinvoke $r31.<org.apache.batik.dom.svg.LiveAttributeException: void <init>(org.w3c.dom.Element,java.lang.String,short,java.lang.String)>($r26, $r27, 2, $r28);

        throw $r31;

     label2:
        $r22 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: org.apache.batik.dom.svg.AbstractSVGAnimatedLength$AnimSVGLength animVal>;

        $f2 = virtualinvoke $r22.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength$AnimSVGLength: float getValue()>();

        return $f2;

     label3:
        $r1 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: org.apache.batik.dom.svg.AbstractSVGAnimatedLength$BaseSVGLength baseVal>;

        if $r1 != null goto label4;

        $r32 = new org.apache.batik.dom.svg.AbstractSVGAnimatedLength$BaseSVGLength;

        $s2 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: short direction>;

        specialinvoke $r32.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength$BaseSVGLength: void <init>(org.apache.batik.dom.svg.AbstractSVGAnimatedLength,short)>(r0, $s2);

        r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: org.apache.batik.dom.svg.AbstractSVGAnimatedLength$BaseSVGLength baseVal> = $r32;

     label4:
        $r2 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: org.apache.batik.dom.svg.AbstractSVGAnimatedLength$BaseSVGLength baseVal>;

        virtualinvoke $r2.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength$BaseSVGLength: void revalidate()>();

        $r3 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: org.apache.batik.dom.svg.AbstractSVGAnimatedLength$BaseSVGLength baseVal>;

        $z1 = $r3.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength$BaseSVGLength: boolean missing>;

        if $z1 == 0 goto label5;

        $r33 = new org.apache.batik.dom.svg.LiveAttributeException;

        $r19 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r18 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: java.lang.String localName>;

        specialinvoke $r33.<org.apache.batik.dom.svg.LiveAttributeException: void <init>(org.w3c.dom.Element,java.lang.String,short,java.lang.String)>($r19, $r18, 0, null);

        throw $r33;

     label5:
        $r4 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: org.apache.batik.dom.svg.AbstractSVGAnimatedLength$BaseSVGLength baseVal>;

        $s0 = $r4.<org.apache.batik.dom.svg.AbstractSVGLength: short unitType>;

        if $s0 != 0 goto label6;

        $r34 = new org.apache.batik.dom.svg.LiveAttributeException;

        $r14 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r15 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: java.lang.String localName>;

        $r13 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: org.apache.batik.dom.svg.AbstractSVGAnimatedLength$BaseSVGLength baseVal>;

        $r16 = virtualinvoke $r13.<org.apache.batik.dom.svg.AbstractSVGLength: java.lang.String getValueAsString()>();

        specialinvoke $r34.<org.apache.batik.dom.svg.LiveAttributeException: void <init>(org.w3c.dom.Element,java.lang.String,short,java.lang.String)>($r14, $r15, 1, $r16);

        throw $r34;

     label6:
        $z2 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: boolean nonNegative>;

        if $z2 == 0 goto label7;

        $r6 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: org.apache.batik.dom.svg.AbstractSVGAnimatedLength$BaseSVGLength baseVal>;

        $f1 = $r6.<org.apache.batik.dom.svg.AbstractSVGLength: float value>;

        $b1 = $f1 cmpg 0.0F;

        $i6 = (int) $b1;

        if $i6 >= 0 goto label7;

        $r35 = new org.apache.batik.dom.svg.LiveAttributeException;

        $r9 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r10 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: java.lang.String localName>;

        $r8 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: org.apache.batik.dom.svg.AbstractSVGAnimatedLength$BaseSVGLength baseVal>;

        $r11 = virtualinvoke $r8.<org.apache.batik.dom.svg.AbstractSVGLength: java.lang.String getValueAsString()>();

        specialinvoke $r35.<org.apache.batik.dom.svg.LiveAttributeException: void <init>(org.w3c.dom.Element,java.lang.String,short,java.lang.String)>($r9, $r10, 2, $r11);

        throw $r35;

     label7:
        $r5 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: org.apache.batik.dom.svg.AbstractSVGAnimatedLength$BaseSVGLength baseVal>;

        $f0 = virtualinvoke $r5.<org.apache.batik.dom.svg.AbstractSVGLength: float getValue()>();

        return $f0;
    }

    protected void updateAnimatedValue(org.apache.batik.anim.values.AnimatableValue)
    {
        org.apache.batik.dom.svg.AbstractSVGAnimatedLength$AnimSVGLength $r3, $r4, $r5;
        org.apache.batik.anim.values.AnimatableLengthValue r2;
        short $s1;
        int $i0;
        float $f0;
        org.apache.batik.dom.svg.AbstractSVGAnimatedLength r1;
        org.apache.batik.anim.values.AnimatableValue r0;

        r1 := @this: org.apache.batik.dom.svg.AbstractSVGAnimatedLength;

        r0 := @parameter0: org.apache.batik.anim.values.AnimatableValue;

        if r0 != null goto label1;

        r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal> = 0;

        goto label3;

     label1:
        r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal> = 1;

        r2 = (org.apache.batik.anim.values.AnimatableLengthValue) r0;

        $r3 = r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: org.apache.batik.dom.svg.AbstractSVGAnimatedLength$AnimSVGLength animVal>;

        if $r3 != null goto label2;

        $r5 = new org.apache.batik.dom.svg.AbstractSVGAnimatedLength$AnimSVGLength;

        $s1 = r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: short direction>;

        specialinvoke $r5.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength$AnimSVGLength: void <init>(org.apache.batik.dom.svg.AbstractSVGAnimatedLength,short)>(r1, $s1);

        r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: org.apache.batik.dom.svg.AbstractSVGAnimatedLength$AnimSVGLength animVal> = $r5;

     label2:
        $r4 = r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: org.apache.batik.dom.svg.AbstractSVGAnimatedLength$AnimSVGLength animVal>;

        $i0 = virtualinvoke r2.<org.apache.batik.anim.values.AnimatableLengthValue: int getLengthType()>();

        $f0 = virtualinvoke r2.<org.apache.batik.anim.values.AnimatableLengthValue: float getLengthValue()>();

        virtualinvoke $r4.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength$AnimSVGLength: void setAnimatedValue(int,float)>($i0, $f0);

     label3:
        virtualinvoke r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireAnimatedAttributeListeners()>();

        return;
    }

    public org.apache.batik.anim.values.AnimatableValue getUnderlyingValue(org.apache.batik.dom.anim.AnimationTarget)
    {
        org.apache.batik.dom.anim.AnimationTarget r3;
        org.w3c.dom.svg.SVGLength $r1;
        org.apache.batik.anim.values.AnimatableLengthValue $r2;
        short $s0, $s1;
        float $f0;
        java.lang.String $r4, $r5;
        org.apache.batik.dom.svg.AbstractSVGAnimatedLength r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGAnimatedLength;

        r3 := @parameter0: org.apache.batik.dom.anim.AnimationTarget;

        $r1 = virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: org.w3c.dom.svg.SVGLength getBaseVal()>();

        $r2 = new org.apache.batik.anim.values.AnimatableLengthValue;

        $s0 = interfaceinvoke $r1.<org.w3c.dom.svg.SVGLength: short getUnitType()>();

        $f0 = interfaceinvoke $r1.<org.w3c.dom.svg.SVGLength: float getValueInSpecifiedUnits()>();

        $r4 = virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: java.lang.String getNamespaceURI()>();

        $r5 = virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: java.lang.String getLocalName()>();

        $s1 = interfaceinvoke r3.<org.apache.batik.dom.anim.AnimationTarget: short getPercentageInterpretation(java.lang.String,java.lang.String,boolean)>($r4, $r5, 0);

        specialinvoke $r2.<org.apache.batik.anim.values.AnimatableLengthValue: void <init>(org.apache.batik.dom.anim.AnimationTarget,short,float,short)>(r3, $s0, $f0, $s1);

        return $r2;
    }

    public void attrAdded(org.w3c.dom.Attr, java.lang.String)
    {
        java.lang.String r2;
        org.apache.batik.dom.svg.AbstractSVGAnimatedLength r0;
        org.w3c.dom.Attr r1;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGAnimatedLength;

        r1 := @parameter0: org.w3c.dom.Attr;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: void attrChanged()>();

        return;
    }

    public void attrModified(org.w3c.dom.Attr, java.lang.String, java.lang.String)
    {
        java.lang.String r2, r3;
        org.apache.batik.dom.svg.AbstractSVGAnimatedLength r0;
        org.w3c.dom.Attr r1;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGAnimatedLength;

        r1 := @parameter0: org.w3c.dom.Attr;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: void attrChanged()>();

        return;
    }

    public void attrRemoved(org.w3c.dom.Attr, java.lang.String)
    {
        java.lang.String r2;
        org.apache.batik.dom.svg.AbstractSVGAnimatedLength r0;
        org.w3c.dom.Attr r1;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGAnimatedLength;

        r1 := @parameter0: org.w3c.dom.Attr;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: void attrChanged()>();

        return;
    }

    protected void attrChanged()
    {
        org.apache.batik.dom.svg.AbstractSVGAnimatedLength$BaseSVGLength $r1, $r2;
        org.apache.batik.dom.svg.AbstractSVGAnimatedLength r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGAnimatedLength;

        $z0 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: boolean changing>;

        if $z0 != 0 goto label1;

        $r1 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: org.apache.batik.dom.svg.AbstractSVGAnimatedLength$BaseSVGLength baseVal>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength: org.apache.batik.dom.svg.AbstractSVGAnimatedLength$BaseSVGLength baseVal>;

        virtualinvoke $r2.<org.apache.batik.dom.svg.AbstractSVGAnimatedLength$BaseSVGLength: void invalidate()>();

     label1:
        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireBaseAttributeListeners()>();

        $z1 = r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal>;

        if $z1 != 0 goto label2;

        virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: void fireAnimatedAttributeListeners()>();

     label2:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.batik.dom.svg.AbstractSVGAnimatedLength: short OTHER_LENGTH> = 0;

        <org.apache.batik.dom.svg.AbstractSVGAnimatedLength: short VERTICAL_LENGTH> = 1;

        <org.apache.batik.dom.svg.AbstractSVGAnimatedLength: short HORIZONTAL_LENGTH> = 2;

        return;
    }
}
