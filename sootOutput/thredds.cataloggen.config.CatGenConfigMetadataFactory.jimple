public class thredds.cataloggen.config.CatGenConfigMetadataFactory extends java.lang.Object implements thredds.catalog.MetadataConverterIF
{
    private static org.slf4j.Logger log;
    private static boolean showParsedXML;
    private static boolean debug;
    private static final org.jdom.Namespace CATALOG_GEN_CONFIG_NAMESPACE_0_5;

    public void <init>()
    {
        org.slf4j.Logger $r1;
        thredds.cataloggen.config.CatGenConfigMetadataFactory r0;

        r0 := @this: thredds.cataloggen.config.CatGenConfigMetadataFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <thredds.cataloggen.config.CatGenConfigMetadataFactory: org.slf4j.Logger log>;

        interfaceinvoke $r1.<org.slf4j.Logger: void debug(java.lang.String)>("CatGenConfigMetadataFactory(): .");

        return;
    }

    private java.lang.Object readMetadataContentFromURL(thredds.catalog.InvDataset, java.lang.String) throws java.net.MalformedURLException, java.io.IOException
    {
        org.jdom.input.SAXBuilder $r0;
        thredds.cataloggen.config.CatGenConfigMetadataFactory r3;
        org.jdom.output.Format $r8;
        org.jdom.output.XMLOutputter $r7;
        org.jdom.Document $r2;
        org.jdom.JDOMException $r16;
        java.lang.String r1, $r12, $r15, $r20, $r22, $r26, $r28;
        boolean $z0;
        thredds.catalog.InvDataset r4;
        java.io.PrintStream $r10;
        org.slf4j.Logger $r18;
        java.io.IOException $r23;
        java.lang.Object $r6;
        java.lang.StringBuilder $r9, $r11, $r13, $r14, $r17, $r19, $r21, $r24, $r25, $r27;
        org.jdom.Element $r5;

        r3 := @this: thredds.cataloggen.config.CatGenConfigMetadataFactory;

        r4 := @parameter0: thredds.catalog.InvDataset;

        r1 := @parameter1: java.lang.String;

     label1:
        $r0 = new org.jdom.input.SAXBuilder;

        specialinvoke $r0.<org.jdom.input.SAXBuilder: void <init>(boolean)>(1);

        $r2 = virtualinvoke $r0.<org.jdom.input.SAXBuilder: org.jdom.Document build(java.lang.String)>(r1);

     label2:
        goto label4;

     label3:
        $r16 := @caughtexception;

        $r18 = <thredds.cataloggen.config.CatGenConfigMetadataFactory: org.slf4j.Logger log>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CatGenConfigMetadataFactory parsing error= \n");

        $r20 = virtualinvoke $r16.<org.jdom.JDOMException: java.lang.String getMessage()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r18.<org.slf4j.Logger: void error(java.lang.String)>($r22);

        $r23 = new java.io.IOException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CatGenConfigMetadataFactory parsing error= ");

        $r26 = virtualinvoke $r16.<org.jdom.JDOMException: java.lang.String getMessage()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.io.IOException: void <init>(java.lang.String)>($r28);

        throw $r23;

     label4:
        $z0 = <thredds.cataloggen.config.CatGenConfigMetadataFactory: boolean showParsedXML>;

        if $z0 == 0 goto label5;

        $r7 = new org.jdom.output.XMLOutputter;

        $r8 = staticinvoke <org.jdom.output.Format: org.jdom.output.Format getPrettyFormat()>();

        specialinvoke $r7.<org.jdom.output.XMLOutputter: void <init>(org.jdom.output.Format)>($r8);

        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*** catalog/showParsedXML = \n");

        $r12 = virtualinvoke $r7.<org.jdom.output.XMLOutputter: java.lang.String outputString(org.jdom.Document)>($r2);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n*******");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r15);

     label5:
        $r5 = virtualinvoke $r2.<org.jdom.Document: org.jdom.Element getRootElement()>();

        $r6 = specialinvoke r3.<thredds.cataloggen.config.CatGenConfigMetadataFactory: java.lang.Object readMetadataContentJdom(thredds.catalog.InvDataset,org.jdom.Element)>(r4, $r5);

        return $r6;

        catch org.jdom.JDOMException from label1 to label2 with label3;
    }

    public java.lang.Object readMetadataContent(thredds.catalog.InvDataset, org.jdom.Element)
    {
        org.slf4j.Logger $r0;
        thredds.cataloggen.config.CatGenConfigMetadataFactory r1;
        java.lang.Object $r4;
        org.jdom.Element r3;
        thredds.catalog.InvDataset r2;

        r1 := @this: thredds.cataloggen.config.CatGenConfigMetadataFactory;

        r2 := @parameter0: thredds.catalog.InvDataset;

        r3 := @parameter1: org.jdom.Element;

        $r0 = <thredds.cataloggen.config.CatGenConfigMetadataFactory: org.slf4j.Logger log>;

        interfaceinvoke $r0.<org.slf4j.Logger: void debug(java.lang.String)>("readMetadataContent(): .");

        $r4 = specialinvoke r1.<thredds.cataloggen.config.CatGenConfigMetadataFactory: java.lang.Object readMetadataContentJdom(thredds.catalog.InvDataset,org.jdom.Element)>(r2, r3);

        return $r4;
    }

    public java.lang.Object readMetadataContentFromURL(thredds.catalog.InvDataset, java.net.URI) throws java.io.IOException
    {
        java.net.URI r2;
        thredds.cataloggen.config.CatGenConfigMetadataFactory r0;
        thredds.catalog.InvDataset r1;

        r0 := @this: thredds.cataloggen.config.CatGenConfigMetadataFactory;

        r1 := @parameter0: thredds.catalog.InvDataset;

        r2 := @parameter1: java.net.URI;

        return null;
    }

    public void addMetadataContent(org.jdom.Element, java.lang.Object)
    {
        java.util.Iterator $r2;
        thredds.cataloggen.config.CatGenConfigMetadataFactory r6;
        thredds.cataloggen.config.CatalogGenConfig r4;
        java.util.ArrayList r1;
        java.lang.Object r0, $r3;
        org.jdom.Element r5, $r7;
        boolean $z0;

        r6 := @this: thredds.cataloggen.config.CatGenConfigMetadataFactory;

        r5 := @parameter0: org.jdom.Element;

        r0 := @parameter1: java.lang.Object;

        r1 = (java.util.ArrayList) r0;

        $r2 = virtualinvoke r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (thredds.cataloggen.config.CatalogGenConfig) $r3;

        $r7 = specialinvoke r6.<thredds.cataloggen.config.CatGenConfigMetadataFactory: org.jdom.Element createCatGenConfigElement(thredds.cataloggen.config.CatalogGenConfig)>(r4);

        virtualinvoke r5.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r7);

        goto label1;

     label2:
        return;
    }

    public boolean validateMetadataContent(java.lang.Object, java.lang.StringBuilder)
    {
        java.util.Iterator $r2;
        thredds.cataloggen.config.CatGenConfigMetadataFactory r6;
        thredds.cataloggen.config.CatalogGenConfig r4;
        java.util.ArrayList r1;
        java.lang.Object r0, $r3;
        java.lang.StringBuilder r5;
        boolean $z0, $z1, z2;

        r6 := @this: thredds.cataloggen.config.CatGenConfigMetadataFactory;

        r0 := @parameter0: java.lang.Object;

        r5 := @parameter1: java.lang.StringBuilder;

        z2 = 1;

        r1 = (java.util.ArrayList) r0;

        $r2 = virtualinvoke r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (thredds.cataloggen.config.CatalogGenConfig) $r3;

        $z1 = virtualinvoke r4.<thredds.cataloggen.config.CatalogGenConfig: boolean validate(java.lang.StringBuilder)>(r5);

        z2 = z2 & $z1;

        goto label1;

     label2:
        return z2;
    }

    private java.lang.Object readMetadataContentJdom(thredds.catalog.InvDataset, org.jdom.Element)
    {
        thredds.cataloggen.config.CatGenConfigMetadataFactory r7;
        thredds.cataloggen.config.CatalogGenConfig $r9;
        java.util.ArrayList $r0;
        org.jdom.Namespace $r2, $r15;
        java.lang.String $r14;
        boolean $z0, $z1, $z2;
        thredds.catalog.InvDataset r8;
        org.slf4j.Logger $r11;
        java.util.Iterator $r4, r17;
        java.util.List $r3, $r16;
        java.lang.Object $r5;
        java.lang.StringBuilder $r10, $r12, $r13;
        org.jdom.Element r1, r6;

        r7 := @this: thredds.cataloggen.config.CatGenConfigMetadataFactory;

        r8 := @parameter0: thredds.catalog.InvDataset;

        r1 := @parameter1: org.jdom.Element;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = <thredds.cataloggen.config.CatGenConfigMetadataFactory: org.jdom.Namespace CATALOG_GEN_CONFIG_NAMESPACE_0_5>;

        $r3 = virtualinvoke r1.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("catalogGenConfig", $r2);

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        r17 = $r4;

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r15 = virtualinvoke r1.<org.jdom.Element: org.jdom.Namespace getNamespace()>();

        $r16 = virtualinvoke r1.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("catalogGenConfig", $r15);

        r17 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r5 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.jdom.Element) $r5;

        $z1 = <thredds.cataloggen.config.CatGenConfigMetadataFactory: boolean debug>;

        if $z1 == 0 goto label2;

        $r11 = <thredds.cataloggen.config.CatGenConfigMetadataFactory: org.slf4j.Logger log>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readMetadataContent=");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String)>($r14);

     label2:
        $r9 = specialinvoke r7.<thredds.cataloggen.config.CatGenConfigMetadataFactory: thredds.cataloggen.config.CatalogGenConfig readCatGenConfigElement(thredds.catalog.InvDataset,org.jdom.Element)>(r8, r6);

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        goto label1;

     label3:
        return $r0;
    }

    private thredds.cataloggen.config.CatalogGenConfig readCatGenConfigElement(thredds.catalog.InvDataset, org.jdom.Element)
    {
        thredds.cataloggen.config.CatGenConfigMetadataFactory r8;
        thredds.cataloggen.config.CatalogGenConfig $r2;
        java.util.List $r5;
        thredds.cataloggen.config.DatasetSource $r9;
        int $i0, i1;
        org.jdom.Namespace $r4;
        java.lang.Object $r6;
        java.lang.String $r1;
        org.jdom.Element r0, r7;
        thredds.catalog.InvDataset r3;

        r8 := @this: thredds.cataloggen.config.CatGenConfigMetadataFactory;

        r3 := @parameter0: thredds.catalog.InvDataset;

        r0 := @parameter1: org.jdom.Element;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("type");

        $r2 = new thredds.cataloggen.config.CatalogGenConfig;

        specialinvoke $r2.<thredds.cataloggen.config.CatalogGenConfig: void <init>(thredds.catalog.InvDataset,java.lang.String)>(r3, $r1);

        $r4 = virtualinvoke r0.<org.jdom.Element: org.jdom.Namespace getNamespace()>();

        $r5 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("datasetSource", $r4);

        i1 = 0;

     label1:
        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i1);

        r7 = (org.jdom.Element) $r6;

        $r9 = specialinvoke r8.<thredds.cataloggen.config.CatGenConfigMetadataFactory: thredds.cataloggen.config.DatasetSource readDatasetSourceElement(thredds.catalog.InvDataset,org.jdom.Element)>(r3, r7);

        virtualinvoke $r2.<thredds.cataloggen.config.CatalogGenConfig: void setDatasetSource(thredds.cataloggen.config.DatasetSource)>($r9);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r2;
    }

    private thredds.cataloggen.config.DatasetSource readDatasetSourceElement(thredds.catalog.InvDataset, org.jdom.Element)
    {
        thredds.cataloggen.config.DatasetSourceType $r11;
        thredds.cataloggen.config.CatGenConfigMetadataFactory r8;
        thredds.cataloggen.config.DatasetNamer $r21;
        thredds.cataloggen.config.DatasetSourceStructure $r12;
        int $i0, i1, $i2, i3;
        thredds.cataloggen.config.DatasetFilter $r19;
        java.lang.Boolean $r22;
        org.jdom.Namespace $r6, $r14, $r16;
        java.lang.String $r1, $r2, $r3, $r4, $r5;
        thredds.catalog.InvDataset r9;
        boolean $z0;
        java.util.List $r15, $r17;
        thredds.cataloggen.config.DatasetSource $r13;
        thredds.cataloggen.config.ResultService $r10;
        java.lang.Object $r18, $r20;
        org.jdom.Element r0, $r7, r23, r24;

        r8 := @this: thredds.cataloggen.config.CatGenConfigMetadataFactory;

        r9 := @parameter0: thredds.catalog.InvDataset;

        r0 := @parameter1: org.jdom.Element;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("name");

        $r2 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("type");

        $r3 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("structure");

        $r4 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("accessPoint");

        $r5 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("createCatalogRefs");

        $r6 = virtualinvoke r0.<org.jdom.Element: org.jdom.Namespace getNamespace()>();

        $r7 = virtualinvoke r0.<org.jdom.Element: org.jdom.Element getChild(java.lang.String,org.jdom.Namespace)>("resultService", $r6);

        $r10 = specialinvoke r8.<thredds.cataloggen.config.CatGenConfigMetadataFactory: thredds.cataloggen.config.ResultService readResultServiceElement(thredds.catalog.InvDataset,org.jdom.Element)>(r9, $r7);

        $r11 = staticinvoke <thredds.cataloggen.config.DatasetSourceType: thredds.cataloggen.config.DatasetSourceType getType(java.lang.String)>($r2);

        $r12 = staticinvoke <thredds.cataloggen.config.DatasetSourceStructure: thredds.cataloggen.config.DatasetSourceStructure getStructure(java.lang.String)>($r3);

        $r13 = staticinvoke <thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.DatasetSource newDatasetSource(java.lang.String,thredds.cataloggen.config.DatasetSourceType,thredds.cataloggen.config.DatasetSourceStructure,java.lang.String,thredds.cataloggen.config.ResultService)>($r1, $r11, $r12, $r4, $r10);

        if $r5 == null goto label1;

        $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r5);

        $z0 = virtualinvoke $r22.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r13.<thredds.cataloggen.config.DatasetSource: void setCreateCatalogRefs(boolean)>($z0);

     label1:
        $r14 = virtualinvoke r0.<org.jdom.Element: org.jdom.Namespace getNamespace()>();

        $r15 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("datasetNamer", $r14);

        i1 = 0;

     label2:
        $i2 = interfaceinvoke $r15.<java.util.List: int size()>();

        if i1 >= $i2 goto label3;

        $r20 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(i1);

        r23 = (org.jdom.Element) $r20;

        $r21 = specialinvoke r8.<thredds.cataloggen.config.CatGenConfigMetadataFactory: thredds.cataloggen.config.DatasetNamer readDatasetNamerElement(thredds.catalog.InvDataset,org.jdom.Element)>(r9, r23);

        virtualinvoke $r13.<thredds.cataloggen.config.DatasetSource: void addDatasetNamer(thredds.cataloggen.config.DatasetNamer)>($r21);

        i1 = i1 + 1;

        goto label2;

     label3:
        $r16 = virtualinvoke r0.<org.jdom.Element: org.jdom.Namespace getNamespace()>();

        $r17 = virtualinvoke r0.<org.jdom.Element: java.util.List getChildren(java.lang.String,org.jdom.Namespace)>("datasetFilter", $r16);

        i3 = 0;

     label4:
        $i0 = interfaceinvoke $r17.<java.util.List: int size()>();

        if i3 >= $i0 goto label5;

        $r18 = interfaceinvoke $r17.<java.util.List: java.lang.Object get(int)>(i3);

        r24 = (org.jdom.Element) $r18;

        $r19 = specialinvoke r8.<thredds.cataloggen.config.CatGenConfigMetadataFactory: thredds.cataloggen.config.DatasetFilter readDatasetFilterElement(thredds.cataloggen.config.DatasetSource,org.jdom.Element)>($r13, r24);

        virtualinvoke $r13.<thredds.cataloggen.config.DatasetSource: void addDatasetFilter(thredds.cataloggen.config.DatasetFilter)>($r19);

        i3 = i3 + 1;

        goto label4;

     label5:
        return $r13;
    }

    private thredds.cataloggen.config.DatasetNamer readDatasetNamerElement(thredds.catalog.InvDataset, org.jdom.Element)
    {
        thredds.cataloggen.config.CatGenConfigMetadataFactory r10;
        thredds.cataloggen.config.DatasetNamer $r8;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        org.jdom.Element r0;
        thredds.catalog.InvDataset r9;

        r10 := @this: thredds.cataloggen.config.CatGenConfigMetadataFactory;

        r9 := @parameter0: thredds.catalog.InvDataset;

        r0 := @parameter1: org.jdom.Element;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("name");

        $r2 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("addLevel");

        $r3 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("type");

        $r4 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("matchPattern");

        $r5 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("substitutePattern");

        $r6 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("attribContainer");

        $r7 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("attribName");

        $r8 = new thredds.cataloggen.config.DatasetNamer;

        specialinvoke $r8.<thredds.cataloggen.config.DatasetNamer: void <init>(thredds.catalog.InvDataset,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r9, $r1, $r2, $r3, $r4, $r5, $r6, $r7);

        return $r8;
    }

    private thredds.cataloggen.config.DatasetFilter readDatasetFilterElement(thredds.cataloggen.config.DatasetSource, org.jdom.Element)
    {
        thredds.cataloggen.config.CatGenConfigMetadataFactory r17;
        thredds.cataloggen.config.DatasetFilter$Type $r6;
        thredds.cataloggen.config.DatasetFilter $r4;
        java.lang.Boolean $r12, $r14, $r16;
        java.lang.String $r1, $r2, $r3, $r7, $r8, $r9, $r10, $r11, $r13, $r15;
        boolean $z0, $z1, $z2;
        thredds.cataloggen.config.DatasetSource r5;
        org.jdom.Element r0;

        r17 := @this: thredds.cataloggen.config.CatGenConfigMetadataFactory;

        r5 := @parameter0: thredds.cataloggen.config.DatasetSource;

        r0 := @parameter1: org.jdom.Element;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("name");

        $r2 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("type");

        $r3 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("matchPattern");

        $r4 = new thredds.cataloggen.config.DatasetFilter;

        $r6 = staticinvoke <thredds.cataloggen.config.DatasetFilter$Type: thredds.cataloggen.config.DatasetFilter$Type getType(java.lang.String)>($r2);

        specialinvoke $r4.<thredds.cataloggen.config.DatasetFilter: void <init>(thredds.cataloggen.config.DatasetSource,java.lang.String,thredds.cataloggen.config.DatasetFilter$Type,java.lang.String)>(r5, $r1, $r6, $r3);

        $r7 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("matchPatternTarget");

        virtualinvoke $r4.<thredds.cataloggen.config.DatasetFilter: void setMatchPatternTarget(java.lang.String)>($r7);

        $r8 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("applyToCollectionDatasets");

        if $r8 == null goto label1;

        $r15 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("applyToCollectionDatasets");

        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r15);

        $z2 = virtualinvoke $r16.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r4.<thredds.cataloggen.config.DatasetFilter: void setApplyToCollectionDatasets(boolean)>($z2);

     label1:
        $r9 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("applyToAtomicDatasets");

        if $r9 == null goto label2;

        $r13 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("applyToAtomicDatasets");

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r13);

        $z1 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r4.<thredds.cataloggen.config.DatasetFilter: void setApplyToAtomicDatasets(boolean)>($z1);

     label2:
        $r10 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("rejectMatchingDatasets");

        if $r10 == null goto label3;

        $r11 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("rejectMatchingDatasets");

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r11);

        $z0 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r4.<thredds.cataloggen.config.DatasetFilter: void setRejectMatchingDatasets(boolean)>($z0);

     label3:
        return $r4;
    }

    private thredds.cataloggen.config.ResultService readResultServiceElement(thredds.catalog.InvDataset, org.jdom.Element)
    {
        thredds.cataloggen.config.CatGenConfigMetadataFactory r8;
        thredds.catalog.ServiceType $r7;
        thredds.cataloggen.config.ResultService $r6;
        java.lang.String $r1, $r2, $r3, $r4, $r5;
        org.jdom.Element r0;
        thredds.catalog.InvDataset r9;

        r8 := @this: thredds.cataloggen.config.CatGenConfigMetadataFactory;

        r9 := @parameter0: thredds.catalog.InvDataset;

        r0 := @parameter1: org.jdom.Element;

        $r1 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("name");

        $r2 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("serviceType");

        $r3 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("base");

        $r4 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("suffix");

        $r5 = virtualinvoke r0.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String)>("accessPointHeader");

        $r6 = new thredds.cataloggen.config.ResultService;

        $r7 = staticinvoke <thredds.catalog.ServiceType: thredds.catalog.ServiceType getType(java.lang.String)>($r2);

        specialinvoke $r6.<thredds.cataloggen.config.ResultService: void <init>(java.lang.String,thredds.catalog.ServiceType,java.lang.String,java.lang.String,java.lang.String)>($r1, $r7, $r3, $r4, $r5);

        return $r6;
    }

    private org.jdom.Element createCatGenConfigElement(thredds.cataloggen.config.CatalogGenConfig)
    {
        thredds.cataloggen.config.CatGenConfigMetadataFactory r5;
        thredds.cataloggen.config.CatalogGenConfig$Type $r3, $r7;
        thredds.cataloggen.config.CatalogGenConfig r2;
        thredds.cataloggen.config.DatasetSource $r4;
        org.jdom.Namespace $r1;
        java.lang.String $r8;
        org.jdom.Element $r0, $r6;

        r5 := @this: thredds.cataloggen.config.CatGenConfigMetadataFactory;

        r2 := @parameter0: thredds.cataloggen.config.CatalogGenConfig;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.cataloggen.config.CatGenConfigMetadataFactory: org.jdom.Namespace CATALOG_GEN_CONFIG_NAMESPACE_0_5>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("catalogGenConfig", $r1);

        if r2 == null goto label2;

        $r3 = virtualinvoke r2.<thredds.cataloggen.config.CatalogGenConfig: thredds.cataloggen.config.CatalogGenConfig$Type getType()>();

        if $r3 == null goto label1;

        $r7 = virtualinvoke r2.<thredds.cataloggen.config.CatalogGenConfig: thredds.cataloggen.config.CatalogGenConfig$Type getType()>();

        $r8 = virtualinvoke $r7.<thredds.cataloggen.config.CatalogGenConfig$Type: java.lang.String toString()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("type", $r8);

     label1:
        $r4 = virtualinvoke r2.<thredds.cataloggen.config.CatalogGenConfig: thredds.cataloggen.config.DatasetSource getDatasetSource()>();

        $r6 = specialinvoke r5.<thredds.cataloggen.config.CatGenConfigMetadataFactory: org.jdom.Element createDatasetSourceElement(thredds.cataloggen.config.DatasetSource)>($r4);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r6);

     label2:
        return $r0;
    }

    private org.jdom.Element createDatasetSourceElement(thredds.cataloggen.config.DatasetSource)
    {
        thredds.cataloggen.config.DatasetSourceType $r4, $r20;
        thredds.cataloggen.config.CatGenConfigMetadataFactory r9;
        thredds.cataloggen.config.DatasetNamer r23;
        thredds.cataloggen.config.DatasetSourceStructure $r5, $r18;
        int $i0, i1, $i2, i3;
        thredds.cataloggen.config.DatasetFilter r24;
        org.jdom.Namespace $r1;
        java.lang.String $r3, $r6, $r7, $r17, $r19, $r21, $r22;
        boolean $z0;
        java.util.List $r11, $r12;
        thredds.cataloggen.config.DatasetSource r2;
        thredds.cataloggen.config.ResultService $r8;
        java.lang.Object $r13, $r15;
        org.jdom.Element $r0, $r10, $r14, $r16;

        r9 := @this: thredds.cataloggen.config.CatGenConfigMetadataFactory;

        r2 := @parameter0: thredds.cataloggen.config.DatasetSource;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.cataloggen.config.CatGenConfigMetadataFactory: org.jdom.Namespace CATALOG_GEN_CONFIG_NAMESPACE_0_5>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("datasetSource", $r1);

        if r2 == null goto label8;

        $r3 = virtualinvoke r2.<thredds.cataloggen.config.DatasetSource: java.lang.String getName()>();

        if $r3 == null goto label1;

        $r22 = virtualinvoke r2.<thredds.cataloggen.config.DatasetSource: java.lang.String getName()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("name", $r22);

     label1:
        $r4 = virtualinvoke r2.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.DatasetSourceType getType()>();

        if $r4 == null goto label2;

        $r20 = virtualinvoke r2.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.DatasetSourceType getType()>();

        $r21 = virtualinvoke $r20.<thredds.cataloggen.config.DatasetSourceType: java.lang.String toString()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("type", $r21);

     label2:
        $r5 = virtualinvoke r2.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.DatasetSourceStructure getStructure()>();

        if $r5 == null goto label3;

        $r18 = virtualinvoke r2.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.DatasetSourceStructure getStructure()>();

        $r19 = virtualinvoke $r18.<thredds.cataloggen.config.DatasetSourceStructure: java.lang.String toString()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("structure", $r19);

     label3:
        $r6 = virtualinvoke r2.<thredds.cataloggen.config.DatasetSource: java.lang.String getAccessPoint()>();

        if $r6 == null goto label4;

        $r17 = virtualinvoke r2.<thredds.cataloggen.config.DatasetSource: java.lang.String getAccessPoint()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("accessPoint", $r17);

     label4:
        $z0 = virtualinvoke r2.<thredds.cataloggen.config.DatasetSource: boolean isCreateCatalogRefs()>();

        $r7 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z0);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("createCatalogRefs", $r7);

        $r8 = virtualinvoke r2.<thredds.cataloggen.config.DatasetSource: thredds.cataloggen.config.ResultService getResultService()>();

        $r10 = specialinvoke r9.<thredds.cataloggen.config.CatGenConfigMetadataFactory: org.jdom.Element createResultServiceElement(thredds.cataloggen.config.ResultService)>($r8);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r10);

        $r11 = virtualinvoke r2.<thredds.cataloggen.config.DatasetSource: java.util.List getDatasetNamerList()>();

        i1 = 0;

     label5:
        $i2 = interfaceinvoke $r11.<java.util.List: int size()>();

        if i1 >= $i2 goto label6;

        $r15 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i1);

        r23 = (thredds.cataloggen.config.DatasetNamer) $r15;

        $r16 = specialinvoke r9.<thredds.cataloggen.config.CatGenConfigMetadataFactory: org.jdom.Element createDatasetNamerElement(thredds.cataloggen.config.DatasetNamer)>(r23);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r16);

        i1 = i1 + 1;

        goto label5;

     label6:
        $r12 = virtualinvoke r2.<thredds.cataloggen.config.DatasetSource: java.util.List getDatasetFilterList()>();

        i3 = 0;

     label7:
        $i0 = interfaceinvoke $r12.<java.util.List: int size()>();

        if i3 >= $i0 goto label8;

        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(i3);

        r24 = (thredds.cataloggen.config.DatasetFilter) $r13;

        $r14 = specialinvoke r9.<thredds.cataloggen.config.CatGenConfigMetadataFactory: org.jdom.Element createDatasetFilterElement(thredds.cataloggen.config.DatasetFilter)>(r24);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r14);

        i3 = i3 + 1;

        goto label7;

     label8:
        return $r0;
    }

    private org.jdom.Element createDatasetNamerElement(thredds.cataloggen.config.DatasetNamer)
    {
        thredds.cataloggen.config.CatGenConfigMetadataFactory r17;
        thredds.cataloggen.config.DatasetNamer r2;
        org.jdom.Namespace $r1;
        java.lang.String $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r15, $r16;
        boolean $z0;
        thredds.cataloggen.config.DatasetNamerType $r5, $r14;
        org.jdom.Element $r0;

        r17 := @this: thredds.cataloggen.config.CatGenConfigMetadataFactory;

        r2 := @parameter0: thredds.cataloggen.config.DatasetNamer;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.cataloggen.config.CatGenConfigMetadataFactory: org.jdom.Namespace CATALOG_GEN_CONFIG_NAMESPACE_0_5>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("datasetNamer", $r1);

        if r2 == null goto label6;

        $r3 = virtualinvoke r2.<thredds.cataloggen.config.DatasetNamer: java.lang.String getName()>();

        if $r3 == null goto label1;

        $r16 = virtualinvoke r2.<thredds.cataloggen.config.DatasetNamer: java.lang.String getName()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("name", $r16);

     label1:
        $z0 = virtualinvoke r2.<thredds.cataloggen.config.DatasetNamer: boolean getAddLevel()>();

        $r4 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z0);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("addLevel", $r4);

        $r5 = virtualinvoke r2.<thredds.cataloggen.config.DatasetNamer: thredds.cataloggen.config.DatasetNamerType getType()>();

        if $r5 == null goto label2;

        $r14 = virtualinvoke r2.<thredds.cataloggen.config.DatasetNamer: thredds.cataloggen.config.DatasetNamerType getType()>();

        $r15 = virtualinvoke $r14.<thredds.cataloggen.config.DatasetNamerType: java.lang.String toString()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("type", $r15);

     label2:
        $r6 = virtualinvoke r2.<thredds.cataloggen.config.DatasetNamer: java.lang.String getMatchPattern()>();

        if $r6 == null goto label3;

        $r13 = virtualinvoke r2.<thredds.cataloggen.config.DatasetNamer: java.lang.String getMatchPattern()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("matchPattern", $r13);

     label3:
        $r7 = virtualinvoke r2.<thredds.cataloggen.config.DatasetNamer: java.lang.String getSubstitutePattern()>();

        if $r7 == null goto label4;

        $r12 = virtualinvoke r2.<thredds.cataloggen.config.DatasetNamer: java.lang.String getSubstitutePattern()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("substitutePattern", $r12);

     label4:
        $r8 = virtualinvoke r2.<thredds.cataloggen.config.DatasetNamer: java.lang.String getAttribContainer()>();

        if $r8 == null goto label5;

        $r11 = virtualinvoke r2.<thredds.cataloggen.config.DatasetNamer: java.lang.String getAttribContainer()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("attribContainer", $r11);

     label5:
        $r9 = virtualinvoke r2.<thredds.cataloggen.config.DatasetNamer: java.lang.String getAttribName()>();

        if $r9 == null goto label6;

        $r10 = virtualinvoke r2.<thredds.cataloggen.config.DatasetNamer: java.lang.String getAttribName()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("attribName", $r10);

     label6:
        return $r0;
    }

    private org.jdom.Element createDatasetFilterElement(thredds.cataloggen.config.DatasetFilter)
    {
        thredds.cataloggen.config.CatGenConfigMetadataFactory r15;
        thredds.cataloggen.config.DatasetFilter$Type $r4, $r12;
        thredds.cataloggen.config.DatasetFilter r2;
        org.jdom.Namespace $r1;
        java.lang.String $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r14;
        boolean $z0, $z1, $z2;
        org.jdom.Element $r0;

        r15 := @this: thredds.cataloggen.config.CatGenConfigMetadataFactory;

        r2 := @parameter0: thredds.cataloggen.config.DatasetFilter;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.cataloggen.config.CatGenConfigMetadataFactory: org.jdom.Namespace CATALOG_GEN_CONFIG_NAMESPACE_0_5>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("datasetFilter", $r1);

        if r2 == null goto label5;

        $r3 = virtualinvoke r2.<thredds.cataloggen.config.DatasetFilter: java.lang.String getName()>();

        if $r3 == null goto label1;

        $r14 = virtualinvoke r2.<thredds.cataloggen.config.DatasetFilter: java.lang.String getName()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("name", $r14);

     label1:
        $r4 = virtualinvoke r2.<thredds.cataloggen.config.DatasetFilter: thredds.cataloggen.config.DatasetFilter$Type getType()>();

        if $r4 == null goto label2;

        $r12 = virtualinvoke r2.<thredds.cataloggen.config.DatasetFilter: thredds.cataloggen.config.DatasetFilter$Type getType()>();

        $r13 = virtualinvoke $r12.<thredds.cataloggen.config.DatasetFilter$Type: java.lang.String toString()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("type", $r13);

     label2:
        $r5 = virtualinvoke r2.<thredds.cataloggen.config.DatasetFilter: java.lang.String getMatchPattern()>();

        if $r5 == null goto label3;

        $r11 = virtualinvoke r2.<thredds.cataloggen.config.DatasetFilter: java.lang.String getMatchPattern()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("matchPattern", $r11);

     label3:
        $r6 = virtualinvoke r2.<thredds.cataloggen.config.DatasetFilter: java.lang.String getMatchPatternTarget()>();

        if $r6 == null goto label4;

        $r10 = virtualinvoke r2.<thredds.cataloggen.config.DatasetFilter: java.lang.String getMatchPatternTarget()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("matchPatternTarget", $r10);

     label4:
        $z0 = virtualinvoke r2.<thredds.cataloggen.config.DatasetFilter: boolean isApplyToCollectionDatasets()>();

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z0);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("applyToCollectionDatasets", $r7);

        $z1 = virtualinvoke r2.<thredds.cataloggen.config.DatasetFilter: boolean isApplyToAtomicDatasets()>();

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z1);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("applyToAtomicDatasets", $r8);

        $z2 = virtualinvoke r2.<thredds.cataloggen.config.DatasetFilter: boolean isRejectMatchingDatasets()>();

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z2);

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("rejectMatchingDatasets", $r9);

     label5:
        return $r0;
    }

    private org.jdom.Element createResultServiceElement(thredds.cataloggen.config.ResultService)
    {
        thredds.cataloggen.config.CatGenConfigMetadataFactory r14;
        thredds.catalog.ServiceType $r4, $r11;
        thredds.cataloggen.config.ResultService r2;
        org.jdom.Namespace $r1;
        java.lang.String $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r13;
        org.jdom.Element $r0;

        r14 := @this: thredds.cataloggen.config.CatGenConfigMetadataFactory;

        r2 := @parameter0: thredds.cataloggen.config.ResultService;

        $r0 = new org.jdom.Element;

        $r1 = <thredds.cataloggen.config.CatGenConfigMetadataFactory: org.jdom.Namespace CATALOG_GEN_CONFIG_NAMESPACE_0_5>;

        specialinvoke $r0.<org.jdom.Element: void <init>(java.lang.String,org.jdom.Namespace)>("resultService", $r1);

        if r2 == null goto label5;

        $r3 = virtualinvoke r2.<thredds.cataloggen.config.ResultService: java.lang.String getName()>();

        if $r3 == null goto label1;

        $r13 = virtualinvoke r2.<thredds.cataloggen.config.ResultService: java.lang.String getName()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("name", $r13);

     label1:
        $r4 = virtualinvoke r2.<thredds.cataloggen.config.ResultService: thredds.catalog.ServiceType getServiceType()>();

        if $r4 == null goto label2;

        $r11 = virtualinvoke r2.<thredds.cataloggen.config.ResultService: thredds.catalog.ServiceType getServiceType()>();

        $r12 = virtualinvoke $r11.<thredds.catalog.ServiceType: java.lang.String toString()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("serviceType", $r12);

     label2:
        $r5 = virtualinvoke r2.<thredds.cataloggen.config.ResultService: java.lang.String getBase()>();

        if $r5 == null goto label3;

        $r10 = virtualinvoke r2.<thredds.cataloggen.config.ResultService: java.lang.String getBase()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("base", $r10);

     label3:
        $r6 = virtualinvoke r2.<thredds.cataloggen.config.ResultService: java.lang.String getSuffix()>();

        if $r6 == null goto label4;

        $r9 = virtualinvoke r2.<thredds.cataloggen.config.ResultService: java.lang.String getSuffix()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("suffix", $r9);

     label4:
        $r7 = virtualinvoke r2.<thredds.cataloggen.config.ResultService: java.lang.String getAccessPointHeader()>();

        if $r7 == null goto label5;

        $r8 = virtualinvoke r2.<thredds.cataloggen.config.ResultService: java.lang.String getAccessPointHeader()>();

        virtualinvoke $r0.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("accessPointHeader", $r8);

     label5:
        return $r0;
    }

    static void <clinit>()
    {
        org.jdom.Namespace $r1;
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lthredds/cataloggen/config/CatGenConfigMetadataFactory;");

        <thredds.cataloggen.config.CatGenConfigMetadataFactory: org.slf4j.Logger log> = $r0;

        <thredds.cataloggen.config.CatGenConfigMetadataFactory: boolean showParsedXML> = 0;

        <thredds.cataloggen.config.CatGenConfigMetadataFactory: boolean debug> = 0;

        $r1 = staticinvoke <org.jdom.Namespace: org.jdom.Namespace getNamespace(java.lang.String)>("http://www.unidata.ucar.edu/namespaces/thredds/CatalogGenConfig/v0.5");

        <thredds.cataloggen.config.CatGenConfigMetadataFactory: org.jdom.Namespace CATALOG_GEN_CONFIG_NAMESPACE_0_5> = $r1;

        return;
    }
}
