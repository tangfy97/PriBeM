public class ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse extends ucar.unidata.geoloc.ProjectionImpl
{
    private static final double TOL;
    private double lat0deg;
    private double lon0deg;
    private double lat0rad;
    private double lon0rad;
    private double par1deg;
    private double par2deg;
    private double par1rad;
    private double par2rad;
    private double falseEasting;
    private double falseNorthing;
    private ucar.unidata.geoloc.Earth earth;
    private double e;
    private double es;
    private double totalScale;
    private double n;
    private double c;
    private double rho0;
    private boolean isSpherical;

    public ucar.unidata.geoloc.ProjectionImpl constructCopy()
    {
        ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse $r0, r1;
        ucar.unidata.geoloc.Earth $r2;
        double $d0, $d1, $d2, $d3, $d4, $d5;

        r1 := @this: ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse;

        $r0 = new ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse;

        $d0 = virtualinvoke r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double getOriginLat()>();

        $d1 = virtualinvoke r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double getOriginLon()>();

        $d2 = virtualinvoke r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double getParallelOne()>();

        $d3 = virtualinvoke r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double getParallelTwo()>();

        $d4 = virtualinvoke r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double getFalseEasting()>();

        $d5 = virtualinvoke r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double getFalseNorthing()>();

        $r2 = virtualinvoke r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: ucar.unidata.geoloc.Earth getEarth()>();

        specialinvoke $r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: void <init>(double,double,double,double,double,double,ucar.unidata.geoloc.Earth)>($d0, $d1, $d2, $d3, $d4, $d5, $r2);

        return $r0;
    }

    public void <init>()
    {
        ucar.unidata.geoloc.Earth $r1;
        ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse r0;

        r0 := @this: ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse;

        $r1 = new ucar.unidata.geoloc.Earth;

        specialinvoke $r1.<ucar.unidata.geoloc.Earth: void <init>(double,double,double)>(6378137.0, 0.0, 298.257222101);

        specialinvoke r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: void <init>(double,double,double,double,double,double,ucar.unidata.geoloc.Earth)>(23.0, -96.0, 29.5, 45.5, 0.0, 0.0, $r1);

        return;
    }

    public void <init>(double, double, double, double, double, double, ucar.unidata.geoloc.Earth)
    {
        double[] r2;
        byte $b0, $b1, $b2, $b3;
        ucar.unidata.geoloc.Earth r1;
        double d0, d1, $d2, $d3, d4, d5, $d6, $d7, d8, d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;
        boolean $z0;
        ucar.unidata.util.Parameter $r3;
        ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse r0;

        r0 := @this: ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d4 := @parameter2: double;

        d5 := @parameter3: double;

        d8 := @parameter4: double;

        d9 := @parameter5: double;

        r1 := @parameter6: ucar.unidata.geoloc.Earth;

        specialinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: void <init>()>();

        r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: java.lang.String name> = "LambertConformalConicEllipse";

        r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double lat0deg> = d0;

        r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double lon0deg> = d1;

        $d2 = staticinvoke <java.lang.Math: double toRadians(double)>(d0);

        r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double lat0rad> = $d2;

        $d3 = staticinvoke <java.lang.Math: double toRadians(double)>(d0);

        r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double lon0rad> = $d3;

        r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double par1deg> = d4;

        r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double par2deg> = d5;

        $d6 = staticinvoke <java.lang.Math: double toRadians(double)>(d4);

        r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double par1rad> = $d6;

        $d7 = staticinvoke <java.lang.Math: double toRadians(double)>(d5);

        r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double par2rad> = $d7;

        r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double falseEasting> = d8;

        r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double falseNorthing> = d9;

        r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: ucar.unidata.geoloc.Earth earth> = r1;

        $d10 = virtualinvoke r1.<ucar.unidata.geoloc.Earth: double getEccentricity()>();

        r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double e> = $d10;

        $d11 = virtualinvoke r1.<ucar.unidata.geoloc.Earth: double getEccentricitySquared()>();

        r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double es> = $d11;

        $d12 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double e>;

        $b0 = $d12 cmpl 0.0;

        if $b0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: boolean isSpherical> = $z0;

        $d13 = virtualinvoke r1.<ucar.unidata.geoloc.Earth: double getMajor()>();

        $d14 = $d13 * 0.001;

        r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double totalScale> = $d14;

        specialinvoke r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: void initialize()>();

        virtualinvoke r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: void addParameter(java.lang.String,java.lang.String)>("grid_mapping_name", "lambert_conformal_conic");

        virtualinvoke r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: void addParameter(java.lang.String,double)>("latitude_of_projection_origin", d0);

        virtualinvoke r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: void addParameter(java.lang.String,double)>("longitude_of_central_meridian", d1);

        $b1 = d5 cmpl d4;

        if $b1 != 0 goto label3;

        virtualinvoke r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: void addParameter(java.lang.String,double)>("standard_parallel", d4);

        goto label4;

     label3:
        r2 = newarray (double)[2];

        r2[0] = d4;

        r2[1] = d5;

        $r3 = new ucar.unidata.util.Parameter;

        specialinvoke $r3.<ucar.unidata.util.Parameter: void <init>(java.lang.String,double[])>("standard_parallel", r2);

        virtualinvoke r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: void addParameter(ucar.unidata.util.Parameter)>($r3);

     label4:
        $b2 = d8 cmpl 0.0;

        if $b2 != 0 goto label5;

        $b3 = d9 cmpl 0.0;

        if $b3 == 0 goto label6;

     label5:
        virtualinvoke r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: void addParameter(java.lang.String,double)>("false_easting", d8);

        virtualinvoke r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: void addParameter(java.lang.String,double)>("false_northing", d9);

        virtualinvoke r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: void addParameter(java.lang.String,java.lang.String)>("units", "km");

     label6:
        $d15 = virtualinvoke r1.<ucar.unidata.geoloc.Earth: double getMajor()>();

        virtualinvoke r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: void addParameter(java.lang.String,double)>("semi_major_axis", $d15);

        $d16 = virtualinvoke r1.<ucar.unidata.geoloc.Earth: double getFlattening()>();

        $d17 = 1.0 / $d16;

        virtualinvoke r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: void addParameter(java.lang.String,double)>("inverse_flattening", $d17);

        return;
    }

    private void initialize()
    {
        byte $b0, $b1, $b2, $b3, $b4;
        boolean $z0, $z2, $z3;
        int $i5, $i6, $i7, $i8;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79, $d80, $d81, $d82, $d83, $d84, $d85, $d86, $d87, $d88, $d89;
        java.lang.IllegalArgumentException $r2;
        ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse r0;

        r0 := @this: ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse;

        $d0 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double par1rad>;

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label01;

        $d87 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double lat0rad>;

        r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double par2rad> = $d87;

        r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double par1rad> = $d87;

     label01:
        $d2 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double par1rad>;

        $d1 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double par2rad>;

        $d3 = $d2 + $d1;

        $d4 = staticinvoke <java.lang.Math: double abs(double)>($d3);

        $b1 = $d4 cmpg 1.0E-10;

        $i5 = (int) $b1;

        if $i5 >= 0 goto label02;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("par1rad + par2rad < TOL");

        throw $r2;

     label02:
        $d5 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double par1rad>;

        $d6 = staticinvoke <java.lang.Math: double sin(double)>($d5);

        $d7 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double par1rad>;

        $d8 = staticinvoke <java.lang.Math: double cos(double)>($d7);

        $d10 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double par1rad>;

        $d9 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double par2rad>;

        $d11 = $d10 - $d9;

        $d12 = staticinvoke <java.lang.Math: double abs(double)>($d11);

        $b2 = $d12 cmpl 1.0E-10;

        $i6 = (int) $b2;

        if $i6 < 0 goto label03;

        $z3 = 1;

        $z2 = 1;

        goto label04;

     label03:
        $z3 = 0;

        $z2 = 0;

     label04:
        r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double n> = $d6;

        $z0 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: boolean isSpherical>;

        if $z0 != 0 goto label08;

        $d49 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double es>;

        $d50 = staticinvoke <ucar.unidata.geoloc.projection.proj4.MapMath: double msfn(double,double,double)>($d6, $d8, $d49);

        $d52 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double par1rad>;

        $d51 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double e>;

        $d53 = staticinvoke <ucar.unidata.geoloc.projection.proj4.MapMath: double tsfn(double,double,double)>($d52, $d6, $d51);

        if $z2 == 0 goto label05;

        $d72 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double par2rad>;

        $d73 = staticinvoke <java.lang.Math: double sin(double)>($d72);

        $d74 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double par2rad>;

        $d75 = staticinvoke <java.lang.Math: double cos(double)>($d74);

        $d76 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double es>;

        $d77 = staticinvoke <ucar.unidata.geoloc.projection.proj4.MapMath: double msfn(double,double,double)>($d73, $d75, $d76);

        $d78 = $d50 / $d77;

        $d79 = staticinvoke <java.lang.Math: double log(double)>($d78);

        r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double n> = $d79;

        $d82 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double n>;

        $d81 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double par2rad>;

        $d80 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double e>;

        $d83 = staticinvoke <ucar.unidata.geoloc.projection.proj4.MapMath: double tsfn(double,double,double)>($d81, $d73, $d80);

        $d84 = $d53 / $d83;

        $d85 = staticinvoke <java.lang.Math: double log(double)>($d84);

        $d86 = $d82 / $d85;

        r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double n> = $d86;

     label05:
        $d54 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double n>;

        $d55 = neg $d54;

        $d56 = staticinvoke <java.lang.Math: double pow(double,double)>($d53, $d55);

        $d58 = $d50 * $d56;

        $d57 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double n>;

        $d59 = $d58 / $d57;

        r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double rho0> = $d59;

        r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double c> = $d59;

        $d61 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double rho0>;

        $d60 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double lat0rad>;

        $d62 = staticinvoke <java.lang.Math: double abs(double)>($d60);

        $d63 = $d62 - 1.5707963267948966;

        $d64 = staticinvoke <java.lang.Math: double abs(double)>($d63);

        $b4 = $d64 cmpg 1.0E-10;

        $i7 = (int) $b4;

        if $i7 >= 0 goto label06;

        $d88 = 0.0;

        goto label07;

     label06:
        $d66 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double lat0rad>;

        $d65 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double lat0rad>;

        $d67 = staticinvoke <java.lang.Math: double sin(double)>($d65);

        $d68 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double e>;

        $d69 = staticinvoke <ucar.unidata.geoloc.projection.proj4.MapMath: double tsfn(double,double,double)>($d66, $d67, $d68);

        $d70 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double n>;

        $d88 = staticinvoke <java.lang.Math: double pow(double,double)>($d69, $d70);

     label07:
        $d71 = $d61 * $d88;

        r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double rho0> = $d71;

        goto label12;

     label08:
        if $z3 == 0 goto label09;

        $d34 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double par2rad>;

        $d35 = staticinvoke <java.lang.Math: double cos(double)>($d34);

        $d36 = $d8 / $d35;

        $d37 = staticinvoke <java.lang.Math: double log(double)>($d36);

        $d38 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double par2rad>;

        $d39 = 0.5 * $d38;

        $d40 = 0.7853981633974483 + $d39;

        $d41 = staticinvoke <java.lang.Math: double tan(double)>($d40);

        $d42 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double par1rad>;

        $d43 = 0.5 * $d42;

        $d44 = 0.7853981633974483 + $d43;

        $d45 = staticinvoke <java.lang.Math: double tan(double)>($d44);

        $d46 = $d41 / $d45;

        $d47 = staticinvoke <java.lang.Math: double log(double)>($d46);

        $d48 = $d37 / $d47;

        r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double n> = $d48;

     label09:
        $d13 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double par1rad>;

        $d14 = 0.5 * $d13;

        $d15 = 0.7853981633974483 + $d14;

        $d16 = staticinvoke <java.lang.Math: double tan(double)>($d15);

        $d17 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double n>;

        $d18 = staticinvoke <java.lang.Math: double pow(double,double)>($d16, $d17);

        $d20 = $d8 * $d18;

        $d19 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double n>;

        $d21 = $d20 / $d19;

        r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double c> = $d21;

        $d22 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double lat0rad>;

        $d23 = staticinvoke <java.lang.Math: double abs(double)>($d22);

        $d24 = $d23 - 1.5707963267948966;

        $d25 = staticinvoke <java.lang.Math: double abs(double)>($d24);

        $b3 = $d25 cmpg 1.0E-10;

        $i8 = (int) $b3;

        if $i8 >= 0 goto label10;

        $d89 = 0.0;

        goto label11;

     label10:
        $d29 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double c>;

        $d26 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double lat0rad>;

        $d27 = 0.5 * $d26;

        $d28 = 0.7853981633974483 + $d27;

        $d30 = staticinvoke <java.lang.Math: double tan(double)>($d28);

        $d31 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double n>;

        $d32 = neg $d31;

        $d33 = staticinvoke <java.lang.Math: double pow(double,double)>($d30, $d32);

        $d89 = $d29 * $d33;

     label11:
        r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double rho0> = $d89;

     label12:
        return;
    }

    public java.lang.Object clone()
    {
        ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse r0, r2;
        java.lang.Object $r1;
        ucar.unidata.geoloc.Earth $r3;

        r0 := @this: ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse;

        $r1 = specialinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: java.lang.Object clone()>();

        r2 = (ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse) $r1;

        $r3 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: ucar.unidata.geoloc.Earth earth>;

        r2.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: ucar.unidata.geoloc.Earth earth> = $r3;

        return r2;
    }

    public boolean equals(java.lang.Object)
    {
        byte $b0, $b1, $b2, $b3;
        ucar.unidata.geoloc.Earth $r3, $r4;
        boolean $z0, $z1, $z2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse r1, r2;
        java.lang.Object r0;

        r2 := @this: ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse) r0;

        $d0 = virtualinvoke r2.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double getParallelOne()>();

        $d1 = virtualinvoke r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double getParallelOne()>();

        $b0 = $d0 cmpl $d1;

        if $b0 != 0 goto label2;

        $d2 = virtualinvoke r2.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double getParallelTwo()>();

        $d3 = virtualinvoke r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double getParallelTwo()>();

        $b1 = $d2 cmpl $d3;

        if $b1 != 0 goto label2;

        $d4 = virtualinvoke r2.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double getOriginLat()>();

        $d5 = virtualinvoke r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double getOriginLat()>();

        $b2 = $d4 cmpl $d5;

        if $b2 != 0 goto label2;

        $d6 = virtualinvoke r2.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double getOriginLon()>();

        $d7 = virtualinvoke r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double getOriginLon()>();

        $b3 = $d6 cmpl $d7;

        if $b3 != 0 goto label2;

        $r4 = r2.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: ucar.unidata.geoloc.Earth earth>;

        $r3 = r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: ucar.unidata.geoloc.Earth earth>;

        $z1 = virtualinvoke $r4.<ucar.unidata.geoloc.Earth: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public ucar.unidata.geoloc.Earth getEarth()
    {
        ucar.unidata.geoloc.Earth $r1;
        ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse r0;

        r0 := @this: ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse;

        $r1 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: ucar.unidata.geoloc.Earth earth>;

        return $r1;
    }

    public double getParallelTwo()
    {
        ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse r0;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse;

        $d0 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double par2deg>;

        return $d0;
    }

    public double getParallelOne()
    {
        ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse r0;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse;

        $d0 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double par1deg>;

        return $d0;
    }

    public double getOriginLon()
    {
        ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse r0;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse;

        $d0 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double lon0deg>;

        return $d0;
    }

    public double getOriginLat()
    {
        ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse r0;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse;

        $d0 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double lat0deg>;

        return $d0;
    }

    public double getFalseEasting()
    {
        ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse r0;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse;

        $d0 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double falseEasting>;

        return $d0;
    }

    public double getFalseNorthing()
    {
        ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse r0;
        double $d0;

        r0 := @this: ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse;

        $d0 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double falseNorthing>;

        return $d0;
    }

    public java.lang.String getProjectionTypeLabel()
    {
        ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse r0;

        r0 := @this: ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse;

        return "Lambert Conformal Conic Ellipsoidal Earth";
    }

    public java.lang.String paramsToString()
    {
        java.lang.Object[] $r1;
        java.lang.Double $r3, $r4, $r5, $r6;
        java.util.Formatter $r0;
        ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse r2;
        ucar.unidata.geoloc.Earth $r7;
        java.lang.String $r8;
        double $d0, $d1, $d2, $d3;

        r2 := @this: ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse;

        $r0 = new java.util.Formatter;

        specialinvoke $r0.<java.util.Formatter: void <init>()>();

        $r1 = newarray (java.lang.Object)[5];

        $d0 = r2.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double lat0deg>;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r1[0] = $r3;

        $d1 = r2.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double lon0deg>;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r1[1] = $r4;

        $d2 = r2.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double par1deg>;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        $r1[2] = $r5;

        $d3 = r2.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double par2deg>;

        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        $r1[3] = $r6;

        $r7 = r2.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: ucar.unidata.geoloc.Earth earth>;

        $r1[4] = $r7;

        virtualinvoke $r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("origin lat,lon=%f,%f parellels=%f,%f earth=%s", $r1);

        $r8 = virtualinvoke $r0.<java.util.Formatter: java.lang.String toString()>();

        return $r8;
    }

    public boolean crossSeam(ucar.unidata.geoloc.ProjectionPoint, ucar.unidata.geoloc.ProjectionPoint)
    {
        ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse r2;
        ucar.unidata.geoloc.ProjectionPoint r0, r1;
        boolean $z0, $z1;

        r2 := @this: ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse;

        r0 := @parameter0: ucar.unidata.geoloc.ProjectionPoint;

        r1 := @parameter1: ucar.unidata.geoloc.ProjectionPoint;

        $z0 = staticinvoke <ucar.unidata.geoloc.ProjectionPointImpl: boolean isInfinite(ucar.unidata.geoloc.ProjectionPoint)>(r0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <ucar.unidata.geoloc.ProjectionPointImpl: boolean isInfinite(ucar.unidata.geoloc.ProjectionPoint)>(r1);

        if $z1 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private double computeTheta(double)
    {
        ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse r0;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6;

        r0 := @this: ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse;

        d0 := @parameter0: double;

        $d1 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double lon0deg>;

        $d2 = d0 - $d1;

        $d3 = staticinvoke <ucar.unidata.geoloc.LatLonPointImpl: double lonNormal(double)>($d2);

        $d4 = r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double n>;

        $d5 = staticinvoke <java.lang.Math: double toRadians(double)>($d3);

        $d6 = $d4 * $d5;

        return $d6;
    }

    public ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint, ucar.unidata.geoloc.ProjectionPointImpl)
    {
        byte $b0;
        ucar.unidata.geoloc.ProjectionPointImpl r2;
        boolean $z0;
        int $i1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, d17, d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32;
        ucar.unidata.geoloc.LatLonPoint r0;
        ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse r1;

        r1 := @this: ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse;

        r0 := @parameter0: ucar.unidata.geoloc.LatLonPoint;

        r2 := @parameter1: ucar.unidata.geoloc.ProjectionPointImpl;

        $d0 = interfaceinvoke r0.<ucar.unidata.geoloc.LatLonPoint: double getLatitude()>();

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>($d0);

        $d2 = interfaceinvoke r0.<ucar.unidata.geoloc.LatLonPoint: double getLongitude()>();

        $d3 = specialinvoke r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double computeTheta(double)>($d2);

        d17 = 0.0;

        $d4 = staticinvoke <java.lang.Math: double abs(double)>($d1);

        $d5 = $d4 - 1.5707963267948966;

        $d6 = staticinvoke <java.lang.Math: double abs(double)>($d5);

        $b0 = $d6 cmpl 1.0E-10;

        $i1 = (int) $b0;

        if $i1 < 0 goto label3;

        $z0 = r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: boolean isSpherical>;

        if $z0 == 0 goto label1;

        $d12 = 0.5 * $d1;

        $d13 = 0.7853981633974483 + $d12;

        $d14 = staticinvoke <java.lang.Math: double tan(double)>($d13);

        $d15 = r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double n>;

        $d16 = neg $d15;

        d18 = staticinvoke <java.lang.Math: double pow(double,double)>($d14, $d16);

        goto label2;

     label1:
        $d7 = staticinvoke <java.lang.Math: double sin(double)>($d1);

        $d8 = r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double e>;

        $d9 = staticinvoke <ucar.unidata.geoloc.projection.proj4.MapMath: double tsfn(double,double,double)>($d1, $d7, $d8);

        $d10 = r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double n>;

        d18 = staticinvoke <java.lang.Math: double pow(double,double)>($d9, $d10);

     label2:
        $d11 = r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double c>;

        d17 = $d11 * d18;

     label3:
        $d19 = staticinvoke <java.lang.Math: double sin(double)>($d3);

        $d20 = d17 * $d19;

        $d21 = r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double rho0>;

        $d22 = staticinvoke <java.lang.Math: double cos(double)>($d3);

        $d23 = d17 * $d22;

        $d24 = $d21 - $d23;

        $d25 = r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double totalScale>;

        $d26 = $d25 * $d20;

        $d27 = r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double falseEasting>;

        $d28 = $d26 + $d27;

        $d29 = r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double totalScale>;

        $d30 = $d29 * $d24;

        $d31 = r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double falseNorthing>;

        $d32 = $d30 + $d31;

        virtualinvoke r2.<ucar.unidata.geoloc.ProjectionPointImpl: void setLocation(double,double)>($d28, $d32);

        return r2;
    }

    public ucar.unidata.geoloc.LatLonPoint projToLatLon(ucar.unidata.geoloc.ProjectionPoint, ucar.unidata.geoloc.LatLonPointImpl)
    {
        byte $b0, $b1, $b2;
        boolean $z0;
        int $i3, $i4;
        ucar.unidata.geoloc.ProjectionPoint r0;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, d27, d28, d29, d30, d31, d32, $d33, $d34, $d35, $d36, $d37;
        ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse r1;
        ucar.unidata.geoloc.LatLonPointImpl r2;

        r1 := @this: ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse;

        r0 := @parameter0: ucar.unidata.geoloc.ProjectionPoint;

        r2 := @parameter1: ucar.unidata.geoloc.LatLonPointImpl;

        $d0 = interfaceinvoke r0.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $d1 = r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double falseEasting>;

        $d3 = $d0 - $d1;

        $d2 = r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double totalScale>;

        d27 = $d3 / $d2;

        $d4 = interfaceinvoke r0.<ucar.unidata.geoloc.ProjectionPoint: double getY()>();

        $d5 = r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double falseNorthing>;

        $d7 = $d4 - $d5;

        $d6 = r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double totalScale>;

        d28 = $d7 / $d6;

        $d8 = r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double rho0>;

        d29 = $d8 - d28;

        $d9 = staticinvoke <ucar.unidata.geoloc.projection.proj4.MapMath: double distance(double,double)>(d27, d29);

        d30 = $d9;

        $b0 = $d9 cmpl 0.0;

        if $b0 == 0 goto label4;

        $d11 = r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double n>;

        $b2 = $d11 cmpg 0.0;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label1;

        d30 = neg $d9;

        d27 = neg d27;

        d29 = neg d29;

     label1:
        $z0 = r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: boolean isSpherical>;

        if $z0 == 0 goto label2;

        $d20 = r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double c>;

        $d23 = $d20 / d30;

        $d21 = r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double n>;

        $d22 = 1.0 / $d21;

        $d24 = staticinvoke <java.lang.Math: double pow(double,double)>($d23, $d22);

        $d25 = staticinvoke <java.lang.Math: double atan(double)>($d24);

        $d26 = 2.0 * $d25;

        d31 = $d26 - 1.5707963267948966;

        goto label3;

     label2:
        $d12 = r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double c>;

        $d15 = d30 / $d12;

        $d13 = r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double n>;

        $d14 = 1.0 / $d13;

        $d16 = staticinvoke <java.lang.Math: double pow(double,double)>($d15, $d14);

        $d17 = r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double e>;

        d31 = staticinvoke <ucar.unidata.geoloc.projection.proj4.MapMath: double phi2(double,double)>($d16, $d17);

     label3:
        $d18 = staticinvoke <java.lang.Math: double atan2(double,double)>(d27, d29);

        $d19 = r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double n>;

        d32 = $d18 / $d19;

        goto label7;

     label4:
        d32 = 0.0;

        $d10 = r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double n>;

        $b1 = $d10 cmpl 0.0;

        $i4 = (int) $b1;

        if $i4 <= 0 goto label5;

        $d33 = 1.5707963267948966;

        goto label6;

     label5:
        $d33 = -1.5707963267948966;

     label6:
        d31 = $d33;

     label7:
        $d34 = staticinvoke <java.lang.Math: double toDegrees(double)>(d31);

        virtualinvoke r2.<ucar.unidata.geoloc.LatLonPointImpl: void setLatitude(double)>($d34);

        $d35 = staticinvoke <java.lang.Math: double toDegrees(double)>(d32);

        $d36 = r1.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double lon0deg>;

        $d37 = $d35 + $d36;

        virtualinvoke r2.<ucar.unidata.geoloc.LatLonPointImpl: void setLongitude(double)>($d37);

        return r2;
    }

    private static void toProj(ucar.unidata.geoloc.ProjectionImpl, double, double)
    {
        java.lang.Object[] $r0, $r6, $r11;
        java.lang.Double $r2, $r3, $r8, $r9, $r13, $r14;
        ucar.unidata.geoloc.ProjectionImpl r4;
        ucar.unidata.geoloc.ProjectionPointImpl $r5;
        double d0, d1, $d2, $d3, $d4, $d5;
        java.io.PrintStream $r1, $r7, $r12;
        ucar.unidata.geoloc.LatLonPoint $r10;

        r4 := @parameter0: ucar.unidata.geoloc.ProjectionImpl;

        d1 := @parameter1: double;

        d0 := @parameter2: double;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = newarray (java.lang.Object)[2];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r0[0] = $r2;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r0[1] = $r3;

        virtualinvoke $r1.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("lon,lat = %f %f%n", $r0);

        $r5 = virtualinvoke r4.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionPointImpl latLonToProj(double,double)>(d1, d0);

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = newarray (java.lang.Object)[2];

        $d2 = interfaceinvoke $r5.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        $r6[0] = $r8;

        $d3 = interfaceinvoke $r5.<ucar.unidata.geoloc.ProjectionPoint: double getY()>();

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        $r6[1] = $r9;

        virtualinvoke $r7.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("x,y     = %f %f%n", $r6);

        $r10 = virtualinvoke r4.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.LatLonPoint projToLatLon(ucar.unidata.geoloc.ProjectionPoint)>($r5);

        $r12 = <java.lang.System: java.io.PrintStream out>;

        $r11 = newarray (java.lang.Object)[2];

        $d4 = interfaceinvoke $r10.<ucar.unidata.geoloc.LatLonPoint: double getLongitude()>();

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);

        $r11[0] = $r13;

        $d5 = interfaceinvoke $r10.<ucar.unidata.geoloc.LatLonPoint: double getLatitude()>();

        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d5);

        $r11[1] = $r14;

        virtualinvoke $r12.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("lon,lat = %f %f%n%n", $r11);

        return;
    }

    private static void fromProj(ucar.unidata.geoloc.ProjectionImpl, double, double)
    {
        java.lang.Object[] $r0, $r6, $r11;
        java.lang.Double $r2, $r3, $r8, $r9, $r13, $r14;
        ucar.unidata.geoloc.ProjectionImpl r4;
        double d0, d1, $d2, $d3, $d4, $d5;
        ucar.unidata.geoloc.ProjectionPoint $r10;
        java.io.PrintStream $r1, $r7, $r12;
        ucar.unidata.geoloc.LatLonPointImpl $r5;

        r4 := @parameter0: ucar.unidata.geoloc.ProjectionImpl;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = newarray (java.lang.Object)[2];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r0[0] = $r2;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r0[1] = $r3;

        virtualinvoke $r1.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("x,y     = %f %f%n", $r0);

        $r5 = virtualinvoke r4.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.LatLonPointImpl projToLatLon(double,double)>(d0, d1);

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = newarray (java.lang.Object)[2];

        $d2 = interfaceinvoke $r5.<ucar.unidata.geoloc.LatLonPoint: double getLongitude()>();

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        $r6[0] = $r8;

        $d3 = interfaceinvoke $r5.<ucar.unidata.geoloc.LatLonPoint: double getLatitude()>();

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        $r6[1] = $r9;

        virtualinvoke $r7.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("lon,lat = %f %f%n", $r6);

        $r10 = virtualinvoke r4.<ucar.unidata.geoloc.ProjectionImpl: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint)>($r5);

        $r12 = <java.lang.System: java.io.PrintStream out>;

        $r11 = newarray (java.lang.Object)[2];

        $d4 = interfaceinvoke $r10.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);

        $r11[0] = $r13;

        $d5 = interfaceinvoke $r10.<ucar.unidata.geoloc.ProjectionPoint: double getY()>();

        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d5);

        $r11[1] = $r14;

        virtualinvoke $r12.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("x,y     = %f %f%n%n", $r11);

        return;
    }

    public static void main(java.lang.String[])
    {
        java.io.PrintStream $r3;
        ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse $r0;
        java.lang.Object[] $r2;
        ucar.unidata.geoloc.Earth $r1;
        java.lang.String[] r6;
        java.lang.String $r4, $r5;

        r6 := @parameter0: java.lang.String[];

        $r0 = new ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse;

        $r1 = new ucar.unidata.geoloc.Earth;

        specialinvoke $r1.<ucar.unidata.geoloc.Earth: void <init>(double,double,double)>(6378137.0, 0.0, 298.257222101);

        specialinvoke $r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: void <init>(double,double,double,double,double,double,ucar.unidata.geoloc.Earth)>(23.0, -96.0, 29.5, 45.5, 0.0, 0.0, $r1);

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = newarray (java.lang.Object)[2];

        $r4 = virtualinvoke $r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: java.lang.String getName()>();

        $r2[0] = $r4;

        $r5 = virtualinvoke $r0.<ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: java.lang.String paramsToString()>();

        $r2[1] = $r5;

        virtualinvoke $r3.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("proj = %s %s%n%n", $r2);

        staticinvoke <ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: void fromProj(ucar.unidata.geoloc.ProjectionImpl,double,double)>($r0, 5747.0, 13470.0);

        return;
    }

    public static void <clinit>()
    {
        <ucar.unidata.geoloc.projection.proj4.LambertConformalConicEllipse: double TOL> = 1.0E-10;

        return;
    }
}
