public class org.waveprotocol.wave.model.testing.FakeWaveletListener extends org.waveprotocol.wave.model.wave.opbased.WaveletListenerImpl
{
    private org.waveprotocol.wave.model.wave.ParticipantId participant;

    public void <init>()
    {
        org.waveprotocol.wave.model.testing.FakeWaveletListener r0;

        r0 := @this: org.waveprotocol.wave.model.testing.FakeWaveletListener;

        specialinvoke r0.<org.waveprotocol.wave.model.wave.opbased.WaveletListenerImpl: void <init>()>();

        return;
    }

    public void onParticipantAdded(org.waveprotocol.wave.model.wave.ObservableWavelet, org.waveprotocol.wave.model.wave.ParticipantId)
    {
        org.waveprotocol.wave.model.wave.ObservableWavelet r2;
        org.waveprotocol.wave.model.testing.FakeWaveletListener r0;
        org.waveprotocol.wave.model.wave.ParticipantId r1;

        r0 := @this: org.waveprotocol.wave.model.testing.FakeWaveletListener;

        r2 := @parameter0: org.waveprotocol.wave.model.wave.ObservableWavelet;

        r1 := @parameter1: org.waveprotocol.wave.model.wave.ParticipantId;

        r0.<org.waveprotocol.wave.model.testing.FakeWaveletListener: org.waveprotocol.wave.model.wave.ParticipantId participant> = r1;

        return;
    }

    public org.waveprotocol.wave.model.wave.ParticipantId getParticipant()
    {
        org.waveprotocol.wave.model.testing.FakeWaveletListener r0;
        org.waveprotocol.wave.model.wave.ParticipantId $r1;

        r0 := @this: org.waveprotocol.wave.model.testing.FakeWaveletListener;

        $r1 = r0.<org.waveprotocol.wave.model.testing.FakeWaveletListener: org.waveprotocol.wave.model.wave.ParticipantId participant>;

        return $r1;
    }

    public void reset()
    {
        org.waveprotocol.wave.model.testing.FakeWaveletListener r0;

        r0 := @this: org.waveprotocol.wave.model.testing.FakeWaveletListener;

        r0.<org.waveprotocol.wave.model.testing.FakeWaveletListener: org.waveprotocol.wave.model.wave.ParticipantId participant> = null;

        return;
    }
}
