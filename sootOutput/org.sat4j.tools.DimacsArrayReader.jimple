public class org.sat4j.tools.DimacsArrayReader extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    protected final org.sat4j.specs.ISolver solver;

    public void <init>(org.sat4j.specs.ISolver)
    {
        org.sat4j.tools.DimacsArrayReader r0;
        org.sat4j.specs.ISolver r1;

        r0 := @this: org.sat4j.tools.DimacsArrayReader;

        r1 := @parameter0: org.sat4j.specs.ISolver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.sat4j.tools.DimacsArrayReader: org.sat4j.specs.ISolver solver> = r1;

        return;
    }

    protected boolean handleConstr(int, int, int[]) throws org.sat4j.specs.ContradictionException
    {
        int[] r1;
        org.sat4j.tools.DimacsArrayReader r2;
        org.sat4j.specs.ISolver $r3;
        int i0, i1;
        org.sat4j.core.VecInt $r0;

        r2 := @this: org.sat4j.tools.DimacsArrayReader;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        $r0 = new org.sat4j.core.VecInt;

        specialinvoke $r0.<org.sat4j.core.VecInt: void <init>(int[])>(r1);

        $r3 = r2.<org.sat4j.tools.DimacsArrayReader: org.sat4j.specs.ISolver solver>;

        interfaceinvoke $r3.<org.sat4j.specs.ISolver: org.sat4j.specs.IConstr addClause(org.sat4j.specs.IVecInt)>($r0);

        return 1;
    }

    public org.sat4j.specs.ISolver parseInstance(int[], int[], int[][], int) throws org.sat4j.specs.ContradictionException
    {
        int[][] r7;
        org.sat4j.specs.ISolver $r1, $r2, $r4, $r5;
        int[] r3, r6, $r8;
        org.sat4j.tools.DimacsArrayReader r0;
        int i0, $i1, $i2, $i3, $i4, i5;

        r0 := @this: org.sat4j.tools.DimacsArrayReader;

        r6 := @parameter0: int[];

        r3 := @parameter1: int[];

        r7 := @parameter2: int[][];

        i0 := @parameter3: int;

        $r1 = r0.<org.sat4j.tools.DimacsArrayReader: org.sat4j.specs.ISolver solver>;

        interfaceinvoke $r1.<org.sat4j.specs.ISolver: void reset()>();

        $r2 = r0.<org.sat4j.tools.DimacsArrayReader: org.sat4j.specs.ISolver solver>;

        interfaceinvoke $r2.<org.sat4j.specs.ISolver: int newVar(int)>(i0);

        $r4 = r0.<org.sat4j.tools.DimacsArrayReader: org.sat4j.specs.ISolver solver>;

        $i1 = lengthof r3;

        interfaceinvoke $r4.<org.sat4j.specs.ISolver: void setExpectedNumberOfClauses(int)>($i1);

        i5 = 0;

     label1:
        $i2 = lengthof r3;

        if i5 >= $i2 goto label2;

        $i4 = r6[i5];

        $i3 = r3[i5];

        $r8 = r7[i5];

        virtualinvoke r0.<org.sat4j.tools.DimacsArrayReader: boolean handleConstr(int,int,int[])>($i4, $i3, $r8);

        i5 = i5 + 1;

        goto label1;

     label2:
        $r5 = r0.<org.sat4j.tools.DimacsArrayReader: org.sat4j.specs.ISolver solver>;

        return $r5;
    }

    public java.lang.String decode(int[])
    {
        int[] r1;
        java.lang.StringBuffer $r0;
        org.sat4j.tools.DimacsArrayReader r3;
        int $i0, $i1, i2, i3, i4;
        java.lang.String $r2;

        r3 := @this: org.sat4j.tools.DimacsArrayReader;

        r1 := @parameter0: int[];

        $r0 = new java.lang.StringBuffer;

        $i0 = lengthof r1;

        $i1 = 4 * $i0;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>($i1);

        i2 = lengthof r1;

        i4 = 0;

     label1:
        if i4 >= i2 goto label2;

        i3 = r1[i4];

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i3);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        i4 = i4 + 1;

        goto label1;

     label2:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    protected org.sat4j.specs.ISolver getSolver()
    {
        org.sat4j.tools.DimacsArrayReader r0;
        org.sat4j.specs.ISolver $r1;

        r0 := @this: org.sat4j.tools.DimacsArrayReader;

        $r1 = r0.<org.sat4j.tools.DimacsArrayReader: org.sat4j.specs.ISolver solver>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.sat4j.tools.DimacsArrayReader: long serialVersionUID> = 1L;

        return;
    }
}
