public class org.apache.jena.fuseki.servlets.HttpAction extends java.lang.Object
{
    public final long id;
    public final boolean verbose;
    private com.hp.hpl.jena.sparql.core.DatasetGraph dsg;
    public org.apache.jena.fuseki.server.DatasetRef dsRef;
    public org.apache.jena.fuseki.server.ServiceRef srvRef;
    private com.hp.hpl.jena.sparql.core.Transactional transactional;
    private boolean isTransactional;
    private com.hp.hpl.jena.sparql.core.DatasetGraph activeDSG;
    private com.hp.hpl.jena.query.ReadWrite activeMode;
    private boolean startTimeIsSet;
    private boolean finishTimeIsSet;
    private long startTime;
    private long finishTime;
    int statusCode;
    java.lang.String message;
    int contentLength;
    java.lang.String contentType;
    java.util.Map headers;
    public javax.servlet.http.HttpServletRequest request;
    public org.apache.jena.fuseki.servlets.HttpServletResponseTracker response;

    public void <init>(long, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, boolean)
    {
        javax.servlet.http.HttpServletResponse r4;
        long l0;
        java.util.HashMap $r5;
        javax.servlet.http.HttpServletRequest r2;
        org.apache.jena.fuseki.servlets.HttpServletResponseTracker $r6;
        org.apache.jena.fuseki.servlets.HttpAction r0;
        int $i2, $i4;
        boolean z0;

        r0 := @this: org.apache.jena.fuseki.servlets.HttpAction;

        l0 := @parameter0: long;

        r2 := @parameter1: javax.servlet.http.HttpServletRequest;

        r4 := @parameter2: javax.servlet.http.HttpServletResponse;

        z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.jena.fuseki.servlets.HttpAction: boolean startTimeIsSet> = 0;

        r0.<org.apache.jena.fuseki.servlets.HttpAction: boolean finishTimeIsSet> = 0;

        r0.<org.apache.jena.fuseki.servlets.HttpAction: long startTime> = -2L;

        r0.<org.apache.jena.fuseki.servlets.HttpAction: long finishTime> = -2L;

        $i2 = (int) -1;

        r0.<org.apache.jena.fuseki.servlets.HttpAction: int statusCode> = $i2;

        r0.<org.apache.jena.fuseki.servlets.HttpAction: java.lang.String message> = null;

        $i4 = (int) -1;

        r0.<org.apache.jena.fuseki.servlets.HttpAction: int contentLength> = $i4;

        r0.<org.apache.jena.fuseki.servlets.HttpAction: java.lang.String contentType> = null;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<org.apache.jena.fuseki.servlets.HttpAction: java.util.Map headers> = $r5;

        r0.<org.apache.jena.fuseki.servlets.HttpAction: long id> = l0;

        r0.<org.apache.jena.fuseki.servlets.HttpAction: javax.servlet.http.HttpServletRequest request> = r2;

        $r6 = new org.apache.jena.fuseki.servlets.HttpServletResponseTracker;

        specialinvoke $r6.<org.apache.jena.fuseki.servlets.HttpServletResponseTracker: void <init>(org.apache.jena.fuseki.servlets.HttpAction,javax.servlet.http.HttpServletResponse)>(r0, r4);

        r0.<org.apache.jena.fuseki.servlets.HttpAction: org.apache.jena.fuseki.servlets.HttpServletResponseTracker response> = $r6;

        r0.<org.apache.jena.fuseki.servlets.HttpAction: boolean verbose> = z0;

        return;
    }

    public void setDataset(org.apache.jena.fuseki.server.DatasetRef)
    {
        org.apache.jena.fuseki.server.DatasetRef r1;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r2, $r3, $r4, $r6, $r7, $r8;
        com.hp.hpl.jena.sparql.core.DatasetGraphWithLock $r5;
        com.hp.hpl.jena.sparql.core.Transactional $r9;
        org.apache.jena.fuseki.servlets.HttpAction r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.jena.fuseki.servlets.HttpAction;

        r1 := @parameter0: org.apache.jena.fuseki.server.DatasetRef;

        r0.<org.apache.jena.fuseki.servlets.HttpAction: org.apache.jena.fuseki.server.DatasetRef dsRef> = r1;

        $r2 = r1.<org.apache.jena.fuseki.server.DatasetRef: com.hp.hpl.jena.sparql.core.DatasetGraph dataset>;

        r0.<org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.sparql.core.DatasetGraph dsg> = $r2;

        $r3 = r0.<org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.sparql.core.DatasetGraph dsg>;

        $r4 = staticinvoke <org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.sparql.core.DatasetGraph unwrap(com.hp.hpl.jena.sparql.core.DatasetGraph)>($r3);

        $z0 = staticinvoke <org.apache.jena.fuseki.servlets.HttpAction: boolean isTransactional(com.hp.hpl.jena.sparql.core.DatasetGraph)>($r4);

        if $z0 == 0 goto label1;

        $r7 = r0.<org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.sparql.core.DatasetGraph dsg>;

        $z1 = staticinvoke <org.apache.jena.fuseki.servlets.HttpAction: boolean isTransactional(com.hp.hpl.jena.sparql.core.DatasetGraph)>($r7);

        if $z1 == 0 goto label1;

        $r8 = r0.<org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.sparql.core.DatasetGraph dsg>;

        $r9 = (com.hp.hpl.jena.sparql.core.Transactional) $r8;

        r0.<org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.sparql.core.Transactional transactional> = $r9;

        r0.<org.apache.jena.fuseki.servlets.HttpAction: boolean isTransactional> = 1;

        goto label2;

     label1:
        $r5 = new com.hp.hpl.jena.sparql.core.DatasetGraphWithLock;

        $r6 = r0.<org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.sparql.core.DatasetGraph dsg>;

        specialinvoke $r5.<com.hp.hpl.jena.sparql.core.DatasetGraphWithLock: void <init>(com.hp.hpl.jena.sparql.core.DatasetGraph)>($r6);

        r0.<org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.sparql.core.Transactional transactional> = $r5;

        r0.<org.apache.jena.fuseki.servlets.HttpAction: boolean isTransactional> = 0;

     label2:
        return;
    }

    private static boolean isTransactional(com.hp.hpl.jena.sparql.core.DatasetGraph)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraph r0;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.core.DatasetGraph;

        $z0 = r0 instanceof com.hp.hpl.jena.sparql.core.Transactional;

        return $z0;
    }

    private static com.hp.hpl.jena.sparql.core.DatasetGraph unwrap(com.hp.hpl.jena.sparql.core.DatasetGraph)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphWrapper $r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph r1;
        boolean $z0;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.DatasetGraph;

     label1:
        $z0 = r1 instanceof com.hp.hpl.jena.sparql.core.DatasetGraphWrapper;

        if $z0 == 0 goto label2;

        $r0 = (com.hp.hpl.jena.sparql.core.DatasetGraphWrapper) r1;

        r1 = virtualinvoke $r0.<com.hp.hpl.jena.sparql.core.DatasetGraphWrapper: com.hp.hpl.jena.sparql.core.DatasetGraph getWrapped()>();

        goto label1;

     label2:
        return r1;
    }

    public void setService(org.apache.jena.fuseki.server.ServiceRef)
    {
        org.apache.jena.fuseki.server.ServiceRef r1;
        org.apache.jena.fuseki.servlets.HttpAction r0;

        r0 := @this: org.apache.jena.fuseki.servlets.HttpAction;

        r1 := @parameter0: org.apache.jena.fuseki.server.ServiceRef;

        r0.<org.apache.jena.fuseki.servlets.HttpAction: org.apache.jena.fuseki.server.ServiceRef srvRef> = r1;

        return;
    }

    public boolean isTransactional()
    {
        org.apache.jena.fuseki.servlets.HttpAction r0;
        boolean $z0;

        r0 := @this: org.apache.jena.fuseki.servlets.HttpAction;

        $z0 = r0.<org.apache.jena.fuseki.servlets.HttpAction: boolean isTransactional>;

        return $z0;
    }

    public void beginRead()
    {
        com.hp.hpl.jena.sparql.core.Transactional $r3;
        com.hp.hpl.jena.query.ReadWrite $r1, $r2, $r5;
        org.apache.jena.fuseki.servlets.HttpAction r0;
        org.apache.jena.fuseki.server.DatasetRef $r6;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r4;

        r0 := @this: org.apache.jena.fuseki.servlets.HttpAction;

        $r1 = <com.hp.hpl.jena.query.ReadWrite: com.hp.hpl.jena.query.ReadWrite READ>;

        r0.<org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.query.ReadWrite activeMode> = $r1;

        $r3 = r0.<org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.sparql.core.Transactional transactional>;

        $r2 = <com.hp.hpl.jena.query.ReadWrite: com.hp.hpl.jena.query.ReadWrite READ>;

        interfaceinvoke $r3.<com.hp.hpl.jena.sparql.core.Transactional: void begin(com.hp.hpl.jena.query.ReadWrite)>($r2);

        $r4 = r0.<org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.sparql.core.DatasetGraph dsg>;

        r0.<org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.sparql.core.DatasetGraph activeDSG> = $r4;

        $r6 = r0.<org.apache.jena.fuseki.servlets.HttpAction: org.apache.jena.fuseki.server.DatasetRef dsRef>;

        $r5 = <com.hp.hpl.jena.query.ReadWrite: com.hp.hpl.jena.query.ReadWrite READ>;

        virtualinvoke $r6.<org.apache.jena.fuseki.server.DatasetRef: void startTxn(com.hp.hpl.jena.query.ReadWrite)>($r5);

        return;
    }

    public void endRead()
    {
        com.hp.hpl.jena.sparql.core.Transactional $r3;
        com.hp.hpl.jena.query.ReadWrite $r1;
        org.apache.jena.fuseki.servlets.HttpAction r0;
        org.apache.jena.fuseki.server.DatasetRef $r2;

        r0 := @this: org.apache.jena.fuseki.servlets.HttpAction;

        $r2 = r0.<org.apache.jena.fuseki.servlets.HttpAction: org.apache.jena.fuseki.server.DatasetRef dsRef>;

        $r1 = <com.hp.hpl.jena.query.ReadWrite: com.hp.hpl.jena.query.ReadWrite READ>;

        virtualinvoke $r2.<org.apache.jena.fuseki.server.DatasetRef: void finishTxn(com.hp.hpl.jena.query.ReadWrite)>($r1);

        r0.<org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.query.ReadWrite activeMode> = null;

        $r3 = r0.<org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.sparql.core.Transactional transactional>;

        interfaceinvoke $r3.<com.hp.hpl.jena.sparql.core.Transactional: void end()>();

        r0.<org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.sparql.core.DatasetGraph activeDSG> = null;

        return;
    }

    public void beginWrite()
    {
        com.hp.hpl.jena.sparql.core.Transactional $r2;
        com.hp.hpl.jena.query.ReadWrite $r1, $r3, $r5;
        org.apache.jena.fuseki.servlets.HttpAction r0;
        org.apache.jena.fuseki.server.DatasetRef $r6;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r4;

        r0 := @this: org.apache.jena.fuseki.servlets.HttpAction;

        $r2 = r0.<org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.sparql.core.Transactional transactional>;

        $r1 = <com.hp.hpl.jena.query.ReadWrite: com.hp.hpl.jena.query.ReadWrite WRITE>;

        interfaceinvoke $r2.<com.hp.hpl.jena.sparql.core.Transactional: void begin(com.hp.hpl.jena.query.ReadWrite)>($r1);

        $r3 = <com.hp.hpl.jena.query.ReadWrite: com.hp.hpl.jena.query.ReadWrite WRITE>;

        r0.<org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.query.ReadWrite activeMode> = $r3;

        $r4 = r0.<org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.sparql.core.DatasetGraph dsg>;

        r0.<org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.sparql.core.DatasetGraph activeDSG> = $r4;

        $r6 = r0.<org.apache.jena.fuseki.servlets.HttpAction: org.apache.jena.fuseki.server.DatasetRef dsRef>;

        $r5 = <com.hp.hpl.jena.query.ReadWrite: com.hp.hpl.jena.query.ReadWrite WRITE>;

        virtualinvoke $r6.<org.apache.jena.fuseki.server.DatasetRef: void startTxn(com.hp.hpl.jena.query.ReadWrite)>($r5);

        return;
    }

    public void commit()
    {
        com.hp.hpl.jena.sparql.core.Transactional $r1;
        org.apache.jena.fuseki.servlets.HttpAction r0;

        r0 := @this: org.apache.jena.fuseki.servlets.HttpAction;

        $r1 = r0.<org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.sparql.core.Transactional transactional>;

        interfaceinvoke $r1.<com.hp.hpl.jena.sparql.core.Transactional: void commit()>();

        r0.<org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.sparql.core.DatasetGraph activeDSG> = null;

        return;
    }

    public void abort()
    {
        java.lang.Exception $r2;
        com.hp.hpl.jena.sparql.core.Transactional $r1;
        org.apache.jena.fuseki.servlets.HttpAction r0;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;

        r0 := @this: org.apache.jena.fuseki.servlets.HttpAction;

     label1:
        $r1 = r0.<org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.sparql.core.Transactional transactional>;

        interfaceinvoke $r1.<com.hp.hpl.jena.sparql.core.Transactional: void abort()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception during abort (operation attempts to continue): ");

        $r5 = virtualinvoke $r2.<java.lang.Exception: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String)>(r0, $r7);

     label4:
        r0.<org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.sparql.core.DatasetGraph activeDSG> = null;

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void endWrite()
    {
        org.apache.jena.fuseki.server.DatasetRef $r2;
        java.lang.RuntimeException $r5;
        com.hp.hpl.jena.sparql.core.Transactional $r3, $r4, $r6;
        com.hp.hpl.jena.query.ReadWrite $r1;
        org.apache.jena.fuseki.servlets.HttpAction r0;
        boolean $z0;

        r0 := @this: org.apache.jena.fuseki.servlets.HttpAction;

        $r2 = r0.<org.apache.jena.fuseki.servlets.HttpAction: org.apache.jena.fuseki.server.DatasetRef dsRef>;

        $r1 = <com.hp.hpl.jena.query.ReadWrite: com.hp.hpl.jena.query.ReadWrite WRITE>;

        virtualinvoke $r2.<org.apache.jena.fuseki.server.DatasetRef: void finishTxn(com.hp.hpl.jena.query.ReadWrite)>($r1);

        r0.<org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.query.ReadWrite activeMode> = null;

        $r3 = r0.<org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.sparql.core.Transactional transactional>;

        $z0 = interfaceinvoke $r3.<com.hp.hpl.jena.sparql.core.Transactional: boolean isInTransaction()>();

        if $z0 == 0 goto label4;

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String)>(r0, "Transaction still active in endWriter - no commit or abort seen (forced abort)");

     label1:
        $r4 = r0.<org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.sparql.core.Transactional transactional>;

        interfaceinvoke $r4.<com.hp.hpl.jena.sparql.core.Transactional: void abort()>();

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String,java.lang.Throwable)>(r0, "Exception in forced abort (trying to continue)", $r5);

     label4:
        $r6 = r0.<org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.sparql.core.Transactional transactional>;

        interfaceinvoke $r6.<com.hp.hpl.jena.sparql.core.Transactional: void end()>();

        r0.<org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.sparql.core.DatasetGraph activeDSG> = null;

        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public final com.hp.hpl.jena.sparql.core.DatasetGraph getActiveDSG()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;
        org.apache.jena.fuseki.servlets.HttpAction r0;

        r0 := @this: org.apache.jena.fuseki.servlets.HttpAction;

        $r1 = r0.<org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.sparql.core.DatasetGraph activeDSG>;

        return $r1;
    }

    public final org.apache.jena.fuseki.server.DatasetRef getDatasetRef()
    {
        org.apache.jena.fuseki.server.DatasetRef $r1;
        org.apache.jena.fuseki.servlets.HttpAction r0;

        r0 := @this: org.apache.jena.fuseki.servlets.HttpAction;

        $r1 = r0.<org.apache.jena.fuseki.servlets.HttpAction: org.apache.jena.fuseki.server.DatasetRef dsRef>;

        return $r1;
    }

    public void minimize()
    {
        org.apache.jena.fuseki.servlets.HttpAction r0;

        r0 := @this: org.apache.jena.fuseki.servlets.HttpAction;

        r0.<org.apache.jena.fuseki.servlets.HttpAction: javax.servlet.http.HttpServletRequest request> = null;

        r0.<org.apache.jena.fuseki.servlets.HttpAction: org.apache.jena.fuseki.servlets.HttpServletResponseTracker response> = null;

        return;
    }

    public void setStartTime()
    {
        long $l0;
        org.apache.jena.fuseki.servlets.HttpAction r0;
        boolean $z0;

        r0 := @this: org.apache.jena.fuseki.servlets.HttpAction;

        $z0 = r0.<org.apache.jena.fuseki.servlets.HttpAction: boolean startTimeIsSet>;

        if $z0 == 0 goto label1;

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String)>(r0, "Start time reset");

     label1:
        r0.<org.apache.jena.fuseki.servlets.HttpAction: boolean startTimeIsSet> = 1;

        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

        r0.<org.apache.jena.fuseki.servlets.HttpAction: long startTime> = $l0;

        return;
    }

    public void setFinishTime()
    {
        long $l0;
        org.apache.jena.fuseki.servlets.HttpAction r0;
        boolean $z0;

        r0 := @this: org.apache.jena.fuseki.servlets.HttpAction;

        $z0 = r0.<org.apache.jena.fuseki.servlets.HttpAction: boolean finishTimeIsSet>;

        if $z0 == 0 goto label1;

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String)>(r0, "Finish time reset");

     label1:
        r0.<org.apache.jena.fuseki.servlets.HttpAction: boolean finishTimeIsSet> = 1;

        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

        r0.<org.apache.jena.fuseki.servlets.HttpAction: long finishTime> = $l0;

        return;
    }

    public javax.servlet.http.HttpServletRequest getRequest()
    {
        javax.servlet.http.HttpServletRequest $r1;
        org.apache.jena.fuseki.servlets.HttpAction r0;

        r0 := @this: org.apache.jena.fuseki.servlets.HttpAction;

        $r1 = r0.<org.apache.jena.fuseki.servlets.HttpAction: javax.servlet.http.HttpServletRequest request>;

        return $r1;
    }

    public org.apache.jena.fuseki.servlets.HttpServletResponseTracker getResponse()
    {
        org.apache.jena.fuseki.servlets.HttpServletResponseTracker $r1;
        org.apache.jena.fuseki.servlets.HttpAction r0;

        r0 := @this: org.apache.jena.fuseki.servlets.HttpAction;

        $r1 = r0.<org.apache.jena.fuseki.servlets.HttpAction: org.apache.jena.fuseki.servlets.HttpServletResponseTracker response>;

        return $r1;
    }

    public long getTime()
    {
        org.apache.jena.fuseki.servlets.HttpAction r0;
        long $l0, $l1, $l2, $l3;
        boolean $z0, $z1;

        r0 := @this: org.apache.jena.fuseki.servlets.HttpAction;

        $z0 = r0.<org.apache.jena.fuseki.servlets.HttpAction: boolean startTimeIsSet>;

        if $z0 != 0 goto label1;

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String)>(r0, "Start time not set");

     label1:
        $z1 = r0.<org.apache.jena.fuseki.servlets.HttpAction: boolean finishTimeIsSet>;

        if $z1 != 0 goto label2;

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String)>(r0, "Finish time not set");

     label2:
        $l1 = r0.<org.apache.jena.fuseki.servlets.HttpAction: long finishTime>;

        $l0 = r0.<org.apache.jena.fuseki.servlets.HttpAction: long startTime>;

        $l2 = $l1 - $l0;

        $l3 = $l2 / 1000000L;

        return $l3;
    }

    public void sync()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;
        org.apache.jena.fuseki.servlets.HttpAction r0;

        r0 := @this: org.apache.jena.fuseki.servlets.HttpAction;

        $r1 = r0.<org.apache.jena.fuseki.servlets.HttpAction: com.hp.hpl.jena.sparql.core.DatasetGraph dsg>;

        staticinvoke <com.hp.hpl.jena.sparql.SystemARQ: void sync(com.hp.hpl.jena.sparql.core.DatasetGraph)>($r1);

        return;
    }

    public static org.apache.jena.atlas.web.MediaType contentNegotationRDF(org.apache.jena.fuseki.servlets.HttpAction)
    {
        org.apache.jena.atlas.web.AcceptList $r2;
        javax.servlet.http.HttpServletRequest $r3;
        org.apache.jena.fuseki.servlets.HttpServletResponseTracker $r7, $r9;
        org.apache.jena.fuseki.servlets.HttpAction r0;
        java.lang.String $r5, $r6, $r8, $r10;
        org.apache.jena.atlas.web.MediaType $r1, $r4;

        r0 := @parameter0: org.apache.jena.fuseki.servlets.HttpAction;

        $r3 = r0.<org.apache.jena.fuseki.servlets.HttpAction: javax.servlet.http.HttpServletRequest request>;

        $r2 = <org.apache.jena.fuseki.DEF: org.apache.jena.atlas.web.AcceptList rdfOffer>;

        $r1 = <org.apache.jena.fuseki.DEF: org.apache.jena.atlas.web.MediaType acceptRDFXML>;

        $r4 = staticinvoke <org.apache.jena.fuseki.conneg.ConNeg: org.apache.jena.atlas.web.MediaType chooseContentType(javax.servlet.http.HttpServletRequest,org.apache.jena.atlas.web.AcceptList,org.apache.jena.atlas.web.MediaType)>($r3, $r2, $r1);

        if $r4 != null goto label1;

        return null;

     label1:
        $r5 = virtualinvoke $r4.<org.apache.jena.atlas.web.MediaType: java.lang.String getContentType()>();

        if $r5 == null goto label2;

        $r9 = r0.<org.apache.jena.fuseki.servlets.HttpAction: org.apache.jena.fuseki.servlets.HttpServletResponseTracker response>;

        $r10 = virtualinvoke $r4.<org.apache.jena.atlas.web.MediaType: java.lang.String getContentType()>();

        virtualinvoke $r9.<org.apache.jena.fuseki.servlets.HttpServletResponseTracker: void setContentType(java.lang.String)>($r10);

     label2:
        $r6 = virtualinvoke $r4.<org.apache.jena.atlas.web.MediaType: java.lang.String getCharset()>();

        if $r6 == null goto label3;

        $r7 = r0.<org.apache.jena.fuseki.servlets.HttpAction: org.apache.jena.fuseki.servlets.HttpServletResponseTracker response>;

        $r8 = virtualinvoke $r4.<org.apache.jena.atlas.web.MediaType: java.lang.String getCharset()>();

        virtualinvoke $r7.<org.apache.jena.fuseki.servlets.HttpServletResponseTracker: void setCharacterEncoding(java.lang.String)>($r8);

     label3:
        return $r4;
    }

    public static org.apache.jena.atlas.web.MediaType contentNegotationQuads(org.apache.jena.fuseki.servlets.HttpAction)
    {
        javax.servlet.http.HttpServletRequest $r3;
        org.apache.jena.fuseki.servlets.HttpAction r0;
        org.apache.jena.atlas.web.AcceptList $r2;
        org.apache.jena.atlas.web.MediaType $r1, $r4;

        r0 := @parameter0: org.apache.jena.fuseki.servlets.HttpAction;

        $r3 = r0.<org.apache.jena.fuseki.servlets.HttpAction: javax.servlet.http.HttpServletRequest request>;

        $r2 = <org.apache.jena.fuseki.DEF: org.apache.jena.atlas.web.AcceptList quadsOffer>;

        $r1 = <org.apache.jena.fuseki.DEF: org.apache.jena.atlas.web.MediaType acceptNQuads>;

        $r4 = staticinvoke <org.apache.jena.fuseki.conneg.ConNeg: org.apache.jena.atlas.web.MediaType chooseContentType(javax.servlet.http.HttpServletRequest,org.apache.jena.atlas.web.AcceptList,org.apache.jena.atlas.web.MediaType)>($r3, $r2, $r1);

        return $r4;
    }
}
