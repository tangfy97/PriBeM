public class org.bouncycastle.ocsp.OCSPReqGenerator extends java.lang.Object
{
    private java.util.List list;
    private org.bouncycastle.asn1.x509.GeneralName requestorName;
    private org.bouncycastle.asn1.x509.X509Extensions requestExtensions;

    public void <init>()
    {
        org.bouncycastle.ocsp.OCSPReqGenerator r0;
        java.util.ArrayList $r1;

        r0 := @this: org.bouncycastle.ocsp.OCSPReqGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.bouncycastle.ocsp.OCSPReqGenerator: java.util.List list> = $r1;

        r0.<org.bouncycastle.ocsp.OCSPReqGenerator: org.bouncycastle.asn1.x509.GeneralName requestorName> = null;

        r0.<org.bouncycastle.ocsp.OCSPReqGenerator: org.bouncycastle.asn1.x509.X509Extensions requestExtensions> = null;

        return;
    }

    public void addRequest(org.bouncycastle.ocsp.CertificateID)
    {
        org.bouncycastle.ocsp.OCSPReqGenerator r0;
        java.util.List $r3;
        org.bouncycastle.ocsp.OCSPReqGenerator$RequestObject $r1;
        org.bouncycastle.ocsp.CertificateID r2;

        r0 := @this: org.bouncycastle.ocsp.OCSPReqGenerator;

        r2 := @parameter0: org.bouncycastle.ocsp.CertificateID;

        $r3 = r0.<org.bouncycastle.ocsp.OCSPReqGenerator: java.util.List list>;

        $r1 = new org.bouncycastle.ocsp.OCSPReqGenerator$RequestObject;

        specialinvoke $r1.<org.bouncycastle.ocsp.OCSPReqGenerator$RequestObject: void <init>(org.bouncycastle.ocsp.OCSPReqGenerator,org.bouncycastle.ocsp.CertificateID,org.bouncycastle.asn1.x509.X509Extensions)>(r0, r2, null);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void addRequest(org.bouncycastle.ocsp.CertificateID, org.bouncycastle.asn1.x509.X509Extensions)
    {
        org.bouncycastle.ocsp.OCSPReqGenerator r0;
        java.util.List $r4;
        org.bouncycastle.ocsp.OCSPReqGenerator$RequestObject $r1;
        org.bouncycastle.ocsp.CertificateID r2;
        org.bouncycastle.asn1.x509.X509Extensions r3;

        r0 := @this: org.bouncycastle.ocsp.OCSPReqGenerator;

        r2 := @parameter0: org.bouncycastle.ocsp.CertificateID;

        r3 := @parameter1: org.bouncycastle.asn1.x509.X509Extensions;

        $r4 = r0.<org.bouncycastle.ocsp.OCSPReqGenerator: java.util.List list>;

        $r1 = new org.bouncycastle.ocsp.OCSPReqGenerator$RequestObject;

        specialinvoke $r1.<org.bouncycastle.ocsp.OCSPReqGenerator$RequestObject: void <init>(org.bouncycastle.ocsp.OCSPReqGenerator,org.bouncycastle.ocsp.CertificateID,org.bouncycastle.asn1.x509.X509Extensions)>(r0, r2, r3);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void setRequestorName(javax.security.auth.x500.X500Principal)
    {
        byte[] $r4;
        org.bouncycastle.jce.X509Principal $r2;
        javax.security.auth.x500.X500Principal r3;
        java.io.IOException $r5;
        java.lang.IllegalArgumentException $r6;
        org.bouncycastle.ocsp.OCSPReqGenerator r0;
        org.bouncycastle.asn1.x509.GeneralName $r1;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: org.bouncycastle.ocsp.OCSPReqGenerator;

        r3 := @parameter0: javax.security.auth.x500.X500Principal;

     label1:
        $r1 = new org.bouncycastle.asn1.x509.GeneralName;

        $r2 = new org.bouncycastle.jce.X509Principal;

        $r4 = virtualinvoke r3.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        specialinvoke $r2.<org.bouncycastle.jce.X509Principal: void <init>(byte[])>($r4);

        specialinvoke $r1.<org.bouncycastle.asn1.x509.GeneralName: void <init>(int,org.bouncycastle.asn1.ASN1Encodable)>(4, $r2);

        r0.<org.bouncycastle.ocsp.OCSPReqGenerator: org.bouncycastle.asn1.x509.GeneralName requestorName> = $r1;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot encode principal: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void setRequestorName(org.bouncycastle.asn1.x509.GeneralName)
    {
        org.bouncycastle.ocsp.OCSPReqGenerator r0;
        org.bouncycastle.asn1.x509.GeneralName r1;

        r0 := @this: org.bouncycastle.ocsp.OCSPReqGenerator;

        r1 := @parameter0: org.bouncycastle.asn1.x509.GeneralName;

        r0.<org.bouncycastle.ocsp.OCSPReqGenerator: org.bouncycastle.asn1.x509.GeneralName requestorName> = r1;

        return;
    }

    public void setRequestExtensions(org.bouncycastle.asn1.x509.X509Extensions)
    {
        org.bouncycastle.ocsp.OCSPReqGenerator r0;
        org.bouncycastle.asn1.x509.X509Extensions r1;

        r0 := @this: org.bouncycastle.ocsp.OCSPReqGenerator;

        r1 := @parameter0: org.bouncycastle.asn1.x509.X509Extensions;

        r0.<org.bouncycastle.ocsp.OCSPReqGenerator: org.bouncycastle.asn1.x509.X509Extensions requestExtensions> = r1;

        return;
    }

    private org.bouncycastle.ocsp.OCSPReq generateRequest(org.bouncycastle.asn1.DERObjectIdentifier, java.security.PrivateKey, java.security.cert.X509Certificate[], java.lang.String, java.security.SecureRandom) throws org.bouncycastle.ocsp.OCSPException, java.security.NoSuchProviderException
    {
        java.security.cert.X509Certificate $r28;
        byte[] $r17, $r19, $r29;
        org.bouncycastle.asn1.ocsp.Signature $r23, $r25, r55;
        org.bouncycastle.asn1.ASN1Sequence $r31;
        org.bouncycastle.ocsp.OCSPException $r32, $r37, $r39, $r41, $r47, $r54;
        org.bouncycastle.asn1.DERBitString $r18;
        java.security.SecureRandom r13;
        java.security.GeneralSecurityException $r46;
        org.bouncycastle.asn1.ASN1Object $r30;
        boolean $z0;
        org.bouncycastle.asn1.DERObjectIdentifier r8;
        org.bouncycastle.asn1.ocsp.Request $r35;
        java.security.Signature $r12;
        org.bouncycastle.asn1.DERSequence $r5, $r26;
        java.lang.Exception $r40, $r53;
        java.util.List $r1;
        org.bouncycastle.asn1.x509.GeneralName $r6, $r9;
        java.security.PrivateKey r14;
        org.bouncycastle.asn1.x509.X509CertificateStructure $r27;
        java.lang.StringBuilder $r42, $r43, $r44, $r48, $r49, $r50;
        java.security.cert.X509Certificate[] r22;
        java.security.cert.CertificateEncodingException $r36;
        java.io.ByteArrayOutputStream $r15;
        org.bouncycastle.asn1.x509.X509Extensions $r7;
        org.bouncycastle.asn1.DERNull $r21;
        org.bouncycastle.asn1.ocsp.OCSPRequest $r57;
        int $i0, $i1, i2;
        java.lang.String $r10, r11, $r45, $r51;
        org.bouncycastle.asn1.ocsp.TBSRequest $r4;
        org.bouncycastle.asn1.ASN1OutputStream $r16;
        java.util.Iterator $r2;
        org.bouncycastle.asn1.ASN1EncodableVector $r3, $r24;
        java.io.IOException $r38;
        org.bouncycastle.ocsp.OCSPReqGenerator r0;
        org.bouncycastle.ocsp.OCSPReqGenerator$RequestObject $r34;
        org.bouncycastle.ocsp.OCSPReq $r56;
        java.lang.Object $r33;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r20;
        java.security.NoSuchProviderException $r52;

        r0 := @this: org.bouncycastle.ocsp.OCSPReqGenerator;

        r8 := @parameter0: org.bouncycastle.asn1.DERObjectIdentifier;

        r14 := @parameter1: java.security.PrivateKey;

        r22 := @parameter2: java.security.cert.X509Certificate[];

        r11 := @parameter3: java.lang.String;

        r13 := @parameter4: java.security.SecureRandom;

        $r1 = r0.<org.bouncycastle.ocsp.OCSPReqGenerator: java.util.List list>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        $r3 = new org.bouncycastle.asn1.ASN1EncodableVector;

        specialinvoke $r3.<org.bouncycastle.asn1.ASN1EncodableVector: void <init>()>();

     label01:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

     label02:
        $r33 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r34 = (org.bouncycastle.ocsp.OCSPReqGenerator$RequestObject) $r33;

        $r35 = virtualinvoke $r34.<org.bouncycastle.ocsp.OCSPReqGenerator$RequestObject: org.bouncycastle.asn1.ocsp.Request toRequest()>();

        virtualinvoke $r3.<org.bouncycastle.asn1.ASN1EncodableVector: void add(org.bouncycastle.asn1.DEREncodable)>($r35);

     label03:
        goto label01;

     label04:
        $r53 := @caughtexception;

        $r54 = new org.bouncycastle.ocsp.OCSPException;

        specialinvoke $r54.<org.bouncycastle.ocsp.OCSPException: void <init>(java.lang.String,java.lang.Exception)>("exception creating Request", $r53);

        throw $r54;

     label05:
        $r4 = new org.bouncycastle.asn1.ocsp.TBSRequest;

        $r6 = r0.<org.bouncycastle.ocsp.OCSPReqGenerator: org.bouncycastle.asn1.x509.GeneralName requestorName>;

        $r5 = new org.bouncycastle.asn1.DERSequence;

        specialinvoke $r5.<org.bouncycastle.asn1.DERSequence: void <init>(org.bouncycastle.asn1.DEREncodableVector)>($r3);

        $r7 = r0.<org.bouncycastle.ocsp.OCSPReqGenerator: org.bouncycastle.asn1.x509.X509Extensions requestExtensions>;

        specialinvoke $r4.<org.bouncycastle.asn1.ocsp.TBSRequest: void <init>(org.bouncycastle.asn1.x509.GeneralName,org.bouncycastle.asn1.ASN1Sequence,org.bouncycastle.asn1.x509.X509Extensions)>($r6, $r5, $r7);

        r55 = null;

        if r8 == null goto label22;

        $r9 = r0.<org.bouncycastle.ocsp.OCSPReqGenerator: org.bouncycastle.asn1.x509.GeneralName requestorName>;

        if $r9 != null goto label06;

        $r32 = new org.bouncycastle.ocsp.OCSPException;

        specialinvoke $r32.<org.bouncycastle.ocsp.OCSPException: void <init>(java.lang.String)>("requestorName must be specified if request is signed.");

        throw $r32;

     label06:
        $r10 = virtualinvoke r8.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $r12 = staticinvoke <org.bouncycastle.ocsp.OCSPUtil: java.security.Signature createSignatureInstance(java.lang.String,java.lang.String)>($r10, r11);

        if r13 == null goto label07;

        virtualinvoke $r12.<java.security.Signature: void initSign(java.security.PrivateKey,java.security.SecureRandom)>(r14, r13);

        goto label08;

     label07:
        virtualinvoke $r12.<java.security.Signature: void initSign(java.security.PrivateKey)>(r14);

     label08:
        goto label11;

     label09:
        $r52 := @caughtexception;

        throw $r52;

     label10:
        $r46 := @caughtexception;

        $r47 = new org.bouncycastle.ocsp.OCSPException;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception creating signature: ");

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r46);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r47.<org.bouncycastle.ocsp.OCSPException: void <init>(java.lang.String,java.lang.Exception)>($r51, $r46);

        throw $r47;

     label11:
        $r15 = new java.io.ByteArrayOutputStream;

        specialinvoke $r15.<java.io.ByteArrayOutputStream: void <init>()>();

        $r16 = new org.bouncycastle.asn1.ASN1OutputStream;

        specialinvoke $r16.<org.bouncycastle.asn1.ASN1OutputStream: void <init>(java.io.OutputStream)>($r15);

        virtualinvoke $r16.<org.bouncycastle.asn1.ASN1OutputStream: void writeObject(java.lang.Object)>($r4);

        $r17 = virtualinvoke $r15.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke $r12.<java.security.Signature: void update(byte[])>($r17);

        $r18 = new org.bouncycastle.asn1.DERBitString;

        $r19 = virtualinvoke $r12.<java.security.Signature: byte[] sign()>();

        specialinvoke $r18.<org.bouncycastle.asn1.DERBitString: void <init>(byte[])>($r19);

     label12:
        goto label14;

     label13:
        $r40 := @caughtexception;

        $r41 = new org.bouncycastle.ocsp.OCSPException;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception processing TBSRequest: ");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r40);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r41.<org.bouncycastle.ocsp.OCSPException: void <init>(java.lang.String,java.lang.Exception)>($r45, $r40);

        throw $r41;

     label14:
        $r20 = new org.bouncycastle.asn1.x509.AlgorithmIdentifier;

        $r21 = new org.bouncycastle.asn1.DERNull;

        specialinvoke $r21.<org.bouncycastle.asn1.DERNull: void <init>()>();

        specialinvoke $r20.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: void <init>(org.bouncycastle.asn1.DERObjectIdentifier,org.bouncycastle.asn1.DEREncodable)>(r8, $r21);

        if r22 == null goto label21;

        $i0 = lengthof r22;

        if $i0 <= 0 goto label21;

        $r24 = new org.bouncycastle.asn1.ASN1EncodableVector;

        specialinvoke $r24.<org.bouncycastle.asn1.ASN1EncodableVector: void <init>()>();

     label15:
        i2 = 0;

     label16:
        $i1 = lengthof r22;

        if i2 == $i1 goto label17;

        $r27 = new org.bouncycastle.asn1.x509.X509CertificateStructure;

        $r28 = r22[i2];

        $r29 = virtualinvoke $r28.<java.security.cert.X509Certificate: byte[] getEncoded()>();

        $r30 = staticinvoke <org.bouncycastle.asn1.ASN1Object: org.bouncycastle.asn1.ASN1Object fromByteArray(byte[])>($r29);

        $r31 = (org.bouncycastle.asn1.ASN1Sequence) $r30;

        specialinvoke $r27.<org.bouncycastle.asn1.x509.X509CertificateStructure: void <init>(org.bouncycastle.asn1.ASN1Sequence)>($r31);

        virtualinvoke $r24.<org.bouncycastle.asn1.ASN1EncodableVector: void add(org.bouncycastle.asn1.DEREncodable)>($r27);

        i2 = i2 + 1;

        goto label16;

     label17:
        goto label20;

     label18:
        $r38 := @caughtexception;

        $r39 = new org.bouncycastle.ocsp.OCSPException;

        specialinvoke $r39.<org.bouncycastle.ocsp.OCSPException: void <init>(java.lang.String,java.lang.Exception)>("error processing certs", $r38);

        throw $r39;

     label19:
        $r36 := @caughtexception;

        $r37 = new org.bouncycastle.ocsp.OCSPException;

        specialinvoke $r37.<org.bouncycastle.ocsp.OCSPException: void <init>(java.lang.String,java.lang.Exception)>("error encoding certs", $r36);

        throw $r37;

     label20:
        $r25 = new org.bouncycastle.asn1.ocsp.Signature;

        $r26 = new org.bouncycastle.asn1.DERSequence;

        specialinvoke $r26.<org.bouncycastle.asn1.DERSequence: void <init>(org.bouncycastle.asn1.DEREncodableVector)>($r24);

        specialinvoke $r25.<org.bouncycastle.asn1.ocsp.Signature: void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.DERBitString,org.bouncycastle.asn1.ASN1Sequence)>($r20, $r18, $r26);

        r55 = $r25;

        goto label22;

     label21:
        $r23 = new org.bouncycastle.asn1.ocsp.Signature;

        specialinvoke $r23.<org.bouncycastle.asn1.ocsp.Signature: void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.DERBitString)>($r20, $r18);

        r55 = $r23;

     label22:
        $r56 = new org.bouncycastle.ocsp.OCSPReq;

        $r57 = new org.bouncycastle.asn1.ocsp.OCSPRequest;

        specialinvoke $r57.<org.bouncycastle.asn1.ocsp.OCSPRequest: void <init>(org.bouncycastle.asn1.ocsp.TBSRequest,org.bouncycastle.asn1.ocsp.Signature)>($r4, r55);

        specialinvoke $r56.<org.bouncycastle.ocsp.OCSPReq: void <init>(org.bouncycastle.asn1.ocsp.OCSPRequest)>($r57);

        return $r56;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.security.NoSuchProviderException from label06 to label08 with label09;
        catch java.security.GeneralSecurityException from label06 to label08 with label10;
        catch java.lang.Exception from label11 to label12 with label13;
        catch java.io.IOException from label15 to label17 with label18;
        catch java.security.cert.CertificateEncodingException from label15 to label17 with label19;
    }

    public org.bouncycastle.ocsp.OCSPReq generate() throws org.bouncycastle.ocsp.OCSPException
    {
        org.bouncycastle.ocsp.OCSPException $r3;
        org.bouncycastle.ocsp.OCSPReqGenerator r0;
        org.bouncycastle.ocsp.OCSPReq $r1;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;
        java.security.NoSuchProviderException $r2;

        r0 := @this: org.bouncycastle.ocsp.OCSPReqGenerator;

     label1:
        $r1 = specialinvoke r0.<org.bouncycastle.ocsp.OCSPReqGenerator: org.bouncycastle.ocsp.OCSPReq generateRequest(org.bouncycastle.asn1.DERObjectIdentifier,java.security.PrivateKey,java.security.cert.X509Certificate[],java.lang.String,java.security.SecureRandom)>(null, null, null, null, null);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new org.bouncycastle.ocsp.OCSPException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no provider! - ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.bouncycastle.ocsp.OCSPException: void <init>(java.lang.String,java.lang.Exception)>($r7, $r2);

        throw $r3;

        catch java.security.NoSuchProviderException from label1 to label2 with label3;
    }

    public org.bouncycastle.ocsp.OCSPReq generate(java.lang.String, java.security.PrivateKey, java.security.cert.X509Certificate[], java.lang.String) throws org.bouncycastle.ocsp.OCSPException, java.security.NoSuchProviderException, java.lang.IllegalArgumentException
    {
        org.bouncycastle.ocsp.OCSPReqGenerator r0;
        java.security.PrivateKey r2;
        org.bouncycastle.ocsp.OCSPReq $r5;
        java.lang.String r1, r4;
        java.security.cert.X509Certificate[] r3;

        r0 := @this: org.bouncycastle.ocsp.OCSPReqGenerator;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.security.PrivateKey;

        r3 := @parameter2: java.security.cert.X509Certificate[];

        r4 := @parameter3: java.lang.String;

        $r5 = virtualinvoke r0.<org.bouncycastle.ocsp.OCSPReqGenerator: org.bouncycastle.ocsp.OCSPReq generate(java.lang.String,java.security.PrivateKey,java.security.cert.X509Certificate[],java.lang.String,java.security.SecureRandom)>(r1, r2, r3, r4, null);

        return $r5;
    }

    public org.bouncycastle.ocsp.OCSPReq generate(java.lang.String, java.security.PrivateKey, java.security.cert.X509Certificate[], java.lang.String, java.security.SecureRandom) throws org.bouncycastle.ocsp.OCSPException, java.security.NoSuchProviderException, java.lang.IllegalArgumentException
    {
        java.lang.IllegalArgumentException $r8, $r9, $r10;
        java.security.SecureRandom r6;
        org.bouncycastle.ocsp.OCSPReqGenerator r2;
        java.security.PrivateKey r3;
        org.bouncycastle.ocsp.OCSPReq $r7;
        java.lang.StringBuilder $r11, $r12, $r13;
        java.lang.String r0, r5, $r14;
        java.security.cert.X509Certificate[] r4;
        org.bouncycastle.asn1.DERObjectIdentifier $r1;

        r2 := @this: org.bouncycastle.ocsp.OCSPReqGenerator;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.security.PrivateKey;

        r4 := @parameter2: java.security.cert.X509Certificate[];

        r5 := @parameter3: java.lang.String;

        r6 := @parameter4: java.security.SecureRandom;

        if r0 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("no signing algorithm specified");

        throw $r8;

     label1:
        $r1 = staticinvoke <org.bouncycastle.ocsp.OCSPUtil: org.bouncycastle.asn1.DERObjectIdentifier getAlgorithmOID(java.lang.String)>(r0);

        $r7 = specialinvoke r2.<org.bouncycastle.ocsp.OCSPReqGenerator: org.bouncycastle.ocsp.OCSPReq generateRequest(org.bouncycastle.asn1.DERObjectIdentifier,java.security.PrivateKey,java.security.cert.X509Certificate[],java.lang.String,java.security.SecureRandom)>($r1, r3, r4, r5, r6);

     label2:
        return $r7;

     label3:
        $r9 := @caughtexception;

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown signing algorithm specified: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r10;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public java.util.Iterator getSignatureAlgNames()
    {
        org.bouncycastle.ocsp.OCSPReqGenerator r1;
        java.util.Iterator $r0;

        r1 := @this: org.bouncycastle.ocsp.OCSPReqGenerator;

        $r0 = staticinvoke <org.bouncycastle.ocsp.OCSPUtil: java.util.Iterator getAlgNames()>();

        return $r0;
    }
}
