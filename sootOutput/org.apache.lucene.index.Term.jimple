public final class org.apache.lucene.index.Term extends java.lang.Object implements java.lang.Comparable
{
    java.lang.String field;
    org.apache.lucene.util.BytesRef bytes;

    public void <init>(java.lang.String, org.apache.lucene.util.BytesRef)
    {
        org.apache.lucene.index.Term r0;
        java.lang.String r1;
        org.apache.lucene.util.BytesRef r2;

        r0 := @this: org.apache.lucene.index.Term;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.lucene.util.BytesRef;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.index.Term: java.lang.String field> = r1;

        r0.<org.apache.lucene.index.Term: org.apache.lucene.util.BytesRef bytes> = r2;

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        org.apache.lucene.util.BytesRef $r2;
        org.apache.lucene.index.Term r0;
        java.lang.String r1, r3;

        r0 := @this: org.apache.lucene.index.Term;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r2 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r2.<org.apache.lucene.util.BytesRef: void <init>(java.lang.CharSequence)>(r3);

        specialinvoke r0.<org.apache.lucene.index.Term: void <init>(java.lang.String,org.apache.lucene.util.BytesRef)>(r1, $r2);

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.lucene.index.Term r0;
        java.lang.String r1;
        org.apache.lucene.util.BytesRef $r2;

        r0 := @this: org.apache.lucene.index.Term;

        r1 := @parameter0: java.lang.String;

        $r2 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r2.<org.apache.lucene.util.BytesRef: void <init>()>();

        specialinvoke r0.<org.apache.lucene.index.Term: void <init>(java.lang.String,org.apache.lucene.util.BytesRef)>(r1, $r2);

        return;
    }

    public final java.lang.String field()
    {
        org.apache.lucene.index.Term r0;
        java.lang.String $r1;

        r0 := @this: org.apache.lucene.index.Term;

        $r1 = r0.<org.apache.lucene.index.Term: java.lang.String field>;

        return $r1;
    }

    public final java.lang.String text()
    {
        org.apache.lucene.index.Term r0;
        java.lang.String $r2;
        org.apache.lucene.util.BytesRef $r1;

        r0 := @this: org.apache.lucene.index.Term;

        $r1 = r0.<org.apache.lucene.index.Term: org.apache.lucene.util.BytesRef bytes>;

        $r2 = staticinvoke <org.apache.lucene.index.Term: java.lang.String toString(org.apache.lucene.util.BytesRef)>($r1);

        return $r2;
    }

    public static final java.lang.String toString(org.apache.lucene.util.BytesRef)
    {
        byte[] $r7;
        java.nio.charset.CharacterCodingException $r11;
        java.nio.CharBuffer $r9;
        org.apache.lucene.util.BytesRef r6;
        java.nio.charset.CharsetDecoder $r1, $r3, $r5;
        java.nio.ByteBuffer $r8;
        java.nio.charset.Charset $r0;
        java.nio.charset.CodingErrorAction $r2, $r4;
        int $i0, $i1;
        java.lang.String $r10, $r12;

        r6 := @parameter0: org.apache.lucene.util.BytesRef;

        $r0 = <org.apache.lucene.util.IOUtils: java.nio.charset.Charset CHARSET_UTF_8>;

        $r1 = virtualinvoke $r0.<java.nio.charset.Charset: java.nio.charset.CharsetDecoder newDecoder()>();

        $r2 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPORT>;

        $r3 = virtualinvoke $r1.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onMalformedInput(java.nio.charset.CodingErrorAction)>($r2);

        $r4 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPORT>;

        $r5 = virtualinvoke $r3.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>($r4);

     label1:
        $r7 = r6.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i1 = r6.<org.apache.lucene.util.BytesRef: int offset>;

        $i0 = r6.<org.apache.lucene.util.BytesRef: int length>;

        $r8 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>($r7, $i1, $i0);

        $r9 = virtualinvoke $r5.<java.nio.charset.CharsetDecoder: java.nio.CharBuffer decode(java.nio.ByteBuffer)>($r8);

        $r10 = virtualinvoke $r9.<java.nio.CharBuffer: java.lang.String toString()>();

     label2:
        return $r10;

     label3:
        $r11 := @caughtexception;

        $r12 = virtualinvoke r6.<org.apache.lucene.util.BytesRef: java.lang.String toString()>();

        return $r12;

        catch java.nio.charset.CharacterCodingException from label1 to label2 with label3;
    }

    public final org.apache.lucene.util.BytesRef bytes()
    {
        org.apache.lucene.index.Term r0;
        org.apache.lucene.util.BytesRef $r1;

        r0 := @this: org.apache.lucene.index.Term;

        $r1 = r0.<org.apache.lucene.index.Term: org.apache.lucene.util.BytesRef bytes>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.lucene.util.BytesRef $r8, $r9, $r10, $r11;
        org.apache.lucene.index.Term r0, r4;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        java.lang.String $r5, $r6, $r7, $r12;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.index.Term;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

        return 0;

     label3:
        r4 = (org.apache.lucene.index.Term) r1;

        $r5 = r0.<org.apache.lucene.index.Term: java.lang.String field>;

        if $r5 != null goto label4;

        $r12 = r4.<org.apache.lucene.index.Term: java.lang.String field>;

        if $r12 == null goto label5;

        return 0;

     label4:
        $r7 = r0.<org.apache.lucene.index.Term: java.lang.String field>;

        $r6 = r4.<org.apache.lucene.index.Term: java.lang.String field>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label5;

        return 0;

     label5:
        $r8 = r0.<org.apache.lucene.index.Term: org.apache.lucene.util.BytesRef bytes>;

        if $r8 != null goto label6;

        $r11 = r4.<org.apache.lucene.index.Term: org.apache.lucene.util.BytesRef bytes>;

        if $r11 == null goto label7;

        return 0;

     label6:
        $r10 = r0.<org.apache.lucene.index.Term: org.apache.lucene.util.BytesRef bytes>;

        $r9 = r4.<org.apache.lucene.index.Term: org.apache.lucene.util.BytesRef bytes>;

        $z1 = virtualinvoke $r10.<org.apache.lucene.util.BytesRef: boolean equals(java.lang.Object)>($r9);

        if $z1 != 0 goto label7;

        return 0;

     label7:
        return 1;
    }

    public int hashCode()
    {
        org.apache.lucene.util.BytesRef $r3, $r4;
        org.apache.lucene.index.Term r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r1, $r2;

        r0 := @this: org.apache.lucene.index.Term;

        $r1 = r0.<org.apache.lucene.index.Term: java.lang.String field>;

        if $r1 != null goto label1;

        $i3 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.lucene.index.Term: java.lang.String field>;

        $i3 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

     label2:
        $i2 = 31 + $i3;

        $i0 = 31 * $i2;

        $r3 = r0.<org.apache.lucene.index.Term: org.apache.lucene.util.BytesRef bytes>;

        if $r3 != null goto label3;

        $i4 = 0;

        goto label4;

     label3:
        $r4 = r0.<org.apache.lucene.index.Term: org.apache.lucene.util.BytesRef bytes>;

        $i4 = virtualinvoke $r4.<org.apache.lucene.util.BytesRef: int hashCode()>();

     label4:
        $i1 = $i0 + $i4;

        return $i1;
    }

    public final int compareTo(org.apache.lucene.index.Term)
    {
        org.apache.lucene.util.BytesRef $r6, $r7;
        org.apache.lucene.index.Term r0, r1;
        int $i0, $i1;
        java.lang.String $r2, $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.Term;

        r1 := @parameter0: org.apache.lucene.index.Term;

        $r3 = r0.<org.apache.lucene.index.Term: java.lang.String field>;

        $r2 = r1.<org.apache.lucene.index.Term: java.lang.String field>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r7 = r0.<org.apache.lucene.index.Term: org.apache.lucene.util.BytesRef bytes>;

        $r6 = r1.<org.apache.lucene.index.Term: org.apache.lucene.util.BytesRef bytes>;

        $i1 = virtualinvoke $r7.<org.apache.lucene.util.BytesRef: int compareTo(org.apache.lucene.util.BytesRef)>($r6);

        return $i1;

     label1:
        $r5 = r0.<org.apache.lucene.index.Term: java.lang.String field>;

        $r4 = r1.<org.apache.lucene.index.Term: java.lang.String field>;

        $i0 = virtualinvoke $r5.<java.lang.String: int compareTo(java.lang.String)>($r4);

        return $i0;
    }

    final void set(java.lang.String, org.apache.lucene.util.BytesRef)
    {
        org.apache.lucene.index.Term r0;
        java.lang.String r1;
        org.apache.lucene.util.BytesRef r2;

        r0 := @this: org.apache.lucene.index.Term;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.lucene.util.BytesRef;

        r0.<org.apache.lucene.index.Term: java.lang.String field> = r1;

        r0.<org.apache.lucene.index.Term: org.apache.lucene.util.BytesRef bytes> = r2;

        return;
    }

    public final java.lang.String toString()
    {
        org.apache.lucene.index.Term r1;
        java.lang.StringBuilder $r0, $r3, $r4, $r6;
        java.lang.String $r2, $r5, $r7;

        r1 := @this: org.apache.lucene.index.Term;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.apache.lucene.index.Term: java.lang.String field>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r5 = virtualinvoke r1.<org.apache.lucene.index.Term: java.lang.String text()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public volatile int compareTo(java.lang.Object)
    {
        org.apache.lucene.index.Term r0, $r2;
        int $i0;
        java.lang.Object r1;

        r0 := @this: org.apache.lucene.index.Term;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.lucene.index.Term) r1;

        $i0 = virtualinvoke r0.<org.apache.lucene.index.Term: int compareTo(org.apache.lucene.index.Term)>($r2);

        return $i0;
    }
}
