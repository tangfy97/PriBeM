public final class de.l3s.boilerpipe.filters.heuristics.BlockProximityFusion extends java.lang.Object implements de.l3s.boilerpipe.BoilerpipeFilter
{
    private final int maxBlocksDistance;
    public static final de.l3s.boilerpipe.filters.heuristics.BlockProximityFusion MAX_DISTANCE_1;
    public static final de.l3s.boilerpipe.filters.heuristics.BlockProximityFusion MAX_DISTANCE_1_CONTENT_ONLY;
    private final boolean contentOnly;

    public void <init>(int, boolean)
    {
        int i0;
        de.l3s.boilerpipe.filters.heuristics.BlockProximityFusion r0;
        boolean z0;

        r0 := @this: de.l3s.boilerpipe.filters.heuristics.BlockProximityFusion;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<de.l3s.boilerpipe.filters.heuristics.BlockProximityFusion: int maxBlocksDistance> = i0;

        r0.<de.l3s.boilerpipe.filters.heuristics.BlockProximityFusion: boolean contentOnly> = z0;

        return;
    }

    public boolean process(de.l3s.boilerpipe.document.TextDocument) throws de.l3s.boilerpipe.BoilerpipeProcessingException
    {
        de.l3s.boilerpipe.document.TextDocument r0;
        java.util.ListIterator $r4;
        int $i0, $i1, $i2, $i3, i4, $i5, i6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, $z8, z9;
        java.util.Iterator $r6;
        java.util.List $r1;
        de.l3s.boilerpipe.document.TextBlock r8, r9, r10;
        java.lang.Object $r3, $r5, $r7;
        de.l3s.boilerpipe.filters.heuristics.BlockProximityFusion r2;

        r2 := @this: de.l3s.boilerpipe.filters.heuristics.BlockProximityFusion;

        r0 := @parameter0: de.l3s.boilerpipe.document.TextDocument;

        $r1 = virtualinvoke r0.<de.l3s.boilerpipe.document.TextDocument: java.util.List getTextBlocks()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= 2 goto label01;

        return 0;

     label01:
        z7 = 0;

        $z0 = r2.<de.l3s.boilerpipe.filters.heuristics.BlockProximityFusion: boolean contentOnly>;

        if $z0 == 0 goto label05;

        r8 = null;

        i6 = 0;

        $r6 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z5 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label04;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r9 = (de.l3s.boilerpipe.document.TextBlock) $r7;

        i6 = i6 + 1;

        $z6 = virtualinvoke r9.<de.l3s.boilerpipe.document.TextBlock: boolean isContent()>();

        if $z6 == 0 goto label03;

        r8 = r9;

        goto label04;

     label03:
        goto label02;

     label04:
        if r8 != null goto label06;

        return 0;

     label05:
        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        r8 = (de.l3s.boilerpipe.document.TextBlock) $r3;

        i6 = 1;

     label06:
        $r4 = interfaceinvoke $r1.<java.util.List: java.util.ListIterator listIterator(int)>(i6);

     label07:
        $z8 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label15;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r10 = (de.l3s.boilerpipe.document.TextBlock) $r5;

        $z1 = virtualinvoke r10.<de.l3s.boilerpipe.document.TextBlock: boolean isContent()>();

        if $z1 != 0 goto label08;

        r8 = r10;

        goto label07;

     label08:
        $i1 = virtualinvoke r10.<de.l3s.boilerpipe.document.TextBlock: int getOffsetBlocksStart()>();

        $i2 = virtualinvoke r8.<de.l3s.boilerpipe.document.TextBlock: int getOffsetBlocksEnd()>();

        $i3 = $i1 - $i2;

        i4 = $i3 - 1;

        $i5 = r2.<de.l3s.boilerpipe.filters.heuristics.BlockProximityFusion: int maxBlocksDistance>;

        if i4 > $i5 goto label13;

        z9 = 1;

        $z2 = r2.<de.l3s.boilerpipe.filters.heuristics.BlockProximityFusion: boolean contentOnly>;

        if $z2 == 0 goto label10;

        $z3 = virtualinvoke r8.<de.l3s.boilerpipe.document.TextBlock: boolean isContent()>();

        if $z3 == 0 goto label09;

        $z4 = virtualinvoke r10.<de.l3s.boilerpipe.document.TextBlock: boolean isContent()>();

        if $z4 != 0 goto label10;

     label09:
        z9 = 0;

     label10:
        if z9 == 0 goto label11;

        virtualinvoke r8.<de.l3s.boilerpipe.document.TextBlock: void mergeNext(de.l3s.boilerpipe.document.TextBlock)>(r10);

        interfaceinvoke $r4.<java.util.Iterator: void remove()>();

        z7 = 1;

        goto label12;

     label11:
        r8 = r10;

     label12:
        goto label14;

     label13:
        r8 = r10;

     label14:
        goto label07;

     label15:
        return z7;
    }

    static void <clinit>()
    {
        de.l3s.boilerpipe.filters.heuristics.BlockProximityFusion $r0, $r1;

        $r0 = new de.l3s.boilerpipe.filters.heuristics.BlockProximityFusion;

        specialinvoke $r0.<de.l3s.boilerpipe.filters.heuristics.BlockProximityFusion: void <init>(int,boolean)>(1, 0);

        <de.l3s.boilerpipe.filters.heuristics.BlockProximityFusion: de.l3s.boilerpipe.filters.heuristics.BlockProximityFusion MAX_DISTANCE_1> = $r0;

        $r1 = new de.l3s.boilerpipe.filters.heuristics.BlockProximityFusion;

        specialinvoke $r1.<de.l3s.boilerpipe.filters.heuristics.BlockProximityFusion: void <init>(int,boolean)>(1, 1);

        <de.l3s.boilerpipe.filters.heuristics.BlockProximityFusion: de.l3s.boilerpipe.filters.heuristics.BlockProximityFusion MAX_DISTANCE_1_CONTENT_ONLY> = $r1;

        return;
    }
}
