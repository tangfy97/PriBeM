public class org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect extends org.apache.batik.dom.svg.SVGOMRect
{
    private final org.apache.batik.dom.svg.SVGOMAnimatedRect this$0;

    protected void <init>(org.apache.batik.dom.svg.SVGOMAnimatedRect)
    {
        org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect r0;
        org.apache.batik.dom.svg.SVGOMAnimatedRect r1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect;

        r1 := @parameter0: org.apache.batik.dom.svg.SVGOMAnimatedRect;

        specialinvoke r0.<org.apache.batik.dom.svg.SVGOMRect: void <init>()>();

        r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect: org.apache.batik.dom.svg.SVGOMAnimatedRect this$0> = r1;

        return;
    }

    public float getX()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect r0;
        org.w3c.dom.svg.SVGRect $r3;
        float $f0, $f1;
        org.apache.batik.dom.svg.SVGOMAnimatedRect $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect: org.apache.batik.dom.svg.SVGOMAnimatedRect this$0>;

        $z0 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal>;

        if $z0 == 0 goto label1;

        $f1 = specialinvoke r0.<org.apache.batik.dom.svg.SVGOMRect: float getX()>();

        return $f1;

     label1:
        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect: org.apache.batik.dom.svg.SVGOMAnimatedRect this$0>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.svg.SVGOMAnimatedRect: org.w3c.dom.svg.SVGRect getBaseVal()>();

        $f0 = interfaceinvoke $r3.<org.w3c.dom.svg.SVGRect: float getX()>();

        return $f0;
    }

    public float getY()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect r0;
        org.w3c.dom.svg.SVGRect $r3;
        float $f0, $f1;
        org.apache.batik.dom.svg.SVGOMAnimatedRect $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect: org.apache.batik.dom.svg.SVGOMAnimatedRect this$0>;

        $z0 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal>;

        if $z0 == 0 goto label1;

        $f1 = specialinvoke r0.<org.apache.batik.dom.svg.SVGOMRect: float getY()>();

        return $f1;

     label1:
        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect: org.apache.batik.dom.svg.SVGOMAnimatedRect this$0>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.svg.SVGOMAnimatedRect: org.w3c.dom.svg.SVGRect getBaseVal()>();

        $f0 = interfaceinvoke $r3.<org.w3c.dom.svg.SVGRect: float getY()>();

        return $f0;
    }

    public float getWidth()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect r0;
        org.w3c.dom.svg.SVGRect $r3;
        float $f0, $f1;
        org.apache.batik.dom.svg.SVGOMAnimatedRect $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect: org.apache.batik.dom.svg.SVGOMAnimatedRect this$0>;

        $z0 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal>;

        if $z0 == 0 goto label1;

        $f1 = specialinvoke r0.<org.apache.batik.dom.svg.SVGOMRect: float getWidth()>();

        return $f1;

     label1:
        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect: org.apache.batik.dom.svg.SVGOMAnimatedRect this$0>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.svg.SVGOMAnimatedRect: org.w3c.dom.svg.SVGRect getBaseVal()>();

        $f0 = interfaceinvoke $r3.<org.w3c.dom.svg.SVGRect: float getWidth()>();

        return $f0;
    }

    public float getHeight()
    {
        org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect r0;
        org.w3c.dom.svg.SVGRect $r3;
        float $f0, $f1;
        org.apache.batik.dom.svg.SVGOMAnimatedRect $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect: org.apache.batik.dom.svg.SVGOMAnimatedRect this$0>;

        $z0 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: boolean hasAnimVal>;

        if $z0 == 0 goto label1;

        $f1 = specialinvoke r0.<org.apache.batik.dom.svg.SVGOMRect: float getHeight()>();

        return $f1;

     label1:
        $r2 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect: org.apache.batik.dom.svg.SVGOMAnimatedRect this$0>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.svg.SVGOMAnimatedRect: org.w3c.dom.svg.SVGRect getBaseVal()>();

        $f0 = interfaceinvoke $r3.<org.w3c.dom.svg.SVGRect: float getHeight()>();

        return $f0;
    }

    public void setX(float) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect r0;
        org.w3c.dom.DOMException $r3;
        float f0;
        org.apache.batik.dom.svg.AbstractElement $r2;
        org.apache.batik.dom.svg.SVGOMAnimatedRect $r1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect;

        f0 := @parameter0: float;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect: org.apache.batik.dom.svg.SVGOMAnimatedRect this$0>;

        $r2 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(7, "readonly.length", null);

        throw $r3;
    }

    public void setY(float) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect r0;
        org.w3c.dom.DOMException $r3;
        float f0;
        org.apache.batik.dom.svg.AbstractElement $r2;
        org.apache.batik.dom.svg.SVGOMAnimatedRect $r1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect;

        f0 := @parameter0: float;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect: org.apache.batik.dom.svg.SVGOMAnimatedRect this$0>;

        $r2 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(7, "readonly.length", null);

        throw $r3;
    }

    public void setWidth(float) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect r0;
        org.w3c.dom.DOMException $r3;
        float f0;
        org.apache.batik.dom.svg.AbstractElement $r2;
        org.apache.batik.dom.svg.SVGOMAnimatedRect $r1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect;

        f0 := @parameter0: float;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect: org.apache.batik.dom.svg.SVGOMAnimatedRect this$0>;

        $r2 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(7, "readonly.length", null);

        throw $r3;
    }

    public void setHeight(float) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect r0;
        org.w3c.dom.DOMException $r3;
        float f0;
        org.apache.batik.dom.svg.AbstractElement $r2;
        org.apache.batik.dom.svg.SVGOMAnimatedRect $r1;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect;

        f0 := @parameter0: float;

        $r1 = r0.<org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect: org.apache.batik.dom.svg.SVGOMAnimatedRect this$0>;

        $r2 = $r1.<org.apache.batik.dom.svg.AbstractSVGAnimatedValue: org.apache.batik.dom.svg.AbstractElement element>;

        $r3 = virtualinvoke $r2.<org.apache.batik.dom.AbstractNode: org.w3c.dom.DOMException createDOMException(short,java.lang.String,java.lang.Object[])>(7, "readonly.length", null);

        throw $r3;
    }

    protected void setAnimatedValue(float, float, float, float)
    {
        org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect r0;
        float f0, f1, f2, f3;

        r0 := @this: org.apache.batik.dom.svg.SVGOMAnimatedRect$AnimSVGRect;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        r0.<org.apache.batik.dom.svg.SVGOMRect: float x> = f0;

        r0.<org.apache.batik.dom.svg.SVGOMRect: float y> = f1;

        r0.<org.apache.batik.dom.svg.SVGOMRect: float w> = f2;

        r0.<org.apache.batik.dom.svg.SVGOMRect: float h> = f3;

        return;
    }
}
