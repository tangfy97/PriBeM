public class thredds.wcs.Request$BoundingBox extends java.lang.Object
{
    private int dimensionLength;
    private double[] minPoint;
    private double[] maxPoint;
    private java.lang.String minPointString;
    private java.lang.String maxPointString;

    public void <init>(double[], double[])
    {
        byte $b8;
        boolean z0;
        thredds.wcs.Request$BoundingBox r0;
        java.lang.StringBuilder $r9, $r11, $r12, $r14, $r15, $r17, $r18, $r21, $r22, $r23, $r24, $r25, $r27, $r29, $r30, $r31;
        double[] r1, r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, i11, $i12;
        java.lang.String $r5, $r6, $r10, $r13, $r16, $r26;
        double $d0, $d1, $d2, $d3;
        java.lang.IllegalArgumentException $r28, $r32;

        r0 := @this: thredds.wcs.Request$BoundingBox;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = lengthof r1;

        $i0 = lengthof r2;

        if $i1 == $i0 goto label1;

        $r28 = new java.lang.IllegalArgumentException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The dimension length of the minimum point [");

        $i9 = lengthof r1;

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] and maximum point [");

        $i10 = lengthof r2;

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] must be equal.");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r26);

        throw $r28;

     label1:
        z0 = 1;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>(java.lang.String)>("[");

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>("[");

        i11 = 0;

     label2:
        $i2 = lengthof r1;

        if i11 >= $i2 goto label4;

        $d0 = r1[i11];

        $r17 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $d1 = r2[i11];

        $r18 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $d3 = r1[i11];

        $d2 = r2[i11];

        $b8 = $d3 cmpl $d2;

        $i12 = (int) $b8;

        if $i12 < 0 goto label3;

        z0 = 0;

     label3:
        i11 = i11 + 1;

        goto label2;

     label4:
        $i3 = virtualinvoke $r29.<java.lang.StringBuilder: int lastIndexOf(java.lang.String)>(",");

        $i4 = $i3 + 1;

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder replace(int,int,java.lang.String)>($i3, $i4, "]");

        $i5 = virtualinvoke $r30.<java.lang.StringBuilder: int lastIndexOf(java.lang.String)>(",");

        $i6 = $i5 + 1;

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder replace(int,int,java.lang.String)>($i5, $i6, "]");

        if z0 != 0 goto label5;

        $r32 = new java.lang.IllegalArgumentException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Minimum point ");

        $r10 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not always smaller than maximum point ");

        $r13 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r32;

     label5:
        $i7 = lengthof r1;

        r0.<thredds.wcs.Request$BoundingBox: int dimensionLength> = $i7;

        r0.<thredds.wcs.Request$BoundingBox: double[] minPoint> = r1;

        r0.<thredds.wcs.Request$BoundingBox: double[] maxPoint> = r2;

        $r5 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<thredds.wcs.Request$BoundingBox: java.lang.String minPointString> = $r5;

        $r6 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<thredds.wcs.Request$BoundingBox: java.lang.String maxPointString> = $r6;

        return;
    }

    public int getDimensionLength()
    {
        thredds.wcs.Request$BoundingBox r0;
        int $i0;

        r0 := @this: thredds.wcs.Request$BoundingBox;

        $i0 = r0.<thredds.wcs.Request$BoundingBox: int dimensionLength>;

        return $i0;
    }

    public double getMinPointValue(int)
    {
        thredds.wcs.Request$BoundingBox r0;
        int i0;
        double[] $r1;
        double $d0;

        r0 := @this: thredds.wcs.Request$BoundingBox;

        i0 := @parameter0: int;

        $r1 = r0.<thredds.wcs.Request$BoundingBox: double[] minPoint>;

        $d0 = $r1[i0];

        return $d0;
    }

    public double getMaxPointValue(int)
    {
        thredds.wcs.Request$BoundingBox r0;
        int i0;
        double[] $r1;
        double $d0;

        r0 := @this: thredds.wcs.Request$BoundingBox;

        i0 := @parameter0: int;

        $r1 = r0.<thredds.wcs.Request$BoundingBox: double[] maxPoint>;

        $d0 = $r1[i0];

        return $d0;
    }

    public java.lang.String toString()
    {
        thredds.wcs.Request$BoundingBox r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7;
        java.lang.String $r3, $r6, $r8;

        r2 := @this: thredds.wcs.Request$BoundingBox;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Min ");

        $r3 = r2.<thredds.wcs.Request$BoundingBox: java.lang.String minPointString>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; Max ");

        $r6 = r2.<thredds.wcs.Request$BoundingBox: java.lang.String maxPointString>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }
}
