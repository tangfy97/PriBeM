public final class de.l3s.boilerpipe.extractors.ArticleExtractor extends de.l3s.boilerpipe.extractors.ExtractorBase
{
    public static final de.l3s.boilerpipe.extractors.ArticleExtractor INSTANCE;

    public void <init>()
    {
        de.l3s.boilerpipe.extractors.ArticleExtractor r0;

        r0 := @this: de.l3s.boilerpipe.extractors.ArticleExtractor;

        specialinvoke r0.<de.l3s.boilerpipe.extractors.ExtractorBase: void <init>()>();

        return;
    }

    public static de.l3s.boilerpipe.extractors.ArticleExtractor getInstance()
    {
        de.l3s.boilerpipe.extractors.ArticleExtractor $r0;

        $r0 = <de.l3s.boilerpipe.extractors.ArticleExtractor: de.l3s.boilerpipe.extractors.ArticleExtractor INSTANCE>;

        return $r0;
    }

    public boolean process(de.l3s.boilerpipe.document.TextDocument) throws de.l3s.boilerpipe.BoilerpipeProcessingException
    {
        de.l3s.boilerpipe.document.TextDocument r0;
        de.l3s.boilerpipe.filters.english.IgnoreBlocksAfterContentFilter $r5;
        de.l3s.boilerpipe.extractors.ArticleExtractor r11;
        de.l3s.boilerpipe.filters.heuristics.ExpandTitleToContentFilter $r10;
        java.lang.String $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        de.l3s.boilerpipe.filters.english.KeepLargestFulltextBlockFilter $r9;
        de.l3s.boilerpipe.filters.english.TerminatingBlocksFinder $r1;
        de.l3s.boilerpipe.filters.simple.BoilerplateBlockFilter $r7;
        de.l3s.boilerpipe.filters.english.NumWordsRulesClassifier $r4;
        de.l3s.boilerpipe.filters.heuristics.DocumentTitleMatchClassifier $r2;
        de.l3s.boilerpipe.filters.heuristics.BlockProximityFusion $r6, $r8;

        r11 := @this: de.l3s.boilerpipe.extractors.ArticleExtractor;

        r0 := @parameter0: de.l3s.boilerpipe.document.TextDocument;

        $r1 = <de.l3s.boilerpipe.filters.english.TerminatingBlocksFinder: de.l3s.boilerpipe.filters.english.TerminatingBlocksFinder INSTANCE>;

        $z0 = virtualinvoke $r1.<de.l3s.boilerpipe.filters.english.TerminatingBlocksFinder: boolean process(de.l3s.boilerpipe.document.TextDocument)>(r0);

        $r2 = new de.l3s.boilerpipe.filters.heuristics.DocumentTitleMatchClassifier;

        $r3 = virtualinvoke r0.<de.l3s.boilerpipe.document.TextDocument: java.lang.String getTitle()>();

        specialinvoke $r2.<de.l3s.boilerpipe.filters.heuristics.DocumentTitleMatchClassifier: void <init>(java.lang.String)>($r3);

        $z1 = virtualinvoke $r2.<de.l3s.boilerpipe.filters.heuristics.DocumentTitleMatchClassifier: boolean process(de.l3s.boilerpipe.document.TextDocument)>(r0);

        $z2 = $z0 | $z1;

        $r4 = <de.l3s.boilerpipe.filters.english.NumWordsRulesClassifier: de.l3s.boilerpipe.filters.english.NumWordsRulesClassifier INSTANCE>;

        $z3 = virtualinvoke $r4.<de.l3s.boilerpipe.filters.english.NumWordsRulesClassifier: boolean process(de.l3s.boilerpipe.document.TextDocument)>(r0);

        $z4 = $z2 | $z3;

        $r5 = <de.l3s.boilerpipe.filters.english.IgnoreBlocksAfterContentFilter: de.l3s.boilerpipe.filters.english.IgnoreBlocksAfterContentFilter DEFAULT_INSTANCE>;

        $z5 = virtualinvoke $r5.<de.l3s.boilerpipe.filters.english.IgnoreBlocksAfterContentFilter: boolean process(de.l3s.boilerpipe.document.TextDocument)>(r0);

        $z6 = $z4 | $z5;

        $r6 = <de.l3s.boilerpipe.filters.heuristics.BlockProximityFusion: de.l3s.boilerpipe.filters.heuristics.BlockProximityFusion MAX_DISTANCE_1>;

        $z7 = virtualinvoke $r6.<de.l3s.boilerpipe.filters.heuristics.BlockProximityFusion: boolean process(de.l3s.boilerpipe.document.TextDocument)>(r0);

        $z8 = $z6 | $z7;

        $r7 = <de.l3s.boilerpipe.filters.simple.BoilerplateBlockFilter: de.l3s.boilerpipe.filters.simple.BoilerplateBlockFilter INSTANCE>;

        $z9 = virtualinvoke $r7.<de.l3s.boilerpipe.filters.simple.BoilerplateBlockFilter: boolean process(de.l3s.boilerpipe.document.TextDocument)>(r0);

        $z10 = $z8 | $z9;

        $r8 = <de.l3s.boilerpipe.filters.heuristics.BlockProximityFusion: de.l3s.boilerpipe.filters.heuristics.BlockProximityFusion MAX_DISTANCE_1_CONTENT_ONLY>;

        $z11 = virtualinvoke $r8.<de.l3s.boilerpipe.filters.heuristics.BlockProximityFusion: boolean process(de.l3s.boilerpipe.document.TextDocument)>(r0);

        $z12 = $z10 | $z11;

        $r9 = <de.l3s.boilerpipe.filters.english.KeepLargestFulltextBlockFilter: de.l3s.boilerpipe.filters.english.KeepLargestFulltextBlockFilter INSTANCE>;

        $z13 = virtualinvoke $r9.<de.l3s.boilerpipe.filters.english.KeepLargestFulltextBlockFilter: boolean process(de.l3s.boilerpipe.document.TextDocument)>(r0);

        $z14 = $z12 | $z13;

        $r10 = <de.l3s.boilerpipe.filters.heuristics.ExpandTitleToContentFilter: de.l3s.boilerpipe.filters.heuristics.ExpandTitleToContentFilter INSTANCE>;

        $z15 = virtualinvoke $r10.<de.l3s.boilerpipe.filters.heuristics.ExpandTitleToContentFilter: boolean process(de.l3s.boilerpipe.document.TextDocument)>(r0);

        $z16 = $z14 | $z15;

        return $z16;
    }

    static void <clinit>()
    {
        de.l3s.boilerpipe.extractors.ArticleExtractor $r0;

        $r0 = new de.l3s.boilerpipe.extractors.ArticleExtractor;

        specialinvoke $r0.<de.l3s.boilerpipe.extractors.ArticleExtractor: void <init>()>();

        <de.l3s.boilerpipe.extractors.ArticleExtractor: de.l3s.boilerpipe.extractors.ArticleExtractor INSTANCE> = $r0;

        return;
    }
}
