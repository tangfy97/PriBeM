public class org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression extends org.eclipse.jdt.internal.compiler.ast.AllocationExpression
{
    public org.eclipse.jdt.internal.compiler.ast.Expression enclosingInstance;
    public org.eclipse.jdt.internal.compiler.ast.TypeDeclaration anonymousType;

    public void <init>()
    {
        org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: void <init>()>();

        return;
    }

    public void <init>(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)
    {
        org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression r0;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: void <init>()>();

        r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration anonymousType> = r1;

        r1.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression allocation> = r0;

        return;
    }

    public org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.flow.FlowContext, org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r6;
        org.eclipse.jdt.internal.compiler.ast.Expression[] $r8, $r15, $r16;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r21;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] $r11;
        org.eclipse.jdt.internal.compiler.ast.Expression $r1, $r17, $r20;
        org.eclipse.jdt.internal.compiler.flow.FlowContext r12;
        int $i0, i1, i2;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r22;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r3, $r10, $r18;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r4, $r5, $r7, $r19;
        org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo $r13;
        org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression r0;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r2, $r9, $r14;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression;

        r6 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r12 := @parameter1: org.eclipse.jdt.internal.compiler.flow.FlowContext;

        r21 := @parameter2: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression enclosingInstance>;

        if $r1 == null goto label1;

        $r20 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression enclosingInstance>;

        r21 = virtualinvoke $r20.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r6, r12, r21);

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration anonymousType>;

        if $r2 != null goto label2;

        $r18 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r19 = $r18.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r22 = virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

        goto label3;

     label2:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r4 = $r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding superclass()>();

        $r22 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

     label3:
        $r7 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) $r22;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: void checkCapturedLocalInitializationIfNecessary(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r7, r6, r21);

        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        if $r8 == null goto label6;

        i2 = 0;

        $r15 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        i1 = lengthof $r15;

        goto label5;

     label4:
        $r16 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        $r17 = $r16[i2];

        r21 = virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r6, r12, r21);

        i2 = i2 + 1;

     label5:
        if i2 < i1 goto label4;

     label6:
        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration anonymousType>;

        if $r9 == null goto label7;

        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration anonymousType>;

        r21 = virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r6, r12, r21);

     label7:
        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r11 = $r10.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] thrownExceptions>;

        $i0 = lengthof $r11;

        if $i0 == 0 goto label8;

        $r13 = virtualinvoke r21.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalCopy()>();

        virtualinvoke r12.<org.eclipse.jdt.internal.compiler.flow.FlowContext: void checkExceptionHandlers(org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.flow.FlowInfo,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>($r11, r0, $r13, r6);

     label8:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: void manageEnclosingInstanceAccessIfNecessary(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r6, r21);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: void manageSyntheticAccessIfNecessary(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r6, r21);

        return r21;
    }

    public org.eclipse.jdt.internal.compiler.ast.Expression enclosingInstance()
    {
        org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression r0;
        org.eclipse.jdt.internal.compiler.ast.Expression $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression enclosingInstance>;

        return $r1;
    }

    public void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.codegen.CodeStream, boolean)
    {
        org.eclipse.jdt.internal.compiler.ast.Expression[] $r10;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding $r8;
        org.eclipse.jdt.internal.compiler.ast.Expression $r21;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r19;
        org.eclipse.jdt.internal.compiler.ast.FieldDeclaration $r4, $r7;
        boolean z0, z1, $z2, $z3, $z5, $z6;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r2, $r11, $r12, $r13, $r15, $r17, $r20;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r22, $r23;
        org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression r1;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r18, $r24;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r9;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, $i10, i11, $i12;
        java.lang.String $r6;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r3;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r14, $r16;
        char[] $r5;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression;

        r9 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        z1 := @parameter2: boolean;

        i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding codegenBinding>;

        r3 = $r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void new_(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r3);

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: int implicitConversion>;

        $i2 = $i1 & 1024;

        if $i2 == 0 goto label01;

        $z6 = 1;

        $z5 = 1;

        goto label02;

     label01:
        $z6 = 0;

        $z5 = 0;

     label02:
        z0 = $z5;

        if z1 != 0 goto label03;

        if $z6 == 0 goto label04;

     label03:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

     label04:
        $r23 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        if $r23 == null goto label05;

        $r22 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $i10 = $r22.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int sourceStart>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i0, $i10);

        goto label06;

     label05:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration enumConstant>;

        $r5 = $r4.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: char[] name>;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r5);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ldc(java.lang.String)>($r6);

        $r7 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.FieldDeclaration enumConstant>;

        $r8 = $r7.<org.eclipse.jdt.internal.compiler.ast.FieldDeclaration: org.eclipse.jdt.internal.compiler.lookup.FieldBinding binding>;

        $i3 = $r8.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: int id>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateInlinedValue(int)>($i3);

     label06:
        $z2 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isNestedType()>();

        if $z2 == 0 goto label07;

        $r21 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression enclosingInstance()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateSyntheticEnclosingInstanceValues(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,org.eclipse.jdt.internal.compiler.ast.Expression,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r9, r3, $r21, r1);

     label07:
        $r11 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r10 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: void generateArguments(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.ast.Expression[],org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream)>($r11, $r10, r9, r0);

        $z3 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isNestedType()>();

        if $z3 == 0 goto label08;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateSyntheticOuterArgumentValues(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r9, r3, r1);

     label08:
        $r12 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding syntheticAccessor>;

        if $r12 != null goto label09;

        $r20 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding codegenBinding>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokespecial(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r20);

        goto label12;

     label09:
        i11 = 0;

        $r13 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding syntheticAccessor>;

        $r14 = $r13.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $i5 = lengthof $r14;

        $r15 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding codegenBinding>;

        $r16 = $r15.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $i4 = lengthof $r16;

        i6 = $i5 - $i4;

        goto label11;

     label10:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void aconst_null()>();

        i11 = i11 + 1;

     label11:
        if i11 < i6 goto label10;

        $r17 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding syntheticAccessor>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokespecial(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r17);

     label12:
        if z1 == 0 goto label13;

        $i9 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: int implicitConversion>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateImplicitConversion(int)>($i9);

        goto label16;

     label13:
        if z0 == 0 goto label16;

        $i7 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: int implicitConversion>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateImplicitConversion(int)>($i7);

        $r19 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding postConversionType(org.eclipse.jdt.internal.compiler.lookup.Scope)>(r9);

        $i8 = $r19.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        tableswitch($i8)
        {
            case 7: goto label14;
            case 8: goto label14;
            default: goto label15;
        };

     label14:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void pop2()>();

        goto label16;

     label15:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void pop()>();

     label16:
        $i12 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: int sourceStart>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i0, $i12);

        $r24 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration anonymousType>;

        if $r24 == null goto label17;

        $r18 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration anonymousType>;

        virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r9, r0);

     label17:
        return;
    }

    public boolean isSuperAccess()
    {
        org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression r0;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration anonymousType>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public void manageEnclosingInstanceAccessIfNecessary(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r6;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r7;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r0;
        org.eclipse.jdt.internal.compiler.ast.Expression $r8, $r9;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r2;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r3, r5;
        org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding $r10;
        org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression r1;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression;

        r6 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: int tagBits>;

        $i1 = $i0 & 1;

        if $i1 != 0 goto label6;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r3 = $r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

        r5 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) $r4;

        $z0 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isNestedType()>();

        if $z0 == 0 goto label6;

        $r7 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding enclosingSourceType()>();

        $z1 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: boolean isLocalType()>();

        if $z1 == 0 goto label6;

        $z2 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isLocalType()>();

        if $z2 == 0 goto label3;

        $r10 = (org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding) r5;

        $r9 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression enclosingInstance>;

        if $r9 == null goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding: void addInnerEmulationDependent(org.eclipse.jdt.internal.compiler.lookup.BlockScope,boolean)>(r6, $z3);

        goto label6;

     label3:
        $r8 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression enclosingInstance>;

        if $r8 == null goto label4;

        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: void propagateInnerEmulation(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,boolean)>(r5, $z4);

     label6:
        return;
    }

    public java.lang.StringBuffer printExpression(int, java.lang.StringBuffer)
    {
        org.eclipse.jdt.internal.compiler.ast.Expression $r1, $r5;
        java.lang.StringBuffer r2, $r6;
        int i0;
        org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression r0;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r3, $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.StringBuffer;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression enclosingInstance>;

        if $r1 == null goto label1;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression enclosingInstance>;

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.ast.Expression: java.lang.StringBuffer printExpression(int,java.lang.StringBuffer)>(0, r2);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

     label1:
        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: java.lang.StringBuffer printExpression(int,java.lang.StringBuffer)>(0, r2);

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration anonymousType>;

        if $r3 == null goto label2;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration anonymousType>;

        virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: java.lang.StringBuffer print(int,java.lang.StringBuffer)>(i0, r2);

     label2:
        return r2;
    }

    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ast.TypeReference[][] $r120, $r121;
        byte $b2, $b5, $b12, $b29;
        org.eclipse.jdt.internal.compiler.ast.TypeReference[] $r18, $r23, $r60, $r75, $r106, $r109, $r122, $r146;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r16, $r19, $r48, $r49, $r53, $r56, $r57, $r59, $r61, $r69, $r70, $r71, $r77, $r79, $r86, $r87, $r92, $r93, $r95, $r98, $r101, r152, $r155, $r161;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r4, $r6, $r10, $r37, $r40, $r43, $r51, $r54, $r81, $r117, $r119, $r124, $r130, $r131, $r137, r147;
        org.eclipse.jdt.internal.compiler.impl.Constant $r2;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r5;
        long $l0, $l1, $l3, $l4, $l11, $l27, $l28;
        org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment $r100;
        org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding $r94;
        org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding $r163;
        org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] $r20, $r21, $r72, $r73, $r96, $r97;
        org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression r0;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r1, $r9, $r11, $r12, $r13, $r88, $r89, $r90, $r153, $r160;
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r14, $r91;
        org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference r145;
        int $i6, $i7, $i8, $i9, $i10, $i13, $i14, $i15, $i16, $i17, i18, i19, i20, i21, i22, i23, i24, $i25, i26, $i31, $i32, $i34;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r24, $r76, $r102, $r108, $r110, r148;
        org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope $r67;
        char[][] $r45;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r7, $r15, $r31, $r34, $r39, $r41, $r55, $r84, $r105, $r111, $r127, $r134, $r141, r142, r143, $r151, $r162;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r107;
        org.eclipse.jdt.internal.compiler.ast.SingleTypeReference $r133;
        char[] $r46, $r85;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r22, $r29, $r32, $r35, $r38, $r42, $r47, $r52, $r65, $r68, $r74, $r78, $r80, $r112, $r123, $r128, $r136;
        org.eclipse.jdt.internal.compiler.ast.Expression[] $r8, $r25, $r58, $r82, $r83, $r103, $r104, $r113, $r114, $r115, $r159;
        org.eclipse.jdt.internal.compiler.ast.Expression $r3, $r17, $r28, $r30, $r33, $r64, $r66, $r116, $r125, $r126, $r129, $r135, $r139, $r140, r149;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, z29, z30, z31, $z32, z33, z34, z35;
        org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference $r138;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r26, $r27, $r36, $r50, $r62, $r63, $r99, $r118, $r132, r144, r150, r154, r156, $r157, r158;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression;

        r5 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration anonymousType>;

        if $r1 != null goto label01;

        $r140 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression enclosingInstance>;

        if $r140 != null goto label01;

        $r141 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.AllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r5);

        return $r141;

     label01:
        $r2 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r2;

        r142 = null;

        r143 = null;

        z29 = 0;

        z30 = 0;

        z31 = 0;

        z35 = 0;

        z34 = 0;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression enclosingInstance>;

        if $r3 == null goto label07;

        $r125 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression enclosingInstance>;

        $z25 = $r125 instanceof org.eclipse.jdt.internal.compiler.ast.CastExpression;

        if $z25 == 0 goto label02;

        $r139 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression enclosingInstance>;

        $i16 = $r139.<org.eclipse.jdt.internal.compiler.ast.Expression: int bits>;

        $i17 = $i16 | 32;

        $r139.<org.eclipse.jdt.internal.compiler.ast.Expression: int bits> = $i17;

        z30 = 1;

     label02:
        $r126 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression enclosingInstance>;

        $r127 = virtualinvoke $r126.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r5);

        r142 = $r127;

        if $r127 != null goto label03;

        z29 = 1;

        goto label16;

     label03:
        $z26 = virtualinvoke $r127.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z26 != 0 goto label04;

        $z27 = virtualinvoke $r127.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isArrayType()>();

        if $z27 == 0 goto label05;

     label04:
        $r128 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r129 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression enclosingInstance>;

        virtualinvoke $r128.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void illegalPrimitiveOrArrayTypeForEnclosingInstance(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>($r127, $r129);

        z29 = 1;

        goto label16;

     label05:
        $r130 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $z28 = $r130 instanceof org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference;

        if $z28 == 0 goto label06;

        $r136 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r137 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $r138 = (org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference) $r137;

        virtualinvoke $r136.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void illegalUsageOfQualifiedTypeReference(org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference)>($r138);

        z29 = 1;

        goto label16;

     label06:
        $r131 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $r133 = (org.eclipse.jdt.internal.compiler.ast.SingleTypeReference) $r131;

        $r132 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) $r127;

        $r134 = virtualinvoke $r133.<org.eclipse.jdt.internal.compiler.ast.SingleTypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveTypeEnclosing(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>(r5, $r132);

        r143 = $r134;

        if $r134 == null goto label16;

        if z30 == 0 goto label16;

        $r135 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression enclosingInstance>;

        staticinvoke <org.eclipse.jdt.internal.compiler.ast.CastExpression: void checkNeedForEnclosingInstanceCast(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.ast.Expression,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r5, $r135, $r127, $r134);

        goto label16;

     label07:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        if $r4 != null goto label08;

        r143 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding enclosingSourceType()>();

        goto label16;

     label08:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope,boolean)>(r5, 1);

        r143 = $r7;

        if $r7 == null goto label16;

        $z22 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isValidBinding()>();

        if $z22 != 0 goto label09;

        goto label16;

     label09:
        $r117 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $z23 = $r117 instanceof org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference;

        if $z23 == 0 goto label16;

        r144 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) $r7;

     label10:
        $i13 = r144.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: int modifiers>;

        $i14 = $i13 & 8;

        if $i14 == 0 goto label11;

        goto label16;

     label11:
        $z24 = virtualinvoke r144.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isRawType()>();

        if $z24 == 0 goto label12;

        goto label16;

     label12:
        $r118 = virtualinvoke r144.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingType()>();

        r144 = $r118;

        if $r118 != null goto label10;

        $r119 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        r145 = (org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference) $r119;

        $r120 = r145.<org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference: org.eclipse.jdt.internal.compiler.ast.TypeReference[][] typeArguments>;

        $i15 = lengthof $r120;

        i18 = $i15 - 2;

        goto label15;

     label13:
        $r121 = r145.<org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference: org.eclipse.jdt.internal.compiler.ast.TypeReference[][] typeArguments>;

        $r122 = $r121[i18];

        if $r122 == null goto label14;

        $r123 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r124 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        virtualinvoke $r123.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void illegalQualifiedParameterizedTypeAllocation(org.eclipse.jdt.internal.compiler.ast.TypeReference,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r124, $r7);

        goto label16;

     label14:
        $i31 = (int) -1;

        i18 = i18 + $i31;

     label15:
        if i18 >= 0 goto label13;

     label16:
        if r143 == null goto label17;

        $z21 = virtualinvoke r143.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isValidBinding()>();

        if $z21 != 0 goto label18;

     label17:
        z29 = 1;

     label18:
        $r146 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        if $r146 == null goto label28;

        $r106 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        i19 = lengthof $r106;

        $r107 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        $l11 = $r107.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long sourceLevel>;

        $b12 = $l11 cmp 3211264L;

        $i32 = (int) $b12;

        if $i32 >= 0 goto label19;

        $z32 = 1;

        goto label20;

     label19:
        $z32 = 0;

     label20:
        z33 = $z32;

        $r108 = newarray (org.eclipse.jdt.internal.compiler.lookup.TypeBinding)[i19];

        r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] genericTypeArguments> = $r108;

        i20 = 0;

        goto label24;

     label21:
        $r109 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        r147 = $r109[i20];

        $r110 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] genericTypeArguments>;

        $r111 = virtualinvoke r147.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope,boolean)>(r5, 1);

        $r110[i20] = $r111;

        if $r111 != null goto label22;

        z33 = 1;

     label22:
        if z33 == 0 goto label23;

        $z20 = r147 instanceof org.eclipse.jdt.internal.compiler.ast.Wildcard;

        if $z20 == 0 goto label23;

        $r112 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r112.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void illegalUsageOfWildcard(org.eclipse.jdt.internal.compiler.ast.TypeReference)>(r147);

     label23:
        i20 = i20 + 1;

     label24:
        if i20 < i19 goto label21;

        if z33 == 0 goto label28;

        $r113 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        if $r113 == null goto label27;

        i21 = 0;

        $r114 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        i22 = lengthof $r114;

        goto label26;

     label25:
        $r115 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        $r116 = $r115[i21];

        virtualinvoke $r116.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r5);

        i21 = i21 + 1;

     label26:
        if i21 < i22 goto label25;

     label27:
        return null;

     label28:
        r148 = <org.eclipse.jdt.internal.compiler.lookup.Binding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] NO_PARAMETERS>;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        if $r8 == null goto label33;

        $r103 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        i23 = lengthof $r103;

        r148 = newarray (org.eclipse.jdt.internal.compiler.lookup.TypeBinding)[i23];

        i24 = 0;

        goto label32;

     label29:
        $r104 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        r149 = $r104[i24];

        $z19 = r149 instanceof org.eclipse.jdt.internal.compiler.ast.CastExpression;

        if $z19 == 0 goto label30;

        $i9 = r149.<org.eclipse.jdt.internal.compiler.ast.Expression: int bits>;

        $i10 = $i9 | 32;

        r149.<org.eclipse.jdt.internal.compiler.ast.Expression: int bits> = $i10;

        z31 = 1;

        z35 = 1;

        z34 = 1;

     label30:
        $r105 = virtualinvoke r149.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r5);

        r148[i24] = $r105;

        if $r105 != null goto label31;

        z29 = 1;

     label31:
        i24 = i24 + 1;

     label32:
        if i24 < i23 goto label29;

     label33:
        if z29 == 0 goto label45;

        $z13 = r143 instanceof org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        if $z13 == 0 goto label44;

        r150 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) r143;

        $z14 = virtualinvoke r143.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isValidBinding()>();

        if $z14 == 0 goto label42;

        $r82 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        if $r82 != null goto label34;

        $i25 = 0;

        goto label35;

     label34:
        $r83 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        $i25 = lengthof $r83;

     label35:
        $r102 = newarray (org.eclipse.jdt.internal.compiler.lookup.TypeBinding)[$i25];

        i26 = $i25;

        goto label39;

     label36:
        $i6 = i26;

        $r84 = r148[i26];

        if $r84 != null goto label37;

        $r151 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding NULL>;

        goto label38;

     label37:
        $r151 = r148[i26];

     label38:
        $r102[$i6] = $r151;

     label39:
        $i34 = (int) -1;

        i26 = i26 + $i34;

        if i26 >= 0 goto label36;

        $r85 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] INIT>;

        $r86 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.MethodBinding findMethod(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,char[],org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],org.eclipse.jdt.internal.compiler.lookup.InvocationSite)>(r150, $r85, $r102, r0);

        r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding> = $r86;

        $r87 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        if $r87 == null goto label43;

        $r92 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $z15 = virtualinvoke $r92.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isValidBinding()>();

        if $z15 != 0 goto label43;

        $r93 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r94 = (org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding) $r93;

        r152 = $r94.<org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding closestMatch>;

        if r152 == null goto label43;

        $r95 = virtualinvoke r152.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $r97 = $r95.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] typeVariables>;

        $r96 = <org.eclipse.jdt.internal.compiler.lookup.Binding: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] NO_TYPE_VARIABLES>;

        if $r97 == $r96 goto label40;

        $r100 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment environment()>();

        $r101 = virtualinvoke r152.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        r152 = virtualinvoke $r100.<org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding createParameterizedGenericMethod(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding)>($r101, null);

     label40:
        r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding> = r152;

        $r98 = virtualinvoke r152.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $z16 = virtualinvoke $r98.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isPrivate()>();

        if $z16 != 0 goto label41;

        $r99 = $r98.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z18 = virtualinvoke $r99.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isLocalType()>();

        if $z18 == 0 goto label43;

     label41:
        $z17 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: boolean isDefinedInMethod(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r98);

        if $z17 != 0 goto label43;

        $i7 = $r98.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int modifiers>;

        $i8 = $i7 | 134217728;

        $r98.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: int modifiers> = $i8;

        goto label43;

     label42:
        return null;

     label43:
        $r153 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration anonymousType>;

        if $r153 == null goto label44;

        $r88 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration anonymousType>;

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: void addAnonymousType(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>($r88, r150);

        $r89 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration anonymousType>;

        virtualinvoke $r89.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void resolve(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r5);

        $r90 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration anonymousType>;

        $r91 = $r90.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType> = $r91;

        return $r91;

     label44:
        r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType> = r143;

        return r143;

     label45:
        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration anonymousType>;

        if $r9 != null goto label56;

        $z7 = virtualinvoke r143.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean canBeInstantiated()>();

        if $z7 != 0 goto label46;

        $r80 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r81 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        virtualinvoke $r80.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void cannotInstantiate(org.eclipse.jdt.internal.compiler.ast.TypeReference,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r81, r143);

        r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType> = r143;

        return r143;

     label46:
        r154 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) r143;

        $r48 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.MethodBinding getConstructor(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],org.eclipse.jdt.internal.compiler.lookup.InvocationSite)>(r154, r148, r0);

        r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding> = $r48;

        $z8 = virtualinvoke $r48.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isValidBinding()>();

        if $z8 == 0 goto label48;

        $r57 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $z10 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: boolean isMethodUseDeprecated(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.Scope,boolean)>($r57, r5, 1);

        if $z10 == 0 goto label47;

        $r78 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r79 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        virtualinvoke $r78.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void deprecatedMethod(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>($r79, r0);

     label47:
        $r59 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r58 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        staticinvoke <org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: void checkInvocationArguments(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.ast.Expression,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.ast.Expression[],org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean,org.eclipse.jdt.internal.compiler.lookup.InvocationSite)>(r5, null, r154, $r59, $r58, r148, z35, r0);

        $r60 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        if $r60 == null goto label51;

        $r70 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r71 = virtualinvoke $r70.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $r73 = $r71.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] typeVariables>;

        $r72 = <org.eclipse.jdt.internal.compiler.lookup.Binding: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] NO_TYPE_VARIABLES>;

        if $r73 != $r72 goto label51;

        $r74 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r77 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r76 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] genericTypeArguments>;

        $r75 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        virtualinvoke $r74.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void unnecessaryTypeArgumentsForMethodInvocation(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],org.eclipse.jdt.internal.compiler.ast.TypeReference[])>($r77, $r76, $r75);

        goto label51;

     label48:
        $r49 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r50 = $r49.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        if $r50 != null goto label49;

        $r56 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r56.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass> = r154;

     label49:
        $r51 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        if $r51 == null goto label50;

        $r54 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $r55 = $r54.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $z9 = virtualinvoke $r55.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isValidBinding()>();

        if $z9 != 0 goto label50;

        return null;

     label50:
        $r52 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r53 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        virtualinvoke $r52.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void invalidConstructor(org.eclipse.jdt.internal.compiler.ast.Statement,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r0, $r53);

        r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType> = r143;

        return r143;

     label51:
        $r155 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $l27 = $r155.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: long tagBits>;

        $l28 = $l27 & 128L;

        $b29 = $l28 cmp 0L;

        if $b29 == 0 goto label52;

        $r68 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r69 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        virtualinvoke $r68.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void missingTypeInConstructor(org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r0, $r69);

     label52:
        $r61 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        $r62 = $r61.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r63 = virtualinvoke $r62.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingType()>();

        if $r63 == r142 goto label53;

        $r67 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope compilationUnitScope()>();

        virtualinvoke $r67.<org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope: void recordTypeConversion(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r63, r142);

     label53:
        $z11 = virtualinvoke r142.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isCompatibleWith(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r63);

        if $z11 != 0 goto label54;

        $z12 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: boolean isBoxingCompatibleWith(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r142, $r63);

        if $z12 == 0 goto label55;

     label54:
        $r64 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression enclosingInstance>;

        virtualinvoke $r64.<org.eclipse.jdt.internal.compiler.ast.Expression: void computeConversion(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r5, $r63, r142);

        r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType> = r143;

        return r143;

     label55:
        $r65 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r66 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression enclosingInstance>;

        virtualinvoke $r65.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void typeMismatchError(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r142, $r63, $r66, null);

        r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType> = r143;

        return r143;

     label56:
        r156 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) r143;

        $z0 = virtualinvoke r156.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isTypeVariable()>();

        if $z0 == 0 goto label57;

        $r163 = new org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding;

        $r45 = newarray (char[])[1];

        $r46 = virtualinvoke r156.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] sourceName()>();

        $r45[0] = $r46;

        specialinvoke $r163.<org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding: void <init>(char[][],org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,int)>($r45, r156, 9);

        $r47 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r47.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void invalidType(org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0, $r163);

        return null;

     label57:
        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        if $r10 == null goto label58;

        $z6 = virtualinvoke r156.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isEnum()>();

        if $z6 == 0 goto label58;

        $r42 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r43 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        virtualinvoke $r42.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void cannotInstantiate(org.eclipse.jdt.internal.compiler.ast.TypeReference,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r43, r156);

        r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType> = r156;

        return r156;

     label58:
        $z1 = virtualinvoke r156.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isInterface()>();

        if $z1 == 0 goto label59;

        $r157 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding getJavaLangObject()>();

        goto label60;

     label59:
        $r157 = r156;

     label60:
        r158 = $r157;

        $r11 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration anonymousType>;

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: void addAnonymousType(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>($r11, r156);

        $r12 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration anonymousType>;

        virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void resolve(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r5);

        $r13 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration anonymousType>;

        $r14 = $r13.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding binding>;

        r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType> = $r14;

        $r15 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $l0 = $r15.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: long tagBits>;

        $l1 = $l0 & 131072L;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label61;

        return null;

     label61:
        $r16 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.MethodBinding getConstructor(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],org.eclipse.jdt.internal.compiler.lookup.InvocationSite)>($r157, r148, r0);

        $z2 = virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isValidBinding()>();

        if $z2 != 0 goto label64;

        $r36 = $r16.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        if $r36 != null goto label62;

        $r16.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass> = $r157;

     label62:
        $r37 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        if $r37 == null goto label63;

        $r40 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $r41 = $r40.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        $z5 = virtualinvoke $r41.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isValidBinding()>();

        if $z5 != 0 goto label63;

        return null;

     label63:
        $r38 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r38.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void invalidConstructor(org.eclipse.jdt.internal.compiler.ast.Statement,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r0, $r16);

        $r39 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        return $r39;

     label64:
        $l3 = $r16.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: long tagBits>;

        $l4 = $l3 & 128L;

        $b5 = $l4 cmp 0L;

        if $b5 == 0 goto label65;

        $r35 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r35.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void missingTypeInConstructor(org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r0, $r16);

     label65:
        $r17 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression enclosingInstance>;

        if $r17 == null goto label68;

        $r26 = $r16.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r27 = virtualinvoke $r26.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingType()>();

        if $r27 != null goto label66;

        $r32 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r33 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression enclosingInstance>;

        virtualinvoke $r32.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void unnecessaryEnclosingInstanceSpecification(org.eclipse.jdt.internal.compiler.ast.Expression,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>($r33, r156);

        $r34 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        return $r34;

     label66:
        $z3 = virtualinvoke r142.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isCompatibleWith(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r27);

        if $z3 != 0 goto label67;

        $z4 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: boolean isBoxingCompatibleWith(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r142, $r27);

        if $z4 != 0 goto label67;

        $r29 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r30 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression enclosingInstance>;

        virtualinvoke $r29.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void typeMismatchError(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r142, $r27, $r30, null);

        $r31 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        return $r31;

     label67:
        $r28 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression enclosingInstance>;

        virtualinvoke $r28.<org.eclipse.jdt.internal.compiler.ast.Expression: void computeConversion(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r5, $r27, r142);

     label68:
        $r159 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        if $r159 == null goto label69;

        $r25 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        staticinvoke <org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: void checkInvocationArguments(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.ast.Expression,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.ast.Expression[],org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],boolean,org.eclipse.jdt.internal.compiler.lookup.InvocationSite)>(r5, null, r158, $r16, $r25, r148, z34, r0);

     label69:
        $r18 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        if $r18 == null goto label70;

        $r19 = virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding original()>();

        $r21 = $r19.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] typeVariables>;

        $r20 = <org.eclipse.jdt.internal.compiler.lookup.Binding: org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding[] NO_TYPE_VARIABLES>;

        if $r21 != $r20 goto label70;

        $r22 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r24 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] genericTypeArguments>;

        $r23 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void unnecessaryTypeArgumentsForMethodInvocation(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],org.eclipse.jdt.internal.compiler.ast.TypeReference[])>($r16, $r24, $r23);

     label70:
        $r160 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration anonymousType>;

        $r161 = virtualinvoke $r160.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding createDefaultConstructorWithBinding(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r16);

        r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding> = $r161;

        $r162 = r0.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        return $r162;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.Expression[] $r6, $r9, $r10;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.ast.Expression $r3, $r11, $r16;
        int i0, i1, i2, i3;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.ast.TypeReference[] $r4, $r13, $r14;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r5, $r12, $r15;
        org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression r1;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r7, $r8;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        if $z0 == 0 goto label9;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression enclosingInstance>;

        if $r3 == null goto label1;

        $r16 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression enclosingInstance>;

        virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.ast.Expression: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, r2);

     label1:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        if $r4 == null goto label4;

        i0 = 0;

        $r13 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        i1 = lengthof $r13;

        goto label3;

     label2:
        $r14 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference[] typeArguments>;

        $r15 = $r14[i0];

        virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.ast.TypeReference: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, r2);

        i0 = i0 + 1;

     label3:
        if i0 < i1 goto label2;

     label4:
        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        if $r5 == null goto label5;

        $r12 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.ast.TypeReference: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, r2);

     label5:
        $r6 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        if $r6 == null goto label8;

        $r9 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        i2 = lengthof $r9;

        i3 = 0;

        goto label7;

     label6:
        $r10 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.Expression[] arguments>;

        $r11 = $r10[i3];

        virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.ast.Expression: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, r2);

        i3 = i3 + 1;

     label7:
        if i3 < i2 goto label6;

     label8:
        $r7 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration anonymousType>;

        if $r7 == null goto label9;

        $r8 = r1.<org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration anonymousType>;

        virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, r2);

     label9:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        return;
    }
}
