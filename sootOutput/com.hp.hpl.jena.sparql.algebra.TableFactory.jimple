public class com.hp.hpl.jena.sparql.algebra.TableFactory extends java.lang.Object
{

    public void <init>()
    {
        com.hp.hpl.jena.sparql.algebra.TableFactory r0;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.TableFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.hp.hpl.jena.sparql.algebra.Table createUnit()
    {
        com.hp.hpl.jena.sparql.algebra.table.TableUnit $r0;

        $r0 = new com.hp.hpl.jena.sparql.algebra.table.TableUnit;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.algebra.table.TableUnit: void <init>()>();

        return $r0;
    }

    public static com.hp.hpl.jena.sparql.algebra.Table createEmpty()
    {
        com.hp.hpl.jena.sparql.algebra.table.TableEmpty $r0;

        $r0 = new com.hp.hpl.jena.sparql.algebra.table.TableEmpty;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.algebra.table.TableEmpty: void <init>()>();

        return $r0;
    }

    public static com.hp.hpl.jena.sparql.algebra.Table create()
    {
        com.hp.hpl.jena.sparql.algebra.table.TableN $r0;

        $r0 = new com.hp.hpl.jena.sparql.algebra.table.TableN;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.algebra.table.TableN: void <init>()>();

        return $r0;
    }

    public static com.hp.hpl.jena.sparql.algebra.Table create(java.util.List)
    {
        java.util.List r1;
        com.hp.hpl.jena.sparql.algebra.table.TableN $r0;

        r1 := @parameter0: java.util.List;

        $r0 = new com.hp.hpl.jena.sparql.algebra.table.TableN;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.algebra.table.TableN: void <init>(java.util.List)>(r1);

        return $r0;
    }

    public static com.hp.hpl.jena.sparql.algebra.Table create(com.hp.hpl.jena.sparql.engine.QueryIterator)
    {
        com.hp.hpl.jena.sparql.algebra.Table $r2;
        com.hp.hpl.jena.sparql.algebra.table.TableN $r1;
        com.hp.hpl.jena.sparql.engine.QueryIterator r0;
        boolean $z0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryIterator;

        $z0 = r0 instanceof com.hp.hpl.jena.sparql.engine.iterator.QueryIterRoot;

        if $z0 == 0 goto label1;

        interfaceinvoke r0.<com.hp.hpl.jena.sparql.engine.QueryIterator: void close()>();

        $r2 = staticinvoke <com.hp.hpl.jena.sparql.algebra.TableFactory: com.hp.hpl.jena.sparql.algebra.Table createUnit()>();

        return $r2;

     label1:
        $r1 = new com.hp.hpl.jena.sparql.algebra.table.TableN;

        specialinvoke $r1.<com.hp.hpl.jena.sparql.algebra.table.TableN: void <init>(com.hp.hpl.jena.sparql.engine.QueryIterator)>(r0);

        return $r1;
    }

    public static com.hp.hpl.jena.sparql.algebra.Table create(com.hp.hpl.jena.sparql.core.Var, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.algebra.table.Table1 $r0;
        com.hp.hpl.jena.graph.Node r2;
        com.hp.hpl.jena.sparql.core.Var r1;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.Var;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        $r0 = new com.hp.hpl.jena.sparql.algebra.table.Table1;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.algebra.table.Table1: void <init>(com.hp.hpl.jena.sparql.core.Var,com.hp.hpl.jena.graph.Node)>(r1, r2);

        return $r0;
    }
}
