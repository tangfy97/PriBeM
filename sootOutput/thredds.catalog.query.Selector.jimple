public abstract class thredds.catalog.query.Selector extends java.lang.Object
{
    protected java.util.ArrayList children;
    protected java.util.List compound;
    protected boolean isUsed;
    protected java.lang.String title;
    protected java.lang.String id;
    protected java.lang.String template;
    protected boolean required;
    protected boolean multiple;
    protected thredds.catalog.InvDocumentation desc;

    protected void <init>()
    {
        thredds.catalog.query.Selector r0;
        java.util.ArrayList $r1;

        r0 := @this: thredds.catalog.query.Selector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<thredds.catalog.query.Selector: java.util.ArrayList children> = $r1;

        return;
    }

    protected void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        thredds.catalog.query.Selector r0;
        java.util.ArrayList $r1;
        java.lang.String r2, r3, r4, r5, r6;
        boolean $z0, $z1, $z2;

        r0 := @this: thredds.catalog.query.Selector;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.String;

        r6 := @parameter4: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<thredds.catalog.query.Selector: java.util.ArrayList children> = $r1;

        r0.<thredds.catalog.query.Selector: java.lang.String title> = r2;

        r0.<thredds.catalog.query.Selector: java.lang.String id> = r3;

        r0.<thredds.catalog.query.Selector: java.lang.String template> = r4;

        if r5 != null goto label1;

        $z1 = 1;

        goto label3;

     label1:
        $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("false");

        if $z0 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        r0.<thredds.catalog.query.Selector: boolean required> = $z1;

        if r6 != null goto label4;

        $z2 = 0;

        goto label5;

     label4:
        $z2 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("true");

     label5:
        r0.<thredds.catalog.query.Selector: boolean multiple> = $z2;

        return;
    }

    public void setDescription(thredds.catalog.InvDocumentation)
    {
        thredds.catalog.InvDocumentation r1;
        thredds.catalog.query.Selector r0;

        r0 := @this: thredds.catalog.query.Selector;

        r1 := @parameter0: thredds.catalog.InvDocumentation;

        r0.<thredds.catalog.query.Selector: thredds.catalog.InvDocumentation desc> = r1;

        return;
    }

    public thredds.catalog.InvDocumentation getDescription()
    {
        thredds.catalog.InvDocumentation $r1;
        thredds.catalog.query.Selector r0;

        r0 := @this: thredds.catalog.query.Selector;

        $r1 = r0.<thredds.catalog.query.Selector: thredds.catalog.InvDocumentation desc>;

        return $r1;
    }

    public java.lang.String getTitle()
    {
        java.lang.String $r1;
        thredds.catalog.query.Selector r0;

        r0 := @this: thredds.catalog.query.Selector;

        $r1 = r0.<thredds.catalog.query.Selector: java.lang.String title>;

        return $r1;
    }

    public void setTitle(java.lang.String)
    {
        java.lang.String r1;
        thredds.catalog.query.Selector r0;

        r0 := @this: thredds.catalog.query.Selector;

        r1 := @parameter0: java.lang.String;

        r0.<thredds.catalog.query.Selector: java.lang.String title> = r1;

        return;
    }

    public java.lang.String getId()
    {
        java.lang.String $r1;
        thredds.catalog.query.Selector r0;

        r0 := @this: thredds.catalog.query.Selector;

        $r1 = r0.<thredds.catalog.query.Selector: java.lang.String id>;

        return $r1;
    }

    public void setId(java.lang.String)
    {
        java.lang.String r1;
        thredds.catalog.query.Selector r0;

        r0 := @this: thredds.catalog.query.Selector;

        r1 := @parameter0: java.lang.String;

        r0.<thredds.catalog.query.Selector: java.lang.String id> = r1;

        return;
    }

    public java.lang.String getTemplate()
    {
        java.lang.String $r1;
        thredds.catalog.query.Selector r0;

        r0 := @this: thredds.catalog.query.Selector;

        $r1 = r0.<thredds.catalog.query.Selector: java.lang.String template>;

        return $r1;
    }

    public void setTemplate(java.lang.String)
    {
        java.lang.String r1;
        thredds.catalog.query.Selector r0;

        r0 := @this: thredds.catalog.query.Selector;

        r1 := @parameter0: java.lang.String;

        r0.<thredds.catalog.query.Selector: java.lang.String template> = r1;

        return;
    }

    public boolean isRequired()
    {
        thredds.catalog.query.Selector r0;
        boolean $z0;

        r0 := @this: thredds.catalog.query.Selector;

        $z0 = r0.<thredds.catalog.query.Selector: boolean required>;

        return $z0;
    }

    public void setRequired(java.lang.String)
    {
        thredds.catalog.query.Selector r0;
        java.lang.String r1;
        boolean $z0, $z1;

        r0 := @this: thredds.catalog.query.Selector;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $z1 = 1;

        goto label3;

     label1:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("false");

        if $z0 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        r0.<thredds.catalog.query.Selector: boolean required> = $z1;

        return;
    }

    public boolean isMultiple()
    {
        thredds.catalog.query.Selector r0;
        boolean $z0;

        r0 := @this: thredds.catalog.query.Selector;

        $z0 = r0.<thredds.catalog.query.Selector: boolean multiple>;

        return $z0;
    }

    public void setMultiple(java.lang.String)
    {
        java.lang.String r1;
        thredds.catalog.query.Selector r0;
        boolean $z0;

        r0 := @this: thredds.catalog.query.Selector;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $z0 = 0;

        goto label2;

     label1:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("true");

     label2:
        r0.<thredds.catalog.query.Selector: boolean multiple> = $z0;

        return;
    }

    public java.lang.String getSelectType()
    {
        java.lang.String $r1;
        thredds.catalog.query.Selector r0;
        boolean $z0;

        r0 := @this: thredds.catalog.query.Selector;

        $z0 = r0.<thredds.catalog.query.Selector: boolean multiple>;

        if $z0 == 0 goto label1;

        $r1 = "multiple";

        goto label2;

     label1:
        $r1 = "single";

     label2:
        return $r1;
    }

    public void setCompoundSelectors(java.util.List)
    {
        java.util.List r1;
        thredds.catalog.query.Selector r0;

        r0 := @this: thredds.catalog.query.Selector;

        r1 := @parameter0: java.util.List;

        r0.<thredds.catalog.query.Selector: java.util.List compound> = r1;

        return;
    }

    public boolean isUsed()
    {
        thredds.catalog.query.Selector r0;
        boolean $z0;

        r0 := @this: thredds.catalog.query.Selector;

        $z0 = r0.<thredds.catalog.query.Selector: boolean isUsed>;

        return $z0;
    }

    public void setUsed(boolean)
    {
        java.util.Iterator $r3;
        thredds.catalog.query.Selector r0, r5;
        java.util.List $r1, $r2;
        java.lang.Object $r4;
        boolean z0, $z1;

        r0 := @this: thredds.catalog.query.Selector;

        z0 := @parameter0: boolean;

        r0.<thredds.catalog.query.Selector: boolean isUsed> = z0;

        if z0 == 0 goto label3;

        $r1 = r0.<thredds.catalog.query.Selector: java.util.List compound>;

        if $r1 == null goto label3;

        $r2 = r0.<thredds.catalog.query.Selector: java.util.List compound>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (thredds.catalog.query.Selector) $r4;

        if r5 == r0 goto label2;

        virtualinvoke r5.<thredds.catalog.query.Selector: void setUsed(boolean)>(0);

     label2:
        goto label1;

     label3:
        return;
    }

    public void appendQuery(java.lang.StringBuffer, java.util.ArrayList)
    {
        java.lang.StringBuffer r2;
        thredds.catalog.query.Selector r0;
        java.lang.String $r1;
        java.util.ArrayList r3;

        r0 := @this: thredds.catalog.query.Selector;

        r2 := @parameter0: java.lang.StringBuffer;

        r3 := @parameter1: java.util.ArrayList;

        $r1 = r0.<thredds.catalog.query.Selector: java.lang.String template>;

        if $r1 == null goto label1;

        specialinvoke r0.<thredds.catalog.query.Selector: void appendQueryFromTemplate(java.lang.StringBuffer,java.util.ArrayList)>(r2, r3);

        goto label2;

     label1:
        specialinvoke r0.<thredds.catalog.query.Selector: void appendQueryFromParamValue(java.lang.StringBuffer,java.util.ArrayList)>(r2, r3);

     label2:
        return;
    }

    private void appendQueryFromParamValue(java.lang.StringBuffer, java.util.ArrayList)
    {
        thredds.catalog.query.Selector r2;
        java.util.ArrayList r0;
        java.lang.StringBuffer r1;
        int $i0, i1;
        java.lang.Object $r4;
        java.lang.String $r3, $r5;

        r2 := @this: thredds.catalog.query.Selector;

        r1 := @parameter0: java.lang.StringBuffer;

        r0 := @parameter1: java.util.ArrayList;

        i1 = 1;

     label1:
        $i0 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        if i1 >= $i0 goto label2;

        $r3 = virtualinvoke r2.<thredds.catalog.query.Selector: java.lang.String getId()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=");

        $r4 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("&");

        i1 = i1 + 2;

        goto label1;

     label2:
        return;
    }

    private void appendQueryFromTemplate(java.lang.StringBuffer, java.util.ArrayList)
    {
        thredds.catalog.query.Selector r1;
        java.util.ArrayList r3;
        java.lang.StringBuffer $r0, r4;
        int $i0, $i1, i2;
        java.lang.Object $r6, $r8;
        java.lang.String $r2, $r5, $r7, $r9;

        r1 := @this: thredds.catalog.query.Selector;

        r4 := @parameter0: java.lang.StringBuffer;

        r3 := @parameter1: java.util.ArrayList;

        $r0 = new java.lang.StringBuffer;

        $r2 = r1.<thredds.catalog.query.Selector: java.lang.String template>;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>($r2);

        i2 = 0;

     label1:
        $i0 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if i2 >= $i0 goto label2;

        $r6 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        $i1 = i2 + 1;

        $r8 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <ucar.unidata.util.StringUtil: void substitute(java.lang.StringBuffer,java.lang.String,java.lang.String)>($r0, $r7, $r9);

        i2 = i2 + 2;

        goto label1;

     label2:
        $r5 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        thredds.catalog.query.Selector r0;
        int $i0, $i1;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: thredds.catalog.query.Selector;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof thredds.catalog.query.Selector;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        $i1 = virtualinvoke r0.<thredds.catalog.query.Selector: int hashCode()>();

        if $i0 != $i1 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public int hashCode()
    {
        thredds.catalog.query.Selector r0;
        int $i0, $i1;
        java.lang.String $r1, $r2;

        r0 := @this: thredds.catalog.query.Selector;

        $r1 = virtualinvoke r0.<thredds.catalog.query.Selector: java.lang.String getId()>();

        if null == $r1 goto label1;

        $r2 = virtualinvoke r0.<thredds.catalog.query.Selector: java.lang.String getId()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        return $i1;

     label1:
        $i0 = specialinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }
}
