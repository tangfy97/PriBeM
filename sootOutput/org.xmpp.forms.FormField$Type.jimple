public final enum class org.xmpp.forms.FormField$Type extends java.lang.Enum
{
    public static final enum org.xmpp.forms.FormField$Type boolean_type;
    public static final enum org.xmpp.forms.FormField$Type fixed;
    public static final enum org.xmpp.forms.FormField$Type hidden;
    public static final enum org.xmpp.forms.FormField$Type jid_multi;
    public static final enum org.xmpp.forms.FormField$Type jid_single;
    public static final enum org.xmpp.forms.FormField$Type list_multi;
    public static final enum org.xmpp.forms.FormField$Type list_single;
    public static final enum org.xmpp.forms.FormField$Type text_multi;
    public static final enum org.xmpp.forms.FormField$Type text_private;
    public static final enum org.xmpp.forms.FormField$Type text_single;
    private java.lang.String value;
    private static final org.xmpp.forms.FormField$Type[] $VALUES;

    public static org.xmpp.forms.FormField$Type[] values()
    {
        java.lang.Object $r1;
        org.xmpp.forms.FormField$Type[] $r0, $r2;

        $r0 = <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.xmpp.forms.FormField$Type[]) $r1;

        return $r2;
    }

    public static org.xmpp.forms.FormField$Type valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.xmpp.forms.FormField$Type $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/xmpp/forms/FormField$Type;", r0);

        $r2 = (org.xmpp.forms.FormField$Type) $r1;

        return $r2;
    }

    public static org.xmpp.forms.FormField$Type fromXMPP(java.lang.String)
    {
        java.lang.NullPointerException $r36;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        org.xmpp.forms.FormField$Type $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35;
        java.lang.StringBuilder $r22, $r23, $r24;
        java.lang.String $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r25, r37;
        java.lang.IllegalArgumentException $r21;

        r37 := @parameter0: java.lang.String;

        if r37 != null goto label01;

        $r36 = new java.lang.NullPointerException;

        specialinvoke $r36.<java.lang.NullPointerException: void <init>()>();

        throw $r36;

     label01:
        $r0 = virtualinvoke r37.<java.lang.String: java.lang.String toLowerCase()>();

        $r1 = <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type boolean_type>;

        $r2 = virtualinvoke $r1.<org.xmpp.forms.FormField$Type: java.lang.String toXMPP()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label02;

        $r35 = <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type boolean_type>;

        return $r35;

     label02:
        $r3 = <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type fixed>;

        $r4 = virtualinvoke $r3.<org.xmpp.forms.FormField$Type: java.lang.String toXMPP()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z1 == 0 goto label03;

        $r34 = <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type fixed>;

        return $r34;

     label03:
        $r5 = <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type hidden>;

        $r6 = virtualinvoke $r5.<org.xmpp.forms.FormField$Type: java.lang.String toXMPP()>();

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z2 == 0 goto label04;

        $r33 = <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type hidden>;

        return $r33;

     label04:
        $r7 = <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type jid_multi>;

        $r8 = virtualinvoke $r7.<org.xmpp.forms.FormField$Type: java.lang.String toXMPP()>();

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z3 == 0 goto label05;

        $r32 = <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type jid_multi>;

        return $r32;

     label05:
        $r9 = <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type jid_single>;

        $r10 = virtualinvoke $r9.<org.xmpp.forms.FormField$Type: java.lang.String toXMPP()>();

        $z4 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z4 == 0 goto label06;

        $r31 = <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type jid_single>;

        return $r31;

     label06:
        $r11 = <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type list_multi>;

        $r12 = virtualinvoke $r11.<org.xmpp.forms.FormField$Type: java.lang.String toXMPP()>();

        $z5 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z5 == 0 goto label07;

        $r30 = <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type list_multi>;

        return $r30;

     label07:
        $r13 = <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type list_single>;

        $r14 = virtualinvoke $r13.<org.xmpp.forms.FormField$Type: java.lang.String toXMPP()>();

        $z6 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z6 == 0 goto label08;

        $r29 = <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type list_single>;

        return $r29;

     label08:
        $r15 = <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type text_multi>;

        $r16 = virtualinvoke $r15.<org.xmpp.forms.FormField$Type: java.lang.String toXMPP()>();

        $z7 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z7 == 0 goto label09;

        $r28 = <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type text_multi>;

        return $r28;

     label09:
        $r17 = <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type text_private>;

        $r18 = virtualinvoke $r17.<org.xmpp.forms.FormField$Type: java.lang.String toXMPP()>();

        $z8 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z8 == 0 goto label10;

        $r27 = <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type text_private>;

        return $r27;

     label10:
        $r19 = <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type text_single>;

        $r20 = virtualinvoke $r19.<org.xmpp.forms.FormField$Type: java.lang.String toXMPP()>();

        $z9 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z9 == 0 goto label11;

        $r26 = <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type text_single>;

        return $r26;

     label11:
        $r21 = new java.lang.IllegalArgumentException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Type invalid:");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r25);

        throw $r21;
    }

    private void <init>(java.lang.String, int, java.lang.String)
    {
        org.xmpp.forms.FormField$Type r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: org.xmpp.forms.FormField$Type;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<org.xmpp.forms.FormField$Type: java.lang.String value> = r2;

        return;
    }

    public java.lang.String toXMPP()
    {
        java.lang.String $r1;
        org.xmpp.forms.FormField$Type r0;

        r0 := @this: org.xmpp.forms.FormField$Type;

        $r1 = r0.<org.xmpp.forms.FormField$Type: java.lang.String value>;

        return $r1;
    }

    static void <clinit>()
    {
        org.xmpp.forms.FormField$Type $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;
        org.xmpp.forms.FormField$Type[] $r10;

        $r0 = new org.xmpp.forms.FormField$Type;

        specialinvoke $r0.<org.xmpp.forms.FormField$Type: void <init>(java.lang.String,int,java.lang.String)>("boolean_type", 0, "boolean");

        <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type boolean_type> = $r0;

        $r1 = new org.xmpp.forms.FormField$Type;

        specialinvoke $r1.<org.xmpp.forms.FormField$Type: void <init>(java.lang.String,int,java.lang.String)>("fixed", 1, "fixed");

        <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type fixed> = $r1;

        $r2 = new org.xmpp.forms.FormField$Type;

        specialinvoke $r2.<org.xmpp.forms.FormField$Type: void <init>(java.lang.String,int,java.lang.String)>("hidden", 2, "hidden");

        <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type hidden> = $r2;

        $r3 = new org.xmpp.forms.FormField$Type;

        specialinvoke $r3.<org.xmpp.forms.FormField$Type: void <init>(java.lang.String,int,java.lang.String)>("jid_multi", 3, "jid-multi");

        <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type jid_multi> = $r3;

        $r4 = new org.xmpp.forms.FormField$Type;

        specialinvoke $r4.<org.xmpp.forms.FormField$Type: void <init>(java.lang.String,int,java.lang.String)>("jid_single", 4, "jid-single");

        <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type jid_single> = $r4;

        $r5 = new org.xmpp.forms.FormField$Type;

        specialinvoke $r5.<org.xmpp.forms.FormField$Type: void <init>(java.lang.String,int,java.lang.String)>("list_multi", 5, "list-multi");

        <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type list_multi> = $r5;

        $r6 = new org.xmpp.forms.FormField$Type;

        specialinvoke $r6.<org.xmpp.forms.FormField$Type: void <init>(java.lang.String,int,java.lang.String)>("list_single", 6, "list-single");

        <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type list_single> = $r6;

        $r7 = new org.xmpp.forms.FormField$Type;

        specialinvoke $r7.<org.xmpp.forms.FormField$Type: void <init>(java.lang.String,int,java.lang.String)>("text_multi", 7, "text-multi");

        <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type text_multi> = $r7;

        $r8 = new org.xmpp.forms.FormField$Type;

        specialinvoke $r8.<org.xmpp.forms.FormField$Type: void <init>(java.lang.String,int,java.lang.String)>("text_private", 8, "text-private");

        <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type text_private> = $r8;

        $r9 = new org.xmpp.forms.FormField$Type;

        specialinvoke $r9.<org.xmpp.forms.FormField$Type: void <init>(java.lang.String,int,java.lang.String)>("text_single", 9, "text-single");

        <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type text_single> = $r9;

        $r10 = newarray (org.xmpp.forms.FormField$Type)[10];

        $r11 = <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type boolean_type>;

        $r10[0] = $r11;

        $r12 = <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type fixed>;

        $r10[1] = $r12;

        $r13 = <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type hidden>;

        $r10[2] = $r13;

        $r14 = <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type jid_multi>;

        $r10[3] = $r14;

        $r15 = <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type jid_single>;

        $r10[4] = $r15;

        $r16 = <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type list_multi>;

        $r10[5] = $r16;

        $r17 = <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type list_single>;

        $r10[6] = $r17;

        $r18 = <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type text_multi>;

        $r10[7] = $r18;

        $r19 = <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type text_private>;

        $r10[8] = $r19;

        $r20 = <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type text_single>;

        $r10[9] = $r20;

        <org.xmpp.forms.FormField$Type: org.xmpp.forms.FormField$Type[] $VALUES> = $r10;

        return;
    }
}
