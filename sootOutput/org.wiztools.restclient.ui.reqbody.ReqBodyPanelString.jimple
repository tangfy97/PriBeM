class org.wiztools.restclient.ui.reqbody.ReqBodyPanelString extends javax.swing.JPanel implements org.wiztools.restclient.ui.reqbody.ReqBodyPanel, org.wiztools.restclient.ui.FontableEditor
{
    org.wiztools.restclient.ui.RESTView view;
    org.wiztools.restclient.ui.RESTUserInterface rest_ui;
    private org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent jp_content_type_charset;
    private org.wiztools.restclient.ui.reqbody.ParameterDialog jd_req_paramDialog;
    private final org.wiztools.restclient.ui.ScriptEditor se_req_body;
    private javax.swing.JButton jb_body_file;
    private javax.swing.JButton jb_body_params;

    void <init>()
    {
        javax.swing.JButton $r2, $r4;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelString r0;
        javax.swing.ImageIcon $r3, $r5;
        org.wiztools.restclient.ui.ScriptEditor $r1;

        r0 := @this: org.wiztools.restclient.ui.reqbody.ReqBodyPanelString;

        specialinvoke r0.<javax.swing.JPanel: void <init>()>();

        $r1 = staticinvoke <org.wiztools.restclient.ui.ScriptEditorFactory: org.wiztools.restclient.ui.ScriptEditor getXMLScriptEditor()>();

        r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: org.wiztools.restclient.ui.ScriptEditor se_req_body> = $r1;

        $r2 = new javax.swing.JButton;

        $r3 = staticinvoke <org.wiztools.restclient.ui.UIUtil: javax.swing.ImageIcon getIconFromClasspath(java.lang.String)>("org/wiztools/restclient/load_from_file.png");

        specialinvoke $r2.<javax.swing.JButton: void <init>(javax.swing.Icon)>($r3);

        r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: javax.swing.JButton jb_body_file> = $r2;

        $r4 = new javax.swing.JButton;

        $r5 = staticinvoke <org.wiztools.restclient.ui.UIUtil: javax.swing.ImageIcon getIconFromClasspath(java.lang.String)>("org/wiztools/restclient/insert_parameters.png");

        specialinvoke $r4.<javax.swing.JButton: void <init>(javax.swing.Icon)>($r5);

        r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: javax.swing.JButton jb_body_params> = $r4;

        return;
    }

    protected void init()
    {
        org.wiztools.restclient.ui.reqbody.ParameterDialog $r2;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelString r0;
        org.wiztools.restclient.ui.ScriptEditor $r24, $r25, $r28;
        org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent $r6;
        javax.swing.JMenuItem $r18, $r20, $r22;
        java.awt.BorderLayout $r3;
        javax.swing.JComponent $r29;
        java.awt.FlowLayout $r5;
        javax.swing.JButton $r8, $r10, $r11, $r12, $r14, $r15;
        javax.swing.JPopupMenu $r16;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelString$3 $r13;
        javax.swing.JMenu $r17;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelString$4 $r19;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelString$1 $r1;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelString$2 $r9;
        java.awt.Component $r7;
        javax.swing.text.JTextComponent $r26;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelString$7 $r27;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelString$5 $r21;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelString$6 $r23;
        javax.swing.JPanel $r4;

        r0 := @this: org.wiztools.restclient.ui.reqbody.ReqBodyPanelString;

        $r2 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: org.wiztools.restclient.ui.reqbody.ParameterDialog jd_req_paramDialog>;

        $r1 = new org.wiztools.restclient.ui.reqbody.ReqBodyPanelString$1;

        specialinvoke $r1.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString$1: void <init>(org.wiztools.restclient.ui.reqbody.ReqBodyPanelString)>(r0);

        virtualinvoke $r2.<org.wiztools.restclient.ui.reqbody.ParameterDialog: void addParameterGenerationListener(org.wiztools.restclient.ui.reqbody.ParameterGenerationListener)>($r1);

        $r3 = new java.awt.BorderLayout;

        specialinvoke $r3.<java.awt.BorderLayout: void <init>()>();

        virtualinvoke r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: void setLayout(java.awt.LayoutManager)>($r3);

        $r4 = new javax.swing.JPanel;

        $r5 = new java.awt.FlowLayout;

        specialinvoke $r5.<java.awt.FlowLayout: void <init>(int)>(0);

        specialinvoke $r4.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($r5);

        $r6 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent jp_content_type_charset>;

        $r7 = interfaceinvoke $r6.<org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent: java.awt.Component getComponent()>();

        virtualinvoke $r4.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r7);

        $r8 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: javax.swing.JButton jb_body_file>;

        virtualinvoke $r8.<javax.swing.JButton: void setToolTipText(java.lang.String)>("Load from file");

        $r10 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: javax.swing.JButton jb_body_file>;

        $r9 = new org.wiztools.restclient.ui.reqbody.ReqBodyPanelString$2;

        specialinvoke $r9.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString$2: void <init>(org.wiztools.restclient.ui.reqbody.ReqBodyPanelString)>(r0);

        virtualinvoke $r10.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r9);

        $r11 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: javax.swing.JButton jb_body_file>;

        virtualinvoke $r4.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r11);

        $r12 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: javax.swing.JButton jb_body_params>;

        virtualinvoke $r12.<javax.swing.JButton: void setToolTipText(java.lang.String)>("Insert parameters");

        $r14 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: javax.swing.JButton jb_body_params>;

        $r13 = new org.wiztools.restclient.ui.reqbody.ReqBodyPanelString$3;

        specialinvoke $r13.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString$3: void <init>(org.wiztools.restclient.ui.reqbody.ReqBodyPanelString)>(r0);

        virtualinvoke $r14.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r13);

        $r15 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: javax.swing.JButton jb_body_params>;

        virtualinvoke $r4.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r15);

        virtualinvoke r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: void add(java.awt.Component,java.lang.Object)>($r4, "North");

        $r16 = new javax.swing.JPopupMenu;

        specialinvoke $r16.<javax.swing.JPopupMenu: void <init>()>();

        $r17 = new javax.swing.JMenu;

        specialinvoke $r17.<javax.swing.JMenu: void <init>(java.lang.String)>("Syntax Color");

        $r18 = new javax.swing.JMenuItem;

        specialinvoke $r18.<javax.swing.JMenuItem: void <init>(java.lang.String)>("None");

        $r19 = new org.wiztools.restclient.ui.reqbody.ReqBodyPanelString$4;

        specialinvoke $r19.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString$4: void <init>(org.wiztools.restclient.ui.reqbody.ReqBodyPanelString)>(r0);

        virtualinvoke $r18.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>($r19);

        virtualinvoke $r17.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r18);

        $r20 = new javax.swing.JMenuItem;

        specialinvoke $r20.<javax.swing.JMenuItem: void <init>(java.lang.String)>("XML");

        $r21 = new org.wiztools.restclient.ui.reqbody.ReqBodyPanelString$5;

        specialinvoke $r21.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString$5: void <init>(org.wiztools.restclient.ui.reqbody.ReqBodyPanelString)>(r0);

        virtualinvoke $r20.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>($r21);

        virtualinvoke $r17.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r20);

        $r22 = new javax.swing.JMenuItem;

        specialinvoke $r22.<javax.swing.JMenuItem: void <init>(java.lang.String)>("JSON");

        $r23 = new org.wiztools.restclient.ui.reqbody.ReqBodyPanelString$6;

        specialinvoke $r23.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString$6: void <init>(org.wiztools.restclient.ui.reqbody.ReqBodyPanelString)>(r0);

        virtualinvoke $r22.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>($r23);

        virtualinvoke $r17.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r22);

        virtualinvoke $r16.<javax.swing.JPopupMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>($r17);

        $r24 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: org.wiztools.restclient.ui.ScriptEditor se_req_body>;

        interfaceinvoke $r24.<org.wiztools.restclient.ui.ScriptEditor: void setPopupMenu(javax.swing.JPopupMenu)>($r16);

        $r25 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: org.wiztools.restclient.ui.ScriptEditor se_req_body>;

        $r26 = interfaceinvoke $r25.<org.wiztools.restclient.ui.ScriptEditor: javax.swing.text.JTextComponent getEditorComponent()>();

        $r27 = new org.wiztools.restclient.ui.reqbody.ReqBodyPanelString$7;

        specialinvoke $r27.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString$7: void <init>(org.wiztools.restclient.ui.reqbody.ReqBodyPanelString,javax.swing.JPopupMenu)>(r0, $r16);

        virtualinvoke $r26.<javax.swing.text.JTextComponent: void addMouseListener(java.awt.event.MouseListener)>($r27);

        $r28 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: org.wiztools.restclient.ui.ScriptEditor se_req_body>;

        $r29 = interfaceinvoke $r28.<org.wiztools.restclient.ui.ScriptEditor: javax.swing.JComponent getEditorView()>();

        virtualinvoke r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: void add(java.awt.Component,java.lang.Object)>($r29, "Center");

        return;
    }

    private void loadFile()
    {
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelString r0;
        org.wiztools.restclient.ui.RESTUserInterface $r2, $r8, $r16;
        org.wiztools.restclient.ui.ScriptEditor $r6, $r7;
        java.nio.charset.Charset $r4;
        org.wiztools.restclient.ui.FileChooserType $r1;
        java.lang.String $r5, $r12, $r14, $r20, $r22;
        javax.swing.JFrame $r9, $r17;
        boolean $z0;
        java.io.IOException $r15;
        java.io.File $r3;
        java.lang.StringBuilder $r10, $r11, $r13, $r18, $r19, $r21;

        r0 := @this: org.wiztools.restclient.ui.reqbody.ReqBodyPanelString;

        $r2 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: org.wiztools.restclient.ui.RESTUserInterface rest_ui>;

        $r1 = <org.wiztools.restclient.ui.FileChooserType: org.wiztools.restclient.ui.FileChooserType OPEN_REQUEST_BODY>;

        $r3 = interfaceinvoke $r2.<org.wiztools.restclient.ui.RESTUserInterface: java.io.File getOpenFile(org.wiztools.restclient.ui.FileChooserType)>($r1);

        if $r3 != null goto label1;

        return;

     label1:
        $z0 = virtualinvoke $r3.<java.io.File: boolean canRead()>();

        if $z0 != 0 goto label2;

        $r8 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: org.wiztools.restclient.ui.RESTUserInterface rest_ui>;

        $r9 = interfaceinvoke $r8.<org.wiztools.restclient.ui.RESTUserInterface: javax.swing.JFrame getFrame()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File not readable: ");

        $r12 = virtualinvoke $r3.<java.io.File: java.lang.String getAbsolutePath()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>($r9, $r14, "IO Error", 0);

        return;

     label2:
        $r4 = <org.wiztools.commons.Charsets: java.nio.charset.Charset UTF_8>;

        $r5 = staticinvoke <org.wiztools.commons.FileUtil: java.lang.String getContentAsString(java.io.File,java.nio.charset.Charset)>($r3, $r4);

        $r6 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: org.wiztools.restclient.ui.ScriptEditor se_req_body>;

        interfaceinvoke $r6.<org.wiztools.restclient.ui.ScriptEditor: void setText(java.lang.String)>($r5);

        $r7 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: org.wiztools.restclient.ui.ScriptEditor se_req_body>;

        interfaceinvoke $r7.<org.wiztools.restclient.ui.ScriptEditor: void setCaretPosition(int)>(0);

     label3:
        goto label5;

     label4:
        $r15 := @caughtexception;

        $r16 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: org.wiztools.restclient.ui.RESTUserInterface rest_ui>;

        $r17 = interfaceinvoke $r16.<org.wiztools.restclient.ui.RESTUserInterface: javax.swing.JFrame getFrame()>();

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IO Error: ");

        $r20 = virtualinvoke $r15.<java.io.IOException: java.lang.String getMessage()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>($r17, $r22, "IO Error", 0);

     label5:
        return;

        catch java.io.IOException from label2 to label3 with label4;
    }

    private boolean canSetReqBodyText()
    {
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelString r0;
        org.wiztools.restclient.ui.RESTUserInterface $r3;
        int $i0;
        org.wiztools.restclient.ui.ScriptEditor $r1;
        java.lang.String $r2;
        javax.swing.JFrame $r4;
        boolean $z0;

        r0 := @this: org.wiztools.restclient.ui.reqbody.ReqBodyPanelString;

        $r1 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: org.wiztools.restclient.ui.ScriptEditor se_req_body>;

        $r2 = interfaceinvoke $r1.<org.wiztools.restclient.ui.ScriptEditor: java.lang.String getText()>();

        $z0 = staticinvoke <org.wiztools.commons.StringUtil: boolean isEmpty(java.lang.String)>($r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r3 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: org.wiztools.restclient.ui.RESTUserInterface rest_ui>;

        $r4 = interfaceinvoke $r3.<org.wiztools.restclient.ui.RESTUserInterface: javax.swing.JFrame getFrame()>();

        $i0 = staticinvoke <javax.swing.JOptionPane: int showConfirmDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>($r4, "Body text exists. Erase?", "Erase?", 0);

        if $i0 != 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private void checkAndSetParameterContentType()
    {
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelString r0;
        org.wiztools.restclient.ui.RESTUserInterface $r4;
        org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent $r1, $r17;
        java.nio.charset.Charset $r11;
        int $i0;
        java.lang.String $r15;
        javax.swing.JFrame $r5;
        boolean $z0;
        java.lang.StringBuilder $r6, $r7, $r9, $r10, $r12, $r13, $r14;
        org.wiztools.restclient.bean.ContentType $r2, $r3, $r8, $r16;

        r0 := @this: org.wiztools.restclient.ui.reqbody.ReqBodyPanelString;

        $r2 = <org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: org.wiztools.restclient.bean.ContentType PARAM_CONTENT_TYPE>;

        $r1 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent jp_content_type_charset>;

        $r3 = interfaceinvoke $r1.<org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent: org.wiztools.restclient.bean.ContentType getContentType()>();

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r4 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: org.wiztools.restclient.ui.RESTUserInterface rest_ui>;

        $r5 = interfaceinvoke $r4.<org.wiztools.restclient.ui.RESTUserInterface: javax.swing.JFrame getFrame()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<html>For parameter the Content-type and Charset needs <br>to be `");

        $r8 = <org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: org.wiztools.restclient.bean.ContentType PARAM_CONTENT_TYPE>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' and `");

        $r11 = <org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: java.nio.charset.Charset PARAM_CHARSET>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' respectively.<br>");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Do you want to set this option?</html>");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = staticinvoke <javax.swing.JOptionPane: int showConfirmDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>($r5, $r15, "Parameter Content-type and Charset", 0);

        if $i0 != 0 goto label1;

        $r17 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent jp_content_type_charset>;

        $r16 = <org.wiztools.restclient.ui.reqbody.BodyContentTypeDialog: org.wiztools.restclient.bean.ContentType PARAM_CONTENT_TYPE>;

        interfaceinvoke $r17.<org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent: void setContentTypeCharset(org.wiztools.restclient.bean.ContentType)>($r16);

     label1:
        return;
    }

    public void enableBody()
    {
        org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent $r1;
        javax.swing.JButton $r2, $r3;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelString r0;
        org.wiztools.restclient.ui.ScriptEditor $r4;

        r0 := @this: org.wiztools.restclient.ui.reqbody.ReqBodyPanelString;

        $r1 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent jp_content_type_charset>;

        interfaceinvoke $r1.<org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent: void enableComponent()>();

        $r2 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: javax.swing.JButton jb_body_file>;

        virtualinvoke $r2.<javax.swing.JButton: void setEnabled(boolean)>(1);

        $r3 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: javax.swing.JButton jb_body_params>;

        virtualinvoke $r3.<javax.swing.JButton: void setEnabled(boolean)>(1);

        $r4 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: org.wiztools.restclient.ui.ScriptEditor se_req_body>;

        interfaceinvoke $r4.<org.wiztools.restclient.ui.ScriptEditor: void setEnabled(boolean)>(1);

        return;
    }

    public void disableBody()
    {
        org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent $r1;
        javax.swing.JButton $r2, $r3;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelString r0;
        org.wiztools.restclient.ui.ScriptEditor $r4;

        r0 := @this: org.wiztools.restclient.ui.reqbody.ReqBodyPanelString;

        $r1 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent jp_content_type_charset>;

        interfaceinvoke $r1.<org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent: void disableComponent()>();

        $r2 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: javax.swing.JButton jb_body_file>;

        virtualinvoke $r2.<javax.swing.JButton: void setEnabled(boolean)>(0);

        $r3 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: javax.swing.JButton jb_body_params>;

        virtualinvoke $r3.<javax.swing.JButton: void setEnabled(boolean)>(0);

        $r4 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: org.wiztools.restclient.ui.ScriptEditor se_req_body>;

        interfaceinvoke $r4.<org.wiztools.restclient.ui.ScriptEditor: void setEnabled(boolean)>(0);

        return;
    }

    public void clear()
    {
        org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent $r1;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelString r0;

        r0 := @this: org.wiztools.restclient.ui.reqbody.ReqBodyPanelString;

        $r1 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent jp_content_type_charset>;

        interfaceinvoke $r1.<org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent: void clear()>();

        return;
    }

    public void setEntity(org.wiztools.restclient.bean.ReqEntity)
    {
        org.wiztools.restclient.bean.ReqEntityString r1;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelString r2;
        org.wiztools.restclient.ui.ScriptEditor $r5;
        org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent $r3;
        org.wiztools.restclient.bean.ReqEntity r0;
        org.wiztools.restclient.bean.ContentType $r4;
        java.lang.String $r6;
        boolean $z0;

        r2 := @this: org.wiztools.restclient.ui.reqbody.ReqBodyPanelString;

        r0 := @parameter0: org.wiztools.restclient.bean.ReqEntity;

        $z0 = r0 instanceof org.wiztools.restclient.bean.ReqEntityString;

        if $z0 == 0 goto label1;

        r1 = (org.wiztools.restclient.bean.ReqEntityString) r0;

        $r3 = r2.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent jp_content_type_charset>;

        $r4 = interfaceinvoke r1.<org.wiztools.restclient.bean.ReqEntityString: org.wiztools.restclient.bean.ContentType getContentType()>();

        interfaceinvoke $r3.<org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent: void setContentTypeCharset(org.wiztools.restclient.bean.ContentType)>($r4);

        $r5 = r2.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: org.wiztools.restclient.ui.ScriptEditor se_req_body>;

        $r6 = interfaceinvoke r1.<org.wiztools.restclient.bean.ReqEntityString: java.lang.String getBody()>();

        interfaceinvoke $r5.<org.wiztools.restclient.ui.ScriptEditor: void setText(java.lang.String)>($r6);

     label1:
        return;
    }

    public org.wiztools.restclient.bean.ReqEntity getEntity()
    {
        org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent $r4;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelString r0;
        org.wiztools.restclient.ui.ScriptEditor $r1;
        org.wiztools.restclient.bean.ReqEntityStringBean $r3;
        java.lang.String $r2;
        org.wiztools.restclient.bean.ContentType $r5;

        r0 := @this: org.wiztools.restclient.ui.reqbody.ReqBodyPanelString;

        $r1 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: org.wiztools.restclient.ui.ScriptEditor se_req_body>;

        $r2 = interfaceinvoke $r1.<org.wiztools.restclient.ui.ScriptEditor: java.lang.String getText()>();

        $r3 = new org.wiztools.restclient.bean.ReqEntityStringBean;

        $r4 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent jp_content_type_charset>;

        $r5 = interfaceinvoke $r4.<org.wiztools.restclient.ui.reqbody.ContentTypeCharsetComponent: org.wiztools.restclient.bean.ContentType getContentType()>();

        specialinvoke $r3.<org.wiztools.restclient.bean.ReqEntityStringBean: void <init>(java.lang.String,org.wiztools.restclient.bean.ContentType)>($r2, $r5);

        return $r3;
    }

    public void requestFocus()
    {
        org.wiztools.restclient.ui.ScriptEditor $r1;
        javax.swing.text.JTextComponent $r2;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelString r0;

        r0 := @this: org.wiztools.restclient.ui.reqbody.ReqBodyPanelString;

        $r1 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: org.wiztools.restclient.ui.ScriptEditor se_req_body>;

        $r2 = interfaceinvoke $r1.<org.wiztools.restclient.ui.ScriptEditor: javax.swing.text.JTextComponent getEditorComponent()>();

        virtualinvoke $r2.<javax.swing.text.JTextComponent: void requestFocus()>();

        return;
    }

    public void setEditorFont(java.awt.Font)
    {
        java.awt.Font r3;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelString r0;
        org.wiztools.restclient.ui.ScriptEditor $r1;
        javax.swing.text.JTextComponent $r2;

        r0 := @this: org.wiztools.restclient.ui.reqbody.ReqBodyPanelString;

        r3 := @parameter0: java.awt.Font;

        $r1 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: org.wiztools.restclient.ui.ScriptEditor se_req_body>;

        $r2 = interfaceinvoke $r1.<org.wiztools.restclient.ui.ScriptEditor: javax.swing.text.JTextComponent getEditorComponent()>();

        virtualinvoke $r2.<javax.swing.text.JTextComponent: void setFont(java.awt.Font)>(r3);

        return;
    }

    public java.awt.Font getEditorFont()
    {
        java.awt.Font $r3;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelString r0;
        org.wiztools.restclient.ui.ScriptEditor $r1;
        javax.swing.text.JTextComponent $r2;

        r0 := @this: org.wiztools.restclient.ui.reqbody.ReqBodyPanelString;

        $r1 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: org.wiztools.restclient.ui.ScriptEditor se_req_body>;

        $r2 = interfaceinvoke $r1.<org.wiztools.restclient.ui.ScriptEditor: javax.swing.text.JTextComponent getEditorComponent()>();

        $r3 = virtualinvoke $r2.<javax.swing.text.JTextComponent: java.awt.Font getFont()>();

        return $r3;
    }

    public java.awt.Component getComponent()
    {
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelString r0;

        r0 := @this: org.wiztools.restclient.ui.reqbody.ReqBodyPanelString;

        return r0;
    }

    static org.wiztools.restclient.ui.ScriptEditor access$000(org.wiztools.restclient.ui.reqbody.ReqBodyPanelString)
    {
        org.wiztools.restclient.ui.ScriptEditor $r1;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelString r0;

        r0 := @parameter0: org.wiztools.restclient.ui.reqbody.ReqBodyPanelString;

        $r1 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: org.wiztools.restclient.ui.ScriptEditor se_req_body>;

        return $r1;
    }

    static void access$100(org.wiztools.restclient.ui.reqbody.ReqBodyPanelString)
    {
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelString r0;

        r0 := @parameter0: org.wiztools.restclient.ui.reqbody.ReqBodyPanelString;

        specialinvoke r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: void loadFile()>();

        return;
    }

    static boolean access$200(org.wiztools.restclient.ui.reqbody.ReqBodyPanelString)
    {
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelString r0;
        boolean $z0;

        r0 := @parameter0: org.wiztools.restclient.ui.reqbody.ReqBodyPanelString;

        $z0 = specialinvoke r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: boolean canSetReqBodyText()>();

        return $z0;
    }

    static void access$300(org.wiztools.restclient.ui.reqbody.ReqBodyPanelString)
    {
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelString r0;

        r0 := @parameter0: org.wiztools.restclient.ui.reqbody.ReqBodyPanelString;

        specialinvoke r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: void checkAndSetParameterContentType()>();

        return;
    }

    static org.wiztools.restclient.ui.reqbody.ParameterDialog access$400(org.wiztools.restclient.ui.reqbody.ReqBodyPanelString)
    {
        org.wiztools.restclient.ui.reqbody.ParameterDialog $r1;
        org.wiztools.restclient.ui.reqbody.ReqBodyPanelString r0;

        r0 := @parameter0: org.wiztools.restclient.ui.reqbody.ReqBodyPanelString;

        $r1 = r0.<org.wiztools.restclient.ui.reqbody.ReqBodyPanelString: org.wiztools.restclient.ui.reqbody.ParameterDialog jd_req_paramDialog>;

        return $r1;
    }
}
